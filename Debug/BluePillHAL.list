
BluePillHAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000512c  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001ec  0800523c  0800523c  0001523c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005428  08005428  00020140  2**0
                  CONTENTS
  4 .ARM          00000000  08005428  08005428  00020140  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005428  08005428  00020140  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005428  08005428  00015428  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800542c  0800542c  0001542c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000140  20000000  08005430  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000014cc  20000140  08005570  00020140  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000160c  08005570  0002160c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020140  2**0
                  CONTENTS, READONLY
 12 .debug_info   00012c57  00000000  00000000  00020169  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002e37  00000000  00000000  00032dc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001108  00000000  00000000  00035bf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000fc0  00000000  00000000  00036d00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019cb5  00000000  00000000  00037cc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00010cde  00000000  00000000  00051975  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00093b69  00000000  00000000  00062653  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f61bc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000521c  00000000  00000000  000f6210  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         00000024  00000000  00000000  000fb42c  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      0000004e  00000000  00000000  000fb450  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000140 	.word	0x20000140
 800012c:	00000000 	.word	0x00000000
 8000130:	08005224 	.word	0x08005224

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000144 	.word	0x20000144
 800014c:	08005224 	.word	0x08005224

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <vApplicationGetIdleTaskMemory>:
 8000160:	b480      	push	{r7}
 8000162:	b085      	sub	sp, #20
 8000164:	af00      	add	r7, sp, #0
 8000166:	60f8      	str	r0, [r7, #12]
 8000168:	60b9      	str	r1, [r7, #8]
 800016a:	607a      	str	r2, [r7, #4]
 800016c:	68fb      	ldr	r3, [r7, #12]
 800016e:	4a06      	ldr	r2, [pc, #24]	; (8000188 <vApplicationGetIdleTaskMemory+0x28>)
 8000170:	601a      	str	r2, [r3, #0]
 8000172:	68bb      	ldr	r3, [r7, #8]
 8000174:	4a05      	ldr	r2, [pc, #20]	; (800018c <vApplicationGetIdleTaskMemory+0x2c>)
 8000176:	601a      	str	r2, [r3, #0]
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	2280      	movs	r2, #128	; 0x80
 800017c:	601a      	str	r2, [r3, #0]
 800017e:	bf00      	nop
 8000180:	3714      	adds	r7, #20
 8000182:	46bd      	mov	sp, r7
 8000184:	bc80      	pop	{r7}
 8000186:	4770      	bx	lr
 8000188:	2000015c 	.word	0x2000015c
 800018c:	200001b0 	.word	0x200001b0

08000190 <SARA_Init>:
	HAL_UART_Receive(&huart1, msg, 60, 10)

}*/


void SARA_Init() {
 8000190:	b580      	push	{r7, lr}
 8000192:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARApause, strlen(SARApause), 50);
 8000194:	482b      	ldr	r0, [pc, #172]	; (8000244 <SARA_Init+0xb4>)
 8000196:	f7ff ffdb 	bl	8000150 <strlen>
 800019a:	4603      	mov	r3, r0
 800019c:	b29a      	uxth	r2, r3
 800019e:	2332      	movs	r3, #50	; 0x32
 80001a0:	4928      	ldr	r1, [pc, #160]	; (8000244 <SARA_Init+0xb4>)
 80001a2:	4829      	ldr	r0, [pc, #164]	; (8000248 <SARA_Init+0xb8>)
 80001a4:	f002 f9d5 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001a8:	2364      	movs	r3, #100	; 0x64
 80001aa:	2280      	movs	r2, #128	; 0x80
 80001ac:	4927      	ldr	r1, [pc, #156]	; (800024c <SARA_Init+0xbc>)
 80001ae:	4826      	ldr	r0, [pc, #152]	; (8000248 <SARA_Init+0xb8>)
 80001b0:	f002 fa61 	bl	8002676 <HAL_UART_Receive>
	osDelay(500);
 80001b4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001b8:	f002 fc3e 	bl	8002a38 <osDelay>
	HAL_UART_Transmit(&huart1, SARAumnoprof, strlen(SARAumnoprof), 50);
 80001bc:	4824      	ldr	r0, [pc, #144]	; (8000250 <SARA_Init+0xc0>)
 80001be:	f7ff ffc7 	bl	8000150 <strlen>
 80001c2:	4603      	mov	r3, r0
 80001c4:	b29a      	uxth	r2, r3
 80001c6:	2332      	movs	r3, #50	; 0x32
 80001c8:	4921      	ldr	r1, [pc, #132]	; (8000250 <SARA_Init+0xc0>)
 80001ca:	481f      	ldr	r0, [pc, #124]	; (8000248 <SARA_Init+0xb8>)
 80001cc:	f002 f9c1 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001d0:	2364      	movs	r3, #100	; 0x64
 80001d2:	2280      	movs	r2, #128	; 0x80
 80001d4:	491d      	ldr	r1, [pc, #116]	; (800024c <SARA_Init+0xbc>)
 80001d6:	481c      	ldr	r0, [pc, #112]	; (8000248 <SARA_Init+0xb8>)
 80001d8:	f002 fa4d 	bl	8002676 <HAL_UART_Receive>
	osDelay(500);
 80001dc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001e0:	f002 fc2a 	bl	8002a38 <osDelay>
	//HAL_UART_Transmit(&huart1, cereg, strlen(cereg), 10);
	//osDelay(250);
	HAL_UART_Transmit(&huart1, SARAcops, strlen(SARAcops), 50);
 80001e4:	481b      	ldr	r0, [pc, #108]	; (8000254 <SARA_Init+0xc4>)
 80001e6:	f7ff ffb3 	bl	8000150 <strlen>
 80001ea:	4603      	mov	r3, r0
 80001ec:	b29a      	uxth	r2, r3
 80001ee:	2332      	movs	r3, #50	; 0x32
 80001f0:	4918      	ldr	r1, [pc, #96]	; (8000254 <SARA_Init+0xc4>)
 80001f2:	4815      	ldr	r0, [pc, #84]	; (8000248 <SARA_Init+0xb8>)
 80001f4:	f002 f9ad 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001f8:	2364      	movs	r3, #100	; 0x64
 80001fa:	2280      	movs	r2, #128	; 0x80
 80001fc:	4913      	ldr	r1, [pc, #76]	; (800024c <SARA_Init+0xbc>)
 80001fe:	4812      	ldr	r0, [pc, #72]	; (8000248 <SARA_Init+0xb8>)
 8000200:	f002 fa39 	bl	8002676 <HAL_UART_Receive>
	osDelay(500);
 8000204:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000208:	f002 fc16 	bl	8002a38 <osDelay>
	HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 50);
 800020c:	4812      	ldr	r0, [pc, #72]	; (8000258 <SARA_Init+0xc8>)
 800020e:	f7ff ff9f 	bl	8000150 <strlen>
 8000212:	4603      	mov	r3, r0
 8000214:	b29a      	uxth	r2, r3
 8000216:	2332      	movs	r3, #50	; 0x32
 8000218:	490f      	ldr	r1, [pc, #60]	; (8000258 <SARA_Init+0xc8>)
 800021a:	480b      	ldr	r0, [pc, #44]	; (8000248 <SARA_Init+0xb8>)
 800021c:	f002 f999 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000220:	2364      	movs	r3, #100	; 0x64
 8000222:	2280      	movs	r2, #128	; 0x80
 8000224:	4909      	ldr	r1, [pc, #36]	; (800024c <SARA_Init+0xbc>)
 8000226:	4808      	ldr	r0, [pc, #32]	; (8000248 <SARA_Init+0xb8>)
 8000228:	f002 fa25 	bl	8002676 <HAL_UART_Receive>
	osDelay(500);
 800022c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000230:	f002 fc02 	bl	8002a38 <osDelay>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000234:	2364      	movs	r3, #100	; 0x64
 8000236:	2280      	movs	r2, #128	; 0x80
 8000238:	4904      	ldr	r1, [pc, #16]	; (800024c <SARA_Init+0xbc>)
 800023a:	4803      	ldr	r0, [pc, #12]	; (8000248 <SARA_Init+0xb8>)
 800023c:	f002 fa1b 	bl	8002676 <HAL_UART_Receive>

}
 8000240:	bf00      	nop
 8000242:	bd80      	pop	{r7, pc}
 8000244:	20000000 	.word	0x20000000
 8000248:	200012a8 	.word	0x200012a8
 800024c:	200011d8 	.word	0x200011d8
 8000250:	20000008 	.word	0x20000008
 8000254:	2000001c 	.word	0x2000001c
 8000258:	2000002c 	.word	0x2000002c

0800025c <nemeus_Power_Cycle>:

void nemeus_Power_Cycle() {
 800025c:	b580      	push	{r7, lr}
 800025e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8000260:	2200      	movs	r2, #0
 8000262:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000266:	4832      	ldr	r0, [pc, #200]	; (8000330 <nemeus_Power_Cycle+0xd4>)
 8000268:	f001 fa60 	bl	800172c <HAL_GPIO_WritePin>
    osDelay(1500);
 800026c:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8000270:	f002 fbe2 	bl	8002a38 <osDelay>
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000274:	2201      	movs	r2, #1
 8000276:	f44f 7180 	mov.w	r1, #256	; 0x100
 800027a:	482d      	ldr	r0, [pc, #180]	; (8000330 <nemeus_Power_Cycle+0xd4>)
 800027c:	f001 fa56 	bl	800172c <HAL_GPIO_WritePin>
	//osDelay(150);
    HAL_UART_Receive(&huart3, trash, 128, 150);
 8000280:	2396      	movs	r3, #150	; 0x96
 8000282:	2280      	movs	r2, #128	; 0x80
 8000284:	492b      	ldr	r1, [pc, #172]	; (8000334 <nemeus_Power_Cycle+0xd8>)
 8000286:	482c      	ldr	r0, [pc, #176]	; (8000338 <nemeus_Power_Cycle+0xdc>)
 8000288:	f002 f9f5 	bl	8002676 <HAL_UART_Receive>

	HAL_UART_Transmit(&huart3, syncLora, strlen(syncLora), 10);
 800028c:	482b      	ldr	r0, [pc, #172]	; (800033c <nemeus_Power_Cycle+0xe0>)
 800028e:	f7ff ff5f 	bl	8000150 <strlen>
 8000292:	4603      	mov	r3, r0
 8000294:	b29a      	uxth	r2, r3
 8000296:	230a      	movs	r3, #10
 8000298:	4928      	ldr	r1, [pc, #160]	; (800033c <nemeus_Power_Cycle+0xe0>)
 800029a:	4827      	ldr	r0, [pc, #156]	; (8000338 <nemeus_Power_Cycle+0xdc>)
 800029c:	f002 f959 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002a0:	2364      	movs	r3, #100	; 0x64
 80002a2:	2280      	movs	r2, #128	; 0x80
 80002a4:	4923      	ldr	r1, [pc, #140]	; (8000334 <nemeus_Power_Cycle+0xd8>)
 80002a6:	4824      	ldr	r0, [pc, #144]	; (8000338 <nemeus_Power_Cycle+0xdc>)
 80002a8:	f002 f9e5 	bl	8002676 <HAL_UART_Receive>
	osDelay(500);
 80002ac:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80002b0:	f002 fbc2 	bl	8002a38 <osDelay>

	HAL_UART_Transmit(&huart3, beginLora, strlen(beginLora), 10);
 80002b4:	4822      	ldr	r0, [pc, #136]	; (8000340 <nemeus_Power_Cycle+0xe4>)
 80002b6:	f7ff ff4b 	bl	8000150 <strlen>
 80002ba:	4603      	mov	r3, r0
 80002bc:	b29a      	uxth	r2, r3
 80002be:	230a      	movs	r3, #10
 80002c0:	491f      	ldr	r1, [pc, #124]	; (8000340 <nemeus_Power_Cycle+0xe4>)
 80002c2:	481d      	ldr	r0, [pc, #116]	; (8000338 <nemeus_Power_Cycle+0xdc>)
 80002c4:	f002 f945 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002c8:	2364      	movs	r3, #100	; 0x64
 80002ca:	2280      	movs	r2, #128	; 0x80
 80002cc:	4919      	ldr	r1, [pc, #100]	; (8000334 <nemeus_Power_Cycle+0xd8>)
 80002ce:	481a      	ldr	r0, [pc, #104]	; (8000338 <nemeus_Power_Cycle+0xdc>)
 80002d0:	f002 f9d1 	bl	8002676 <HAL_UART_Receive>
	//osDelay(1500);
	memset(trash, '\0', 128);
 80002d4:	2280      	movs	r2, #128	; 0x80
 80002d6:	2100      	movs	r1, #0
 80002d8:	4816      	ldr	r0, [pc, #88]	; (8000334 <nemeus_Power_Cycle+0xd8>)
 80002da:	f003 fd51 	bl	8003d80 <memset>
	//HAL_UART_Receive(&huart3, trash, 128, 4000);
	HAL_UART_Receive(&huart3, trash, 10, 40000);
 80002de:	f649 4340 	movw	r3, #40000	; 0x9c40
 80002e2:	220a      	movs	r2, #10
 80002e4:	4913      	ldr	r1, [pc, #76]	; (8000334 <nemeus_Power_Cycle+0xd8>)
 80002e6:	4814      	ldr	r0, [pc, #80]	; (8000338 <nemeus_Power_Cycle+0xdc>)
 80002e8:	f002 f9c5 	bl	8002676 <HAL_UART_Receive>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002ec:	2364      	movs	r3, #100	; 0x64
 80002ee:	2280      	movs	r2, #128	; 0x80
 80002f0:	4910      	ldr	r1, [pc, #64]	; (8000334 <nemeus_Power_Cycle+0xd8>)
 80002f2:	4811      	ldr	r0, [pc, #68]	; (8000338 <nemeus_Power_Cycle+0xdc>)
 80002f4:	f002 f9bf 	bl	8002676 <HAL_UART_Receive>

	HAL_UART_Transmit(&huart3, beginSigfox, strlen(beginSigfox), 10);
 80002f8:	4812      	ldr	r0, [pc, #72]	; (8000344 <nemeus_Power_Cycle+0xe8>)
 80002fa:	f7ff ff29 	bl	8000150 <strlen>
 80002fe:	4603      	mov	r3, r0
 8000300:	b29a      	uxth	r2, r3
 8000302:	230a      	movs	r3, #10
 8000304:	490f      	ldr	r1, [pc, #60]	; (8000344 <nemeus_Power_Cycle+0xe8>)
 8000306:	480c      	ldr	r0, [pc, #48]	; (8000338 <nemeus_Power_Cycle+0xdc>)
 8000308:	f002 f923 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800030c:	2364      	movs	r3, #100	; 0x64
 800030e:	2280      	movs	r2, #128	; 0x80
 8000310:	4908      	ldr	r1, [pc, #32]	; (8000334 <nemeus_Power_Cycle+0xd8>)
 8000312:	4809      	ldr	r0, [pc, #36]	; (8000338 <nemeus_Power_Cycle+0xdc>)
 8000314:	f002 f9af 	bl	8002676 <HAL_UART_Receive>
	osDelay(50);
 8000318:	2032      	movs	r0, #50	; 0x32
 800031a:	f002 fb8d 	bl	8002a38 <osDelay>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800031e:	2364      	movs	r3, #100	; 0x64
 8000320:	2280      	movs	r2, #128	; 0x80
 8000322:	4904      	ldr	r1, [pc, #16]	; (8000334 <nemeus_Power_Cycle+0xd8>)
 8000324:	4804      	ldr	r0, [pc, #16]	; (8000338 <nemeus_Power_Cycle+0xdc>)
 8000326:	f002 f9a6 	bl	8002676 <HAL_UART_Receive>


}
 800032a:	bf00      	nop
 800032c:	bd80      	pop	{r7, pc}
 800032e:	bf00      	nop
 8000330:	40010800 	.word	0x40010800
 8000334:	200011d8 	.word	0x200011d8
 8000338:	20001190 	.word	0x20001190
 800033c:	20000078 	.word	0x20000078
 8000340:	20000084 	.word	0x20000084
 8000344:	200000a8 	.word	0x200000a8

08000348 <SARA_ChangeTech>:
	HAL_UART_Receive(&huart1, SARAresult, 128, 100);
}



void SARA_ChangeTech(uint8_t tech){ //tech should be 9 for NB
 8000348:	b580      	push	{r7, lr}
 800034a:	b084      	sub	sp, #16
 800034c:	af00      	add	r7, sp, #0
 800034e:	4603      	mov	r3, r0
 8000350:	71fb      	strb	r3, [r7, #7]

	if(tech == '7'){ //LTE-M
 8000352:	79fb      	ldrb	r3, [r7, #7]
 8000354:	2b37      	cmp	r3, #55	; 0x37
 8000356:	d10a      	bne.n	800036e <SARA_ChangeTech+0x26>
		HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 10);
 8000358:	481a      	ldr	r0, [pc, #104]	; (80003c4 <SARA_ChangeTech+0x7c>)
 800035a:	f7ff fef9 	bl	8000150 <strlen>
 800035e:	4603      	mov	r3, r0
 8000360:	b29a      	uxth	r2, r3
 8000362:	230a      	movs	r3, #10
 8000364:	4917      	ldr	r1, [pc, #92]	; (80003c4 <SARA_ChangeTech+0x7c>)
 8000366:	4818      	ldr	r0, [pc, #96]	; (80003c8 <SARA_ChangeTech+0x80>)
 8000368:	f002 f8f3 	bl	8002552 <HAL_UART_Transmit>
 800036c:	e009      	b.n	8000382 <SARA_ChangeTech+0x3a>
	} else { //8 = NB IOT
		HAL_UART_Transmit(&huart1, SARAconnNB, strlen(SARAconnNB), 10);
 800036e:	4817      	ldr	r0, [pc, #92]	; (80003cc <SARA_ChangeTech+0x84>)
 8000370:	f7ff feee 	bl	8000150 <strlen>
 8000374:	4603      	mov	r3, r0
 8000376:	b29a      	uxth	r2, r3
 8000378:	230a      	movs	r3, #10
 800037a:	4914      	ldr	r1, [pc, #80]	; (80003cc <SARA_ChangeTech+0x84>)
 800037c:	4812      	ldr	r0, [pc, #72]	; (80003c8 <SARA_ChangeTech+0x80>)
 800037e:	f002 f8e8 	bl	8002552 <HAL_UART_Transmit>
	}
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000382:	2364      	movs	r3, #100	; 0x64
 8000384:	2280      	movs	r2, #128	; 0x80
 8000386:	4912      	ldr	r1, [pc, #72]	; (80003d0 <SARA_ChangeTech+0x88>)
 8000388:	480f      	ldr	r0, [pc, #60]	; (80003c8 <SARA_ChangeTech+0x80>)
 800038a:	f002 f974 	bl	8002676 <HAL_UART_Receive>

	uint8_t curTech; //if -1 then dont do following
	int i = 0;
 800038e:	2300      	movs	r3, #0
 8000390:	60fb      	str	r3, [r7, #12]
	do {
		SARA_CheckTech();
 8000392:	f000 f823 	bl	80003dc <SARA_CheckTech>
		getResultParameterURAT(3, SARAtech);
 8000396:	490f      	ldr	r1, [pc, #60]	; (80003d4 <SARA_ChangeTech+0x8c>)
 8000398:	2003      	movs	r0, #3
 800039a:	f000 f83b 	bl	8000414 <getResultParameterURAT>
		//SARA_Get_Current_URAT(SARAtech);
		osDelay(1500);
 800039e:	f240 50dc 	movw	r0, #1500	; 0x5dc
 80003a2:	f002 fb49 	bl	8002a38 <osDelay>
		i++;
 80003a6:	68fb      	ldr	r3, [r7, #12]
 80003a8:	3301      	adds	r3, #1
 80003aa:	60fb      	str	r3, [r7, #12]
		//sendToESP(SARATechnology);
	} while (SARATechnology[0] != tech && i < 15);
 80003ac:	4b0a      	ldr	r3, [pc, #40]	; (80003d8 <SARA_ChangeTech+0x90>)
 80003ae:	781b      	ldrb	r3, [r3, #0]
 80003b0:	79fa      	ldrb	r2, [r7, #7]
 80003b2:	429a      	cmp	r2, r3
 80003b4:	d002      	beq.n	80003bc <SARA_ChangeTech+0x74>
 80003b6:	68fb      	ldr	r3, [r7, #12]
 80003b8:	2b0e      	cmp	r3, #14
 80003ba:	ddea      	ble.n	8000392 <SARA_ChangeTech+0x4a>
}
 80003bc:	bf00      	nop
 80003be:	3710      	adds	r7, #16
 80003c0:	46bd      	mov	sp, r7
 80003c2:	bd80      	pop	{r7, pc}
 80003c4:	2000002c 	.word	0x2000002c
 80003c8:	200012a8 	.word	0x200012a8
 80003cc:	20000038 	.word	0x20000038
 80003d0:	200011d8 	.word	0x200011d8
 80003d4:	20001534 	.word	0x20001534
 80003d8:	200012a4 	.word	0x200012a4

080003dc <SARA_CheckTech>:

void SARA_CheckTech(){
 80003dc:	b580      	push	{r7, lr}
 80003de:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARAcopsCheck, strlen(SARAcopsCheck), 10);
 80003e0:	4809      	ldr	r0, [pc, #36]	; (8000408 <SARA_CheckTech+0x2c>)
 80003e2:	f7ff feb5 	bl	8000150 <strlen>
 80003e6:	4603      	mov	r3, r0
 80003e8:	b29a      	uxth	r2, r3
 80003ea:	230a      	movs	r3, #10
 80003ec:	4906      	ldr	r1, [pc, #24]	; (8000408 <SARA_CheckTech+0x2c>)
 80003ee:	4807      	ldr	r0, [pc, #28]	; (800040c <SARA_CheckTech+0x30>)
 80003f0:	f002 f8af 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, SARAtech, 30, 750);
 80003f4:	f240 23ee 	movw	r3, #750	; 0x2ee
 80003f8:	221e      	movs	r2, #30
 80003fa:	4905      	ldr	r1, [pc, #20]	; (8000410 <SARA_CheckTech+0x34>)
 80003fc:	4803      	ldr	r0, [pc, #12]	; (800040c <SARA_CheckTech+0x30>)
 80003fe:	f002 f93a 	bl	8002676 <HAL_UART_Receive>
	//sendToESP(SARAtech);
}
 8000402:	bf00      	nop
 8000404:	bd80      	pop	{r7, pc}
 8000406:	bf00      	nop
 8000408:	20000044 	.word	0x20000044
 800040c:	200012a8 	.word	0x200012a8
 8000410:	20001534 	.word	0x20001534

08000414 <getResultParameterURAT>:
*/




void getResultParameterURAT(int nParam, uint8_t * msg){
 8000414:	b480      	push	{r7}
 8000416:	b085      	sub	sp, #20
 8000418:	af00      	add	r7, sp, #0
 800041a:	6078      	str	r0, [r7, #4]
 800041c:	6039      	str	r1, [r7, #0]
	int commaCnt = 0;
 800041e:	2300      	movs	r3, #0
 8000420:	60fb      	str	r3, [r7, #12]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 8000422:	2300      	movs	r3, #0
 8000424:	60bb      	str	r3, [r7, #8]
	while (msg[i] != '\0'){
 8000426:	e01e      	b.n	8000466 <getResultParameterURAT+0x52>
		if(msg[i] == ',' && commaCnt == nParam-1){
 8000428:	68bb      	ldr	r3, [r7, #8]
 800042a:	683a      	ldr	r2, [r7, #0]
 800042c:	4413      	add	r3, r2
 800042e:	781b      	ldrb	r3, [r3, #0]
 8000430:	2b2c      	cmp	r3, #44	; 0x2c
 8000432:	d10c      	bne.n	800044e <getResultParameterURAT+0x3a>
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	3b01      	subs	r3, #1
 8000438:	68fa      	ldr	r2, [r7, #12]
 800043a:	429a      	cmp	r2, r3
 800043c:	d107      	bne.n	800044e <getResultParameterURAT+0x3a>
			SARATechnology[0] = msg[i+1];
 800043e:	68bb      	ldr	r3, [r7, #8]
 8000440:	3301      	adds	r3, #1
 8000442:	683a      	ldr	r2, [r7, #0]
 8000444:	4413      	add	r3, r2
 8000446:	781a      	ldrb	r2, [r3, #0]
 8000448:	4b0c      	ldr	r3, [pc, #48]	; (800047c <getResultParameterURAT+0x68>)
 800044a:	701a      	strb	r2, [r3, #0]
			return;
 800044c:	e011      	b.n	8000472 <getResultParameterURAT+0x5e>
		} else if(msg[i] == ','){
 800044e:	68bb      	ldr	r3, [r7, #8]
 8000450:	683a      	ldr	r2, [r7, #0]
 8000452:	4413      	add	r3, r2
 8000454:	781b      	ldrb	r3, [r3, #0]
 8000456:	2b2c      	cmp	r3, #44	; 0x2c
 8000458:	d102      	bne.n	8000460 <getResultParameterURAT+0x4c>
			commaCnt++;
 800045a:	68fb      	ldr	r3, [r7, #12]
 800045c:	3301      	adds	r3, #1
 800045e:	60fb      	str	r3, [r7, #12]
			//sendToESP(testing);
		}
		i++;
 8000460:	68bb      	ldr	r3, [r7, #8]
 8000462:	3301      	adds	r3, #1
 8000464:	60bb      	str	r3, [r7, #8]
	while (msg[i] != '\0'){
 8000466:	68bb      	ldr	r3, [r7, #8]
 8000468:	683a      	ldr	r2, [r7, #0]
 800046a:	4413      	add	r3, r2
 800046c:	781b      	ldrb	r3, [r3, #0]
 800046e:	2b00      	cmp	r3, #0
 8000470:	d1da      	bne.n	8000428 <getResultParameterURAT+0x14>
		//osDelay(400);
	}
}
 8000472:	3714      	adds	r7, #20
 8000474:	46bd      	mov	sp, r7
 8000476:	bc80      	pop	{r7}
 8000478:	4770      	bx	lr
 800047a:	bf00      	nop
 800047c:	200012a4 	.word	0x200012a4

08000480 <getResultParameterCESQ>:


void getResultParameterCESQ(int nParam, uint8_t * msg){
 8000480:	b480      	push	{r7}
 8000482:	b087      	sub	sp, #28
 8000484:	af00      	add	r7, sp, #0
 8000486:	6078      	str	r0, [r7, #4]
 8000488:	6039      	str	r1, [r7, #0]
	int commaCnt = 0;
 800048a:	2300      	movs	r3, #0
 800048c:	617b      	str	r3, [r7, #20]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 800048e:	2300      	movs	r3, #0
 8000490:	613b      	str	r3, [r7, #16]
	int j = 1;
 8000492:	2301      	movs	r3, #1
 8000494:	60fb      	str	r3, [r7, #12]
	while (msg[i] != '\0'){
 8000496:	e03b      	b.n	8000510 <getResultParameterCESQ+0x90>
		if(msg[i] == ',' && commaCnt == nParam-1){
 8000498:	693b      	ldr	r3, [r7, #16]
 800049a:	683a      	ldr	r2, [r7, #0]
 800049c:	4413      	add	r3, r2
 800049e:	781b      	ldrb	r3, [r3, #0]
 80004a0:	2b2c      	cmp	r3, #44	; 0x2c
 80004a2:	d129      	bne.n	80004f8 <getResultParameterCESQ+0x78>
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	3b01      	subs	r3, #1
 80004a8:	697a      	ldr	r2, [r7, #20]
 80004aa:	429a      	cmp	r2, r3
 80004ac:	d124      	bne.n	80004f8 <getResultParameterCESQ+0x78>
			while (j <= 5 && msg[i+j] != '\r' && msg[i+j] != '\n'){
 80004ae:	e00d      	b.n	80004cc <getResultParameterCESQ+0x4c>
				SARARsrpRsrq[j-1] = msg[i+j];
 80004b0:	693a      	ldr	r2, [r7, #16]
 80004b2:	68fb      	ldr	r3, [r7, #12]
 80004b4:	4413      	add	r3, r2
 80004b6:	461a      	mov	r2, r3
 80004b8:	683b      	ldr	r3, [r7, #0]
 80004ba:	441a      	add	r2, r3
 80004bc:	68fb      	ldr	r3, [r7, #12]
 80004be:	3b01      	subs	r3, #1
 80004c0:	7811      	ldrb	r1, [r2, #0]
 80004c2:	4a19      	ldr	r2, [pc, #100]	; (8000528 <getResultParameterCESQ+0xa8>)
 80004c4:	54d1      	strb	r1, [r2, r3]
				j++;
 80004c6:	68fb      	ldr	r3, [r7, #12]
 80004c8:	3301      	adds	r3, #1
 80004ca:	60fb      	str	r3, [r7, #12]
			while (j <= 5 && msg[i+j] != '\r' && msg[i+j] != '\n'){
 80004cc:	68fb      	ldr	r3, [r7, #12]
 80004ce:	2b05      	cmp	r3, #5
 80004d0:	dc25      	bgt.n	800051e <getResultParameterCESQ+0x9e>
 80004d2:	693a      	ldr	r2, [r7, #16]
 80004d4:	68fb      	ldr	r3, [r7, #12]
 80004d6:	4413      	add	r3, r2
 80004d8:	461a      	mov	r2, r3
 80004da:	683b      	ldr	r3, [r7, #0]
 80004dc:	4413      	add	r3, r2
 80004de:	781b      	ldrb	r3, [r3, #0]
 80004e0:	2b0d      	cmp	r3, #13
 80004e2:	d01c      	beq.n	800051e <getResultParameterCESQ+0x9e>
 80004e4:	693a      	ldr	r2, [r7, #16]
 80004e6:	68fb      	ldr	r3, [r7, #12]
 80004e8:	4413      	add	r3, r2
 80004ea:	461a      	mov	r2, r3
 80004ec:	683b      	ldr	r3, [r7, #0]
 80004ee:	4413      	add	r3, r2
 80004f0:	781b      	ldrb	r3, [r3, #0]
 80004f2:	2b0a      	cmp	r3, #10
 80004f4:	d1dc      	bne.n	80004b0 <getResultParameterCESQ+0x30>
			}
			return;
 80004f6:	e012      	b.n	800051e <getResultParameterCESQ+0x9e>
		} else if(msg[i] == ','){
 80004f8:	693b      	ldr	r3, [r7, #16]
 80004fa:	683a      	ldr	r2, [r7, #0]
 80004fc:	4413      	add	r3, r2
 80004fe:	781b      	ldrb	r3, [r3, #0]
 8000500:	2b2c      	cmp	r3, #44	; 0x2c
 8000502:	d102      	bne.n	800050a <getResultParameterCESQ+0x8a>
			commaCnt++;
 8000504:	697b      	ldr	r3, [r7, #20]
 8000506:	3301      	adds	r3, #1
 8000508:	617b      	str	r3, [r7, #20]
			//sendToESP(testing);
		}
		i++;
 800050a:	693b      	ldr	r3, [r7, #16]
 800050c:	3301      	adds	r3, #1
 800050e:	613b      	str	r3, [r7, #16]
	while (msg[i] != '\0'){
 8000510:	693b      	ldr	r3, [r7, #16]
 8000512:	683a      	ldr	r2, [r7, #0]
 8000514:	4413      	add	r3, r2
 8000516:	781b      	ldrb	r3, [r3, #0]
 8000518:	2b00      	cmp	r3, #0
 800051a:	d1bd      	bne.n	8000498 <getResultParameterCESQ+0x18>
 800051c:	e000      	b.n	8000520 <getResultParameterCESQ+0xa0>
			return;
 800051e:	bf00      	nop
		//osDelay(400);
	}
}
 8000520:	371c      	adds	r7, #28
 8000522:	46bd      	mov	sp, r7
 8000524:	bc80      	pop	{r7}
 8000526:	4770      	bx	lr
 8000528:	200015a4 	.word	0x200015a4

0800052c <getCSQResult>:

void getCSQResult(uint8_t * msg){
 800052c:	b480      	push	{r7}
 800052e:	b085      	sub	sp, #20
 8000530:	af00      	add	r7, sp, #0
 8000532:	6078      	str	r0, [r7, #4]
	int i = 8;
 8000534:	2308      	movs	r3, #8
 8000536:	60fb      	str	r3, [r7, #12]
	int j = 0;
 8000538:	2300      	movs	r3, #0
 800053a:	60bb      	str	r3, [r7, #8]
	while (msg[i] != ',' && msg[i] != '\0' && msg[i] != '\r' && msg[i] != '\n' && j < 4){
 800053c:	e00e      	b.n	800055c <getCSQResult+0x30>
		SARAcsqResult[j] = msg[i];
 800053e:	68fb      	ldr	r3, [r7, #12]
 8000540:	687a      	ldr	r2, [r7, #4]
 8000542:	4413      	add	r3, r2
 8000544:	7819      	ldrb	r1, [r3, #0]
 8000546:	4a15      	ldr	r2, [pc, #84]	; (800059c <getCSQResult+0x70>)
 8000548:	68bb      	ldr	r3, [r7, #8]
 800054a:	4413      	add	r3, r2
 800054c:	460a      	mov	r2, r1
 800054e:	701a      	strb	r2, [r3, #0]
		i++;
 8000550:	68fb      	ldr	r3, [r7, #12]
 8000552:	3301      	adds	r3, #1
 8000554:	60fb      	str	r3, [r7, #12]
		j++;
 8000556:	68bb      	ldr	r3, [r7, #8]
 8000558:	3301      	adds	r3, #1
 800055a:	60bb      	str	r3, [r7, #8]
	while (msg[i] != ',' && msg[i] != '\0' && msg[i] != '\r' && msg[i] != '\n' && j < 4){
 800055c:	68fb      	ldr	r3, [r7, #12]
 800055e:	687a      	ldr	r2, [r7, #4]
 8000560:	4413      	add	r3, r2
 8000562:	781b      	ldrb	r3, [r3, #0]
 8000564:	2b2c      	cmp	r3, #44	; 0x2c
 8000566:	d014      	beq.n	8000592 <getCSQResult+0x66>
 8000568:	68fb      	ldr	r3, [r7, #12]
 800056a:	687a      	ldr	r2, [r7, #4]
 800056c:	4413      	add	r3, r2
 800056e:	781b      	ldrb	r3, [r3, #0]
 8000570:	2b00      	cmp	r3, #0
 8000572:	d00e      	beq.n	8000592 <getCSQResult+0x66>
 8000574:	68fb      	ldr	r3, [r7, #12]
 8000576:	687a      	ldr	r2, [r7, #4]
 8000578:	4413      	add	r3, r2
 800057a:	781b      	ldrb	r3, [r3, #0]
 800057c:	2b0d      	cmp	r3, #13
 800057e:	d008      	beq.n	8000592 <getCSQResult+0x66>
 8000580:	68fb      	ldr	r3, [r7, #12]
 8000582:	687a      	ldr	r2, [r7, #4]
 8000584:	4413      	add	r3, r2
 8000586:	781b      	ldrb	r3, [r3, #0]
 8000588:	2b0a      	cmp	r3, #10
 800058a:	d002      	beq.n	8000592 <getCSQResult+0x66>
 800058c:	68bb      	ldr	r3, [r7, #8]
 800058e:	2b03      	cmp	r3, #3
 8000590:	ddd5      	ble.n	800053e <getCSQResult+0x12>
	}
}
 8000592:	bf00      	nop
 8000594:	3714      	adds	r7, #20
 8000596:	46bd      	mov	sp, r7
 8000598:	bc80      	pop	{r7}
 800059a:	4770      	bx	lr
 800059c:	20001434 	.word	0x20001434

080005a0 <prepareSaraMeasurement>:

void prepareSaraMeasurement(int technology){
 80005a0:	b580      	push	{r7, lr}
 80005a2:	b082      	sub	sp, #8
 80005a4:	af00      	add	r7, sp, #0
 80005a6:	6078      	str	r0, [r7, #4]
	memset(SaraMeasurements,'\0',128);
 80005a8:	2280      	movs	r2, #128	; 0x80
 80005aa:	2100      	movs	r1, #0
 80005ac:	4822      	ldr	r0, [pc, #136]	; (8000638 <prepareSaraMeasurement+0x98>)
 80005ae:	f003 fbe7 	bl	8003d80 <memset>
	if (technology == 7){
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	2b07      	cmp	r3, #7
 80005b6:	d103      	bne.n	80005c0 <prepareSaraMeasurement+0x20>
		strcpy(SaraMeasurements,LTEMTechName);
 80005b8:	4920      	ldr	r1, [pc, #128]	; (800063c <prepareSaraMeasurement+0x9c>)
 80005ba:	481f      	ldr	r0, [pc, #124]	; (8000638 <prepareSaraMeasurement+0x98>)
 80005bc:	f003 fc85 	bl	8003eca <strcpy>
	}
	if (technology == 9){
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	2b09      	cmp	r3, #9
 80005c4:	d103      	bne.n	80005ce <prepareSaraMeasurement+0x2e>
		strcpy(SaraMeasurements,NBIoTTechName);
 80005c6:	491e      	ldr	r1, [pc, #120]	; (8000640 <prepareSaraMeasurement+0xa0>)
 80005c8:	481b      	ldr	r0, [pc, #108]	; (8000638 <prepareSaraMeasurement+0x98>)
 80005ca:	f003 fc7e 	bl	8003eca <strcpy>
	}

	strcat(SaraMeasurements,currentGPSCoords);
 80005ce:	491d      	ldr	r1, [pc, #116]	; (8000644 <prepareSaraMeasurement+0xa4>)
 80005d0:	4819      	ldr	r0, [pc, #100]	; (8000638 <prepareSaraMeasurement+0x98>)
 80005d2:	f003 fc6b 	bl	8003eac <strcat>
	strcat(SaraMeasurements,SARARsrpRsrq);
 80005d6:	491c      	ldr	r1, [pc, #112]	; (8000648 <prepareSaraMeasurement+0xa8>)
 80005d8:	4817      	ldr	r0, [pc, #92]	; (8000638 <prepareSaraMeasurement+0x98>)
 80005da:	f003 fc67 	bl	8003eac <strcat>
	strcat(SaraMeasurements,",");
 80005de:	4816      	ldr	r0, [pc, #88]	; (8000638 <prepareSaraMeasurement+0x98>)
 80005e0:	f7ff fdb6 	bl	8000150 <strlen>
 80005e4:	4603      	mov	r3, r0
 80005e6:	461a      	mov	r2, r3
 80005e8:	4b13      	ldr	r3, [pc, #76]	; (8000638 <prepareSaraMeasurement+0x98>)
 80005ea:	4413      	add	r3, r2
 80005ec:	4917      	ldr	r1, [pc, #92]	; (800064c <prepareSaraMeasurement+0xac>)
 80005ee:	461a      	mov	r2, r3
 80005f0:	460b      	mov	r3, r1
 80005f2:	881b      	ldrh	r3, [r3, #0]
 80005f4:	8013      	strh	r3, [r2, #0]
	strcat(SaraMeasurements,SARAcsqResult);
 80005f6:	4916      	ldr	r1, [pc, #88]	; (8000650 <prepareSaraMeasurement+0xb0>)
 80005f8:	480f      	ldr	r0, [pc, #60]	; (8000638 <prepareSaraMeasurement+0x98>)
 80005fa:	f003 fc57 	bl	8003eac <strcat>

	memset(currentGPSCoords,'\0',80);
 80005fe:	2250      	movs	r2, #80	; 0x50
 8000600:	2100      	movs	r1, #0
 8000602:	4810      	ldr	r0, [pc, #64]	; (8000644 <prepareSaraMeasurement+0xa4>)
 8000604:	f003 fbbc 	bl	8003d80 <memset>
	memset(SARARsrpRsrq,'\0',6);
 8000608:	2206      	movs	r2, #6
 800060a:	2100      	movs	r1, #0
 800060c:	480e      	ldr	r0, [pc, #56]	; (8000648 <prepareSaraMeasurement+0xa8>)
 800060e:	f003 fbb7 	bl	8003d80 <memset>
	memset(SARAcsqResult,'\0',4);
 8000612:	2204      	movs	r2, #4
 8000614:	2100      	movs	r1, #0
 8000616:	480e      	ldr	r0, [pc, #56]	; (8000650 <prepareSaraMeasurement+0xb0>)
 8000618:	f003 fbb2 	bl	8003d80 <memset>

	memset(saraCESQmessage,'\0',70);
 800061c:	2246      	movs	r2, #70	; 0x46
 800061e:	2100      	movs	r1, #0
 8000620:	480c      	ldr	r0, [pc, #48]	; (8000654 <prepareSaraMeasurement+0xb4>)
 8000622:	f003 fbad 	bl	8003d80 <memset>
	memset(saraCSQmessage,'\0',50);
 8000626:	2232      	movs	r2, #50	; 0x32
 8000628:	2100      	movs	r1, #0
 800062a:	480b      	ldr	r0, [pc, #44]	; (8000658 <prepareSaraMeasurement+0xb8>)
 800062c:	f003 fba8 	bl	8003d80 <memset>
}
 8000630:	bf00      	nop
 8000632:	3708      	adds	r7, #8
 8000634:	46bd      	mov	sp, r7
 8000636:	bd80      	pop	{r7, pc}
 8000638:	200012ec 	.word	0x200012ec
 800063c:	20000068 	.word	0x20000068
 8000640:	20000070 	.word	0x20000070
 8000644:	20001554 	.word	0x20001554
 8000648:	200015a4 	.word	0x200015a4
 800064c:	08005248 	.word	0x08005248
 8000650:	20001434 	.word	0x20001434
 8000654:	2000136c 	.word	0x2000136c
 8000658:	20001500 	.word	0x20001500

0800065c <NEMEUS_Extract_Lora_Measurements>:

void NEMEUS_Extract_Lora_Measurements(uint8_t * cmd){
 800065c:	b480      	push	{r7}
 800065e:	b085      	sub	sp, #20
 8000660:	af00      	add	r7, sp, #0
 8000662:	6078      	str	r0, [r7, #4]
	int i = 8; // start after '+MAC: ' also contains 2 more of some ascii stuff???
 8000664:	2308      	movs	r3, #8
 8000666:	60fb      	str	r3, [r7, #12]
	int j = 0;
 8000668:	2300      	movs	r3, #0
 800066a:	60bb      	str	r3, [r7, #8]
	//while(i < strlen(cmd) && cmd[i] != '\n' && cmd[i] != '\0'){
	while(i < 69 && cmd[i] != '\n' && cmd[i] != '\0' && cmd[i] != '\r'){
 800066c:	e00e      	b.n	800068c <NEMEUS_Extract_Lora_Measurements+0x30>
		currentLoraSignalQuality[j] = cmd[i];
 800066e:	68fb      	ldr	r3, [r7, #12]
 8000670:	687a      	ldr	r2, [r7, #4]
 8000672:	4413      	add	r3, r2
 8000674:	7819      	ldrb	r1, [r3, #0]
 8000676:	4a12      	ldr	r2, [pc, #72]	; (80006c0 <NEMEUS_Extract_Lora_Measurements+0x64>)
 8000678:	68bb      	ldr	r3, [r7, #8]
 800067a:	4413      	add	r3, r2
 800067c:	460a      	mov	r2, r1
 800067e:	701a      	strb	r2, [r3, #0]
		i++;
 8000680:	68fb      	ldr	r3, [r7, #12]
 8000682:	3301      	adds	r3, #1
 8000684:	60fb      	str	r3, [r7, #12]
		j++;
 8000686:	68bb      	ldr	r3, [r7, #8]
 8000688:	3301      	adds	r3, #1
 800068a:	60bb      	str	r3, [r7, #8]
	while(i < 69 && cmd[i] != '\n' && cmd[i] != '\0' && cmd[i] != '\r'){
 800068c:	68fb      	ldr	r3, [r7, #12]
 800068e:	2b44      	cmp	r3, #68	; 0x44
 8000690:	dc11      	bgt.n	80006b6 <NEMEUS_Extract_Lora_Measurements+0x5a>
 8000692:	68fb      	ldr	r3, [r7, #12]
 8000694:	687a      	ldr	r2, [r7, #4]
 8000696:	4413      	add	r3, r2
 8000698:	781b      	ldrb	r3, [r3, #0]
 800069a:	2b0a      	cmp	r3, #10
 800069c:	d00b      	beq.n	80006b6 <NEMEUS_Extract_Lora_Measurements+0x5a>
 800069e:	68fb      	ldr	r3, [r7, #12]
 80006a0:	687a      	ldr	r2, [r7, #4]
 80006a2:	4413      	add	r3, r2
 80006a4:	781b      	ldrb	r3, [r3, #0]
 80006a6:	2b00      	cmp	r3, #0
 80006a8:	d005      	beq.n	80006b6 <NEMEUS_Extract_Lora_Measurements+0x5a>
 80006aa:	68fb      	ldr	r3, [r7, #12]
 80006ac:	687a      	ldr	r2, [r7, #4]
 80006ae:	4413      	add	r3, r2
 80006b0:	781b      	ldrb	r3, [r3, #0]
 80006b2:	2b0d      	cmp	r3, #13
 80006b4:	d1db      	bne.n	800066e <NEMEUS_Extract_Lora_Measurements+0x12>
	}
	//sendToESP()
	//currentLoraSignalQuality[j] = '\0';

}
 80006b6:	bf00      	nop
 80006b8:	3714      	adds	r7, #20
 80006ba:	46bd      	mov	sp, r7
 80006bc:	bc80      	pop	{r7}
 80006be:	4770      	bx	lr
 80006c0:	2000125c 	.word	0x2000125c

080006c4 <NEMEUS_Prepare_Lora_Measurements>:

void NEMEUS_Prepare_Lora_Measurements(){
 80006c4:	b580      	push	{r7, lr}
 80006c6:	af00      	add	r7, sp, #0

	strcpy(loraMeasurements,loraTechName);
 80006c8:	4909      	ldr	r1, [pc, #36]	; (80006f0 <NEMEUS_Prepare_Lora_Measurements+0x2c>)
 80006ca:	480a      	ldr	r0, [pc, #40]	; (80006f4 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 80006cc:	f003 fbfd 	bl	8003eca <strcpy>
	strcat(loraMeasurements,currentGPSCoords);
 80006d0:	4909      	ldr	r1, [pc, #36]	; (80006f8 <NEMEUS_Prepare_Lora_Measurements+0x34>)
 80006d2:	4808      	ldr	r0, [pc, #32]	; (80006f4 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 80006d4:	f003 fbea 	bl	8003eac <strcat>
	strcat(loraMeasurements,currentLoraSignalQuality);
 80006d8:	4908      	ldr	r1, [pc, #32]	; (80006fc <NEMEUS_Prepare_Lora_Measurements+0x38>)
 80006da:	4806      	ldr	r0, [pc, #24]	; (80006f4 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 80006dc:	f003 fbe6 	bl	8003eac <strcat>
	HAL_UART_Transmit(&huart2, endDelim, 1, 50);
	osDelay(50);
	*/


	memset(currentGPSCoords,'\0',80);
 80006e0:	2250      	movs	r2, #80	; 0x50
 80006e2:	2100      	movs	r1, #0
 80006e4:	4804      	ldr	r0, [pc, #16]	; (80006f8 <NEMEUS_Prepare_Lora_Measurements+0x34>)
 80006e6:	f003 fb4b 	bl	8003d80 <memset>
}
 80006ea:	bf00      	nop
 80006ec:	bd80      	pop	{r7, pc}
 80006ee:	bf00      	nop
 80006f0:	200000bc 	.word	0x200000bc
 80006f4:	200013b4 	.word	0x200013b4
 80006f8:	20001554 	.word	0x20001554
 80006fc:	2000125c 	.word	0x2000125c

08000700 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000700:	b5b0      	push	{r4, r5, r7, lr}
 8000702:	b08a      	sub	sp, #40	; 0x28
 8000704:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000706:	f000 fd7b 	bl	8001200 <HAL_Init>

  /* USER CODE BEGIN Init */

  srand(time(0));
 800070a:	2000      	movs	r0, #0
 800070c:	f003 fbe6 	bl	8003edc <time>
 8000710:	4603      	mov	r3, r0
 8000712:	4618      	mov	r0, r3
 8000714:	f003 fb3c 	bl	8003d90 <srand>
  int x = rand();
 8000718:	f003 fb68 	bl	8003dec <rand>
 800071c:	6278      	str	r0, [r7, #36]	; 0x24
  int y = rand();
 800071e:	f003 fb65 	bl	8003dec <rand>
 8000722:	6238      	str	r0, [r7, #32]
  sprintf(randSeq, "%X", x%16);
 8000724:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000726:	425a      	negs	r2, r3
 8000728:	f003 030f 	and.w	r3, r3, #15
 800072c:	f002 020f 	and.w	r2, r2, #15
 8000730:	bf58      	it	pl
 8000732:	4253      	negpl	r3, r2
 8000734:	461a      	mov	r2, r3
 8000736:	491c      	ldr	r1, [pc, #112]	; (80007a8 <main+0xa8>)
 8000738:	481c      	ldr	r0, [pc, #112]	; (80007ac <main+0xac>)
 800073a:	f003 fb97 	bl	8003e6c <siprintf>
  sprintf(stry, "%X", y%16);
 800073e:	6a3b      	ldr	r3, [r7, #32]
 8000740:	425a      	negs	r2, r3
 8000742:	f003 030f 	and.w	r3, r3, #15
 8000746:	f002 020f 	and.w	r2, r2, #15
 800074a:	bf58      	it	pl
 800074c:	4253      	negpl	r3, r2
 800074e:	461a      	mov	r2, r3
 8000750:	4915      	ldr	r1, [pc, #84]	; (80007a8 <main+0xa8>)
 8000752:	4817      	ldr	r0, [pc, #92]	; (80007b0 <main+0xb0>)
 8000754:	f003 fb8a 	bl	8003e6c <siprintf>
  strcat(randSeq, stry);
 8000758:	4915      	ldr	r1, [pc, #84]	; (80007b0 <main+0xb0>)
 800075a:	4814      	ldr	r0, [pc, #80]	; (80007ac <main+0xac>)
 800075c:	f003 fba6 	bl	8003eac <strcat>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000760:	f000 f82e 	bl	80007c0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000764:	f000 f8e6 	bl	8000934 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8000768:	f000 f866 	bl	8000838 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 800076c:	f000 f88e 	bl	800088c <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 8000770:	f000 f8b6 	bl	80008e0 <MX_USART3_UART_Init>
  /* USER CODE BEGIN 2 */

  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000774:	2201      	movs	r2, #1
 8000776:	f44f 7180 	mov.w	r1, #256	; 0x100
 800077a:	480e      	ldr	r0, [pc, #56]	; (80007b4 <main+0xb4>)
 800077c:	f000 ffd6 	bl	800172c <HAL_GPIO_WritePin>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 8000780:	4b0d      	ldr	r3, [pc, #52]	; (80007b8 <main+0xb8>)
 8000782:	1d3c      	adds	r4, r7, #4
 8000784:	461d      	mov	r5, r3
 8000786:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000788:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800078a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800078e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8000792:	1d3b      	adds	r3, r7, #4
 8000794:	2100      	movs	r1, #0
 8000796:	4618      	mov	r0, r3
 8000798:	f002 f902 	bl	80029a0 <osThreadCreate>
 800079c:	4603      	mov	r3, r0
 800079e:	4a07      	ldr	r2, [pc, #28]	; (80007bc <main+0xbc>)
 80007a0:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 80007a2:	f002 f8f6 	bl	8002992 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80007a6:	e7fe      	b.n	80007a6 <main+0xa6>
 80007a8:	0800524c 	.word	0x0800524c
 80007ac:	200015ac 	.word	0x200015ac
 80007b0:	2000143c 	.word	0x2000143c
 80007b4:	40010800 	.word	0x40010800
 80007b8:	08005250 	.word	0x08005250
 80007bc:	2000118c 	.word	0x2000118c

080007c0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80007c0:	b580      	push	{r7, lr}
 80007c2:	b090      	sub	sp, #64	; 0x40
 80007c4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80007c6:	f107 0318 	add.w	r3, r7, #24
 80007ca:	2228      	movs	r2, #40	; 0x28
 80007cc:	2100      	movs	r1, #0
 80007ce:	4618      	mov	r0, r3
 80007d0:	f003 fad6 	bl	8003d80 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80007d4:	1d3b      	adds	r3, r7, #4
 80007d6:	2200      	movs	r2, #0
 80007d8:	601a      	str	r2, [r3, #0]
 80007da:	605a      	str	r2, [r3, #4]
 80007dc:	609a      	str	r2, [r3, #8]
 80007de:	60da      	str	r2, [r3, #12]
 80007e0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80007e2:	2302      	movs	r3, #2
 80007e4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80007e6:	2301      	movs	r3, #1
 80007e8:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80007ea:	2310      	movs	r3, #16
 80007ec:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80007ee:	2300      	movs	r3, #0
 80007f0:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007f2:	f107 0318 	add.w	r3, r7, #24
 80007f6:	4618      	mov	r0, r3
 80007f8:	f000 ffca 	bl	8001790 <HAL_RCC_OscConfig>
 80007fc:	4603      	mov	r3, r0
 80007fe:	2b00      	cmp	r3, #0
 8000800:	d001      	beq.n	8000806 <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000802:	f000 fa9d 	bl	8000d40 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000806:	230f      	movs	r3, #15
 8000808:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800080a:	2300      	movs	r3, #0
 800080c:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800080e:	2300      	movs	r3, #0
 8000810:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000812:	2300      	movs	r3, #0
 8000814:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000816:	2300      	movs	r3, #0
 8000818:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800081a:	1d3b      	adds	r3, r7, #4
 800081c:	2100      	movs	r1, #0
 800081e:	4618      	mov	r0, r3
 8000820:	f001 fa36 	bl	8001c90 <HAL_RCC_ClockConfig>
 8000824:	4603      	mov	r3, r0
 8000826:	2b00      	cmp	r3, #0
 8000828:	d001      	beq.n	800082e <SystemClock_Config+0x6e>
  {
    Error_Handler();
 800082a:	f000 fa89 	bl	8000d40 <Error_Handler>
  }
}
 800082e:	bf00      	nop
 8000830:	3740      	adds	r7, #64	; 0x40
 8000832:	46bd      	mov	sp, r7
 8000834:	bd80      	pop	{r7, pc}
	...

08000838 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000838:	b580      	push	{r7, lr}
 800083a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 800083c:	4b11      	ldr	r3, [pc, #68]	; (8000884 <MX_USART1_UART_Init+0x4c>)
 800083e:	4a12      	ldr	r2, [pc, #72]	; (8000888 <MX_USART1_UART_Init+0x50>)
 8000840:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 57600;
 8000842:	4b10      	ldr	r3, [pc, #64]	; (8000884 <MX_USART1_UART_Init+0x4c>)
 8000844:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 8000848:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800084a:	4b0e      	ldr	r3, [pc, #56]	; (8000884 <MX_USART1_UART_Init+0x4c>)
 800084c:	2200      	movs	r2, #0
 800084e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000850:	4b0c      	ldr	r3, [pc, #48]	; (8000884 <MX_USART1_UART_Init+0x4c>)
 8000852:	2200      	movs	r2, #0
 8000854:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000856:	4b0b      	ldr	r3, [pc, #44]	; (8000884 <MX_USART1_UART_Init+0x4c>)
 8000858:	2200      	movs	r2, #0
 800085a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800085c:	4b09      	ldr	r3, [pc, #36]	; (8000884 <MX_USART1_UART_Init+0x4c>)
 800085e:	220c      	movs	r2, #12
 8000860:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000862:	4b08      	ldr	r3, [pc, #32]	; (8000884 <MX_USART1_UART_Init+0x4c>)
 8000864:	2200      	movs	r2, #0
 8000866:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000868:	4b06      	ldr	r3, [pc, #24]	; (8000884 <MX_USART1_UART_Init+0x4c>)
 800086a:	2200      	movs	r2, #0
 800086c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800086e:	4805      	ldr	r0, [pc, #20]	; (8000884 <MX_USART1_UART_Init+0x4c>)
 8000870:	f001 fe22 	bl	80024b8 <HAL_UART_Init>
 8000874:	4603      	mov	r3, r0
 8000876:	2b00      	cmp	r3, #0
 8000878:	d001      	beq.n	800087e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 800087a:	f000 fa61 	bl	8000d40 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800087e:	bf00      	nop
 8000880:	bd80      	pop	{r7, pc}
 8000882:	bf00      	nop
 8000884:	200012a8 	.word	0x200012a8
 8000888:	40013800 	.word	0x40013800

0800088c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 800088c:	b580      	push	{r7, lr}
 800088e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000890:	4b11      	ldr	r3, [pc, #68]	; (80008d8 <MX_USART2_UART_Init+0x4c>)
 8000892:	4a12      	ldr	r2, [pc, #72]	; (80008dc <MX_USART2_UART_Init+0x50>)
 8000894:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 57600;
 8000896:	4b10      	ldr	r3, [pc, #64]	; (80008d8 <MX_USART2_UART_Init+0x4c>)
 8000898:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 800089c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800089e:	4b0e      	ldr	r3, [pc, #56]	; (80008d8 <MX_USART2_UART_Init+0x4c>)
 80008a0:	2200      	movs	r2, #0
 80008a2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80008a4:	4b0c      	ldr	r3, [pc, #48]	; (80008d8 <MX_USART2_UART_Init+0x4c>)
 80008a6:	2200      	movs	r2, #0
 80008a8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80008aa:	4b0b      	ldr	r3, [pc, #44]	; (80008d8 <MX_USART2_UART_Init+0x4c>)
 80008ac:	2200      	movs	r2, #0
 80008ae:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80008b0:	4b09      	ldr	r3, [pc, #36]	; (80008d8 <MX_USART2_UART_Init+0x4c>)
 80008b2:	220c      	movs	r2, #12
 80008b4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80008b6:	4b08      	ldr	r3, [pc, #32]	; (80008d8 <MX_USART2_UART_Init+0x4c>)
 80008b8:	2200      	movs	r2, #0
 80008ba:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80008bc:	4b06      	ldr	r3, [pc, #24]	; (80008d8 <MX_USART2_UART_Init+0x4c>)
 80008be:	2200      	movs	r2, #0
 80008c0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80008c2:	4805      	ldr	r0, [pc, #20]	; (80008d8 <MX_USART2_UART_Init+0x4c>)
 80008c4:	f001 fdf8 	bl	80024b8 <HAL_UART_Init>
 80008c8:	4603      	mov	r3, r0
 80008ca:	2b00      	cmp	r3, #0
 80008cc:	d001      	beq.n	80008d2 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80008ce:	f000 fa37 	bl	8000d40 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80008d2:	bf00      	nop
 80008d4:	bd80      	pop	{r7, pc}
 80008d6:	bf00      	nop
 80008d8:	200014c0 	.word	0x200014c0
 80008dc:	40004400 	.word	0x40004400

080008e0 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80008e0:	b580      	push	{r7, lr}
 80008e2:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80008e4:	4b11      	ldr	r3, [pc, #68]	; (800092c <MX_USART3_UART_Init+0x4c>)
 80008e6:	4a12      	ldr	r2, [pc, #72]	; (8000930 <MX_USART3_UART_Init+0x50>)
 80008e8:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 38400;
 80008ea:	4b10      	ldr	r3, [pc, #64]	; (800092c <MX_USART3_UART_Init+0x4c>)
 80008ec:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 80008f0:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80008f2:	4b0e      	ldr	r3, [pc, #56]	; (800092c <MX_USART3_UART_Init+0x4c>)
 80008f4:	2200      	movs	r2, #0
 80008f6:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80008f8:	4b0c      	ldr	r3, [pc, #48]	; (800092c <MX_USART3_UART_Init+0x4c>)
 80008fa:	2200      	movs	r2, #0
 80008fc:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80008fe:	4b0b      	ldr	r3, [pc, #44]	; (800092c <MX_USART3_UART_Init+0x4c>)
 8000900:	2200      	movs	r2, #0
 8000902:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8000904:	4b09      	ldr	r3, [pc, #36]	; (800092c <MX_USART3_UART_Init+0x4c>)
 8000906:	220c      	movs	r2, #12
 8000908:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800090a:	4b08      	ldr	r3, [pc, #32]	; (800092c <MX_USART3_UART_Init+0x4c>)
 800090c:	2200      	movs	r2, #0
 800090e:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8000910:	4b06      	ldr	r3, [pc, #24]	; (800092c <MX_USART3_UART_Init+0x4c>)
 8000912:	2200      	movs	r2, #0
 8000914:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8000916:	4805      	ldr	r0, [pc, #20]	; (800092c <MX_USART3_UART_Init+0x4c>)
 8000918:	f001 fdce 	bl	80024b8 <HAL_UART_Init>
 800091c:	4603      	mov	r3, r0
 800091e:	2b00      	cmp	r3, #0
 8000920:	d001      	beq.n	8000926 <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8000922:	f000 fa0d 	bl	8000d40 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8000926:	bf00      	nop
 8000928:	bd80      	pop	{r7, pc}
 800092a:	bf00      	nop
 800092c:	20001190 	.word	0x20001190
 8000930:	40004800 	.word	0x40004800

08000934 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000934:	b580      	push	{r7, lr}
 8000936:	b088      	sub	sp, #32
 8000938:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800093a:	f107 0310 	add.w	r3, r7, #16
 800093e:	2200      	movs	r2, #0
 8000940:	601a      	str	r2, [r3, #0]
 8000942:	605a      	str	r2, [r3, #4]
 8000944:	609a      	str	r2, [r3, #8]
 8000946:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000948:	4b28      	ldr	r3, [pc, #160]	; (80009ec <MX_GPIO_Init+0xb8>)
 800094a:	699b      	ldr	r3, [r3, #24]
 800094c:	4a27      	ldr	r2, [pc, #156]	; (80009ec <MX_GPIO_Init+0xb8>)
 800094e:	f043 0310 	orr.w	r3, r3, #16
 8000952:	6193      	str	r3, [r2, #24]
 8000954:	4b25      	ldr	r3, [pc, #148]	; (80009ec <MX_GPIO_Init+0xb8>)
 8000956:	699b      	ldr	r3, [r3, #24]
 8000958:	f003 0310 	and.w	r3, r3, #16
 800095c:	60fb      	str	r3, [r7, #12]
 800095e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000960:	4b22      	ldr	r3, [pc, #136]	; (80009ec <MX_GPIO_Init+0xb8>)
 8000962:	699b      	ldr	r3, [r3, #24]
 8000964:	4a21      	ldr	r2, [pc, #132]	; (80009ec <MX_GPIO_Init+0xb8>)
 8000966:	f043 0304 	orr.w	r3, r3, #4
 800096a:	6193      	str	r3, [r2, #24]
 800096c:	4b1f      	ldr	r3, [pc, #124]	; (80009ec <MX_GPIO_Init+0xb8>)
 800096e:	699b      	ldr	r3, [r3, #24]
 8000970:	f003 0304 	and.w	r3, r3, #4
 8000974:	60bb      	str	r3, [r7, #8]
 8000976:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000978:	4b1c      	ldr	r3, [pc, #112]	; (80009ec <MX_GPIO_Init+0xb8>)
 800097a:	699b      	ldr	r3, [r3, #24]
 800097c:	4a1b      	ldr	r2, [pc, #108]	; (80009ec <MX_GPIO_Init+0xb8>)
 800097e:	f043 0308 	orr.w	r3, r3, #8
 8000982:	6193      	str	r3, [r2, #24]
 8000984:	4b19      	ldr	r3, [pc, #100]	; (80009ec <MX_GPIO_Init+0xb8>)
 8000986:	699b      	ldr	r3, [r3, #24]
 8000988:	f003 0308 	and.w	r3, r3, #8
 800098c:	607b      	str	r3, [r7, #4]
 800098e:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8000990:	2200      	movs	r2, #0
 8000992:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000996:	4816      	ldr	r0, [pc, #88]	; (80009f0 <MX_GPIO_Init+0xbc>)
 8000998:	f000 fec8 	bl	800172c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 800099c:	2200      	movs	r2, #0
 800099e:	f44f 7180 	mov.w	r1, #256	; 0x100
 80009a2:	4814      	ldr	r0, [pc, #80]	; (80009f4 <MX_GPIO_Init+0xc0>)
 80009a4:	f000 fec2 	bl	800172c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 80009a8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80009ac:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009ae:	2301      	movs	r3, #1
 80009b0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009b2:	2300      	movs	r3, #0
 80009b4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009b6:	2302      	movs	r3, #2
 80009b8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80009ba:	f107 0310 	add.w	r3, r7, #16
 80009be:	4619      	mov	r1, r3
 80009c0:	480b      	ldr	r0, [pc, #44]	; (80009f0 <MX_GPIO_Init+0xbc>)
 80009c2:	f000 fd2f 	bl	8001424 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 80009c6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80009ca:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009cc:	2301      	movs	r3, #1
 80009ce:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009d0:	2300      	movs	r3, #0
 80009d2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009d4:	2302      	movs	r3, #2
 80009d6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80009d8:	f107 0310 	add.w	r3, r7, #16
 80009dc:	4619      	mov	r1, r3
 80009de:	4805      	ldr	r0, [pc, #20]	; (80009f4 <MX_GPIO_Init+0xc0>)
 80009e0:	f000 fd20 	bl	8001424 <HAL_GPIO_Init>

}
 80009e4:	bf00      	nop
 80009e6:	3720      	adds	r7, #32
 80009e8:	46bd      	mov	sp, r7
 80009ea:	bd80      	pop	{r7, pc}
 80009ec:	40021000 	.word	0x40021000
 80009f0:	40011000 	.word	0x40011000
 80009f4:	40010800 	.word	0x40010800

080009f8 <sendToESP>:

/* USER CODE BEGIN 4 */

void sendToESP(uint8_t * msg) {
 80009f8:	b580      	push	{r7, lr}
 80009fa:	b082      	sub	sp, #8
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart2, beginDelim, 1, 50);
 8000a00:	2332      	movs	r3, #50	; 0x32
 8000a02:	2201      	movs	r2, #1
 8000a04:	490b      	ldr	r1, [pc, #44]	; (8000a34 <sendToESP+0x3c>)
 8000a06:	480c      	ldr	r0, [pc, #48]	; (8000a38 <sendToESP+0x40>)
 8000a08:	f001 fda3 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, msg, strlen(msg), 50);
 8000a0c:	6878      	ldr	r0, [r7, #4]
 8000a0e:	f7ff fb9f 	bl	8000150 <strlen>
 8000a12:	4603      	mov	r3, r0
 8000a14:	b29a      	uxth	r2, r3
 8000a16:	2332      	movs	r3, #50	; 0x32
 8000a18:	6879      	ldr	r1, [r7, #4]
 8000a1a:	4807      	ldr	r0, [pc, #28]	; (8000a38 <sendToESP+0x40>)
 8000a1c:	f001 fd99 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, endDelim, 1, 50);
 8000a20:	2332      	movs	r3, #50	; 0x32
 8000a22:	2201      	movs	r2, #1
 8000a24:	4905      	ldr	r1, [pc, #20]	; (8000a3c <sendToESP+0x44>)
 8000a26:	4804      	ldr	r0, [pc, #16]	; (8000a38 <sendToESP+0x40>)
 8000a28:	f001 fd93 	bl	8002552 <HAL_UART_Transmit>
}
 8000a2c:	bf00      	nop
 8000a2e:	3708      	adds	r7, #8
 8000a30:	46bd      	mov	sp, r7
 8000a32:	bd80      	pop	{r7, pc}
 8000a34:	200000c4 	.word	0x200000c4
 8000a38:	200014c0 	.word	0x200014c0
 8000a3c:	200000c8 	.word	0x200000c8

08000a40 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 8000a40:	b590      	push	{r4, r7, lr}
 8000a42:	b0d1      	sub	sp, #324	; 0x144
 8000a44:	af00      	add	r7, sp, #0
 8000a46:	1d3b      	adds	r3, r7, #4
 8000a48:	6018      	str	r0, [r3, #0]
  /* USER CODE BEGIN 5 */

  uint8_t test[] = "AT+COPS?\r\n";
 8000a4a:	4a9e      	ldr	r2, [pc, #632]	; (8000cc4 <StartDefaultTask+0x284>)
 8000a4c:	f507 739a 	add.w	r3, r7, #308	; 0x134
 8000a50:	ca07      	ldmia	r2, {r0, r1, r2}
 8000a52:	c303      	stmia	r3!, {r0, r1}
 8000a54:	801a      	strh	r2, [r3, #0]
 8000a56:	3302      	adds	r3, #2
 8000a58:	0c12      	lsrs	r2, r2, #16
 8000a5a:	701a      	strb	r2, [r3, #0]
  uint8_t test2[] = "AT+MAC=ON\r\n";
 8000a5c:	4a9a      	ldr	r2, [pc, #616]	; (8000cc8 <StartDefaultTask+0x288>)
 8000a5e:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8000a62:	ca07      	ldmia	r2, {r0, r1, r2}
 8000a64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  uint8_t debugTest[] = "AT+DEBUG=ME?";
 8000a68:	4b98      	ldr	r3, [pc, #608]	; (8000ccc <StartDefaultTask+0x28c>)
 8000a6a:	f507 748c 	add.w	r4, r7, #280	; 0x118
 8000a6e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000a70:	c407      	stmia	r4!, {r0, r1, r2}
 8000a72:	7023      	strb	r3, [r4, #0]
  uint8_t loopDone[] = "Loop done\r\n";
 8000a74:	4a96      	ldr	r2, [pc, #600]	; (8000cd0 <StartDefaultTask+0x290>)
 8000a76:	f507 7386 	add.w	r3, r7, #268	; 0x10c
 8000a7a:	ca07      	ldmia	r2, {r0, r1, r2}
 8000a7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  sendToESP(debugTest);
 8000a80:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8000a84:	4618      	mov	r0, r3
 8000a86:	f7ff ffb7 	bl	80009f8 <sendToESP>
  osDelay(4500);
 8000a8a:	f241 1094 	movw	r0, #4500	; 0x1194
 8000a8e:	f001 ffd3 	bl	8002a38 <osDelay>
  SARA_Init();
 8000a92:	f7ff fb7d 	bl	8000190 <SARA_Init>
  nemeus_Power_Cycle();
 8000a96:	f7ff fbe1 	bl	800025c <nemeus_Power_Cycle>

  //uint8_t sigfoxSend[23] = "AT+SF=SNDBIN,";
  uint8_t sigfoxSend[30];
  uint8_t sigfoxEnd[] = ",0\r\n";
 8000a9a:	4a8e      	ldr	r2, [pc, #568]	; (8000cd4 <StartDefaultTask+0x294>)
 8000a9c:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8000aa0:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000aa4:	6018      	str	r0, [r3, #0]
 8000aa6:	3304      	adds	r3, #4
 8000aa8:	7019      	strb	r1, [r3, #0]
  uint8_t SigFoxMessage[69];
  uint8_t saraMSG[69];

  for(;;)
  {
    osDelay(1000);
 8000aaa:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000aae:	f001 ffc3 	bl	8002a38 <osDelay>
    //sendToESP(test);
    HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 8000ab2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000ab6:	4888      	ldr	r0, [pc, #544]	; (8000cd8 <StartDefaultTask+0x298>)
 8000ab8:	f000 fe50 	bl	800175c <HAL_GPIO_TogglePin>
// **** SARA STUFF ****

    HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 8000abc:	4887      	ldr	r0, [pc, #540]	; (8000cdc <StartDefaultTask+0x29c>)
 8000abe:	f7ff fb47 	bl	8000150 <strlen>
 8000ac2:	4603      	mov	r3, r0
 8000ac4:	b29a      	uxth	r2, r3
 8000ac6:	2332      	movs	r3, #50	; 0x32
 8000ac8:	4984      	ldr	r1, [pc, #528]	; (8000cdc <StartDefaultTask+0x29c>)
 8000aca:	4885      	ldr	r0, [pc, #532]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000acc:	f001 fd41 	bl	8002552 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCESQmessage, 70, 150);
 8000ad0:	2396      	movs	r3, #150	; 0x96
 8000ad2:	2246      	movs	r2, #70	; 0x46
 8000ad4:	4983      	ldr	r1, [pc, #524]	; (8000ce4 <StartDefaultTask+0x2a4>)
 8000ad6:	4882      	ldr	r0, [pc, #520]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000ad8:	f001 fdcd 	bl	8002676 <HAL_UART_Receive>
    osDelay(200);
 8000adc:	20c8      	movs	r0, #200	; 0xc8
 8000ade:	f001 ffab 	bl	8002a38 <osDelay>
    getResultParameterCESQ(4, saraCESQmessage);
 8000ae2:	4980      	ldr	r1, [pc, #512]	; (8000ce4 <StartDefaultTask+0x2a4>)
 8000ae4:	2004      	movs	r0, #4
 8000ae6:	f7ff fccb 	bl	8000480 <getResultParameterCESQ>
    //sendToESP(saraMSG);
    //sendToESP(SARARsrpRsrq);

    HAL_UART_Transmit(&huart1, SARAcsq, strlen(SARAcsq), 50);
 8000aea:	487f      	ldr	r0, [pc, #508]	; (8000ce8 <StartDefaultTask+0x2a8>)
 8000aec:	f7ff fb30 	bl	8000150 <strlen>
 8000af0:	4603      	mov	r3, r0
 8000af2:	b29a      	uxth	r2, r3
 8000af4:	2332      	movs	r3, #50	; 0x32
 8000af6:	497c      	ldr	r1, [pc, #496]	; (8000ce8 <StartDefaultTask+0x2a8>)
 8000af8:	4879      	ldr	r0, [pc, #484]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000afa:	f001 fd2a 	bl	8002552 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCSQmessage, 50, 50);
 8000afe:	2332      	movs	r3, #50	; 0x32
 8000b00:	2232      	movs	r2, #50	; 0x32
 8000b02:	497a      	ldr	r1, [pc, #488]	; (8000cec <StartDefaultTask+0x2ac>)
 8000b04:	4876      	ldr	r0, [pc, #472]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000b06:	f001 fdb6 	bl	8002676 <HAL_UART_Receive>
    //sendToESP(saraCSQmessage);

    getCSQResult(saraCSQmessage);
 8000b0a:	4878      	ldr	r0, [pc, #480]	; (8000cec <StartDefaultTask+0x2ac>)
 8000b0c:	f7ff fd0e 	bl	800052c <getCSQResult>
    //sendToESP(SARAcsqResult);
    osDelay(1000);
 8000b10:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000b14:	f001 ff90 	bl	8002a38 <osDelay>
    HAL_UART_Transmit(&huart1, getGPSCoords, strlen(getGPSCoords), 50);
 8000b18:	4875      	ldr	r0, [pc, #468]	; (8000cf0 <StartDefaultTask+0x2b0>)
 8000b1a:	f7ff fb19 	bl	8000150 <strlen>
 8000b1e:	4603      	mov	r3, r0
 8000b20:	b29a      	uxth	r2, r3
 8000b22:	2332      	movs	r3, #50	; 0x32
 8000b24:	4972      	ldr	r1, [pc, #456]	; (8000cf0 <StartDefaultTask+0x2b0>)
 8000b26:	486e      	ldr	r0, [pc, #440]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000b28:	f001 fd13 	bl	8002552 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
 8000b2c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000b30:	2250      	movs	r2, #80	; 0x50
 8000b32:	4970      	ldr	r1, [pc, #448]	; (8000cf4 <StartDefaultTask+0x2b4>)
 8000b34:	486a      	ldr	r0, [pc, #424]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000b36:	f001 fd9e 	bl	8002676 <HAL_UART_Receive>

    prepareSaraMeasurement(7);
 8000b3a:	2007      	movs	r0, #7
 8000b3c:	f7ff fd30 	bl	80005a0 <prepareSaraMeasurement>
    sendToESP(SaraMeasurements);
 8000b40:	486d      	ldr	r0, [pc, #436]	; (8000cf8 <StartDefaultTask+0x2b8>)
 8000b42:	f7ff ff59 	bl	80009f8 <sendToESP>

    //sendToESP(SARARsrpRsrq);

	SARA_ChangeTech('9');
 8000b46:	2039      	movs	r0, #57	; 0x39
 8000b48:	f7ff fbfe 	bl	8000348 <SARA_ChangeTech>

	osDelay(1000);
 8000b4c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000b50:	f001 ff72 	bl	8002a38 <osDelay>
	HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 8000b54:	4861      	ldr	r0, [pc, #388]	; (8000cdc <StartDefaultTask+0x29c>)
 8000b56:	f7ff fafb 	bl	8000150 <strlen>
 8000b5a:	4603      	mov	r3, r0
 8000b5c:	b29a      	uxth	r2, r3
 8000b5e:	2332      	movs	r3, #50	; 0x32
 8000b60:	495e      	ldr	r1, [pc, #376]	; (8000cdc <StartDefaultTask+0x29c>)
 8000b62:	485f      	ldr	r0, [pc, #380]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000b64:	f001 fcf5 	bl	8002552 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, saraCESQmessage, 70, 150);
 8000b68:	2396      	movs	r3, #150	; 0x96
 8000b6a:	2246      	movs	r2, #70	; 0x46
 8000b6c:	495d      	ldr	r1, [pc, #372]	; (8000ce4 <StartDefaultTask+0x2a4>)
 8000b6e:	485c      	ldr	r0, [pc, #368]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000b70:	f001 fd81 	bl	8002676 <HAL_UART_Receive>
	osDelay(200);
 8000b74:	20c8      	movs	r0, #200	; 0xc8
 8000b76:	f001 ff5f 	bl	8002a38 <osDelay>
	getResultParameterCESQ(4, saraCESQmessage);
 8000b7a:	495a      	ldr	r1, [pc, #360]	; (8000ce4 <StartDefaultTask+0x2a4>)
 8000b7c:	2004      	movs	r0, #4
 8000b7e:	f7ff fc7f 	bl	8000480 <getResultParameterCESQ>

    HAL_UART_Transmit(&huart1, SARAcsq, strlen(SARAcsq), 50);
 8000b82:	4859      	ldr	r0, [pc, #356]	; (8000ce8 <StartDefaultTask+0x2a8>)
 8000b84:	f7ff fae4 	bl	8000150 <strlen>
 8000b88:	4603      	mov	r3, r0
 8000b8a:	b29a      	uxth	r2, r3
 8000b8c:	2332      	movs	r3, #50	; 0x32
 8000b8e:	4956      	ldr	r1, [pc, #344]	; (8000ce8 <StartDefaultTask+0x2a8>)
 8000b90:	4853      	ldr	r0, [pc, #332]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000b92:	f001 fcde 	bl	8002552 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCSQmessage, 50, 50);
 8000b96:	2332      	movs	r3, #50	; 0x32
 8000b98:	2232      	movs	r2, #50	; 0x32
 8000b9a:	4954      	ldr	r1, [pc, #336]	; (8000cec <StartDefaultTask+0x2ac>)
 8000b9c:	4850      	ldr	r0, [pc, #320]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000b9e:	f001 fd6a 	bl	8002676 <HAL_UART_Receive>

    getCSQResult(saraCSQmessage);
 8000ba2:	4852      	ldr	r0, [pc, #328]	; (8000cec <StartDefaultTask+0x2ac>)
 8000ba4:	f7ff fcc2 	bl	800052c <getCSQResult>
    osDelay(500);
 8000ba8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000bac:	f001 ff44 	bl	8002a38 <osDelay>
    HAL_UART_Transmit(&huart1, getGPSCoords, strlen(getGPSCoords), 50);
 8000bb0:	484f      	ldr	r0, [pc, #316]	; (8000cf0 <StartDefaultTask+0x2b0>)
 8000bb2:	f7ff facd 	bl	8000150 <strlen>
 8000bb6:	4603      	mov	r3, r0
 8000bb8:	b29a      	uxth	r2, r3
 8000bba:	2332      	movs	r3, #50	; 0x32
 8000bbc:	494c      	ldr	r1, [pc, #304]	; (8000cf0 <StartDefaultTask+0x2b0>)
 8000bbe:	4848      	ldr	r0, [pc, #288]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000bc0:	f001 fcc7 	bl	8002552 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
 8000bc4:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000bc8:	2250      	movs	r2, #80	; 0x50
 8000bca:	494a      	ldr	r1, [pc, #296]	; (8000cf4 <StartDefaultTask+0x2b4>)
 8000bcc:	4844      	ldr	r0, [pc, #272]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000bce:	f001 fd52 	bl	8002676 <HAL_UART_Receive>

    prepareSaraMeasurement(9);
 8000bd2:	2009      	movs	r0, #9
 8000bd4:	f7ff fce4 	bl	80005a0 <prepareSaraMeasurement>
    sendToESP(SaraMeasurements);
 8000bd8:	4847      	ldr	r0, [pc, #284]	; (8000cf8 <StartDefaultTask+0x2b8>)
 8000bda:	f7ff ff0d 	bl	80009f8 <sendToESP>

	SARA_ChangeTech('7');
 8000bde:	2037      	movs	r0, #55	; 0x37
 8000be0:	f7ff fbb2 	bl	8000348 <SARA_ChangeTech>


// **** NEMEUS STUFF ****
// **********************

    HAL_UART_Transmit(&huart3, getLoraLCR, strlen(getLoraLCR), 50);
 8000be4:	4845      	ldr	r0, [pc, #276]	; (8000cfc <StartDefaultTask+0x2bc>)
 8000be6:	f7ff fab3 	bl	8000150 <strlen>
 8000bea:	4603      	mov	r3, r0
 8000bec:	b29a      	uxth	r2, r3
 8000bee:	2332      	movs	r3, #50	; 0x32
 8000bf0:	4942      	ldr	r1, [pc, #264]	; (8000cfc <StartDefaultTask+0x2bc>)
 8000bf2:	4843      	ldr	r0, [pc, #268]	; (8000d00 <StartDefaultTask+0x2c0>)
 8000bf4:	f001 fcad 	bl	8002552 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart3, LoRaMessage, 69, 10000);
 8000bf8:	f107 019c 	add.w	r1, r7, #156	; 0x9c
 8000bfc:	f242 7310 	movw	r3, #10000	; 0x2710
 8000c00:	2245      	movs	r2, #69	; 0x45
 8000c02:	483f      	ldr	r0, [pc, #252]	; (8000d00 <StartDefaultTask+0x2c0>)
 8000c04:	f001 fd37 	bl	8002676 <HAL_UART_Receive>
    NEMEUS_Extract_Lora_Measurements(LoRaMessage);
 8000c08:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8000c0c:	4618      	mov	r0, r3
 8000c0e:	f7ff fd25 	bl	800065c <NEMEUS_Extract_Lora_Measurements>
    //sendToESP(currentLoraSignalQuality);
    // Get Coords:
    HAL_UART_Transmit(&huart1, getGPSCoords, strlen(getGPSCoords), 50);
 8000c12:	4837      	ldr	r0, [pc, #220]	; (8000cf0 <StartDefaultTask+0x2b0>)
 8000c14:	f7ff fa9c 	bl	8000150 <strlen>
 8000c18:	4603      	mov	r3, r0
 8000c1a:	b29a      	uxth	r2, r3
 8000c1c:	2332      	movs	r3, #50	; 0x32
 8000c1e:	4934      	ldr	r1, [pc, #208]	; (8000cf0 <StartDefaultTask+0x2b0>)
 8000c20:	482f      	ldr	r0, [pc, #188]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000c22:	f001 fc96 	bl	8002552 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
 8000c26:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000c2a:	2250      	movs	r2, #80	; 0x50
 8000c2c:	4931      	ldr	r1, [pc, #196]	; (8000cf4 <StartDefaultTask+0x2b4>)
 8000c2e:	482c      	ldr	r0, [pc, #176]	; (8000ce0 <StartDefaultTask+0x2a0>)
 8000c30:	f001 fd21 	bl	8002676 <HAL_UART_Receive>

    //sendToESP(currentGPSCoords);
    osDelay(500);
 8000c34:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000c38:	f001 fefe 	bl	8002a38 <osDelay>


    NEMEUS_Prepare_Lora_Measurements();
 8000c3c:	f7ff fd42 	bl	80006c4 <NEMEUS_Prepare_Lora_Measurements>

    sendToESP(loraMeasurements);
 8000c40:	4830      	ldr	r0, [pc, #192]	; (8000d04 <StartDefaultTask+0x2c4>)
 8000c42:	f7ff fed9 	bl	80009f8 <sendToESP>
    sendToESP(currentGPSCoords);
*/

	// BARE SÅ TTL OUTPUT ER LIDT PÆNERE!!!!
	//HAL_UART_Transmit(&huart2, loopDone, strlen(loopDone), 50);
    HAL_UART_Transmit(&huart2, crlf, strlen(crlf), 50);
 8000c46:	2332      	movs	r3, #50	; 0x32
 8000c48:	2202      	movs	r2, #2
 8000c4a:	492f      	ldr	r1, [pc, #188]	; (8000d08 <StartDefaultTask+0x2c8>)
 8000c4c:	482f      	ldr	r0, [pc, #188]	; (8000d0c <StartDefaultTask+0x2cc>)
 8000c4e:	f001 fc80 	bl	8002552 <HAL_UART_Transmit>

    //osDelay(1000);
    //nemeus_Power_Cycle();

	osDelay(50);
 8000c52:	2032      	movs	r0, #50	; 0x32
 8000c54:	f001 fef0 	bl	8002a38 <osDelay>
    memset(saraMSG,'\0', 69);
 8000c58:	f107 030c 	add.w	r3, r7, #12
 8000c5c:	2245      	movs	r2, #69	; 0x45
 8000c5e:	2100      	movs	r1, #0
 8000c60:	4618      	mov	r0, r3
 8000c62:	f003 f88d 	bl	8003d80 <memset>
	memset(SigFoxMessage, '\0', 69);
 8000c66:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8000c6a:	2245      	movs	r2, #69	; 0x45
 8000c6c:	2100      	movs	r1, #0
 8000c6e:	4618      	mov	r0, r3
 8000c70:	f003 f886 	bl	8003d80 <memset>
	memset(LoRaMessage, '\0', 69);
 8000c74:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8000c78:	2245      	movs	r2, #69	; 0x45
 8000c7a:	2100      	movs	r1, #0
 8000c7c:	4618      	mov	r0, r3
 8000c7e:	f003 f87f 	bl	8003d80 <memset>
	memset(currentGPSCoords,'\0',80);
 8000c82:	2250      	movs	r2, #80	; 0x50
 8000c84:	2100      	movs	r1, #0
 8000c86:	481b      	ldr	r0, [pc, #108]	; (8000cf4 <StartDefaultTask+0x2b4>)
 8000c88:	f003 f87a 	bl	8003d80 <memset>
	memset(currentLoraSignalQuality,'\0',69);
 8000c8c:	2245      	movs	r2, #69	; 0x45
 8000c8e:	2100      	movs	r1, #0
 8000c90:	481f      	ldr	r0, [pc, #124]	; (8000d10 <StartDefaultTask+0x2d0>)
 8000c92:	f003 f875 	bl	8003d80 <memset>
	memset(loraMeasurements,'\0',128);
 8000c96:	2280      	movs	r2, #128	; 0x80
 8000c98:	2100      	movs	r1, #0
 8000c9a:	481a      	ldr	r0, [pc, #104]	; (8000d04 <StartDefaultTask+0x2c4>)
 8000c9c:	f003 f870 	bl	8003d80 <memset>
	memset(sigfoxMeasurements,'\0',128);
 8000ca0:	2280      	movs	r2, #128	; 0x80
 8000ca2:	2100      	movs	r1, #0
 8000ca4:	481b      	ldr	r0, [pc, #108]	; (8000d14 <StartDefaultTask+0x2d4>)
 8000ca6:	f003 f86b 	bl	8003d80 <memset>
	memset(sigfoxSend,'\0',30);
 8000caa:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8000cae:	221e      	movs	r2, #30
 8000cb0:	2100      	movs	r1, #0
 8000cb2:	4618      	mov	r0, r3
 8000cb4:	f003 f864 	bl	8003d80 <memset>
	sigFoxSeq++;
 8000cb8:	4b17      	ldr	r3, [pc, #92]	; (8000d18 <StartDefaultTask+0x2d8>)
 8000cba:	681b      	ldr	r3, [r3, #0]
 8000cbc:	3301      	adds	r3, #1
 8000cbe:	4a16      	ldr	r2, [pc, #88]	; (8000d18 <StartDefaultTask+0x2d8>)
 8000cc0:	6013      	str	r3, [r2, #0]
  {
 8000cc2:	e6f2      	b.n	8000aaa <StartDefaultTask+0x6a>
 8000cc4:	0800526c 	.word	0x0800526c
 8000cc8:	08005278 	.word	0x08005278
 8000ccc:	08005284 	.word	0x08005284
 8000cd0:	08005294 	.word	0x08005294
 8000cd4:	080052a0 	.word	0x080052a0
 8000cd8:	40011000 	.word	0x40011000
 8000cdc:	2000005c 	.word	0x2000005c
 8000ce0:	200012a8 	.word	0x200012a8
 8000ce4:	2000136c 	.word	0x2000136c
 8000ce8:	20000050 	.word	0x20000050
 8000cec:	20001500 	.word	0x20001500
 8000cf0:	200000b4 	.word	0x200000b4
 8000cf4:	20001554 	.word	0x20001554
 8000cf8:	200012ec 	.word	0x200012ec
 8000cfc:	20000098 	.word	0x20000098
 8000d00:	20001190 	.word	0x20001190
 8000d04:	200013b4 	.word	0x200013b4
 8000d08:	080052c0 	.word	0x080052c0
 8000d0c:	200014c0 	.word	0x200014c0
 8000d10:	2000125c 	.word	0x2000125c
 8000d14:	20001440 	.word	0x20001440
 8000d18:	200003b0 	.word	0x200003b0

08000d1c <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000d1c:	b580      	push	{r7, lr}
 8000d1e:	b082      	sub	sp, #8
 8000d20:	af00      	add	r7, sp, #0
 8000d22:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	681b      	ldr	r3, [r3, #0]
 8000d28:	4a04      	ldr	r2, [pc, #16]	; (8000d3c <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000d2a:	4293      	cmp	r3, r2
 8000d2c:	d101      	bne.n	8000d32 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000d2e:	f000 fa7d 	bl	800122c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000d32:	bf00      	nop
 8000d34:	3708      	adds	r7, #8
 8000d36:	46bd      	mov	sp, r7
 8000d38:	bd80      	pop	{r7, pc}
 8000d3a:	bf00      	nop
 8000d3c:	40012c00 	.word	0x40012c00

08000d40 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d40:	b480      	push	{r7}
 8000d42:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d44:	b672      	cpsid	i
}
 8000d46:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d48:	e7fe      	b.n	8000d48 <Error_Handler+0x8>
	...

08000d4c <HAL_MspInit>:
 8000d4c:	b580      	push	{r7, lr}
 8000d4e:	b084      	sub	sp, #16
 8000d50:	af00      	add	r7, sp, #0
 8000d52:	4b18      	ldr	r3, [pc, #96]	; (8000db4 <HAL_MspInit+0x68>)
 8000d54:	699b      	ldr	r3, [r3, #24]
 8000d56:	4a17      	ldr	r2, [pc, #92]	; (8000db4 <HAL_MspInit+0x68>)
 8000d58:	f043 0301 	orr.w	r3, r3, #1
 8000d5c:	6193      	str	r3, [r2, #24]
 8000d5e:	4b15      	ldr	r3, [pc, #84]	; (8000db4 <HAL_MspInit+0x68>)
 8000d60:	699b      	ldr	r3, [r3, #24]
 8000d62:	f003 0301 	and.w	r3, r3, #1
 8000d66:	60bb      	str	r3, [r7, #8]
 8000d68:	68bb      	ldr	r3, [r7, #8]
 8000d6a:	4b12      	ldr	r3, [pc, #72]	; (8000db4 <HAL_MspInit+0x68>)
 8000d6c:	69db      	ldr	r3, [r3, #28]
 8000d6e:	4a11      	ldr	r2, [pc, #68]	; (8000db4 <HAL_MspInit+0x68>)
 8000d70:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000d74:	61d3      	str	r3, [r2, #28]
 8000d76:	4b0f      	ldr	r3, [pc, #60]	; (8000db4 <HAL_MspInit+0x68>)
 8000d78:	69db      	ldr	r3, [r3, #28]
 8000d7a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000d7e:	607b      	str	r3, [r7, #4]
 8000d80:	687b      	ldr	r3, [r7, #4]
 8000d82:	2200      	movs	r2, #0
 8000d84:	210f      	movs	r1, #15
 8000d86:	f06f 0001 	mvn.w	r0, #1
 8000d8a:	f000 fb20 	bl	80013ce <HAL_NVIC_SetPriority>
 8000d8e:	4b0a      	ldr	r3, [pc, #40]	; (8000db8 <HAL_MspInit+0x6c>)
 8000d90:	685b      	ldr	r3, [r3, #4]
 8000d92:	60fb      	str	r3, [r7, #12]
 8000d94:	68fb      	ldr	r3, [r7, #12]
 8000d96:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000d9a:	60fb      	str	r3, [r7, #12]
 8000d9c:	68fb      	ldr	r3, [r7, #12]
 8000d9e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000da2:	60fb      	str	r3, [r7, #12]
 8000da4:	4a04      	ldr	r2, [pc, #16]	; (8000db8 <HAL_MspInit+0x6c>)
 8000da6:	68fb      	ldr	r3, [r7, #12]
 8000da8:	6053      	str	r3, [r2, #4]
 8000daa:	bf00      	nop
 8000dac:	3710      	adds	r7, #16
 8000dae:	46bd      	mov	sp, r7
 8000db0:	bd80      	pop	{r7, pc}
 8000db2:	bf00      	nop
 8000db4:	40021000 	.word	0x40021000
 8000db8:	40010000 	.word	0x40010000

08000dbc <HAL_UART_MspInit>:
 8000dbc:	b580      	push	{r7, lr}
 8000dbe:	b08c      	sub	sp, #48	; 0x30
 8000dc0:	af00      	add	r7, sp, #0
 8000dc2:	6078      	str	r0, [r7, #4]
 8000dc4:	f107 0320 	add.w	r3, r7, #32
 8000dc8:	2200      	movs	r2, #0
 8000dca:	601a      	str	r2, [r3, #0]
 8000dcc:	605a      	str	r2, [r3, #4]
 8000dce:	609a      	str	r2, [r3, #8]
 8000dd0:	60da      	str	r2, [r3, #12]
 8000dd2:	687b      	ldr	r3, [r7, #4]
 8000dd4:	681b      	ldr	r3, [r3, #0]
 8000dd6:	4a53      	ldr	r2, [pc, #332]	; (8000f24 <HAL_UART_MspInit+0x168>)
 8000dd8:	4293      	cmp	r3, r2
 8000dda:	d132      	bne.n	8000e42 <HAL_UART_MspInit+0x86>
 8000ddc:	4b52      	ldr	r3, [pc, #328]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000dde:	699b      	ldr	r3, [r3, #24]
 8000de0:	4a51      	ldr	r2, [pc, #324]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000de2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000de6:	6193      	str	r3, [r2, #24]
 8000de8:	4b4f      	ldr	r3, [pc, #316]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000dea:	699b      	ldr	r3, [r3, #24]
 8000dec:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000df0:	61fb      	str	r3, [r7, #28]
 8000df2:	69fb      	ldr	r3, [r7, #28]
 8000df4:	4b4c      	ldr	r3, [pc, #304]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000df6:	699b      	ldr	r3, [r3, #24]
 8000df8:	4a4b      	ldr	r2, [pc, #300]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000dfa:	f043 0304 	orr.w	r3, r3, #4
 8000dfe:	6193      	str	r3, [r2, #24]
 8000e00:	4b49      	ldr	r3, [pc, #292]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000e02:	699b      	ldr	r3, [r3, #24]
 8000e04:	f003 0304 	and.w	r3, r3, #4
 8000e08:	61bb      	str	r3, [r7, #24]
 8000e0a:	69bb      	ldr	r3, [r7, #24]
 8000e0c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000e10:	623b      	str	r3, [r7, #32]
 8000e12:	2302      	movs	r3, #2
 8000e14:	627b      	str	r3, [r7, #36]	; 0x24
 8000e16:	2303      	movs	r3, #3
 8000e18:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000e1a:	f107 0320 	add.w	r3, r7, #32
 8000e1e:	4619      	mov	r1, r3
 8000e20:	4842      	ldr	r0, [pc, #264]	; (8000f2c <HAL_UART_MspInit+0x170>)
 8000e22:	f000 faff 	bl	8001424 <HAL_GPIO_Init>
 8000e26:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000e2a:	623b      	str	r3, [r7, #32]
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	627b      	str	r3, [r7, #36]	; 0x24
 8000e30:	2300      	movs	r3, #0
 8000e32:	62bb      	str	r3, [r7, #40]	; 0x28
 8000e34:	f107 0320 	add.w	r3, r7, #32
 8000e38:	4619      	mov	r1, r3
 8000e3a:	483c      	ldr	r0, [pc, #240]	; (8000f2c <HAL_UART_MspInit+0x170>)
 8000e3c:	f000 faf2 	bl	8001424 <HAL_GPIO_Init>
 8000e40:	e06c      	b.n	8000f1c <HAL_UART_MspInit+0x160>
 8000e42:	687b      	ldr	r3, [r7, #4]
 8000e44:	681b      	ldr	r3, [r3, #0]
 8000e46:	4a3a      	ldr	r2, [pc, #232]	; (8000f30 <HAL_UART_MspInit+0x174>)
 8000e48:	4293      	cmp	r3, r2
 8000e4a:	d130      	bne.n	8000eae <HAL_UART_MspInit+0xf2>
 8000e4c:	4b36      	ldr	r3, [pc, #216]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000e4e:	69db      	ldr	r3, [r3, #28]
 8000e50:	4a35      	ldr	r2, [pc, #212]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000e52:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000e56:	61d3      	str	r3, [r2, #28]
 8000e58:	4b33      	ldr	r3, [pc, #204]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000e5a:	69db      	ldr	r3, [r3, #28]
 8000e5c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000e60:	617b      	str	r3, [r7, #20]
 8000e62:	697b      	ldr	r3, [r7, #20]
 8000e64:	4b30      	ldr	r3, [pc, #192]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000e66:	699b      	ldr	r3, [r3, #24]
 8000e68:	4a2f      	ldr	r2, [pc, #188]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000e6a:	f043 0304 	orr.w	r3, r3, #4
 8000e6e:	6193      	str	r3, [r2, #24]
 8000e70:	4b2d      	ldr	r3, [pc, #180]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000e72:	699b      	ldr	r3, [r3, #24]
 8000e74:	f003 0304 	and.w	r3, r3, #4
 8000e78:	613b      	str	r3, [r7, #16]
 8000e7a:	693b      	ldr	r3, [r7, #16]
 8000e7c:	2304      	movs	r3, #4
 8000e7e:	623b      	str	r3, [r7, #32]
 8000e80:	2302      	movs	r3, #2
 8000e82:	627b      	str	r3, [r7, #36]	; 0x24
 8000e84:	2303      	movs	r3, #3
 8000e86:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000e88:	f107 0320 	add.w	r3, r7, #32
 8000e8c:	4619      	mov	r1, r3
 8000e8e:	4827      	ldr	r0, [pc, #156]	; (8000f2c <HAL_UART_MspInit+0x170>)
 8000e90:	f000 fac8 	bl	8001424 <HAL_GPIO_Init>
 8000e94:	2308      	movs	r3, #8
 8000e96:	623b      	str	r3, [r7, #32]
 8000e98:	2300      	movs	r3, #0
 8000e9a:	627b      	str	r3, [r7, #36]	; 0x24
 8000e9c:	2300      	movs	r3, #0
 8000e9e:	62bb      	str	r3, [r7, #40]	; 0x28
 8000ea0:	f107 0320 	add.w	r3, r7, #32
 8000ea4:	4619      	mov	r1, r3
 8000ea6:	4821      	ldr	r0, [pc, #132]	; (8000f2c <HAL_UART_MspInit+0x170>)
 8000ea8:	f000 fabc 	bl	8001424 <HAL_GPIO_Init>
 8000eac:	e036      	b.n	8000f1c <HAL_UART_MspInit+0x160>
 8000eae:	687b      	ldr	r3, [r7, #4]
 8000eb0:	681b      	ldr	r3, [r3, #0]
 8000eb2:	4a20      	ldr	r2, [pc, #128]	; (8000f34 <HAL_UART_MspInit+0x178>)
 8000eb4:	4293      	cmp	r3, r2
 8000eb6:	d131      	bne.n	8000f1c <HAL_UART_MspInit+0x160>
 8000eb8:	4b1b      	ldr	r3, [pc, #108]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000eba:	69db      	ldr	r3, [r3, #28]
 8000ebc:	4a1a      	ldr	r2, [pc, #104]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000ebe:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000ec2:	61d3      	str	r3, [r2, #28]
 8000ec4:	4b18      	ldr	r3, [pc, #96]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000ec6:	69db      	ldr	r3, [r3, #28]
 8000ec8:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8000ecc:	60fb      	str	r3, [r7, #12]
 8000ece:	68fb      	ldr	r3, [r7, #12]
 8000ed0:	4b15      	ldr	r3, [pc, #84]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000ed2:	699b      	ldr	r3, [r3, #24]
 8000ed4:	4a14      	ldr	r2, [pc, #80]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000ed6:	f043 0308 	orr.w	r3, r3, #8
 8000eda:	6193      	str	r3, [r2, #24]
 8000edc:	4b12      	ldr	r3, [pc, #72]	; (8000f28 <HAL_UART_MspInit+0x16c>)
 8000ede:	699b      	ldr	r3, [r3, #24]
 8000ee0:	f003 0308 	and.w	r3, r3, #8
 8000ee4:	60bb      	str	r3, [r7, #8]
 8000ee6:	68bb      	ldr	r3, [r7, #8]
 8000ee8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000eec:	623b      	str	r3, [r7, #32]
 8000eee:	2302      	movs	r3, #2
 8000ef0:	627b      	str	r3, [r7, #36]	; 0x24
 8000ef2:	2303      	movs	r3, #3
 8000ef4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000ef6:	f107 0320 	add.w	r3, r7, #32
 8000efa:	4619      	mov	r1, r3
 8000efc:	480e      	ldr	r0, [pc, #56]	; (8000f38 <HAL_UART_MspInit+0x17c>)
 8000efe:	f000 fa91 	bl	8001424 <HAL_GPIO_Init>
 8000f02:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000f06:	623b      	str	r3, [r7, #32]
 8000f08:	2300      	movs	r3, #0
 8000f0a:	627b      	str	r3, [r7, #36]	; 0x24
 8000f0c:	2300      	movs	r3, #0
 8000f0e:	62bb      	str	r3, [r7, #40]	; 0x28
 8000f10:	f107 0320 	add.w	r3, r7, #32
 8000f14:	4619      	mov	r1, r3
 8000f16:	4808      	ldr	r0, [pc, #32]	; (8000f38 <HAL_UART_MspInit+0x17c>)
 8000f18:	f000 fa84 	bl	8001424 <HAL_GPIO_Init>
 8000f1c:	bf00      	nop
 8000f1e:	3730      	adds	r7, #48	; 0x30
 8000f20:	46bd      	mov	sp, r7
 8000f22:	bd80      	pop	{r7, pc}
 8000f24:	40013800 	.word	0x40013800
 8000f28:	40021000 	.word	0x40021000
 8000f2c:	40010800 	.word	0x40010800
 8000f30:	40004400 	.word	0x40004400
 8000f34:	40004800 	.word	0x40004800
 8000f38:	40010c00 	.word	0x40010c00

08000f3c <HAL_InitTick>:
 8000f3c:	b580      	push	{r7, lr}
 8000f3e:	b08c      	sub	sp, #48	; 0x30
 8000f40:	af00      	add	r7, sp, #0
 8000f42:	6078      	str	r0, [r7, #4]
 8000f44:	2300      	movs	r3, #0
 8000f46:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000f48:	2300      	movs	r3, #0
 8000f4a:	62bb      	str	r3, [r7, #40]	; 0x28
 8000f4c:	2200      	movs	r2, #0
 8000f4e:	6879      	ldr	r1, [r7, #4]
 8000f50:	2019      	movs	r0, #25
 8000f52:	f000 fa3c 	bl	80013ce <HAL_NVIC_SetPriority>
 8000f56:	2019      	movs	r0, #25
 8000f58:	f000 fa55 	bl	8001406 <HAL_NVIC_EnableIRQ>
 8000f5c:	4b1e      	ldr	r3, [pc, #120]	; (8000fd8 <HAL_InitTick+0x9c>)
 8000f5e:	699b      	ldr	r3, [r3, #24]
 8000f60:	4a1d      	ldr	r2, [pc, #116]	; (8000fd8 <HAL_InitTick+0x9c>)
 8000f62:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000f66:	6193      	str	r3, [r2, #24]
 8000f68:	4b1b      	ldr	r3, [pc, #108]	; (8000fd8 <HAL_InitTick+0x9c>)
 8000f6a:	699b      	ldr	r3, [r3, #24]
 8000f6c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000f70:	60fb      	str	r3, [r7, #12]
 8000f72:	68fb      	ldr	r3, [r7, #12]
 8000f74:	f107 0210 	add.w	r2, r7, #16
 8000f78:	f107 0314 	add.w	r3, r7, #20
 8000f7c:	4611      	mov	r1, r2
 8000f7e:	4618      	mov	r0, r3
 8000f80:	f001 f802 	bl	8001f88 <HAL_RCC_GetClockConfig>
 8000f84:	f000 ffec 	bl	8001f60 <HAL_RCC_GetPCLK2Freq>
 8000f88:	62f8      	str	r0, [r7, #44]	; 0x2c
 8000f8a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000f8c:	4a13      	ldr	r2, [pc, #76]	; (8000fdc <HAL_InitTick+0xa0>)
 8000f8e:	fba2 2303 	umull	r2, r3, r2, r3
 8000f92:	0c9b      	lsrs	r3, r3, #18
 8000f94:	3b01      	subs	r3, #1
 8000f96:	62bb      	str	r3, [r7, #40]	; 0x28
 8000f98:	4b11      	ldr	r3, [pc, #68]	; (8000fe0 <HAL_InitTick+0xa4>)
 8000f9a:	4a12      	ldr	r2, [pc, #72]	; (8000fe4 <HAL_InitTick+0xa8>)
 8000f9c:	601a      	str	r2, [r3, #0]
 8000f9e:	4b10      	ldr	r3, [pc, #64]	; (8000fe0 <HAL_InitTick+0xa4>)
 8000fa0:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000fa4:	60da      	str	r2, [r3, #12]
 8000fa6:	4a0e      	ldr	r2, [pc, #56]	; (8000fe0 <HAL_InitTick+0xa4>)
 8000fa8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000faa:	6053      	str	r3, [r2, #4]
 8000fac:	4b0c      	ldr	r3, [pc, #48]	; (8000fe0 <HAL_InitTick+0xa4>)
 8000fae:	2200      	movs	r2, #0
 8000fb0:	611a      	str	r2, [r3, #16]
 8000fb2:	4b0b      	ldr	r3, [pc, #44]	; (8000fe0 <HAL_InitTick+0xa4>)
 8000fb4:	2200      	movs	r2, #0
 8000fb6:	609a      	str	r2, [r3, #8]
 8000fb8:	4809      	ldr	r0, [pc, #36]	; (8000fe0 <HAL_InitTick+0xa4>)
 8000fba:	f001 f833 	bl	8002024 <HAL_TIM_Base_Init>
 8000fbe:	4603      	mov	r3, r0
 8000fc0:	2b00      	cmp	r3, #0
 8000fc2:	d104      	bne.n	8000fce <HAL_InitTick+0x92>
 8000fc4:	4806      	ldr	r0, [pc, #24]	; (8000fe0 <HAL_InitTick+0xa4>)
 8000fc6:	f001 f885 	bl	80020d4 <HAL_TIM_Base_Start_IT>
 8000fca:	4603      	mov	r3, r0
 8000fcc:	e000      	b.n	8000fd0 <HAL_InitTick+0x94>
 8000fce:	2301      	movs	r3, #1
 8000fd0:	4618      	mov	r0, r3
 8000fd2:	3730      	adds	r7, #48	; 0x30
 8000fd4:	46bd      	mov	sp, r7
 8000fd6:	bd80      	pop	{r7, pc}
 8000fd8:	40021000 	.word	0x40021000
 8000fdc:	431bde83 	.word	0x431bde83
 8000fe0:	200015b0 	.word	0x200015b0
 8000fe4:	40012c00 	.word	0x40012c00

08000fe8 <NMI_Handler>:
 8000fe8:	b480      	push	{r7}
 8000fea:	af00      	add	r7, sp, #0
 8000fec:	e7fe      	b.n	8000fec <NMI_Handler+0x4>

08000fee <HardFault_Handler>:
 8000fee:	b480      	push	{r7}
 8000ff0:	af00      	add	r7, sp, #0
 8000ff2:	e7fe      	b.n	8000ff2 <HardFault_Handler+0x4>

08000ff4 <MemManage_Handler>:
 8000ff4:	b480      	push	{r7}
 8000ff6:	af00      	add	r7, sp, #0
 8000ff8:	e7fe      	b.n	8000ff8 <MemManage_Handler+0x4>

08000ffa <BusFault_Handler>:
 8000ffa:	b480      	push	{r7}
 8000ffc:	af00      	add	r7, sp, #0
 8000ffe:	e7fe      	b.n	8000ffe <BusFault_Handler+0x4>

08001000 <UsageFault_Handler>:
 8001000:	b480      	push	{r7}
 8001002:	af00      	add	r7, sp, #0
 8001004:	e7fe      	b.n	8001004 <UsageFault_Handler+0x4>

08001006 <DebugMon_Handler>:
 8001006:	b480      	push	{r7}
 8001008:	af00      	add	r7, sp, #0
 800100a:	bf00      	nop
 800100c:	46bd      	mov	sp, r7
 800100e:	bc80      	pop	{r7}
 8001010:	4770      	bx	lr
	...

08001014 <TIM1_UP_IRQHandler>:
 8001014:	b580      	push	{r7, lr}
 8001016:	af00      	add	r7, sp, #0
 8001018:	4802      	ldr	r0, [pc, #8]	; (8001024 <TIM1_UP_IRQHandler+0x10>)
 800101a:	f001 f8ad 	bl	8002178 <HAL_TIM_IRQHandler>
 800101e:	bf00      	nop
 8001020:	bd80      	pop	{r7, pc}
 8001022:	bf00      	nop
 8001024:	200015b0 	.word	0x200015b0

08001028 <_getpid>:
 8001028:	b480      	push	{r7}
 800102a:	af00      	add	r7, sp, #0
 800102c:	2301      	movs	r3, #1
 800102e:	4618      	mov	r0, r3
 8001030:	46bd      	mov	sp, r7
 8001032:	bc80      	pop	{r7}
 8001034:	4770      	bx	lr

08001036 <_kill>:
 8001036:	b580      	push	{r7, lr}
 8001038:	b082      	sub	sp, #8
 800103a:	af00      	add	r7, sp, #0
 800103c:	6078      	str	r0, [r7, #4]
 800103e:	6039      	str	r1, [r7, #0]
 8001040:	f002 fe66 	bl	8003d10 <__errno>
 8001044:	4603      	mov	r3, r0
 8001046:	2216      	movs	r2, #22
 8001048:	601a      	str	r2, [r3, #0]
 800104a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800104e:	4618      	mov	r0, r3
 8001050:	3708      	adds	r7, #8
 8001052:	46bd      	mov	sp, r7
 8001054:	bd80      	pop	{r7, pc}

08001056 <_exit>:
 8001056:	b580      	push	{r7, lr}
 8001058:	b082      	sub	sp, #8
 800105a:	af00      	add	r7, sp, #0
 800105c:	6078      	str	r0, [r7, #4]
 800105e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001062:	6878      	ldr	r0, [r7, #4]
 8001064:	f7ff ffe7 	bl	8001036 <_kill>
 8001068:	e7fe      	b.n	8001068 <_exit+0x12>

0800106a <_read>:
 800106a:	b580      	push	{r7, lr}
 800106c:	b086      	sub	sp, #24
 800106e:	af00      	add	r7, sp, #0
 8001070:	60f8      	str	r0, [r7, #12]
 8001072:	60b9      	str	r1, [r7, #8]
 8001074:	607a      	str	r2, [r7, #4]
 8001076:	2300      	movs	r3, #0
 8001078:	617b      	str	r3, [r7, #20]
 800107a:	e00a      	b.n	8001092 <_read+0x28>
 800107c:	f3af 8000 	nop.w
 8001080:	4601      	mov	r1, r0
 8001082:	68bb      	ldr	r3, [r7, #8]
 8001084:	1c5a      	adds	r2, r3, #1
 8001086:	60ba      	str	r2, [r7, #8]
 8001088:	b2ca      	uxtb	r2, r1
 800108a:	701a      	strb	r2, [r3, #0]
 800108c:	697b      	ldr	r3, [r7, #20]
 800108e:	3301      	adds	r3, #1
 8001090:	617b      	str	r3, [r7, #20]
 8001092:	697a      	ldr	r2, [r7, #20]
 8001094:	687b      	ldr	r3, [r7, #4]
 8001096:	429a      	cmp	r2, r3
 8001098:	dbf0      	blt.n	800107c <_read+0x12>
 800109a:	687b      	ldr	r3, [r7, #4]
 800109c:	4618      	mov	r0, r3
 800109e:	3718      	adds	r7, #24
 80010a0:	46bd      	mov	sp, r7
 80010a2:	bd80      	pop	{r7, pc}

080010a4 <_write>:
 80010a4:	b580      	push	{r7, lr}
 80010a6:	b086      	sub	sp, #24
 80010a8:	af00      	add	r7, sp, #0
 80010aa:	60f8      	str	r0, [r7, #12]
 80010ac:	60b9      	str	r1, [r7, #8]
 80010ae:	607a      	str	r2, [r7, #4]
 80010b0:	2300      	movs	r3, #0
 80010b2:	617b      	str	r3, [r7, #20]
 80010b4:	e009      	b.n	80010ca <_write+0x26>
 80010b6:	68bb      	ldr	r3, [r7, #8]
 80010b8:	1c5a      	adds	r2, r3, #1
 80010ba:	60ba      	str	r2, [r7, #8]
 80010bc:	781b      	ldrb	r3, [r3, #0]
 80010be:	4618      	mov	r0, r3
 80010c0:	f3af 8000 	nop.w
 80010c4:	697b      	ldr	r3, [r7, #20]
 80010c6:	3301      	adds	r3, #1
 80010c8:	617b      	str	r3, [r7, #20]
 80010ca:	697a      	ldr	r2, [r7, #20]
 80010cc:	687b      	ldr	r3, [r7, #4]
 80010ce:	429a      	cmp	r2, r3
 80010d0:	dbf1      	blt.n	80010b6 <_write+0x12>
 80010d2:	687b      	ldr	r3, [r7, #4]
 80010d4:	4618      	mov	r0, r3
 80010d6:	3718      	adds	r7, #24
 80010d8:	46bd      	mov	sp, r7
 80010da:	bd80      	pop	{r7, pc}

080010dc <_close>:
 80010dc:	b480      	push	{r7}
 80010de:	b083      	sub	sp, #12
 80010e0:	af00      	add	r7, sp, #0
 80010e2:	6078      	str	r0, [r7, #4]
 80010e4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80010e8:	4618      	mov	r0, r3
 80010ea:	370c      	adds	r7, #12
 80010ec:	46bd      	mov	sp, r7
 80010ee:	bc80      	pop	{r7}
 80010f0:	4770      	bx	lr

080010f2 <_fstat>:
 80010f2:	b480      	push	{r7}
 80010f4:	b083      	sub	sp, #12
 80010f6:	af00      	add	r7, sp, #0
 80010f8:	6078      	str	r0, [r7, #4]
 80010fa:	6039      	str	r1, [r7, #0]
 80010fc:	683b      	ldr	r3, [r7, #0]
 80010fe:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001102:	605a      	str	r2, [r3, #4]
 8001104:	2300      	movs	r3, #0
 8001106:	4618      	mov	r0, r3
 8001108:	370c      	adds	r7, #12
 800110a:	46bd      	mov	sp, r7
 800110c:	bc80      	pop	{r7}
 800110e:	4770      	bx	lr

08001110 <_isatty>:
 8001110:	b480      	push	{r7}
 8001112:	b083      	sub	sp, #12
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]
 8001118:	2301      	movs	r3, #1
 800111a:	4618      	mov	r0, r3
 800111c:	370c      	adds	r7, #12
 800111e:	46bd      	mov	sp, r7
 8001120:	bc80      	pop	{r7}
 8001122:	4770      	bx	lr

08001124 <_lseek>:
 8001124:	b480      	push	{r7}
 8001126:	b085      	sub	sp, #20
 8001128:	af00      	add	r7, sp, #0
 800112a:	60f8      	str	r0, [r7, #12]
 800112c:	60b9      	str	r1, [r7, #8]
 800112e:	607a      	str	r2, [r7, #4]
 8001130:	2300      	movs	r3, #0
 8001132:	4618      	mov	r0, r3
 8001134:	3714      	adds	r7, #20
 8001136:	46bd      	mov	sp, r7
 8001138:	bc80      	pop	{r7}
 800113a:	4770      	bx	lr

0800113c <_sbrk>:
 800113c:	b580      	push	{r7, lr}
 800113e:	b086      	sub	sp, #24
 8001140:	af00      	add	r7, sp, #0
 8001142:	6078      	str	r0, [r7, #4]
 8001144:	4a14      	ldr	r2, [pc, #80]	; (8001198 <_sbrk+0x5c>)
 8001146:	4b15      	ldr	r3, [pc, #84]	; (800119c <_sbrk+0x60>)
 8001148:	1ad3      	subs	r3, r2, r3
 800114a:	617b      	str	r3, [r7, #20]
 800114c:	697b      	ldr	r3, [r7, #20]
 800114e:	613b      	str	r3, [r7, #16]
 8001150:	4b13      	ldr	r3, [pc, #76]	; (80011a0 <_sbrk+0x64>)
 8001152:	681b      	ldr	r3, [r3, #0]
 8001154:	2b00      	cmp	r3, #0
 8001156:	d102      	bne.n	800115e <_sbrk+0x22>
 8001158:	4b11      	ldr	r3, [pc, #68]	; (80011a0 <_sbrk+0x64>)
 800115a:	4a12      	ldr	r2, [pc, #72]	; (80011a4 <_sbrk+0x68>)
 800115c:	601a      	str	r2, [r3, #0]
 800115e:	4b10      	ldr	r3, [pc, #64]	; (80011a0 <_sbrk+0x64>)
 8001160:	681a      	ldr	r2, [r3, #0]
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	4413      	add	r3, r2
 8001166:	693a      	ldr	r2, [r7, #16]
 8001168:	429a      	cmp	r2, r3
 800116a:	d207      	bcs.n	800117c <_sbrk+0x40>
 800116c:	f002 fdd0 	bl	8003d10 <__errno>
 8001170:	4603      	mov	r3, r0
 8001172:	220c      	movs	r2, #12
 8001174:	601a      	str	r2, [r3, #0]
 8001176:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800117a:	e009      	b.n	8001190 <_sbrk+0x54>
 800117c:	4b08      	ldr	r3, [pc, #32]	; (80011a0 <_sbrk+0x64>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	60fb      	str	r3, [r7, #12]
 8001182:	4b07      	ldr	r3, [pc, #28]	; (80011a0 <_sbrk+0x64>)
 8001184:	681a      	ldr	r2, [r3, #0]
 8001186:	687b      	ldr	r3, [r7, #4]
 8001188:	4413      	add	r3, r2
 800118a:	4a05      	ldr	r2, [pc, #20]	; (80011a0 <_sbrk+0x64>)
 800118c:	6013      	str	r3, [r2, #0]
 800118e:	68fb      	ldr	r3, [r7, #12]
 8001190:	4618      	mov	r0, r3
 8001192:	3718      	adds	r7, #24
 8001194:	46bd      	mov	sp, r7
 8001196:	bd80      	pop	{r7, pc}
 8001198:	20005000 	.word	0x20005000
 800119c:	00000400 	.word	0x00000400
 80011a0:	200003b4 	.word	0x200003b4
 80011a4:	20001610 	.word	0x20001610

080011a8 <SystemInit>:
 80011a8:	b480      	push	{r7}
 80011aa:	af00      	add	r7, sp, #0
 80011ac:	bf00      	nop
 80011ae:	46bd      	mov	sp, r7
 80011b0:	bc80      	pop	{r7}
 80011b2:	4770      	bx	lr

080011b4 <Reset_Handler>:
 80011b4:	2100      	movs	r1, #0
 80011b6:	e003      	b.n	80011c0 <LoopCopyDataInit>

080011b8 <CopyDataInit>:
 80011b8:	4b0b      	ldr	r3, [pc, #44]	; (80011e8 <LoopFillZerobss+0x14>)
 80011ba:	585b      	ldr	r3, [r3, r1]
 80011bc:	5043      	str	r3, [r0, r1]
 80011be:	3104      	adds	r1, #4

080011c0 <LoopCopyDataInit>:
 80011c0:	480a      	ldr	r0, [pc, #40]	; (80011ec <LoopFillZerobss+0x18>)
 80011c2:	4b0b      	ldr	r3, [pc, #44]	; (80011f0 <LoopFillZerobss+0x1c>)
 80011c4:	1842      	adds	r2, r0, r1
 80011c6:	429a      	cmp	r2, r3
 80011c8:	d3f6      	bcc.n	80011b8 <CopyDataInit>
 80011ca:	4a0a      	ldr	r2, [pc, #40]	; (80011f4 <LoopFillZerobss+0x20>)
 80011cc:	e002      	b.n	80011d4 <LoopFillZerobss>

080011ce <FillZerobss>:
 80011ce:	2300      	movs	r3, #0
 80011d0:	f842 3b04 	str.w	r3, [r2], #4

080011d4 <LoopFillZerobss>:
 80011d4:	4b08      	ldr	r3, [pc, #32]	; (80011f8 <LoopFillZerobss+0x24>)
 80011d6:	429a      	cmp	r2, r3
 80011d8:	d3f9      	bcc.n	80011ce <FillZerobss>
 80011da:	f7ff ffe5 	bl	80011a8 <SystemInit>
 80011de:	f002 fd9d 	bl	8003d1c <__libc_init_array>
 80011e2:	f7ff fa8d 	bl	8000700 <main>
 80011e6:	4770      	bx	lr
 80011e8:	08005430 	.word	0x08005430
 80011ec:	20000000 	.word	0x20000000
 80011f0:	20000140 	.word	0x20000140
 80011f4:	20000140 	.word	0x20000140
 80011f8:	2000160c 	.word	0x2000160c

080011fc <ADC1_2_IRQHandler>:
 80011fc:	e7fe      	b.n	80011fc <ADC1_2_IRQHandler>
	...

08001200 <HAL_Init>:
 8001200:	b580      	push	{r7, lr}
 8001202:	af00      	add	r7, sp, #0
 8001204:	4b08      	ldr	r3, [pc, #32]	; (8001228 <HAL_Init+0x28>)
 8001206:	681b      	ldr	r3, [r3, #0]
 8001208:	4a07      	ldr	r2, [pc, #28]	; (8001228 <HAL_Init+0x28>)
 800120a:	f043 0310 	orr.w	r3, r3, #16
 800120e:	6013      	str	r3, [r2, #0]
 8001210:	2003      	movs	r0, #3
 8001212:	f000 f8d1 	bl	80013b8 <HAL_NVIC_SetPriorityGrouping>
 8001216:	2000      	movs	r0, #0
 8001218:	f7ff fe90 	bl	8000f3c <HAL_InitTick>
 800121c:	f7ff fd96 	bl	8000d4c <HAL_MspInit>
 8001220:	2300      	movs	r3, #0
 8001222:	4618      	mov	r0, r3
 8001224:	bd80      	pop	{r7, pc}
 8001226:	bf00      	nop
 8001228:	40022000 	.word	0x40022000

0800122c <HAL_IncTick>:
 800122c:	b480      	push	{r7}
 800122e:	af00      	add	r7, sp, #0
 8001230:	4b05      	ldr	r3, [pc, #20]	; (8001248 <HAL_IncTick+0x1c>)
 8001232:	781b      	ldrb	r3, [r3, #0]
 8001234:	461a      	mov	r2, r3
 8001236:	4b05      	ldr	r3, [pc, #20]	; (800124c <HAL_IncTick+0x20>)
 8001238:	681b      	ldr	r3, [r3, #0]
 800123a:	4413      	add	r3, r2
 800123c:	4a03      	ldr	r2, [pc, #12]	; (800124c <HAL_IncTick+0x20>)
 800123e:	6013      	str	r3, [r2, #0]
 8001240:	bf00      	nop
 8001242:	46bd      	mov	sp, r7
 8001244:	bc80      	pop	{r7}
 8001246:	4770      	bx	lr
 8001248:	200000d4 	.word	0x200000d4
 800124c:	200015f8 	.word	0x200015f8

08001250 <HAL_GetTick>:
 8001250:	b480      	push	{r7}
 8001252:	af00      	add	r7, sp, #0
 8001254:	4b02      	ldr	r3, [pc, #8]	; (8001260 <HAL_GetTick+0x10>)
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	4618      	mov	r0, r3
 800125a:	46bd      	mov	sp, r7
 800125c:	bc80      	pop	{r7}
 800125e:	4770      	bx	lr
 8001260:	200015f8 	.word	0x200015f8

08001264 <__NVIC_SetPriorityGrouping>:
 8001264:	b480      	push	{r7}
 8001266:	b085      	sub	sp, #20
 8001268:	af00      	add	r7, sp, #0
 800126a:	6078      	str	r0, [r7, #4]
 800126c:	687b      	ldr	r3, [r7, #4]
 800126e:	f003 0307 	and.w	r3, r3, #7
 8001272:	60fb      	str	r3, [r7, #12]
 8001274:	4b0c      	ldr	r3, [pc, #48]	; (80012a8 <__NVIC_SetPriorityGrouping+0x44>)
 8001276:	68db      	ldr	r3, [r3, #12]
 8001278:	60bb      	str	r3, [r7, #8]
 800127a:	68ba      	ldr	r2, [r7, #8]
 800127c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001280:	4013      	ands	r3, r2
 8001282:	60bb      	str	r3, [r7, #8]
 8001284:	68fb      	ldr	r3, [r7, #12]
 8001286:	021a      	lsls	r2, r3, #8
 8001288:	68bb      	ldr	r3, [r7, #8]
 800128a:	4313      	orrs	r3, r2
 800128c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001290:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001294:	60bb      	str	r3, [r7, #8]
 8001296:	4a04      	ldr	r2, [pc, #16]	; (80012a8 <__NVIC_SetPriorityGrouping+0x44>)
 8001298:	68bb      	ldr	r3, [r7, #8]
 800129a:	60d3      	str	r3, [r2, #12]
 800129c:	bf00      	nop
 800129e:	3714      	adds	r7, #20
 80012a0:	46bd      	mov	sp, r7
 80012a2:	bc80      	pop	{r7}
 80012a4:	4770      	bx	lr
 80012a6:	bf00      	nop
 80012a8:	e000ed00 	.word	0xe000ed00

080012ac <__NVIC_GetPriorityGrouping>:
 80012ac:	b480      	push	{r7}
 80012ae:	af00      	add	r7, sp, #0
 80012b0:	4b04      	ldr	r3, [pc, #16]	; (80012c4 <__NVIC_GetPriorityGrouping+0x18>)
 80012b2:	68db      	ldr	r3, [r3, #12]
 80012b4:	0a1b      	lsrs	r3, r3, #8
 80012b6:	f003 0307 	and.w	r3, r3, #7
 80012ba:	4618      	mov	r0, r3
 80012bc:	46bd      	mov	sp, r7
 80012be:	bc80      	pop	{r7}
 80012c0:	4770      	bx	lr
 80012c2:	bf00      	nop
 80012c4:	e000ed00 	.word	0xe000ed00

080012c8 <__NVIC_EnableIRQ>:
 80012c8:	b480      	push	{r7}
 80012ca:	b083      	sub	sp, #12
 80012cc:	af00      	add	r7, sp, #0
 80012ce:	4603      	mov	r3, r0
 80012d0:	71fb      	strb	r3, [r7, #7]
 80012d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012d6:	2b00      	cmp	r3, #0
 80012d8:	db0b      	blt.n	80012f2 <__NVIC_EnableIRQ+0x2a>
 80012da:	79fb      	ldrb	r3, [r7, #7]
 80012dc:	f003 021f 	and.w	r2, r3, #31
 80012e0:	4906      	ldr	r1, [pc, #24]	; (80012fc <__NVIC_EnableIRQ+0x34>)
 80012e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012e6:	095b      	lsrs	r3, r3, #5
 80012e8:	2001      	movs	r0, #1
 80012ea:	fa00 f202 	lsl.w	r2, r0, r2
 80012ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80012f2:	bf00      	nop
 80012f4:	370c      	adds	r7, #12
 80012f6:	46bd      	mov	sp, r7
 80012f8:	bc80      	pop	{r7}
 80012fa:	4770      	bx	lr
 80012fc:	e000e100 	.word	0xe000e100

08001300 <__NVIC_SetPriority>:
 8001300:	b480      	push	{r7}
 8001302:	b083      	sub	sp, #12
 8001304:	af00      	add	r7, sp, #0
 8001306:	4603      	mov	r3, r0
 8001308:	6039      	str	r1, [r7, #0]
 800130a:	71fb      	strb	r3, [r7, #7]
 800130c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001310:	2b00      	cmp	r3, #0
 8001312:	db0a      	blt.n	800132a <__NVIC_SetPriority+0x2a>
 8001314:	683b      	ldr	r3, [r7, #0]
 8001316:	b2da      	uxtb	r2, r3
 8001318:	490c      	ldr	r1, [pc, #48]	; (800134c <__NVIC_SetPriority+0x4c>)
 800131a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800131e:	0112      	lsls	r2, r2, #4
 8001320:	b2d2      	uxtb	r2, r2
 8001322:	440b      	add	r3, r1
 8001324:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001328:	e00a      	b.n	8001340 <__NVIC_SetPriority+0x40>
 800132a:	683b      	ldr	r3, [r7, #0]
 800132c:	b2da      	uxtb	r2, r3
 800132e:	4908      	ldr	r1, [pc, #32]	; (8001350 <__NVIC_SetPriority+0x50>)
 8001330:	79fb      	ldrb	r3, [r7, #7]
 8001332:	f003 030f 	and.w	r3, r3, #15
 8001336:	3b04      	subs	r3, #4
 8001338:	0112      	lsls	r2, r2, #4
 800133a:	b2d2      	uxtb	r2, r2
 800133c:	440b      	add	r3, r1
 800133e:	761a      	strb	r2, [r3, #24]
 8001340:	bf00      	nop
 8001342:	370c      	adds	r7, #12
 8001344:	46bd      	mov	sp, r7
 8001346:	bc80      	pop	{r7}
 8001348:	4770      	bx	lr
 800134a:	bf00      	nop
 800134c:	e000e100 	.word	0xe000e100
 8001350:	e000ed00 	.word	0xe000ed00

08001354 <NVIC_EncodePriority>:
 8001354:	b480      	push	{r7}
 8001356:	b089      	sub	sp, #36	; 0x24
 8001358:	af00      	add	r7, sp, #0
 800135a:	60f8      	str	r0, [r7, #12]
 800135c:	60b9      	str	r1, [r7, #8]
 800135e:	607a      	str	r2, [r7, #4]
 8001360:	68fb      	ldr	r3, [r7, #12]
 8001362:	f003 0307 	and.w	r3, r3, #7
 8001366:	61fb      	str	r3, [r7, #28]
 8001368:	69fb      	ldr	r3, [r7, #28]
 800136a:	f1c3 0307 	rsb	r3, r3, #7
 800136e:	2b04      	cmp	r3, #4
 8001370:	bf28      	it	cs
 8001372:	2304      	movcs	r3, #4
 8001374:	61bb      	str	r3, [r7, #24]
 8001376:	69fb      	ldr	r3, [r7, #28]
 8001378:	3304      	adds	r3, #4
 800137a:	2b06      	cmp	r3, #6
 800137c:	d902      	bls.n	8001384 <NVIC_EncodePriority+0x30>
 800137e:	69fb      	ldr	r3, [r7, #28]
 8001380:	3b03      	subs	r3, #3
 8001382:	e000      	b.n	8001386 <NVIC_EncodePriority+0x32>
 8001384:	2300      	movs	r3, #0
 8001386:	617b      	str	r3, [r7, #20]
 8001388:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800138c:	69bb      	ldr	r3, [r7, #24]
 800138e:	fa02 f303 	lsl.w	r3, r2, r3
 8001392:	43da      	mvns	r2, r3
 8001394:	68bb      	ldr	r3, [r7, #8]
 8001396:	401a      	ands	r2, r3
 8001398:	697b      	ldr	r3, [r7, #20]
 800139a:	409a      	lsls	r2, r3
 800139c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80013a0:	697b      	ldr	r3, [r7, #20]
 80013a2:	fa01 f303 	lsl.w	r3, r1, r3
 80013a6:	43d9      	mvns	r1, r3
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	400b      	ands	r3, r1
 80013ac:	4313      	orrs	r3, r2
 80013ae:	4618      	mov	r0, r3
 80013b0:	3724      	adds	r7, #36	; 0x24
 80013b2:	46bd      	mov	sp, r7
 80013b4:	bc80      	pop	{r7}
 80013b6:	4770      	bx	lr

080013b8 <HAL_NVIC_SetPriorityGrouping>:
 80013b8:	b580      	push	{r7, lr}
 80013ba:	b082      	sub	sp, #8
 80013bc:	af00      	add	r7, sp, #0
 80013be:	6078      	str	r0, [r7, #4]
 80013c0:	6878      	ldr	r0, [r7, #4]
 80013c2:	f7ff ff4f 	bl	8001264 <__NVIC_SetPriorityGrouping>
 80013c6:	bf00      	nop
 80013c8:	3708      	adds	r7, #8
 80013ca:	46bd      	mov	sp, r7
 80013cc:	bd80      	pop	{r7, pc}

080013ce <HAL_NVIC_SetPriority>:
 80013ce:	b580      	push	{r7, lr}
 80013d0:	b086      	sub	sp, #24
 80013d2:	af00      	add	r7, sp, #0
 80013d4:	4603      	mov	r3, r0
 80013d6:	60b9      	str	r1, [r7, #8]
 80013d8:	607a      	str	r2, [r7, #4]
 80013da:	73fb      	strb	r3, [r7, #15]
 80013dc:	2300      	movs	r3, #0
 80013de:	617b      	str	r3, [r7, #20]
 80013e0:	f7ff ff64 	bl	80012ac <__NVIC_GetPriorityGrouping>
 80013e4:	6178      	str	r0, [r7, #20]
 80013e6:	687a      	ldr	r2, [r7, #4]
 80013e8:	68b9      	ldr	r1, [r7, #8]
 80013ea:	6978      	ldr	r0, [r7, #20]
 80013ec:	f7ff ffb2 	bl	8001354 <NVIC_EncodePriority>
 80013f0:	4602      	mov	r2, r0
 80013f2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80013f6:	4611      	mov	r1, r2
 80013f8:	4618      	mov	r0, r3
 80013fa:	f7ff ff81 	bl	8001300 <__NVIC_SetPriority>
 80013fe:	bf00      	nop
 8001400:	3718      	adds	r7, #24
 8001402:	46bd      	mov	sp, r7
 8001404:	bd80      	pop	{r7, pc}

08001406 <HAL_NVIC_EnableIRQ>:
 8001406:	b580      	push	{r7, lr}
 8001408:	b082      	sub	sp, #8
 800140a:	af00      	add	r7, sp, #0
 800140c:	4603      	mov	r3, r0
 800140e:	71fb      	strb	r3, [r7, #7]
 8001410:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001414:	4618      	mov	r0, r3
 8001416:	f7ff ff57 	bl	80012c8 <__NVIC_EnableIRQ>
 800141a:	bf00      	nop
 800141c:	3708      	adds	r7, #8
 800141e:	46bd      	mov	sp, r7
 8001420:	bd80      	pop	{r7, pc}
	...

08001424 <HAL_GPIO_Init>:
 8001424:	b480      	push	{r7}
 8001426:	b08b      	sub	sp, #44	; 0x2c
 8001428:	af00      	add	r7, sp, #0
 800142a:	6078      	str	r0, [r7, #4]
 800142c:	6039      	str	r1, [r7, #0]
 800142e:	2300      	movs	r3, #0
 8001430:	627b      	str	r3, [r7, #36]	; 0x24
 8001432:	2300      	movs	r3, #0
 8001434:	623b      	str	r3, [r7, #32]
 8001436:	e169      	b.n	800170c <HAL_GPIO_Init+0x2e8>
 8001438:	2201      	movs	r2, #1
 800143a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800143c:	fa02 f303 	lsl.w	r3, r2, r3
 8001440:	61fb      	str	r3, [r7, #28]
 8001442:	683b      	ldr	r3, [r7, #0]
 8001444:	681b      	ldr	r3, [r3, #0]
 8001446:	69fa      	ldr	r2, [r7, #28]
 8001448:	4013      	ands	r3, r2
 800144a:	61bb      	str	r3, [r7, #24]
 800144c:	69ba      	ldr	r2, [r7, #24]
 800144e:	69fb      	ldr	r3, [r7, #28]
 8001450:	429a      	cmp	r2, r3
 8001452:	f040 8158 	bne.w	8001706 <HAL_GPIO_Init+0x2e2>
 8001456:	683b      	ldr	r3, [r7, #0]
 8001458:	685b      	ldr	r3, [r3, #4]
 800145a:	4a9a      	ldr	r2, [pc, #616]	; (80016c4 <HAL_GPIO_Init+0x2a0>)
 800145c:	4293      	cmp	r3, r2
 800145e:	d05e      	beq.n	800151e <HAL_GPIO_Init+0xfa>
 8001460:	4a98      	ldr	r2, [pc, #608]	; (80016c4 <HAL_GPIO_Init+0x2a0>)
 8001462:	4293      	cmp	r3, r2
 8001464:	d875      	bhi.n	8001552 <HAL_GPIO_Init+0x12e>
 8001466:	4a98      	ldr	r2, [pc, #608]	; (80016c8 <HAL_GPIO_Init+0x2a4>)
 8001468:	4293      	cmp	r3, r2
 800146a:	d058      	beq.n	800151e <HAL_GPIO_Init+0xfa>
 800146c:	4a96      	ldr	r2, [pc, #600]	; (80016c8 <HAL_GPIO_Init+0x2a4>)
 800146e:	4293      	cmp	r3, r2
 8001470:	d86f      	bhi.n	8001552 <HAL_GPIO_Init+0x12e>
 8001472:	4a96      	ldr	r2, [pc, #600]	; (80016cc <HAL_GPIO_Init+0x2a8>)
 8001474:	4293      	cmp	r3, r2
 8001476:	d052      	beq.n	800151e <HAL_GPIO_Init+0xfa>
 8001478:	4a94      	ldr	r2, [pc, #592]	; (80016cc <HAL_GPIO_Init+0x2a8>)
 800147a:	4293      	cmp	r3, r2
 800147c:	d869      	bhi.n	8001552 <HAL_GPIO_Init+0x12e>
 800147e:	4a94      	ldr	r2, [pc, #592]	; (80016d0 <HAL_GPIO_Init+0x2ac>)
 8001480:	4293      	cmp	r3, r2
 8001482:	d04c      	beq.n	800151e <HAL_GPIO_Init+0xfa>
 8001484:	4a92      	ldr	r2, [pc, #584]	; (80016d0 <HAL_GPIO_Init+0x2ac>)
 8001486:	4293      	cmp	r3, r2
 8001488:	d863      	bhi.n	8001552 <HAL_GPIO_Init+0x12e>
 800148a:	4a92      	ldr	r2, [pc, #584]	; (80016d4 <HAL_GPIO_Init+0x2b0>)
 800148c:	4293      	cmp	r3, r2
 800148e:	d046      	beq.n	800151e <HAL_GPIO_Init+0xfa>
 8001490:	4a90      	ldr	r2, [pc, #576]	; (80016d4 <HAL_GPIO_Init+0x2b0>)
 8001492:	4293      	cmp	r3, r2
 8001494:	d85d      	bhi.n	8001552 <HAL_GPIO_Init+0x12e>
 8001496:	2b12      	cmp	r3, #18
 8001498:	d82a      	bhi.n	80014f0 <HAL_GPIO_Init+0xcc>
 800149a:	2b12      	cmp	r3, #18
 800149c:	d859      	bhi.n	8001552 <HAL_GPIO_Init+0x12e>
 800149e:	a201      	add	r2, pc, #4	; (adr r2, 80014a4 <HAL_GPIO_Init+0x80>)
 80014a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80014a4:	0800151f 	.word	0x0800151f
 80014a8:	080014f9 	.word	0x080014f9
 80014ac:	0800150b 	.word	0x0800150b
 80014b0:	0800154d 	.word	0x0800154d
 80014b4:	08001553 	.word	0x08001553
 80014b8:	08001553 	.word	0x08001553
 80014bc:	08001553 	.word	0x08001553
 80014c0:	08001553 	.word	0x08001553
 80014c4:	08001553 	.word	0x08001553
 80014c8:	08001553 	.word	0x08001553
 80014cc:	08001553 	.word	0x08001553
 80014d0:	08001553 	.word	0x08001553
 80014d4:	08001553 	.word	0x08001553
 80014d8:	08001553 	.word	0x08001553
 80014dc:	08001553 	.word	0x08001553
 80014e0:	08001553 	.word	0x08001553
 80014e4:	08001553 	.word	0x08001553
 80014e8:	08001501 	.word	0x08001501
 80014ec:	08001515 	.word	0x08001515
 80014f0:	4a79      	ldr	r2, [pc, #484]	; (80016d8 <HAL_GPIO_Init+0x2b4>)
 80014f2:	4293      	cmp	r3, r2
 80014f4:	d013      	beq.n	800151e <HAL_GPIO_Init+0xfa>
 80014f6:	e02c      	b.n	8001552 <HAL_GPIO_Init+0x12e>
 80014f8:	683b      	ldr	r3, [r7, #0]
 80014fa:	68db      	ldr	r3, [r3, #12]
 80014fc:	623b      	str	r3, [r7, #32]
 80014fe:	e029      	b.n	8001554 <HAL_GPIO_Init+0x130>
 8001500:	683b      	ldr	r3, [r7, #0]
 8001502:	68db      	ldr	r3, [r3, #12]
 8001504:	3304      	adds	r3, #4
 8001506:	623b      	str	r3, [r7, #32]
 8001508:	e024      	b.n	8001554 <HAL_GPIO_Init+0x130>
 800150a:	683b      	ldr	r3, [r7, #0]
 800150c:	68db      	ldr	r3, [r3, #12]
 800150e:	3308      	adds	r3, #8
 8001510:	623b      	str	r3, [r7, #32]
 8001512:	e01f      	b.n	8001554 <HAL_GPIO_Init+0x130>
 8001514:	683b      	ldr	r3, [r7, #0]
 8001516:	68db      	ldr	r3, [r3, #12]
 8001518:	330c      	adds	r3, #12
 800151a:	623b      	str	r3, [r7, #32]
 800151c:	e01a      	b.n	8001554 <HAL_GPIO_Init+0x130>
 800151e:	683b      	ldr	r3, [r7, #0]
 8001520:	689b      	ldr	r3, [r3, #8]
 8001522:	2b00      	cmp	r3, #0
 8001524:	d102      	bne.n	800152c <HAL_GPIO_Init+0x108>
 8001526:	2304      	movs	r3, #4
 8001528:	623b      	str	r3, [r7, #32]
 800152a:	e013      	b.n	8001554 <HAL_GPIO_Init+0x130>
 800152c:	683b      	ldr	r3, [r7, #0]
 800152e:	689b      	ldr	r3, [r3, #8]
 8001530:	2b01      	cmp	r3, #1
 8001532:	d105      	bne.n	8001540 <HAL_GPIO_Init+0x11c>
 8001534:	2308      	movs	r3, #8
 8001536:	623b      	str	r3, [r7, #32]
 8001538:	687b      	ldr	r3, [r7, #4]
 800153a:	69fa      	ldr	r2, [r7, #28]
 800153c:	611a      	str	r2, [r3, #16]
 800153e:	e009      	b.n	8001554 <HAL_GPIO_Init+0x130>
 8001540:	2308      	movs	r3, #8
 8001542:	623b      	str	r3, [r7, #32]
 8001544:	687b      	ldr	r3, [r7, #4]
 8001546:	69fa      	ldr	r2, [r7, #28]
 8001548:	615a      	str	r2, [r3, #20]
 800154a:	e003      	b.n	8001554 <HAL_GPIO_Init+0x130>
 800154c:	2300      	movs	r3, #0
 800154e:	623b      	str	r3, [r7, #32]
 8001550:	e000      	b.n	8001554 <HAL_GPIO_Init+0x130>
 8001552:	bf00      	nop
 8001554:	69bb      	ldr	r3, [r7, #24]
 8001556:	2bff      	cmp	r3, #255	; 0xff
 8001558:	d801      	bhi.n	800155e <HAL_GPIO_Init+0x13a>
 800155a:	687b      	ldr	r3, [r7, #4]
 800155c:	e001      	b.n	8001562 <HAL_GPIO_Init+0x13e>
 800155e:	687b      	ldr	r3, [r7, #4]
 8001560:	3304      	adds	r3, #4
 8001562:	617b      	str	r3, [r7, #20]
 8001564:	69bb      	ldr	r3, [r7, #24]
 8001566:	2bff      	cmp	r3, #255	; 0xff
 8001568:	d802      	bhi.n	8001570 <HAL_GPIO_Init+0x14c>
 800156a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800156c:	009b      	lsls	r3, r3, #2
 800156e:	e002      	b.n	8001576 <HAL_GPIO_Init+0x152>
 8001570:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001572:	3b08      	subs	r3, #8
 8001574:	009b      	lsls	r3, r3, #2
 8001576:	613b      	str	r3, [r7, #16]
 8001578:	697b      	ldr	r3, [r7, #20]
 800157a:	681a      	ldr	r2, [r3, #0]
 800157c:	210f      	movs	r1, #15
 800157e:	693b      	ldr	r3, [r7, #16]
 8001580:	fa01 f303 	lsl.w	r3, r1, r3
 8001584:	43db      	mvns	r3, r3
 8001586:	401a      	ands	r2, r3
 8001588:	6a39      	ldr	r1, [r7, #32]
 800158a:	693b      	ldr	r3, [r7, #16]
 800158c:	fa01 f303 	lsl.w	r3, r1, r3
 8001590:	431a      	orrs	r2, r3
 8001592:	697b      	ldr	r3, [r7, #20]
 8001594:	601a      	str	r2, [r3, #0]
 8001596:	683b      	ldr	r3, [r7, #0]
 8001598:	685b      	ldr	r3, [r3, #4]
 800159a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800159e:	2b00      	cmp	r3, #0
 80015a0:	f000 80b1 	beq.w	8001706 <HAL_GPIO_Init+0x2e2>
 80015a4:	4b4d      	ldr	r3, [pc, #308]	; (80016dc <HAL_GPIO_Init+0x2b8>)
 80015a6:	699b      	ldr	r3, [r3, #24]
 80015a8:	4a4c      	ldr	r2, [pc, #304]	; (80016dc <HAL_GPIO_Init+0x2b8>)
 80015aa:	f043 0301 	orr.w	r3, r3, #1
 80015ae:	6193      	str	r3, [r2, #24]
 80015b0:	4b4a      	ldr	r3, [pc, #296]	; (80016dc <HAL_GPIO_Init+0x2b8>)
 80015b2:	699b      	ldr	r3, [r3, #24]
 80015b4:	f003 0301 	and.w	r3, r3, #1
 80015b8:	60bb      	str	r3, [r7, #8]
 80015ba:	68bb      	ldr	r3, [r7, #8]
 80015bc:	4a48      	ldr	r2, [pc, #288]	; (80016e0 <HAL_GPIO_Init+0x2bc>)
 80015be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015c0:	089b      	lsrs	r3, r3, #2
 80015c2:	3302      	adds	r3, #2
 80015c4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80015c8:	60fb      	str	r3, [r7, #12]
 80015ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015cc:	f003 0303 	and.w	r3, r3, #3
 80015d0:	009b      	lsls	r3, r3, #2
 80015d2:	220f      	movs	r2, #15
 80015d4:	fa02 f303 	lsl.w	r3, r2, r3
 80015d8:	43db      	mvns	r3, r3
 80015da:	68fa      	ldr	r2, [r7, #12]
 80015dc:	4013      	ands	r3, r2
 80015de:	60fb      	str	r3, [r7, #12]
 80015e0:	687b      	ldr	r3, [r7, #4]
 80015e2:	4a40      	ldr	r2, [pc, #256]	; (80016e4 <HAL_GPIO_Init+0x2c0>)
 80015e4:	4293      	cmp	r3, r2
 80015e6:	d013      	beq.n	8001610 <HAL_GPIO_Init+0x1ec>
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	4a3f      	ldr	r2, [pc, #252]	; (80016e8 <HAL_GPIO_Init+0x2c4>)
 80015ec:	4293      	cmp	r3, r2
 80015ee:	d00d      	beq.n	800160c <HAL_GPIO_Init+0x1e8>
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	4a3e      	ldr	r2, [pc, #248]	; (80016ec <HAL_GPIO_Init+0x2c8>)
 80015f4:	4293      	cmp	r3, r2
 80015f6:	d007      	beq.n	8001608 <HAL_GPIO_Init+0x1e4>
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	4a3d      	ldr	r2, [pc, #244]	; (80016f0 <HAL_GPIO_Init+0x2cc>)
 80015fc:	4293      	cmp	r3, r2
 80015fe:	d101      	bne.n	8001604 <HAL_GPIO_Init+0x1e0>
 8001600:	2303      	movs	r3, #3
 8001602:	e006      	b.n	8001612 <HAL_GPIO_Init+0x1ee>
 8001604:	2304      	movs	r3, #4
 8001606:	e004      	b.n	8001612 <HAL_GPIO_Init+0x1ee>
 8001608:	2302      	movs	r3, #2
 800160a:	e002      	b.n	8001612 <HAL_GPIO_Init+0x1ee>
 800160c:	2301      	movs	r3, #1
 800160e:	e000      	b.n	8001612 <HAL_GPIO_Init+0x1ee>
 8001610:	2300      	movs	r3, #0
 8001612:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001614:	f002 0203 	and.w	r2, r2, #3
 8001618:	0092      	lsls	r2, r2, #2
 800161a:	4093      	lsls	r3, r2
 800161c:	68fa      	ldr	r2, [r7, #12]
 800161e:	4313      	orrs	r3, r2
 8001620:	60fb      	str	r3, [r7, #12]
 8001622:	492f      	ldr	r1, [pc, #188]	; (80016e0 <HAL_GPIO_Init+0x2bc>)
 8001624:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001626:	089b      	lsrs	r3, r3, #2
 8001628:	3302      	adds	r3, #2
 800162a:	68fa      	ldr	r2, [r7, #12]
 800162c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001630:	683b      	ldr	r3, [r7, #0]
 8001632:	685b      	ldr	r3, [r3, #4]
 8001634:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001638:	2b00      	cmp	r3, #0
 800163a:	d006      	beq.n	800164a <HAL_GPIO_Init+0x226>
 800163c:	4b2d      	ldr	r3, [pc, #180]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 800163e:	681a      	ldr	r2, [r3, #0]
 8001640:	492c      	ldr	r1, [pc, #176]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 8001642:	69bb      	ldr	r3, [r7, #24]
 8001644:	4313      	orrs	r3, r2
 8001646:	600b      	str	r3, [r1, #0]
 8001648:	e006      	b.n	8001658 <HAL_GPIO_Init+0x234>
 800164a:	4b2a      	ldr	r3, [pc, #168]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 800164c:	681a      	ldr	r2, [r3, #0]
 800164e:	69bb      	ldr	r3, [r7, #24]
 8001650:	43db      	mvns	r3, r3
 8001652:	4928      	ldr	r1, [pc, #160]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 8001654:	4013      	ands	r3, r2
 8001656:	600b      	str	r3, [r1, #0]
 8001658:	683b      	ldr	r3, [r7, #0]
 800165a:	685b      	ldr	r3, [r3, #4]
 800165c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001660:	2b00      	cmp	r3, #0
 8001662:	d006      	beq.n	8001672 <HAL_GPIO_Init+0x24e>
 8001664:	4b23      	ldr	r3, [pc, #140]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 8001666:	685a      	ldr	r2, [r3, #4]
 8001668:	4922      	ldr	r1, [pc, #136]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 800166a:	69bb      	ldr	r3, [r7, #24]
 800166c:	4313      	orrs	r3, r2
 800166e:	604b      	str	r3, [r1, #4]
 8001670:	e006      	b.n	8001680 <HAL_GPIO_Init+0x25c>
 8001672:	4b20      	ldr	r3, [pc, #128]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 8001674:	685a      	ldr	r2, [r3, #4]
 8001676:	69bb      	ldr	r3, [r7, #24]
 8001678:	43db      	mvns	r3, r3
 800167a:	491e      	ldr	r1, [pc, #120]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 800167c:	4013      	ands	r3, r2
 800167e:	604b      	str	r3, [r1, #4]
 8001680:	683b      	ldr	r3, [r7, #0]
 8001682:	685b      	ldr	r3, [r3, #4]
 8001684:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001688:	2b00      	cmp	r3, #0
 800168a:	d006      	beq.n	800169a <HAL_GPIO_Init+0x276>
 800168c:	4b19      	ldr	r3, [pc, #100]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 800168e:	689a      	ldr	r2, [r3, #8]
 8001690:	4918      	ldr	r1, [pc, #96]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 8001692:	69bb      	ldr	r3, [r7, #24]
 8001694:	4313      	orrs	r3, r2
 8001696:	608b      	str	r3, [r1, #8]
 8001698:	e006      	b.n	80016a8 <HAL_GPIO_Init+0x284>
 800169a:	4b16      	ldr	r3, [pc, #88]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 800169c:	689a      	ldr	r2, [r3, #8]
 800169e:	69bb      	ldr	r3, [r7, #24]
 80016a0:	43db      	mvns	r3, r3
 80016a2:	4914      	ldr	r1, [pc, #80]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 80016a4:	4013      	ands	r3, r2
 80016a6:	608b      	str	r3, [r1, #8]
 80016a8:	683b      	ldr	r3, [r7, #0]
 80016aa:	685b      	ldr	r3, [r3, #4]
 80016ac:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80016b0:	2b00      	cmp	r3, #0
 80016b2:	d021      	beq.n	80016f8 <HAL_GPIO_Init+0x2d4>
 80016b4:	4b0f      	ldr	r3, [pc, #60]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 80016b6:	68da      	ldr	r2, [r3, #12]
 80016b8:	490e      	ldr	r1, [pc, #56]	; (80016f4 <HAL_GPIO_Init+0x2d0>)
 80016ba:	69bb      	ldr	r3, [r7, #24]
 80016bc:	4313      	orrs	r3, r2
 80016be:	60cb      	str	r3, [r1, #12]
 80016c0:	e021      	b.n	8001706 <HAL_GPIO_Init+0x2e2>
 80016c2:	bf00      	nop
 80016c4:	10320000 	.word	0x10320000
 80016c8:	10310000 	.word	0x10310000
 80016cc:	10220000 	.word	0x10220000
 80016d0:	10210000 	.word	0x10210000
 80016d4:	10120000 	.word	0x10120000
 80016d8:	10110000 	.word	0x10110000
 80016dc:	40021000 	.word	0x40021000
 80016e0:	40010000 	.word	0x40010000
 80016e4:	40010800 	.word	0x40010800
 80016e8:	40010c00 	.word	0x40010c00
 80016ec:	40011000 	.word	0x40011000
 80016f0:	40011400 	.word	0x40011400
 80016f4:	40010400 	.word	0x40010400
 80016f8:	4b0b      	ldr	r3, [pc, #44]	; (8001728 <HAL_GPIO_Init+0x304>)
 80016fa:	68da      	ldr	r2, [r3, #12]
 80016fc:	69bb      	ldr	r3, [r7, #24]
 80016fe:	43db      	mvns	r3, r3
 8001700:	4909      	ldr	r1, [pc, #36]	; (8001728 <HAL_GPIO_Init+0x304>)
 8001702:	4013      	ands	r3, r2
 8001704:	60cb      	str	r3, [r1, #12]
 8001706:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001708:	3301      	adds	r3, #1
 800170a:	627b      	str	r3, [r7, #36]	; 0x24
 800170c:	683b      	ldr	r3, [r7, #0]
 800170e:	681a      	ldr	r2, [r3, #0]
 8001710:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001712:	fa22 f303 	lsr.w	r3, r2, r3
 8001716:	2b00      	cmp	r3, #0
 8001718:	f47f ae8e 	bne.w	8001438 <HAL_GPIO_Init+0x14>
 800171c:	bf00      	nop
 800171e:	bf00      	nop
 8001720:	372c      	adds	r7, #44	; 0x2c
 8001722:	46bd      	mov	sp, r7
 8001724:	bc80      	pop	{r7}
 8001726:	4770      	bx	lr
 8001728:	40010400 	.word	0x40010400

0800172c <HAL_GPIO_WritePin>:
 800172c:	b480      	push	{r7}
 800172e:	b083      	sub	sp, #12
 8001730:	af00      	add	r7, sp, #0
 8001732:	6078      	str	r0, [r7, #4]
 8001734:	460b      	mov	r3, r1
 8001736:	807b      	strh	r3, [r7, #2]
 8001738:	4613      	mov	r3, r2
 800173a:	707b      	strb	r3, [r7, #1]
 800173c:	787b      	ldrb	r3, [r7, #1]
 800173e:	2b00      	cmp	r3, #0
 8001740:	d003      	beq.n	800174a <HAL_GPIO_WritePin+0x1e>
 8001742:	887a      	ldrh	r2, [r7, #2]
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	611a      	str	r2, [r3, #16]
 8001748:	e003      	b.n	8001752 <HAL_GPIO_WritePin+0x26>
 800174a:	887b      	ldrh	r3, [r7, #2]
 800174c:	041a      	lsls	r2, r3, #16
 800174e:	687b      	ldr	r3, [r7, #4]
 8001750:	611a      	str	r2, [r3, #16]
 8001752:	bf00      	nop
 8001754:	370c      	adds	r7, #12
 8001756:	46bd      	mov	sp, r7
 8001758:	bc80      	pop	{r7}
 800175a:	4770      	bx	lr

0800175c <HAL_GPIO_TogglePin>:
 800175c:	b480      	push	{r7}
 800175e:	b085      	sub	sp, #20
 8001760:	af00      	add	r7, sp, #0
 8001762:	6078      	str	r0, [r7, #4]
 8001764:	460b      	mov	r3, r1
 8001766:	807b      	strh	r3, [r7, #2]
 8001768:	687b      	ldr	r3, [r7, #4]
 800176a:	68db      	ldr	r3, [r3, #12]
 800176c:	60fb      	str	r3, [r7, #12]
 800176e:	887a      	ldrh	r2, [r7, #2]
 8001770:	68fb      	ldr	r3, [r7, #12]
 8001772:	4013      	ands	r3, r2
 8001774:	041a      	lsls	r2, r3, #16
 8001776:	68fb      	ldr	r3, [r7, #12]
 8001778:	43d9      	mvns	r1, r3
 800177a:	887b      	ldrh	r3, [r7, #2]
 800177c:	400b      	ands	r3, r1
 800177e:	431a      	orrs	r2, r3
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	611a      	str	r2, [r3, #16]
 8001784:	bf00      	nop
 8001786:	3714      	adds	r7, #20
 8001788:	46bd      	mov	sp, r7
 800178a:	bc80      	pop	{r7}
 800178c:	4770      	bx	lr
	...

08001790 <HAL_RCC_OscConfig>:
 8001790:	b580      	push	{r7, lr}
 8001792:	b086      	sub	sp, #24
 8001794:	af00      	add	r7, sp, #0
 8001796:	6078      	str	r0, [r7, #4]
 8001798:	687b      	ldr	r3, [r7, #4]
 800179a:	2b00      	cmp	r3, #0
 800179c:	d101      	bne.n	80017a2 <HAL_RCC_OscConfig+0x12>
 800179e:	2301      	movs	r3, #1
 80017a0:	e26c      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 80017a2:	687b      	ldr	r3, [r7, #4]
 80017a4:	681b      	ldr	r3, [r3, #0]
 80017a6:	f003 0301 	and.w	r3, r3, #1
 80017aa:	2b00      	cmp	r3, #0
 80017ac:	f000 8087 	beq.w	80018be <HAL_RCC_OscConfig+0x12e>
 80017b0:	4b92      	ldr	r3, [pc, #584]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80017b2:	685b      	ldr	r3, [r3, #4]
 80017b4:	f003 030c 	and.w	r3, r3, #12
 80017b8:	2b04      	cmp	r3, #4
 80017ba:	d00c      	beq.n	80017d6 <HAL_RCC_OscConfig+0x46>
 80017bc:	4b8f      	ldr	r3, [pc, #572]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80017be:	685b      	ldr	r3, [r3, #4]
 80017c0:	f003 030c 	and.w	r3, r3, #12
 80017c4:	2b08      	cmp	r3, #8
 80017c6:	d112      	bne.n	80017ee <HAL_RCC_OscConfig+0x5e>
 80017c8:	4b8c      	ldr	r3, [pc, #560]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80017ca:	685b      	ldr	r3, [r3, #4]
 80017cc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80017d0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80017d4:	d10b      	bne.n	80017ee <HAL_RCC_OscConfig+0x5e>
 80017d6:	4b89      	ldr	r3, [pc, #548]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80017d8:	681b      	ldr	r3, [r3, #0]
 80017da:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80017de:	2b00      	cmp	r3, #0
 80017e0:	d06c      	beq.n	80018bc <HAL_RCC_OscConfig+0x12c>
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	685b      	ldr	r3, [r3, #4]
 80017e6:	2b00      	cmp	r3, #0
 80017e8:	d168      	bne.n	80018bc <HAL_RCC_OscConfig+0x12c>
 80017ea:	2301      	movs	r3, #1
 80017ec:	e246      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	685b      	ldr	r3, [r3, #4]
 80017f2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80017f6:	d106      	bne.n	8001806 <HAL_RCC_OscConfig+0x76>
 80017f8:	4b80      	ldr	r3, [pc, #512]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80017fa:	681b      	ldr	r3, [r3, #0]
 80017fc:	4a7f      	ldr	r2, [pc, #508]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80017fe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001802:	6013      	str	r3, [r2, #0]
 8001804:	e02e      	b.n	8001864 <HAL_RCC_OscConfig+0xd4>
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	685b      	ldr	r3, [r3, #4]
 800180a:	2b00      	cmp	r3, #0
 800180c:	d10c      	bne.n	8001828 <HAL_RCC_OscConfig+0x98>
 800180e:	4b7b      	ldr	r3, [pc, #492]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001810:	681b      	ldr	r3, [r3, #0]
 8001812:	4a7a      	ldr	r2, [pc, #488]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001814:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001818:	6013      	str	r3, [r2, #0]
 800181a:	4b78      	ldr	r3, [pc, #480]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 800181c:	681b      	ldr	r3, [r3, #0]
 800181e:	4a77      	ldr	r2, [pc, #476]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001820:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001824:	6013      	str	r3, [r2, #0]
 8001826:	e01d      	b.n	8001864 <HAL_RCC_OscConfig+0xd4>
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	685b      	ldr	r3, [r3, #4]
 800182c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001830:	d10c      	bne.n	800184c <HAL_RCC_OscConfig+0xbc>
 8001832:	4b72      	ldr	r3, [pc, #456]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	4a71      	ldr	r2, [pc, #452]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001838:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800183c:	6013      	str	r3, [r2, #0]
 800183e:	4b6f      	ldr	r3, [pc, #444]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001840:	681b      	ldr	r3, [r3, #0]
 8001842:	4a6e      	ldr	r2, [pc, #440]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001844:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001848:	6013      	str	r3, [r2, #0]
 800184a:	e00b      	b.n	8001864 <HAL_RCC_OscConfig+0xd4>
 800184c:	4b6b      	ldr	r3, [pc, #428]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 800184e:	681b      	ldr	r3, [r3, #0]
 8001850:	4a6a      	ldr	r2, [pc, #424]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001852:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001856:	6013      	str	r3, [r2, #0]
 8001858:	4b68      	ldr	r3, [pc, #416]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 800185a:	681b      	ldr	r3, [r3, #0]
 800185c:	4a67      	ldr	r2, [pc, #412]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 800185e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001862:	6013      	str	r3, [r2, #0]
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	685b      	ldr	r3, [r3, #4]
 8001868:	2b00      	cmp	r3, #0
 800186a:	d013      	beq.n	8001894 <HAL_RCC_OscConfig+0x104>
 800186c:	f7ff fcf0 	bl	8001250 <HAL_GetTick>
 8001870:	6138      	str	r0, [r7, #16]
 8001872:	e008      	b.n	8001886 <HAL_RCC_OscConfig+0xf6>
 8001874:	f7ff fcec 	bl	8001250 <HAL_GetTick>
 8001878:	4602      	mov	r2, r0
 800187a:	693b      	ldr	r3, [r7, #16]
 800187c:	1ad3      	subs	r3, r2, r3
 800187e:	2b64      	cmp	r3, #100	; 0x64
 8001880:	d901      	bls.n	8001886 <HAL_RCC_OscConfig+0xf6>
 8001882:	2303      	movs	r3, #3
 8001884:	e1fa      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001886:	4b5d      	ldr	r3, [pc, #372]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001888:	681b      	ldr	r3, [r3, #0]
 800188a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800188e:	2b00      	cmp	r3, #0
 8001890:	d0f0      	beq.n	8001874 <HAL_RCC_OscConfig+0xe4>
 8001892:	e014      	b.n	80018be <HAL_RCC_OscConfig+0x12e>
 8001894:	f7ff fcdc 	bl	8001250 <HAL_GetTick>
 8001898:	6138      	str	r0, [r7, #16]
 800189a:	e008      	b.n	80018ae <HAL_RCC_OscConfig+0x11e>
 800189c:	f7ff fcd8 	bl	8001250 <HAL_GetTick>
 80018a0:	4602      	mov	r2, r0
 80018a2:	693b      	ldr	r3, [r7, #16]
 80018a4:	1ad3      	subs	r3, r2, r3
 80018a6:	2b64      	cmp	r3, #100	; 0x64
 80018a8:	d901      	bls.n	80018ae <HAL_RCC_OscConfig+0x11e>
 80018aa:	2303      	movs	r3, #3
 80018ac:	e1e6      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 80018ae:	4b53      	ldr	r3, [pc, #332]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80018b6:	2b00      	cmp	r3, #0
 80018b8:	d1f0      	bne.n	800189c <HAL_RCC_OscConfig+0x10c>
 80018ba:	e000      	b.n	80018be <HAL_RCC_OscConfig+0x12e>
 80018bc:	bf00      	nop
 80018be:	687b      	ldr	r3, [r7, #4]
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	f003 0302 	and.w	r3, r3, #2
 80018c6:	2b00      	cmp	r3, #0
 80018c8:	d063      	beq.n	8001992 <HAL_RCC_OscConfig+0x202>
 80018ca:	4b4c      	ldr	r3, [pc, #304]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80018cc:	685b      	ldr	r3, [r3, #4]
 80018ce:	f003 030c 	and.w	r3, r3, #12
 80018d2:	2b00      	cmp	r3, #0
 80018d4:	d00b      	beq.n	80018ee <HAL_RCC_OscConfig+0x15e>
 80018d6:	4b49      	ldr	r3, [pc, #292]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80018d8:	685b      	ldr	r3, [r3, #4]
 80018da:	f003 030c 	and.w	r3, r3, #12
 80018de:	2b08      	cmp	r3, #8
 80018e0:	d11c      	bne.n	800191c <HAL_RCC_OscConfig+0x18c>
 80018e2:	4b46      	ldr	r3, [pc, #280]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80018e4:	685b      	ldr	r3, [r3, #4]
 80018e6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80018ea:	2b00      	cmp	r3, #0
 80018ec:	d116      	bne.n	800191c <HAL_RCC_OscConfig+0x18c>
 80018ee:	4b43      	ldr	r3, [pc, #268]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	f003 0302 	and.w	r3, r3, #2
 80018f6:	2b00      	cmp	r3, #0
 80018f8:	d005      	beq.n	8001906 <HAL_RCC_OscConfig+0x176>
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	691b      	ldr	r3, [r3, #16]
 80018fe:	2b01      	cmp	r3, #1
 8001900:	d001      	beq.n	8001906 <HAL_RCC_OscConfig+0x176>
 8001902:	2301      	movs	r3, #1
 8001904:	e1ba      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001906:	4b3d      	ldr	r3, [pc, #244]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001908:	681b      	ldr	r3, [r3, #0]
 800190a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800190e:	687b      	ldr	r3, [r7, #4]
 8001910:	695b      	ldr	r3, [r3, #20]
 8001912:	00db      	lsls	r3, r3, #3
 8001914:	4939      	ldr	r1, [pc, #228]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001916:	4313      	orrs	r3, r2
 8001918:	600b      	str	r3, [r1, #0]
 800191a:	e03a      	b.n	8001992 <HAL_RCC_OscConfig+0x202>
 800191c:	687b      	ldr	r3, [r7, #4]
 800191e:	691b      	ldr	r3, [r3, #16]
 8001920:	2b00      	cmp	r3, #0
 8001922:	d020      	beq.n	8001966 <HAL_RCC_OscConfig+0x1d6>
 8001924:	4b36      	ldr	r3, [pc, #216]	; (8001a00 <HAL_RCC_OscConfig+0x270>)
 8001926:	2201      	movs	r2, #1
 8001928:	601a      	str	r2, [r3, #0]
 800192a:	f7ff fc91 	bl	8001250 <HAL_GetTick>
 800192e:	6138      	str	r0, [r7, #16]
 8001930:	e008      	b.n	8001944 <HAL_RCC_OscConfig+0x1b4>
 8001932:	f7ff fc8d 	bl	8001250 <HAL_GetTick>
 8001936:	4602      	mov	r2, r0
 8001938:	693b      	ldr	r3, [r7, #16]
 800193a:	1ad3      	subs	r3, r2, r3
 800193c:	2b02      	cmp	r3, #2
 800193e:	d901      	bls.n	8001944 <HAL_RCC_OscConfig+0x1b4>
 8001940:	2303      	movs	r3, #3
 8001942:	e19b      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001944:	4b2d      	ldr	r3, [pc, #180]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	f003 0302 	and.w	r3, r3, #2
 800194c:	2b00      	cmp	r3, #0
 800194e:	d0f0      	beq.n	8001932 <HAL_RCC_OscConfig+0x1a2>
 8001950:	4b2a      	ldr	r3, [pc, #168]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001952:	681b      	ldr	r3, [r3, #0]
 8001954:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001958:	687b      	ldr	r3, [r7, #4]
 800195a:	695b      	ldr	r3, [r3, #20]
 800195c:	00db      	lsls	r3, r3, #3
 800195e:	4927      	ldr	r1, [pc, #156]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001960:	4313      	orrs	r3, r2
 8001962:	600b      	str	r3, [r1, #0]
 8001964:	e015      	b.n	8001992 <HAL_RCC_OscConfig+0x202>
 8001966:	4b26      	ldr	r3, [pc, #152]	; (8001a00 <HAL_RCC_OscConfig+0x270>)
 8001968:	2200      	movs	r2, #0
 800196a:	601a      	str	r2, [r3, #0]
 800196c:	f7ff fc70 	bl	8001250 <HAL_GetTick>
 8001970:	6138      	str	r0, [r7, #16]
 8001972:	e008      	b.n	8001986 <HAL_RCC_OscConfig+0x1f6>
 8001974:	f7ff fc6c 	bl	8001250 <HAL_GetTick>
 8001978:	4602      	mov	r2, r0
 800197a:	693b      	ldr	r3, [r7, #16]
 800197c:	1ad3      	subs	r3, r2, r3
 800197e:	2b02      	cmp	r3, #2
 8001980:	d901      	bls.n	8001986 <HAL_RCC_OscConfig+0x1f6>
 8001982:	2303      	movs	r3, #3
 8001984:	e17a      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001986:	4b1d      	ldr	r3, [pc, #116]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	f003 0302 	and.w	r3, r3, #2
 800198e:	2b00      	cmp	r3, #0
 8001990:	d1f0      	bne.n	8001974 <HAL_RCC_OscConfig+0x1e4>
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	f003 0308 	and.w	r3, r3, #8
 800199a:	2b00      	cmp	r3, #0
 800199c:	d03a      	beq.n	8001a14 <HAL_RCC_OscConfig+0x284>
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	699b      	ldr	r3, [r3, #24]
 80019a2:	2b00      	cmp	r3, #0
 80019a4:	d019      	beq.n	80019da <HAL_RCC_OscConfig+0x24a>
 80019a6:	4b17      	ldr	r3, [pc, #92]	; (8001a04 <HAL_RCC_OscConfig+0x274>)
 80019a8:	2201      	movs	r2, #1
 80019aa:	601a      	str	r2, [r3, #0]
 80019ac:	f7ff fc50 	bl	8001250 <HAL_GetTick>
 80019b0:	6138      	str	r0, [r7, #16]
 80019b2:	e008      	b.n	80019c6 <HAL_RCC_OscConfig+0x236>
 80019b4:	f7ff fc4c 	bl	8001250 <HAL_GetTick>
 80019b8:	4602      	mov	r2, r0
 80019ba:	693b      	ldr	r3, [r7, #16]
 80019bc:	1ad3      	subs	r3, r2, r3
 80019be:	2b02      	cmp	r3, #2
 80019c0:	d901      	bls.n	80019c6 <HAL_RCC_OscConfig+0x236>
 80019c2:	2303      	movs	r3, #3
 80019c4:	e15a      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 80019c6:	4b0d      	ldr	r3, [pc, #52]	; (80019fc <HAL_RCC_OscConfig+0x26c>)
 80019c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80019ca:	f003 0302 	and.w	r3, r3, #2
 80019ce:	2b00      	cmp	r3, #0
 80019d0:	d0f0      	beq.n	80019b4 <HAL_RCC_OscConfig+0x224>
 80019d2:	2001      	movs	r0, #1
 80019d4:	f000 fb08 	bl	8001fe8 <RCC_Delay>
 80019d8:	e01c      	b.n	8001a14 <HAL_RCC_OscConfig+0x284>
 80019da:	4b0a      	ldr	r3, [pc, #40]	; (8001a04 <HAL_RCC_OscConfig+0x274>)
 80019dc:	2200      	movs	r2, #0
 80019de:	601a      	str	r2, [r3, #0]
 80019e0:	f7ff fc36 	bl	8001250 <HAL_GetTick>
 80019e4:	6138      	str	r0, [r7, #16]
 80019e6:	e00f      	b.n	8001a08 <HAL_RCC_OscConfig+0x278>
 80019e8:	f7ff fc32 	bl	8001250 <HAL_GetTick>
 80019ec:	4602      	mov	r2, r0
 80019ee:	693b      	ldr	r3, [r7, #16]
 80019f0:	1ad3      	subs	r3, r2, r3
 80019f2:	2b02      	cmp	r3, #2
 80019f4:	d908      	bls.n	8001a08 <HAL_RCC_OscConfig+0x278>
 80019f6:	2303      	movs	r3, #3
 80019f8:	e140      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 80019fa:	bf00      	nop
 80019fc:	40021000 	.word	0x40021000
 8001a00:	42420000 	.word	0x42420000
 8001a04:	42420480 	.word	0x42420480
 8001a08:	4b9e      	ldr	r3, [pc, #632]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001a0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a0c:	f003 0302 	and.w	r3, r3, #2
 8001a10:	2b00      	cmp	r3, #0
 8001a12:	d1e9      	bne.n	80019e8 <HAL_RCC_OscConfig+0x258>
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	681b      	ldr	r3, [r3, #0]
 8001a18:	f003 0304 	and.w	r3, r3, #4
 8001a1c:	2b00      	cmp	r3, #0
 8001a1e:	f000 80a6 	beq.w	8001b6e <HAL_RCC_OscConfig+0x3de>
 8001a22:	2300      	movs	r3, #0
 8001a24:	75fb      	strb	r3, [r7, #23]
 8001a26:	4b97      	ldr	r3, [pc, #604]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001a28:	69db      	ldr	r3, [r3, #28]
 8001a2a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a2e:	2b00      	cmp	r3, #0
 8001a30:	d10d      	bne.n	8001a4e <HAL_RCC_OscConfig+0x2be>
 8001a32:	4b94      	ldr	r3, [pc, #592]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001a34:	69db      	ldr	r3, [r3, #28]
 8001a36:	4a93      	ldr	r2, [pc, #588]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001a38:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001a3c:	61d3      	str	r3, [r2, #28]
 8001a3e:	4b91      	ldr	r3, [pc, #580]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001a40:	69db      	ldr	r3, [r3, #28]
 8001a42:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a46:	60bb      	str	r3, [r7, #8]
 8001a48:	68bb      	ldr	r3, [r7, #8]
 8001a4a:	2301      	movs	r3, #1
 8001a4c:	75fb      	strb	r3, [r7, #23]
 8001a4e:	4b8e      	ldr	r3, [pc, #568]	; (8001c88 <HAL_RCC_OscConfig+0x4f8>)
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	d118      	bne.n	8001a8c <HAL_RCC_OscConfig+0x2fc>
 8001a5a:	4b8b      	ldr	r3, [pc, #556]	; (8001c88 <HAL_RCC_OscConfig+0x4f8>)
 8001a5c:	681b      	ldr	r3, [r3, #0]
 8001a5e:	4a8a      	ldr	r2, [pc, #552]	; (8001c88 <HAL_RCC_OscConfig+0x4f8>)
 8001a60:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001a64:	6013      	str	r3, [r2, #0]
 8001a66:	f7ff fbf3 	bl	8001250 <HAL_GetTick>
 8001a6a:	6138      	str	r0, [r7, #16]
 8001a6c:	e008      	b.n	8001a80 <HAL_RCC_OscConfig+0x2f0>
 8001a6e:	f7ff fbef 	bl	8001250 <HAL_GetTick>
 8001a72:	4602      	mov	r2, r0
 8001a74:	693b      	ldr	r3, [r7, #16]
 8001a76:	1ad3      	subs	r3, r2, r3
 8001a78:	2b64      	cmp	r3, #100	; 0x64
 8001a7a:	d901      	bls.n	8001a80 <HAL_RCC_OscConfig+0x2f0>
 8001a7c:	2303      	movs	r3, #3
 8001a7e:	e0fd      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001a80:	4b81      	ldr	r3, [pc, #516]	; (8001c88 <HAL_RCC_OscConfig+0x4f8>)
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001a88:	2b00      	cmp	r3, #0
 8001a8a:	d0f0      	beq.n	8001a6e <HAL_RCC_OscConfig+0x2de>
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	68db      	ldr	r3, [r3, #12]
 8001a90:	2b01      	cmp	r3, #1
 8001a92:	d106      	bne.n	8001aa2 <HAL_RCC_OscConfig+0x312>
 8001a94:	4b7b      	ldr	r3, [pc, #492]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001a96:	6a1b      	ldr	r3, [r3, #32]
 8001a98:	4a7a      	ldr	r2, [pc, #488]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001a9a:	f043 0301 	orr.w	r3, r3, #1
 8001a9e:	6213      	str	r3, [r2, #32]
 8001aa0:	e02d      	b.n	8001afe <HAL_RCC_OscConfig+0x36e>
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	68db      	ldr	r3, [r3, #12]
 8001aa6:	2b00      	cmp	r3, #0
 8001aa8:	d10c      	bne.n	8001ac4 <HAL_RCC_OscConfig+0x334>
 8001aaa:	4b76      	ldr	r3, [pc, #472]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001aac:	6a1b      	ldr	r3, [r3, #32]
 8001aae:	4a75      	ldr	r2, [pc, #468]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001ab0:	f023 0301 	bic.w	r3, r3, #1
 8001ab4:	6213      	str	r3, [r2, #32]
 8001ab6:	4b73      	ldr	r3, [pc, #460]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001ab8:	6a1b      	ldr	r3, [r3, #32]
 8001aba:	4a72      	ldr	r2, [pc, #456]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001abc:	f023 0304 	bic.w	r3, r3, #4
 8001ac0:	6213      	str	r3, [r2, #32]
 8001ac2:	e01c      	b.n	8001afe <HAL_RCC_OscConfig+0x36e>
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	68db      	ldr	r3, [r3, #12]
 8001ac8:	2b05      	cmp	r3, #5
 8001aca:	d10c      	bne.n	8001ae6 <HAL_RCC_OscConfig+0x356>
 8001acc:	4b6d      	ldr	r3, [pc, #436]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001ace:	6a1b      	ldr	r3, [r3, #32]
 8001ad0:	4a6c      	ldr	r2, [pc, #432]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001ad2:	f043 0304 	orr.w	r3, r3, #4
 8001ad6:	6213      	str	r3, [r2, #32]
 8001ad8:	4b6a      	ldr	r3, [pc, #424]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001ada:	6a1b      	ldr	r3, [r3, #32]
 8001adc:	4a69      	ldr	r2, [pc, #420]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001ade:	f043 0301 	orr.w	r3, r3, #1
 8001ae2:	6213      	str	r3, [r2, #32]
 8001ae4:	e00b      	b.n	8001afe <HAL_RCC_OscConfig+0x36e>
 8001ae6:	4b67      	ldr	r3, [pc, #412]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001ae8:	6a1b      	ldr	r3, [r3, #32]
 8001aea:	4a66      	ldr	r2, [pc, #408]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001aec:	f023 0301 	bic.w	r3, r3, #1
 8001af0:	6213      	str	r3, [r2, #32]
 8001af2:	4b64      	ldr	r3, [pc, #400]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001af4:	6a1b      	ldr	r3, [r3, #32]
 8001af6:	4a63      	ldr	r2, [pc, #396]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001af8:	f023 0304 	bic.w	r3, r3, #4
 8001afc:	6213      	str	r3, [r2, #32]
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	68db      	ldr	r3, [r3, #12]
 8001b02:	2b00      	cmp	r3, #0
 8001b04:	d015      	beq.n	8001b32 <HAL_RCC_OscConfig+0x3a2>
 8001b06:	f7ff fba3 	bl	8001250 <HAL_GetTick>
 8001b0a:	6138      	str	r0, [r7, #16]
 8001b0c:	e00a      	b.n	8001b24 <HAL_RCC_OscConfig+0x394>
 8001b0e:	f7ff fb9f 	bl	8001250 <HAL_GetTick>
 8001b12:	4602      	mov	r2, r0
 8001b14:	693b      	ldr	r3, [r7, #16]
 8001b16:	1ad3      	subs	r3, r2, r3
 8001b18:	f241 3288 	movw	r2, #5000	; 0x1388
 8001b1c:	4293      	cmp	r3, r2
 8001b1e:	d901      	bls.n	8001b24 <HAL_RCC_OscConfig+0x394>
 8001b20:	2303      	movs	r3, #3
 8001b22:	e0ab      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001b24:	4b57      	ldr	r3, [pc, #348]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001b26:	6a1b      	ldr	r3, [r3, #32]
 8001b28:	f003 0302 	and.w	r3, r3, #2
 8001b2c:	2b00      	cmp	r3, #0
 8001b2e:	d0ee      	beq.n	8001b0e <HAL_RCC_OscConfig+0x37e>
 8001b30:	e014      	b.n	8001b5c <HAL_RCC_OscConfig+0x3cc>
 8001b32:	f7ff fb8d 	bl	8001250 <HAL_GetTick>
 8001b36:	6138      	str	r0, [r7, #16]
 8001b38:	e00a      	b.n	8001b50 <HAL_RCC_OscConfig+0x3c0>
 8001b3a:	f7ff fb89 	bl	8001250 <HAL_GetTick>
 8001b3e:	4602      	mov	r2, r0
 8001b40:	693b      	ldr	r3, [r7, #16]
 8001b42:	1ad3      	subs	r3, r2, r3
 8001b44:	f241 3288 	movw	r2, #5000	; 0x1388
 8001b48:	4293      	cmp	r3, r2
 8001b4a:	d901      	bls.n	8001b50 <HAL_RCC_OscConfig+0x3c0>
 8001b4c:	2303      	movs	r3, #3
 8001b4e:	e095      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001b50:	4b4c      	ldr	r3, [pc, #304]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001b52:	6a1b      	ldr	r3, [r3, #32]
 8001b54:	f003 0302 	and.w	r3, r3, #2
 8001b58:	2b00      	cmp	r3, #0
 8001b5a:	d1ee      	bne.n	8001b3a <HAL_RCC_OscConfig+0x3aa>
 8001b5c:	7dfb      	ldrb	r3, [r7, #23]
 8001b5e:	2b01      	cmp	r3, #1
 8001b60:	d105      	bne.n	8001b6e <HAL_RCC_OscConfig+0x3de>
 8001b62:	4b48      	ldr	r3, [pc, #288]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001b64:	69db      	ldr	r3, [r3, #28]
 8001b66:	4a47      	ldr	r2, [pc, #284]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001b68:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001b6c:	61d3      	str	r3, [r2, #28]
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	69db      	ldr	r3, [r3, #28]
 8001b72:	2b00      	cmp	r3, #0
 8001b74:	f000 8081 	beq.w	8001c7a <HAL_RCC_OscConfig+0x4ea>
 8001b78:	4b42      	ldr	r3, [pc, #264]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001b7a:	685b      	ldr	r3, [r3, #4]
 8001b7c:	f003 030c 	and.w	r3, r3, #12
 8001b80:	2b08      	cmp	r3, #8
 8001b82:	d061      	beq.n	8001c48 <HAL_RCC_OscConfig+0x4b8>
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	69db      	ldr	r3, [r3, #28]
 8001b88:	2b02      	cmp	r3, #2
 8001b8a:	d146      	bne.n	8001c1a <HAL_RCC_OscConfig+0x48a>
 8001b8c:	4b3f      	ldr	r3, [pc, #252]	; (8001c8c <HAL_RCC_OscConfig+0x4fc>)
 8001b8e:	2200      	movs	r2, #0
 8001b90:	601a      	str	r2, [r3, #0]
 8001b92:	f7ff fb5d 	bl	8001250 <HAL_GetTick>
 8001b96:	6138      	str	r0, [r7, #16]
 8001b98:	e008      	b.n	8001bac <HAL_RCC_OscConfig+0x41c>
 8001b9a:	f7ff fb59 	bl	8001250 <HAL_GetTick>
 8001b9e:	4602      	mov	r2, r0
 8001ba0:	693b      	ldr	r3, [r7, #16]
 8001ba2:	1ad3      	subs	r3, r2, r3
 8001ba4:	2b02      	cmp	r3, #2
 8001ba6:	d901      	bls.n	8001bac <HAL_RCC_OscConfig+0x41c>
 8001ba8:	2303      	movs	r3, #3
 8001baa:	e067      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001bac:	4b35      	ldr	r3, [pc, #212]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001bae:	681b      	ldr	r3, [r3, #0]
 8001bb0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d1f0      	bne.n	8001b9a <HAL_RCC_OscConfig+0x40a>
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	6a1b      	ldr	r3, [r3, #32]
 8001bbc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001bc0:	d108      	bne.n	8001bd4 <HAL_RCC_OscConfig+0x444>
 8001bc2:	4b30      	ldr	r3, [pc, #192]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001bc4:	685b      	ldr	r3, [r3, #4]
 8001bc6:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001bca:	687b      	ldr	r3, [r7, #4]
 8001bcc:	689b      	ldr	r3, [r3, #8]
 8001bce:	492d      	ldr	r1, [pc, #180]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001bd0:	4313      	orrs	r3, r2
 8001bd2:	604b      	str	r3, [r1, #4]
 8001bd4:	4b2b      	ldr	r3, [pc, #172]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001bd6:	685b      	ldr	r3, [r3, #4]
 8001bd8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	6a19      	ldr	r1, [r3, #32]
 8001be0:	687b      	ldr	r3, [r7, #4]
 8001be2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001be4:	430b      	orrs	r3, r1
 8001be6:	4927      	ldr	r1, [pc, #156]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001be8:	4313      	orrs	r3, r2
 8001bea:	604b      	str	r3, [r1, #4]
 8001bec:	4b27      	ldr	r3, [pc, #156]	; (8001c8c <HAL_RCC_OscConfig+0x4fc>)
 8001bee:	2201      	movs	r2, #1
 8001bf0:	601a      	str	r2, [r3, #0]
 8001bf2:	f7ff fb2d 	bl	8001250 <HAL_GetTick>
 8001bf6:	6138      	str	r0, [r7, #16]
 8001bf8:	e008      	b.n	8001c0c <HAL_RCC_OscConfig+0x47c>
 8001bfa:	f7ff fb29 	bl	8001250 <HAL_GetTick>
 8001bfe:	4602      	mov	r2, r0
 8001c00:	693b      	ldr	r3, [r7, #16]
 8001c02:	1ad3      	subs	r3, r2, r3
 8001c04:	2b02      	cmp	r3, #2
 8001c06:	d901      	bls.n	8001c0c <HAL_RCC_OscConfig+0x47c>
 8001c08:	2303      	movs	r3, #3
 8001c0a:	e037      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001c0c:	4b1d      	ldr	r3, [pc, #116]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001c0e:	681b      	ldr	r3, [r3, #0]
 8001c10:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c14:	2b00      	cmp	r3, #0
 8001c16:	d0f0      	beq.n	8001bfa <HAL_RCC_OscConfig+0x46a>
 8001c18:	e02f      	b.n	8001c7a <HAL_RCC_OscConfig+0x4ea>
 8001c1a:	4b1c      	ldr	r3, [pc, #112]	; (8001c8c <HAL_RCC_OscConfig+0x4fc>)
 8001c1c:	2200      	movs	r2, #0
 8001c1e:	601a      	str	r2, [r3, #0]
 8001c20:	f7ff fb16 	bl	8001250 <HAL_GetTick>
 8001c24:	6138      	str	r0, [r7, #16]
 8001c26:	e008      	b.n	8001c3a <HAL_RCC_OscConfig+0x4aa>
 8001c28:	f7ff fb12 	bl	8001250 <HAL_GetTick>
 8001c2c:	4602      	mov	r2, r0
 8001c2e:	693b      	ldr	r3, [r7, #16]
 8001c30:	1ad3      	subs	r3, r2, r3
 8001c32:	2b02      	cmp	r3, #2
 8001c34:	d901      	bls.n	8001c3a <HAL_RCC_OscConfig+0x4aa>
 8001c36:	2303      	movs	r3, #3
 8001c38:	e020      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001c3a:	4b12      	ldr	r3, [pc, #72]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001c3c:	681b      	ldr	r3, [r3, #0]
 8001c3e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c42:	2b00      	cmp	r3, #0
 8001c44:	d1f0      	bne.n	8001c28 <HAL_RCC_OscConfig+0x498>
 8001c46:	e018      	b.n	8001c7a <HAL_RCC_OscConfig+0x4ea>
 8001c48:	687b      	ldr	r3, [r7, #4]
 8001c4a:	69db      	ldr	r3, [r3, #28]
 8001c4c:	2b01      	cmp	r3, #1
 8001c4e:	d101      	bne.n	8001c54 <HAL_RCC_OscConfig+0x4c4>
 8001c50:	2301      	movs	r3, #1
 8001c52:	e013      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001c54:	4b0b      	ldr	r3, [pc, #44]	; (8001c84 <HAL_RCC_OscConfig+0x4f4>)
 8001c56:	685b      	ldr	r3, [r3, #4]
 8001c58:	60fb      	str	r3, [r7, #12]
 8001c5a:	68fb      	ldr	r3, [r7, #12]
 8001c5c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	6a1b      	ldr	r3, [r3, #32]
 8001c64:	429a      	cmp	r2, r3
 8001c66:	d106      	bne.n	8001c76 <HAL_RCC_OscConfig+0x4e6>
 8001c68:	68fb      	ldr	r3, [r7, #12]
 8001c6a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c72:	429a      	cmp	r2, r3
 8001c74:	d001      	beq.n	8001c7a <HAL_RCC_OscConfig+0x4ea>
 8001c76:	2301      	movs	r3, #1
 8001c78:	e000      	b.n	8001c7c <HAL_RCC_OscConfig+0x4ec>
 8001c7a:	2300      	movs	r3, #0
 8001c7c:	4618      	mov	r0, r3
 8001c7e:	3718      	adds	r7, #24
 8001c80:	46bd      	mov	sp, r7
 8001c82:	bd80      	pop	{r7, pc}
 8001c84:	40021000 	.word	0x40021000
 8001c88:	40007000 	.word	0x40007000
 8001c8c:	42420060 	.word	0x42420060

08001c90 <HAL_RCC_ClockConfig>:
 8001c90:	b580      	push	{r7, lr}
 8001c92:	b084      	sub	sp, #16
 8001c94:	af00      	add	r7, sp, #0
 8001c96:	6078      	str	r0, [r7, #4]
 8001c98:	6039      	str	r1, [r7, #0]
 8001c9a:	687b      	ldr	r3, [r7, #4]
 8001c9c:	2b00      	cmp	r3, #0
 8001c9e:	d101      	bne.n	8001ca4 <HAL_RCC_ClockConfig+0x14>
 8001ca0:	2301      	movs	r3, #1
 8001ca2:	e0d0      	b.n	8001e46 <HAL_RCC_ClockConfig+0x1b6>
 8001ca4:	4b6a      	ldr	r3, [pc, #424]	; (8001e50 <HAL_RCC_ClockConfig+0x1c0>)
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	f003 0307 	and.w	r3, r3, #7
 8001cac:	683a      	ldr	r2, [r7, #0]
 8001cae:	429a      	cmp	r2, r3
 8001cb0:	d910      	bls.n	8001cd4 <HAL_RCC_ClockConfig+0x44>
 8001cb2:	4b67      	ldr	r3, [pc, #412]	; (8001e50 <HAL_RCC_ClockConfig+0x1c0>)
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	f023 0207 	bic.w	r2, r3, #7
 8001cba:	4965      	ldr	r1, [pc, #404]	; (8001e50 <HAL_RCC_ClockConfig+0x1c0>)
 8001cbc:	683b      	ldr	r3, [r7, #0]
 8001cbe:	4313      	orrs	r3, r2
 8001cc0:	600b      	str	r3, [r1, #0]
 8001cc2:	4b63      	ldr	r3, [pc, #396]	; (8001e50 <HAL_RCC_ClockConfig+0x1c0>)
 8001cc4:	681b      	ldr	r3, [r3, #0]
 8001cc6:	f003 0307 	and.w	r3, r3, #7
 8001cca:	683a      	ldr	r2, [r7, #0]
 8001ccc:	429a      	cmp	r2, r3
 8001cce:	d001      	beq.n	8001cd4 <HAL_RCC_ClockConfig+0x44>
 8001cd0:	2301      	movs	r3, #1
 8001cd2:	e0b8      	b.n	8001e46 <HAL_RCC_ClockConfig+0x1b6>
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	f003 0302 	and.w	r3, r3, #2
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	d020      	beq.n	8001d22 <HAL_RCC_ClockConfig+0x92>
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	681b      	ldr	r3, [r3, #0]
 8001ce4:	f003 0304 	and.w	r3, r3, #4
 8001ce8:	2b00      	cmp	r3, #0
 8001cea:	d005      	beq.n	8001cf8 <HAL_RCC_ClockConfig+0x68>
 8001cec:	4b59      	ldr	r3, [pc, #356]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001cee:	685b      	ldr	r3, [r3, #4]
 8001cf0:	4a58      	ldr	r2, [pc, #352]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001cf2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001cf6:	6053      	str	r3, [r2, #4]
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	681b      	ldr	r3, [r3, #0]
 8001cfc:	f003 0308 	and.w	r3, r3, #8
 8001d00:	2b00      	cmp	r3, #0
 8001d02:	d005      	beq.n	8001d10 <HAL_RCC_ClockConfig+0x80>
 8001d04:	4b53      	ldr	r3, [pc, #332]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001d06:	685b      	ldr	r3, [r3, #4]
 8001d08:	4a52      	ldr	r2, [pc, #328]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001d0a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001d0e:	6053      	str	r3, [r2, #4]
 8001d10:	4b50      	ldr	r3, [pc, #320]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001d12:	685b      	ldr	r3, [r3, #4]
 8001d14:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	689b      	ldr	r3, [r3, #8]
 8001d1c:	494d      	ldr	r1, [pc, #308]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001d1e:	4313      	orrs	r3, r2
 8001d20:	604b      	str	r3, [r1, #4]
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	681b      	ldr	r3, [r3, #0]
 8001d26:	f003 0301 	and.w	r3, r3, #1
 8001d2a:	2b00      	cmp	r3, #0
 8001d2c:	d040      	beq.n	8001db0 <HAL_RCC_ClockConfig+0x120>
 8001d2e:	687b      	ldr	r3, [r7, #4]
 8001d30:	685b      	ldr	r3, [r3, #4]
 8001d32:	2b01      	cmp	r3, #1
 8001d34:	d107      	bne.n	8001d46 <HAL_RCC_ClockConfig+0xb6>
 8001d36:	4b47      	ldr	r3, [pc, #284]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001d38:	681b      	ldr	r3, [r3, #0]
 8001d3a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d3e:	2b00      	cmp	r3, #0
 8001d40:	d115      	bne.n	8001d6e <HAL_RCC_ClockConfig+0xde>
 8001d42:	2301      	movs	r3, #1
 8001d44:	e07f      	b.n	8001e46 <HAL_RCC_ClockConfig+0x1b6>
 8001d46:	687b      	ldr	r3, [r7, #4]
 8001d48:	685b      	ldr	r3, [r3, #4]
 8001d4a:	2b02      	cmp	r3, #2
 8001d4c:	d107      	bne.n	8001d5e <HAL_RCC_ClockConfig+0xce>
 8001d4e:	4b41      	ldr	r3, [pc, #260]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d56:	2b00      	cmp	r3, #0
 8001d58:	d109      	bne.n	8001d6e <HAL_RCC_ClockConfig+0xde>
 8001d5a:	2301      	movs	r3, #1
 8001d5c:	e073      	b.n	8001e46 <HAL_RCC_ClockConfig+0x1b6>
 8001d5e:	4b3d      	ldr	r3, [pc, #244]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001d60:	681b      	ldr	r3, [r3, #0]
 8001d62:	f003 0302 	and.w	r3, r3, #2
 8001d66:	2b00      	cmp	r3, #0
 8001d68:	d101      	bne.n	8001d6e <HAL_RCC_ClockConfig+0xde>
 8001d6a:	2301      	movs	r3, #1
 8001d6c:	e06b      	b.n	8001e46 <HAL_RCC_ClockConfig+0x1b6>
 8001d6e:	4b39      	ldr	r3, [pc, #228]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001d70:	685b      	ldr	r3, [r3, #4]
 8001d72:	f023 0203 	bic.w	r2, r3, #3
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	685b      	ldr	r3, [r3, #4]
 8001d7a:	4936      	ldr	r1, [pc, #216]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001d7c:	4313      	orrs	r3, r2
 8001d7e:	604b      	str	r3, [r1, #4]
 8001d80:	f7ff fa66 	bl	8001250 <HAL_GetTick>
 8001d84:	60f8      	str	r0, [r7, #12]
 8001d86:	e00a      	b.n	8001d9e <HAL_RCC_ClockConfig+0x10e>
 8001d88:	f7ff fa62 	bl	8001250 <HAL_GetTick>
 8001d8c:	4602      	mov	r2, r0
 8001d8e:	68fb      	ldr	r3, [r7, #12]
 8001d90:	1ad3      	subs	r3, r2, r3
 8001d92:	f241 3288 	movw	r2, #5000	; 0x1388
 8001d96:	4293      	cmp	r3, r2
 8001d98:	d901      	bls.n	8001d9e <HAL_RCC_ClockConfig+0x10e>
 8001d9a:	2303      	movs	r3, #3
 8001d9c:	e053      	b.n	8001e46 <HAL_RCC_ClockConfig+0x1b6>
 8001d9e:	4b2d      	ldr	r3, [pc, #180]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001da0:	685b      	ldr	r3, [r3, #4]
 8001da2:	f003 020c 	and.w	r2, r3, #12
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	685b      	ldr	r3, [r3, #4]
 8001daa:	009b      	lsls	r3, r3, #2
 8001dac:	429a      	cmp	r2, r3
 8001dae:	d1eb      	bne.n	8001d88 <HAL_RCC_ClockConfig+0xf8>
 8001db0:	4b27      	ldr	r3, [pc, #156]	; (8001e50 <HAL_RCC_ClockConfig+0x1c0>)
 8001db2:	681b      	ldr	r3, [r3, #0]
 8001db4:	f003 0307 	and.w	r3, r3, #7
 8001db8:	683a      	ldr	r2, [r7, #0]
 8001dba:	429a      	cmp	r2, r3
 8001dbc:	d210      	bcs.n	8001de0 <HAL_RCC_ClockConfig+0x150>
 8001dbe:	4b24      	ldr	r3, [pc, #144]	; (8001e50 <HAL_RCC_ClockConfig+0x1c0>)
 8001dc0:	681b      	ldr	r3, [r3, #0]
 8001dc2:	f023 0207 	bic.w	r2, r3, #7
 8001dc6:	4922      	ldr	r1, [pc, #136]	; (8001e50 <HAL_RCC_ClockConfig+0x1c0>)
 8001dc8:	683b      	ldr	r3, [r7, #0]
 8001dca:	4313      	orrs	r3, r2
 8001dcc:	600b      	str	r3, [r1, #0]
 8001dce:	4b20      	ldr	r3, [pc, #128]	; (8001e50 <HAL_RCC_ClockConfig+0x1c0>)
 8001dd0:	681b      	ldr	r3, [r3, #0]
 8001dd2:	f003 0307 	and.w	r3, r3, #7
 8001dd6:	683a      	ldr	r2, [r7, #0]
 8001dd8:	429a      	cmp	r2, r3
 8001dda:	d001      	beq.n	8001de0 <HAL_RCC_ClockConfig+0x150>
 8001ddc:	2301      	movs	r3, #1
 8001dde:	e032      	b.n	8001e46 <HAL_RCC_ClockConfig+0x1b6>
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	681b      	ldr	r3, [r3, #0]
 8001de4:	f003 0304 	and.w	r3, r3, #4
 8001de8:	2b00      	cmp	r3, #0
 8001dea:	d008      	beq.n	8001dfe <HAL_RCC_ClockConfig+0x16e>
 8001dec:	4b19      	ldr	r3, [pc, #100]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001dee:	685b      	ldr	r3, [r3, #4]
 8001df0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	68db      	ldr	r3, [r3, #12]
 8001df8:	4916      	ldr	r1, [pc, #88]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001dfa:	4313      	orrs	r3, r2
 8001dfc:	604b      	str	r3, [r1, #4]
 8001dfe:	687b      	ldr	r3, [r7, #4]
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	f003 0308 	and.w	r3, r3, #8
 8001e06:	2b00      	cmp	r3, #0
 8001e08:	d009      	beq.n	8001e1e <HAL_RCC_ClockConfig+0x18e>
 8001e0a:	4b12      	ldr	r3, [pc, #72]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001e0c:	685b      	ldr	r3, [r3, #4]
 8001e0e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	691b      	ldr	r3, [r3, #16]
 8001e16:	00db      	lsls	r3, r3, #3
 8001e18:	490e      	ldr	r1, [pc, #56]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001e1a:	4313      	orrs	r3, r2
 8001e1c:	604b      	str	r3, [r1, #4]
 8001e1e:	f000 f821 	bl	8001e64 <HAL_RCC_GetSysClockFreq>
 8001e22:	4602      	mov	r2, r0
 8001e24:	4b0b      	ldr	r3, [pc, #44]	; (8001e54 <HAL_RCC_ClockConfig+0x1c4>)
 8001e26:	685b      	ldr	r3, [r3, #4]
 8001e28:	091b      	lsrs	r3, r3, #4
 8001e2a:	f003 030f 	and.w	r3, r3, #15
 8001e2e:	490a      	ldr	r1, [pc, #40]	; (8001e58 <HAL_RCC_ClockConfig+0x1c8>)
 8001e30:	5ccb      	ldrb	r3, [r1, r3]
 8001e32:	fa22 f303 	lsr.w	r3, r2, r3
 8001e36:	4a09      	ldr	r2, [pc, #36]	; (8001e5c <HAL_RCC_ClockConfig+0x1cc>)
 8001e38:	6013      	str	r3, [r2, #0]
 8001e3a:	4b09      	ldr	r3, [pc, #36]	; (8001e60 <HAL_RCC_ClockConfig+0x1d0>)
 8001e3c:	681b      	ldr	r3, [r3, #0]
 8001e3e:	4618      	mov	r0, r3
 8001e40:	f7ff f87c 	bl	8000f3c <HAL_InitTick>
 8001e44:	2300      	movs	r3, #0
 8001e46:	4618      	mov	r0, r3
 8001e48:	3710      	adds	r7, #16
 8001e4a:	46bd      	mov	sp, r7
 8001e4c:	bd80      	pop	{r7, pc}
 8001e4e:	bf00      	nop
 8001e50:	40022000 	.word	0x40022000
 8001e54:	40021000 	.word	0x40021000
 8001e58:	080052c4 	.word	0x080052c4
 8001e5c:	200000cc 	.word	0x200000cc
 8001e60:	200000d0 	.word	0x200000d0

08001e64 <HAL_RCC_GetSysClockFreq>:
 8001e64:	b490      	push	{r4, r7}
 8001e66:	b08a      	sub	sp, #40	; 0x28
 8001e68:	af00      	add	r7, sp, #0
 8001e6a:	4b2a      	ldr	r3, [pc, #168]	; (8001f14 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001e6c:	1d3c      	adds	r4, r7, #4
 8001e6e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001e70:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001e74:	f240 2301 	movw	r3, #513	; 0x201
 8001e78:	803b      	strh	r3, [r7, #0]
 8001e7a:	2300      	movs	r3, #0
 8001e7c:	61fb      	str	r3, [r7, #28]
 8001e7e:	2300      	movs	r3, #0
 8001e80:	61bb      	str	r3, [r7, #24]
 8001e82:	2300      	movs	r3, #0
 8001e84:	627b      	str	r3, [r7, #36]	; 0x24
 8001e86:	2300      	movs	r3, #0
 8001e88:	617b      	str	r3, [r7, #20]
 8001e8a:	2300      	movs	r3, #0
 8001e8c:	623b      	str	r3, [r7, #32]
 8001e8e:	4b22      	ldr	r3, [pc, #136]	; (8001f18 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001e90:	685b      	ldr	r3, [r3, #4]
 8001e92:	61fb      	str	r3, [r7, #28]
 8001e94:	69fb      	ldr	r3, [r7, #28]
 8001e96:	f003 030c 	and.w	r3, r3, #12
 8001e9a:	2b04      	cmp	r3, #4
 8001e9c:	d002      	beq.n	8001ea4 <HAL_RCC_GetSysClockFreq+0x40>
 8001e9e:	2b08      	cmp	r3, #8
 8001ea0:	d003      	beq.n	8001eaa <HAL_RCC_GetSysClockFreq+0x46>
 8001ea2:	e02d      	b.n	8001f00 <HAL_RCC_GetSysClockFreq+0x9c>
 8001ea4:	4b1d      	ldr	r3, [pc, #116]	; (8001f1c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001ea6:	623b      	str	r3, [r7, #32]
 8001ea8:	e02d      	b.n	8001f06 <HAL_RCC_GetSysClockFreq+0xa2>
 8001eaa:	69fb      	ldr	r3, [r7, #28]
 8001eac:	0c9b      	lsrs	r3, r3, #18
 8001eae:	f003 030f 	and.w	r3, r3, #15
 8001eb2:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001eb6:	4413      	add	r3, r2
 8001eb8:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001ebc:	617b      	str	r3, [r7, #20]
 8001ebe:	69fb      	ldr	r3, [r7, #28]
 8001ec0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001ec4:	2b00      	cmp	r3, #0
 8001ec6:	d013      	beq.n	8001ef0 <HAL_RCC_GetSysClockFreq+0x8c>
 8001ec8:	4b13      	ldr	r3, [pc, #76]	; (8001f18 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001eca:	685b      	ldr	r3, [r3, #4]
 8001ecc:	0c5b      	lsrs	r3, r3, #17
 8001ece:	f003 0301 	and.w	r3, r3, #1
 8001ed2:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001ed6:	4413      	add	r3, r2
 8001ed8:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001edc:	61bb      	str	r3, [r7, #24]
 8001ede:	697b      	ldr	r3, [r7, #20]
 8001ee0:	4a0e      	ldr	r2, [pc, #56]	; (8001f1c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001ee2:	fb02 f203 	mul.w	r2, r2, r3
 8001ee6:	69bb      	ldr	r3, [r7, #24]
 8001ee8:	fbb2 f3f3 	udiv	r3, r2, r3
 8001eec:	627b      	str	r3, [r7, #36]	; 0x24
 8001eee:	e004      	b.n	8001efa <HAL_RCC_GetSysClockFreq+0x96>
 8001ef0:	697b      	ldr	r3, [r7, #20]
 8001ef2:	4a0b      	ldr	r2, [pc, #44]	; (8001f20 <HAL_RCC_GetSysClockFreq+0xbc>)
 8001ef4:	fb02 f303 	mul.w	r3, r2, r3
 8001ef8:	627b      	str	r3, [r7, #36]	; 0x24
 8001efa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001efc:	623b      	str	r3, [r7, #32]
 8001efe:	e002      	b.n	8001f06 <HAL_RCC_GetSysClockFreq+0xa2>
 8001f00:	4b06      	ldr	r3, [pc, #24]	; (8001f1c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001f02:	623b      	str	r3, [r7, #32]
 8001f04:	bf00      	nop
 8001f06:	6a3b      	ldr	r3, [r7, #32]
 8001f08:	4618      	mov	r0, r3
 8001f0a:	3728      	adds	r7, #40	; 0x28
 8001f0c:	46bd      	mov	sp, r7
 8001f0e:	bc90      	pop	{r4, r7}
 8001f10:	4770      	bx	lr
 8001f12:	bf00      	nop
 8001f14:	080052a8 	.word	0x080052a8
 8001f18:	40021000 	.word	0x40021000
 8001f1c:	007a1200 	.word	0x007a1200
 8001f20:	003d0900 	.word	0x003d0900

08001f24 <HAL_RCC_GetHCLKFreq>:
 8001f24:	b480      	push	{r7}
 8001f26:	af00      	add	r7, sp, #0
 8001f28:	4b02      	ldr	r3, [pc, #8]	; (8001f34 <HAL_RCC_GetHCLKFreq+0x10>)
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	4618      	mov	r0, r3
 8001f2e:	46bd      	mov	sp, r7
 8001f30:	bc80      	pop	{r7}
 8001f32:	4770      	bx	lr
 8001f34:	200000cc 	.word	0x200000cc

08001f38 <HAL_RCC_GetPCLK1Freq>:
 8001f38:	b580      	push	{r7, lr}
 8001f3a:	af00      	add	r7, sp, #0
 8001f3c:	f7ff fff2 	bl	8001f24 <HAL_RCC_GetHCLKFreq>
 8001f40:	4602      	mov	r2, r0
 8001f42:	4b05      	ldr	r3, [pc, #20]	; (8001f58 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001f44:	685b      	ldr	r3, [r3, #4]
 8001f46:	0a1b      	lsrs	r3, r3, #8
 8001f48:	f003 0307 	and.w	r3, r3, #7
 8001f4c:	4903      	ldr	r1, [pc, #12]	; (8001f5c <HAL_RCC_GetPCLK1Freq+0x24>)
 8001f4e:	5ccb      	ldrb	r3, [r1, r3]
 8001f50:	fa22 f303 	lsr.w	r3, r2, r3
 8001f54:	4618      	mov	r0, r3
 8001f56:	bd80      	pop	{r7, pc}
 8001f58:	40021000 	.word	0x40021000
 8001f5c:	080052d4 	.word	0x080052d4

08001f60 <HAL_RCC_GetPCLK2Freq>:
 8001f60:	b580      	push	{r7, lr}
 8001f62:	af00      	add	r7, sp, #0
 8001f64:	f7ff ffde 	bl	8001f24 <HAL_RCC_GetHCLKFreq>
 8001f68:	4602      	mov	r2, r0
 8001f6a:	4b05      	ldr	r3, [pc, #20]	; (8001f80 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001f6c:	685b      	ldr	r3, [r3, #4]
 8001f6e:	0adb      	lsrs	r3, r3, #11
 8001f70:	f003 0307 	and.w	r3, r3, #7
 8001f74:	4903      	ldr	r1, [pc, #12]	; (8001f84 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001f76:	5ccb      	ldrb	r3, [r1, r3]
 8001f78:	fa22 f303 	lsr.w	r3, r2, r3
 8001f7c:	4618      	mov	r0, r3
 8001f7e:	bd80      	pop	{r7, pc}
 8001f80:	40021000 	.word	0x40021000
 8001f84:	080052d4 	.word	0x080052d4

08001f88 <HAL_RCC_GetClockConfig>:
 8001f88:	b480      	push	{r7}
 8001f8a:	b083      	sub	sp, #12
 8001f8c:	af00      	add	r7, sp, #0
 8001f8e:	6078      	str	r0, [r7, #4]
 8001f90:	6039      	str	r1, [r7, #0]
 8001f92:	687b      	ldr	r3, [r7, #4]
 8001f94:	220f      	movs	r2, #15
 8001f96:	601a      	str	r2, [r3, #0]
 8001f98:	4b11      	ldr	r3, [pc, #68]	; (8001fe0 <HAL_RCC_GetClockConfig+0x58>)
 8001f9a:	685b      	ldr	r3, [r3, #4]
 8001f9c:	f003 0203 	and.w	r2, r3, #3
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	605a      	str	r2, [r3, #4]
 8001fa4:	4b0e      	ldr	r3, [pc, #56]	; (8001fe0 <HAL_RCC_GetClockConfig+0x58>)
 8001fa6:	685b      	ldr	r3, [r3, #4]
 8001fa8:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	609a      	str	r2, [r3, #8]
 8001fb0:	4b0b      	ldr	r3, [pc, #44]	; (8001fe0 <HAL_RCC_GetClockConfig+0x58>)
 8001fb2:	685b      	ldr	r3, [r3, #4]
 8001fb4:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	60da      	str	r2, [r3, #12]
 8001fbc:	4b08      	ldr	r3, [pc, #32]	; (8001fe0 <HAL_RCC_GetClockConfig+0x58>)
 8001fbe:	685b      	ldr	r3, [r3, #4]
 8001fc0:	08db      	lsrs	r3, r3, #3
 8001fc2:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8001fc6:	687b      	ldr	r3, [r7, #4]
 8001fc8:	611a      	str	r2, [r3, #16]
 8001fca:	4b06      	ldr	r3, [pc, #24]	; (8001fe4 <HAL_RCC_GetClockConfig+0x5c>)
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	f003 0207 	and.w	r2, r3, #7
 8001fd2:	683b      	ldr	r3, [r7, #0]
 8001fd4:	601a      	str	r2, [r3, #0]
 8001fd6:	bf00      	nop
 8001fd8:	370c      	adds	r7, #12
 8001fda:	46bd      	mov	sp, r7
 8001fdc:	bc80      	pop	{r7}
 8001fde:	4770      	bx	lr
 8001fe0:	40021000 	.word	0x40021000
 8001fe4:	40022000 	.word	0x40022000

08001fe8 <RCC_Delay>:
 8001fe8:	b480      	push	{r7}
 8001fea:	b085      	sub	sp, #20
 8001fec:	af00      	add	r7, sp, #0
 8001fee:	6078      	str	r0, [r7, #4]
 8001ff0:	4b0a      	ldr	r3, [pc, #40]	; (800201c <RCC_Delay+0x34>)
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	4a0a      	ldr	r2, [pc, #40]	; (8002020 <RCC_Delay+0x38>)
 8001ff6:	fba2 2303 	umull	r2, r3, r2, r3
 8001ffa:	0a5b      	lsrs	r3, r3, #9
 8001ffc:	687a      	ldr	r2, [r7, #4]
 8001ffe:	fb02 f303 	mul.w	r3, r2, r3
 8002002:	60fb      	str	r3, [r7, #12]
 8002004:	bf00      	nop
 8002006:	68fb      	ldr	r3, [r7, #12]
 8002008:	1e5a      	subs	r2, r3, #1
 800200a:	60fa      	str	r2, [r7, #12]
 800200c:	2b00      	cmp	r3, #0
 800200e:	d1f9      	bne.n	8002004 <RCC_Delay+0x1c>
 8002010:	bf00      	nop
 8002012:	bf00      	nop
 8002014:	3714      	adds	r7, #20
 8002016:	46bd      	mov	sp, r7
 8002018:	bc80      	pop	{r7}
 800201a:	4770      	bx	lr
 800201c:	200000cc 	.word	0x200000cc
 8002020:	10624dd3 	.word	0x10624dd3

08002024 <HAL_TIM_Base_Init>:
 8002024:	b580      	push	{r7, lr}
 8002026:	b082      	sub	sp, #8
 8002028:	af00      	add	r7, sp, #0
 800202a:	6078      	str	r0, [r7, #4]
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	2b00      	cmp	r3, #0
 8002030:	d101      	bne.n	8002036 <HAL_TIM_Base_Init+0x12>
 8002032:	2301      	movs	r3, #1
 8002034:	e041      	b.n	80020ba <HAL_TIM_Base_Init+0x96>
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800203c:	b2db      	uxtb	r3, r3
 800203e:	2b00      	cmp	r3, #0
 8002040:	d106      	bne.n	8002050 <HAL_TIM_Base_Init+0x2c>
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	2200      	movs	r2, #0
 8002046:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800204a:	6878      	ldr	r0, [r7, #4]
 800204c:	f000 f839 	bl	80020c2 <HAL_TIM_Base_MspInit>
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	2202      	movs	r2, #2
 8002054:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	681a      	ldr	r2, [r3, #0]
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	3304      	adds	r3, #4
 8002060:	4619      	mov	r1, r3
 8002062:	4610      	mov	r0, r2
 8002064:	f000 f9b4 	bl	80023d0 <TIM_Base_SetConfig>
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	2201      	movs	r2, #1
 800206c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002070:	687b      	ldr	r3, [r7, #4]
 8002072:	2201      	movs	r2, #1
 8002074:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	2201      	movs	r2, #1
 800207c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	2201      	movs	r2, #1
 8002084:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	2201      	movs	r2, #1
 800208c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002090:	687b      	ldr	r3, [r7, #4]
 8002092:	2201      	movs	r2, #1
 8002094:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	2201      	movs	r2, #1
 800209c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	2201      	movs	r2, #1
 80020a4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	2201      	movs	r2, #1
 80020ac:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	2201      	movs	r2, #1
 80020b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80020b8:	2300      	movs	r3, #0
 80020ba:	4618      	mov	r0, r3
 80020bc:	3708      	adds	r7, #8
 80020be:	46bd      	mov	sp, r7
 80020c0:	bd80      	pop	{r7, pc}

080020c2 <HAL_TIM_Base_MspInit>:
 80020c2:	b480      	push	{r7}
 80020c4:	b083      	sub	sp, #12
 80020c6:	af00      	add	r7, sp, #0
 80020c8:	6078      	str	r0, [r7, #4]
 80020ca:	bf00      	nop
 80020cc:	370c      	adds	r7, #12
 80020ce:	46bd      	mov	sp, r7
 80020d0:	bc80      	pop	{r7}
 80020d2:	4770      	bx	lr

080020d4 <HAL_TIM_Base_Start_IT>:
 80020d4:	b480      	push	{r7}
 80020d6:	b085      	sub	sp, #20
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80020e2:	b2db      	uxtb	r3, r3
 80020e4:	2b01      	cmp	r3, #1
 80020e6:	d001      	beq.n	80020ec <HAL_TIM_Base_Start_IT+0x18>
 80020e8:	2301      	movs	r3, #1
 80020ea:	e03a      	b.n	8002162 <HAL_TIM_Base_Start_IT+0x8e>
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	2202      	movs	r2, #2
 80020f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	681b      	ldr	r3, [r3, #0]
 80020f8:	68da      	ldr	r2, [r3, #12]
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	681b      	ldr	r3, [r3, #0]
 80020fe:	f042 0201 	orr.w	r2, r2, #1
 8002102:	60da      	str	r2, [r3, #12]
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	681b      	ldr	r3, [r3, #0]
 8002108:	4a18      	ldr	r2, [pc, #96]	; (800216c <HAL_TIM_Base_Start_IT+0x98>)
 800210a:	4293      	cmp	r3, r2
 800210c:	d00e      	beq.n	800212c <HAL_TIM_Base_Start_IT+0x58>
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	681b      	ldr	r3, [r3, #0]
 8002112:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002116:	d009      	beq.n	800212c <HAL_TIM_Base_Start_IT+0x58>
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	4a14      	ldr	r2, [pc, #80]	; (8002170 <HAL_TIM_Base_Start_IT+0x9c>)
 800211e:	4293      	cmp	r3, r2
 8002120:	d004      	beq.n	800212c <HAL_TIM_Base_Start_IT+0x58>
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	4a13      	ldr	r2, [pc, #76]	; (8002174 <HAL_TIM_Base_Start_IT+0xa0>)
 8002128:	4293      	cmp	r3, r2
 800212a:	d111      	bne.n	8002150 <HAL_TIM_Base_Start_IT+0x7c>
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	681b      	ldr	r3, [r3, #0]
 8002130:	689b      	ldr	r3, [r3, #8]
 8002132:	f003 0307 	and.w	r3, r3, #7
 8002136:	60fb      	str	r3, [r7, #12]
 8002138:	68fb      	ldr	r3, [r7, #12]
 800213a:	2b06      	cmp	r3, #6
 800213c:	d010      	beq.n	8002160 <HAL_TIM_Base_Start_IT+0x8c>
 800213e:	687b      	ldr	r3, [r7, #4]
 8002140:	681b      	ldr	r3, [r3, #0]
 8002142:	681a      	ldr	r2, [r3, #0]
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	681b      	ldr	r3, [r3, #0]
 8002148:	f042 0201 	orr.w	r2, r2, #1
 800214c:	601a      	str	r2, [r3, #0]
 800214e:	e007      	b.n	8002160 <HAL_TIM_Base_Start_IT+0x8c>
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	681b      	ldr	r3, [r3, #0]
 8002154:	681a      	ldr	r2, [r3, #0]
 8002156:	687b      	ldr	r3, [r7, #4]
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	f042 0201 	orr.w	r2, r2, #1
 800215e:	601a      	str	r2, [r3, #0]
 8002160:	2300      	movs	r3, #0
 8002162:	4618      	mov	r0, r3
 8002164:	3714      	adds	r7, #20
 8002166:	46bd      	mov	sp, r7
 8002168:	bc80      	pop	{r7}
 800216a:	4770      	bx	lr
 800216c:	40012c00 	.word	0x40012c00
 8002170:	40000400 	.word	0x40000400
 8002174:	40000800 	.word	0x40000800

08002178 <HAL_TIM_IRQHandler>:
 8002178:	b580      	push	{r7, lr}
 800217a:	b082      	sub	sp, #8
 800217c:	af00      	add	r7, sp, #0
 800217e:	6078      	str	r0, [r7, #4]
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	691b      	ldr	r3, [r3, #16]
 8002186:	f003 0302 	and.w	r3, r3, #2
 800218a:	2b02      	cmp	r3, #2
 800218c:	d122      	bne.n	80021d4 <HAL_TIM_IRQHandler+0x5c>
 800218e:	687b      	ldr	r3, [r7, #4]
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	68db      	ldr	r3, [r3, #12]
 8002194:	f003 0302 	and.w	r3, r3, #2
 8002198:	2b02      	cmp	r3, #2
 800219a:	d11b      	bne.n	80021d4 <HAL_TIM_IRQHandler+0x5c>
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	681b      	ldr	r3, [r3, #0]
 80021a0:	f06f 0202 	mvn.w	r2, #2
 80021a4:	611a      	str	r2, [r3, #16]
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	2201      	movs	r2, #1
 80021aa:	771a      	strb	r2, [r3, #28]
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	699b      	ldr	r3, [r3, #24]
 80021b2:	f003 0303 	and.w	r3, r3, #3
 80021b6:	2b00      	cmp	r3, #0
 80021b8:	d003      	beq.n	80021c2 <HAL_TIM_IRQHandler+0x4a>
 80021ba:	6878      	ldr	r0, [r7, #4]
 80021bc:	f000 f8ed 	bl	800239a <HAL_TIM_IC_CaptureCallback>
 80021c0:	e005      	b.n	80021ce <HAL_TIM_IRQHandler+0x56>
 80021c2:	6878      	ldr	r0, [r7, #4]
 80021c4:	f000 f8e0 	bl	8002388 <HAL_TIM_OC_DelayElapsedCallback>
 80021c8:	6878      	ldr	r0, [r7, #4]
 80021ca:	f000 f8ef 	bl	80023ac <HAL_TIM_PWM_PulseFinishedCallback>
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	2200      	movs	r2, #0
 80021d2:	771a      	strb	r2, [r3, #28]
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	691b      	ldr	r3, [r3, #16]
 80021da:	f003 0304 	and.w	r3, r3, #4
 80021de:	2b04      	cmp	r3, #4
 80021e0:	d122      	bne.n	8002228 <HAL_TIM_IRQHandler+0xb0>
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	68db      	ldr	r3, [r3, #12]
 80021e8:	f003 0304 	and.w	r3, r3, #4
 80021ec:	2b04      	cmp	r3, #4
 80021ee:	d11b      	bne.n	8002228 <HAL_TIM_IRQHandler+0xb0>
 80021f0:	687b      	ldr	r3, [r7, #4]
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	f06f 0204 	mvn.w	r2, #4
 80021f8:	611a      	str	r2, [r3, #16]
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	2202      	movs	r2, #2
 80021fe:	771a      	strb	r2, [r3, #28]
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	699b      	ldr	r3, [r3, #24]
 8002206:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800220a:	2b00      	cmp	r3, #0
 800220c:	d003      	beq.n	8002216 <HAL_TIM_IRQHandler+0x9e>
 800220e:	6878      	ldr	r0, [r7, #4]
 8002210:	f000 f8c3 	bl	800239a <HAL_TIM_IC_CaptureCallback>
 8002214:	e005      	b.n	8002222 <HAL_TIM_IRQHandler+0xaa>
 8002216:	6878      	ldr	r0, [r7, #4]
 8002218:	f000 f8b6 	bl	8002388 <HAL_TIM_OC_DelayElapsedCallback>
 800221c:	6878      	ldr	r0, [r7, #4]
 800221e:	f000 f8c5 	bl	80023ac <HAL_TIM_PWM_PulseFinishedCallback>
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	2200      	movs	r2, #0
 8002226:	771a      	strb	r2, [r3, #28]
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	691b      	ldr	r3, [r3, #16]
 800222e:	f003 0308 	and.w	r3, r3, #8
 8002232:	2b08      	cmp	r3, #8
 8002234:	d122      	bne.n	800227c <HAL_TIM_IRQHandler+0x104>
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	68db      	ldr	r3, [r3, #12]
 800223c:	f003 0308 	and.w	r3, r3, #8
 8002240:	2b08      	cmp	r3, #8
 8002242:	d11b      	bne.n	800227c <HAL_TIM_IRQHandler+0x104>
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	681b      	ldr	r3, [r3, #0]
 8002248:	f06f 0208 	mvn.w	r2, #8
 800224c:	611a      	str	r2, [r3, #16]
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	2204      	movs	r2, #4
 8002252:	771a      	strb	r2, [r3, #28]
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	69db      	ldr	r3, [r3, #28]
 800225a:	f003 0303 	and.w	r3, r3, #3
 800225e:	2b00      	cmp	r3, #0
 8002260:	d003      	beq.n	800226a <HAL_TIM_IRQHandler+0xf2>
 8002262:	6878      	ldr	r0, [r7, #4]
 8002264:	f000 f899 	bl	800239a <HAL_TIM_IC_CaptureCallback>
 8002268:	e005      	b.n	8002276 <HAL_TIM_IRQHandler+0xfe>
 800226a:	6878      	ldr	r0, [r7, #4]
 800226c:	f000 f88c 	bl	8002388 <HAL_TIM_OC_DelayElapsedCallback>
 8002270:	6878      	ldr	r0, [r7, #4]
 8002272:	f000 f89b 	bl	80023ac <HAL_TIM_PWM_PulseFinishedCallback>
 8002276:	687b      	ldr	r3, [r7, #4]
 8002278:	2200      	movs	r2, #0
 800227a:	771a      	strb	r2, [r3, #28]
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	681b      	ldr	r3, [r3, #0]
 8002280:	691b      	ldr	r3, [r3, #16]
 8002282:	f003 0310 	and.w	r3, r3, #16
 8002286:	2b10      	cmp	r3, #16
 8002288:	d122      	bne.n	80022d0 <HAL_TIM_IRQHandler+0x158>
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	68db      	ldr	r3, [r3, #12]
 8002290:	f003 0310 	and.w	r3, r3, #16
 8002294:	2b10      	cmp	r3, #16
 8002296:	d11b      	bne.n	80022d0 <HAL_TIM_IRQHandler+0x158>
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	f06f 0210 	mvn.w	r2, #16
 80022a0:	611a      	str	r2, [r3, #16]
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	2208      	movs	r2, #8
 80022a6:	771a      	strb	r2, [r3, #28]
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	69db      	ldr	r3, [r3, #28]
 80022ae:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80022b2:	2b00      	cmp	r3, #0
 80022b4:	d003      	beq.n	80022be <HAL_TIM_IRQHandler+0x146>
 80022b6:	6878      	ldr	r0, [r7, #4]
 80022b8:	f000 f86f 	bl	800239a <HAL_TIM_IC_CaptureCallback>
 80022bc:	e005      	b.n	80022ca <HAL_TIM_IRQHandler+0x152>
 80022be:	6878      	ldr	r0, [r7, #4]
 80022c0:	f000 f862 	bl	8002388 <HAL_TIM_OC_DelayElapsedCallback>
 80022c4:	6878      	ldr	r0, [r7, #4]
 80022c6:	f000 f871 	bl	80023ac <HAL_TIM_PWM_PulseFinishedCallback>
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	2200      	movs	r2, #0
 80022ce:	771a      	strb	r2, [r3, #28]
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	691b      	ldr	r3, [r3, #16]
 80022d6:	f003 0301 	and.w	r3, r3, #1
 80022da:	2b01      	cmp	r3, #1
 80022dc:	d10e      	bne.n	80022fc <HAL_TIM_IRQHandler+0x184>
 80022de:	687b      	ldr	r3, [r7, #4]
 80022e0:	681b      	ldr	r3, [r3, #0]
 80022e2:	68db      	ldr	r3, [r3, #12]
 80022e4:	f003 0301 	and.w	r3, r3, #1
 80022e8:	2b01      	cmp	r3, #1
 80022ea:	d107      	bne.n	80022fc <HAL_TIM_IRQHandler+0x184>
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	f06f 0201 	mvn.w	r2, #1
 80022f4:	611a      	str	r2, [r3, #16]
 80022f6:	6878      	ldr	r0, [r7, #4]
 80022f8:	f7fe fd10 	bl	8000d1c <HAL_TIM_PeriodElapsedCallback>
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	681b      	ldr	r3, [r3, #0]
 8002300:	691b      	ldr	r3, [r3, #16]
 8002302:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002306:	2b80      	cmp	r3, #128	; 0x80
 8002308:	d10e      	bne.n	8002328 <HAL_TIM_IRQHandler+0x1b0>
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	68db      	ldr	r3, [r3, #12]
 8002310:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002314:	2b80      	cmp	r3, #128	; 0x80
 8002316:	d107      	bne.n	8002328 <HAL_TIM_IRQHandler+0x1b0>
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	681b      	ldr	r3, [r3, #0]
 800231c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002320:	611a      	str	r2, [r3, #16]
 8002322:	6878      	ldr	r0, [r7, #4]
 8002324:	f000 f8bf 	bl	80024a6 <HAL_TIMEx_BreakCallback>
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	691b      	ldr	r3, [r3, #16]
 800232e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002332:	2b40      	cmp	r3, #64	; 0x40
 8002334:	d10e      	bne.n	8002354 <HAL_TIM_IRQHandler+0x1dc>
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	68db      	ldr	r3, [r3, #12]
 800233c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002340:	2b40      	cmp	r3, #64	; 0x40
 8002342:	d107      	bne.n	8002354 <HAL_TIM_IRQHandler+0x1dc>
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800234c:	611a      	str	r2, [r3, #16]
 800234e:	6878      	ldr	r0, [r7, #4]
 8002350:	f000 f835 	bl	80023be <HAL_TIM_TriggerCallback>
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	681b      	ldr	r3, [r3, #0]
 8002358:	691b      	ldr	r3, [r3, #16]
 800235a:	f003 0320 	and.w	r3, r3, #32
 800235e:	2b20      	cmp	r3, #32
 8002360:	d10e      	bne.n	8002380 <HAL_TIM_IRQHandler+0x208>
 8002362:	687b      	ldr	r3, [r7, #4]
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	68db      	ldr	r3, [r3, #12]
 8002368:	f003 0320 	and.w	r3, r3, #32
 800236c:	2b20      	cmp	r3, #32
 800236e:	d107      	bne.n	8002380 <HAL_TIM_IRQHandler+0x208>
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	681b      	ldr	r3, [r3, #0]
 8002374:	f06f 0220 	mvn.w	r2, #32
 8002378:	611a      	str	r2, [r3, #16]
 800237a:	6878      	ldr	r0, [r7, #4]
 800237c:	f000 f88a 	bl	8002494 <HAL_TIMEx_CommutCallback>
 8002380:	bf00      	nop
 8002382:	3708      	adds	r7, #8
 8002384:	46bd      	mov	sp, r7
 8002386:	bd80      	pop	{r7, pc}

08002388 <HAL_TIM_OC_DelayElapsedCallback>:
 8002388:	b480      	push	{r7}
 800238a:	b083      	sub	sp, #12
 800238c:	af00      	add	r7, sp, #0
 800238e:	6078      	str	r0, [r7, #4]
 8002390:	bf00      	nop
 8002392:	370c      	adds	r7, #12
 8002394:	46bd      	mov	sp, r7
 8002396:	bc80      	pop	{r7}
 8002398:	4770      	bx	lr

0800239a <HAL_TIM_IC_CaptureCallback>:
 800239a:	b480      	push	{r7}
 800239c:	b083      	sub	sp, #12
 800239e:	af00      	add	r7, sp, #0
 80023a0:	6078      	str	r0, [r7, #4]
 80023a2:	bf00      	nop
 80023a4:	370c      	adds	r7, #12
 80023a6:	46bd      	mov	sp, r7
 80023a8:	bc80      	pop	{r7}
 80023aa:	4770      	bx	lr

080023ac <HAL_TIM_PWM_PulseFinishedCallback>:
 80023ac:	b480      	push	{r7}
 80023ae:	b083      	sub	sp, #12
 80023b0:	af00      	add	r7, sp, #0
 80023b2:	6078      	str	r0, [r7, #4]
 80023b4:	bf00      	nop
 80023b6:	370c      	adds	r7, #12
 80023b8:	46bd      	mov	sp, r7
 80023ba:	bc80      	pop	{r7}
 80023bc:	4770      	bx	lr

080023be <HAL_TIM_TriggerCallback>:
 80023be:	b480      	push	{r7}
 80023c0:	b083      	sub	sp, #12
 80023c2:	af00      	add	r7, sp, #0
 80023c4:	6078      	str	r0, [r7, #4]
 80023c6:	bf00      	nop
 80023c8:	370c      	adds	r7, #12
 80023ca:	46bd      	mov	sp, r7
 80023cc:	bc80      	pop	{r7}
 80023ce:	4770      	bx	lr

080023d0 <TIM_Base_SetConfig>:
 80023d0:	b480      	push	{r7}
 80023d2:	b085      	sub	sp, #20
 80023d4:	af00      	add	r7, sp, #0
 80023d6:	6078      	str	r0, [r7, #4]
 80023d8:	6039      	str	r1, [r7, #0]
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	60fb      	str	r3, [r7, #12]
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	4a29      	ldr	r2, [pc, #164]	; (8002488 <TIM_Base_SetConfig+0xb8>)
 80023e4:	4293      	cmp	r3, r2
 80023e6:	d00b      	beq.n	8002400 <TIM_Base_SetConfig+0x30>
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80023ee:	d007      	beq.n	8002400 <TIM_Base_SetConfig+0x30>
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	4a26      	ldr	r2, [pc, #152]	; (800248c <TIM_Base_SetConfig+0xbc>)
 80023f4:	4293      	cmp	r3, r2
 80023f6:	d003      	beq.n	8002400 <TIM_Base_SetConfig+0x30>
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	4a25      	ldr	r2, [pc, #148]	; (8002490 <TIM_Base_SetConfig+0xc0>)
 80023fc:	4293      	cmp	r3, r2
 80023fe:	d108      	bne.n	8002412 <TIM_Base_SetConfig+0x42>
 8002400:	68fb      	ldr	r3, [r7, #12]
 8002402:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002406:	60fb      	str	r3, [r7, #12]
 8002408:	683b      	ldr	r3, [r7, #0]
 800240a:	685b      	ldr	r3, [r3, #4]
 800240c:	68fa      	ldr	r2, [r7, #12]
 800240e:	4313      	orrs	r3, r2
 8002410:	60fb      	str	r3, [r7, #12]
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	4a1c      	ldr	r2, [pc, #112]	; (8002488 <TIM_Base_SetConfig+0xb8>)
 8002416:	4293      	cmp	r3, r2
 8002418:	d00b      	beq.n	8002432 <TIM_Base_SetConfig+0x62>
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002420:	d007      	beq.n	8002432 <TIM_Base_SetConfig+0x62>
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	4a19      	ldr	r2, [pc, #100]	; (800248c <TIM_Base_SetConfig+0xbc>)
 8002426:	4293      	cmp	r3, r2
 8002428:	d003      	beq.n	8002432 <TIM_Base_SetConfig+0x62>
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	4a18      	ldr	r2, [pc, #96]	; (8002490 <TIM_Base_SetConfig+0xc0>)
 800242e:	4293      	cmp	r3, r2
 8002430:	d108      	bne.n	8002444 <TIM_Base_SetConfig+0x74>
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002438:	60fb      	str	r3, [r7, #12]
 800243a:	683b      	ldr	r3, [r7, #0]
 800243c:	68db      	ldr	r3, [r3, #12]
 800243e:	68fa      	ldr	r2, [r7, #12]
 8002440:	4313      	orrs	r3, r2
 8002442:	60fb      	str	r3, [r7, #12]
 8002444:	68fb      	ldr	r3, [r7, #12]
 8002446:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800244a:	683b      	ldr	r3, [r7, #0]
 800244c:	695b      	ldr	r3, [r3, #20]
 800244e:	4313      	orrs	r3, r2
 8002450:	60fb      	str	r3, [r7, #12]
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	68fa      	ldr	r2, [r7, #12]
 8002456:	601a      	str	r2, [r3, #0]
 8002458:	683b      	ldr	r3, [r7, #0]
 800245a:	689a      	ldr	r2, [r3, #8]
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	62da      	str	r2, [r3, #44]	; 0x2c
 8002460:	683b      	ldr	r3, [r7, #0]
 8002462:	681a      	ldr	r2, [r3, #0]
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	629a      	str	r2, [r3, #40]	; 0x28
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	4a07      	ldr	r2, [pc, #28]	; (8002488 <TIM_Base_SetConfig+0xb8>)
 800246c:	4293      	cmp	r3, r2
 800246e:	d103      	bne.n	8002478 <TIM_Base_SetConfig+0xa8>
 8002470:	683b      	ldr	r3, [r7, #0]
 8002472:	691a      	ldr	r2, [r3, #16]
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	631a      	str	r2, [r3, #48]	; 0x30
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	2201      	movs	r2, #1
 800247c:	615a      	str	r2, [r3, #20]
 800247e:	bf00      	nop
 8002480:	3714      	adds	r7, #20
 8002482:	46bd      	mov	sp, r7
 8002484:	bc80      	pop	{r7}
 8002486:	4770      	bx	lr
 8002488:	40012c00 	.word	0x40012c00
 800248c:	40000400 	.word	0x40000400
 8002490:	40000800 	.word	0x40000800

08002494 <HAL_TIMEx_CommutCallback>:
 8002494:	b480      	push	{r7}
 8002496:	b083      	sub	sp, #12
 8002498:	af00      	add	r7, sp, #0
 800249a:	6078      	str	r0, [r7, #4]
 800249c:	bf00      	nop
 800249e:	370c      	adds	r7, #12
 80024a0:	46bd      	mov	sp, r7
 80024a2:	bc80      	pop	{r7}
 80024a4:	4770      	bx	lr

080024a6 <HAL_TIMEx_BreakCallback>:
 80024a6:	b480      	push	{r7}
 80024a8:	b083      	sub	sp, #12
 80024aa:	af00      	add	r7, sp, #0
 80024ac:	6078      	str	r0, [r7, #4]
 80024ae:	bf00      	nop
 80024b0:	370c      	adds	r7, #12
 80024b2:	46bd      	mov	sp, r7
 80024b4:	bc80      	pop	{r7}
 80024b6:	4770      	bx	lr

080024b8 <HAL_UART_Init>:
 80024b8:	b580      	push	{r7, lr}
 80024ba:	b082      	sub	sp, #8
 80024bc:	af00      	add	r7, sp, #0
 80024be:	6078      	str	r0, [r7, #4]
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	2b00      	cmp	r3, #0
 80024c4:	d101      	bne.n	80024ca <HAL_UART_Init+0x12>
 80024c6:	2301      	movs	r3, #1
 80024c8:	e03f      	b.n	800254a <HAL_UART_Init+0x92>
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80024d0:	b2db      	uxtb	r3, r3
 80024d2:	2b00      	cmp	r3, #0
 80024d4:	d106      	bne.n	80024e4 <HAL_UART_Init+0x2c>
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	2200      	movs	r2, #0
 80024da:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80024de:	6878      	ldr	r0, [r7, #4]
 80024e0:	f7fe fc6c 	bl	8000dbc <HAL_UART_MspInit>
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	2224      	movs	r2, #36	; 0x24
 80024e8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	68da      	ldr	r2, [r3, #12]
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80024fa:	60da      	str	r2, [r3, #12]
 80024fc:	6878      	ldr	r0, [r7, #4]
 80024fe:	f000 f9a3 	bl	8002848 <UART_SetConfig>
 8002502:	687b      	ldr	r3, [r7, #4]
 8002504:	681b      	ldr	r3, [r3, #0]
 8002506:	691a      	ldr	r2, [r3, #16]
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002510:	611a      	str	r2, [r3, #16]
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	695a      	ldr	r2, [r3, #20]
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002520:	615a      	str	r2, [r3, #20]
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	68da      	ldr	r2, [r3, #12]
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002530:	60da      	str	r2, [r3, #12]
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	2200      	movs	r2, #0
 8002536:	63da      	str	r2, [r3, #60]	; 0x3c
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	2220      	movs	r2, #32
 800253c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	2220      	movs	r2, #32
 8002544:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002548:	2300      	movs	r3, #0
 800254a:	4618      	mov	r0, r3
 800254c:	3708      	adds	r7, #8
 800254e:	46bd      	mov	sp, r7
 8002550:	bd80      	pop	{r7, pc}

08002552 <HAL_UART_Transmit>:
 8002552:	b580      	push	{r7, lr}
 8002554:	b08a      	sub	sp, #40	; 0x28
 8002556:	af02      	add	r7, sp, #8
 8002558:	60f8      	str	r0, [r7, #12]
 800255a:	60b9      	str	r1, [r7, #8]
 800255c:	603b      	str	r3, [r7, #0]
 800255e:	4613      	mov	r3, r2
 8002560:	80fb      	strh	r3, [r7, #6]
 8002562:	2300      	movs	r3, #0
 8002564:	617b      	str	r3, [r7, #20]
 8002566:	68fb      	ldr	r3, [r7, #12]
 8002568:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800256c:	b2db      	uxtb	r3, r3
 800256e:	2b20      	cmp	r3, #32
 8002570:	d17c      	bne.n	800266c <HAL_UART_Transmit+0x11a>
 8002572:	68bb      	ldr	r3, [r7, #8]
 8002574:	2b00      	cmp	r3, #0
 8002576:	d002      	beq.n	800257e <HAL_UART_Transmit+0x2c>
 8002578:	88fb      	ldrh	r3, [r7, #6]
 800257a:	2b00      	cmp	r3, #0
 800257c:	d101      	bne.n	8002582 <HAL_UART_Transmit+0x30>
 800257e:	2301      	movs	r3, #1
 8002580:	e075      	b.n	800266e <HAL_UART_Transmit+0x11c>
 8002582:	68fb      	ldr	r3, [r7, #12]
 8002584:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002588:	2b01      	cmp	r3, #1
 800258a:	d101      	bne.n	8002590 <HAL_UART_Transmit+0x3e>
 800258c:	2302      	movs	r3, #2
 800258e:	e06e      	b.n	800266e <HAL_UART_Transmit+0x11c>
 8002590:	68fb      	ldr	r3, [r7, #12]
 8002592:	2201      	movs	r2, #1
 8002594:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002598:	68fb      	ldr	r3, [r7, #12]
 800259a:	2200      	movs	r2, #0
 800259c:	63da      	str	r2, [r3, #60]	; 0x3c
 800259e:	68fb      	ldr	r3, [r7, #12]
 80025a0:	2221      	movs	r2, #33	; 0x21
 80025a2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80025a6:	f7fe fe53 	bl	8001250 <HAL_GetTick>
 80025aa:	6178      	str	r0, [r7, #20]
 80025ac:	68fb      	ldr	r3, [r7, #12]
 80025ae:	88fa      	ldrh	r2, [r7, #6]
 80025b0:	849a      	strh	r2, [r3, #36]	; 0x24
 80025b2:	68fb      	ldr	r3, [r7, #12]
 80025b4:	88fa      	ldrh	r2, [r7, #6]
 80025b6:	84da      	strh	r2, [r3, #38]	; 0x26
 80025b8:	68fb      	ldr	r3, [r7, #12]
 80025ba:	689b      	ldr	r3, [r3, #8]
 80025bc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80025c0:	d108      	bne.n	80025d4 <HAL_UART_Transmit+0x82>
 80025c2:	68fb      	ldr	r3, [r7, #12]
 80025c4:	691b      	ldr	r3, [r3, #16]
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	d104      	bne.n	80025d4 <HAL_UART_Transmit+0x82>
 80025ca:	2300      	movs	r3, #0
 80025cc:	61fb      	str	r3, [r7, #28]
 80025ce:	68bb      	ldr	r3, [r7, #8]
 80025d0:	61bb      	str	r3, [r7, #24]
 80025d2:	e003      	b.n	80025dc <HAL_UART_Transmit+0x8a>
 80025d4:	68bb      	ldr	r3, [r7, #8]
 80025d6:	61fb      	str	r3, [r7, #28]
 80025d8:	2300      	movs	r3, #0
 80025da:	61bb      	str	r3, [r7, #24]
 80025dc:	68fb      	ldr	r3, [r7, #12]
 80025de:	2200      	movs	r2, #0
 80025e0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80025e4:	e02a      	b.n	800263c <HAL_UART_Transmit+0xea>
 80025e6:	683b      	ldr	r3, [r7, #0]
 80025e8:	9300      	str	r3, [sp, #0]
 80025ea:	697b      	ldr	r3, [r7, #20]
 80025ec:	2200      	movs	r2, #0
 80025ee:	2180      	movs	r1, #128	; 0x80
 80025f0:	68f8      	ldr	r0, [r7, #12]
 80025f2:	f000 f8df 	bl	80027b4 <UART_WaitOnFlagUntilTimeout>
 80025f6:	4603      	mov	r3, r0
 80025f8:	2b00      	cmp	r3, #0
 80025fa:	d001      	beq.n	8002600 <HAL_UART_Transmit+0xae>
 80025fc:	2303      	movs	r3, #3
 80025fe:	e036      	b.n	800266e <HAL_UART_Transmit+0x11c>
 8002600:	69fb      	ldr	r3, [r7, #28]
 8002602:	2b00      	cmp	r3, #0
 8002604:	d10b      	bne.n	800261e <HAL_UART_Transmit+0xcc>
 8002606:	69bb      	ldr	r3, [r7, #24]
 8002608:	881b      	ldrh	r3, [r3, #0]
 800260a:	461a      	mov	r2, r3
 800260c:	68fb      	ldr	r3, [r7, #12]
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002614:	605a      	str	r2, [r3, #4]
 8002616:	69bb      	ldr	r3, [r7, #24]
 8002618:	3302      	adds	r3, #2
 800261a:	61bb      	str	r3, [r7, #24]
 800261c:	e007      	b.n	800262e <HAL_UART_Transmit+0xdc>
 800261e:	69fb      	ldr	r3, [r7, #28]
 8002620:	781a      	ldrb	r2, [r3, #0]
 8002622:	68fb      	ldr	r3, [r7, #12]
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	605a      	str	r2, [r3, #4]
 8002628:	69fb      	ldr	r3, [r7, #28]
 800262a:	3301      	adds	r3, #1
 800262c:	61fb      	str	r3, [r7, #28]
 800262e:	68fb      	ldr	r3, [r7, #12]
 8002630:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002632:	b29b      	uxth	r3, r3
 8002634:	3b01      	subs	r3, #1
 8002636:	b29a      	uxth	r2, r3
 8002638:	68fb      	ldr	r3, [r7, #12]
 800263a:	84da      	strh	r2, [r3, #38]	; 0x26
 800263c:	68fb      	ldr	r3, [r7, #12]
 800263e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002640:	b29b      	uxth	r3, r3
 8002642:	2b00      	cmp	r3, #0
 8002644:	d1cf      	bne.n	80025e6 <HAL_UART_Transmit+0x94>
 8002646:	683b      	ldr	r3, [r7, #0]
 8002648:	9300      	str	r3, [sp, #0]
 800264a:	697b      	ldr	r3, [r7, #20]
 800264c:	2200      	movs	r2, #0
 800264e:	2140      	movs	r1, #64	; 0x40
 8002650:	68f8      	ldr	r0, [r7, #12]
 8002652:	f000 f8af 	bl	80027b4 <UART_WaitOnFlagUntilTimeout>
 8002656:	4603      	mov	r3, r0
 8002658:	2b00      	cmp	r3, #0
 800265a:	d001      	beq.n	8002660 <HAL_UART_Transmit+0x10e>
 800265c:	2303      	movs	r3, #3
 800265e:	e006      	b.n	800266e <HAL_UART_Transmit+0x11c>
 8002660:	68fb      	ldr	r3, [r7, #12]
 8002662:	2220      	movs	r2, #32
 8002664:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002668:	2300      	movs	r3, #0
 800266a:	e000      	b.n	800266e <HAL_UART_Transmit+0x11c>
 800266c:	2302      	movs	r3, #2
 800266e:	4618      	mov	r0, r3
 8002670:	3720      	adds	r7, #32
 8002672:	46bd      	mov	sp, r7
 8002674:	bd80      	pop	{r7, pc}

08002676 <HAL_UART_Receive>:
 8002676:	b580      	push	{r7, lr}
 8002678:	b08a      	sub	sp, #40	; 0x28
 800267a:	af02      	add	r7, sp, #8
 800267c:	60f8      	str	r0, [r7, #12]
 800267e:	60b9      	str	r1, [r7, #8]
 8002680:	603b      	str	r3, [r7, #0]
 8002682:	4613      	mov	r3, r2
 8002684:	80fb      	strh	r3, [r7, #6]
 8002686:	2300      	movs	r3, #0
 8002688:	617b      	str	r3, [r7, #20]
 800268a:	68fb      	ldr	r3, [r7, #12]
 800268c:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8002690:	b2db      	uxtb	r3, r3
 8002692:	2b20      	cmp	r3, #32
 8002694:	f040 8089 	bne.w	80027aa <HAL_UART_Receive+0x134>
 8002698:	68bb      	ldr	r3, [r7, #8]
 800269a:	2b00      	cmp	r3, #0
 800269c:	d002      	beq.n	80026a4 <HAL_UART_Receive+0x2e>
 800269e:	88fb      	ldrh	r3, [r7, #6]
 80026a0:	2b00      	cmp	r3, #0
 80026a2:	d101      	bne.n	80026a8 <HAL_UART_Receive+0x32>
 80026a4:	2301      	movs	r3, #1
 80026a6:	e081      	b.n	80027ac <HAL_UART_Receive+0x136>
 80026a8:	68fb      	ldr	r3, [r7, #12]
 80026aa:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80026ae:	2b01      	cmp	r3, #1
 80026b0:	d101      	bne.n	80026b6 <HAL_UART_Receive+0x40>
 80026b2:	2302      	movs	r3, #2
 80026b4:	e07a      	b.n	80027ac <HAL_UART_Receive+0x136>
 80026b6:	68fb      	ldr	r3, [r7, #12]
 80026b8:	2201      	movs	r2, #1
 80026ba:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80026be:	68fb      	ldr	r3, [r7, #12]
 80026c0:	2200      	movs	r2, #0
 80026c2:	63da      	str	r2, [r3, #60]	; 0x3c
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	2222      	movs	r2, #34	; 0x22
 80026c8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80026cc:	f7fe fdc0 	bl	8001250 <HAL_GetTick>
 80026d0:	6178      	str	r0, [r7, #20]
 80026d2:	68fb      	ldr	r3, [r7, #12]
 80026d4:	88fa      	ldrh	r2, [r7, #6]
 80026d6:	859a      	strh	r2, [r3, #44]	; 0x2c
 80026d8:	68fb      	ldr	r3, [r7, #12]
 80026da:	88fa      	ldrh	r2, [r7, #6]
 80026dc:	85da      	strh	r2, [r3, #46]	; 0x2e
 80026de:	68fb      	ldr	r3, [r7, #12]
 80026e0:	689b      	ldr	r3, [r3, #8]
 80026e2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80026e6:	d108      	bne.n	80026fa <HAL_UART_Receive+0x84>
 80026e8:	68fb      	ldr	r3, [r7, #12]
 80026ea:	691b      	ldr	r3, [r3, #16]
 80026ec:	2b00      	cmp	r3, #0
 80026ee:	d104      	bne.n	80026fa <HAL_UART_Receive+0x84>
 80026f0:	2300      	movs	r3, #0
 80026f2:	61fb      	str	r3, [r7, #28]
 80026f4:	68bb      	ldr	r3, [r7, #8]
 80026f6:	61bb      	str	r3, [r7, #24]
 80026f8:	e003      	b.n	8002702 <HAL_UART_Receive+0x8c>
 80026fa:	68bb      	ldr	r3, [r7, #8]
 80026fc:	61fb      	str	r3, [r7, #28]
 80026fe:	2300      	movs	r3, #0
 8002700:	61bb      	str	r3, [r7, #24]
 8002702:	68fb      	ldr	r3, [r7, #12]
 8002704:	2200      	movs	r2, #0
 8002706:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800270a:	e043      	b.n	8002794 <HAL_UART_Receive+0x11e>
 800270c:	683b      	ldr	r3, [r7, #0]
 800270e:	9300      	str	r3, [sp, #0]
 8002710:	697b      	ldr	r3, [r7, #20]
 8002712:	2200      	movs	r2, #0
 8002714:	2120      	movs	r1, #32
 8002716:	68f8      	ldr	r0, [r7, #12]
 8002718:	f000 f84c 	bl	80027b4 <UART_WaitOnFlagUntilTimeout>
 800271c:	4603      	mov	r3, r0
 800271e:	2b00      	cmp	r3, #0
 8002720:	d001      	beq.n	8002726 <HAL_UART_Receive+0xb0>
 8002722:	2303      	movs	r3, #3
 8002724:	e042      	b.n	80027ac <HAL_UART_Receive+0x136>
 8002726:	69fb      	ldr	r3, [r7, #28]
 8002728:	2b00      	cmp	r3, #0
 800272a:	d10c      	bne.n	8002746 <HAL_UART_Receive+0xd0>
 800272c:	68fb      	ldr	r3, [r7, #12]
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	685b      	ldr	r3, [r3, #4]
 8002732:	b29b      	uxth	r3, r3
 8002734:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002738:	b29a      	uxth	r2, r3
 800273a:	69bb      	ldr	r3, [r7, #24]
 800273c:	801a      	strh	r2, [r3, #0]
 800273e:	69bb      	ldr	r3, [r7, #24]
 8002740:	3302      	adds	r3, #2
 8002742:	61bb      	str	r3, [r7, #24]
 8002744:	e01f      	b.n	8002786 <HAL_UART_Receive+0x110>
 8002746:	68fb      	ldr	r3, [r7, #12]
 8002748:	689b      	ldr	r3, [r3, #8]
 800274a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800274e:	d007      	beq.n	8002760 <HAL_UART_Receive+0xea>
 8002750:	68fb      	ldr	r3, [r7, #12]
 8002752:	689b      	ldr	r3, [r3, #8]
 8002754:	2b00      	cmp	r3, #0
 8002756:	d10a      	bne.n	800276e <HAL_UART_Receive+0xf8>
 8002758:	68fb      	ldr	r3, [r7, #12]
 800275a:	691b      	ldr	r3, [r3, #16]
 800275c:	2b00      	cmp	r3, #0
 800275e:	d106      	bne.n	800276e <HAL_UART_Receive+0xf8>
 8002760:	68fb      	ldr	r3, [r7, #12]
 8002762:	681b      	ldr	r3, [r3, #0]
 8002764:	685b      	ldr	r3, [r3, #4]
 8002766:	b2da      	uxtb	r2, r3
 8002768:	69fb      	ldr	r3, [r7, #28]
 800276a:	701a      	strb	r2, [r3, #0]
 800276c:	e008      	b.n	8002780 <HAL_UART_Receive+0x10a>
 800276e:	68fb      	ldr	r3, [r7, #12]
 8002770:	681b      	ldr	r3, [r3, #0]
 8002772:	685b      	ldr	r3, [r3, #4]
 8002774:	b2db      	uxtb	r3, r3
 8002776:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800277a:	b2da      	uxtb	r2, r3
 800277c:	69fb      	ldr	r3, [r7, #28]
 800277e:	701a      	strb	r2, [r3, #0]
 8002780:	69fb      	ldr	r3, [r7, #28]
 8002782:	3301      	adds	r3, #1
 8002784:	61fb      	str	r3, [r7, #28]
 8002786:	68fb      	ldr	r3, [r7, #12]
 8002788:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800278a:	b29b      	uxth	r3, r3
 800278c:	3b01      	subs	r3, #1
 800278e:	b29a      	uxth	r2, r3
 8002790:	68fb      	ldr	r3, [r7, #12]
 8002792:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002794:	68fb      	ldr	r3, [r7, #12]
 8002796:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002798:	b29b      	uxth	r3, r3
 800279a:	2b00      	cmp	r3, #0
 800279c:	d1b6      	bne.n	800270c <HAL_UART_Receive+0x96>
 800279e:	68fb      	ldr	r3, [r7, #12]
 80027a0:	2220      	movs	r2, #32
 80027a2:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80027a6:	2300      	movs	r3, #0
 80027a8:	e000      	b.n	80027ac <HAL_UART_Receive+0x136>
 80027aa:	2302      	movs	r3, #2
 80027ac:	4618      	mov	r0, r3
 80027ae:	3720      	adds	r7, #32
 80027b0:	46bd      	mov	sp, r7
 80027b2:	bd80      	pop	{r7, pc}

080027b4 <UART_WaitOnFlagUntilTimeout>:
 80027b4:	b580      	push	{r7, lr}
 80027b6:	b084      	sub	sp, #16
 80027b8:	af00      	add	r7, sp, #0
 80027ba:	60f8      	str	r0, [r7, #12]
 80027bc:	60b9      	str	r1, [r7, #8]
 80027be:	603b      	str	r3, [r7, #0]
 80027c0:	4613      	mov	r3, r2
 80027c2:	71fb      	strb	r3, [r7, #7]
 80027c4:	e02c      	b.n	8002820 <UART_WaitOnFlagUntilTimeout+0x6c>
 80027c6:	69bb      	ldr	r3, [r7, #24]
 80027c8:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80027cc:	d028      	beq.n	8002820 <UART_WaitOnFlagUntilTimeout+0x6c>
 80027ce:	69bb      	ldr	r3, [r7, #24]
 80027d0:	2b00      	cmp	r3, #0
 80027d2:	d007      	beq.n	80027e4 <UART_WaitOnFlagUntilTimeout+0x30>
 80027d4:	f7fe fd3c 	bl	8001250 <HAL_GetTick>
 80027d8:	4602      	mov	r2, r0
 80027da:	683b      	ldr	r3, [r7, #0]
 80027dc:	1ad3      	subs	r3, r2, r3
 80027de:	69ba      	ldr	r2, [r7, #24]
 80027e0:	429a      	cmp	r2, r3
 80027e2:	d21d      	bcs.n	8002820 <UART_WaitOnFlagUntilTimeout+0x6c>
 80027e4:	68fb      	ldr	r3, [r7, #12]
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	68da      	ldr	r2, [r3, #12]
 80027ea:	68fb      	ldr	r3, [r7, #12]
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80027f2:	60da      	str	r2, [r3, #12]
 80027f4:	68fb      	ldr	r3, [r7, #12]
 80027f6:	681b      	ldr	r3, [r3, #0]
 80027f8:	695a      	ldr	r2, [r3, #20]
 80027fa:	68fb      	ldr	r3, [r7, #12]
 80027fc:	681b      	ldr	r3, [r3, #0]
 80027fe:	f022 0201 	bic.w	r2, r2, #1
 8002802:	615a      	str	r2, [r3, #20]
 8002804:	68fb      	ldr	r3, [r7, #12]
 8002806:	2220      	movs	r2, #32
 8002808:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	2220      	movs	r2, #32
 8002810:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002814:	68fb      	ldr	r3, [r7, #12]
 8002816:	2200      	movs	r2, #0
 8002818:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800281c:	2303      	movs	r3, #3
 800281e:	e00f      	b.n	8002840 <UART_WaitOnFlagUntilTimeout+0x8c>
 8002820:	68fb      	ldr	r3, [r7, #12]
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	681a      	ldr	r2, [r3, #0]
 8002826:	68bb      	ldr	r3, [r7, #8]
 8002828:	4013      	ands	r3, r2
 800282a:	68ba      	ldr	r2, [r7, #8]
 800282c:	429a      	cmp	r2, r3
 800282e:	bf0c      	ite	eq
 8002830:	2301      	moveq	r3, #1
 8002832:	2300      	movne	r3, #0
 8002834:	b2db      	uxtb	r3, r3
 8002836:	461a      	mov	r2, r3
 8002838:	79fb      	ldrb	r3, [r7, #7]
 800283a:	429a      	cmp	r2, r3
 800283c:	d0c3      	beq.n	80027c6 <UART_WaitOnFlagUntilTimeout+0x12>
 800283e:	2300      	movs	r3, #0
 8002840:	4618      	mov	r0, r3
 8002842:	3710      	adds	r7, #16
 8002844:	46bd      	mov	sp, r7
 8002846:	bd80      	pop	{r7, pc}

08002848 <UART_SetConfig>:
 8002848:	b580      	push	{r7, lr}
 800284a:	b084      	sub	sp, #16
 800284c:	af00      	add	r7, sp, #0
 800284e:	6078      	str	r0, [r7, #4]
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	691b      	ldr	r3, [r3, #16]
 8002856:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	68da      	ldr	r2, [r3, #12]
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	430a      	orrs	r2, r1
 8002864:	611a      	str	r2, [r3, #16]
 8002866:	687b      	ldr	r3, [r7, #4]
 8002868:	689a      	ldr	r2, [r3, #8]
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	691b      	ldr	r3, [r3, #16]
 800286e:	431a      	orrs	r2, r3
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	695b      	ldr	r3, [r3, #20]
 8002874:	4313      	orrs	r3, r2
 8002876:	60bb      	str	r3, [r7, #8]
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	681b      	ldr	r3, [r3, #0]
 800287c:	68db      	ldr	r3, [r3, #12]
 800287e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8002882:	f023 030c 	bic.w	r3, r3, #12
 8002886:	687a      	ldr	r2, [r7, #4]
 8002888:	6812      	ldr	r2, [r2, #0]
 800288a:	68b9      	ldr	r1, [r7, #8]
 800288c:	430b      	orrs	r3, r1
 800288e:	60d3      	str	r3, [r2, #12]
 8002890:	687b      	ldr	r3, [r7, #4]
 8002892:	681b      	ldr	r3, [r3, #0]
 8002894:	695b      	ldr	r3, [r3, #20]
 8002896:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800289a:	687b      	ldr	r3, [r7, #4]
 800289c:	699a      	ldr	r2, [r3, #24]
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	430a      	orrs	r2, r1
 80028a4:	615a      	str	r2, [r3, #20]
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	681b      	ldr	r3, [r3, #0]
 80028aa:	4a2c      	ldr	r2, [pc, #176]	; (800295c <UART_SetConfig+0x114>)
 80028ac:	4293      	cmp	r3, r2
 80028ae:	d103      	bne.n	80028b8 <UART_SetConfig+0x70>
 80028b0:	f7ff fb56 	bl	8001f60 <HAL_RCC_GetPCLK2Freq>
 80028b4:	60f8      	str	r0, [r7, #12]
 80028b6:	e002      	b.n	80028be <UART_SetConfig+0x76>
 80028b8:	f7ff fb3e 	bl	8001f38 <HAL_RCC_GetPCLK1Freq>
 80028bc:	60f8      	str	r0, [r7, #12]
 80028be:	68fa      	ldr	r2, [r7, #12]
 80028c0:	4613      	mov	r3, r2
 80028c2:	009b      	lsls	r3, r3, #2
 80028c4:	4413      	add	r3, r2
 80028c6:	009a      	lsls	r2, r3, #2
 80028c8:	441a      	add	r2, r3
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	685b      	ldr	r3, [r3, #4]
 80028ce:	009b      	lsls	r3, r3, #2
 80028d0:	fbb2 f3f3 	udiv	r3, r2, r3
 80028d4:	4a22      	ldr	r2, [pc, #136]	; (8002960 <UART_SetConfig+0x118>)
 80028d6:	fba2 2303 	umull	r2, r3, r2, r3
 80028da:	095b      	lsrs	r3, r3, #5
 80028dc:	0119      	lsls	r1, r3, #4
 80028de:	68fa      	ldr	r2, [r7, #12]
 80028e0:	4613      	mov	r3, r2
 80028e2:	009b      	lsls	r3, r3, #2
 80028e4:	4413      	add	r3, r2
 80028e6:	009a      	lsls	r2, r3, #2
 80028e8:	441a      	add	r2, r3
 80028ea:	687b      	ldr	r3, [r7, #4]
 80028ec:	685b      	ldr	r3, [r3, #4]
 80028ee:	009b      	lsls	r3, r3, #2
 80028f0:	fbb2 f2f3 	udiv	r2, r2, r3
 80028f4:	4b1a      	ldr	r3, [pc, #104]	; (8002960 <UART_SetConfig+0x118>)
 80028f6:	fba3 0302 	umull	r0, r3, r3, r2
 80028fa:	095b      	lsrs	r3, r3, #5
 80028fc:	2064      	movs	r0, #100	; 0x64
 80028fe:	fb00 f303 	mul.w	r3, r0, r3
 8002902:	1ad3      	subs	r3, r2, r3
 8002904:	011b      	lsls	r3, r3, #4
 8002906:	3332      	adds	r3, #50	; 0x32
 8002908:	4a15      	ldr	r2, [pc, #84]	; (8002960 <UART_SetConfig+0x118>)
 800290a:	fba2 2303 	umull	r2, r3, r2, r3
 800290e:	095b      	lsrs	r3, r3, #5
 8002910:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002914:	4419      	add	r1, r3
 8002916:	68fa      	ldr	r2, [r7, #12]
 8002918:	4613      	mov	r3, r2
 800291a:	009b      	lsls	r3, r3, #2
 800291c:	4413      	add	r3, r2
 800291e:	009a      	lsls	r2, r3, #2
 8002920:	441a      	add	r2, r3
 8002922:	687b      	ldr	r3, [r7, #4]
 8002924:	685b      	ldr	r3, [r3, #4]
 8002926:	009b      	lsls	r3, r3, #2
 8002928:	fbb2 f2f3 	udiv	r2, r2, r3
 800292c:	4b0c      	ldr	r3, [pc, #48]	; (8002960 <UART_SetConfig+0x118>)
 800292e:	fba3 0302 	umull	r0, r3, r3, r2
 8002932:	095b      	lsrs	r3, r3, #5
 8002934:	2064      	movs	r0, #100	; 0x64
 8002936:	fb00 f303 	mul.w	r3, r0, r3
 800293a:	1ad3      	subs	r3, r2, r3
 800293c:	011b      	lsls	r3, r3, #4
 800293e:	3332      	adds	r3, #50	; 0x32
 8002940:	4a07      	ldr	r2, [pc, #28]	; (8002960 <UART_SetConfig+0x118>)
 8002942:	fba2 2303 	umull	r2, r3, r2, r3
 8002946:	095b      	lsrs	r3, r3, #5
 8002948:	f003 020f 	and.w	r2, r3, #15
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	440a      	add	r2, r1
 8002952:	609a      	str	r2, [r3, #8]
 8002954:	bf00      	nop
 8002956:	3710      	adds	r7, #16
 8002958:	46bd      	mov	sp, r7
 800295a:	bd80      	pop	{r7, pc}
 800295c:	40013800 	.word	0x40013800
 8002960:	51eb851f 	.word	0x51eb851f

08002964 <makeFreeRtosPriority>:
 8002964:	b480      	push	{r7}
 8002966:	b085      	sub	sp, #20
 8002968:	af00      	add	r7, sp, #0
 800296a:	4603      	mov	r3, r0
 800296c:	80fb      	strh	r3, [r7, #6]
 800296e:	2300      	movs	r3, #0
 8002970:	60fb      	str	r3, [r7, #12]
 8002972:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002976:	2b84      	cmp	r3, #132	; 0x84
 8002978:	d005      	beq.n	8002986 <makeFreeRtosPriority+0x22>
 800297a:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800297e:	68fb      	ldr	r3, [r7, #12]
 8002980:	4413      	add	r3, r2
 8002982:	3303      	adds	r3, #3
 8002984:	60fb      	str	r3, [r7, #12]
 8002986:	68fb      	ldr	r3, [r7, #12]
 8002988:	4618      	mov	r0, r3
 800298a:	3714      	adds	r7, #20
 800298c:	46bd      	mov	sp, r7
 800298e:	bc80      	pop	{r7}
 8002990:	4770      	bx	lr

08002992 <osKernelStart>:
 8002992:	b580      	push	{r7, lr}
 8002994:	af00      	add	r7, sp, #0
 8002996:	f000 fad1 	bl	8002f3c <vTaskStartScheduler>
 800299a:	2300      	movs	r3, #0
 800299c:	4618      	mov	r0, r3
 800299e:	bd80      	pop	{r7, pc}

080029a0 <osThreadCreate>:
 80029a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80029a2:	b089      	sub	sp, #36	; 0x24
 80029a4:	af04      	add	r7, sp, #16
 80029a6:	6078      	str	r0, [r7, #4]
 80029a8:	6039      	str	r1, [r7, #0]
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	695b      	ldr	r3, [r3, #20]
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d020      	beq.n	80029f4 <osThreadCreate+0x54>
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	699b      	ldr	r3, [r3, #24]
 80029b6:	2b00      	cmp	r3, #0
 80029b8:	d01c      	beq.n	80029f4 <osThreadCreate+0x54>
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	685c      	ldr	r4, [r3, #4]
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	681d      	ldr	r5, [r3, #0]
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	691e      	ldr	r6, [r3, #16]
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80029cc:	4618      	mov	r0, r3
 80029ce:	f7ff ffc9 	bl	8002964 <makeFreeRtosPriority>
 80029d2:	4601      	mov	r1, r0
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	695b      	ldr	r3, [r3, #20]
 80029d8:	687a      	ldr	r2, [r7, #4]
 80029da:	6992      	ldr	r2, [r2, #24]
 80029dc:	9202      	str	r2, [sp, #8]
 80029de:	9301      	str	r3, [sp, #4]
 80029e0:	9100      	str	r1, [sp, #0]
 80029e2:	683b      	ldr	r3, [r7, #0]
 80029e4:	4632      	mov	r2, r6
 80029e6:	4629      	mov	r1, r5
 80029e8:	4620      	mov	r0, r4
 80029ea:	f000 f8e8 	bl	8002bbe <xTaskCreateStatic>
 80029ee:	4603      	mov	r3, r0
 80029f0:	60fb      	str	r3, [r7, #12]
 80029f2:	e01c      	b.n	8002a2e <osThreadCreate+0x8e>
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	685c      	ldr	r4, [r3, #4]
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	681d      	ldr	r5, [r3, #0]
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	691b      	ldr	r3, [r3, #16]
 8002a00:	b29e      	uxth	r6, r3
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002a08:	4618      	mov	r0, r3
 8002a0a:	f7ff ffab 	bl	8002964 <makeFreeRtosPriority>
 8002a0e:	4602      	mov	r2, r0
 8002a10:	f107 030c 	add.w	r3, r7, #12
 8002a14:	9301      	str	r3, [sp, #4]
 8002a16:	9200      	str	r2, [sp, #0]
 8002a18:	683b      	ldr	r3, [r7, #0]
 8002a1a:	4632      	mov	r2, r6
 8002a1c:	4629      	mov	r1, r5
 8002a1e:	4620      	mov	r0, r4
 8002a20:	f000 f929 	bl	8002c76 <xTaskCreate>
 8002a24:	4603      	mov	r3, r0
 8002a26:	2b01      	cmp	r3, #1
 8002a28:	d001      	beq.n	8002a2e <osThreadCreate+0x8e>
 8002a2a:	2300      	movs	r3, #0
 8002a2c:	e000      	b.n	8002a30 <osThreadCreate+0x90>
 8002a2e:	68fb      	ldr	r3, [r7, #12]
 8002a30:	4618      	mov	r0, r3
 8002a32:	3714      	adds	r7, #20
 8002a34:	46bd      	mov	sp, r7
 8002a36:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002a38 <osDelay>:
 8002a38:	b580      	push	{r7, lr}
 8002a3a:	b084      	sub	sp, #16
 8002a3c:	af00      	add	r7, sp, #0
 8002a3e:	6078      	str	r0, [r7, #4]
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	60fb      	str	r3, [r7, #12]
 8002a44:	68fb      	ldr	r3, [r7, #12]
 8002a46:	2b00      	cmp	r3, #0
 8002a48:	d001      	beq.n	8002a4e <osDelay+0x16>
 8002a4a:	68fb      	ldr	r3, [r7, #12]
 8002a4c:	e000      	b.n	8002a50 <osDelay+0x18>
 8002a4e:	2301      	movs	r3, #1
 8002a50:	4618      	mov	r0, r3
 8002a52:	f000 fa3f 	bl	8002ed4 <vTaskDelay>
 8002a56:	2300      	movs	r3, #0
 8002a58:	4618      	mov	r0, r3
 8002a5a:	3710      	adds	r7, #16
 8002a5c:	46bd      	mov	sp, r7
 8002a5e:	bd80      	pop	{r7, pc}

08002a60 <vListInitialise>:
 8002a60:	b480      	push	{r7}
 8002a62:	b083      	sub	sp, #12
 8002a64:	af00      	add	r7, sp, #0
 8002a66:	6078      	str	r0, [r7, #4]
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	f103 0208 	add.w	r2, r3, #8
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	605a      	str	r2, [r3, #4]
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002a78:	609a      	str	r2, [r3, #8]
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	f103 0208 	add.w	r2, r3, #8
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	60da      	str	r2, [r3, #12]
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	f103 0208 	add.w	r2, r3, #8
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	611a      	str	r2, [r3, #16]
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	2200      	movs	r2, #0
 8002a92:	601a      	str	r2, [r3, #0]
 8002a94:	bf00      	nop
 8002a96:	370c      	adds	r7, #12
 8002a98:	46bd      	mov	sp, r7
 8002a9a:	bc80      	pop	{r7}
 8002a9c:	4770      	bx	lr

08002a9e <vListInitialiseItem>:
 8002a9e:	b480      	push	{r7}
 8002aa0:	b083      	sub	sp, #12
 8002aa2:	af00      	add	r7, sp, #0
 8002aa4:	6078      	str	r0, [r7, #4]
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	2200      	movs	r2, #0
 8002aaa:	611a      	str	r2, [r3, #16]
 8002aac:	bf00      	nop
 8002aae:	370c      	adds	r7, #12
 8002ab0:	46bd      	mov	sp, r7
 8002ab2:	bc80      	pop	{r7}
 8002ab4:	4770      	bx	lr

08002ab6 <vListInsertEnd>:
 8002ab6:	b480      	push	{r7}
 8002ab8:	b085      	sub	sp, #20
 8002aba:	af00      	add	r7, sp, #0
 8002abc:	6078      	str	r0, [r7, #4]
 8002abe:	6039      	str	r1, [r7, #0]
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	685b      	ldr	r3, [r3, #4]
 8002ac4:	60fb      	str	r3, [r7, #12]
 8002ac6:	683b      	ldr	r3, [r7, #0]
 8002ac8:	68fa      	ldr	r2, [r7, #12]
 8002aca:	605a      	str	r2, [r3, #4]
 8002acc:	68fb      	ldr	r3, [r7, #12]
 8002ace:	689a      	ldr	r2, [r3, #8]
 8002ad0:	683b      	ldr	r3, [r7, #0]
 8002ad2:	609a      	str	r2, [r3, #8]
 8002ad4:	68fb      	ldr	r3, [r7, #12]
 8002ad6:	689b      	ldr	r3, [r3, #8]
 8002ad8:	683a      	ldr	r2, [r7, #0]
 8002ada:	605a      	str	r2, [r3, #4]
 8002adc:	68fb      	ldr	r3, [r7, #12]
 8002ade:	683a      	ldr	r2, [r7, #0]
 8002ae0:	609a      	str	r2, [r3, #8]
 8002ae2:	683b      	ldr	r3, [r7, #0]
 8002ae4:	687a      	ldr	r2, [r7, #4]
 8002ae6:	611a      	str	r2, [r3, #16]
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	1c5a      	adds	r2, r3, #1
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	601a      	str	r2, [r3, #0]
 8002af2:	bf00      	nop
 8002af4:	3714      	adds	r7, #20
 8002af6:	46bd      	mov	sp, r7
 8002af8:	bc80      	pop	{r7}
 8002afa:	4770      	bx	lr

08002afc <vListInsert>:
 8002afc:	b480      	push	{r7}
 8002afe:	b085      	sub	sp, #20
 8002b00:	af00      	add	r7, sp, #0
 8002b02:	6078      	str	r0, [r7, #4]
 8002b04:	6039      	str	r1, [r7, #0]
 8002b06:	683b      	ldr	r3, [r7, #0]
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	60bb      	str	r3, [r7, #8]
 8002b0c:	68bb      	ldr	r3, [r7, #8]
 8002b0e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002b12:	d103      	bne.n	8002b1c <vListInsert+0x20>
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	691b      	ldr	r3, [r3, #16]
 8002b18:	60fb      	str	r3, [r7, #12]
 8002b1a:	e00c      	b.n	8002b36 <vListInsert+0x3a>
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	3308      	adds	r3, #8
 8002b20:	60fb      	str	r3, [r7, #12]
 8002b22:	e002      	b.n	8002b2a <vListInsert+0x2e>
 8002b24:	68fb      	ldr	r3, [r7, #12]
 8002b26:	685b      	ldr	r3, [r3, #4]
 8002b28:	60fb      	str	r3, [r7, #12]
 8002b2a:	68fb      	ldr	r3, [r7, #12]
 8002b2c:	685b      	ldr	r3, [r3, #4]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	68ba      	ldr	r2, [r7, #8]
 8002b32:	429a      	cmp	r2, r3
 8002b34:	d2f6      	bcs.n	8002b24 <vListInsert+0x28>
 8002b36:	68fb      	ldr	r3, [r7, #12]
 8002b38:	685a      	ldr	r2, [r3, #4]
 8002b3a:	683b      	ldr	r3, [r7, #0]
 8002b3c:	605a      	str	r2, [r3, #4]
 8002b3e:	683b      	ldr	r3, [r7, #0]
 8002b40:	685b      	ldr	r3, [r3, #4]
 8002b42:	683a      	ldr	r2, [r7, #0]
 8002b44:	609a      	str	r2, [r3, #8]
 8002b46:	683b      	ldr	r3, [r7, #0]
 8002b48:	68fa      	ldr	r2, [r7, #12]
 8002b4a:	609a      	str	r2, [r3, #8]
 8002b4c:	68fb      	ldr	r3, [r7, #12]
 8002b4e:	683a      	ldr	r2, [r7, #0]
 8002b50:	605a      	str	r2, [r3, #4]
 8002b52:	683b      	ldr	r3, [r7, #0]
 8002b54:	687a      	ldr	r2, [r7, #4]
 8002b56:	611a      	str	r2, [r3, #16]
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	1c5a      	adds	r2, r3, #1
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	601a      	str	r2, [r3, #0]
 8002b62:	bf00      	nop
 8002b64:	3714      	adds	r7, #20
 8002b66:	46bd      	mov	sp, r7
 8002b68:	bc80      	pop	{r7}
 8002b6a:	4770      	bx	lr

08002b6c <uxListRemove>:
 8002b6c:	b480      	push	{r7}
 8002b6e:	b085      	sub	sp, #20
 8002b70:	af00      	add	r7, sp, #0
 8002b72:	6078      	str	r0, [r7, #4]
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	691b      	ldr	r3, [r3, #16]
 8002b78:	60fb      	str	r3, [r7, #12]
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	685b      	ldr	r3, [r3, #4]
 8002b7e:	687a      	ldr	r2, [r7, #4]
 8002b80:	6892      	ldr	r2, [r2, #8]
 8002b82:	609a      	str	r2, [r3, #8]
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	689b      	ldr	r3, [r3, #8]
 8002b88:	687a      	ldr	r2, [r7, #4]
 8002b8a:	6852      	ldr	r2, [r2, #4]
 8002b8c:	605a      	str	r2, [r3, #4]
 8002b8e:	68fb      	ldr	r3, [r7, #12]
 8002b90:	685b      	ldr	r3, [r3, #4]
 8002b92:	687a      	ldr	r2, [r7, #4]
 8002b94:	429a      	cmp	r2, r3
 8002b96:	d103      	bne.n	8002ba0 <uxListRemove+0x34>
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	689a      	ldr	r2, [r3, #8]
 8002b9c:	68fb      	ldr	r3, [r7, #12]
 8002b9e:	605a      	str	r2, [r3, #4]
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	2200      	movs	r2, #0
 8002ba4:	611a      	str	r2, [r3, #16]
 8002ba6:	68fb      	ldr	r3, [r7, #12]
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	1e5a      	subs	r2, r3, #1
 8002bac:	68fb      	ldr	r3, [r7, #12]
 8002bae:	601a      	str	r2, [r3, #0]
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	4618      	mov	r0, r3
 8002bb6:	3714      	adds	r7, #20
 8002bb8:	46bd      	mov	sp, r7
 8002bba:	bc80      	pop	{r7}
 8002bbc:	4770      	bx	lr

08002bbe <xTaskCreateStatic>:
 8002bbe:	b580      	push	{r7, lr}
 8002bc0:	b08e      	sub	sp, #56	; 0x38
 8002bc2:	af04      	add	r7, sp, #16
 8002bc4:	60f8      	str	r0, [r7, #12]
 8002bc6:	60b9      	str	r1, [r7, #8]
 8002bc8:	607a      	str	r2, [r7, #4]
 8002bca:	603b      	str	r3, [r7, #0]
 8002bcc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d10a      	bne.n	8002be8 <xTaskCreateStatic+0x2a>
 8002bd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002bd6:	f383 8811 	msr	BASEPRI, r3
 8002bda:	f3bf 8f6f 	isb	sy
 8002bde:	f3bf 8f4f 	dsb	sy
 8002be2:	623b      	str	r3, [r7, #32]
 8002be4:	bf00      	nop
 8002be6:	e7fe      	b.n	8002be6 <xTaskCreateStatic+0x28>
 8002be8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002bea:	2b00      	cmp	r3, #0
 8002bec:	d10a      	bne.n	8002c04 <xTaskCreateStatic+0x46>
 8002bee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002bf2:	f383 8811 	msr	BASEPRI, r3
 8002bf6:	f3bf 8f6f 	isb	sy
 8002bfa:	f3bf 8f4f 	dsb	sy
 8002bfe:	61fb      	str	r3, [r7, #28]
 8002c00:	bf00      	nop
 8002c02:	e7fe      	b.n	8002c02 <xTaskCreateStatic+0x44>
 8002c04:	2354      	movs	r3, #84	; 0x54
 8002c06:	613b      	str	r3, [r7, #16]
 8002c08:	693b      	ldr	r3, [r7, #16]
 8002c0a:	2b54      	cmp	r3, #84	; 0x54
 8002c0c:	d00a      	beq.n	8002c24 <xTaskCreateStatic+0x66>
 8002c0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c12:	f383 8811 	msr	BASEPRI, r3
 8002c16:	f3bf 8f6f 	isb	sy
 8002c1a:	f3bf 8f4f 	dsb	sy
 8002c1e:	61bb      	str	r3, [r7, #24]
 8002c20:	bf00      	nop
 8002c22:	e7fe      	b.n	8002c22 <xTaskCreateStatic+0x64>
 8002c24:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002c26:	2b00      	cmp	r3, #0
 8002c28:	d01e      	beq.n	8002c68 <xTaskCreateStatic+0xaa>
 8002c2a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002c2c:	2b00      	cmp	r3, #0
 8002c2e:	d01b      	beq.n	8002c68 <xTaskCreateStatic+0xaa>
 8002c30:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002c32:	627b      	str	r3, [r7, #36]	; 0x24
 8002c34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c36:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002c38:	631a      	str	r2, [r3, #48]	; 0x30
 8002c3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c3c:	2202      	movs	r2, #2
 8002c3e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002c42:	2300      	movs	r3, #0
 8002c44:	9303      	str	r3, [sp, #12]
 8002c46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c48:	9302      	str	r3, [sp, #8]
 8002c4a:	f107 0314 	add.w	r3, r7, #20
 8002c4e:	9301      	str	r3, [sp, #4]
 8002c50:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002c52:	9300      	str	r3, [sp, #0]
 8002c54:	683b      	ldr	r3, [r7, #0]
 8002c56:	687a      	ldr	r2, [r7, #4]
 8002c58:	68b9      	ldr	r1, [r7, #8]
 8002c5a:	68f8      	ldr	r0, [r7, #12]
 8002c5c:	f000 f850 	bl	8002d00 <prvInitialiseNewTask>
 8002c60:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002c62:	f000 f8cd 	bl	8002e00 <prvAddNewTaskToReadyList>
 8002c66:	e001      	b.n	8002c6c <xTaskCreateStatic+0xae>
 8002c68:	2300      	movs	r3, #0
 8002c6a:	617b      	str	r3, [r7, #20]
 8002c6c:	697b      	ldr	r3, [r7, #20]
 8002c6e:	4618      	mov	r0, r3
 8002c70:	3728      	adds	r7, #40	; 0x28
 8002c72:	46bd      	mov	sp, r7
 8002c74:	bd80      	pop	{r7, pc}

08002c76 <xTaskCreate>:
 8002c76:	b580      	push	{r7, lr}
 8002c78:	b08c      	sub	sp, #48	; 0x30
 8002c7a:	af04      	add	r7, sp, #16
 8002c7c:	60f8      	str	r0, [r7, #12]
 8002c7e:	60b9      	str	r1, [r7, #8]
 8002c80:	603b      	str	r3, [r7, #0]
 8002c82:	4613      	mov	r3, r2
 8002c84:	80fb      	strh	r3, [r7, #6]
 8002c86:	88fb      	ldrh	r3, [r7, #6]
 8002c88:	009b      	lsls	r3, r3, #2
 8002c8a:	4618      	mov	r0, r3
 8002c8c:	f000 fe68 	bl	8003960 <pvPortMalloc>
 8002c90:	6178      	str	r0, [r7, #20]
 8002c92:	697b      	ldr	r3, [r7, #20]
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d00e      	beq.n	8002cb6 <xTaskCreate+0x40>
 8002c98:	2054      	movs	r0, #84	; 0x54
 8002c9a:	f000 fe61 	bl	8003960 <pvPortMalloc>
 8002c9e:	61f8      	str	r0, [r7, #28]
 8002ca0:	69fb      	ldr	r3, [r7, #28]
 8002ca2:	2b00      	cmp	r3, #0
 8002ca4:	d003      	beq.n	8002cae <xTaskCreate+0x38>
 8002ca6:	69fb      	ldr	r3, [r7, #28]
 8002ca8:	697a      	ldr	r2, [r7, #20]
 8002caa:	631a      	str	r2, [r3, #48]	; 0x30
 8002cac:	e005      	b.n	8002cba <xTaskCreate+0x44>
 8002cae:	6978      	ldr	r0, [r7, #20]
 8002cb0:	f000 ff1a 	bl	8003ae8 <vPortFree>
 8002cb4:	e001      	b.n	8002cba <xTaskCreate+0x44>
 8002cb6:	2300      	movs	r3, #0
 8002cb8:	61fb      	str	r3, [r7, #28]
 8002cba:	69fb      	ldr	r3, [r7, #28]
 8002cbc:	2b00      	cmp	r3, #0
 8002cbe:	d017      	beq.n	8002cf0 <xTaskCreate+0x7a>
 8002cc0:	69fb      	ldr	r3, [r7, #28]
 8002cc2:	2200      	movs	r2, #0
 8002cc4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002cc8:	88fa      	ldrh	r2, [r7, #6]
 8002cca:	2300      	movs	r3, #0
 8002ccc:	9303      	str	r3, [sp, #12]
 8002cce:	69fb      	ldr	r3, [r7, #28]
 8002cd0:	9302      	str	r3, [sp, #8]
 8002cd2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002cd4:	9301      	str	r3, [sp, #4]
 8002cd6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002cd8:	9300      	str	r3, [sp, #0]
 8002cda:	683b      	ldr	r3, [r7, #0]
 8002cdc:	68b9      	ldr	r1, [r7, #8]
 8002cde:	68f8      	ldr	r0, [r7, #12]
 8002ce0:	f000 f80e 	bl	8002d00 <prvInitialiseNewTask>
 8002ce4:	69f8      	ldr	r0, [r7, #28]
 8002ce6:	f000 f88b 	bl	8002e00 <prvAddNewTaskToReadyList>
 8002cea:	2301      	movs	r3, #1
 8002cec:	61bb      	str	r3, [r7, #24]
 8002cee:	e002      	b.n	8002cf6 <xTaskCreate+0x80>
 8002cf0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002cf4:	61bb      	str	r3, [r7, #24]
 8002cf6:	69bb      	ldr	r3, [r7, #24]
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	3720      	adds	r7, #32
 8002cfc:	46bd      	mov	sp, r7
 8002cfe:	bd80      	pop	{r7, pc}

08002d00 <prvInitialiseNewTask>:
 8002d00:	b580      	push	{r7, lr}
 8002d02:	b088      	sub	sp, #32
 8002d04:	af00      	add	r7, sp, #0
 8002d06:	60f8      	str	r0, [r7, #12]
 8002d08:	60b9      	str	r1, [r7, #8]
 8002d0a:	607a      	str	r2, [r7, #4]
 8002d0c:	603b      	str	r3, [r7, #0]
 8002d0e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8002d18:	3b01      	subs	r3, #1
 8002d1a:	009b      	lsls	r3, r3, #2
 8002d1c:	4413      	add	r3, r2
 8002d1e:	61bb      	str	r3, [r7, #24]
 8002d20:	69bb      	ldr	r3, [r7, #24]
 8002d22:	f023 0307 	bic.w	r3, r3, #7
 8002d26:	61bb      	str	r3, [r7, #24]
 8002d28:	69bb      	ldr	r3, [r7, #24]
 8002d2a:	f003 0307 	and.w	r3, r3, #7
 8002d2e:	2b00      	cmp	r3, #0
 8002d30:	d00a      	beq.n	8002d48 <prvInitialiseNewTask+0x48>
 8002d32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002d36:	f383 8811 	msr	BASEPRI, r3
 8002d3a:	f3bf 8f6f 	isb	sy
 8002d3e:	f3bf 8f4f 	dsb	sy
 8002d42:	617b      	str	r3, [r7, #20]
 8002d44:	bf00      	nop
 8002d46:	e7fe      	b.n	8002d46 <prvInitialiseNewTask+0x46>
 8002d48:	2300      	movs	r3, #0
 8002d4a:	61fb      	str	r3, [r7, #28]
 8002d4c:	e012      	b.n	8002d74 <prvInitialiseNewTask+0x74>
 8002d4e:	68ba      	ldr	r2, [r7, #8]
 8002d50:	69fb      	ldr	r3, [r7, #28]
 8002d52:	4413      	add	r3, r2
 8002d54:	7819      	ldrb	r1, [r3, #0]
 8002d56:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002d58:	69fb      	ldr	r3, [r7, #28]
 8002d5a:	4413      	add	r3, r2
 8002d5c:	3334      	adds	r3, #52	; 0x34
 8002d5e:	460a      	mov	r2, r1
 8002d60:	701a      	strb	r2, [r3, #0]
 8002d62:	68ba      	ldr	r2, [r7, #8]
 8002d64:	69fb      	ldr	r3, [r7, #28]
 8002d66:	4413      	add	r3, r2
 8002d68:	781b      	ldrb	r3, [r3, #0]
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d006      	beq.n	8002d7c <prvInitialiseNewTask+0x7c>
 8002d6e:	69fb      	ldr	r3, [r7, #28]
 8002d70:	3301      	adds	r3, #1
 8002d72:	61fb      	str	r3, [r7, #28]
 8002d74:	69fb      	ldr	r3, [r7, #28]
 8002d76:	2b0f      	cmp	r3, #15
 8002d78:	d9e9      	bls.n	8002d4e <prvInitialiseNewTask+0x4e>
 8002d7a:	e000      	b.n	8002d7e <prvInitialiseNewTask+0x7e>
 8002d7c:	bf00      	nop
 8002d7e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d80:	2200      	movs	r2, #0
 8002d82:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002d86:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002d88:	2b06      	cmp	r3, #6
 8002d8a:	d901      	bls.n	8002d90 <prvInitialiseNewTask+0x90>
 8002d8c:	2306      	movs	r3, #6
 8002d8e:	62bb      	str	r3, [r7, #40]	; 0x28
 8002d90:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d92:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002d94:	62da      	str	r2, [r3, #44]	; 0x2c
 8002d96:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d98:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002d9a:	645a      	str	r2, [r3, #68]	; 0x44
 8002d9c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d9e:	2200      	movs	r2, #0
 8002da0:	649a      	str	r2, [r3, #72]	; 0x48
 8002da2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002da4:	3304      	adds	r3, #4
 8002da6:	4618      	mov	r0, r3
 8002da8:	f7ff fe79 	bl	8002a9e <vListInitialiseItem>
 8002dac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dae:	3318      	adds	r3, #24
 8002db0:	4618      	mov	r0, r3
 8002db2:	f7ff fe74 	bl	8002a9e <vListInitialiseItem>
 8002db6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002db8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002dba:	611a      	str	r2, [r3, #16]
 8002dbc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002dbe:	f1c3 0207 	rsb	r2, r3, #7
 8002dc2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dc4:	619a      	str	r2, [r3, #24]
 8002dc6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dc8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002dca:	625a      	str	r2, [r3, #36]	; 0x24
 8002dcc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dce:	2200      	movs	r2, #0
 8002dd0:	64da      	str	r2, [r3, #76]	; 0x4c
 8002dd2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dd4:	2200      	movs	r2, #0
 8002dd6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002dda:	683a      	ldr	r2, [r7, #0]
 8002ddc:	68f9      	ldr	r1, [r7, #12]
 8002dde:	69b8      	ldr	r0, [r7, #24]
 8002de0:	f000 fc0e 	bl	8003600 <pxPortInitialiseStack>
 8002de4:	4602      	mov	r2, r0
 8002de6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002de8:	601a      	str	r2, [r3, #0]
 8002dea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002dec:	2b00      	cmp	r3, #0
 8002dee:	d002      	beq.n	8002df6 <prvInitialiseNewTask+0xf6>
 8002df0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002df2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002df4:	601a      	str	r2, [r3, #0]
 8002df6:	bf00      	nop
 8002df8:	3720      	adds	r7, #32
 8002dfa:	46bd      	mov	sp, r7
 8002dfc:	bd80      	pop	{r7, pc}
	...

08002e00 <prvAddNewTaskToReadyList>:
 8002e00:	b580      	push	{r7, lr}
 8002e02:	b082      	sub	sp, #8
 8002e04:	af00      	add	r7, sp, #0
 8002e06:	6078      	str	r0, [r7, #4]
 8002e08:	f000 fce8 	bl	80037dc <vPortEnterCritical>
 8002e0c:	4b2a      	ldr	r3, [pc, #168]	; (8002eb8 <prvAddNewTaskToReadyList+0xb8>)
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	3301      	adds	r3, #1
 8002e12:	4a29      	ldr	r2, [pc, #164]	; (8002eb8 <prvAddNewTaskToReadyList+0xb8>)
 8002e14:	6013      	str	r3, [r2, #0]
 8002e16:	4b29      	ldr	r3, [pc, #164]	; (8002ebc <prvAddNewTaskToReadyList+0xbc>)
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d109      	bne.n	8002e32 <prvAddNewTaskToReadyList+0x32>
 8002e1e:	4a27      	ldr	r2, [pc, #156]	; (8002ebc <prvAddNewTaskToReadyList+0xbc>)
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	6013      	str	r3, [r2, #0]
 8002e24:	4b24      	ldr	r3, [pc, #144]	; (8002eb8 <prvAddNewTaskToReadyList+0xb8>)
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	2b01      	cmp	r3, #1
 8002e2a:	d110      	bne.n	8002e4e <prvAddNewTaskToReadyList+0x4e>
 8002e2c:	f000 fac0 	bl	80033b0 <prvInitialiseTaskLists>
 8002e30:	e00d      	b.n	8002e4e <prvAddNewTaskToReadyList+0x4e>
 8002e32:	4b23      	ldr	r3, [pc, #140]	; (8002ec0 <prvAddNewTaskToReadyList+0xc0>)
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	2b00      	cmp	r3, #0
 8002e38:	d109      	bne.n	8002e4e <prvAddNewTaskToReadyList+0x4e>
 8002e3a:	4b20      	ldr	r3, [pc, #128]	; (8002ebc <prvAddNewTaskToReadyList+0xbc>)
 8002e3c:	681b      	ldr	r3, [r3, #0]
 8002e3e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e44:	429a      	cmp	r2, r3
 8002e46:	d802      	bhi.n	8002e4e <prvAddNewTaskToReadyList+0x4e>
 8002e48:	4a1c      	ldr	r2, [pc, #112]	; (8002ebc <prvAddNewTaskToReadyList+0xbc>)
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	6013      	str	r3, [r2, #0]
 8002e4e:	4b1d      	ldr	r3, [pc, #116]	; (8002ec4 <prvAddNewTaskToReadyList+0xc4>)
 8002e50:	681b      	ldr	r3, [r3, #0]
 8002e52:	3301      	adds	r3, #1
 8002e54:	4a1b      	ldr	r2, [pc, #108]	; (8002ec4 <prvAddNewTaskToReadyList+0xc4>)
 8002e56:	6013      	str	r3, [r2, #0]
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e5c:	2201      	movs	r2, #1
 8002e5e:	409a      	lsls	r2, r3
 8002e60:	4b19      	ldr	r3, [pc, #100]	; (8002ec8 <prvAddNewTaskToReadyList+0xc8>)
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	4313      	orrs	r3, r2
 8002e66:	4a18      	ldr	r2, [pc, #96]	; (8002ec8 <prvAddNewTaskToReadyList+0xc8>)
 8002e68:	6013      	str	r3, [r2, #0]
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002e6e:	4613      	mov	r3, r2
 8002e70:	009b      	lsls	r3, r3, #2
 8002e72:	4413      	add	r3, r2
 8002e74:	009b      	lsls	r3, r3, #2
 8002e76:	4a15      	ldr	r2, [pc, #84]	; (8002ecc <prvAddNewTaskToReadyList+0xcc>)
 8002e78:	441a      	add	r2, r3
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	3304      	adds	r3, #4
 8002e7e:	4619      	mov	r1, r3
 8002e80:	4610      	mov	r0, r2
 8002e82:	f7ff fe18 	bl	8002ab6 <vListInsertEnd>
 8002e86:	f000 fcd9 	bl	800383c <vPortExitCritical>
 8002e8a:	4b0d      	ldr	r3, [pc, #52]	; (8002ec0 <prvAddNewTaskToReadyList+0xc0>)
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	2b00      	cmp	r3, #0
 8002e90:	d00e      	beq.n	8002eb0 <prvAddNewTaskToReadyList+0xb0>
 8002e92:	4b0a      	ldr	r3, [pc, #40]	; (8002ebc <prvAddNewTaskToReadyList+0xbc>)
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e9c:	429a      	cmp	r2, r3
 8002e9e:	d207      	bcs.n	8002eb0 <prvAddNewTaskToReadyList+0xb0>
 8002ea0:	4b0b      	ldr	r3, [pc, #44]	; (8002ed0 <prvAddNewTaskToReadyList+0xd0>)
 8002ea2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002ea6:	601a      	str	r2, [r3, #0]
 8002ea8:	f3bf 8f4f 	dsb	sy
 8002eac:	f3bf 8f6f 	isb	sy
 8002eb0:	bf00      	nop
 8002eb2:	3708      	adds	r7, #8
 8002eb4:	46bd      	mov	sp, r7
 8002eb6:	bd80      	pop	{r7, pc}
 8002eb8:	200004b8 	.word	0x200004b8
 8002ebc:	200003b8 	.word	0x200003b8
 8002ec0:	200004c4 	.word	0x200004c4
 8002ec4:	200004d4 	.word	0x200004d4
 8002ec8:	200004c0 	.word	0x200004c0
 8002ecc:	200003bc 	.word	0x200003bc
 8002ed0:	e000ed04 	.word	0xe000ed04

08002ed4 <vTaskDelay>:
 8002ed4:	b580      	push	{r7, lr}
 8002ed6:	b084      	sub	sp, #16
 8002ed8:	af00      	add	r7, sp, #0
 8002eda:	6078      	str	r0, [r7, #4]
 8002edc:	2300      	movs	r3, #0
 8002ede:	60fb      	str	r3, [r7, #12]
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	d017      	beq.n	8002f16 <vTaskDelay+0x42>
 8002ee6:	4b13      	ldr	r3, [pc, #76]	; (8002f34 <vTaskDelay+0x60>)
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d00a      	beq.n	8002f04 <vTaskDelay+0x30>
 8002eee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002ef2:	f383 8811 	msr	BASEPRI, r3
 8002ef6:	f3bf 8f6f 	isb	sy
 8002efa:	f3bf 8f4f 	dsb	sy
 8002efe:	60bb      	str	r3, [r7, #8]
 8002f00:	bf00      	nop
 8002f02:	e7fe      	b.n	8002f02 <vTaskDelay+0x2e>
 8002f04:	f000 f87a 	bl	8002ffc <vTaskSuspendAll>
 8002f08:	2100      	movs	r1, #0
 8002f0a:	6878      	ldr	r0, [r7, #4]
 8002f0c:	f000 fb12 	bl	8003534 <prvAddCurrentTaskToDelayedList>
 8002f10:	f000 f882 	bl	8003018 <xTaskResumeAll>
 8002f14:	60f8      	str	r0, [r7, #12]
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	2b00      	cmp	r3, #0
 8002f1a:	d107      	bne.n	8002f2c <vTaskDelay+0x58>
 8002f1c:	4b06      	ldr	r3, [pc, #24]	; (8002f38 <vTaskDelay+0x64>)
 8002f1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002f22:	601a      	str	r2, [r3, #0]
 8002f24:	f3bf 8f4f 	dsb	sy
 8002f28:	f3bf 8f6f 	isb	sy
 8002f2c:	bf00      	nop
 8002f2e:	3710      	adds	r7, #16
 8002f30:	46bd      	mov	sp, r7
 8002f32:	bd80      	pop	{r7, pc}
 8002f34:	200004e0 	.word	0x200004e0
 8002f38:	e000ed04 	.word	0xe000ed04

08002f3c <vTaskStartScheduler>:
 8002f3c:	b580      	push	{r7, lr}
 8002f3e:	b08a      	sub	sp, #40	; 0x28
 8002f40:	af04      	add	r7, sp, #16
 8002f42:	2300      	movs	r3, #0
 8002f44:	60bb      	str	r3, [r7, #8]
 8002f46:	2300      	movs	r3, #0
 8002f48:	607b      	str	r3, [r7, #4]
 8002f4a:	463a      	mov	r2, r7
 8002f4c:	1d39      	adds	r1, r7, #4
 8002f4e:	f107 0308 	add.w	r3, r7, #8
 8002f52:	4618      	mov	r0, r3
 8002f54:	f7fd f904 	bl	8000160 <vApplicationGetIdleTaskMemory>
 8002f58:	6839      	ldr	r1, [r7, #0]
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	68ba      	ldr	r2, [r7, #8]
 8002f5e:	9202      	str	r2, [sp, #8]
 8002f60:	9301      	str	r3, [sp, #4]
 8002f62:	2300      	movs	r3, #0
 8002f64:	9300      	str	r3, [sp, #0]
 8002f66:	2300      	movs	r3, #0
 8002f68:	460a      	mov	r2, r1
 8002f6a:	491e      	ldr	r1, [pc, #120]	; (8002fe4 <vTaskStartScheduler+0xa8>)
 8002f6c:	481e      	ldr	r0, [pc, #120]	; (8002fe8 <vTaskStartScheduler+0xac>)
 8002f6e:	f7ff fe26 	bl	8002bbe <xTaskCreateStatic>
 8002f72:	4603      	mov	r3, r0
 8002f74:	4a1d      	ldr	r2, [pc, #116]	; (8002fec <vTaskStartScheduler+0xb0>)
 8002f76:	6013      	str	r3, [r2, #0]
 8002f78:	4b1c      	ldr	r3, [pc, #112]	; (8002fec <vTaskStartScheduler+0xb0>)
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	2b00      	cmp	r3, #0
 8002f7e:	d002      	beq.n	8002f86 <vTaskStartScheduler+0x4a>
 8002f80:	2301      	movs	r3, #1
 8002f82:	617b      	str	r3, [r7, #20]
 8002f84:	e001      	b.n	8002f8a <vTaskStartScheduler+0x4e>
 8002f86:	2300      	movs	r3, #0
 8002f88:	617b      	str	r3, [r7, #20]
 8002f8a:	697b      	ldr	r3, [r7, #20]
 8002f8c:	2b01      	cmp	r3, #1
 8002f8e:	d116      	bne.n	8002fbe <vTaskStartScheduler+0x82>
 8002f90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002f94:	f383 8811 	msr	BASEPRI, r3
 8002f98:	f3bf 8f6f 	isb	sy
 8002f9c:	f3bf 8f4f 	dsb	sy
 8002fa0:	613b      	str	r3, [r7, #16]
 8002fa2:	bf00      	nop
 8002fa4:	4b12      	ldr	r3, [pc, #72]	; (8002ff0 <vTaskStartScheduler+0xb4>)
 8002fa6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002faa:	601a      	str	r2, [r3, #0]
 8002fac:	4b11      	ldr	r3, [pc, #68]	; (8002ff4 <vTaskStartScheduler+0xb8>)
 8002fae:	2201      	movs	r2, #1
 8002fb0:	601a      	str	r2, [r3, #0]
 8002fb2:	4b11      	ldr	r3, [pc, #68]	; (8002ff8 <vTaskStartScheduler+0xbc>)
 8002fb4:	2200      	movs	r2, #0
 8002fb6:	601a      	str	r2, [r3, #0]
 8002fb8:	f000 fb9e 	bl	80036f8 <xPortStartScheduler>
 8002fbc:	e00e      	b.n	8002fdc <vTaskStartScheduler+0xa0>
 8002fbe:	697b      	ldr	r3, [r7, #20]
 8002fc0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002fc4:	d10a      	bne.n	8002fdc <vTaskStartScheduler+0xa0>
 8002fc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002fca:	f383 8811 	msr	BASEPRI, r3
 8002fce:	f3bf 8f6f 	isb	sy
 8002fd2:	f3bf 8f4f 	dsb	sy
 8002fd6:	60fb      	str	r3, [r7, #12]
 8002fd8:	bf00      	nop
 8002fda:	e7fe      	b.n	8002fda <vTaskStartScheduler+0x9e>
 8002fdc:	bf00      	nop
 8002fde:	3718      	adds	r7, #24
 8002fe0:	46bd      	mov	sp, r7
 8002fe2:	bd80      	pop	{r7, pc}
 8002fe4:	080052b8 	.word	0x080052b8
 8002fe8:	08003381 	.word	0x08003381
 8002fec:	200004dc 	.word	0x200004dc
 8002ff0:	200004d8 	.word	0x200004d8
 8002ff4:	200004c4 	.word	0x200004c4
 8002ff8:	200004bc 	.word	0x200004bc

08002ffc <vTaskSuspendAll>:
 8002ffc:	b480      	push	{r7}
 8002ffe:	af00      	add	r7, sp, #0
 8003000:	4b04      	ldr	r3, [pc, #16]	; (8003014 <vTaskSuspendAll+0x18>)
 8003002:	681b      	ldr	r3, [r3, #0]
 8003004:	3301      	adds	r3, #1
 8003006:	4a03      	ldr	r2, [pc, #12]	; (8003014 <vTaskSuspendAll+0x18>)
 8003008:	6013      	str	r3, [r2, #0]
 800300a:	bf00      	nop
 800300c:	46bd      	mov	sp, r7
 800300e:	bc80      	pop	{r7}
 8003010:	4770      	bx	lr
 8003012:	bf00      	nop
 8003014:	200004e0 	.word	0x200004e0

08003018 <xTaskResumeAll>:
 8003018:	b580      	push	{r7, lr}
 800301a:	b084      	sub	sp, #16
 800301c:	af00      	add	r7, sp, #0
 800301e:	2300      	movs	r3, #0
 8003020:	60fb      	str	r3, [r7, #12]
 8003022:	2300      	movs	r3, #0
 8003024:	60bb      	str	r3, [r7, #8]
 8003026:	4b41      	ldr	r3, [pc, #260]	; (800312c <xTaskResumeAll+0x114>)
 8003028:	681b      	ldr	r3, [r3, #0]
 800302a:	2b00      	cmp	r3, #0
 800302c:	d10a      	bne.n	8003044 <xTaskResumeAll+0x2c>
 800302e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003032:	f383 8811 	msr	BASEPRI, r3
 8003036:	f3bf 8f6f 	isb	sy
 800303a:	f3bf 8f4f 	dsb	sy
 800303e:	603b      	str	r3, [r7, #0]
 8003040:	bf00      	nop
 8003042:	e7fe      	b.n	8003042 <xTaskResumeAll+0x2a>
 8003044:	f000 fbca 	bl	80037dc <vPortEnterCritical>
 8003048:	4b38      	ldr	r3, [pc, #224]	; (800312c <xTaskResumeAll+0x114>)
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	3b01      	subs	r3, #1
 800304e:	4a37      	ldr	r2, [pc, #220]	; (800312c <xTaskResumeAll+0x114>)
 8003050:	6013      	str	r3, [r2, #0]
 8003052:	4b36      	ldr	r3, [pc, #216]	; (800312c <xTaskResumeAll+0x114>)
 8003054:	681b      	ldr	r3, [r3, #0]
 8003056:	2b00      	cmp	r3, #0
 8003058:	d161      	bne.n	800311e <xTaskResumeAll+0x106>
 800305a:	4b35      	ldr	r3, [pc, #212]	; (8003130 <xTaskResumeAll+0x118>)
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	2b00      	cmp	r3, #0
 8003060:	d05d      	beq.n	800311e <xTaskResumeAll+0x106>
 8003062:	e02e      	b.n	80030c2 <xTaskResumeAll+0xaa>
 8003064:	4b33      	ldr	r3, [pc, #204]	; (8003134 <xTaskResumeAll+0x11c>)
 8003066:	68db      	ldr	r3, [r3, #12]
 8003068:	68db      	ldr	r3, [r3, #12]
 800306a:	60fb      	str	r3, [r7, #12]
 800306c:	68fb      	ldr	r3, [r7, #12]
 800306e:	3318      	adds	r3, #24
 8003070:	4618      	mov	r0, r3
 8003072:	f7ff fd7b 	bl	8002b6c <uxListRemove>
 8003076:	68fb      	ldr	r3, [r7, #12]
 8003078:	3304      	adds	r3, #4
 800307a:	4618      	mov	r0, r3
 800307c:	f7ff fd76 	bl	8002b6c <uxListRemove>
 8003080:	68fb      	ldr	r3, [r7, #12]
 8003082:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003084:	2201      	movs	r2, #1
 8003086:	409a      	lsls	r2, r3
 8003088:	4b2b      	ldr	r3, [pc, #172]	; (8003138 <xTaskResumeAll+0x120>)
 800308a:	681b      	ldr	r3, [r3, #0]
 800308c:	4313      	orrs	r3, r2
 800308e:	4a2a      	ldr	r2, [pc, #168]	; (8003138 <xTaskResumeAll+0x120>)
 8003090:	6013      	str	r3, [r2, #0]
 8003092:	68fb      	ldr	r3, [r7, #12]
 8003094:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003096:	4613      	mov	r3, r2
 8003098:	009b      	lsls	r3, r3, #2
 800309a:	4413      	add	r3, r2
 800309c:	009b      	lsls	r3, r3, #2
 800309e:	4a27      	ldr	r2, [pc, #156]	; (800313c <xTaskResumeAll+0x124>)
 80030a0:	441a      	add	r2, r3
 80030a2:	68fb      	ldr	r3, [r7, #12]
 80030a4:	3304      	adds	r3, #4
 80030a6:	4619      	mov	r1, r3
 80030a8:	4610      	mov	r0, r2
 80030aa:	f7ff fd04 	bl	8002ab6 <vListInsertEnd>
 80030ae:	68fb      	ldr	r3, [r7, #12]
 80030b0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80030b2:	4b23      	ldr	r3, [pc, #140]	; (8003140 <xTaskResumeAll+0x128>)
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80030b8:	429a      	cmp	r2, r3
 80030ba:	d302      	bcc.n	80030c2 <xTaskResumeAll+0xaa>
 80030bc:	4b21      	ldr	r3, [pc, #132]	; (8003144 <xTaskResumeAll+0x12c>)
 80030be:	2201      	movs	r2, #1
 80030c0:	601a      	str	r2, [r3, #0]
 80030c2:	4b1c      	ldr	r3, [pc, #112]	; (8003134 <xTaskResumeAll+0x11c>)
 80030c4:	681b      	ldr	r3, [r3, #0]
 80030c6:	2b00      	cmp	r3, #0
 80030c8:	d1cc      	bne.n	8003064 <xTaskResumeAll+0x4c>
 80030ca:	68fb      	ldr	r3, [r7, #12]
 80030cc:	2b00      	cmp	r3, #0
 80030ce:	d001      	beq.n	80030d4 <xTaskResumeAll+0xbc>
 80030d0:	f000 fa0c 	bl	80034ec <prvResetNextTaskUnblockTime>
 80030d4:	4b1c      	ldr	r3, [pc, #112]	; (8003148 <xTaskResumeAll+0x130>)
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	607b      	str	r3, [r7, #4]
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	2b00      	cmp	r3, #0
 80030de:	d010      	beq.n	8003102 <xTaskResumeAll+0xea>
 80030e0:	f000 f836 	bl	8003150 <xTaskIncrementTick>
 80030e4:	4603      	mov	r3, r0
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	d002      	beq.n	80030f0 <xTaskResumeAll+0xd8>
 80030ea:	4b16      	ldr	r3, [pc, #88]	; (8003144 <xTaskResumeAll+0x12c>)
 80030ec:	2201      	movs	r2, #1
 80030ee:	601a      	str	r2, [r3, #0]
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	3b01      	subs	r3, #1
 80030f4:	607b      	str	r3, [r7, #4]
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	2b00      	cmp	r3, #0
 80030fa:	d1f1      	bne.n	80030e0 <xTaskResumeAll+0xc8>
 80030fc:	4b12      	ldr	r3, [pc, #72]	; (8003148 <xTaskResumeAll+0x130>)
 80030fe:	2200      	movs	r2, #0
 8003100:	601a      	str	r2, [r3, #0]
 8003102:	4b10      	ldr	r3, [pc, #64]	; (8003144 <xTaskResumeAll+0x12c>)
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	2b00      	cmp	r3, #0
 8003108:	d009      	beq.n	800311e <xTaskResumeAll+0x106>
 800310a:	2301      	movs	r3, #1
 800310c:	60bb      	str	r3, [r7, #8]
 800310e:	4b0f      	ldr	r3, [pc, #60]	; (800314c <xTaskResumeAll+0x134>)
 8003110:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003114:	601a      	str	r2, [r3, #0]
 8003116:	f3bf 8f4f 	dsb	sy
 800311a:	f3bf 8f6f 	isb	sy
 800311e:	f000 fb8d 	bl	800383c <vPortExitCritical>
 8003122:	68bb      	ldr	r3, [r7, #8]
 8003124:	4618      	mov	r0, r3
 8003126:	3710      	adds	r7, #16
 8003128:	46bd      	mov	sp, r7
 800312a:	bd80      	pop	{r7, pc}
 800312c:	200004e0 	.word	0x200004e0
 8003130:	200004b8 	.word	0x200004b8
 8003134:	20000478 	.word	0x20000478
 8003138:	200004c0 	.word	0x200004c0
 800313c:	200003bc 	.word	0x200003bc
 8003140:	200003b8 	.word	0x200003b8
 8003144:	200004cc 	.word	0x200004cc
 8003148:	200004c8 	.word	0x200004c8
 800314c:	e000ed04 	.word	0xe000ed04

08003150 <xTaskIncrementTick>:
 8003150:	b580      	push	{r7, lr}
 8003152:	b086      	sub	sp, #24
 8003154:	af00      	add	r7, sp, #0
 8003156:	2300      	movs	r3, #0
 8003158:	617b      	str	r3, [r7, #20]
 800315a:	4b51      	ldr	r3, [pc, #324]	; (80032a0 <xTaskIncrementTick+0x150>)
 800315c:	681b      	ldr	r3, [r3, #0]
 800315e:	2b00      	cmp	r3, #0
 8003160:	f040 808d 	bne.w	800327e <xTaskIncrementTick+0x12e>
 8003164:	4b4f      	ldr	r3, [pc, #316]	; (80032a4 <xTaskIncrementTick+0x154>)
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	3301      	adds	r3, #1
 800316a:	613b      	str	r3, [r7, #16]
 800316c:	4a4d      	ldr	r2, [pc, #308]	; (80032a4 <xTaskIncrementTick+0x154>)
 800316e:	693b      	ldr	r3, [r7, #16]
 8003170:	6013      	str	r3, [r2, #0]
 8003172:	693b      	ldr	r3, [r7, #16]
 8003174:	2b00      	cmp	r3, #0
 8003176:	d120      	bne.n	80031ba <xTaskIncrementTick+0x6a>
 8003178:	4b4b      	ldr	r3, [pc, #300]	; (80032a8 <xTaskIncrementTick+0x158>)
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	2b00      	cmp	r3, #0
 8003180:	d00a      	beq.n	8003198 <xTaskIncrementTick+0x48>
 8003182:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003186:	f383 8811 	msr	BASEPRI, r3
 800318a:	f3bf 8f6f 	isb	sy
 800318e:	f3bf 8f4f 	dsb	sy
 8003192:	603b      	str	r3, [r7, #0]
 8003194:	bf00      	nop
 8003196:	e7fe      	b.n	8003196 <xTaskIncrementTick+0x46>
 8003198:	4b43      	ldr	r3, [pc, #268]	; (80032a8 <xTaskIncrementTick+0x158>)
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	60fb      	str	r3, [r7, #12]
 800319e:	4b43      	ldr	r3, [pc, #268]	; (80032ac <xTaskIncrementTick+0x15c>)
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	4a41      	ldr	r2, [pc, #260]	; (80032a8 <xTaskIncrementTick+0x158>)
 80031a4:	6013      	str	r3, [r2, #0]
 80031a6:	4a41      	ldr	r2, [pc, #260]	; (80032ac <xTaskIncrementTick+0x15c>)
 80031a8:	68fb      	ldr	r3, [r7, #12]
 80031aa:	6013      	str	r3, [r2, #0]
 80031ac:	4b40      	ldr	r3, [pc, #256]	; (80032b0 <xTaskIncrementTick+0x160>)
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	3301      	adds	r3, #1
 80031b2:	4a3f      	ldr	r2, [pc, #252]	; (80032b0 <xTaskIncrementTick+0x160>)
 80031b4:	6013      	str	r3, [r2, #0]
 80031b6:	f000 f999 	bl	80034ec <prvResetNextTaskUnblockTime>
 80031ba:	4b3e      	ldr	r3, [pc, #248]	; (80032b4 <xTaskIncrementTick+0x164>)
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	693a      	ldr	r2, [r7, #16]
 80031c0:	429a      	cmp	r2, r3
 80031c2:	d34d      	bcc.n	8003260 <xTaskIncrementTick+0x110>
 80031c4:	4b38      	ldr	r3, [pc, #224]	; (80032a8 <xTaskIncrementTick+0x158>)
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	2b00      	cmp	r3, #0
 80031cc:	d101      	bne.n	80031d2 <xTaskIncrementTick+0x82>
 80031ce:	2301      	movs	r3, #1
 80031d0:	e000      	b.n	80031d4 <xTaskIncrementTick+0x84>
 80031d2:	2300      	movs	r3, #0
 80031d4:	2b00      	cmp	r3, #0
 80031d6:	d004      	beq.n	80031e2 <xTaskIncrementTick+0x92>
 80031d8:	4b36      	ldr	r3, [pc, #216]	; (80032b4 <xTaskIncrementTick+0x164>)
 80031da:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80031de:	601a      	str	r2, [r3, #0]
 80031e0:	e03e      	b.n	8003260 <xTaskIncrementTick+0x110>
 80031e2:	4b31      	ldr	r3, [pc, #196]	; (80032a8 <xTaskIncrementTick+0x158>)
 80031e4:	681b      	ldr	r3, [r3, #0]
 80031e6:	68db      	ldr	r3, [r3, #12]
 80031e8:	68db      	ldr	r3, [r3, #12]
 80031ea:	60bb      	str	r3, [r7, #8]
 80031ec:	68bb      	ldr	r3, [r7, #8]
 80031ee:	685b      	ldr	r3, [r3, #4]
 80031f0:	607b      	str	r3, [r7, #4]
 80031f2:	693a      	ldr	r2, [r7, #16]
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	429a      	cmp	r2, r3
 80031f8:	d203      	bcs.n	8003202 <xTaskIncrementTick+0xb2>
 80031fa:	4a2e      	ldr	r2, [pc, #184]	; (80032b4 <xTaskIncrementTick+0x164>)
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	6013      	str	r3, [r2, #0]
 8003200:	e02e      	b.n	8003260 <xTaskIncrementTick+0x110>
 8003202:	68bb      	ldr	r3, [r7, #8]
 8003204:	3304      	adds	r3, #4
 8003206:	4618      	mov	r0, r3
 8003208:	f7ff fcb0 	bl	8002b6c <uxListRemove>
 800320c:	68bb      	ldr	r3, [r7, #8]
 800320e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003210:	2b00      	cmp	r3, #0
 8003212:	d004      	beq.n	800321e <xTaskIncrementTick+0xce>
 8003214:	68bb      	ldr	r3, [r7, #8]
 8003216:	3318      	adds	r3, #24
 8003218:	4618      	mov	r0, r3
 800321a:	f7ff fca7 	bl	8002b6c <uxListRemove>
 800321e:	68bb      	ldr	r3, [r7, #8]
 8003220:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003222:	2201      	movs	r2, #1
 8003224:	409a      	lsls	r2, r3
 8003226:	4b24      	ldr	r3, [pc, #144]	; (80032b8 <xTaskIncrementTick+0x168>)
 8003228:	681b      	ldr	r3, [r3, #0]
 800322a:	4313      	orrs	r3, r2
 800322c:	4a22      	ldr	r2, [pc, #136]	; (80032b8 <xTaskIncrementTick+0x168>)
 800322e:	6013      	str	r3, [r2, #0]
 8003230:	68bb      	ldr	r3, [r7, #8]
 8003232:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003234:	4613      	mov	r3, r2
 8003236:	009b      	lsls	r3, r3, #2
 8003238:	4413      	add	r3, r2
 800323a:	009b      	lsls	r3, r3, #2
 800323c:	4a1f      	ldr	r2, [pc, #124]	; (80032bc <xTaskIncrementTick+0x16c>)
 800323e:	441a      	add	r2, r3
 8003240:	68bb      	ldr	r3, [r7, #8]
 8003242:	3304      	adds	r3, #4
 8003244:	4619      	mov	r1, r3
 8003246:	4610      	mov	r0, r2
 8003248:	f7ff fc35 	bl	8002ab6 <vListInsertEnd>
 800324c:	68bb      	ldr	r3, [r7, #8]
 800324e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003250:	4b1b      	ldr	r3, [pc, #108]	; (80032c0 <xTaskIncrementTick+0x170>)
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003256:	429a      	cmp	r2, r3
 8003258:	d3b4      	bcc.n	80031c4 <xTaskIncrementTick+0x74>
 800325a:	2301      	movs	r3, #1
 800325c:	617b      	str	r3, [r7, #20]
 800325e:	e7b1      	b.n	80031c4 <xTaskIncrementTick+0x74>
 8003260:	4b17      	ldr	r3, [pc, #92]	; (80032c0 <xTaskIncrementTick+0x170>)
 8003262:	681b      	ldr	r3, [r3, #0]
 8003264:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003266:	4915      	ldr	r1, [pc, #84]	; (80032bc <xTaskIncrementTick+0x16c>)
 8003268:	4613      	mov	r3, r2
 800326a:	009b      	lsls	r3, r3, #2
 800326c:	4413      	add	r3, r2
 800326e:	009b      	lsls	r3, r3, #2
 8003270:	440b      	add	r3, r1
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	2b01      	cmp	r3, #1
 8003276:	d907      	bls.n	8003288 <xTaskIncrementTick+0x138>
 8003278:	2301      	movs	r3, #1
 800327a:	617b      	str	r3, [r7, #20]
 800327c:	e004      	b.n	8003288 <xTaskIncrementTick+0x138>
 800327e:	4b11      	ldr	r3, [pc, #68]	; (80032c4 <xTaskIncrementTick+0x174>)
 8003280:	681b      	ldr	r3, [r3, #0]
 8003282:	3301      	adds	r3, #1
 8003284:	4a0f      	ldr	r2, [pc, #60]	; (80032c4 <xTaskIncrementTick+0x174>)
 8003286:	6013      	str	r3, [r2, #0]
 8003288:	4b0f      	ldr	r3, [pc, #60]	; (80032c8 <xTaskIncrementTick+0x178>)
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	2b00      	cmp	r3, #0
 800328e:	d001      	beq.n	8003294 <xTaskIncrementTick+0x144>
 8003290:	2301      	movs	r3, #1
 8003292:	617b      	str	r3, [r7, #20]
 8003294:	697b      	ldr	r3, [r7, #20]
 8003296:	4618      	mov	r0, r3
 8003298:	3718      	adds	r7, #24
 800329a:	46bd      	mov	sp, r7
 800329c:	bd80      	pop	{r7, pc}
 800329e:	bf00      	nop
 80032a0:	200004e0 	.word	0x200004e0
 80032a4:	200004bc 	.word	0x200004bc
 80032a8:	20000470 	.word	0x20000470
 80032ac:	20000474 	.word	0x20000474
 80032b0:	200004d0 	.word	0x200004d0
 80032b4:	200004d8 	.word	0x200004d8
 80032b8:	200004c0 	.word	0x200004c0
 80032bc:	200003bc 	.word	0x200003bc
 80032c0:	200003b8 	.word	0x200003b8
 80032c4:	200004c8 	.word	0x200004c8
 80032c8:	200004cc 	.word	0x200004cc

080032cc <vTaskSwitchContext>:
 80032cc:	b480      	push	{r7}
 80032ce:	b087      	sub	sp, #28
 80032d0:	af00      	add	r7, sp, #0
 80032d2:	4b26      	ldr	r3, [pc, #152]	; (800336c <vTaskSwitchContext+0xa0>)
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	d003      	beq.n	80032e2 <vTaskSwitchContext+0x16>
 80032da:	4b25      	ldr	r3, [pc, #148]	; (8003370 <vTaskSwitchContext+0xa4>)
 80032dc:	2201      	movs	r2, #1
 80032de:	601a      	str	r2, [r3, #0]
 80032e0:	e03f      	b.n	8003362 <vTaskSwitchContext+0x96>
 80032e2:	4b23      	ldr	r3, [pc, #140]	; (8003370 <vTaskSwitchContext+0xa4>)
 80032e4:	2200      	movs	r2, #0
 80032e6:	601a      	str	r2, [r3, #0]
 80032e8:	4b22      	ldr	r3, [pc, #136]	; (8003374 <vTaskSwitchContext+0xa8>)
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	60fb      	str	r3, [r7, #12]
 80032ee:	68fb      	ldr	r3, [r7, #12]
 80032f0:	fab3 f383 	clz	r3, r3
 80032f4:	72fb      	strb	r3, [r7, #11]
 80032f6:	7afb      	ldrb	r3, [r7, #11]
 80032f8:	f1c3 031f 	rsb	r3, r3, #31
 80032fc:	617b      	str	r3, [r7, #20]
 80032fe:	491e      	ldr	r1, [pc, #120]	; (8003378 <vTaskSwitchContext+0xac>)
 8003300:	697a      	ldr	r2, [r7, #20]
 8003302:	4613      	mov	r3, r2
 8003304:	009b      	lsls	r3, r3, #2
 8003306:	4413      	add	r3, r2
 8003308:	009b      	lsls	r3, r3, #2
 800330a:	440b      	add	r3, r1
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	2b00      	cmp	r3, #0
 8003310:	d10a      	bne.n	8003328 <vTaskSwitchContext+0x5c>
 8003312:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003316:	f383 8811 	msr	BASEPRI, r3
 800331a:	f3bf 8f6f 	isb	sy
 800331e:	f3bf 8f4f 	dsb	sy
 8003322:	607b      	str	r3, [r7, #4]
 8003324:	bf00      	nop
 8003326:	e7fe      	b.n	8003326 <vTaskSwitchContext+0x5a>
 8003328:	697a      	ldr	r2, [r7, #20]
 800332a:	4613      	mov	r3, r2
 800332c:	009b      	lsls	r3, r3, #2
 800332e:	4413      	add	r3, r2
 8003330:	009b      	lsls	r3, r3, #2
 8003332:	4a11      	ldr	r2, [pc, #68]	; (8003378 <vTaskSwitchContext+0xac>)
 8003334:	4413      	add	r3, r2
 8003336:	613b      	str	r3, [r7, #16]
 8003338:	693b      	ldr	r3, [r7, #16]
 800333a:	685b      	ldr	r3, [r3, #4]
 800333c:	685a      	ldr	r2, [r3, #4]
 800333e:	693b      	ldr	r3, [r7, #16]
 8003340:	605a      	str	r2, [r3, #4]
 8003342:	693b      	ldr	r3, [r7, #16]
 8003344:	685a      	ldr	r2, [r3, #4]
 8003346:	693b      	ldr	r3, [r7, #16]
 8003348:	3308      	adds	r3, #8
 800334a:	429a      	cmp	r2, r3
 800334c:	d104      	bne.n	8003358 <vTaskSwitchContext+0x8c>
 800334e:	693b      	ldr	r3, [r7, #16]
 8003350:	685b      	ldr	r3, [r3, #4]
 8003352:	685a      	ldr	r2, [r3, #4]
 8003354:	693b      	ldr	r3, [r7, #16]
 8003356:	605a      	str	r2, [r3, #4]
 8003358:	693b      	ldr	r3, [r7, #16]
 800335a:	685b      	ldr	r3, [r3, #4]
 800335c:	68db      	ldr	r3, [r3, #12]
 800335e:	4a07      	ldr	r2, [pc, #28]	; (800337c <vTaskSwitchContext+0xb0>)
 8003360:	6013      	str	r3, [r2, #0]
 8003362:	bf00      	nop
 8003364:	371c      	adds	r7, #28
 8003366:	46bd      	mov	sp, r7
 8003368:	bc80      	pop	{r7}
 800336a:	4770      	bx	lr
 800336c:	200004e0 	.word	0x200004e0
 8003370:	200004cc 	.word	0x200004cc
 8003374:	200004c0 	.word	0x200004c0
 8003378:	200003bc 	.word	0x200003bc
 800337c:	200003b8 	.word	0x200003b8

08003380 <prvIdleTask>:
 8003380:	b580      	push	{r7, lr}
 8003382:	b082      	sub	sp, #8
 8003384:	af00      	add	r7, sp, #0
 8003386:	6078      	str	r0, [r7, #4]
 8003388:	f000 f852 	bl	8003430 <prvCheckTasksWaitingTermination>
 800338c:	4b06      	ldr	r3, [pc, #24]	; (80033a8 <prvIdleTask+0x28>)
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	2b01      	cmp	r3, #1
 8003392:	d9f9      	bls.n	8003388 <prvIdleTask+0x8>
 8003394:	4b05      	ldr	r3, [pc, #20]	; (80033ac <prvIdleTask+0x2c>)
 8003396:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800339a:	601a      	str	r2, [r3, #0]
 800339c:	f3bf 8f4f 	dsb	sy
 80033a0:	f3bf 8f6f 	isb	sy
 80033a4:	e7f0      	b.n	8003388 <prvIdleTask+0x8>
 80033a6:	bf00      	nop
 80033a8:	200003bc 	.word	0x200003bc
 80033ac:	e000ed04 	.word	0xe000ed04

080033b0 <prvInitialiseTaskLists>:
 80033b0:	b580      	push	{r7, lr}
 80033b2:	b082      	sub	sp, #8
 80033b4:	af00      	add	r7, sp, #0
 80033b6:	2300      	movs	r3, #0
 80033b8:	607b      	str	r3, [r7, #4]
 80033ba:	e00c      	b.n	80033d6 <prvInitialiseTaskLists+0x26>
 80033bc:	687a      	ldr	r2, [r7, #4]
 80033be:	4613      	mov	r3, r2
 80033c0:	009b      	lsls	r3, r3, #2
 80033c2:	4413      	add	r3, r2
 80033c4:	009b      	lsls	r3, r3, #2
 80033c6:	4a12      	ldr	r2, [pc, #72]	; (8003410 <prvInitialiseTaskLists+0x60>)
 80033c8:	4413      	add	r3, r2
 80033ca:	4618      	mov	r0, r3
 80033cc:	f7ff fb48 	bl	8002a60 <vListInitialise>
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	3301      	adds	r3, #1
 80033d4:	607b      	str	r3, [r7, #4]
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	2b06      	cmp	r3, #6
 80033da:	d9ef      	bls.n	80033bc <prvInitialiseTaskLists+0xc>
 80033dc:	480d      	ldr	r0, [pc, #52]	; (8003414 <prvInitialiseTaskLists+0x64>)
 80033de:	f7ff fb3f 	bl	8002a60 <vListInitialise>
 80033e2:	480d      	ldr	r0, [pc, #52]	; (8003418 <prvInitialiseTaskLists+0x68>)
 80033e4:	f7ff fb3c 	bl	8002a60 <vListInitialise>
 80033e8:	480c      	ldr	r0, [pc, #48]	; (800341c <prvInitialiseTaskLists+0x6c>)
 80033ea:	f7ff fb39 	bl	8002a60 <vListInitialise>
 80033ee:	480c      	ldr	r0, [pc, #48]	; (8003420 <prvInitialiseTaskLists+0x70>)
 80033f0:	f7ff fb36 	bl	8002a60 <vListInitialise>
 80033f4:	480b      	ldr	r0, [pc, #44]	; (8003424 <prvInitialiseTaskLists+0x74>)
 80033f6:	f7ff fb33 	bl	8002a60 <vListInitialise>
 80033fa:	4b0b      	ldr	r3, [pc, #44]	; (8003428 <prvInitialiseTaskLists+0x78>)
 80033fc:	4a05      	ldr	r2, [pc, #20]	; (8003414 <prvInitialiseTaskLists+0x64>)
 80033fe:	601a      	str	r2, [r3, #0]
 8003400:	4b0a      	ldr	r3, [pc, #40]	; (800342c <prvInitialiseTaskLists+0x7c>)
 8003402:	4a05      	ldr	r2, [pc, #20]	; (8003418 <prvInitialiseTaskLists+0x68>)
 8003404:	601a      	str	r2, [r3, #0]
 8003406:	bf00      	nop
 8003408:	3708      	adds	r7, #8
 800340a:	46bd      	mov	sp, r7
 800340c:	bd80      	pop	{r7, pc}
 800340e:	bf00      	nop
 8003410:	200003bc 	.word	0x200003bc
 8003414:	20000448 	.word	0x20000448
 8003418:	2000045c 	.word	0x2000045c
 800341c:	20000478 	.word	0x20000478
 8003420:	2000048c 	.word	0x2000048c
 8003424:	200004a4 	.word	0x200004a4
 8003428:	20000470 	.word	0x20000470
 800342c:	20000474 	.word	0x20000474

08003430 <prvCheckTasksWaitingTermination>:
 8003430:	b580      	push	{r7, lr}
 8003432:	b082      	sub	sp, #8
 8003434:	af00      	add	r7, sp, #0
 8003436:	e019      	b.n	800346c <prvCheckTasksWaitingTermination+0x3c>
 8003438:	f000 f9d0 	bl	80037dc <vPortEnterCritical>
 800343c:	4b10      	ldr	r3, [pc, #64]	; (8003480 <prvCheckTasksWaitingTermination+0x50>)
 800343e:	68db      	ldr	r3, [r3, #12]
 8003440:	68db      	ldr	r3, [r3, #12]
 8003442:	607b      	str	r3, [r7, #4]
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	3304      	adds	r3, #4
 8003448:	4618      	mov	r0, r3
 800344a:	f7ff fb8f 	bl	8002b6c <uxListRemove>
 800344e:	4b0d      	ldr	r3, [pc, #52]	; (8003484 <prvCheckTasksWaitingTermination+0x54>)
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	3b01      	subs	r3, #1
 8003454:	4a0b      	ldr	r2, [pc, #44]	; (8003484 <prvCheckTasksWaitingTermination+0x54>)
 8003456:	6013      	str	r3, [r2, #0]
 8003458:	4b0b      	ldr	r3, [pc, #44]	; (8003488 <prvCheckTasksWaitingTermination+0x58>)
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	3b01      	subs	r3, #1
 800345e:	4a0a      	ldr	r2, [pc, #40]	; (8003488 <prvCheckTasksWaitingTermination+0x58>)
 8003460:	6013      	str	r3, [r2, #0]
 8003462:	f000 f9eb 	bl	800383c <vPortExitCritical>
 8003466:	6878      	ldr	r0, [r7, #4]
 8003468:	f000 f810 	bl	800348c <prvDeleteTCB>
 800346c:	4b06      	ldr	r3, [pc, #24]	; (8003488 <prvCheckTasksWaitingTermination+0x58>)
 800346e:	681b      	ldr	r3, [r3, #0]
 8003470:	2b00      	cmp	r3, #0
 8003472:	d1e1      	bne.n	8003438 <prvCheckTasksWaitingTermination+0x8>
 8003474:	bf00      	nop
 8003476:	bf00      	nop
 8003478:	3708      	adds	r7, #8
 800347a:	46bd      	mov	sp, r7
 800347c:	bd80      	pop	{r7, pc}
 800347e:	bf00      	nop
 8003480:	2000048c 	.word	0x2000048c
 8003484:	200004b8 	.word	0x200004b8
 8003488:	200004a0 	.word	0x200004a0

0800348c <prvDeleteTCB>:
 800348c:	b580      	push	{r7, lr}
 800348e:	b084      	sub	sp, #16
 8003490:	af00      	add	r7, sp, #0
 8003492:	6078      	str	r0, [r7, #4]
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800349a:	2b00      	cmp	r3, #0
 800349c:	d108      	bne.n	80034b0 <prvDeleteTCB+0x24>
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034a2:	4618      	mov	r0, r3
 80034a4:	f000 fb20 	bl	8003ae8 <vPortFree>
 80034a8:	6878      	ldr	r0, [r7, #4]
 80034aa:	f000 fb1d 	bl	8003ae8 <vPortFree>
 80034ae:	e018      	b.n	80034e2 <prvDeleteTCB+0x56>
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80034b6:	2b01      	cmp	r3, #1
 80034b8:	d103      	bne.n	80034c2 <prvDeleteTCB+0x36>
 80034ba:	6878      	ldr	r0, [r7, #4]
 80034bc:	f000 fb14 	bl	8003ae8 <vPortFree>
 80034c0:	e00f      	b.n	80034e2 <prvDeleteTCB+0x56>
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80034c8:	2b02      	cmp	r3, #2
 80034ca:	d00a      	beq.n	80034e2 <prvDeleteTCB+0x56>
 80034cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80034d0:	f383 8811 	msr	BASEPRI, r3
 80034d4:	f3bf 8f6f 	isb	sy
 80034d8:	f3bf 8f4f 	dsb	sy
 80034dc:	60fb      	str	r3, [r7, #12]
 80034de:	bf00      	nop
 80034e0:	e7fe      	b.n	80034e0 <prvDeleteTCB+0x54>
 80034e2:	bf00      	nop
 80034e4:	3710      	adds	r7, #16
 80034e6:	46bd      	mov	sp, r7
 80034e8:	bd80      	pop	{r7, pc}
	...

080034ec <prvResetNextTaskUnblockTime>:
 80034ec:	b480      	push	{r7}
 80034ee:	b083      	sub	sp, #12
 80034f0:	af00      	add	r7, sp, #0
 80034f2:	4b0e      	ldr	r3, [pc, #56]	; (800352c <prvResetNextTaskUnblockTime+0x40>)
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	2b00      	cmp	r3, #0
 80034fa:	d101      	bne.n	8003500 <prvResetNextTaskUnblockTime+0x14>
 80034fc:	2301      	movs	r3, #1
 80034fe:	e000      	b.n	8003502 <prvResetNextTaskUnblockTime+0x16>
 8003500:	2300      	movs	r3, #0
 8003502:	2b00      	cmp	r3, #0
 8003504:	d004      	beq.n	8003510 <prvResetNextTaskUnblockTime+0x24>
 8003506:	4b0a      	ldr	r3, [pc, #40]	; (8003530 <prvResetNextTaskUnblockTime+0x44>)
 8003508:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800350c:	601a      	str	r2, [r3, #0]
 800350e:	e008      	b.n	8003522 <prvResetNextTaskUnblockTime+0x36>
 8003510:	4b06      	ldr	r3, [pc, #24]	; (800352c <prvResetNextTaskUnblockTime+0x40>)
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	68db      	ldr	r3, [r3, #12]
 8003516:	68db      	ldr	r3, [r3, #12]
 8003518:	607b      	str	r3, [r7, #4]
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	685b      	ldr	r3, [r3, #4]
 800351e:	4a04      	ldr	r2, [pc, #16]	; (8003530 <prvResetNextTaskUnblockTime+0x44>)
 8003520:	6013      	str	r3, [r2, #0]
 8003522:	bf00      	nop
 8003524:	370c      	adds	r7, #12
 8003526:	46bd      	mov	sp, r7
 8003528:	bc80      	pop	{r7}
 800352a:	4770      	bx	lr
 800352c:	20000470 	.word	0x20000470
 8003530:	200004d8 	.word	0x200004d8

08003534 <prvAddCurrentTaskToDelayedList>:
 8003534:	b580      	push	{r7, lr}
 8003536:	b084      	sub	sp, #16
 8003538:	af00      	add	r7, sp, #0
 800353a:	6078      	str	r0, [r7, #4]
 800353c:	6039      	str	r1, [r7, #0]
 800353e:	4b29      	ldr	r3, [pc, #164]	; (80035e4 <prvAddCurrentTaskToDelayedList+0xb0>)
 8003540:	681b      	ldr	r3, [r3, #0]
 8003542:	60fb      	str	r3, [r7, #12]
 8003544:	4b28      	ldr	r3, [pc, #160]	; (80035e8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	3304      	adds	r3, #4
 800354a:	4618      	mov	r0, r3
 800354c:	f7ff fb0e 	bl	8002b6c <uxListRemove>
 8003550:	4603      	mov	r3, r0
 8003552:	2b00      	cmp	r3, #0
 8003554:	d10b      	bne.n	800356e <prvAddCurrentTaskToDelayedList+0x3a>
 8003556:	4b24      	ldr	r3, [pc, #144]	; (80035e8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003558:	681b      	ldr	r3, [r3, #0]
 800355a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800355c:	2201      	movs	r2, #1
 800355e:	fa02 f303 	lsl.w	r3, r2, r3
 8003562:	43da      	mvns	r2, r3
 8003564:	4b21      	ldr	r3, [pc, #132]	; (80035ec <prvAddCurrentTaskToDelayedList+0xb8>)
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	4013      	ands	r3, r2
 800356a:	4a20      	ldr	r2, [pc, #128]	; (80035ec <prvAddCurrentTaskToDelayedList+0xb8>)
 800356c:	6013      	str	r3, [r2, #0]
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003574:	d10a      	bne.n	800358c <prvAddCurrentTaskToDelayedList+0x58>
 8003576:	683b      	ldr	r3, [r7, #0]
 8003578:	2b00      	cmp	r3, #0
 800357a:	d007      	beq.n	800358c <prvAddCurrentTaskToDelayedList+0x58>
 800357c:	4b1a      	ldr	r3, [pc, #104]	; (80035e8 <prvAddCurrentTaskToDelayedList+0xb4>)
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	3304      	adds	r3, #4
 8003582:	4619      	mov	r1, r3
 8003584:	481a      	ldr	r0, [pc, #104]	; (80035f0 <prvAddCurrentTaskToDelayedList+0xbc>)
 8003586:	f7ff fa96 	bl	8002ab6 <vListInsertEnd>
 800358a:	e026      	b.n	80035da <prvAddCurrentTaskToDelayedList+0xa6>
 800358c:	68fa      	ldr	r2, [r7, #12]
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	4413      	add	r3, r2
 8003592:	60bb      	str	r3, [r7, #8]
 8003594:	4b14      	ldr	r3, [pc, #80]	; (80035e8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003596:	681b      	ldr	r3, [r3, #0]
 8003598:	68ba      	ldr	r2, [r7, #8]
 800359a:	605a      	str	r2, [r3, #4]
 800359c:	68ba      	ldr	r2, [r7, #8]
 800359e:	68fb      	ldr	r3, [r7, #12]
 80035a0:	429a      	cmp	r2, r3
 80035a2:	d209      	bcs.n	80035b8 <prvAddCurrentTaskToDelayedList+0x84>
 80035a4:	4b13      	ldr	r3, [pc, #76]	; (80035f4 <prvAddCurrentTaskToDelayedList+0xc0>)
 80035a6:	681a      	ldr	r2, [r3, #0]
 80035a8:	4b0f      	ldr	r3, [pc, #60]	; (80035e8 <prvAddCurrentTaskToDelayedList+0xb4>)
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	3304      	adds	r3, #4
 80035ae:	4619      	mov	r1, r3
 80035b0:	4610      	mov	r0, r2
 80035b2:	f7ff faa3 	bl	8002afc <vListInsert>
 80035b6:	e010      	b.n	80035da <prvAddCurrentTaskToDelayedList+0xa6>
 80035b8:	4b0f      	ldr	r3, [pc, #60]	; (80035f8 <prvAddCurrentTaskToDelayedList+0xc4>)
 80035ba:	681a      	ldr	r2, [r3, #0]
 80035bc:	4b0a      	ldr	r3, [pc, #40]	; (80035e8 <prvAddCurrentTaskToDelayedList+0xb4>)
 80035be:	681b      	ldr	r3, [r3, #0]
 80035c0:	3304      	adds	r3, #4
 80035c2:	4619      	mov	r1, r3
 80035c4:	4610      	mov	r0, r2
 80035c6:	f7ff fa99 	bl	8002afc <vListInsert>
 80035ca:	4b0c      	ldr	r3, [pc, #48]	; (80035fc <prvAddCurrentTaskToDelayedList+0xc8>)
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	68ba      	ldr	r2, [r7, #8]
 80035d0:	429a      	cmp	r2, r3
 80035d2:	d202      	bcs.n	80035da <prvAddCurrentTaskToDelayedList+0xa6>
 80035d4:	4a09      	ldr	r2, [pc, #36]	; (80035fc <prvAddCurrentTaskToDelayedList+0xc8>)
 80035d6:	68bb      	ldr	r3, [r7, #8]
 80035d8:	6013      	str	r3, [r2, #0]
 80035da:	bf00      	nop
 80035dc:	3710      	adds	r7, #16
 80035de:	46bd      	mov	sp, r7
 80035e0:	bd80      	pop	{r7, pc}
 80035e2:	bf00      	nop
 80035e4:	200004bc 	.word	0x200004bc
 80035e8:	200003b8 	.word	0x200003b8
 80035ec:	200004c0 	.word	0x200004c0
 80035f0:	200004a4 	.word	0x200004a4
 80035f4:	20000474 	.word	0x20000474
 80035f8:	20000470 	.word	0x20000470
 80035fc:	200004d8 	.word	0x200004d8

08003600 <pxPortInitialiseStack>:
 8003600:	b480      	push	{r7}
 8003602:	b085      	sub	sp, #20
 8003604:	af00      	add	r7, sp, #0
 8003606:	60f8      	str	r0, [r7, #12]
 8003608:	60b9      	str	r1, [r7, #8]
 800360a:	607a      	str	r2, [r7, #4]
 800360c:	68fb      	ldr	r3, [r7, #12]
 800360e:	3b04      	subs	r3, #4
 8003610:	60fb      	str	r3, [r7, #12]
 8003612:	68fb      	ldr	r3, [r7, #12]
 8003614:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003618:	601a      	str	r2, [r3, #0]
 800361a:	68fb      	ldr	r3, [r7, #12]
 800361c:	3b04      	subs	r3, #4
 800361e:	60fb      	str	r3, [r7, #12]
 8003620:	68bb      	ldr	r3, [r7, #8]
 8003622:	f023 0201 	bic.w	r2, r3, #1
 8003626:	68fb      	ldr	r3, [r7, #12]
 8003628:	601a      	str	r2, [r3, #0]
 800362a:	68fb      	ldr	r3, [r7, #12]
 800362c:	3b04      	subs	r3, #4
 800362e:	60fb      	str	r3, [r7, #12]
 8003630:	4a08      	ldr	r2, [pc, #32]	; (8003654 <pxPortInitialiseStack+0x54>)
 8003632:	68fb      	ldr	r3, [r7, #12]
 8003634:	601a      	str	r2, [r3, #0]
 8003636:	68fb      	ldr	r3, [r7, #12]
 8003638:	3b14      	subs	r3, #20
 800363a:	60fb      	str	r3, [r7, #12]
 800363c:	687a      	ldr	r2, [r7, #4]
 800363e:	68fb      	ldr	r3, [r7, #12]
 8003640:	601a      	str	r2, [r3, #0]
 8003642:	68fb      	ldr	r3, [r7, #12]
 8003644:	3b20      	subs	r3, #32
 8003646:	60fb      	str	r3, [r7, #12]
 8003648:	68fb      	ldr	r3, [r7, #12]
 800364a:	4618      	mov	r0, r3
 800364c:	3714      	adds	r7, #20
 800364e:	46bd      	mov	sp, r7
 8003650:	bc80      	pop	{r7}
 8003652:	4770      	bx	lr
 8003654:	08003659 	.word	0x08003659

08003658 <prvTaskExitError>:
 8003658:	b480      	push	{r7}
 800365a:	b085      	sub	sp, #20
 800365c:	af00      	add	r7, sp, #0
 800365e:	2300      	movs	r3, #0
 8003660:	607b      	str	r3, [r7, #4]
 8003662:	4b12      	ldr	r3, [pc, #72]	; (80036ac <prvTaskExitError+0x54>)
 8003664:	681b      	ldr	r3, [r3, #0]
 8003666:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800366a:	d00a      	beq.n	8003682 <prvTaskExitError+0x2a>
 800366c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003670:	f383 8811 	msr	BASEPRI, r3
 8003674:	f3bf 8f6f 	isb	sy
 8003678:	f3bf 8f4f 	dsb	sy
 800367c:	60fb      	str	r3, [r7, #12]
 800367e:	bf00      	nop
 8003680:	e7fe      	b.n	8003680 <prvTaskExitError+0x28>
 8003682:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003686:	f383 8811 	msr	BASEPRI, r3
 800368a:	f3bf 8f6f 	isb	sy
 800368e:	f3bf 8f4f 	dsb	sy
 8003692:	60bb      	str	r3, [r7, #8]
 8003694:	bf00      	nop
 8003696:	bf00      	nop
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	2b00      	cmp	r3, #0
 800369c:	d0fc      	beq.n	8003698 <prvTaskExitError+0x40>
 800369e:	bf00      	nop
 80036a0:	bf00      	nop
 80036a2:	3714      	adds	r7, #20
 80036a4:	46bd      	mov	sp, r7
 80036a6:	bc80      	pop	{r7}
 80036a8:	4770      	bx	lr
 80036aa:	bf00      	nop
 80036ac:	200000d8 	.word	0x200000d8

080036b0 <SVC_Handler>:
 80036b0:	4b07      	ldr	r3, [pc, #28]	; (80036d0 <pxCurrentTCBConst2>)
 80036b2:	6819      	ldr	r1, [r3, #0]
 80036b4:	6808      	ldr	r0, [r1, #0]
 80036b6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80036ba:	f380 8809 	msr	PSP, r0
 80036be:	f3bf 8f6f 	isb	sy
 80036c2:	f04f 0000 	mov.w	r0, #0
 80036c6:	f380 8811 	msr	BASEPRI, r0
 80036ca:	f04e 0e0d 	orr.w	lr, lr, #13
 80036ce:	4770      	bx	lr

080036d0 <pxCurrentTCBConst2>:
 80036d0:	200003b8 	.word	0x200003b8
 80036d4:	bf00      	nop
 80036d6:	bf00      	nop

080036d8 <prvPortStartFirstTask>:
 80036d8:	4806      	ldr	r0, [pc, #24]	; (80036f4 <prvPortStartFirstTask+0x1c>)
 80036da:	6800      	ldr	r0, [r0, #0]
 80036dc:	6800      	ldr	r0, [r0, #0]
 80036de:	f380 8808 	msr	MSP, r0
 80036e2:	b662      	cpsie	i
 80036e4:	b661      	cpsie	f
 80036e6:	f3bf 8f4f 	dsb	sy
 80036ea:	f3bf 8f6f 	isb	sy
 80036ee:	df00      	svc	0
 80036f0:	bf00      	nop
 80036f2:	bf00      	nop
 80036f4:	e000ed08 	.word	0xe000ed08

080036f8 <xPortStartScheduler>:
 80036f8:	b580      	push	{r7, lr}
 80036fa:	b084      	sub	sp, #16
 80036fc:	af00      	add	r7, sp, #0
 80036fe:	4b32      	ldr	r3, [pc, #200]	; (80037c8 <xPortStartScheduler+0xd0>)
 8003700:	60fb      	str	r3, [r7, #12]
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	781b      	ldrb	r3, [r3, #0]
 8003706:	b2db      	uxtb	r3, r3
 8003708:	607b      	str	r3, [r7, #4]
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	22ff      	movs	r2, #255	; 0xff
 800370e:	701a      	strb	r2, [r3, #0]
 8003710:	68fb      	ldr	r3, [r7, #12]
 8003712:	781b      	ldrb	r3, [r3, #0]
 8003714:	b2db      	uxtb	r3, r3
 8003716:	70fb      	strb	r3, [r7, #3]
 8003718:	78fb      	ldrb	r3, [r7, #3]
 800371a:	b2db      	uxtb	r3, r3
 800371c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8003720:	b2da      	uxtb	r2, r3
 8003722:	4b2a      	ldr	r3, [pc, #168]	; (80037cc <xPortStartScheduler+0xd4>)
 8003724:	701a      	strb	r2, [r3, #0]
 8003726:	4b2a      	ldr	r3, [pc, #168]	; (80037d0 <xPortStartScheduler+0xd8>)
 8003728:	2207      	movs	r2, #7
 800372a:	601a      	str	r2, [r3, #0]
 800372c:	e009      	b.n	8003742 <xPortStartScheduler+0x4a>
 800372e:	4b28      	ldr	r3, [pc, #160]	; (80037d0 <xPortStartScheduler+0xd8>)
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	3b01      	subs	r3, #1
 8003734:	4a26      	ldr	r2, [pc, #152]	; (80037d0 <xPortStartScheduler+0xd8>)
 8003736:	6013      	str	r3, [r2, #0]
 8003738:	78fb      	ldrb	r3, [r7, #3]
 800373a:	b2db      	uxtb	r3, r3
 800373c:	005b      	lsls	r3, r3, #1
 800373e:	b2db      	uxtb	r3, r3
 8003740:	70fb      	strb	r3, [r7, #3]
 8003742:	78fb      	ldrb	r3, [r7, #3]
 8003744:	b2db      	uxtb	r3, r3
 8003746:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800374a:	2b80      	cmp	r3, #128	; 0x80
 800374c:	d0ef      	beq.n	800372e <xPortStartScheduler+0x36>
 800374e:	4b20      	ldr	r3, [pc, #128]	; (80037d0 <xPortStartScheduler+0xd8>)
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	f1c3 0307 	rsb	r3, r3, #7
 8003756:	2b04      	cmp	r3, #4
 8003758:	d00a      	beq.n	8003770 <xPortStartScheduler+0x78>
 800375a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800375e:	f383 8811 	msr	BASEPRI, r3
 8003762:	f3bf 8f6f 	isb	sy
 8003766:	f3bf 8f4f 	dsb	sy
 800376a:	60bb      	str	r3, [r7, #8]
 800376c:	bf00      	nop
 800376e:	e7fe      	b.n	800376e <xPortStartScheduler+0x76>
 8003770:	4b17      	ldr	r3, [pc, #92]	; (80037d0 <xPortStartScheduler+0xd8>)
 8003772:	681b      	ldr	r3, [r3, #0]
 8003774:	021b      	lsls	r3, r3, #8
 8003776:	4a16      	ldr	r2, [pc, #88]	; (80037d0 <xPortStartScheduler+0xd8>)
 8003778:	6013      	str	r3, [r2, #0]
 800377a:	4b15      	ldr	r3, [pc, #84]	; (80037d0 <xPortStartScheduler+0xd8>)
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003782:	4a13      	ldr	r2, [pc, #76]	; (80037d0 <xPortStartScheduler+0xd8>)
 8003784:	6013      	str	r3, [r2, #0]
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	b2da      	uxtb	r2, r3
 800378a:	68fb      	ldr	r3, [r7, #12]
 800378c:	701a      	strb	r2, [r3, #0]
 800378e:	4b11      	ldr	r3, [pc, #68]	; (80037d4 <xPortStartScheduler+0xdc>)
 8003790:	681b      	ldr	r3, [r3, #0]
 8003792:	4a10      	ldr	r2, [pc, #64]	; (80037d4 <xPortStartScheduler+0xdc>)
 8003794:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003798:	6013      	str	r3, [r2, #0]
 800379a:	4b0e      	ldr	r3, [pc, #56]	; (80037d4 <xPortStartScheduler+0xdc>)
 800379c:	681b      	ldr	r3, [r3, #0]
 800379e:	4a0d      	ldr	r2, [pc, #52]	; (80037d4 <xPortStartScheduler+0xdc>)
 80037a0:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80037a4:	6013      	str	r3, [r2, #0]
 80037a6:	f000 f8b9 	bl	800391c <vPortSetupTimerInterrupt>
 80037aa:	4b0b      	ldr	r3, [pc, #44]	; (80037d8 <xPortStartScheduler+0xe0>)
 80037ac:	2200      	movs	r2, #0
 80037ae:	601a      	str	r2, [r3, #0]
 80037b0:	f7ff ff92 	bl	80036d8 <prvPortStartFirstTask>
 80037b4:	f7ff fd8a 	bl	80032cc <vTaskSwitchContext>
 80037b8:	f7ff ff4e 	bl	8003658 <prvTaskExitError>
 80037bc:	2300      	movs	r3, #0
 80037be:	4618      	mov	r0, r3
 80037c0:	3710      	adds	r7, #16
 80037c2:	46bd      	mov	sp, r7
 80037c4:	bd80      	pop	{r7, pc}
 80037c6:	bf00      	nop
 80037c8:	e000e400 	.word	0xe000e400
 80037cc:	200004e4 	.word	0x200004e4
 80037d0:	200004e8 	.word	0x200004e8
 80037d4:	e000ed20 	.word	0xe000ed20
 80037d8:	200000d8 	.word	0x200000d8

080037dc <vPortEnterCritical>:
 80037dc:	b480      	push	{r7}
 80037de:	b083      	sub	sp, #12
 80037e0:	af00      	add	r7, sp, #0
 80037e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80037e6:	f383 8811 	msr	BASEPRI, r3
 80037ea:	f3bf 8f6f 	isb	sy
 80037ee:	f3bf 8f4f 	dsb	sy
 80037f2:	607b      	str	r3, [r7, #4]
 80037f4:	bf00      	nop
 80037f6:	4b0f      	ldr	r3, [pc, #60]	; (8003834 <vPortEnterCritical+0x58>)
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	3301      	adds	r3, #1
 80037fc:	4a0d      	ldr	r2, [pc, #52]	; (8003834 <vPortEnterCritical+0x58>)
 80037fe:	6013      	str	r3, [r2, #0]
 8003800:	4b0c      	ldr	r3, [pc, #48]	; (8003834 <vPortEnterCritical+0x58>)
 8003802:	681b      	ldr	r3, [r3, #0]
 8003804:	2b01      	cmp	r3, #1
 8003806:	d10f      	bne.n	8003828 <vPortEnterCritical+0x4c>
 8003808:	4b0b      	ldr	r3, [pc, #44]	; (8003838 <vPortEnterCritical+0x5c>)
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	b2db      	uxtb	r3, r3
 800380e:	2b00      	cmp	r3, #0
 8003810:	d00a      	beq.n	8003828 <vPortEnterCritical+0x4c>
 8003812:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003816:	f383 8811 	msr	BASEPRI, r3
 800381a:	f3bf 8f6f 	isb	sy
 800381e:	f3bf 8f4f 	dsb	sy
 8003822:	603b      	str	r3, [r7, #0]
 8003824:	bf00      	nop
 8003826:	e7fe      	b.n	8003826 <vPortEnterCritical+0x4a>
 8003828:	bf00      	nop
 800382a:	370c      	adds	r7, #12
 800382c:	46bd      	mov	sp, r7
 800382e:	bc80      	pop	{r7}
 8003830:	4770      	bx	lr
 8003832:	bf00      	nop
 8003834:	200000d8 	.word	0x200000d8
 8003838:	e000ed04 	.word	0xe000ed04

0800383c <vPortExitCritical>:
 800383c:	b480      	push	{r7}
 800383e:	b083      	sub	sp, #12
 8003840:	af00      	add	r7, sp, #0
 8003842:	4b11      	ldr	r3, [pc, #68]	; (8003888 <vPortExitCritical+0x4c>)
 8003844:	681b      	ldr	r3, [r3, #0]
 8003846:	2b00      	cmp	r3, #0
 8003848:	d10a      	bne.n	8003860 <vPortExitCritical+0x24>
 800384a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800384e:	f383 8811 	msr	BASEPRI, r3
 8003852:	f3bf 8f6f 	isb	sy
 8003856:	f3bf 8f4f 	dsb	sy
 800385a:	607b      	str	r3, [r7, #4]
 800385c:	bf00      	nop
 800385e:	e7fe      	b.n	800385e <vPortExitCritical+0x22>
 8003860:	4b09      	ldr	r3, [pc, #36]	; (8003888 <vPortExitCritical+0x4c>)
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	3b01      	subs	r3, #1
 8003866:	4a08      	ldr	r2, [pc, #32]	; (8003888 <vPortExitCritical+0x4c>)
 8003868:	6013      	str	r3, [r2, #0]
 800386a:	4b07      	ldr	r3, [pc, #28]	; (8003888 <vPortExitCritical+0x4c>)
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	2b00      	cmp	r3, #0
 8003870:	d105      	bne.n	800387e <vPortExitCritical+0x42>
 8003872:	2300      	movs	r3, #0
 8003874:	603b      	str	r3, [r7, #0]
 8003876:	683b      	ldr	r3, [r7, #0]
 8003878:	f383 8811 	msr	BASEPRI, r3
 800387c:	bf00      	nop
 800387e:	bf00      	nop
 8003880:	370c      	adds	r7, #12
 8003882:	46bd      	mov	sp, r7
 8003884:	bc80      	pop	{r7}
 8003886:	4770      	bx	lr
 8003888:	200000d8 	.word	0x200000d8
 800388c:	00000000 	.word	0x00000000

08003890 <PendSV_Handler>:
 8003890:	f3ef 8009 	mrs	r0, PSP
 8003894:	f3bf 8f6f 	isb	sy
 8003898:	4b0d      	ldr	r3, [pc, #52]	; (80038d0 <pxCurrentTCBConst>)
 800389a:	681a      	ldr	r2, [r3, #0]
 800389c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80038a0:	6010      	str	r0, [r2, #0]
 80038a2:	e92d 4008 	stmdb	sp!, {r3, lr}
 80038a6:	f04f 0050 	mov.w	r0, #80	; 0x50
 80038aa:	f380 8811 	msr	BASEPRI, r0
 80038ae:	f7ff fd0d 	bl	80032cc <vTaskSwitchContext>
 80038b2:	f04f 0000 	mov.w	r0, #0
 80038b6:	f380 8811 	msr	BASEPRI, r0
 80038ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80038be:	6819      	ldr	r1, [r3, #0]
 80038c0:	6808      	ldr	r0, [r1, #0]
 80038c2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80038c6:	f380 8809 	msr	PSP, r0
 80038ca:	f3bf 8f6f 	isb	sy
 80038ce:	4770      	bx	lr

080038d0 <pxCurrentTCBConst>:
 80038d0:	200003b8 	.word	0x200003b8
 80038d4:	bf00      	nop
 80038d6:	bf00      	nop

080038d8 <SysTick_Handler>:
 80038d8:	b580      	push	{r7, lr}
 80038da:	b082      	sub	sp, #8
 80038dc:	af00      	add	r7, sp, #0
 80038de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80038e2:	f383 8811 	msr	BASEPRI, r3
 80038e6:	f3bf 8f6f 	isb	sy
 80038ea:	f3bf 8f4f 	dsb	sy
 80038ee:	607b      	str	r3, [r7, #4]
 80038f0:	bf00      	nop
 80038f2:	f7ff fc2d 	bl	8003150 <xTaskIncrementTick>
 80038f6:	4603      	mov	r3, r0
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	d003      	beq.n	8003904 <SysTick_Handler+0x2c>
 80038fc:	4b06      	ldr	r3, [pc, #24]	; (8003918 <SysTick_Handler+0x40>)
 80038fe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003902:	601a      	str	r2, [r3, #0]
 8003904:	2300      	movs	r3, #0
 8003906:	603b      	str	r3, [r7, #0]
 8003908:	683b      	ldr	r3, [r7, #0]
 800390a:	f383 8811 	msr	BASEPRI, r3
 800390e:	bf00      	nop
 8003910:	bf00      	nop
 8003912:	3708      	adds	r7, #8
 8003914:	46bd      	mov	sp, r7
 8003916:	bd80      	pop	{r7, pc}
 8003918:	e000ed04 	.word	0xe000ed04

0800391c <vPortSetupTimerInterrupt>:
 800391c:	b480      	push	{r7}
 800391e:	af00      	add	r7, sp, #0
 8003920:	4b0a      	ldr	r3, [pc, #40]	; (800394c <vPortSetupTimerInterrupt+0x30>)
 8003922:	2200      	movs	r2, #0
 8003924:	601a      	str	r2, [r3, #0]
 8003926:	4b0a      	ldr	r3, [pc, #40]	; (8003950 <vPortSetupTimerInterrupt+0x34>)
 8003928:	2200      	movs	r2, #0
 800392a:	601a      	str	r2, [r3, #0]
 800392c:	4b09      	ldr	r3, [pc, #36]	; (8003954 <vPortSetupTimerInterrupt+0x38>)
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	4a09      	ldr	r2, [pc, #36]	; (8003958 <vPortSetupTimerInterrupt+0x3c>)
 8003932:	fba2 2303 	umull	r2, r3, r2, r3
 8003936:	099b      	lsrs	r3, r3, #6
 8003938:	4a08      	ldr	r2, [pc, #32]	; (800395c <vPortSetupTimerInterrupt+0x40>)
 800393a:	3b01      	subs	r3, #1
 800393c:	6013      	str	r3, [r2, #0]
 800393e:	4b03      	ldr	r3, [pc, #12]	; (800394c <vPortSetupTimerInterrupt+0x30>)
 8003940:	2207      	movs	r2, #7
 8003942:	601a      	str	r2, [r3, #0]
 8003944:	bf00      	nop
 8003946:	46bd      	mov	sp, r7
 8003948:	bc80      	pop	{r7}
 800394a:	4770      	bx	lr
 800394c:	e000e010 	.word	0xe000e010
 8003950:	e000e018 	.word	0xe000e018
 8003954:	200000cc 	.word	0x200000cc
 8003958:	10624dd3 	.word	0x10624dd3
 800395c:	e000e014 	.word	0xe000e014

08003960 <pvPortMalloc>:
 8003960:	b580      	push	{r7, lr}
 8003962:	b08a      	sub	sp, #40	; 0x28
 8003964:	af00      	add	r7, sp, #0
 8003966:	6078      	str	r0, [r7, #4]
 8003968:	2300      	movs	r3, #0
 800396a:	61fb      	str	r3, [r7, #28]
 800396c:	f7ff fb46 	bl	8002ffc <vTaskSuspendAll>
 8003970:	4b58      	ldr	r3, [pc, #352]	; (8003ad4 <pvPortMalloc+0x174>)
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	2b00      	cmp	r3, #0
 8003976:	d101      	bne.n	800397c <pvPortMalloc+0x1c>
 8003978:	f000 f910 	bl	8003b9c <prvHeapInit>
 800397c:	4b56      	ldr	r3, [pc, #344]	; (8003ad8 <pvPortMalloc+0x178>)
 800397e:	681a      	ldr	r2, [r3, #0]
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	4013      	ands	r3, r2
 8003984:	2b00      	cmp	r3, #0
 8003986:	f040 808e 	bne.w	8003aa6 <pvPortMalloc+0x146>
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	2b00      	cmp	r3, #0
 800398e:	d01d      	beq.n	80039cc <pvPortMalloc+0x6c>
 8003990:	2208      	movs	r2, #8
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	4413      	add	r3, r2
 8003996:	607b      	str	r3, [r7, #4]
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	f003 0307 	and.w	r3, r3, #7
 800399e:	2b00      	cmp	r3, #0
 80039a0:	d014      	beq.n	80039cc <pvPortMalloc+0x6c>
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	f023 0307 	bic.w	r3, r3, #7
 80039a8:	3308      	adds	r3, #8
 80039aa:	607b      	str	r3, [r7, #4]
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	f003 0307 	and.w	r3, r3, #7
 80039b2:	2b00      	cmp	r3, #0
 80039b4:	d00a      	beq.n	80039cc <pvPortMalloc+0x6c>
 80039b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80039ba:	f383 8811 	msr	BASEPRI, r3
 80039be:	f3bf 8f6f 	isb	sy
 80039c2:	f3bf 8f4f 	dsb	sy
 80039c6:	617b      	str	r3, [r7, #20]
 80039c8:	bf00      	nop
 80039ca:	e7fe      	b.n	80039ca <pvPortMalloc+0x6a>
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	2b00      	cmp	r3, #0
 80039d0:	d069      	beq.n	8003aa6 <pvPortMalloc+0x146>
 80039d2:	4b42      	ldr	r3, [pc, #264]	; (8003adc <pvPortMalloc+0x17c>)
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	687a      	ldr	r2, [r7, #4]
 80039d8:	429a      	cmp	r2, r3
 80039da:	d864      	bhi.n	8003aa6 <pvPortMalloc+0x146>
 80039dc:	4b40      	ldr	r3, [pc, #256]	; (8003ae0 <pvPortMalloc+0x180>)
 80039de:	623b      	str	r3, [r7, #32]
 80039e0:	4b3f      	ldr	r3, [pc, #252]	; (8003ae0 <pvPortMalloc+0x180>)
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	627b      	str	r3, [r7, #36]	; 0x24
 80039e6:	e004      	b.n	80039f2 <pvPortMalloc+0x92>
 80039e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039ea:	623b      	str	r3, [r7, #32]
 80039ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	627b      	str	r3, [r7, #36]	; 0x24
 80039f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039f4:	685b      	ldr	r3, [r3, #4]
 80039f6:	687a      	ldr	r2, [r7, #4]
 80039f8:	429a      	cmp	r2, r3
 80039fa:	d903      	bls.n	8003a04 <pvPortMalloc+0xa4>
 80039fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039fe:	681b      	ldr	r3, [r3, #0]
 8003a00:	2b00      	cmp	r3, #0
 8003a02:	d1f1      	bne.n	80039e8 <pvPortMalloc+0x88>
 8003a04:	4b33      	ldr	r3, [pc, #204]	; (8003ad4 <pvPortMalloc+0x174>)
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003a0a:	429a      	cmp	r2, r3
 8003a0c:	d04b      	beq.n	8003aa6 <pvPortMalloc+0x146>
 8003a0e:	6a3b      	ldr	r3, [r7, #32]
 8003a10:	681b      	ldr	r3, [r3, #0]
 8003a12:	2208      	movs	r2, #8
 8003a14:	4413      	add	r3, r2
 8003a16:	61fb      	str	r3, [r7, #28]
 8003a18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a1a:	681a      	ldr	r2, [r3, #0]
 8003a1c:	6a3b      	ldr	r3, [r7, #32]
 8003a1e:	601a      	str	r2, [r3, #0]
 8003a20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a22:	685a      	ldr	r2, [r3, #4]
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	1ad2      	subs	r2, r2, r3
 8003a28:	2308      	movs	r3, #8
 8003a2a:	005b      	lsls	r3, r3, #1
 8003a2c:	429a      	cmp	r2, r3
 8003a2e:	d91f      	bls.n	8003a70 <pvPortMalloc+0x110>
 8003a30:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	4413      	add	r3, r2
 8003a36:	61bb      	str	r3, [r7, #24]
 8003a38:	69bb      	ldr	r3, [r7, #24]
 8003a3a:	f003 0307 	and.w	r3, r3, #7
 8003a3e:	2b00      	cmp	r3, #0
 8003a40:	d00a      	beq.n	8003a58 <pvPortMalloc+0xf8>
 8003a42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003a46:	f383 8811 	msr	BASEPRI, r3
 8003a4a:	f3bf 8f6f 	isb	sy
 8003a4e:	f3bf 8f4f 	dsb	sy
 8003a52:	613b      	str	r3, [r7, #16]
 8003a54:	bf00      	nop
 8003a56:	e7fe      	b.n	8003a56 <pvPortMalloc+0xf6>
 8003a58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a5a:	685a      	ldr	r2, [r3, #4]
 8003a5c:	687b      	ldr	r3, [r7, #4]
 8003a5e:	1ad2      	subs	r2, r2, r3
 8003a60:	69bb      	ldr	r3, [r7, #24]
 8003a62:	605a      	str	r2, [r3, #4]
 8003a64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a66:	687a      	ldr	r2, [r7, #4]
 8003a68:	605a      	str	r2, [r3, #4]
 8003a6a:	69b8      	ldr	r0, [r7, #24]
 8003a6c:	f000 f8f8 	bl	8003c60 <prvInsertBlockIntoFreeList>
 8003a70:	4b1a      	ldr	r3, [pc, #104]	; (8003adc <pvPortMalloc+0x17c>)
 8003a72:	681a      	ldr	r2, [r3, #0]
 8003a74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a76:	685b      	ldr	r3, [r3, #4]
 8003a78:	1ad3      	subs	r3, r2, r3
 8003a7a:	4a18      	ldr	r2, [pc, #96]	; (8003adc <pvPortMalloc+0x17c>)
 8003a7c:	6013      	str	r3, [r2, #0]
 8003a7e:	4b17      	ldr	r3, [pc, #92]	; (8003adc <pvPortMalloc+0x17c>)
 8003a80:	681a      	ldr	r2, [r3, #0]
 8003a82:	4b18      	ldr	r3, [pc, #96]	; (8003ae4 <pvPortMalloc+0x184>)
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	429a      	cmp	r2, r3
 8003a88:	d203      	bcs.n	8003a92 <pvPortMalloc+0x132>
 8003a8a:	4b14      	ldr	r3, [pc, #80]	; (8003adc <pvPortMalloc+0x17c>)
 8003a8c:	681b      	ldr	r3, [r3, #0]
 8003a8e:	4a15      	ldr	r2, [pc, #84]	; (8003ae4 <pvPortMalloc+0x184>)
 8003a90:	6013      	str	r3, [r2, #0]
 8003a92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a94:	685a      	ldr	r2, [r3, #4]
 8003a96:	4b10      	ldr	r3, [pc, #64]	; (8003ad8 <pvPortMalloc+0x178>)
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	431a      	orrs	r2, r3
 8003a9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a9e:	605a      	str	r2, [r3, #4]
 8003aa0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003aa2:	2200      	movs	r2, #0
 8003aa4:	601a      	str	r2, [r3, #0]
 8003aa6:	f7ff fab7 	bl	8003018 <xTaskResumeAll>
 8003aaa:	69fb      	ldr	r3, [r7, #28]
 8003aac:	f003 0307 	and.w	r3, r3, #7
 8003ab0:	2b00      	cmp	r3, #0
 8003ab2:	d00a      	beq.n	8003aca <pvPortMalloc+0x16a>
 8003ab4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003ab8:	f383 8811 	msr	BASEPRI, r3
 8003abc:	f3bf 8f6f 	isb	sy
 8003ac0:	f3bf 8f4f 	dsb	sy
 8003ac4:	60fb      	str	r3, [r7, #12]
 8003ac6:	bf00      	nop
 8003ac8:	e7fe      	b.n	8003ac8 <pvPortMalloc+0x168>
 8003aca:	69fb      	ldr	r3, [r7, #28]
 8003acc:	4618      	mov	r0, r3
 8003ace:	3728      	adds	r7, #40	; 0x28
 8003ad0:	46bd      	mov	sp, r7
 8003ad2:	bd80      	pop	{r7, pc}
 8003ad4:	200010f4 	.word	0x200010f4
 8003ad8:	20001100 	.word	0x20001100
 8003adc:	200010f8 	.word	0x200010f8
 8003ae0:	200010ec 	.word	0x200010ec
 8003ae4:	200010fc 	.word	0x200010fc

08003ae8 <vPortFree>:
 8003ae8:	b580      	push	{r7, lr}
 8003aea:	b086      	sub	sp, #24
 8003aec:	af00      	add	r7, sp, #0
 8003aee:	6078      	str	r0, [r7, #4]
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	617b      	str	r3, [r7, #20]
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d048      	beq.n	8003b8c <vPortFree+0xa4>
 8003afa:	2308      	movs	r3, #8
 8003afc:	425b      	negs	r3, r3
 8003afe:	697a      	ldr	r2, [r7, #20]
 8003b00:	4413      	add	r3, r2
 8003b02:	617b      	str	r3, [r7, #20]
 8003b04:	697b      	ldr	r3, [r7, #20]
 8003b06:	613b      	str	r3, [r7, #16]
 8003b08:	693b      	ldr	r3, [r7, #16]
 8003b0a:	685a      	ldr	r2, [r3, #4]
 8003b0c:	4b21      	ldr	r3, [pc, #132]	; (8003b94 <vPortFree+0xac>)
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	4013      	ands	r3, r2
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d10a      	bne.n	8003b2c <vPortFree+0x44>
 8003b16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b1a:	f383 8811 	msr	BASEPRI, r3
 8003b1e:	f3bf 8f6f 	isb	sy
 8003b22:	f3bf 8f4f 	dsb	sy
 8003b26:	60fb      	str	r3, [r7, #12]
 8003b28:	bf00      	nop
 8003b2a:	e7fe      	b.n	8003b2a <vPortFree+0x42>
 8003b2c:	693b      	ldr	r3, [r7, #16]
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	2b00      	cmp	r3, #0
 8003b32:	d00a      	beq.n	8003b4a <vPortFree+0x62>
 8003b34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b38:	f383 8811 	msr	BASEPRI, r3
 8003b3c:	f3bf 8f6f 	isb	sy
 8003b40:	f3bf 8f4f 	dsb	sy
 8003b44:	60bb      	str	r3, [r7, #8]
 8003b46:	bf00      	nop
 8003b48:	e7fe      	b.n	8003b48 <vPortFree+0x60>
 8003b4a:	693b      	ldr	r3, [r7, #16]
 8003b4c:	685a      	ldr	r2, [r3, #4]
 8003b4e:	4b11      	ldr	r3, [pc, #68]	; (8003b94 <vPortFree+0xac>)
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	4013      	ands	r3, r2
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	d019      	beq.n	8003b8c <vPortFree+0xa4>
 8003b58:	693b      	ldr	r3, [r7, #16]
 8003b5a:	681b      	ldr	r3, [r3, #0]
 8003b5c:	2b00      	cmp	r3, #0
 8003b5e:	d115      	bne.n	8003b8c <vPortFree+0xa4>
 8003b60:	693b      	ldr	r3, [r7, #16]
 8003b62:	685a      	ldr	r2, [r3, #4]
 8003b64:	4b0b      	ldr	r3, [pc, #44]	; (8003b94 <vPortFree+0xac>)
 8003b66:	681b      	ldr	r3, [r3, #0]
 8003b68:	43db      	mvns	r3, r3
 8003b6a:	401a      	ands	r2, r3
 8003b6c:	693b      	ldr	r3, [r7, #16]
 8003b6e:	605a      	str	r2, [r3, #4]
 8003b70:	f7ff fa44 	bl	8002ffc <vTaskSuspendAll>
 8003b74:	693b      	ldr	r3, [r7, #16]
 8003b76:	685a      	ldr	r2, [r3, #4]
 8003b78:	4b07      	ldr	r3, [pc, #28]	; (8003b98 <vPortFree+0xb0>)
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	4413      	add	r3, r2
 8003b7e:	4a06      	ldr	r2, [pc, #24]	; (8003b98 <vPortFree+0xb0>)
 8003b80:	6013      	str	r3, [r2, #0]
 8003b82:	6938      	ldr	r0, [r7, #16]
 8003b84:	f000 f86c 	bl	8003c60 <prvInsertBlockIntoFreeList>
 8003b88:	f7ff fa46 	bl	8003018 <xTaskResumeAll>
 8003b8c:	bf00      	nop
 8003b8e:	3718      	adds	r7, #24
 8003b90:	46bd      	mov	sp, r7
 8003b92:	bd80      	pop	{r7, pc}
 8003b94:	20001100 	.word	0x20001100
 8003b98:	200010f8 	.word	0x200010f8

08003b9c <prvHeapInit>:
 8003b9c:	b480      	push	{r7}
 8003b9e:	b085      	sub	sp, #20
 8003ba0:	af00      	add	r7, sp, #0
 8003ba2:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003ba6:	60bb      	str	r3, [r7, #8]
 8003ba8:	4b27      	ldr	r3, [pc, #156]	; (8003c48 <prvHeapInit+0xac>)
 8003baa:	60fb      	str	r3, [r7, #12]
 8003bac:	68fb      	ldr	r3, [r7, #12]
 8003bae:	f003 0307 	and.w	r3, r3, #7
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	d00c      	beq.n	8003bd0 <prvHeapInit+0x34>
 8003bb6:	68fb      	ldr	r3, [r7, #12]
 8003bb8:	3307      	adds	r3, #7
 8003bba:	60fb      	str	r3, [r7, #12]
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	f023 0307 	bic.w	r3, r3, #7
 8003bc2:	60fb      	str	r3, [r7, #12]
 8003bc4:	68ba      	ldr	r2, [r7, #8]
 8003bc6:	68fb      	ldr	r3, [r7, #12]
 8003bc8:	1ad3      	subs	r3, r2, r3
 8003bca:	4a1f      	ldr	r2, [pc, #124]	; (8003c48 <prvHeapInit+0xac>)
 8003bcc:	4413      	add	r3, r2
 8003bce:	60bb      	str	r3, [r7, #8]
 8003bd0:	68fb      	ldr	r3, [r7, #12]
 8003bd2:	607b      	str	r3, [r7, #4]
 8003bd4:	4a1d      	ldr	r2, [pc, #116]	; (8003c4c <prvHeapInit+0xb0>)
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	6013      	str	r3, [r2, #0]
 8003bda:	4b1c      	ldr	r3, [pc, #112]	; (8003c4c <prvHeapInit+0xb0>)
 8003bdc:	2200      	movs	r2, #0
 8003bde:	605a      	str	r2, [r3, #4]
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	68ba      	ldr	r2, [r7, #8]
 8003be4:	4413      	add	r3, r2
 8003be6:	60fb      	str	r3, [r7, #12]
 8003be8:	2208      	movs	r2, #8
 8003bea:	68fb      	ldr	r3, [r7, #12]
 8003bec:	1a9b      	subs	r3, r3, r2
 8003bee:	60fb      	str	r3, [r7, #12]
 8003bf0:	68fb      	ldr	r3, [r7, #12]
 8003bf2:	f023 0307 	bic.w	r3, r3, #7
 8003bf6:	60fb      	str	r3, [r7, #12]
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	4a15      	ldr	r2, [pc, #84]	; (8003c50 <prvHeapInit+0xb4>)
 8003bfc:	6013      	str	r3, [r2, #0]
 8003bfe:	4b14      	ldr	r3, [pc, #80]	; (8003c50 <prvHeapInit+0xb4>)
 8003c00:	681b      	ldr	r3, [r3, #0]
 8003c02:	2200      	movs	r2, #0
 8003c04:	605a      	str	r2, [r3, #4]
 8003c06:	4b12      	ldr	r3, [pc, #72]	; (8003c50 <prvHeapInit+0xb4>)
 8003c08:	681b      	ldr	r3, [r3, #0]
 8003c0a:	2200      	movs	r2, #0
 8003c0c:	601a      	str	r2, [r3, #0]
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	603b      	str	r3, [r7, #0]
 8003c12:	683b      	ldr	r3, [r7, #0]
 8003c14:	68fa      	ldr	r2, [r7, #12]
 8003c16:	1ad2      	subs	r2, r2, r3
 8003c18:	683b      	ldr	r3, [r7, #0]
 8003c1a:	605a      	str	r2, [r3, #4]
 8003c1c:	4b0c      	ldr	r3, [pc, #48]	; (8003c50 <prvHeapInit+0xb4>)
 8003c1e:	681a      	ldr	r2, [r3, #0]
 8003c20:	683b      	ldr	r3, [r7, #0]
 8003c22:	601a      	str	r2, [r3, #0]
 8003c24:	683b      	ldr	r3, [r7, #0]
 8003c26:	685b      	ldr	r3, [r3, #4]
 8003c28:	4a0a      	ldr	r2, [pc, #40]	; (8003c54 <prvHeapInit+0xb8>)
 8003c2a:	6013      	str	r3, [r2, #0]
 8003c2c:	683b      	ldr	r3, [r7, #0]
 8003c2e:	685b      	ldr	r3, [r3, #4]
 8003c30:	4a09      	ldr	r2, [pc, #36]	; (8003c58 <prvHeapInit+0xbc>)
 8003c32:	6013      	str	r3, [r2, #0]
 8003c34:	4b09      	ldr	r3, [pc, #36]	; (8003c5c <prvHeapInit+0xc0>)
 8003c36:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8003c3a:	601a      	str	r2, [r3, #0]
 8003c3c:	bf00      	nop
 8003c3e:	3714      	adds	r7, #20
 8003c40:	46bd      	mov	sp, r7
 8003c42:	bc80      	pop	{r7}
 8003c44:	4770      	bx	lr
 8003c46:	bf00      	nop
 8003c48:	200004ec 	.word	0x200004ec
 8003c4c:	200010ec 	.word	0x200010ec
 8003c50:	200010f4 	.word	0x200010f4
 8003c54:	200010fc 	.word	0x200010fc
 8003c58:	200010f8 	.word	0x200010f8
 8003c5c:	20001100 	.word	0x20001100

08003c60 <prvInsertBlockIntoFreeList>:
 8003c60:	b480      	push	{r7}
 8003c62:	b085      	sub	sp, #20
 8003c64:	af00      	add	r7, sp, #0
 8003c66:	6078      	str	r0, [r7, #4]
 8003c68:	4b27      	ldr	r3, [pc, #156]	; (8003d08 <prvInsertBlockIntoFreeList+0xa8>)
 8003c6a:	60fb      	str	r3, [r7, #12]
 8003c6c:	e002      	b.n	8003c74 <prvInsertBlockIntoFreeList+0x14>
 8003c6e:	68fb      	ldr	r3, [r7, #12]
 8003c70:	681b      	ldr	r3, [r3, #0]
 8003c72:	60fb      	str	r3, [r7, #12]
 8003c74:	68fb      	ldr	r3, [r7, #12]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	687a      	ldr	r2, [r7, #4]
 8003c7a:	429a      	cmp	r2, r3
 8003c7c:	d8f7      	bhi.n	8003c6e <prvInsertBlockIntoFreeList+0xe>
 8003c7e:	68fb      	ldr	r3, [r7, #12]
 8003c80:	60bb      	str	r3, [r7, #8]
 8003c82:	68fb      	ldr	r3, [r7, #12]
 8003c84:	685b      	ldr	r3, [r3, #4]
 8003c86:	68ba      	ldr	r2, [r7, #8]
 8003c88:	4413      	add	r3, r2
 8003c8a:	687a      	ldr	r2, [r7, #4]
 8003c8c:	429a      	cmp	r2, r3
 8003c8e:	d108      	bne.n	8003ca2 <prvInsertBlockIntoFreeList+0x42>
 8003c90:	68fb      	ldr	r3, [r7, #12]
 8003c92:	685a      	ldr	r2, [r3, #4]
 8003c94:	687b      	ldr	r3, [r7, #4]
 8003c96:	685b      	ldr	r3, [r3, #4]
 8003c98:	441a      	add	r2, r3
 8003c9a:	68fb      	ldr	r3, [r7, #12]
 8003c9c:	605a      	str	r2, [r3, #4]
 8003c9e:	68fb      	ldr	r3, [r7, #12]
 8003ca0:	607b      	str	r3, [r7, #4]
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	60bb      	str	r3, [r7, #8]
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	685b      	ldr	r3, [r3, #4]
 8003caa:	68ba      	ldr	r2, [r7, #8]
 8003cac:	441a      	add	r2, r3
 8003cae:	68fb      	ldr	r3, [r7, #12]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	429a      	cmp	r2, r3
 8003cb4:	d118      	bne.n	8003ce8 <prvInsertBlockIntoFreeList+0x88>
 8003cb6:	68fb      	ldr	r3, [r7, #12]
 8003cb8:	681a      	ldr	r2, [r3, #0]
 8003cba:	4b14      	ldr	r3, [pc, #80]	; (8003d0c <prvInsertBlockIntoFreeList+0xac>)
 8003cbc:	681b      	ldr	r3, [r3, #0]
 8003cbe:	429a      	cmp	r2, r3
 8003cc0:	d00d      	beq.n	8003cde <prvInsertBlockIntoFreeList+0x7e>
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	685a      	ldr	r2, [r3, #4]
 8003cc6:	68fb      	ldr	r3, [r7, #12]
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	685b      	ldr	r3, [r3, #4]
 8003ccc:	441a      	add	r2, r3
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	605a      	str	r2, [r3, #4]
 8003cd2:	68fb      	ldr	r3, [r7, #12]
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	681a      	ldr	r2, [r3, #0]
 8003cd8:	687b      	ldr	r3, [r7, #4]
 8003cda:	601a      	str	r2, [r3, #0]
 8003cdc:	e008      	b.n	8003cf0 <prvInsertBlockIntoFreeList+0x90>
 8003cde:	4b0b      	ldr	r3, [pc, #44]	; (8003d0c <prvInsertBlockIntoFreeList+0xac>)
 8003ce0:	681a      	ldr	r2, [r3, #0]
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	601a      	str	r2, [r3, #0]
 8003ce6:	e003      	b.n	8003cf0 <prvInsertBlockIntoFreeList+0x90>
 8003ce8:	68fb      	ldr	r3, [r7, #12]
 8003cea:	681a      	ldr	r2, [r3, #0]
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	601a      	str	r2, [r3, #0]
 8003cf0:	68fa      	ldr	r2, [r7, #12]
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	429a      	cmp	r2, r3
 8003cf6:	d002      	beq.n	8003cfe <prvInsertBlockIntoFreeList+0x9e>
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	687a      	ldr	r2, [r7, #4]
 8003cfc:	601a      	str	r2, [r3, #0]
 8003cfe:	bf00      	nop
 8003d00:	3714      	adds	r7, #20
 8003d02:	46bd      	mov	sp, r7
 8003d04:	bc80      	pop	{r7}
 8003d06:	4770      	bx	lr
 8003d08:	200010ec 	.word	0x200010ec
 8003d0c:	200010f4 	.word	0x200010f4

08003d10 <__errno>:
 8003d10:	4b01      	ldr	r3, [pc, #4]	; (8003d18 <__errno+0x8>)
 8003d12:	6818      	ldr	r0, [r3, #0]
 8003d14:	4770      	bx	lr
 8003d16:	bf00      	nop
 8003d18:	200000dc 	.word	0x200000dc

08003d1c <__libc_init_array>:
 8003d1c:	b570      	push	{r4, r5, r6, lr}
 8003d1e:	2600      	movs	r6, #0
 8003d20:	4d0c      	ldr	r5, [pc, #48]	; (8003d54 <__libc_init_array+0x38>)
 8003d22:	4c0d      	ldr	r4, [pc, #52]	; (8003d58 <__libc_init_array+0x3c>)
 8003d24:	1b64      	subs	r4, r4, r5
 8003d26:	10a4      	asrs	r4, r4, #2
 8003d28:	42a6      	cmp	r6, r4
 8003d2a:	d109      	bne.n	8003d40 <__libc_init_array+0x24>
 8003d2c:	f001 fa7a 	bl	8005224 <_init>
 8003d30:	2600      	movs	r6, #0
 8003d32:	4d0a      	ldr	r5, [pc, #40]	; (8003d5c <__libc_init_array+0x40>)
 8003d34:	4c0a      	ldr	r4, [pc, #40]	; (8003d60 <__libc_init_array+0x44>)
 8003d36:	1b64      	subs	r4, r4, r5
 8003d38:	10a4      	asrs	r4, r4, #2
 8003d3a:	42a6      	cmp	r6, r4
 8003d3c:	d105      	bne.n	8003d4a <__libc_init_array+0x2e>
 8003d3e:	bd70      	pop	{r4, r5, r6, pc}
 8003d40:	f855 3b04 	ldr.w	r3, [r5], #4
 8003d44:	4798      	blx	r3
 8003d46:	3601      	adds	r6, #1
 8003d48:	e7ee      	b.n	8003d28 <__libc_init_array+0xc>
 8003d4a:	f855 3b04 	ldr.w	r3, [r5], #4
 8003d4e:	4798      	blx	r3
 8003d50:	3601      	adds	r6, #1
 8003d52:	e7f2      	b.n	8003d3a <__libc_init_array+0x1e>
 8003d54:	08005428 	.word	0x08005428
 8003d58:	08005428 	.word	0x08005428
 8003d5c:	08005428 	.word	0x08005428
 8003d60:	0800542c 	.word	0x0800542c

08003d64 <memcpy>:
 8003d64:	440a      	add	r2, r1
 8003d66:	4291      	cmp	r1, r2
 8003d68:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8003d6c:	d100      	bne.n	8003d70 <memcpy+0xc>
 8003d6e:	4770      	bx	lr
 8003d70:	b510      	push	{r4, lr}
 8003d72:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003d76:	4291      	cmp	r1, r2
 8003d78:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003d7c:	d1f9      	bne.n	8003d72 <memcpy+0xe>
 8003d7e:	bd10      	pop	{r4, pc}

08003d80 <memset>:
 8003d80:	4603      	mov	r3, r0
 8003d82:	4402      	add	r2, r0
 8003d84:	4293      	cmp	r3, r2
 8003d86:	d100      	bne.n	8003d8a <memset+0xa>
 8003d88:	4770      	bx	lr
 8003d8a:	f803 1b01 	strb.w	r1, [r3], #1
 8003d8e:	e7f9      	b.n	8003d84 <memset+0x4>

08003d90 <srand>:
 8003d90:	b538      	push	{r3, r4, r5, lr}
 8003d92:	4b10      	ldr	r3, [pc, #64]	; (8003dd4 <srand+0x44>)
 8003d94:	4604      	mov	r4, r0
 8003d96:	681d      	ldr	r5, [r3, #0]
 8003d98:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8003d9a:	b9b3      	cbnz	r3, 8003dca <srand+0x3a>
 8003d9c:	2018      	movs	r0, #24
 8003d9e:	f000 f8f9 	bl	8003f94 <malloc>
 8003da2:	4602      	mov	r2, r0
 8003da4:	63a8      	str	r0, [r5, #56]	; 0x38
 8003da6:	b920      	cbnz	r0, 8003db2 <srand+0x22>
 8003da8:	2142      	movs	r1, #66	; 0x42
 8003daa:	4b0b      	ldr	r3, [pc, #44]	; (8003dd8 <srand+0x48>)
 8003dac:	480b      	ldr	r0, [pc, #44]	; (8003ddc <srand+0x4c>)
 8003dae:	f000 f8af 	bl	8003f10 <__assert_func>
 8003db2:	490b      	ldr	r1, [pc, #44]	; (8003de0 <srand+0x50>)
 8003db4:	4b0b      	ldr	r3, [pc, #44]	; (8003de4 <srand+0x54>)
 8003db6:	e9c0 1300 	strd	r1, r3, [r0]
 8003dba:	4b0b      	ldr	r3, [pc, #44]	; (8003de8 <srand+0x58>)
 8003dbc:	2100      	movs	r1, #0
 8003dbe:	6083      	str	r3, [r0, #8]
 8003dc0:	230b      	movs	r3, #11
 8003dc2:	8183      	strh	r3, [r0, #12]
 8003dc4:	2001      	movs	r0, #1
 8003dc6:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003dca:	2200      	movs	r2, #0
 8003dcc:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8003dce:	611c      	str	r4, [r3, #16]
 8003dd0:	615a      	str	r2, [r3, #20]
 8003dd2:	bd38      	pop	{r3, r4, r5, pc}
 8003dd4:	200000dc 	.word	0x200000dc
 8003dd8:	080052e0 	.word	0x080052e0
 8003ddc:	080052f7 	.word	0x080052f7
 8003de0:	abcd330e 	.word	0xabcd330e
 8003de4:	e66d1234 	.word	0xe66d1234
 8003de8:	0005deec 	.word	0x0005deec

08003dec <rand>:
 8003dec:	4b17      	ldr	r3, [pc, #92]	; (8003e4c <rand+0x60>)
 8003dee:	b510      	push	{r4, lr}
 8003df0:	681c      	ldr	r4, [r3, #0]
 8003df2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003df4:	b9b3      	cbnz	r3, 8003e24 <rand+0x38>
 8003df6:	2018      	movs	r0, #24
 8003df8:	f000 f8cc 	bl	8003f94 <malloc>
 8003dfc:	4602      	mov	r2, r0
 8003dfe:	63a0      	str	r0, [r4, #56]	; 0x38
 8003e00:	b920      	cbnz	r0, 8003e0c <rand+0x20>
 8003e02:	214e      	movs	r1, #78	; 0x4e
 8003e04:	4b12      	ldr	r3, [pc, #72]	; (8003e50 <rand+0x64>)
 8003e06:	4813      	ldr	r0, [pc, #76]	; (8003e54 <rand+0x68>)
 8003e08:	f000 f882 	bl	8003f10 <__assert_func>
 8003e0c:	4912      	ldr	r1, [pc, #72]	; (8003e58 <rand+0x6c>)
 8003e0e:	4b13      	ldr	r3, [pc, #76]	; (8003e5c <rand+0x70>)
 8003e10:	e9c0 1300 	strd	r1, r3, [r0]
 8003e14:	4b12      	ldr	r3, [pc, #72]	; (8003e60 <rand+0x74>)
 8003e16:	2100      	movs	r1, #0
 8003e18:	6083      	str	r3, [r0, #8]
 8003e1a:	230b      	movs	r3, #11
 8003e1c:	8183      	strh	r3, [r0, #12]
 8003e1e:	2001      	movs	r0, #1
 8003e20:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003e24:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8003e26:	480f      	ldr	r0, [pc, #60]	; (8003e64 <rand+0x78>)
 8003e28:	690a      	ldr	r2, [r1, #16]
 8003e2a:	694b      	ldr	r3, [r1, #20]
 8003e2c:	4350      	muls	r0, r2
 8003e2e:	4c0e      	ldr	r4, [pc, #56]	; (8003e68 <rand+0x7c>)
 8003e30:	fb04 0003 	mla	r0, r4, r3, r0
 8003e34:	fba2 3404 	umull	r3, r4, r2, r4
 8003e38:	1c5a      	adds	r2, r3, #1
 8003e3a:	4404      	add	r4, r0
 8003e3c:	f144 0000 	adc.w	r0, r4, #0
 8003e40:	e9c1 2004 	strd	r2, r0, [r1, #16]
 8003e44:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8003e48:	bd10      	pop	{r4, pc}
 8003e4a:	bf00      	nop
 8003e4c:	200000dc 	.word	0x200000dc
 8003e50:	080052e0 	.word	0x080052e0
 8003e54:	080052f7 	.word	0x080052f7
 8003e58:	abcd330e 	.word	0xabcd330e
 8003e5c:	e66d1234 	.word	0xe66d1234
 8003e60:	0005deec 	.word	0x0005deec
 8003e64:	5851f42d 	.word	0x5851f42d
 8003e68:	4c957f2d 	.word	0x4c957f2d

08003e6c <siprintf>:
 8003e6c:	b40e      	push	{r1, r2, r3}
 8003e6e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003e72:	b500      	push	{lr}
 8003e74:	b09c      	sub	sp, #112	; 0x70
 8003e76:	ab1d      	add	r3, sp, #116	; 0x74
 8003e78:	9002      	str	r0, [sp, #8]
 8003e7a:	9006      	str	r0, [sp, #24]
 8003e7c:	9107      	str	r1, [sp, #28]
 8003e7e:	9104      	str	r1, [sp, #16]
 8003e80:	4808      	ldr	r0, [pc, #32]	; (8003ea4 <siprintf+0x38>)
 8003e82:	4909      	ldr	r1, [pc, #36]	; (8003ea8 <siprintf+0x3c>)
 8003e84:	f853 2b04 	ldr.w	r2, [r3], #4
 8003e88:	9105      	str	r1, [sp, #20]
 8003e8a:	6800      	ldr	r0, [r0, #0]
 8003e8c:	a902      	add	r1, sp, #8
 8003e8e:	9301      	str	r3, [sp, #4]
 8003e90:	f000 f98a 	bl	80041a8 <_svfiprintf_r>
 8003e94:	2200      	movs	r2, #0
 8003e96:	9b02      	ldr	r3, [sp, #8]
 8003e98:	701a      	strb	r2, [r3, #0]
 8003e9a:	b01c      	add	sp, #112	; 0x70
 8003e9c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ea0:	b003      	add	sp, #12
 8003ea2:	4770      	bx	lr
 8003ea4:	200000dc 	.word	0x200000dc
 8003ea8:	ffff0208 	.word	0xffff0208

08003eac <strcat>:
 8003eac:	4602      	mov	r2, r0
 8003eae:	b510      	push	{r4, lr}
 8003eb0:	7814      	ldrb	r4, [r2, #0]
 8003eb2:	4613      	mov	r3, r2
 8003eb4:	3201      	adds	r2, #1
 8003eb6:	2c00      	cmp	r4, #0
 8003eb8:	d1fa      	bne.n	8003eb0 <strcat+0x4>
 8003eba:	3b01      	subs	r3, #1
 8003ebc:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003ec0:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003ec4:	2a00      	cmp	r2, #0
 8003ec6:	d1f9      	bne.n	8003ebc <strcat+0x10>
 8003ec8:	bd10      	pop	{r4, pc}

08003eca <strcpy>:
 8003eca:	4603      	mov	r3, r0
 8003ecc:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003ed0:	f803 2b01 	strb.w	r2, [r3], #1
 8003ed4:	2a00      	cmp	r2, #0
 8003ed6:	d1f9      	bne.n	8003ecc <strcpy+0x2>
 8003ed8:	4770      	bx	lr
	...

08003edc <time>:
 8003edc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003ede:	4b0b      	ldr	r3, [pc, #44]	; (8003f0c <time+0x30>)
 8003ee0:	4604      	mov	r4, r0
 8003ee2:	2200      	movs	r2, #0
 8003ee4:	4669      	mov	r1, sp
 8003ee6:	6818      	ldr	r0, [r3, #0]
 8003ee8:	f000 f842 	bl	8003f70 <_gettimeofday_r>
 8003eec:	2800      	cmp	r0, #0
 8003eee:	da05      	bge.n	8003efc <time+0x20>
 8003ef0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003ef4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003ef8:	e9cd 2300 	strd	r2, r3, [sp]
 8003efc:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003f00:	b10c      	cbz	r4, 8003f06 <time+0x2a>
 8003f02:	e9c4 0100 	strd	r0, r1, [r4]
 8003f06:	b004      	add	sp, #16
 8003f08:	bd10      	pop	{r4, pc}
 8003f0a:	bf00      	nop
 8003f0c:	200000dc 	.word	0x200000dc

08003f10 <__assert_func>:
 8003f10:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003f12:	4614      	mov	r4, r2
 8003f14:	461a      	mov	r2, r3
 8003f16:	4b09      	ldr	r3, [pc, #36]	; (8003f3c <__assert_func+0x2c>)
 8003f18:	4605      	mov	r5, r0
 8003f1a:	681b      	ldr	r3, [r3, #0]
 8003f1c:	68d8      	ldr	r0, [r3, #12]
 8003f1e:	b14c      	cbz	r4, 8003f34 <__assert_func+0x24>
 8003f20:	4b07      	ldr	r3, [pc, #28]	; (8003f40 <__assert_func+0x30>)
 8003f22:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003f26:	9100      	str	r1, [sp, #0]
 8003f28:	462b      	mov	r3, r5
 8003f2a:	4906      	ldr	r1, [pc, #24]	; (8003f44 <__assert_func+0x34>)
 8003f2c:	f000 f80e 	bl	8003f4c <fiprintf>
 8003f30:	f000 fdf8 	bl	8004b24 <abort>
 8003f34:	4b04      	ldr	r3, [pc, #16]	; (8003f48 <__assert_func+0x38>)
 8003f36:	461c      	mov	r4, r3
 8003f38:	e7f3      	b.n	8003f22 <__assert_func+0x12>
 8003f3a:	bf00      	nop
 8003f3c:	200000dc 	.word	0x200000dc
 8003f40:	08005356 	.word	0x08005356
 8003f44:	08005363 	.word	0x08005363
 8003f48:	08005391 	.word	0x08005391

08003f4c <fiprintf>:
 8003f4c:	b40e      	push	{r1, r2, r3}
 8003f4e:	b503      	push	{r0, r1, lr}
 8003f50:	4601      	mov	r1, r0
 8003f52:	ab03      	add	r3, sp, #12
 8003f54:	4805      	ldr	r0, [pc, #20]	; (8003f6c <fiprintf+0x20>)
 8003f56:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f5a:	6800      	ldr	r0, [r0, #0]
 8003f5c:	9301      	str	r3, [sp, #4]
 8003f5e:	f000 fa4b 	bl	80043f8 <_vfiprintf_r>
 8003f62:	b002      	add	sp, #8
 8003f64:	f85d eb04 	ldr.w	lr, [sp], #4
 8003f68:	b003      	add	sp, #12
 8003f6a:	4770      	bx	lr
 8003f6c:	200000dc 	.word	0x200000dc

08003f70 <_gettimeofday_r>:
 8003f70:	b538      	push	{r3, r4, r5, lr}
 8003f72:	2300      	movs	r3, #0
 8003f74:	4d06      	ldr	r5, [pc, #24]	; (8003f90 <_gettimeofday_r+0x20>)
 8003f76:	4604      	mov	r4, r0
 8003f78:	4608      	mov	r0, r1
 8003f7a:	4611      	mov	r1, r2
 8003f7c:	602b      	str	r3, [r5, #0]
 8003f7e:	f001 f949 	bl	8005214 <_gettimeofday>
 8003f82:	1c43      	adds	r3, r0, #1
 8003f84:	d102      	bne.n	8003f8c <_gettimeofday_r+0x1c>
 8003f86:	682b      	ldr	r3, [r5, #0]
 8003f88:	b103      	cbz	r3, 8003f8c <_gettimeofday_r+0x1c>
 8003f8a:	6023      	str	r3, [r4, #0]
 8003f8c:	bd38      	pop	{r3, r4, r5, pc}
 8003f8e:	bf00      	nop
 8003f90:	200015fc 	.word	0x200015fc

08003f94 <malloc>:
 8003f94:	4b02      	ldr	r3, [pc, #8]	; (8003fa0 <malloc+0xc>)
 8003f96:	4601      	mov	r1, r0
 8003f98:	6818      	ldr	r0, [r3, #0]
 8003f9a:	f000 b84f 	b.w	800403c <_malloc_r>
 8003f9e:	bf00      	nop
 8003fa0:	200000dc 	.word	0x200000dc

08003fa4 <_free_r>:
 8003fa4:	b538      	push	{r3, r4, r5, lr}
 8003fa6:	4605      	mov	r5, r0
 8003fa8:	2900      	cmp	r1, #0
 8003faa:	d043      	beq.n	8004034 <_free_r+0x90>
 8003fac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003fb0:	1f0c      	subs	r4, r1, #4
 8003fb2:	2b00      	cmp	r3, #0
 8003fb4:	bfb8      	it	lt
 8003fb6:	18e4      	addlt	r4, r4, r3
 8003fb8:	f001 f802 	bl	8004fc0 <__malloc_lock>
 8003fbc:	4a1e      	ldr	r2, [pc, #120]	; (8004038 <_free_r+0x94>)
 8003fbe:	6813      	ldr	r3, [r2, #0]
 8003fc0:	4610      	mov	r0, r2
 8003fc2:	b933      	cbnz	r3, 8003fd2 <_free_r+0x2e>
 8003fc4:	6063      	str	r3, [r4, #4]
 8003fc6:	6014      	str	r4, [r2, #0]
 8003fc8:	4628      	mov	r0, r5
 8003fca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003fce:	f000 bffd 	b.w	8004fcc <__malloc_unlock>
 8003fd2:	42a3      	cmp	r3, r4
 8003fd4:	d90a      	bls.n	8003fec <_free_r+0x48>
 8003fd6:	6821      	ldr	r1, [r4, #0]
 8003fd8:	1862      	adds	r2, r4, r1
 8003fda:	4293      	cmp	r3, r2
 8003fdc:	bf01      	itttt	eq
 8003fde:	681a      	ldreq	r2, [r3, #0]
 8003fe0:	685b      	ldreq	r3, [r3, #4]
 8003fe2:	1852      	addeq	r2, r2, r1
 8003fe4:	6022      	streq	r2, [r4, #0]
 8003fe6:	6063      	str	r3, [r4, #4]
 8003fe8:	6004      	str	r4, [r0, #0]
 8003fea:	e7ed      	b.n	8003fc8 <_free_r+0x24>
 8003fec:	461a      	mov	r2, r3
 8003fee:	685b      	ldr	r3, [r3, #4]
 8003ff0:	b10b      	cbz	r3, 8003ff6 <_free_r+0x52>
 8003ff2:	42a3      	cmp	r3, r4
 8003ff4:	d9fa      	bls.n	8003fec <_free_r+0x48>
 8003ff6:	6811      	ldr	r1, [r2, #0]
 8003ff8:	1850      	adds	r0, r2, r1
 8003ffa:	42a0      	cmp	r0, r4
 8003ffc:	d10b      	bne.n	8004016 <_free_r+0x72>
 8003ffe:	6820      	ldr	r0, [r4, #0]
 8004000:	4401      	add	r1, r0
 8004002:	1850      	adds	r0, r2, r1
 8004004:	4283      	cmp	r3, r0
 8004006:	6011      	str	r1, [r2, #0]
 8004008:	d1de      	bne.n	8003fc8 <_free_r+0x24>
 800400a:	6818      	ldr	r0, [r3, #0]
 800400c:	685b      	ldr	r3, [r3, #4]
 800400e:	4401      	add	r1, r0
 8004010:	6011      	str	r1, [r2, #0]
 8004012:	6053      	str	r3, [r2, #4]
 8004014:	e7d8      	b.n	8003fc8 <_free_r+0x24>
 8004016:	d902      	bls.n	800401e <_free_r+0x7a>
 8004018:	230c      	movs	r3, #12
 800401a:	602b      	str	r3, [r5, #0]
 800401c:	e7d4      	b.n	8003fc8 <_free_r+0x24>
 800401e:	6820      	ldr	r0, [r4, #0]
 8004020:	1821      	adds	r1, r4, r0
 8004022:	428b      	cmp	r3, r1
 8004024:	bf01      	itttt	eq
 8004026:	6819      	ldreq	r1, [r3, #0]
 8004028:	685b      	ldreq	r3, [r3, #4]
 800402a:	1809      	addeq	r1, r1, r0
 800402c:	6021      	streq	r1, [r4, #0]
 800402e:	6063      	str	r3, [r4, #4]
 8004030:	6054      	str	r4, [r2, #4]
 8004032:	e7c9      	b.n	8003fc8 <_free_r+0x24>
 8004034:	bd38      	pop	{r3, r4, r5, pc}
 8004036:	bf00      	nop
 8004038:	20001104 	.word	0x20001104

0800403c <_malloc_r>:
 800403c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800403e:	1ccd      	adds	r5, r1, #3
 8004040:	f025 0503 	bic.w	r5, r5, #3
 8004044:	3508      	adds	r5, #8
 8004046:	2d0c      	cmp	r5, #12
 8004048:	bf38      	it	cc
 800404a:	250c      	movcc	r5, #12
 800404c:	2d00      	cmp	r5, #0
 800404e:	4606      	mov	r6, r0
 8004050:	db01      	blt.n	8004056 <_malloc_r+0x1a>
 8004052:	42a9      	cmp	r1, r5
 8004054:	d903      	bls.n	800405e <_malloc_r+0x22>
 8004056:	230c      	movs	r3, #12
 8004058:	6033      	str	r3, [r6, #0]
 800405a:	2000      	movs	r0, #0
 800405c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800405e:	f000 ffaf 	bl	8004fc0 <__malloc_lock>
 8004062:	4921      	ldr	r1, [pc, #132]	; (80040e8 <_malloc_r+0xac>)
 8004064:	680a      	ldr	r2, [r1, #0]
 8004066:	4614      	mov	r4, r2
 8004068:	b99c      	cbnz	r4, 8004092 <_malloc_r+0x56>
 800406a:	4f20      	ldr	r7, [pc, #128]	; (80040ec <_malloc_r+0xb0>)
 800406c:	683b      	ldr	r3, [r7, #0]
 800406e:	b923      	cbnz	r3, 800407a <_malloc_r+0x3e>
 8004070:	4621      	mov	r1, r4
 8004072:	4630      	mov	r0, r6
 8004074:	f000 fc86 	bl	8004984 <_sbrk_r>
 8004078:	6038      	str	r0, [r7, #0]
 800407a:	4629      	mov	r1, r5
 800407c:	4630      	mov	r0, r6
 800407e:	f000 fc81 	bl	8004984 <_sbrk_r>
 8004082:	1c43      	adds	r3, r0, #1
 8004084:	d123      	bne.n	80040ce <_malloc_r+0x92>
 8004086:	230c      	movs	r3, #12
 8004088:	4630      	mov	r0, r6
 800408a:	6033      	str	r3, [r6, #0]
 800408c:	f000 ff9e 	bl	8004fcc <__malloc_unlock>
 8004090:	e7e3      	b.n	800405a <_malloc_r+0x1e>
 8004092:	6823      	ldr	r3, [r4, #0]
 8004094:	1b5b      	subs	r3, r3, r5
 8004096:	d417      	bmi.n	80040c8 <_malloc_r+0x8c>
 8004098:	2b0b      	cmp	r3, #11
 800409a:	d903      	bls.n	80040a4 <_malloc_r+0x68>
 800409c:	6023      	str	r3, [r4, #0]
 800409e:	441c      	add	r4, r3
 80040a0:	6025      	str	r5, [r4, #0]
 80040a2:	e004      	b.n	80040ae <_malloc_r+0x72>
 80040a4:	6863      	ldr	r3, [r4, #4]
 80040a6:	42a2      	cmp	r2, r4
 80040a8:	bf0c      	ite	eq
 80040aa:	600b      	streq	r3, [r1, #0]
 80040ac:	6053      	strne	r3, [r2, #4]
 80040ae:	4630      	mov	r0, r6
 80040b0:	f000 ff8c 	bl	8004fcc <__malloc_unlock>
 80040b4:	f104 000b 	add.w	r0, r4, #11
 80040b8:	1d23      	adds	r3, r4, #4
 80040ba:	f020 0007 	bic.w	r0, r0, #7
 80040be:	1ac2      	subs	r2, r0, r3
 80040c0:	d0cc      	beq.n	800405c <_malloc_r+0x20>
 80040c2:	1a1b      	subs	r3, r3, r0
 80040c4:	50a3      	str	r3, [r4, r2]
 80040c6:	e7c9      	b.n	800405c <_malloc_r+0x20>
 80040c8:	4622      	mov	r2, r4
 80040ca:	6864      	ldr	r4, [r4, #4]
 80040cc:	e7cc      	b.n	8004068 <_malloc_r+0x2c>
 80040ce:	1cc4      	adds	r4, r0, #3
 80040d0:	f024 0403 	bic.w	r4, r4, #3
 80040d4:	42a0      	cmp	r0, r4
 80040d6:	d0e3      	beq.n	80040a0 <_malloc_r+0x64>
 80040d8:	1a21      	subs	r1, r4, r0
 80040da:	4630      	mov	r0, r6
 80040dc:	f000 fc52 	bl	8004984 <_sbrk_r>
 80040e0:	3001      	adds	r0, #1
 80040e2:	d1dd      	bne.n	80040a0 <_malloc_r+0x64>
 80040e4:	e7cf      	b.n	8004086 <_malloc_r+0x4a>
 80040e6:	bf00      	nop
 80040e8:	20001104 	.word	0x20001104
 80040ec:	20001108 	.word	0x20001108

080040f0 <__ssputs_r>:
 80040f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040f4:	688e      	ldr	r6, [r1, #8]
 80040f6:	4682      	mov	sl, r0
 80040f8:	429e      	cmp	r6, r3
 80040fa:	460c      	mov	r4, r1
 80040fc:	4690      	mov	r8, r2
 80040fe:	461f      	mov	r7, r3
 8004100:	d838      	bhi.n	8004174 <__ssputs_r+0x84>
 8004102:	898a      	ldrh	r2, [r1, #12]
 8004104:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004108:	d032      	beq.n	8004170 <__ssputs_r+0x80>
 800410a:	6825      	ldr	r5, [r4, #0]
 800410c:	6909      	ldr	r1, [r1, #16]
 800410e:	3301      	adds	r3, #1
 8004110:	eba5 0901 	sub.w	r9, r5, r1
 8004114:	6965      	ldr	r5, [r4, #20]
 8004116:	444b      	add	r3, r9
 8004118:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800411c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004120:	106d      	asrs	r5, r5, #1
 8004122:	429d      	cmp	r5, r3
 8004124:	bf38      	it	cc
 8004126:	461d      	movcc	r5, r3
 8004128:	0553      	lsls	r3, r2, #21
 800412a:	d531      	bpl.n	8004190 <__ssputs_r+0xa0>
 800412c:	4629      	mov	r1, r5
 800412e:	f7ff ff85 	bl	800403c <_malloc_r>
 8004132:	4606      	mov	r6, r0
 8004134:	b950      	cbnz	r0, 800414c <__ssputs_r+0x5c>
 8004136:	230c      	movs	r3, #12
 8004138:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800413c:	f8ca 3000 	str.w	r3, [sl]
 8004140:	89a3      	ldrh	r3, [r4, #12]
 8004142:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004146:	81a3      	strh	r3, [r4, #12]
 8004148:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800414c:	464a      	mov	r2, r9
 800414e:	6921      	ldr	r1, [r4, #16]
 8004150:	f7ff fe08 	bl	8003d64 <memcpy>
 8004154:	89a3      	ldrh	r3, [r4, #12]
 8004156:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800415a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800415e:	81a3      	strh	r3, [r4, #12]
 8004160:	6126      	str	r6, [r4, #16]
 8004162:	444e      	add	r6, r9
 8004164:	6026      	str	r6, [r4, #0]
 8004166:	463e      	mov	r6, r7
 8004168:	6165      	str	r5, [r4, #20]
 800416a:	eba5 0509 	sub.w	r5, r5, r9
 800416e:	60a5      	str	r5, [r4, #8]
 8004170:	42be      	cmp	r6, r7
 8004172:	d900      	bls.n	8004176 <__ssputs_r+0x86>
 8004174:	463e      	mov	r6, r7
 8004176:	4632      	mov	r2, r6
 8004178:	4641      	mov	r1, r8
 800417a:	6820      	ldr	r0, [r4, #0]
 800417c:	f000 ff06 	bl	8004f8c <memmove>
 8004180:	68a3      	ldr	r3, [r4, #8]
 8004182:	6822      	ldr	r2, [r4, #0]
 8004184:	1b9b      	subs	r3, r3, r6
 8004186:	4432      	add	r2, r6
 8004188:	2000      	movs	r0, #0
 800418a:	60a3      	str	r3, [r4, #8]
 800418c:	6022      	str	r2, [r4, #0]
 800418e:	e7db      	b.n	8004148 <__ssputs_r+0x58>
 8004190:	462a      	mov	r2, r5
 8004192:	f000 ff21 	bl	8004fd8 <_realloc_r>
 8004196:	4606      	mov	r6, r0
 8004198:	2800      	cmp	r0, #0
 800419a:	d1e1      	bne.n	8004160 <__ssputs_r+0x70>
 800419c:	4650      	mov	r0, sl
 800419e:	6921      	ldr	r1, [r4, #16]
 80041a0:	f7ff ff00 	bl	8003fa4 <_free_r>
 80041a4:	e7c7      	b.n	8004136 <__ssputs_r+0x46>
	...

080041a8 <_svfiprintf_r>:
 80041a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041ac:	4698      	mov	r8, r3
 80041ae:	898b      	ldrh	r3, [r1, #12]
 80041b0:	4607      	mov	r7, r0
 80041b2:	061b      	lsls	r3, r3, #24
 80041b4:	460d      	mov	r5, r1
 80041b6:	4614      	mov	r4, r2
 80041b8:	b09d      	sub	sp, #116	; 0x74
 80041ba:	d50e      	bpl.n	80041da <_svfiprintf_r+0x32>
 80041bc:	690b      	ldr	r3, [r1, #16]
 80041be:	b963      	cbnz	r3, 80041da <_svfiprintf_r+0x32>
 80041c0:	2140      	movs	r1, #64	; 0x40
 80041c2:	f7ff ff3b 	bl	800403c <_malloc_r>
 80041c6:	6028      	str	r0, [r5, #0]
 80041c8:	6128      	str	r0, [r5, #16]
 80041ca:	b920      	cbnz	r0, 80041d6 <_svfiprintf_r+0x2e>
 80041cc:	230c      	movs	r3, #12
 80041ce:	603b      	str	r3, [r7, #0]
 80041d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80041d4:	e0d1      	b.n	800437a <_svfiprintf_r+0x1d2>
 80041d6:	2340      	movs	r3, #64	; 0x40
 80041d8:	616b      	str	r3, [r5, #20]
 80041da:	2300      	movs	r3, #0
 80041dc:	9309      	str	r3, [sp, #36]	; 0x24
 80041de:	2320      	movs	r3, #32
 80041e0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80041e4:	2330      	movs	r3, #48	; 0x30
 80041e6:	f04f 0901 	mov.w	r9, #1
 80041ea:	f8cd 800c 	str.w	r8, [sp, #12]
 80041ee:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004394 <_svfiprintf_r+0x1ec>
 80041f2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80041f6:	4623      	mov	r3, r4
 80041f8:	469a      	mov	sl, r3
 80041fa:	f813 2b01 	ldrb.w	r2, [r3], #1
 80041fe:	b10a      	cbz	r2, 8004204 <_svfiprintf_r+0x5c>
 8004200:	2a25      	cmp	r2, #37	; 0x25
 8004202:	d1f9      	bne.n	80041f8 <_svfiprintf_r+0x50>
 8004204:	ebba 0b04 	subs.w	fp, sl, r4
 8004208:	d00b      	beq.n	8004222 <_svfiprintf_r+0x7a>
 800420a:	465b      	mov	r3, fp
 800420c:	4622      	mov	r2, r4
 800420e:	4629      	mov	r1, r5
 8004210:	4638      	mov	r0, r7
 8004212:	f7ff ff6d 	bl	80040f0 <__ssputs_r>
 8004216:	3001      	adds	r0, #1
 8004218:	f000 80aa 	beq.w	8004370 <_svfiprintf_r+0x1c8>
 800421c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800421e:	445a      	add	r2, fp
 8004220:	9209      	str	r2, [sp, #36]	; 0x24
 8004222:	f89a 3000 	ldrb.w	r3, [sl]
 8004226:	2b00      	cmp	r3, #0
 8004228:	f000 80a2 	beq.w	8004370 <_svfiprintf_r+0x1c8>
 800422c:	2300      	movs	r3, #0
 800422e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004232:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004236:	f10a 0a01 	add.w	sl, sl, #1
 800423a:	9304      	str	r3, [sp, #16]
 800423c:	9307      	str	r3, [sp, #28]
 800423e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004242:	931a      	str	r3, [sp, #104]	; 0x68
 8004244:	4654      	mov	r4, sl
 8004246:	2205      	movs	r2, #5
 8004248:	f814 1b01 	ldrb.w	r1, [r4], #1
 800424c:	4851      	ldr	r0, [pc, #324]	; (8004394 <_svfiprintf_r+0x1ec>)
 800424e:	f000 fe8f 	bl	8004f70 <memchr>
 8004252:	9a04      	ldr	r2, [sp, #16]
 8004254:	b9d8      	cbnz	r0, 800428e <_svfiprintf_r+0xe6>
 8004256:	06d0      	lsls	r0, r2, #27
 8004258:	bf44      	itt	mi
 800425a:	2320      	movmi	r3, #32
 800425c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004260:	0711      	lsls	r1, r2, #28
 8004262:	bf44      	itt	mi
 8004264:	232b      	movmi	r3, #43	; 0x2b
 8004266:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800426a:	f89a 3000 	ldrb.w	r3, [sl]
 800426e:	2b2a      	cmp	r3, #42	; 0x2a
 8004270:	d015      	beq.n	800429e <_svfiprintf_r+0xf6>
 8004272:	4654      	mov	r4, sl
 8004274:	2000      	movs	r0, #0
 8004276:	f04f 0c0a 	mov.w	ip, #10
 800427a:	9a07      	ldr	r2, [sp, #28]
 800427c:	4621      	mov	r1, r4
 800427e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004282:	3b30      	subs	r3, #48	; 0x30
 8004284:	2b09      	cmp	r3, #9
 8004286:	d94e      	bls.n	8004326 <_svfiprintf_r+0x17e>
 8004288:	b1b0      	cbz	r0, 80042b8 <_svfiprintf_r+0x110>
 800428a:	9207      	str	r2, [sp, #28]
 800428c:	e014      	b.n	80042b8 <_svfiprintf_r+0x110>
 800428e:	eba0 0308 	sub.w	r3, r0, r8
 8004292:	fa09 f303 	lsl.w	r3, r9, r3
 8004296:	4313      	orrs	r3, r2
 8004298:	46a2      	mov	sl, r4
 800429a:	9304      	str	r3, [sp, #16]
 800429c:	e7d2      	b.n	8004244 <_svfiprintf_r+0x9c>
 800429e:	9b03      	ldr	r3, [sp, #12]
 80042a0:	1d19      	adds	r1, r3, #4
 80042a2:	681b      	ldr	r3, [r3, #0]
 80042a4:	9103      	str	r1, [sp, #12]
 80042a6:	2b00      	cmp	r3, #0
 80042a8:	bfbb      	ittet	lt
 80042aa:	425b      	neglt	r3, r3
 80042ac:	f042 0202 	orrlt.w	r2, r2, #2
 80042b0:	9307      	strge	r3, [sp, #28]
 80042b2:	9307      	strlt	r3, [sp, #28]
 80042b4:	bfb8      	it	lt
 80042b6:	9204      	strlt	r2, [sp, #16]
 80042b8:	7823      	ldrb	r3, [r4, #0]
 80042ba:	2b2e      	cmp	r3, #46	; 0x2e
 80042bc:	d10c      	bne.n	80042d8 <_svfiprintf_r+0x130>
 80042be:	7863      	ldrb	r3, [r4, #1]
 80042c0:	2b2a      	cmp	r3, #42	; 0x2a
 80042c2:	d135      	bne.n	8004330 <_svfiprintf_r+0x188>
 80042c4:	9b03      	ldr	r3, [sp, #12]
 80042c6:	3402      	adds	r4, #2
 80042c8:	1d1a      	adds	r2, r3, #4
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	9203      	str	r2, [sp, #12]
 80042ce:	2b00      	cmp	r3, #0
 80042d0:	bfb8      	it	lt
 80042d2:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80042d6:	9305      	str	r3, [sp, #20]
 80042d8:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80043a4 <_svfiprintf_r+0x1fc>
 80042dc:	2203      	movs	r2, #3
 80042de:	4650      	mov	r0, sl
 80042e0:	7821      	ldrb	r1, [r4, #0]
 80042e2:	f000 fe45 	bl	8004f70 <memchr>
 80042e6:	b140      	cbz	r0, 80042fa <_svfiprintf_r+0x152>
 80042e8:	2340      	movs	r3, #64	; 0x40
 80042ea:	eba0 000a 	sub.w	r0, r0, sl
 80042ee:	fa03 f000 	lsl.w	r0, r3, r0
 80042f2:	9b04      	ldr	r3, [sp, #16]
 80042f4:	3401      	adds	r4, #1
 80042f6:	4303      	orrs	r3, r0
 80042f8:	9304      	str	r3, [sp, #16]
 80042fa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80042fe:	2206      	movs	r2, #6
 8004300:	4825      	ldr	r0, [pc, #148]	; (8004398 <_svfiprintf_r+0x1f0>)
 8004302:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004306:	f000 fe33 	bl	8004f70 <memchr>
 800430a:	2800      	cmp	r0, #0
 800430c:	d038      	beq.n	8004380 <_svfiprintf_r+0x1d8>
 800430e:	4b23      	ldr	r3, [pc, #140]	; (800439c <_svfiprintf_r+0x1f4>)
 8004310:	bb1b      	cbnz	r3, 800435a <_svfiprintf_r+0x1b2>
 8004312:	9b03      	ldr	r3, [sp, #12]
 8004314:	3307      	adds	r3, #7
 8004316:	f023 0307 	bic.w	r3, r3, #7
 800431a:	3308      	adds	r3, #8
 800431c:	9303      	str	r3, [sp, #12]
 800431e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004320:	4433      	add	r3, r6
 8004322:	9309      	str	r3, [sp, #36]	; 0x24
 8004324:	e767      	b.n	80041f6 <_svfiprintf_r+0x4e>
 8004326:	460c      	mov	r4, r1
 8004328:	2001      	movs	r0, #1
 800432a:	fb0c 3202 	mla	r2, ip, r2, r3
 800432e:	e7a5      	b.n	800427c <_svfiprintf_r+0xd4>
 8004330:	2300      	movs	r3, #0
 8004332:	f04f 0c0a 	mov.w	ip, #10
 8004336:	4619      	mov	r1, r3
 8004338:	3401      	adds	r4, #1
 800433a:	9305      	str	r3, [sp, #20]
 800433c:	4620      	mov	r0, r4
 800433e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004342:	3a30      	subs	r2, #48	; 0x30
 8004344:	2a09      	cmp	r2, #9
 8004346:	d903      	bls.n	8004350 <_svfiprintf_r+0x1a8>
 8004348:	2b00      	cmp	r3, #0
 800434a:	d0c5      	beq.n	80042d8 <_svfiprintf_r+0x130>
 800434c:	9105      	str	r1, [sp, #20]
 800434e:	e7c3      	b.n	80042d8 <_svfiprintf_r+0x130>
 8004350:	4604      	mov	r4, r0
 8004352:	2301      	movs	r3, #1
 8004354:	fb0c 2101 	mla	r1, ip, r1, r2
 8004358:	e7f0      	b.n	800433c <_svfiprintf_r+0x194>
 800435a:	ab03      	add	r3, sp, #12
 800435c:	9300      	str	r3, [sp, #0]
 800435e:	462a      	mov	r2, r5
 8004360:	4638      	mov	r0, r7
 8004362:	4b0f      	ldr	r3, [pc, #60]	; (80043a0 <_svfiprintf_r+0x1f8>)
 8004364:	a904      	add	r1, sp, #16
 8004366:	f3af 8000 	nop.w
 800436a:	1c42      	adds	r2, r0, #1
 800436c:	4606      	mov	r6, r0
 800436e:	d1d6      	bne.n	800431e <_svfiprintf_r+0x176>
 8004370:	89ab      	ldrh	r3, [r5, #12]
 8004372:	065b      	lsls	r3, r3, #25
 8004374:	f53f af2c 	bmi.w	80041d0 <_svfiprintf_r+0x28>
 8004378:	9809      	ldr	r0, [sp, #36]	; 0x24
 800437a:	b01d      	add	sp, #116	; 0x74
 800437c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004380:	ab03      	add	r3, sp, #12
 8004382:	9300      	str	r3, [sp, #0]
 8004384:	462a      	mov	r2, r5
 8004386:	4638      	mov	r0, r7
 8004388:	4b05      	ldr	r3, [pc, #20]	; (80043a0 <_svfiprintf_r+0x1f8>)
 800438a:	a904      	add	r1, sp, #16
 800438c:	f000 f9d4 	bl	8004738 <_printf_i>
 8004390:	e7eb      	b.n	800436a <_svfiprintf_r+0x1c2>
 8004392:	bf00      	nop
 8004394:	08005392 	.word	0x08005392
 8004398:	0800539c 	.word	0x0800539c
 800439c:	00000000 	.word	0x00000000
 80043a0:	080040f1 	.word	0x080040f1
 80043a4:	08005398 	.word	0x08005398

080043a8 <__sfputc_r>:
 80043a8:	6893      	ldr	r3, [r2, #8]
 80043aa:	b410      	push	{r4}
 80043ac:	3b01      	subs	r3, #1
 80043ae:	2b00      	cmp	r3, #0
 80043b0:	6093      	str	r3, [r2, #8]
 80043b2:	da07      	bge.n	80043c4 <__sfputc_r+0x1c>
 80043b4:	6994      	ldr	r4, [r2, #24]
 80043b6:	42a3      	cmp	r3, r4
 80043b8:	db01      	blt.n	80043be <__sfputc_r+0x16>
 80043ba:	290a      	cmp	r1, #10
 80043bc:	d102      	bne.n	80043c4 <__sfputc_r+0x1c>
 80043be:	bc10      	pop	{r4}
 80043c0:	f000 baf0 	b.w	80049a4 <__swbuf_r>
 80043c4:	6813      	ldr	r3, [r2, #0]
 80043c6:	1c58      	adds	r0, r3, #1
 80043c8:	6010      	str	r0, [r2, #0]
 80043ca:	7019      	strb	r1, [r3, #0]
 80043cc:	4608      	mov	r0, r1
 80043ce:	bc10      	pop	{r4}
 80043d0:	4770      	bx	lr

080043d2 <__sfputs_r>:
 80043d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043d4:	4606      	mov	r6, r0
 80043d6:	460f      	mov	r7, r1
 80043d8:	4614      	mov	r4, r2
 80043da:	18d5      	adds	r5, r2, r3
 80043dc:	42ac      	cmp	r4, r5
 80043de:	d101      	bne.n	80043e4 <__sfputs_r+0x12>
 80043e0:	2000      	movs	r0, #0
 80043e2:	e007      	b.n	80043f4 <__sfputs_r+0x22>
 80043e4:	463a      	mov	r2, r7
 80043e6:	4630      	mov	r0, r6
 80043e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80043ec:	f7ff ffdc 	bl	80043a8 <__sfputc_r>
 80043f0:	1c43      	adds	r3, r0, #1
 80043f2:	d1f3      	bne.n	80043dc <__sfputs_r+0xa>
 80043f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080043f8 <_vfiprintf_r>:
 80043f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043fc:	460d      	mov	r5, r1
 80043fe:	4614      	mov	r4, r2
 8004400:	4698      	mov	r8, r3
 8004402:	4606      	mov	r6, r0
 8004404:	b09d      	sub	sp, #116	; 0x74
 8004406:	b118      	cbz	r0, 8004410 <_vfiprintf_r+0x18>
 8004408:	6983      	ldr	r3, [r0, #24]
 800440a:	b90b      	cbnz	r3, 8004410 <_vfiprintf_r+0x18>
 800440c:	f000 fcac 	bl	8004d68 <__sinit>
 8004410:	4b89      	ldr	r3, [pc, #548]	; (8004638 <_vfiprintf_r+0x240>)
 8004412:	429d      	cmp	r5, r3
 8004414:	d11b      	bne.n	800444e <_vfiprintf_r+0x56>
 8004416:	6875      	ldr	r5, [r6, #4]
 8004418:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800441a:	07d9      	lsls	r1, r3, #31
 800441c:	d405      	bmi.n	800442a <_vfiprintf_r+0x32>
 800441e:	89ab      	ldrh	r3, [r5, #12]
 8004420:	059a      	lsls	r2, r3, #22
 8004422:	d402      	bmi.n	800442a <_vfiprintf_r+0x32>
 8004424:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004426:	f000 fd3d 	bl	8004ea4 <__retarget_lock_acquire_recursive>
 800442a:	89ab      	ldrh	r3, [r5, #12]
 800442c:	071b      	lsls	r3, r3, #28
 800442e:	d501      	bpl.n	8004434 <_vfiprintf_r+0x3c>
 8004430:	692b      	ldr	r3, [r5, #16]
 8004432:	b9eb      	cbnz	r3, 8004470 <_vfiprintf_r+0x78>
 8004434:	4629      	mov	r1, r5
 8004436:	4630      	mov	r0, r6
 8004438:	f000 fb06 	bl	8004a48 <__swsetup_r>
 800443c:	b1c0      	cbz	r0, 8004470 <_vfiprintf_r+0x78>
 800443e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004440:	07dc      	lsls	r4, r3, #31
 8004442:	d50e      	bpl.n	8004462 <_vfiprintf_r+0x6a>
 8004444:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004448:	b01d      	add	sp, #116	; 0x74
 800444a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800444e:	4b7b      	ldr	r3, [pc, #492]	; (800463c <_vfiprintf_r+0x244>)
 8004450:	429d      	cmp	r5, r3
 8004452:	d101      	bne.n	8004458 <_vfiprintf_r+0x60>
 8004454:	68b5      	ldr	r5, [r6, #8]
 8004456:	e7df      	b.n	8004418 <_vfiprintf_r+0x20>
 8004458:	4b79      	ldr	r3, [pc, #484]	; (8004640 <_vfiprintf_r+0x248>)
 800445a:	429d      	cmp	r5, r3
 800445c:	bf08      	it	eq
 800445e:	68f5      	ldreq	r5, [r6, #12]
 8004460:	e7da      	b.n	8004418 <_vfiprintf_r+0x20>
 8004462:	89ab      	ldrh	r3, [r5, #12]
 8004464:	0598      	lsls	r0, r3, #22
 8004466:	d4ed      	bmi.n	8004444 <_vfiprintf_r+0x4c>
 8004468:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800446a:	f000 fd1c 	bl	8004ea6 <__retarget_lock_release_recursive>
 800446e:	e7e9      	b.n	8004444 <_vfiprintf_r+0x4c>
 8004470:	2300      	movs	r3, #0
 8004472:	9309      	str	r3, [sp, #36]	; 0x24
 8004474:	2320      	movs	r3, #32
 8004476:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800447a:	2330      	movs	r3, #48	; 0x30
 800447c:	f04f 0901 	mov.w	r9, #1
 8004480:	f8cd 800c 	str.w	r8, [sp, #12]
 8004484:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8004644 <_vfiprintf_r+0x24c>
 8004488:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800448c:	4623      	mov	r3, r4
 800448e:	469a      	mov	sl, r3
 8004490:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004494:	b10a      	cbz	r2, 800449a <_vfiprintf_r+0xa2>
 8004496:	2a25      	cmp	r2, #37	; 0x25
 8004498:	d1f9      	bne.n	800448e <_vfiprintf_r+0x96>
 800449a:	ebba 0b04 	subs.w	fp, sl, r4
 800449e:	d00b      	beq.n	80044b8 <_vfiprintf_r+0xc0>
 80044a0:	465b      	mov	r3, fp
 80044a2:	4622      	mov	r2, r4
 80044a4:	4629      	mov	r1, r5
 80044a6:	4630      	mov	r0, r6
 80044a8:	f7ff ff93 	bl	80043d2 <__sfputs_r>
 80044ac:	3001      	adds	r0, #1
 80044ae:	f000 80aa 	beq.w	8004606 <_vfiprintf_r+0x20e>
 80044b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80044b4:	445a      	add	r2, fp
 80044b6:	9209      	str	r2, [sp, #36]	; 0x24
 80044b8:	f89a 3000 	ldrb.w	r3, [sl]
 80044bc:	2b00      	cmp	r3, #0
 80044be:	f000 80a2 	beq.w	8004606 <_vfiprintf_r+0x20e>
 80044c2:	2300      	movs	r3, #0
 80044c4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80044c8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80044cc:	f10a 0a01 	add.w	sl, sl, #1
 80044d0:	9304      	str	r3, [sp, #16]
 80044d2:	9307      	str	r3, [sp, #28]
 80044d4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80044d8:	931a      	str	r3, [sp, #104]	; 0x68
 80044da:	4654      	mov	r4, sl
 80044dc:	2205      	movs	r2, #5
 80044de:	f814 1b01 	ldrb.w	r1, [r4], #1
 80044e2:	4858      	ldr	r0, [pc, #352]	; (8004644 <_vfiprintf_r+0x24c>)
 80044e4:	f000 fd44 	bl	8004f70 <memchr>
 80044e8:	9a04      	ldr	r2, [sp, #16]
 80044ea:	b9d8      	cbnz	r0, 8004524 <_vfiprintf_r+0x12c>
 80044ec:	06d1      	lsls	r1, r2, #27
 80044ee:	bf44      	itt	mi
 80044f0:	2320      	movmi	r3, #32
 80044f2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80044f6:	0713      	lsls	r3, r2, #28
 80044f8:	bf44      	itt	mi
 80044fa:	232b      	movmi	r3, #43	; 0x2b
 80044fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004500:	f89a 3000 	ldrb.w	r3, [sl]
 8004504:	2b2a      	cmp	r3, #42	; 0x2a
 8004506:	d015      	beq.n	8004534 <_vfiprintf_r+0x13c>
 8004508:	4654      	mov	r4, sl
 800450a:	2000      	movs	r0, #0
 800450c:	f04f 0c0a 	mov.w	ip, #10
 8004510:	9a07      	ldr	r2, [sp, #28]
 8004512:	4621      	mov	r1, r4
 8004514:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004518:	3b30      	subs	r3, #48	; 0x30
 800451a:	2b09      	cmp	r3, #9
 800451c:	d94e      	bls.n	80045bc <_vfiprintf_r+0x1c4>
 800451e:	b1b0      	cbz	r0, 800454e <_vfiprintf_r+0x156>
 8004520:	9207      	str	r2, [sp, #28]
 8004522:	e014      	b.n	800454e <_vfiprintf_r+0x156>
 8004524:	eba0 0308 	sub.w	r3, r0, r8
 8004528:	fa09 f303 	lsl.w	r3, r9, r3
 800452c:	4313      	orrs	r3, r2
 800452e:	46a2      	mov	sl, r4
 8004530:	9304      	str	r3, [sp, #16]
 8004532:	e7d2      	b.n	80044da <_vfiprintf_r+0xe2>
 8004534:	9b03      	ldr	r3, [sp, #12]
 8004536:	1d19      	adds	r1, r3, #4
 8004538:	681b      	ldr	r3, [r3, #0]
 800453a:	9103      	str	r1, [sp, #12]
 800453c:	2b00      	cmp	r3, #0
 800453e:	bfbb      	ittet	lt
 8004540:	425b      	neglt	r3, r3
 8004542:	f042 0202 	orrlt.w	r2, r2, #2
 8004546:	9307      	strge	r3, [sp, #28]
 8004548:	9307      	strlt	r3, [sp, #28]
 800454a:	bfb8      	it	lt
 800454c:	9204      	strlt	r2, [sp, #16]
 800454e:	7823      	ldrb	r3, [r4, #0]
 8004550:	2b2e      	cmp	r3, #46	; 0x2e
 8004552:	d10c      	bne.n	800456e <_vfiprintf_r+0x176>
 8004554:	7863      	ldrb	r3, [r4, #1]
 8004556:	2b2a      	cmp	r3, #42	; 0x2a
 8004558:	d135      	bne.n	80045c6 <_vfiprintf_r+0x1ce>
 800455a:	9b03      	ldr	r3, [sp, #12]
 800455c:	3402      	adds	r4, #2
 800455e:	1d1a      	adds	r2, r3, #4
 8004560:	681b      	ldr	r3, [r3, #0]
 8004562:	9203      	str	r2, [sp, #12]
 8004564:	2b00      	cmp	r3, #0
 8004566:	bfb8      	it	lt
 8004568:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800456c:	9305      	str	r3, [sp, #20]
 800456e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8004654 <_vfiprintf_r+0x25c>
 8004572:	2203      	movs	r2, #3
 8004574:	4650      	mov	r0, sl
 8004576:	7821      	ldrb	r1, [r4, #0]
 8004578:	f000 fcfa 	bl	8004f70 <memchr>
 800457c:	b140      	cbz	r0, 8004590 <_vfiprintf_r+0x198>
 800457e:	2340      	movs	r3, #64	; 0x40
 8004580:	eba0 000a 	sub.w	r0, r0, sl
 8004584:	fa03 f000 	lsl.w	r0, r3, r0
 8004588:	9b04      	ldr	r3, [sp, #16]
 800458a:	3401      	adds	r4, #1
 800458c:	4303      	orrs	r3, r0
 800458e:	9304      	str	r3, [sp, #16]
 8004590:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004594:	2206      	movs	r2, #6
 8004596:	482c      	ldr	r0, [pc, #176]	; (8004648 <_vfiprintf_r+0x250>)
 8004598:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800459c:	f000 fce8 	bl	8004f70 <memchr>
 80045a0:	2800      	cmp	r0, #0
 80045a2:	d03f      	beq.n	8004624 <_vfiprintf_r+0x22c>
 80045a4:	4b29      	ldr	r3, [pc, #164]	; (800464c <_vfiprintf_r+0x254>)
 80045a6:	bb1b      	cbnz	r3, 80045f0 <_vfiprintf_r+0x1f8>
 80045a8:	9b03      	ldr	r3, [sp, #12]
 80045aa:	3307      	adds	r3, #7
 80045ac:	f023 0307 	bic.w	r3, r3, #7
 80045b0:	3308      	adds	r3, #8
 80045b2:	9303      	str	r3, [sp, #12]
 80045b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80045b6:	443b      	add	r3, r7
 80045b8:	9309      	str	r3, [sp, #36]	; 0x24
 80045ba:	e767      	b.n	800448c <_vfiprintf_r+0x94>
 80045bc:	460c      	mov	r4, r1
 80045be:	2001      	movs	r0, #1
 80045c0:	fb0c 3202 	mla	r2, ip, r2, r3
 80045c4:	e7a5      	b.n	8004512 <_vfiprintf_r+0x11a>
 80045c6:	2300      	movs	r3, #0
 80045c8:	f04f 0c0a 	mov.w	ip, #10
 80045cc:	4619      	mov	r1, r3
 80045ce:	3401      	adds	r4, #1
 80045d0:	9305      	str	r3, [sp, #20]
 80045d2:	4620      	mov	r0, r4
 80045d4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80045d8:	3a30      	subs	r2, #48	; 0x30
 80045da:	2a09      	cmp	r2, #9
 80045dc:	d903      	bls.n	80045e6 <_vfiprintf_r+0x1ee>
 80045de:	2b00      	cmp	r3, #0
 80045e0:	d0c5      	beq.n	800456e <_vfiprintf_r+0x176>
 80045e2:	9105      	str	r1, [sp, #20]
 80045e4:	e7c3      	b.n	800456e <_vfiprintf_r+0x176>
 80045e6:	4604      	mov	r4, r0
 80045e8:	2301      	movs	r3, #1
 80045ea:	fb0c 2101 	mla	r1, ip, r1, r2
 80045ee:	e7f0      	b.n	80045d2 <_vfiprintf_r+0x1da>
 80045f0:	ab03      	add	r3, sp, #12
 80045f2:	9300      	str	r3, [sp, #0]
 80045f4:	462a      	mov	r2, r5
 80045f6:	4630      	mov	r0, r6
 80045f8:	4b15      	ldr	r3, [pc, #84]	; (8004650 <_vfiprintf_r+0x258>)
 80045fa:	a904      	add	r1, sp, #16
 80045fc:	f3af 8000 	nop.w
 8004600:	4607      	mov	r7, r0
 8004602:	1c78      	adds	r0, r7, #1
 8004604:	d1d6      	bne.n	80045b4 <_vfiprintf_r+0x1bc>
 8004606:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004608:	07d9      	lsls	r1, r3, #31
 800460a:	d405      	bmi.n	8004618 <_vfiprintf_r+0x220>
 800460c:	89ab      	ldrh	r3, [r5, #12]
 800460e:	059a      	lsls	r2, r3, #22
 8004610:	d402      	bmi.n	8004618 <_vfiprintf_r+0x220>
 8004612:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004614:	f000 fc47 	bl	8004ea6 <__retarget_lock_release_recursive>
 8004618:	89ab      	ldrh	r3, [r5, #12]
 800461a:	065b      	lsls	r3, r3, #25
 800461c:	f53f af12 	bmi.w	8004444 <_vfiprintf_r+0x4c>
 8004620:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004622:	e711      	b.n	8004448 <_vfiprintf_r+0x50>
 8004624:	ab03      	add	r3, sp, #12
 8004626:	9300      	str	r3, [sp, #0]
 8004628:	462a      	mov	r2, r5
 800462a:	4630      	mov	r0, r6
 800462c:	4b08      	ldr	r3, [pc, #32]	; (8004650 <_vfiprintf_r+0x258>)
 800462e:	a904      	add	r1, sp, #16
 8004630:	f000 f882 	bl	8004738 <_printf_i>
 8004634:	e7e4      	b.n	8004600 <_vfiprintf_r+0x208>
 8004636:	bf00      	nop
 8004638:	080053e8 	.word	0x080053e8
 800463c:	08005408 	.word	0x08005408
 8004640:	080053c8 	.word	0x080053c8
 8004644:	08005392 	.word	0x08005392
 8004648:	0800539c 	.word	0x0800539c
 800464c:	00000000 	.word	0x00000000
 8004650:	080043d3 	.word	0x080043d3
 8004654:	08005398 	.word	0x08005398

08004658 <_printf_common>:
 8004658:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800465c:	4616      	mov	r6, r2
 800465e:	4699      	mov	r9, r3
 8004660:	688a      	ldr	r2, [r1, #8]
 8004662:	690b      	ldr	r3, [r1, #16]
 8004664:	4607      	mov	r7, r0
 8004666:	4293      	cmp	r3, r2
 8004668:	bfb8      	it	lt
 800466a:	4613      	movlt	r3, r2
 800466c:	6033      	str	r3, [r6, #0]
 800466e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004672:	460c      	mov	r4, r1
 8004674:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004678:	b10a      	cbz	r2, 800467e <_printf_common+0x26>
 800467a:	3301      	adds	r3, #1
 800467c:	6033      	str	r3, [r6, #0]
 800467e:	6823      	ldr	r3, [r4, #0]
 8004680:	0699      	lsls	r1, r3, #26
 8004682:	bf42      	ittt	mi
 8004684:	6833      	ldrmi	r3, [r6, #0]
 8004686:	3302      	addmi	r3, #2
 8004688:	6033      	strmi	r3, [r6, #0]
 800468a:	6825      	ldr	r5, [r4, #0]
 800468c:	f015 0506 	ands.w	r5, r5, #6
 8004690:	d106      	bne.n	80046a0 <_printf_common+0x48>
 8004692:	f104 0a19 	add.w	sl, r4, #25
 8004696:	68e3      	ldr	r3, [r4, #12]
 8004698:	6832      	ldr	r2, [r6, #0]
 800469a:	1a9b      	subs	r3, r3, r2
 800469c:	42ab      	cmp	r3, r5
 800469e:	dc28      	bgt.n	80046f2 <_printf_common+0x9a>
 80046a0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80046a4:	1e13      	subs	r3, r2, #0
 80046a6:	6822      	ldr	r2, [r4, #0]
 80046a8:	bf18      	it	ne
 80046aa:	2301      	movne	r3, #1
 80046ac:	0692      	lsls	r2, r2, #26
 80046ae:	d42d      	bmi.n	800470c <_printf_common+0xb4>
 80046b0:	4649      	mov	r1, r9
 80046b2:	4638      	mov	r0, r7
 80046b4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80046b8:	47c0      	blx	r8
 80046ba:	3001      	adds	r0, #1
 80046bc:	d020      	beq.n	8004700 <_printf_common+0xa8>
 80046be:	6823      	ldr	r3, [r4, #0]
 80046c0:	68e5      	ldr	r5, [r4, #12]
 80046c2:	f003 0306 	and.w	r3, r3, #6
 80046c6:	2b04      	cmp	r3, #4
 80046c8:	bf18      	it	ne
 80046ca:	2500      	movne	r5, #0
 80046cc:	6832      	ldr	r2, [r6, #0]
 80046ce:	f04f 0600 	mov.w	r6, #0
 80046d2:	68a3      	ldr	r3, [r4, #8]
 80046d4:	bf08      	it	eq
 80046d6:	1aad      	subeq	r5, r5, r2
 80046d8:	6922      	ldr	r2, [r4, #16]
 80046da:	bf08      	it	eq
 80046dc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80046e0:	4293      	cmp	r3, r2
 80046e2:	bfc4      	itt	gt
 80046e4:	1a9b      	subgt	r3, r3, r2
 80046e6:	18ed      	addgt	r5, r5, r3
 80046e8:	341a      	adds	r4, #26
 80046ea:	42b5      	cmp	r5, r6
 80046ec:	d11a      	bne.n	8004724 <_printf_common+0xcc>
 80046ee:	2000      	movs	r0, #0
 80046f0:	e008      	b.n	8004704 <_printf_common+0xac>
 80046f2:	2301      	movs	r3, #1
 80046f4:	4652      	mov	r2, sl
 80046f6:	4649      	mov	r1, r9
 80046f8:	4638      	mov	r0, r7
 80046fa:	47c0      	blx	r8
 80046fc:	3001      	adds	r0, #1
 80046fe:	d103      	bne.n	8004708 <_printf_common+0xb0>
 8004700:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004704:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004708:	3501      	adds	r5, #1
 800470a:	e7c4      	b.n	8004696 <_printf_common+0x3e>
 800470c:	2030      	movs	r0, #48	; 0x30
 800470e:	18e1      	adds	r1, r4, r3
 8004710:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004714:	1c5a      	adds	r2, r3, #1
 8004716:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800471a:	4422      	add	r2, r4
 800471c:	3302      	adds	r3, #2
 800471e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004722:	e7c5      	b.n	80046b0 <_printf_common+0x58>
 8004724:	2301      	movs	r3, #1
 8004726:	4622      	mov	r2, r4
 8004728:	4649      	mov	r1, r9
 800472a:	4638      	mov	r0, r7
 800472c:	47c0      	blx	r8
 800472e:	3001      	adds	r0, #1
 8004730:	d0e6      	beq.n	8004700 <_printf_common+0xa8>
 8004732:	3601      	adds	r6, #1
 8004734:	e7d9      	b.n	80046ea <_printf_common+0x92>
	...

08004738 <_printf_i>:
 8004738:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800473c:	460c      	mov	r4, r1
 800473e:	7e27      	ldrb	r7, [r4, #24]
 8004740:	4691      	mov	r9, r2
 8004742:	2f78      	cmp	r7, #120	; 0x78
 8004744:	4680      	mov	r8, r0
 8004746:	469a      	mov	sl, r3
 8004748:	990c      	ldr	r1, [sp, #48]	; 0x30
 800474a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800474e:	d807      	bhi.n	8004760 <_printf_i+0x28>
 8004750:	2f62      	cmp	r7, #98	; 0x62
 8004752:	d80a      	bhi.n	800476a <_printf_i+0x32>
 8004754:	2f00      	cmp	r7, #0
 8004756:	f000 80d9 	beq.w	800490c <_printf_i+0x1d4>
 800475a:	2f58      	cmp	r7, #88	; 0x58
 800475c:	f000 80a4 	beq.w	80048a8 <_printf_i+0x170>
 8004760:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004764:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004768:	e03a      	b.n	80047e0 <_printf_i+0xa8>
 800476a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800476e:	2b15      	cmp	r3, #21
 8004770:	d8f6      	bhi.n	8004760 <_printf_i+0x28>
 8004772:	a001      	add	r0, pc, #4	; (adr r0, 8004778 <_printf_i+0x40>)
 8004774:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8004778:	080047d1 	.word	0x080047d1
 800477c:	080047e5 	.word	0x080047e5
 8004780:	08004761 	.word	0x08004761
 8004784:	08004761 	.word	0x08004761
 8004788:	08004761 	.word	0x08004761
 800478c:	08004761 	.word	0x08004761
 8004790:	080047e5 	.word	0x080047e5
 8004794:	08004761 	.word	0x08004761
 8004798:	08004761 	.word	0x08004761
 800479c:	08004761 	.word	0x08004761
 80047a0:	08004761 	.word	0x08004761
 80047a4:	080048f3 	.word	0x080048f3
 80047a8:	08004815 	.word	0x08004815
 80047ac:	080048d5 	.word	0x080048d5
 80047b0:	08004761 	.word	0x08004761
 80047b4:	08004761 	.word	0x08004761
 80047b8:	08004915 	.word	0x08004915
 80047bc:	08004761 	.word	0x08004761
 80047c0:	08004815 	.word	0x08004815
 80047c4:	08004761 	.word	0x08004761
 80047c8:	08004761 	.word	0x08004761
 80047cc:	080048dd 	.word	0x080048dd
 80047d0:	680b      	ldr	r3, [r1, #0]
 80047d2:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80047d6:	1d1a      	adds	r2, r3, #4
 80047d8:	681b      	ldr	r3, [r3, #0]
 80047da:	600a      	str	r2, [r1, #0]
 80047dc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80047e0:	2301      	movs	r3, #1
 80047e2:	e0a4      	b.n	800492e <_printf_i+0x1f6>
 80047e4:	6825      	ldr	r5, [r4, #0]
 80047e6:	6808      	ldr	r0, [r1, #0]
 80047e8:	062e      	lsls	r6, r5, #24
 80047ea:	f100 0304 	add.w	r3, r0, #4
 80047ee:	d50a      	bpl.n	8004806 <_printf_i+0xce>
 80047f0:	6805      	ldr	r5, [r0, #0]
 80047f2:	600b      	str	r3, [r1, #0]
 80047f4:	2d00      	cmp	r5, #0
 80047f6:	da03      	bge.n	8004800 <_printf_i+0xc8>
 80047f8:	232d      	movs	r3, #45	; 0x2d
 80047fa:	426d      	negs	r5, r5
 80047fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004800:	230a      	movs	r3, #10
 8004802:	485e      	ldr	r0, [pc, #376]	; (800497c <_printf_i+0x244>)
 8004804:	e019      	b.n	800483a <_printf_i+0x102>
 8004806:	f015 0f40 	tst.w	r5, #64	; 0x40
 800480a:	6805      	ldr	r5, [r0, #0]
 800480c:	600b      	str	r3, [r1, #0]
 800480e:	bf18      	it	ne
 8004810:	b22d      	sxthne	r5, r5
 8004812:	e7ef      	b.n	80047f4 <_printf_i+0xbc>
 8004814:	680b      	ldr	r3, [r1, #0]
 8004816:	6825      	ldr	r5, [r4, #0]
 8004818:	1d18      	adds	r0, r3, #4
 800481a:	6008      	str	r0, [r1, #0]
 800481c:	0628      	lsls	r0, r5, #24
 800481e:	d501      	bpl.n	8004824 <_printf_i+0xec>
 8004820:	681d      	ldr	r5, [r3, #0]
 8004822:	e002      	b.n	800482a <_printf_i+0xf2>
 8004824:	0669      	lsls	r1, r5, #25
 8004826:	d5fb      	bpl.n	8004820 <_printf_i+0xe8>
 8004828:	881d      	ldrh	r5, [r3, #0]
 800482a:	2f6f      	cmp	r7, #111	; 0x6f
 800482c:	bf0c      	ite	eq
 800482e:	2308      	moveq	r3, #8
 8004830:	230a      	movne	r3, #10
 8004832:	4852      	ldr	r0, [pc, #328]	; (800497c <_printf_i+0x244>)
 8004834:	2100      	movs	r1, #0
 8004836:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800483a:	6866      	ldr	r6, [r4, #4]
 800483c:	2e00      	cmp	r6, #0
 800483e:	bfa8      	it	ge
 8004840:	6821      	ldrge	r1, [r4, #0]
 8004842:	60a6      	str	r6, [r4, #8]
 8004844:	bfa4      	itt	ge
 8004846:	f021 0104 	bicge.w	r1, r1, #4
 800484a:	6021      	strge	r1, [r4, #0]
 800484c:	b90d      	cbnz	r5, 8004852 <_printf_i+0x11a>
 800484e:	2e00      	cmp	r6, #0
 8004850:	d04d      	beq.n	80048ee <_printf_i+0x1b6>
 8004852:	4616      	mov	r6, r2
 8004854:	fbb5 f1f3 	udiv	r1, r5, r3
 8004858:	fb03 5711 	mls	r7, r3, r1, r5
 800485c:	5dc7      	ldrb	r7, [r0, r7]
 800485e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004862:	462f      	mov	r7, r5
 8004864:	42bb      	cmp	r3, r7
 8004866:	460d      	mov	r5, r1
 8004868:	d9f4      	bls.n	8004854 <_printf_i+0x11c>
 800486a:	2b08      	cmp	r3, #8
 800486c:	d10b      	bne.n	8004886 <_printf_i+0x14e>
 800486e:	6823      	ldr	r3, [r4, #0]
 8004870:	07df      	lsls	r7, r3, #31
 8004872:	d508      	bpl.n	8004886 <_printf_i+0x14e>
 8004874:	6923      	ldr	r3, [r4, #16]
 8004876:	6861      	ldr	r1, [r4, #4]
 8004878:	4299      	cmp	r1, r3
 800487a:	bfde      	ittt	le
 800487c:	2330      	movle	r3, #48	; 0x30
 800487e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004882:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8004886:	1b92      	subs	r2, r2, r6
 8004888:	6122      	str	r2, [r4, #16]
 800488a:	464b      	mov	r3, r9
 800488c:	4621      	mov	r1, r4
 800488e:	4640      	mov	r0, r8
 8004890:	f8cd a000 	str.w	sl, [sp]
 8004894:	aa03      	add	r2, sp, #12
 8004896:	f7ff fedf 	bl	8004658 <_printf_common>
 800489a:	3001      	adds	r0, #1
 800489c:	d14c      	bne.n	8004938 <_printf_i+0x200>
 800489e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80048a2:	b004      	add	sp, #16
 80048a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80048a8:	4834      	ldr	r0, [pc, #208]	; (800497c <_printf_i+0x244>)
 80048aa:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80048ae:	680e      	ldr	r6, [r1, #0]
 80048b0:	6823      	ldr	r3, [r4, #0]
 80048b2:	f856 5b04 	ldr.w	r5, [r6], #4
 80048b6:	061f      	lsls	r7, r3, #24
 80048b8:	600e      	str	r6, [r1, #0]
 80048ba:	d514      	bpl.n	80048e6 <_printf_i+0x1ae>
 80048bc:	07d9      	lsls	r1, r3, #31
 80048be:	bf44      	itt	mi
 80048c0:	f043 0320 	orrmi.w	r3, r3, #32
 80048c4:	6023      	strmi	r3, [r4, #0]
 80048c6:	b91d      	cbnz	r5, 80048d0 <_printf_i+0x198>
 80048c8:	6823      	ldr	r3, [r4, #0]
 80048ca:	f023 0320 	bic.w	r3, r3, #32
 80048ce:	6023      	str	r3, [r4, #0]
 80048d0:	2310      	movs	r3, #16
 80048d2:	e7af      	b.n	8004834 <_printf_i+0xfc>
 80048d4:	6823      	ldr	r3, [r4, #0]
 80048d6:	f043 0320 	orr.w	r3, r3, #32
 80048da:	6023      	str	r3, [r4, #0]
 80048dc:	2378      	movs	r3, #120	; 0x78
 80048de:	4828      	ldr	r0, [pc, #160]	; (8004980 <_printf_i+0x248>)
 80048e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80048e4:	e7e3      	b.n	80048ae <_printf_i+0x176>
 80048e6:	065e      	lsls	r6, r3, #25
 80048e8:	bf48      	it	mi
 80048ea:	b2ad      	uxthmi	r5, r5
 80048ec:	e7e6      	b.n	80048bc <_printf_i+0x184>
 80048ee:	4616      	mov	r6, r2
 80048f0:	e7bb      	b.n	800486a <_printf_i+0x132>
 80048f2:	680b      	ldr	r3, [r1, #0]
 80048f4:	6826      	ldr	r6, [r4, #0]
 80048f6:	1d1d      	adds	r5, r3, #4
 80048f8:	6960      	ldr	r0, [r4, #20]
 80048fa:	600d      	str	r5, [r1, #0]
 80048fc:	0635      	lsls	r5, r6, #24
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	d501      	bpl.n	8004906 <_printf_i+0x1ce>
 8004902:	6018      	str	r0, [r3, #0]
 8004904:	e002      	b.n	800490c <_printf_i+0x1d4>
 8004906:	0671      	lsls	r1, r6, #25
 8004908:	d5fb      	bpl.n	8004902 <_printf_i+0x1ca>
 800490a:	8018      	strh	r0, [r3, #0]
 800490c:	2300      	movs	r3, #0
 800490e:	4616      	mov	r6, r2
 8004910:	6123      	str	r3, [r4, #16]
 8004912:	e7ba      	b.n	800488a <_printf_i+0x152>
 8004914:	680b      	ldr	r3, [r1, #0]
 8004916:	1d1a      	adds	r2, r3, #4
 8004918:	600a      	str	r2, [r1, #0]
 800491a:	681e      	ldr	r6, [r3, #0]
 800491c:	2100      	movs	r1, #0
 800491e:	4630      	mov	r0, r6
 8004920:	6862      	ldr	r2, [r4, #4]
 8004922:	f000 fb25 	bl	8004f70 <memchr>
 8004926:	b108      	cbz	r0, 800492c <_printf_i+0x1f4>
 8004928:	1b80      	subs	r0, r0, r6
 800492a:	6060      	str	r0, [r4, #4]
 800492c:	6863      	ldr	r3, [r4, #4]
 800492e:	6123      	str	r3, [r4, #16]
 8004930:	2300      	movs	r3, #0
 8004932:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004936:	e7a8      	b.n	800488a <_printf_i+0x152>
 8004938:	4632      	mov	r2, r6
 800493a:	4649      	mov	r1, r9
 800493c:	4640      	mov	r0, r8
 800493e:	6923      	ldr	r3, [r4, #16]
 8004940:	47d0      	blx	sl
 8004942:	3001      	adds	r0, #1
 8004944:	d0ab      	beq.n	800489e <_printf_i+0x166>
 8004946:	6823      	ldr	r3, [r4, #0]
 8004948:	079b      	lsls	r3, r3, #30
 800494a:	d413      	bmi.n	8004974 <_printf_i+0x23c>
 800494c:	68e0      	ldr	r0, [r4, #12]
 800494e:	9b03      	ldr	r3, [sp, #12]
 8004950:	4298      	cmp	r0, r3
 8004952:	bfb8      	it	lt
 8004954:	4618      	movlt	r0, r3
 8004956:	e7a4      	b.n	80048a2 <_printf_i+0x16a>
 8004958:	2301      	movs	r3, #1
 800495a:	4632      	mov	r2, r6
 800495c:	4649      	mov	r1, r9
 800495e:	4640      	mov	r0, r8
 8004960:	47d0      	blx	sl
 8004962:	3001      	adds	r0, #1
 8004964:	d09b      	beq.n	800489e <_printf_i+0x166>
 8004966:	3501      	adds	r5, #1
 8004968:	68e3      	ldr	r3, [r4, #12]
 800496a:	9903      	ldr	r1, [sp, #12]
 800496c:	1a5b      	subs	r3, r3, r1
 800496e:	42ab      	cmp	r3, r5
 8004970:	dcf2      	bgt.n	8004958 <_printf_i+0x220>
 8004972:	e7eb      	b.n	800494c <_printf_i+0x214>
 8004974:	2500      	movs	r5, #0
 8004976:	f104 0619 	add.w	r6, r4, #25
 800497a:	e7f5      	b.n	8004968 <_printf_i+0x230>
 800497c:	080053a3 	.word	0x080053a3
 8004980:	080053b4 	.word	0x080053b4

08004984 <_sbrk_r>:
 8004984:	b538      	push	{r3, r4, r5, lr}
 8004986:	2300      	movs	r3, #0
 8004988:	4d05      	ldr	r5, [pc, #20]	; (80049a0 <_sbrk_r+0x1c>)
 800498a:	4604      	mov	r4, r0
 800498c:	4608      	mov	r0, r1
 800498e:	602b      	str	r3, [r5, #0]
 8004990:	f7fc fbd4 	bl	800113c <_sbrk>
 8004994:	1c43      	adds	r3, r0, #1
 8004996:	d102      	bne.n	800499e <_sbrk_r+0x1a>
 8004998:	682b      	ldr	r3, [r5, #0]
 800499a:	b103      	cbz	r3, 800499e <_sbrk_r+0x1a>
 800499c:	6023      	str	r3, [r4, #0]
 800499e:	bd38      	pop	{r3, r4, r5, pc}
 80049a0:	200015fc 	.word	0x200015fc

080049a4 <__swbuf_r>:
 80049a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049a6:	460e      	mov	r6, r1
 80049a8:	4614      	mov	r4, r2
 80049aa:	4605      	mov	r5, r0
 80049ac:	b118      	cbz	r0, 80049b6 <__swbuf_r+0x12>
 80049ae:	6983      	ldr	r3, [r0, #24]
 80049b0:	b90b      	cbnz	r3, 80049b6 <__swbuf_r+0x12>
 80049b2:	f000 f9d9 	bl	8004d68 <__sinit>
 80049b6:	4b21      	ldr	r3, [pc, #132]	; (8004a3c <__swbuf_r+0x98>)
 80049b8:	429c      	cmp	r4, r3
 80049ba:	d12b      	bne.n	8004a14 <__swbuf_r+0x70>
 80049bc:	686c      	ldr	r4, [r5, #4]
 80049be:	69a3      	ldr	r3, [r4, #24]
 80049c0:	60a3      	str	r3, [r4, #8]
 80049c2:	89a3      	ldrh	r3, [r4, #12]
 80049c4:	071a      	lsls	r2, r3, #28
 80049c6:	d52f      	bpl.n	8004a28 <__swbuf_r+0x84>
 80049c8:	6923      	ldr	r3, [r4, #16]
 80049ca:	b36b      	cbz	r3, 8004a28 <__swbuf_r+0x84>
 80049cc:	6923      	ldr	r3, [r4, #16]
 80049ce:	6820      	ldr	r0, [r4, #0]
 80049d0:	b2f6      	uxtb	r6, r6
 80049d2:	1ac0      	subs	r0, r0, r3
 80049d4:	6963      	ldr	r3, [r4, #20]
 80049d6:	4637      	mov	r7, r6
 80049d8:	4283      	cmp	r3, r0
 80049da:	dc04      	bgt.n	80049e6 <__swbuf_r+0x42>
 80049dc:	4621      	mov	r1, r4
 80049de:	4628      	mov	r0, r5
 80049e0:	f000 f92e 	bl	8004c40 <_fflush_r>
 80049e4:	bb30      	cbnz	r0, 8004a34 <__swbuf_r+0x90>
 80049e6:	68a3      	ldr	r3, [r4, #8]
 80049e8:	3001      	adds	r0, #1
 80049ea:	3b01      	subs	r3, #1
 80049ec:	60a3      	str	r3, [r4, #8]
 80049ee:	6823      	ldr	r3, [r4, #0]
 80049f0:	1c5a      	adds	r2, r3, #1
 80049f2:	6022      	str	r2, [r4, #0]
 80049f4:	701e      	strb	r6, [r3, #0]
 80049f6:	6963      	ldr	r3, [r4, #20]
 80049f8:	4283      	cmp	r3, r0
 80049fa:	d004      	beq.n	8004a06 <__swbuf_r+0x62>
 80049fc:	89a3      	ldrh	r3, [r4, #12]
 80049fe:	07db      	lsls	r3, r3, #31
 8004a00:	d506      	bpl.n	8004a10 <__swbuf_r+0x6c>
 8004a02:	2e0a      	cmp	r6, #10
 8004a04:	d104      	bne.n	8004a10 <__swbuf_r+0x6c>
 8004a06:	4621      	mov	r1, r4
 8004a08:	4628      	mov	r0, r5
 8004a0a:	f000 f919 	bl	8004c40 <_fflush_r>
 8004a0e:	b988      	cbnz	r0, 8004a34 <__swbuf_r+0x90>
 8004a10:	4638      	mov	r0, r7
 8004a12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a14:	4b0a      	ldr	r3, [pc, #40]	; (8004a40 <__swbuf_r+0x9c>)
 8004a16:	429c      	cmp	r4, r3
 8004a18:	d101      	bne.n	8004a1e <__swbuf_r+0x7a>
 8004a1a:	68ac      	ldr	r4, [r5, #8]
 8004a1c:	e7cf      	b.n	80049be <__swbuf_r+0x1a>
 8004a1e:	4b09      	ldr	r3, [pc, #36]	; (8004a44 <__swbuf_r+0xa0>)
 8004a20:	429c      	cmp	r4, r3
 8004a22:	bf08      	it	eq
 8004a24:	68ec      	ldreq	r4, [r5, #12]
 8004a26:	e7ca      	b.n	80049be <__swbuf_r+0x1a>
 8004a28:	4621      	mov	r1, r4
 8004a2a:	4628      	mov	r0, r5
 8004a2c:	f000 f80c 	bl	8004a48 <__swsetup_r>
 8004a30:	2800      	cmp	r0, #0
 8004a32:	d0cb      	beq.n	80049cc <__swbuf_r+0x28>
 8004a34:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8004a38:	e7ea      	b.n	8004a10 <__swbuf_r+0x6c>
 8004a3a:	bf00      	nop
 8004a3c:	080053e8 	.word	0x080053e8
 8004a40:	08005408 	.word	0x08005408
 8004a44:	080053c8 	.word	0x080053c8

08004a48 <__swsetup_r>:
 8004a48:	4b32      	ldr	r3, [pc, #200]	; (8004b14 <__swsetup_r+0xcc>)
 8004a4a:	b570      	push	{r4, r5, r6, lr}
 8004a4c:	681d      	ldr	r5, [r3, #0]
 8004a4e:	4606      	mov	r6, r0
 8004a50:	460c      	mov	r4, r1
 8004a52:	b125      	cbz	r5, 8004a5e <__swsetup_r+0x16>
 8004a54:	69ab      	ldr	r3, [r5, #24]
 8004a56:	b913      	cbnz	r3, 8004a5e <__swsetup_r+0x16>
 8004a58:	4628      	mov	r0, r5
 8004a5a:	f000 f985 	bl	8004d68 <__sinit>
 8004a5e:	4b2e      	ldr	r3, [pc, #184]	; (8004b18 <__swsetup_r+0xd0>)
 8004a60:	429c      	cmp	r4, r3
 8004a62:	d10f      	bne.n	8004a84 <__swsetup_r+0x3c>
 8004a64:	686c      	ldr	r4, [r5, #4]
 8004a66:	89a3      	ldrh	r3, [r4, #12]
 8004a68:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004a6c:	0719      	lsls	r1, r3, #28
 8004a6e:	d42c      	bmi.n	8004aca <__swsetup_r+0x82>
 8004a70:	06dd      	lsls	r5, r3, #27
 8004a72:	d411      	bmi.n	8004a98 <__swsetup_r+0x50>
 8004a74:	2309      	movs	r3, #9
 8004a76:	6033      	str	r3, [r6, #0]
 8004a78:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004a7c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004a80:	81a3      	strh	r3, [r4, #12]
 8004a82:	e03e      	b.n	8004b02 <__swsetup_r+0xba>
 8004a84:	4b25      	ldr	r3, [pc, #148]	; (8004b1c <__swsetup_r+0xd4>)
 8004a86:	429c      	cmp	r4, r3
 8004a88:	d101      	bne.n	8004a8e <__swsetup_r+0x46>
 8004a8a:	68ac      	ldr	r4, [r5, #8]
 8004a8c:	e7eb      	b.n	8004a66 <__swsetup_r+0x1e>
 8004a8e:	4b24      	ldr	r3, [pc, #144]	; (8004b20 <__swsetup_r+0xd8>)
 8004a90:	429c      	cmp	r4, r3
 8004a92:	bf08      	it	eq
 8004a94:	68ec      	ldreq	r4, [r5, #12]
 8004a96:	e7e6      	b.n	8004a66 <__swsetup_r+0x1e>
 8004a98:	0758      	lsls	r0, r3, #29
 8004a9a:	d512      	bpl.n	8004ac2 <__swsetup_r+0x7a>
 8004a9c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004a9e:	b141      	cbz	r1, 8004ab2 <__swsetup_r+0x6a>
 8004aa0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004aa4:	4299      	cmp	r1, r3
 8004aa6:	d002      	beq.n	8004aae <__swsetup_r+0x66>
 8004aa8:	4630      	mov	r0, r6
 8004aaa:	f7ff fa7b 	bl	8003fa4 <_free_r>
 8004aae:	2300      	movs	r3, #0
 8004ab0:	6363      	str	r3, [r4, #52]	; 0x34
 8004ab2:	89a3      	ldrh	r3, [r4, #12]
 8004ab4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004ab8:	81a3      	strh	r3, [r4, #12]
 8004aba:	2300      	movs	r3, #0
 8004abc:	6063      	str	r3, [r4, #4]
 8004abe:	6923      	ldr	r3, [r4, #16]
 8004ac0:	6023      	str	r3, [r4, #0]
 8004ac2:	89a3      	ldrh	r3, [r4, #12]
 8004ac4:	f043 0308 	orr.w	r3, r3, #8
 8004ac8:	81a3      	strh	r3, [r4, #12]
 8004aca:	6923      	ldr	r3, [r4, #16]
 8004acc:	b94b      	cbnz	r3, 8004ae2 <__swsetup_r+0x9a>
 8004ace:	89a3      	ldrh	r3, [r4, #12]
 8004ad0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8004ad4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004ad8:	d003      	beq.n	8004ae2 <__swsetup_r+0x9a>
 8004ada:	4621      	mov	r1, r4
 8004adc:	4630      	mov	r0, r6
 8004ade:	f000 fa07 	bl	8004ef0 <__smakebuf_r>
 8004ae2:	89a0      	ldrh	r0, [r4, #12]
 8004ae4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004ae8:	f010 0301 	ands.w	r3, r0, #1
 8004aec:	d00a      	beq.n	8004b04 <__swsetup_r+0xbc>
 8004aee:	2300      	movs	r3, #0
 8004af0:	60a3      	str	r3, [r4, #8]
 8004af2:	6963      	ldr	r3, [r4, #20]
 8004af4:	425b      	negs	r3, r3
 8004af6:	61a3      	str	r3, [r4, #24]
 8004af8:	6923      	ldr	r3, [r4, #16]
 8004afa:	b943      	cbnz	r3, 8004b0e <__swsetup_r+0xc6>
 8004afc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8004b00:	d1ba      	bne.n	8004a78 <__swsetup_r+0x30>
 8004b02:	bd70      	pop	{r4, r5, r6, pc}
 8004b04:	0781      	lsls	r1, r0, #30
 8004b06:	bf58      	it	pl
 8004b08:	6963      	ldrpl	r3, [r4, #20]
 8004b0a:	60a3      	str	r3, [r4, #8]
 8004b0c:	e7f4      	b.n	8004af8 <__swsetup_r+0xb0>
 8004b0e:	2000      	movs	r0, #0
 8004b10:	e7f7      	b.n	8004b02 <__swsetup_r+0xba>
 8004b12:	bf00      	nop
 8004b14:	200000dc 	.word	0x200000dc
 8004b18:	080053e8 	.word	0x080053e8
 8004b1c:	08005408 	.word	0x08005408
 8004b20:	080053c8 	.word	0x080053c8

08004b24 <abort>:
 8004b24:	2006      	movs	r0, #6
 8004b26:	b508      	push	{r3, lr}
 8004b28:	f000 faa4 	bl	8005074 <raise>
 8004b2c:	2001      	movs	r0, #1
 8004b2e:	f7fc fa92 	bl	8001056 <_exit>
	...

08004b34 <__sflush_r>:
 8004b34:	898a      	ldrh	r2, [r1, #12]
 8004b36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b3a:	4605      	mov	r5, r0
 8004b3c:	0710      	lsls	r0, r2, #28
 8004b3e:	460c      	mov	r4, r1
 8004b40:	d458      	bmi.n	8004bf4 <__sflush_r+0xc0>
 8004b42:	684b      	ldr	r3, [r1, #4]
 8004b44:	2b00      	cmp	r3, #0
 8004b46:	dc05      	bgt.n	8004b54 <__sflush_r+0x20>
 8004b48:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	dc02      	bgt.n	8004b54 <__sflush_r+0x20>
 8004b4e:	2000      	movs	r0, #0
 8004b50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b54:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004b56:	2e00      	cmp	r6, #0
 8004b58:	d0f9      	beq.n	8004b4e <__sflush_r+0x1a>
 8004b5a:	2300      	movs	r3, #0
 8004b5c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004b60:	682f      	ldr	r7, [r5, #0]
 8004b62:	602b      	str	r3, [r5, #0]
 8004b64:	d032      	beq.n	8004bcc <__sflush_r+0x98>
 8004b66:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004b68:	89a3      	ldrh	r3, [r4, #12]
 8004b6a:	075a      	lsls	r2, r3, #29
 8004b6c:	d505      	bpl.n	8004b7a <__sflush_r+0x46>
 8004b6e:	6863      	ldr	r3, [r4, #4]
 8004b70:	1ac0      	subs	r0, r0, r3
 8004b72:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004b74:	b10b      	cbz	r3, 8004b7a <__sflush_r+0x46>
 8004b76:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004b78:	1ac0      	subs	r0, r0, r3
 8004b7a:	2300      	movs	r3, #0
 8004b7c:	4602      	mov	r2, r0
 8004b7e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004b80:	4628      	mov	r0, r5
 8004b82:	6a21      	ldr	r1, [r4, #32]
 8004b84:	47b0      	blx	r6
 8004b86:	1c43      	adds	r3, r0, #1
 8004b88:	89a3      	ldrh	r3, [r4, #12]
 8004b8a:	d106      	bne.n	8004b9a <__sflush_r+0x66>
 8004b8c:	6829      	ldr	r1, [r5, #0]
 8004b8e:	291d      	cmp	r1, #29
 8004b90:	d82c      	bhi.n	8004bec <__sflush_r+0xb8>
 8004b92:	4a2a      	ldr	r2, [pc, #168]	; (8004c3c <__sflush_r+0x108>)
 8004b94:	40ca      	lsrs	r2, r1
 8004b96:	07d6      	lsls	r6, r2, #31
 8004b98:	d528      	bpl.n	8004bec <__sflush_r+0xb8>
 8004b9a:	2200      	movs	r2, #0
 8004b9c:	6062      	str	r2, [r4, #4]
 8004b9e:	6922      	ldr	r2, [r4, #16]
 8004ba0:	04d9      	lsls	r1, r3, #19
 8004ba2:	6022      	str	r2, [r4, #0]
 8004ba4:	d504      	bpl.n	8004bb0 <__sflush_r+0x7c>
 8004ba6:	1c42      	adds	r2, r0, #1
 8004ba8:	d101      	bne.n	8004bae <__sflush_r+0x7a>
 8004baa:	682b      	ldr	r3, [r5, #0]
 8004bac:	b903      	cbnz	r3, 8004bb0 <__sflush_r+0x7c>
 8004bae:	6560      	str	r0, [r4, #84]	; 0x54
 8004bb0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004bb2:	602f      	str	r7, [r5, #0]
 8004bb4:	2900      	cmp	r1, #0
 8004bb6:	d0ca      	beq.n	8004b4e <__sflush_r+0x1a>
 8004bb8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004bbc:	4299      	cmp	r1, r3
 8004bbe:	d002      	beq.n	8004bc6 <__sflush_r+0x92>
 8004bc0:	4628      	mov	r0, r5
 8004bc2:	f7ff f9ef 	bl	8003fa4 <_free_r>
 8004bc6:	2000      	movs	r0, #0
 8004bc8:	6360      	str	r0, [r4, #52]	; 0x34
 8004bca:	e7c1      	b.n	8004b50 <__sflush_r+0x1c>
 8004bcc:	6a21      	ldr	r1, [r4, #32]
 8004bce:	2301      	movs	r3, #1
 8004bd0:	4628      	mov	r0, r5
 8004bd2:	47b0      	blx	r6
 8004bd4:	1c41      	adds	r1, r0, #1
 8004bd6:	d1c7      	bne.n	8004b68 <__sflush_r+0x34>
 8004bd8:	682b      	ldr	r3, [r5, #0]
 8004bda:	2b00      	cmp	r3, #0
 8004bdc:	d0c4      	beq.n	8004b68 <__sflush_r+0x34>
 8004bde:	2b1d      	cmp	r3, #29
 8004be0:	d001      	beq.n	8004be6 <__sflush_r+0xb2>
 8004be2:	2b16      	cmp	r3, #22
 8004be4:	d101      	bne.n	8004bea <__sflush_r+0xb6>
 8004be6:	602f      	str	r7, [r5, #0]
 8004be8:	e7b1      	b.n	8004b4e <__sflush_r+0x1a>
 8004bea:	89a3      	ldrh	r3, [r4, #12]
 8004bec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004bf0:	81a3      	strh	r3, [r4, #12]
 8004bf2:	e7ad      	b.n	8004b50 <__sflush_r+0x1c>
 8004bf4:	690f      	ldr	r7, [r1, #16]
 8004bf6:	2f00      	cmp	r7, #0
 8004bf8:	d0a9      	beq.n	8004b4e <__sflush_r+0x1a>
 8004bfa:	0793      	lsls	r3, r2, #30
 8004bfc:	bf18      	it	ne
 8004bfe:	2300      	movne	r3, #0
 8004c00:	680e      	ldr	r6, [r1, #0]
 8004c02:	bf08      	it	eq
 8004c04:	694b      	ldreq	r3, [r1, #20]
 8004c06:	eba6 0807 	sub.w	r8, r6, r7
 8004c0a:	600f      	str	r7, [r1, #0]
 8004c0c:	608b      	str	r3, [r1, #8]
 8004c0e:	f1b8 0f00 	cmp.w	r8, #0
 8004c12:	dd9c      	ble.n	8004b4e <__sflush_r+0x1a>
 8004c14:	4643      	mov	r3, r8
 8004c16:	463a      	mov	r2, r7
 8004c18:	4628      	mov	r0, r5
 8004c1a:	6a21      	ldr	r1, [r4, #32]
 8004c1c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004c1e:	47b0      	blx	r6
 8004c20:	2800      	cmp	r0, #0
 8004c22:	dc06      	bgt.n	8004c32 <__sflush_r+0xfe>
 8004c24:	89a3      	ldrh	r3, [r4, #12]
 8004c26:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004c2a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004c2e:	81a3      	strh	r3, [r4, #12]
 8004c30:	e78e      	b.n	8004b50 <__sflush_r+0x1c>
 8004c32:	4407      	add	r7, r0
 8004c34:	eba8 0800 	sub.w	r8, r8, r0
 8004c38:	e7e9      	b.n	8004c0e <__sflush_r+0xda>
 8004c3a:	bf00      	nop
 8004c3c:	20400001 	.word	0x20400001

08004c40 <_fflush_r>:
 8004c40:	b538      	push	{r3, r4, r5, lr}
 8004c42:	690b      	ldr	r3, [r1, #16]
 8004c44:	4605      	mov	r5, r0
 8004c46:	460c      	mov	r4, r1
 8004c48:	b913      	cbnz	r3, 8004c50 <_fflush_r+0x10>
 8004c4a:	2500      	movs	r5, #0
 8004c4c:	4628      	mov	r0, r5
 8004c4e:	bd38      	pop	{r3, r4, r5, pc}
 8004c50:	b118      	cbz	r0, 8004c5a <_fflush_r+0x1a>
 8004c52:	6983      	ldr	r3, [r0, #24]
 8004c54:	b90b      	cbnz	r3, 8004c5a <_fflush_r+0x1a>
 8004c56:	f000 f887 	bl	8004d68 <__sinit>
 8004c5a:	4b14      	ldr	r3, [pc, #80]	; (8004cac <_fflush_r+0x6c>)
 8004c5c:	429c      	cmp	r4, r3
 8004c5e:	d11b      	bne.n	8004c98 <_fflush_r+0x58>
 8004c60:	686c      	ldr	r4, [r5, #4]
 8004c62:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004c66:	2b00      	cmp	r3, #0
 8004c68:	d0ef      	beq.n	8004c4a <_fflush_r+0xa>
 8004c6a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004c6c:	07d0      	lsls	r0, r2, #31
 8004c6e:	d404      	bmi.n	8004c7a <_fflush_r+0x3a>
 8004c70:	0599      	lsls	r1, r3, #22
 8004c72:	d402      	bmi.n	8004c7a <_fflush_r+0x3a>
 8004c74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004c76:	f000 f915 	bl	8004ea4 <__retarget_lock_acquire_recursive>
 8004c7a:	4628      	mov	r0, r5
 8004c7c:	4621      	mov	r1, r4
 8004c7e:	f7ff ff59 	bl	8004b34 <__sflush_r>
 8004c82:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004c84:	4605      	mov	r5, r0
 8004c86:	07da      	lsls	r2, r3, #31
 8004c88:	d4e0      	bmi.n	8004c4c <_fflush_r+0xc>
 8004c8a:	89a3      	ldrh	r3, [r4, #12]
 8004c8c:	059b      	lsls	r3, r3, #22
 8004c8e:	d4dd      	bmi.n	8004c4c <_fflush_r+0xc>
 8004c90:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004c92:	f000 f908 	bl	8004ea6 <__retarget_lock_release_recursive>
 8004c96:	e7d9      	b.n	8004c4c <_fflush_r+0xc>
 8004c98:	4b05      	ldr	r3, [pc, #20]	; (8004cb0 <_fflush_r+0x70>)
 8004c9a:	429c      	cmp	r4, r3
 8004c9c:	d101      	bne.n	8004ca2 <_fflush_r+0x62>
 8004c9e:	68ac      	ldr	r4, [r5, #8]
 8004ca0:	e7df      	b.n	8004c62 <_fflush_r+0x22>
 8004ca2:	4b04      	ldr	r3, [pc, #16]	; (8004cb4 <_fflush_r+0x74>)
 8004ca4:	429c      	cmp	r4, r3
 8004ca6:	bf08      	it	eq
 8004ca8:	68ec      	ldreq	r4, [r5, #12]
 8004caa:	e7da      	b.n	8004c62 <_fflush_r+0x22>
 8004cac:	080053e8 	.word	0x080053e8
 8004cb0:	08005408 	.word	0x08005408
 8004cb4:	080053c8 	.word	0x080053c8

08004cb8 <std>:
 8004cb8:	2300      	movs	r3, #0
 8004cba:	b510      	push	{r4, lr}
 8004cbc:	4604      	mov	r4, r0
 8004cbe:	e9c0 3300 	strd	r3, r3, [r0]
 8004cc2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004cc6:	6083      	str	r3, [r0, #8]
 8004cc8:	8181      	strh	r1, [r0, #12]
 8004cca:	6643      	str	r3, [r0, #100]	; 0x64
 8004ccc:	81c2      	strh	r2, [r0, #14]
 8004cce:	6183      	str	r3, [r0, #24]
 8004cd0:	4619      	mov	r1, r3
 8004cd2:	2208      	movs	r2, #8
 8004cd4:	305c      	adds	r0, #92	; 0x5c
 8004cd6:	f7ff f853 	bl	8003d80 <memset>
 8004cda:	4b05      	ldr	r3, [pc, #20]	; (8004cf0 <std+0x38>)
 8004cdc:	6224      	str	r4, [r4, #32]
 8004cde:	6263      	str	r3, [r4, #36]	; 0x24
 8004ce0:	4b04      	ldr	r3, [pc, #16]	; (8004cf4 <std+0x3c>)
 8004ce2:	62a3      	str	r3, [r4, #40]	; 0x28
 8004ce4:	4b04      	ldr	r3, [pc, #16]	; (8004cf8 <std+0x40>)
 8004ce6:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004ce8:	4b04      	ldr	r3, [pc, #16]	; (8004cfc <std+0x44>)
 8004cea:	6323      	str	r3, [r4, #48]	; 0x30
 8004cec:	bd10      	pop	{r4, pc}
 8004cee:	bf00      	nop
 8004cf0:	080050ad 	.word	0x080050ad
 8004cf4:	080050cf 	.word	0x080050cf
 8004cf8:	08005107 	.word	0x08005107
 8004cfc:	0800512b 	.word	0x0800512b

08004d00 <_cleanup_r>:
 8004d00:	4901      	ldr	r1, [pc, #4]	; (8004d08 <_cleanup_r+0x8>)
 8004d02:	f000 b8af 	b.w	8004e64 <_fwalk_reent>
 8004d06:	bf00      	nop
 8004d08:	08004c41 	.word	0x08004c41

08004d0c <__sfmoreglue>:
 8004d0c:	b570      	push	{r4, r5, r6, lr}
 8004d0e:	2568      	movs	r5, #104	; 0x68
 8004d10:	1e4a      	subs	r2, r1, #1
 8004d12:	4355      	muls	r5, r2
 8004d14:	460e      	mov	r6, r1
 8004d16:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004d1a:	f7ff f98f 	bl	800403c <_malloc_r>
 8004d1e:	4604      	mov	r4, r0
 8004d20:	b140      	cbz	r0, 8004d34 <__sfmoreglue+0x28>
 8004d22:	2100      	movs	r1, #0
 8004d24:	e9c0 1600 	strd	r1, r6, [r0]
 8004d28:	300c      	adds	r0, #12
 8004d2a:	60a0      	str	r0, [r4, #8]
 8004d2c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8004d30:	f7ff f826 	bl	8003d80 <memset>
 8004d34:	4620      	mov	r0, r4
 8004d36:	bd70      	pop	{r4, r5, r6, pc}

08004d38 <__sfp_lock_acquire>:
 8004d38:	4801      	ldr	r0, [pc, #4]	; (8004d40 <__sfp_lock_acquire+0x8>)
 8004d3a:	f000 b8b3 	b.w	8004ea4 <__retarget_lock_acquire_recursive>
 8004d3e:	bf00      	nop
 8004d40:	20001608 	.word	0x20001608

08004d44 <__sfp_lock_release>:
 8004d44:	4801      	ldr	r0, [pc, #4]	; (8004d4c <__sfp_lock_release+0x8>)
 8004d46:	f000 b8ae 	b.w	8004ea6 <__retarget_lock_release_recursive>
 8004d4a:	bf00      	nop
 8004d4c:	20001608 	.word	0x20001608

08004d50 <__sinit_lock_acquire>:
 8004d50:	4801      	ldr	r0, [pc, #4]	; (8004d58 <__sinit_lock_acquire+0x8>)
 8004d52:	f000 b8a7 	b.w	8004ea4 <__retarget_lock_acquire_recursive>
 8004d56:	bf00      	nop
 8004d58:	20001603 	.word	0x20001603

08004d5c <__sinit_lock_release>:
 8004d5c:	4801      	ldr	r0, [pc, #4]	; (8004d64 <__sinit_lock_release+0x8>)
 8004d5e:	f000 b8a2 	b.w	8004ea6 <__retarget_lock_release_recursive>
 8004d62:	bf00      	nop
 8004d64:	20001603 	.word	0x20001603

08004d68 <__sinit>:
 8004d68:	b510      	push	{r4, lr}
 8004d6a:	4604      	mov	r4, r0
 8004d6c:	f7ff fff0 	bl	8004d50 <__sinit_lock_acquire>
 8004d70:	69a3      	ldr	r3, [r4, #24]
 8004d72:	b11b      	cbz	r3, 8004d7c <__sinit+0x14>
 8004d74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004d78:	f7ff bff0 	b.w	8004d5c <__sinit_lock_release>
 8004d7c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8004d80:	6523      	str	r3, [r4, #80]	; 0x50
 8004d82:	4b13      	ldr	r3, [pc, #76]	; (8004dd0 <__sinit+0x68>)
 8004d84:	4a13      	ldr	r2, [pc, #76]	; (8004dd4 <__sinit+0x6c>)
 8004d86:	681b      	ldr	r3, [r3, #0]
 8004d88:	62a2      	str	r2, [r4, #40]	; 0x28
 8004d8a:	42a3      	cmp	r3, r4
 8004d8c:	bf08      	it	eq
 8004d8e:	2301      	moveq	r3, #1
 8004d90:	4620      	mov	r0, r4
 8004d92:	bf08      	it	eq
 8004d94:	61a3      	streq	r3, [r4, #24]
 8004d96:	f000 f81f 	bl	8004dd8 <__sfp>
 8004d9a:	6060      	str	r0, [r4, #4]
 8004d9c:	4620      	mov	r0, r4
 8004d9e:	f000 f81b 	bl	8004dd8 <__sfp>
 8004da2:	60a0      	str	r0, [r4, #8]
 8004da4:	4620      	mov	r0, r4
 8004da6:	f000 f817 	bl	8004dd8 <__sfp>
 8004daa:	2200      	movs	r2, #0
 8004dac:	2104      	movs	r1, #4
 8004dae:	60e0      	str	r0, [r4, #12]
 8004db0:	6860      	ldr	r0, [r4, #4]
 8004db2:	f7ff ff81 	bl	8004cb8 <std>
 8004db6:	2201      	movs	r2, #1
 8004db8:	2109      	movs	r1, #9
 8004dba:	68a0      	ldr	r0, [r4, #8]
 8004dbc:	f7ff ff7c 	bl	8004cb8 <std>
 8004dc0:	2202      	movs	r2, #2
 8004dc2:	2112      	movs	r1, #18
 8004dc4:	68e0      	ldr	r0, [r4, #12]
 8004dc6:	f7ff ff77 	bl	8004cb8 <std>
 8004dca:	2301      	movs	r3, #1
 8004dcc:	61a3      	str	r3, [r4, #24]
 8004dce:	e7d1      	b.n	8004d74 <__sinit+0xc>
 8004dd0:	080052dc 	.word	0x080052dc
 8004dd4:	08004d01 	.word	0x08004d01

08004dd8 <__sfp>:
 8004dd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004dda:	4607      	mov	r7, r0
 8004ddc:	f7ff ffac 	bl	8004d38 <__sfp_lock_acquire>
 8004de0:	4b1e      	ldr	r3, [pc, #120]	; (8004e5c <__sfp+0x84>)
 8004de2:	681e      	ldr	r6, [r3, #0]
 8004de4:	69b3      	ldr	r3, [r6, #24]
 8004de6:	b913      	cbnz	r3, 8004dee <__sfp+0x16>
 8004de8:	4630      	mov	r0, r6
 8004dea:	f7ff ffbd 	bl	8004d68 <__sinit>
 8004dee:	3648      	adds	r6, #72	; 0x48
 8004df0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8004df4:	3b01      	subs	r3, #1
 8004df6:	d503      	bpl.n	8004e00 <__sfp+0x28>
 8004df8:	6833      	ldr	r3, [r6, #0]
 8004dfa:	b30b      	cbz	r3, 8004e40 <__sfp+0x68>
 8004dfc:	6836      	ldr	r6, [r6, #0]
 8004dfe:	e7f7      	b.n	8004df0 <__sfp+0x18>
 8004e00:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004e04:	b9d5      	cbnz	r5, 8004e3c <__sfp+0x64>
 8004e06:	4b16      	ldr	r3, [pc, #88]	; (8004e60 <__sfp+0x88>)
 8004e08:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8004e0c:	60e3      	str	r3, [r4, #12]
 8004e0e:	6665      	str	r5, [r4, #100]	; 0x64
 8004e10:	f000 f847 	bl	8004ea2 <__retarget_lock_init_recursive>
 8004e14:	f7ff ff96 	bl	8004d44 <__sfp_lock_release>
 8004e18:	2208      	movs	r2, #8
 8004e1a:	4629      	mov	r1, r5
 8004e1c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8004e20:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8004e24:	6025      	str	r5, [r4, #0]
 8004e26:	61a5      	str	r5, [r4, #24]
 8004e28:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004e2c:	f7fe ffa8 	bl	8003d80 <memset>
 8004e30:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8004e34:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004e38:	4620      	mov	r0, r4
 8004e3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004e3c:	3468      	adds	r4, #104	; 0x68
 8004e3e:	e7d9      	b.n	8004df4 <__sfp+0x1c>
 8004e40:	2104      	movs	r1, #4
 8004e42:	4638      	mov	r0, r7
 8004e44:	f7ff ff62 	bl	8004d0c <__sfmoreglue>
 8004e48:	4604      	mov	r4, r0
 8004e4a:	6030      	str	r0, [r6, #0]
 8004e4c:	2800      	cmp	r0, #0
 8004e4e:	d1d5      	bne.n	8004dfc <__sfp+0x24>
 8004e50:	f7ff ff78 	bl	8004d44 <__sfp_lock_release>
 8004e54:	230c      	movs	r3, #12
 8004e56:	603b      	str	r3, [r7, #0]
 8004e58:	e7ee      	b.n	8004e38 <__sfp+0x60>
 8004e5a:	bf00      	nop
 8004e5c:	080052dc 	.word	0x080052dc
 8004e60:	ffff0001 	.word	0xffff0001

08004e64 <_fwalk_reent>:
 8004e64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004e68:	4606      	mov	r6, r0
 8004e6a:	4688      	mov	r8, r1
 8004e6c:	2700      	movs	r7, #0
 8004e6e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004e72:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004e76:	f1b9 0901 	subs.w	r9, r9, #1
 8004e7a:	d505      	bpl.n	8004e88 <_fwalk_reent+0x24>
 8004e7c:	6824      	ldr	r4, [r4, #0]
 8004e7e:	2c00      	cmp	r4, #0
 8004e80:	d1f7      	bne.n	8004e72 <_fwalk_reent+0xe>
 8004e82:	4638      	mov	r0, r7
 8004e84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e88:	89ab      	ldrh	r3, [r5, #12]
 8004e8a:	2b01      	cmp	r3, #1
 8004e8c:	d907      	bls.n	8004e9e <_fwalk_reent+0x3a>
 8004e8e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004e92:	3301      	adds	r3, #1
 8004e94:	d003      	beq.n	8004e9e <_fwalk_reent+0x3a>
 8004e96:	4629      	mov	r1, r5
 8004e98:	4630      	mov	r0, r6
 8004e9a:	47c0      	blx	r8
 8004e9c:	4307      	orrs	r7, r0
 8004e9e:	3568      	adds	r5, #104	; 0x68
 8004ea0:	e7e9      	b.n	8004e76 <_fwalk_reent+0x12>

08004ea2 <__retarget_lock_init_recursive>:
 8004ea2:	4770      	bx	lr

08004ea4 <__retarget_lock_acquire_recursive>:
 8004ea4:	4770      	bx	lr

08004ea6 <__retarget_lock_release_recursive>:
 8004ea6:	4770      	bx	lr

08004ea8 <__swhatbuf_r>:
 8004ea8:	b570      	push	{r4, r5, r6, lr}
 8004eaa:	460e      	mov	r6, r1
 8004eac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004eb0:	4614      	mov	r4, r2
 8004eb2:	2900      	cmp	r1, #0
 8004eb4:	461d      	mov	r5, r3
 8004eb6:	b096      	sub	sp, #88	; 0x58
 8004eb8:	da07      	bge.n	8004eca <__swhatbuf_r+0x22>
 8004eba:	2300      	movs	r3, #0
 8004ebc:	602b      	str	r3, [r5, #0]
 8004ebe:	89b3      	ldrh	r3, [r6, #12]
 8004ec0:	061a      	lsls	r2, r3, #24
 8004ec2:	d410      	bmi.n	8004ee6 <__swhatbuf_r+0x3e>
 8004ec4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004ec8:	e00e      	b.n	8004ee8 <__swhatbuf_r+0x40>
 8004eca:	466a      	mov	r2, sp
 8004ecc:	f000 f954 	bl	8005178 <_fstat_r>
 8004ed0:	2800      	cmp	r0, #0
 8004ed2:	dbf2      	blt.n	8004eba <__swhatbuf_r+0x12>
 8004ed4:	9a01      	ldr	r2, [sp, #4]
 8004ed6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004eda:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8004ede:	425a      	negs	r2, r3
 8004ee0:	415a      	adcs	r2, r3
 8004ee2:	602a      	str	r2, [r5, #0]
 8004ee4:	e7ee      	b.n	8004ec4 <__swhatbuf_r+0x1c>
 8004ee6:	2340      	movs	r3, #64	; 0x40
 8004ee8:	2000      	movs	r0, #0
 8004eea:	6023      	str	r3, [r4, #0]
 8004eec:	b016      	add	sp, #88	; 0x58
 8004eee:	bd70      	pop	{r4, r5, r6, pc}

08004ef0 <__smakebuf_r>:
 8004ef0:	898b      	ldrh	r3, [r1, #12]
 8004ef2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004ef4:	079d      	lsls	r5, r3, #30
 8004ef6:	4606      	mov	r6, r0
 8004ef8:	460c      	mov	r4, r1
 8004efa:	d507      	bpl.n	8004f0c <__smakebuf_r+0x1c>
 8004efc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004f00:	6023      	str	r3, [r4, #0]
 8004f02:	6123      	str	r3, [r4, #16]
 8004f04:	2301      	movs	r3, #1
 8004f06:	6163      	str	r3, [r4, #20]
 8004f08:	b002      	add	sp, #8
 8004f0a:	bd70      	pop	{r4, r5, r6, pc}
 8004f0c:	466a      	mov	r2, sp
 8004f0e:	ab01      	add	r3, sp, #4
 8004f10:	f7ff ffca 	bl	8004ea8 <__swhatbuf_r>
 8004f14:	9900      	ldr	r1, [sp, #0]
 8004f16:	4605      	mov	r5, r0
 8004f18:	4630      	mov	r0, r6
 8004f1a:	f7ff f88f 	bl	800403c <_malloc_r>
 8004f1e:	b948      	cbnz	r0, 8004f34 <__smakebuf_r+0x44>
 8004f20:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004f24:	059a      	lsls	r2, r3, #22
 8004f26:	d4ef      	bmi.n	8004f08 <__smakebuf_r+0x18>
 8004f28:	f023 0303 	bic.w	r3, r3, #3
 8004f2c:	f043 0302 	orr.w	r3, r3, #2
 8004f30:	81a3      	strh	r3, [r4, #12]
 8004f32:	e7e3      	b.n	8004efc <__smakebuf_r+0xc>
 8004f34:	4b0d      	ldr	r3, [pc, #52]	; (8004f6c <__smakebuf_r+0x7c>)
 8004f36:	62b3      	str	r3, [r6, #40]	; 0x28
 8004f38:	89a3      	ldrh	r3, [r4, #12]
 8004f3a:	6020      	str	r0, [r4, #0]
 8004f3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004f40:	81a3      	strh	r3, [r4, #12]
 8004f42:	9b00      	ldr	r3, [sp, #0]
 8004f44:	6120      	str	r0, [r4, #16]
 8004f46:	6163      	str	r3, [r4, #20]
 8004f48:	9b01      	ldr	r3, [sp, #4]
 8004f4a:	b15b      	cbz	r3, 8004f64 <__smakebuf_r+0x74>
 8004f4c:	4630      	mov	r0, r6
 8004f4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004f52:	f000 f923 	bl	800519c <_isatty_r>
 8004f56:	b128      	cbz	r0, 8004f64 <__smakebuf_r+0x74>
 8004f58:	89a3      	ldrh	r3, [r4, #12]
 8004f5a:	f023 0303 	bic.w	r3, r3, #3
 8004f5e:	f043 0301 	orr.w	r3, r3, #1
 8004f62:	81a3      	strh	r3, [r4, #12]
 8004f64:	89a0      	ldrh	r0, [r4, #12]
 8004f66:	4305      	orrs	r5, r0
 8004f68:	81a5      	strh	r5, [r4, #12]
 8004f6a:	e7cd      	b.n	8004f08 <__smakebuf_r+0x18>
 8004f6c:	08004d01 	.word	0x08004d01

08004f70 <memchr>:
 8004f70:	4603      	mov	r3, r0
 8004f72:	b510      	push	{r4, lr}
 8004f74:	b2c9      	uxtb	r1, r1
 8004f76:	4402      	add	r2, r0
 8004f78:	4293      	cmp	r3, r2
 8004f7a:	4618      	mov	r0, r3
 8004f7c:	d101      	bne.n	8004f82 <memchr+0x12>
 8004f7e:	2000      	movs	r0, #0
 8004f80:	e003      	b.n	8004f8a <memchr+0x1a>
 8004f82:	7804      	ldrb	r4, [r0, #0]
 8004f84:	3301      	adds	r3, #1
 8004f86:	428c      	cmp	r4, r1
 8004f88:	d1f6      	bne.n	8004f78 <memchr+0x8>
 8004f8a:	bd10      	pop	{r4, pc}

08004f8c <memmove>:
 8004f8c:	4288      	cmp	r0, r1
 8004f8e:	b510      	push	{r4, lr}
 8004f90:	eb01 0402 	add.w	r4, r1, r2
 8004f94:	d902      	bls.n	8004f9c <memmove+0x10>
 8004f96:	4284      	cmp	r4, r0
 8004f98:	4623      	mov	r3, r4
 8004f9a:	d807      	bhi.n	8004fac <memmove+0x20>
 8004f9c:	1e43      	subs	r3, r0, #1
 8004f9e:	42a1      	cmp	r1, r4
 8004fa0:	d008      	beq.n	8004fb4 <memmove+0x28>
 8004fa2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004fa6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004faa:	e7f8      	b.n	8004f9e <memmove+0x12>
 8004fac:	4601      	mov	r1, r0
 8004fae:	4402      	add	r2, r0
 8004fb0:	428a      	cmp	r2, r1
 8004fb2:	d100      	bne.n	8004fb6 <memmove+0x2a>
 8004fb4:	bd10      	pop	{r4, pc}
 8004fb6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004fba:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004fbe:	e7f7      	b.n	8004fb0 <memmove+0x24>

08004fc0 <__malloc_lock>:
 8004fc0:	4801      	ldr	r0, [pc, #4]	; (8004fc8 <__malloc_lock+0x8>)
 8004fc2:	f7ff bf6f 	b.w	8004ea4 <__retarget_lock_acquire_recursive>
 8004fc6:	bf00      	nop
 8004fc8:	20001604 	.word	0x20001604

08004fcc <__malloc_unlock>:
 8004fcc:	4801      	ldr	r0, [pc, #4]	; (8004fd4 <__malloc_unlock+0x8>)
 8004fce:	f7ff bf6a 	b.w	8004ea6 <__retarget_lock_release_recursive>
 8004fd2:	bf00      	nop
 8004fd4:	20001604 	.word	0x20001604

08004fd8 <_realloc_r>:
 8004fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004fda:	4607      	mov	r7, r0
 8004fdc:	4614      	mov	r4, r2
 8004fde:	460e      	mov	r6, r1
 8004fe0:	b921      	cbnz	r1, 8004fec <_realloc_r+0x14>
 8004fe2:	4611      	mov	r1, r2
 8004fe4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004fe8:	f7ff b828 	b.w	800403c <_malloc_r>
 8004fec:	b922      	cbnz	r2, 8004ff8 <_realloc_r+0x20>
 8004fee:	f7fe ffd9 	bl	8003fa4 <_free_r>
 8004ff2:	4625      	mov	r5, r4
 8004ff4:	4628      	mov	r0, r5
 8004ff6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004ff8:	f000 f8f2 	bl	80051e0 <_malloc_usable_size_r>
 8004ffc:	42a0      	cmp	r0, r4
 8004ffe:	d20f      	bcs.n	8005020 <_realloc_r+0x48>
 8005000:	4621      	mov	r1, r4
 8005002:	4638      	mov	r0, r7
 8005004:	f7ff f81a 	bl	800403c <_malloc_r>
 8005008:	4605      	mov	r5, r0
 800500a:	2800      	cmp	r0, #0
 800500c:	d0f2      	beq.n	8004ff4 <_realloc_r+0x1c>
 800500e:	4631      	mov	r1, r6
 8005010:	4622      	mov	r2, r4
 8005012:	f7fe fea7 	bl	8003d64 <memcpy>
 8005016:	4631      	mov	r1, r6
 8005018:	4638      	mov	r0, r7
 800501a:	f7fe ffc3 	bl	8003fa4 <_free_r>
 800501e:	e7e9      	b.n	8004ff4 <_realloc_r+0x1c>
 8005020:	4635      	mov	r5, r6
 8005022:	e7e7      	b.n	8004ff4 <_realloc_r+0x1c>

08005024 <_raise_r>:
 8005024:	291f      	cmp	r1, #31
 8005026:	b538      	push	{r3, r4, r5, lr}
 8005028:	4604      	mov	r4, r0
 800502a:	460d      	mov	r5, r1
 800502c:	d904      	bls.n	8005038 <_raise_r+0x14>
 800502e:	2316      	movs	r3, #22
 8005030:	6003      	str	r3, [r0, #0]
 8005032:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005036:	bd38      	pop	{r3, r4, r5, pc}
 8005038:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800503a:	b112      	cbz	r2, 8005042 <_raise_r+0x1e>
 800503c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005040:	b94b      	cbnz	r3, 8005056 <_raise_r+0x32>
 8005042:	4620      	mov	r0, r4
 8005044:	f000 f830 	bl	80050a8 <_getpid_r>
 8005048:	462a      	mov	r2, r5
 800504a:	4601      	mov	r1, r0
 800504c:	4620      	mov	r0, r4
 800504e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005052:	f000 b817 	b.w	8005084 <_kill_r>
 8005056:	2b01      	cmp	r3, #1
 8005058:	d00a      	beq.n	8005070 <_raise_r+0x4c>
 800505a:	1c59      	adds	r1, r3, #1
 800505c:	d103      	bne.n	8005066 <_raise_r+0x42>
 800505e:	2316      	movs	r3, #22
 8005060:	6003      	str	r3, [r0, #0]
 8005062:	2001      	movs	r0, #1
 8005064:	e7e7      	b.n	8005036 <_raise_r+0x12>
 8005066:	2400      	movs	r4, #0
 8005068:	4628      	mov	r0, r5
 800506a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800506e:	4798      	blx	r3
 8005070:	2000      	movs	r0, #0
 8005072:	e7e0      	b.n	8005036 <_raise_r+0x12>

08005074 <raise>:
 8005074:	4b02      	ldr	r3, [pc, #8]	; (8005080 <raise+0xc>)
 8005076:	4601      	mov	r1, r0
 8005078:	6818      	ldr	r0, [r3, #0]
 800507a:	f7ff bfd3 	b.w	8005024 <_raise_r>
 800507e:	bf00      	nop
 8005080:	200000dc 	.word	0x200000dc

08005084 <_kill_r>:
 8005084:	b538      	push	{r3, r4, r5, lr}
 8005086:	2300      	movs	r3, #0
 8005088:	4d06      	ldr	r5, [pc, #24]	; (80050a4 <_kill_r+0x20>)
 800508a:	4604      	mov	r4, r0
 800508c:	4608      	mov	r0, r1
 800508e:	4611      	mov	r1, r2
 8005090:	602b      	str	r3, [r5, #0]
 8005092:	f7fb ffd0 	bl	8001036 <_kill>
 8005096:	1c43      	adds	r3, r0, #1
 8005098:	d102      	bne.n	80050a0 <_kill_r+0x1c>
 800509a:	682b      	ldr	r3, [r5, #0]
 800509c:	b103      	cbz	r3, 80050a0 <_kill_r+0x1c>
 800509e:	6023      	str	r3, [r4, #0]
 80050a0:	bd38      	pop	{r3, r4, r5, pc}
 80050a2:	bf00      	nop
 80050a4:	200015fc 	.word	0x200015fc

080050a8 <_getpid_r>:
 80050a8:	f7fb bfbe 	b.w	8001028 <_getpid>

080050ac <__sread>:
 80050ac:	b510      	push	{r4, lr}
 80050ae:	460c      	mov	r4, r1
 80050b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80050b4:	f000 f89c 	bl	80051f0 <_read_r>
 80050b8:	2800      	cmp	r0, #0
 80050ba:	bfab      	itete	ge
 80050bc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80050be:	89a3      	ldrhlt	r3, [r4, #12]
 80050c0:	181b      	addge	r3, r3, r0
 80050c2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80050c6:	bfac      	ite	ge
 80050c8:	6563      	strge	r3, [r4, #84]	; 0x54
 80050ca:	81a3      	strhlt	r3, [r4, #12]
 80050cc:	bd10      	pop	{r4, pc}

080050ce <__swrite>:
 80050ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80050d2:	461f      	mov	r7, r3
 80050d4:	898b      	ldrh	r3, [r1, #12]
 80050d6:	4605      	mov	r5, r0
 80050d8:	05db      	lsls	r3, r3, #23
 80050da:	460c      	mov	r4, r1
 80050dc:	4616      	mov	r6, r2
 80050de:	d505      	bpl.n	80050ec <__swrite+0x1e>
 80050e0:	2302      	movs	r3, #2
 80050e2:	2200      	movs	r2, #0
 80050e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80050e8:	f000 f868 	bl	80051bc <_lseek_r>
 80050ec:	89a3      	ldrh	r3, [r4, #12]
 80050ee:	4632      	mov	r2, r6
 80050f0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80050f4:	81a3      	strh	r3, [r4, #12]
 80050f6:	4628      	mov	r0, r5
 80050f8:	463b      	mov	r3, r7
 80050fa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80050fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005102:	f000 b817 	b.w	8005134 <_write_r>

08005106 <__sseek>:
 8005106:	b510      	push	{r4, lr}
 8005108:	460c      	mov	r4, r1
 800510a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800510e:	f000 f855 	bl	80051bc <_lseek_r>
 8005112:	1c43      	adds	r3, r0, #1
 8005114:	89a3      	ldrh	r3, [r4, #12]
 8005116:	bf15      	itete	ne
 8005118:	6560      	strne	r0, [r4, #84]	; 0x54
 800511a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800511e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005122:	81a3      	strheq	r3, [r4, #12]
 8005124:	bf18      	it	ne
 8005126:	81a3      	strhne	r3, [r4, #12]
 8005128:	bd10      	pop	{r4, pc}

0800512a <__sclose>:
 800512a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800512e:	f000 b813 	b.w	8005158 <_close_r>
	...

08005134 <_write_r>:
 8005134:	b538      	push	{r3, r4, r5, lr}
 8005136:	4604      	mov	r4, r0
 8005138:	4608      	mov	r0, r1
 800513a:	4611      	mov	r1, r2
 800513c:	2200      	movs	r2, #0
 800513e:	4d05      	ldr	r5, [pc, #20]	; (8005154 <_write_r+0x20>)
 8005140:	602a      	str	r2, [r5, #0]
 8005142:	461a      	mov	r2, r3
 8005144:	f7fb ffae 	bl	80010a4 <_write>
 8005148:	1c43      	adds	r3, r0, #1
 800514a:	d102      	bne.n	8005152 <_write_r+0x1e>
 800514c:	682b      	ldr	r3, [r5, #0]
 800514e:	b103      	cbz	r3, 8005152 <_write_r+0x1e>
 8005150:	6023      	str	r3, [r4, #0]
 8005152:	bd38      	pop	{r3, r4, r5, pc}
 8005154:	200015fc 	.word	0x200015fc

08005158 <_close_r>:
 8005158:	b538      	push	{r3, r4, r5, lr}
 800515a:	2300      	movs	r3, #0
 800515c:	4d05      	ldr	r5, [pc, #20]	; (8005174 <_close_r+0x1c>)
 800515e:	4604      	mov	r4, r0
 8005160:	4608      	mov	r0, r1
 8005162:	602b      	str	r3, [r5, #0]
 8005164:	f7fb ffba 	bl	80010dc <_close>
 8005168:	1c43      	adds	r3, r0, #1
 800516a:	d102      	bne.n	8005172 <_close_r+0x1a>
 800516c:	682b      	ldr	r3, [r5, #0]
 800516e:	b103      	cbz	r3, 8005172 <_close_r+0x1a>
 8005170:	6023      	str	r3, [r4, #0]
 8005172:	bd38      	pop	{r3, r4, r5, pc}
 8005174:	200015fc 	.word	0x200015fc

08005178 <_fstat_r>:
 8005178:	b538      	push	{r3, r4, r5, lr}
 800517a:	2300      	movs	r3, #0
 800517c:	4d06      	ldr	r5, [pc, #24]	; (8005198 <_fstat_r+0x20>)
 800517e:	4604      	mov	r4, r0
 8005180:	4608      	mov	r0, r1
 8005182:	4611      	mov	r1, r2
 8005184:	602b      	str	r3, [r5, #0]
 8005186:	f7fb ffb4 	bl	80010f2 <_fstat>
 800518a:	1c43      	adds	r3, r0, #1
 800518c:	d102      	bne.n	8005194 <_fstat_r+0x1c>
 800518e:	682b      	ldr	r3, [r5, #0]
 8005190:	b103      	cbz	r3, 8005194 <_fstat_r+0x1c>
 8005192:	6023      	str	r3, [r4, #0]
 8005194:	bd38      	pop	{r3, r4, r5, pc}
 8005196:	bf00      	nop
 8005198:	200015fc 	.word	0x200015fc

0800519c <_isatty_r>:
 800519c:	b538      	push	{r3, r4, r5, lr}
 800519e:	2300      	movs	r3, #0
 80051a0:	4d05      	ldr	r5, [pc, #20]	; (80051b8 <_isatty_r+0x1c>)
 80051a2:	4604      	mov	r4, r0
 80051a4:	4608      	mov	r0, r1
 80051a6:	602b      	str	r3, [r5, #0]
 80051a8:	f7fb ffb2 	bl	8001110 <_isatty>
 80051ac:	1c43      	adds	r3, r0, #1
 80051ae:	d102      	bne.n	80051b6 <_isatty_r+0x1a>
 80051b0:	682b      	ldr	r3, [r5, #0]
 80051b2:	b103      	cbz	r3, 80051b6 <_isatty_r+0x1a>
 80051b4:	6023      	str	r3, [r4, #0]
 80051b6:	bd38      	pop	{r3, r4, r5, pc}
 80051b8:	200015fc 	.word	0x200015fc

080051bc <_lseek_r>:
 80051bc:	b538      	push	{r3, r4, r5, lr}
 80051be:	4604      	mov	r4, r0
 80051c0:	4608      	mov	r0, r1
 80051c2:	4611      	mov	r1, r2
 80051c4:	2200      	movs	r2, #0
 80051c6:	4d05      	ldr	r5, [pc, #20]	; (80051dc <_lseek_r+0x20>)
 80051c8:	602a      	str	r2, [r5, #0]
 80051ca:	461a      	mov	r2, r3
 80051cc:	f7fb ffaa 	bl	8001124 <_lseek>
 80051d0:	1c43      	adds	r3, r0, #1
 80051d2:	d102      	bne.n	80051da <_lseek_r+0x1e>
 80051d4:	682b      	ldr	r3, [r5, #0]
 80051d6:	b103      	cbz	r3, 80051da <_lseek_r+0x1e>
 80051d8:	6023      	str	r3, [r4, #0]
 80051da:	bd38      	pop	{r3, r4, r5, pc}
 80051dc:	200015fc 	.word	0x200015fc

080051e0 <_malloc_usable_size_r>:
 80051e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80051e4:	1f18      	subs	r0, r3, #4
 80051e6:	2b00      	cmp	r3, #0
 80051e8:	bfbc      	itt	lt
 80051ea:	580b      	ldrlt	r3, [r1, r0]
 80051ec:	18c0      	addlt	r0, r0, r3
 80051ee:	4770      	bx	lr

080051f0 <_read_r>:
 80051f0:	b538      	push	{r3, r4, r5, lr}
 80051f2:	4604      	mov	r4, r0
 80051f4:	4608      	mov	r0, r1
 80051f6:	4611      	mov	r1, r2
 80051f8:	2200      	movs	r2, #0
 80051fa:	4d05      	ldr	r5, [pc, #20]	; (8005210 <_read_r+0x20>)
 80051fc:	602a      	str	r2, [r5, #0]
 80051fe:	461a      	mov	r2, r3
 8005200:	f7fb ff33 	bl	800106a <_read>
 8005204:	1c43      	adds	r3, r0, #1
 8005206:	d102      	bne.n	800520e <_read_r+0x1e>
 8005208:	682b      	ldr	r3, [r5, #0]
 800520a:	b103      	cbz	r3, 800520e <_read_r+0x1e>
 800520c:	6023      	str	r3, [r4, #0]
 800520e:	bd38      	pop	{r3, r4, r5, pc}
 8005210:	200015fc 	.word	0x200015fc

08005214 <_gettimeofday>:
 8005214:	2258      	movs	r2, #88	; 0x58
 8005216:	4b02      	ldr	r3, [pc, #8]	; (8005220 <_gettimeofday+0xc>)
 8005218:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800521c:	601a      	str	r2, [r3, #0]
 800521e:	4770      	bx	lr
 8005220:	200015fc 	.word	0x200015fc

08005224 <_init>:
 8005224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005226:	bf00      	nop
 8005228:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800522a:	bc08      	pop	{r3}
 800522c:	469e      	mov	lr, r3
 800522e:	4770      	bx	lr

08005230 <_fini>:
 8005230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005232:	bf00      	nop
 8005234:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005236:	bc08      	pop	{r3}
 8005238:	469e      	mov	lr, r3
 800523a:	4770      	bx	lr

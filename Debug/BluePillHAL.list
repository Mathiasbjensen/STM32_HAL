
BluePillHAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004ddc  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001e4  08004eec  08004eec  00014eec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080050d0  080050d0  000200fc  2**0
                  CONTENTS
  4 .ARM          00000000  080050d0  080050d0  000200fc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080050d0  080050d0  000200fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080050d0  080050d0  000150d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080050d4  080050d4  000150d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000fc  20000000  080050d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001224  200000fc  080051d4  000200fc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20001320  080051d4  00021320  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   000128ea  00000000  00000000  00020125  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002e08  00000000  00000000  00032a0f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000010e0  00000000  00000000  00035818  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000f98  00000000  00000000  000368f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019cb5  00000000  00000000  00037890  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00010b05  00000000  00000000  00051545  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000939c7  00000000  00000000  0006204a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f5a11  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005150  00000000  00000000  000f5a64  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         00000024  00000000  00000000  000fabb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      0000004e  00000000  00000000  000fabd8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200000fc 	.word	0x200000fc
 800012c:	00000000 	.word	0x00000000
 8000130:	08004ed4 	.word	0x08004ed4

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000100 	.word	0x20000100
 800014c:	08004ed4 	.word	0x08004ed4

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <vApplicationGetIdleTaskMemory>:
 8000160:	b480      	push	{r7}
 8000162:	b085      	sub	sp, #20
 8000164:	af00      	add	r7, sp, #0
 8000166:	60f8      	str	r0, [r7, #12]
 8000168:	60b9      	str	r1, [r7, #8]
 800016a:	607a      	str	r2, [r7, #4]
 800016c:	68fb      	ldr	r3, [r7, #12]
 800016e:	4a06      	ldr	r2, [pc, #24]	; (8000188 <vApplicationGetIdleTaskMemory+0x28>)
 8000170:	601a      	str	r2, [r3, #0]
 8000172:	68bb      	ldr	r3, [r7, #8]
 8000174:	4a05      	ldr	r2, [pc, #20]	; (800018c <vApplicationGetIdleTaskMemory+0x2c>)
 8000176:	601a      	str	r2, [r3, #0]
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	2280      	movs	r2, #128	; 0x80
 800017c:	601a      	str	r2, [r3, #0]
 800017e:	bf00      	nop
 8000180:	3714      	adds	r7, #20
 8000182:	46bd      	mov	sp, r7
 8000184:	bc80      	pop	{r7}
 8000186:	4770      	bx	lr
 8000188:	20000118 	.word	0x20000118
 800018c:	2000016c 	.word	0x2000016c

08000190 <SARA_Init>:
	HAL_UART_Receive(&huart1, msg, 60, 10)

}*/


void SARA_Init() {
 8000190:	b580      	push	{r7, lr}
 8000192:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARApause, strlen(SARApause), 10);
 8000194:	482b      	ldr	r0, [pc, #172]	; (8000244 <SARA_Init+0xb4>)
 8000196:	f7ff ffdb 	bl	8000150 <strlen>
 800019a:	4603      	mov	r3, r0
 800019c:	b29a      	uxth	r2, r3
 800019e:	230a      	movs	r3, #10
 80001a0:	4928      	ldr	r1, [pc, #160]	; (8000244 <SARA_Init+0xb4>)
 80001a2:	4829      	ldr	r0, [pc, #164]	; (8000248 <SARA_Init+0xb8>)
 80001a4:	f002 f835 	bl	8002212 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001a8:	2364      	movs	r3, #100	; 0x64
 80001aa:	2280      	movs	r2, #128	; 0x80
 80001ac:	4927      	ldr	r1, [pc, #156]	; (800024c <SARA_Init+0xbc>)
 80001ae:	4826      	ldr	r0, [pc, #152]	; (8000248 <SARA_Init+0xb8>)
 80001b0:	f002 f8c1 	bl	8002336 <HAL_UART_Receive>
	osDelay(500);
 80001b4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001b8:	f002 fa9e 	bl	80026f8 <osDelay>
	HAL_UART_Transmit(&huart1, SARAumnoprof, strlen(SARAumnoprof), 10);
 80001bc:	4824      	ldr	r0, [pc, #144]	; (8000250 <SARA_Init+0xc0>)
 80001be:	f7ff ffc7 	bl	8000150 <strlen>
 80001c2:	4603      	mov	r3, r0
 80001c4:	b29a      	uxth	r2, r3
 80001c6:	230a      	movs	r3, #10
 80001c8:	4921      	ldr	r1, [pc, #132]	; (8000250 <SARA_Init+0xc0>)
 80001ca:	481f      	ldr	r0, [pc, #124]	; (8000248 <SARA_Init+0xb8>)
 80001cc:	f002 f821 	bl	8002212 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001d0:	2364      	movs	r3, #100	; 0x64
 80001d2:	2280      	movs	r2, #128	; 0x80
 80001d4:	491d      	ldr	r1, [pc, #116]	; (800024c <SARA_Init+0xbc>)
 80001d6:	481c      	ldr	r0, [pc, #112]	; (8000248 <SARA_Init+0xb8>)
 80001d8:	f002 f8ad 	bl	8002336 <HAL_UART_Receive>
	osDelay(500);
 80001dc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001e0:	f002 fa8a 	bl	80026f8 <osDelay>
	//HAL_UART_Transmit(&huart1, cereg, strlen(cereg), 10);
	//osDelay(250);
	HAL_UART_Transmit(&huart1, SARAcops, strlen(SARAcops), 10);
 80001e4:	481b      	ldr	r0, [pc, #108]	; (8000254 <SARA_Init+0xc4>)
 80001e6:	f7ff ffb3 	bl	8000150 <strlen>
 80001ea:	4603      	mov	r3, r0
 80001ec:	b29a      	uxth	r2, r3
 80001ee:	230a      	movs	r3, #10
 80001f0:	4918      	ldr	r1, [pc, #96]	; (8000254 <SARA_Init+0xc4>)
 80001f2:	4815      	ldr	r0, [pc, #84]	; (8000248 <SARA_Init+0xb8>)
 80001f4:	f002 f80d 	bl	8002212 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001f8:	2364      	movs	r3, #100	; 0x64
 80001fa:	2280      	movs	r2, #128	; 0x80
 80001fc:	4913      	ldr	r1, [pc, #76]	; (800024c <SARA_Init+0xbc>)
 80001fe:	4812      	ldr	r0, [pc, #72]	; (8000248 <SARA_Init+0xb8>)
 8000200:	f002 f899 	bl	8002336 <HAL_UART_Receive>
	osDelay(500);
 8000204:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000208:	f002 fa76 	bl	80026f8 <osDelay>
	HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 10);
 800020c:	4812      	ldr	r0, [pc, #72]	; (8000258 <SARA_Init+0xc8>)
 800020e:	f7ff ff9f 	bl	8000150 <strlen>
 8000212:	4603      	mov	r3, r0
 8000214:	b29a      	uxth	r2, r3
 8000216:	230a      	movs	r3, #10
 8000218:	490f      	ldr	r1, [pc, #60]	; (8000258 <SARA_Init+0xc8>)
 800021a:	480b      	ldr	r0, [pc, #44]	; (8000248 <SARA_Init+0xb8>)
 800021c:	f001 fff9 	bl	8002212 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000220:	2364      	movs	r3, #100	; 0x64
 8000222:	2280      	movs	r2, #128	; 0x80
 8000224:	4909      	ldr	r1, [pc, #36]	; (800024c <SARA_Init+0xbc>)
 8000226:	4808      	ldr	r0, [pc, #32]	; (8000248 <SARA_Init+0xb8>)
 8000228:	f002 f885 	bl	8002336 <HAL_UART_Receive>
	osDelay(500);
 800022c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000230:	f002 fa62 	bl	80026f8 <osDelay>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000234:	2364      	movs	r3, #100	; 0x64
 8000236:	2280      	movs	r2, #128	; 0x80
 8000238:	4904      	ldr	r1, [pc, #16]	; (800024c <SARA_Init+0xbc>)
 800023a:	4803      	ldr	r0, [pc, #12]	; (8000248 <SARA_Init+0xb8>)
 800023c:	f002 f87b 	bl	8002336 <HAL_UART_Receive>

}
 8000240:	bf00      	nop
 8000242:	bd80      	pop	{r7, pc}
 8000244:	20000000 	.word	0x20000000
 8000248:	20001210 	.word	0x20001210
 800024c:	20001188 	.word	0x20001188
 8000250:	20000008 	.word	0x20000008
 8000254:	2000001c 	.word	0x2000001c
 8000258:	2000002c 	.word	0x2000002c

0800025c <nemeus_Power_Cycle>:

void nemeus_Power_Cycle() {
 800025c:	b580      	push	{r7, lr}
 800025e:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8000260:	2200      	movs	r2, #0
 8000262:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000266:	4827      	ldr	r0, [pc, #156]	; (8000304 <nemeus_Power_Cycle+0xa8>)
 8000268:	f001 f8c0 	bl	80013ec <HAL_GPIO_WritePin>
    osDelay(1500);
 800026c:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8000270:	f002 fa42 	bl	80026f8 <osDelay>
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000274:	2201      	movs	r2, #1
 8000276:	f44f 7180 	mov.w	r1, #256	; 0x100
 800027a:	4822      	ldr	r0, [pc, #136]	; (8000304 <nemeus_Power_Cycle+0xa8>)
 800027c:	f001 f8b6 	bl	80013ec <HAL_GPIO_WritePin>
	//osDelay(150);

	HAL_UART_Transmit(&huart3, syncLora, strlen(syncLora), 10);
 8000280:	4821      	ldr	r0, [pc, #132]	; (8000308 <nemeus_Power_Cycle+0xac>)
 8000282:	f7ff ff65 	bl	8000150 <strlen>
 8000286:	4603      	mov	r3, r0
 8000288:	b29a      	uxth	r2, r3
 800028a:	230a      	movs	r3, #10
 800028c:	491e      	ldr	r1, [pc, #120]	; (8000308 <nemeus_Power_Cycle+0xac>)
 800028e:	481f      	ldr	r0, [pc, #124]	; (800030c <nemeus_Power_Cycle+0xb0>)
 8000290:	f001 ffbf 	bl	8002212 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 8000294:	2364      	movs	r3, #100	; 0x64
 8000296:	2280      	movs	r2, #128	; 0x80
 8000298:	491d      	ldr	r1, [pc, #116]	; (8000310 <nemeus_Power_Cycle+0xb4>)
 800029a:	481c      	ldr	r0, [pc, #112]	; (800030c <nemeus_Power_Cycle+0xb0>)
 800029c:	f002 f84b 	bl	8002336 <HAL_UART_Receive>
	osDelay(50);
 80002a0:	2032      	movs	r0, #50	; 0x32
 80002a2:	f002 fa29 	bl	80026f8 <osDelay>

	HAL_UART_Transmit(&huart3, beginLora, strlen(beginLora), 10);
 80002a6:	481b      	ldr	r0, [pc, #108]	; (8000314 <nemeus_Power_Cycle+0xb8>)
 80002a8:	f7ff ff52 	bl	8000150 <strlen>
 80002ac:	4603      	mov	r3, r0
 80002ae:	b29a      	uxth	r2, r3
 80002b0:	230a      	movs	r3, #10
 80002b2:	4918      	ldr	r1, [pc, #96]	; (8000314 <nemeus_Power_Cycle+0xb8>)
 80002b4:	4815      	ldr	r0, [pc, #84]	; (800030c <nemeus_Power_Cycle+0xb0>)
 80002b6:	f001 ffac 	bl	8002212 <HAL_UART_Transmit>
	osDelay(3000);
 80002ba:	f640 30b8 	movw	r0, #3000	; 0xbb8
 80002be:	f002 fa1b 	bl	80026f8 <osDelay>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002c2:	2364      	movs	r3, #100	; 0x64
 80002c4:	2280      	movs	r2, #128	; 0x80
 80002c6:	4912      	ldr	r1, [pc, #72]	; (8000310 <nemeus_Power_Cycle+0xb4>)
 80002c8:	4810      	ldr	r0, [pc, #64]	; (800030c <nemeus_Power_Cycle+0xb0>)
 80002ca:	f002 f834 	bl	8002336 <HAL_UART_Receive>

	HAL_UART_Transmit(&huart3, beginSigfox, strlen(beginSigfox), 10);
 80002ce:	4812      	ldr	r0, [pc, #72]	; (8000318 <nemeus_Power_Cycle+0xbc>)
 80002d0:	f7ff ff3e 	bl	8000150 <strlen>
 80002d4:	4603      	mov	r3, r0
 80002d6:	b29a      	uxth	r2, r3
 80002d8:	230a      	movs	r3, #10
 80002da:	490f      	ldr	r1, [pc, #60]	; (8000318 <nemeus_Power_Cycle+0xbc>)
 80002dc:	480b      	ldr	r0, [pc, #44]	; (800030c <nemeus_Power_Cycle+0xb0>)
 80002de:	f001 ff98 	bl	8002212 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002e2:	2364      	movs	r3, #100	; 0x64
 80002e4:	2280      	movs	r2, #128	; 0x80
 80002e6:	490a      	ldr	r1, [pc, #40]	; (8000310 <nemeus_Power_Cycle+0xb4>)
 80002e8:	4808      	ldr	r0, [pc, #32]	; (800030c <nemeus_Power_Cycle+0xb0>)
 80002ea:	f002 f824 	bl	8002336 <HAL_UART_Receive>
	osDelay(50);
 80002ee:	2032      	movs	r0, #50	; 0x32
 80002f0:	f002 fa02 	bl	80026f8 <osDelay>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002f4:	2364      	movs	r3, #100	; 0x64
 80002f6:	2280      	movs	r2, #128	; 0x80
 80002f8:	4905      	ldr	r1, [pc, #20]	; (8000310 <nemeus_Power_Cycle+0xb4>)
 80002fa:	4804      	ldr	r0, [pc, #16]	; (800030c <nemeus_Power_Cycle+0xb0>)
 80002fc:	f002 f81b 	bl	8002336 <HAL_UART_Receive>


}
 8000300:	bf00      	nop
 8000302:	bd80      	pop	{r7, pc}
 8000304:	40010800 	.word	0x40010800
 8000308:	2000005c 	.word	0x2000005c
 800030c:	20001148 	.word	0x20001148
 8000310:	20001188 	.word	0x20001188
 8000314:	20000068 	.word	0x20000068
 8000318:	20000074 	.word	0x20000074

0800031c <SARA_ChangeTech>:
void SARA_Get_Measurement(uint8_t * cmd){
	HAL_UART_Transmit(&huart1, cmd, strlen(cmd), 10);
	HAL_UART_Receive(&huart1, SARAresult, 128, 100);
}

void SARA_ChangeTech(uint8_t tech){ //tech should be 9 for NB
 800031c:	b580      	push	{r7, lr}
 800031e:	b084      	sub	sp, #16
 8000320:	af00      	add	r7, sp, #0
 8000322:	4603      	mov	r3, r0
 8000324:	71fb      	strb	r3, [r7, #7]

	if(tech == '7'){ //LTE-M
 8000326:	79fb      	ldrb	r3, [r7, #7]
 8000328:	2b37      	cmp	r3, #55	; 0x37
 800032a:	d10a      	bne.n	8000342 <SARA_ChangeTech+0x26>
		HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 10);
 800032c:	481a      	ldr	r0, [pc, #104]	; (8000398 <SARA_ChangeTech+0x7c>)
 800032e:	f7ff ff0f 	bl	8000150 <strlen>
 8000332:	4603      	mov	r3, r0
 8000334:	b29a      	uxth	r2, r3
 8000336:	230a      	movs	r3, #10
 8000338:	4917      	ldr	r1, [pc, #92]	; (8000398 <SARA_ChangeTech+0x7c>)
 800033a:	4818      	ldr	r0, [pc, #96]	; (800039c <SARA_ChangeTech+0x80>)
 800033c:	f001 ff69 	bl	8002212 <HAL_UART_Transmit>
 8000340:	e009      	b.n	8000356 <SARA_ChangeTech+0x3a>
	} else { //8 = NB IOT
		HAL_UART_Transmit(&huart1, SARAconnNB, strlen(SARAconnNB), 10);
 8000342:	4817      	ldr	r0, [pc, #92]	; (80003a0 <SARA_ChangeTech+0x84>)
 8000344:	f7ff ff04 	bl	8000150 <strlen>
 8000348:	4603      	mov	r3, r0
 800034a:	b29a      	uxth	r2, r3
 800034c:	230a      	movs	r3, #10
 800034e:	4914      	ldr	r1, [pc, #80]	; (80003a0 <SARA_ChangeTech+0x84>)
 8000350:	4812      	ldr	r0, [pc, #72]	; (800039c <SARA_ChangeTech+0x80>)
 8000352:	f001 ff5e 	bl	8002212 <HAL_UART_Transmit>
	}
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000356:	2364      	movs	r3, #100	; 0x64
 8000358:	2280      	movs	r2, #128	; 0x80
 800035a:	4912      	ldr	r1, [pc, #72]	; (80003a4 <SARA_ChangeTech+0x88>)
 800035c:	480f      	ldr	r0, [pc, #60]	; (800039c <SARA_ChangeTech+0x80>)
 800035e:	f001 ffea 	bl	8002336 <HAL_UART_Receive>

	uint8_t curTech; //if -1 then dont do following
	int i = 0;
 8000362:	2300      	movs	r3, #0
 8000364:	60fb      	str	r3, [r7, #12]
	do {
		SARA_CheckTech();
 8000366:	f000 f823 	bl	80003b0 <SARA_CheckTech>
		getResultParameterURAT(3, SARAtech);
 800036a:	490f      	ldr	r1, [pc, #60]	; (80003a8 <SARA_ChangeTech+0x8c>)
 800036c:	2003      	movs	r0, #3
 800036e:	f000 f83d 	bl	80003ec <getResultParameterURAT>
		//SARA_Get_Current_URAT(SARAtech);
		osDelay(1500);
 8000372:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8000376:	f002 f9bf 	bl	80026f8 <osDelay>
		i++;
 800037a:	68fb      	ldr	r3, [r7, #12]
 800037c:	3301      	adds	r3, #1
 800037e:	60fb      	str	r3, [r7, #12]
		//sendToESP(SARATechnology);
	} while (SARATechnology[0] != tech && i < 15);
 8000380:	4b0a      	ldr	r3, [pc, #40]	; (80003ac <SARA_ChangeTech+0x90>)
 8000382:	781b      	ldrb	r3, [r3, #0]
 8000384:	79fa      	ldrb	r2, [r7, #7]
 8000386:	429a      	cmp	r2, r3
 8000388:	d002      	beq.n	8000390 <SARA_ChangeTech+0x74>
 800038a:	68fb      	ldr	r3, [r7, #12]
 800038c:	2b0e      	cmp	r3, #14
 800038e:	ddea      	ble.n	8000366 <SARA_ChangeTech+0x4a>
}
 8000390:	bf00      	nop
 8000392:	3710      	adds	r7, #16
 8000394:	46bd      	mov	sp, r7
 8000396:	bd80      	pop	{r7, pc}
 8000398:	2000002c 	.word	0x2000002c
 800039c:	20001210 	.word	0x20001210
 80003a0:	20000038 	.word	0x20000038
 80003a4:	20001188 	.word	0x20001188
 80003a8:	20001298 	.word	0x20001298
 80003ac:	2000120c 	.word	0x2000120c

080003b0 <SARA_CheckTech>:

void SARA_CheckTech(){
 80003b0:	b580      	push	{r7, lr}
 80003b2:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARAcopsCheck, strlen(SARAcopsCheck), 10);
 80003b4:	480a      	ldr	r0, [pc, #40]	; (80003e0 <SARA_CheckTech+0x30>)
 80003b6:	f7ff fecb 	bl	8000150 <strlen>
 80003ba:	4603      	mov	r3, r0
 80003bc:	b29a      	uxth	r2, r3
 80003be:	230a      	movs	r3, #10
 80003c0:	4907      	ldr	r1, [pc, #28]	; (80003e0 <SARA_CheckTech+0x30>)
 80003c2:	4808      	ldr	r0, [pc, #32]	; (80003e4 <SARA_CheckTech+0x34>)
 80003c4:	f001 ff25 	bl	8002212 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, SARAtech, 30, 750);
 80003c8:	f240 23ee 	movw	r3, #750	; 0x2ee
 80003cc:	221e      	movs	r2, #30
 80003ce:	4906      	ldr	r1, [pc, #24]	; (80003e8 <SARA_CheckTech+0x38>)
 80003d0:	4804      	ldr	r0, [pc, #16]	; (80003e4 <SARA_CheckTech+0x34>)
 80003d2:	f001 ffb0 	bl	8002336 <HAL_UART_Receive>
	sendToESP(SARAtech);
 80003d6:	4804      	ldr	r0, [pc, #16]	; (80003e8 <SARA_CheckTech+0x38>)
 80003d8:	f000 fa10 	bl	80007fc <sendToESP>
}
 80003dc:	bf00      	nop
 80003de:	bd80      	pop	{r7, pc}
 80003e0:	20000044 	.word	0x20000044
 80003e4:	20001210 	.word	0x20001210
 80003e8:	20001298 	.word	0x20001298

080003ec <getResultParameterURAT>:

}
*/


void getResultParameterURAT(int nParam, uint8_t * msg){
 80003ec:	b480      	push	{r7}
 80003ee:	b085      	sub	sp, #20
 80003f0:	af00      	add	r7, sp, #0
 80003f2:	6078      	str	r0, [r7, #4]
 80003f4:	6039      	str	r1, [r7, #0]
	int commaCnt = 0;
 80003f6:	2300      	movs	r3, #0
 80003f8:	60fb      	str	r3, [r7, #12]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 80003fa:	2300      	movs	r3, #0
 80003fc:	60bb      	str	r3, [r7, #8]
	while (msg[i] != '\0'){
 80003fe:	e01e      	b.n	800043e <getResultParameterURAT+0x52>
		if(msg[i] == ',' && commaCnt == nParam-1){
 8000400:	68bb      	ldr	r3, [r7, #8]
 8000402:	683a      	ldr	r2, [r7, #0]
 8000404:	4413      	add	r3, r2
 8000406:	781b      	ldrb	r3, [r3, #0]
 8000408:	2b2c      	cmp	r3, #44	; 0x2c
 800040a:	d10c      	bne.n	8000426 <getResultParameterURAT+0x3a>
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	3b01      	subs	r3, #1
 8000410:	68fa      	ldr	r2, [r7, #12]
 8000412:	429a      	cmp	r2, r3
 8000414:	d107      	bne.n	8000426 <getResultParameterURAT+0x3a>
			SARATechnology[0] = msg[i+1];
 8000416:	68bb      	ldr	r3, [r7, #8]
 8000418:	3301      	adds	r3, #1
 800041a:	683a      	ldr	r2, [r7, #0]
 800041c:	4413      	add	r3, r2
 800041e:	781a      	ldrb	r2, [r3, #0]
 8000420:	4b0c      	ldr	r3, [pc, #48]	; (8000454 <getResultParameterURAT+0x68>)
 8000422:	701a      	strb	r2, [r3, #0]
			return;
 8000424:	e011      	b.n	800044a <getResultParameterURAT+0x5e>
		} else if(msg[i] == ','){
 8000426:	68bb      	ldr	r3, [r7, #8]
 8000428:	683a      	ldr	r2, [r7, #0]
 800042a:	4413      	add	r3, r2
 800042c:	781b      	ldrb	r3, [r3, #0]
 800042e:	2b2c      	cmp	r3, #44	; 0x2c
 8000430:	d102      	bne.n	8000438 <getResultParameterURAT+0x4c>
			commaCnt++;
 8000432:	68fb      	ldr	r3, [r7, #12]
 8000434:	3301      	adds	r3, #1
 8000436:	60fb      	str	r3, [r7, #12]
			//sendToESP(testing);
		}
		i++;
 8000438:	68bb      	ldr	r3, [r7, #8]
 800043a:	3301      	adds	r3, #1
 800043c:	60bb      	str	r3, [r7, #8]
	while (msg[i] != '\0'){
 800043e:	68bb      	ldr	r3, [r7, #8]
 8000440:	683a      	ldr	r2, [r7, #0]
 8000442:	4413      	add	r3, r2
 8000444:	781b      	ldrb	r3, [r3, #0]
 8000446:	2b00      	cmp	r3, #0
 8000448:	d1da      	bne.n	8000400 <getResultParameterURAT+0x14>
		//osDelay(400);
	}
}
 800044a:	3714      	adds	r7, #20
 800044c:	46bd      	mov	sp, r7
 800044e:	bc80      	pop	{r7}
 8000450:	4770      	bx	lr
 8000452:	bf00      	nop
 8000454:	2000120c 	.word	0x2000120c

08000458 <getResultParameterCESQ>:


void getResultParameterCESQ(int nParam, uint8_t * msg){
 8000458:	b480      	push	{r7}
 800045a:	b087      	sub	sp, #28
 800045c:	af00      	add	r7, sp, #0
 800045e:	6078      	str	r0, [r7, #4]
 8000460:	6039      	str	r1, [r7, #0]
	int commaCnt = 0;
 8000462:	2300      	movs	r3, #0
 8000464:	617b      	str	r3, [r7, #20]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 8000466:	2300      	movs	r3, #0
 8000468:	613b      	str	r3, [r7, #16]
	int j = 1;
 800046a:	2301      	movs	r3, #1
 800046c:	60fb      	str	r3, [r7, #12]
	while (msg[i] != '\0'){
 800046e:	e03b      	b.n	80004e8 <getResultParameterCESQ+0x90>
		if(msg[i] == ',' && commaCnt == nParam-1){
 8000470:	693b      	ldr	r3, [r7, #16]
 8000472:	683a      	ldr	r2, [r7, #0]
 8000474:	4413      	add	r3, r2
 8000476:	781b      	ldrb	r3, [r3, #0]
 8000478:	2b2c      	cmp	r3, #44	; 0x2c
 800047a:	d129      	bne.n	80004d0 <getResultParameterCESQ+0x78>
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	3b01      	subs	r3, #1
 8000480:	697a      	ldr	r2, [r7, #20]
 8000482:	429a      	cmp	r2, r3
 8000484:	d124      	bne.n	80004d0 <getResultParameterCESQ+0x78>
			while (j <= 5 && msg[i+j] != '\r' && msg[i+j] != '\n'){
 8000486:	e00d      	b.n	80004a4 <getResultParameterCESQ+0x4c>
				SARARsrpRsrq[j-1] = msg[i+j];
 8000488:	693a      	ldr	r2, [r7, #16]
 800048a:	68fb      	ldr	r3, [r7, #12]
 800048c:	4413      	add	r3, r2
 800048e:	461a      	mov	r2, r3
 8000490:	683b      	ldr	r3, [r7, #0]
 8000492:	441a      	add	r2, r3
 8000494:	68fb      	ldr	r3, [r7, #12]
 8000496:	3b01      	subs	r3, #1
 8000498:	7811      	ldrb	r1, [r2, #0]
 800049a:	4a19      	ldr	r2, [pc, #100]	; (8000500 <getResultParameterCESQ+0xa8>)
 800049c:	54d1      	strb	r1, [r2, r3]
				j++;
 800049e:	68fb      	ldr	r3, [r7, #12]
 80004a0:	3301      	adds	r3, #1
 80004a2:	60fb      	str	r3, [r7, #12]
			while (j <= 5 && msg[i+j] != '\r' && msg[i+j] != '\n'){
 80004a4:	68fb      	ldr	r3, [r7, #12]
 80004a6:	2b05      	cmp	r3, #5
 80004a8:	dc25      	bgt.n	80004f6 <getResultParameterCESQ+0x9e>
 80004aa:	693a      	ldr	r2, [r7, #16]
 80004ac:	68fb      	ldr	r3, [r7, #12]
 80004ae:	4413      	add	r3, r2
 80004b0:	461a      	mov	r2, r3
 80004b2:	683b      	ldr	r3, [r7, #0]
 80004b4:	4413      	add	r3, r2
 80004b6:	781b      	ldrb	r3, [r3, #0]
 80004b8:	2b0d      	cmp	r3, #13
 80004ba:	d01c      	beq.n	80004f6 <getResultParameterCESQ+0x9e>
 80004bc:	693a      	ldr	r2, [r7, #16]
 80004be:	68fb      	ldr	r3, [r7, #12]
 80004c0:	4413      	add	r3, r2
 80004c2:	461a      	mov	r2, r3
 80004c4:	683b      	ldr	r3, [r7, #0]
 80004c6:	4413      	add	r3, r2
 80004c8:	781b      	ldrb	r3, [r3, #0]
 80004ca:	2b0a      	cmp	r3, #10
 80004cc:	d1dc      	bne.n	8000488 <getResultParameterCESQ+0x30>
			}
			return;
 80004ce:	e012      	b.n	80004f6 <getResultParameterCESQ+0x9e>
		} else if(msg[i] == ','){
 80004d0:	693b      	ldr	r3, [r7, #16]
 80004d2:	683a      	ldr	r2, [r7, #0]
 80004d4:	4413      	add	r3, r2
 80004d6:	781b      	ldrb	r3, [r3, #0]
 80004d8:	2b2c      	cmp	r3, #44	; 0x2c
 80004da:	d102      	bne.n	80004e2 <getResultParameterCESQ+0x8a>
			commaCnt++;
 80004dc:	697b      	ldr	r3, [r7, #20]
 80004de:	3301      	adds	r3, #1
 80004e0:	617b      	str	r3, [r7, #20]
			//sendToESP(testing);
		}
		i++;
 80004e2:	693b      	ldr	r3, [r7, #16]
 80004e4:	3301      	adds	r3, #1
 80004e6:	613b      	str	r3, [r7, #16]
	while (msg[i] != '\0'){
 80004e8:	693b      	ldr	r3, [r7, #16]
 80004ea:	683a      	ldr	r2, [r7, #0]
 80004ec:	4413      	add	r3, r2
 80004ee:	781b      	ldrb	r3, [r3, #0]
 80004f0:	2b00      	cmp	r3, #0
 80004f2:	d1bd      	bne.n	8000470 <getResultParameterCESQ+0x18>
 80004f4:	e000      	b.n	80004f8 <getResultParameterCESQ+0xa0>
			return;
 80004f6:	bf00      	nop
		//osDelay(400);
	}
}
 80004f8:	371c      	adds	r7, #28
 80004fa:	46bd      	mov	sp, r7
 80004fc:	bc80      	pop	{r7}
 80004fe:	4770      	bx	lr
 8000500:	200012b8 	.word	0x200012b8

08000504 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000504:	b5b0      	push	{r4, r5, r7, lr}
 8000506:	b08a      	sub	sp, #40	; 0x28
 8000508:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800050a:	f000 fcd9 	bl	8000ec0 <HAL_Init>

  /* USER CODE BEGIN Init */

  srand(time(0));
 800050e:	2000      	movs	r0, #0
 8000510:	f003 fb3c 	bl	8003b8c <time>
 8000514:	4603      	mov	r3, r0
 8000516:	4618      	mov	r0, r3
 8000518:	f003 fa9a 	bl	8003a50 <srand>
  int x = rand();
 800051c:	f003 fac6 	bl	8003aac <rand>
 8000520:	6278      	str	r0, [r7, #36]	; 0x24
  int y = rand();
 8000522:	f003 fac3 	bl	8003aac <rand>
 8000526:	6238      	str	r0, [r7, #32]
  sprintf(randSeq, "%X", x%16);
 8000528:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800052a:	425a      	negs	r2, r3
 800052c:	f003 030f 	and.w	r3, r3, #15
 8000530:	f002 020f 	and.w	r2, r2, #15
 8000534:	bf58      	it	pl
 8000536:	4253      	negpl	r3, r2
 8000538:	461a      	mov	r2, r3
 800053a:	491c      	ldr	r1, [pc, #112]	; (80005ac <main+0xa8>)
 800053c:	481c      	ldr	r0, [pc, #112]	; (80005b0 <main+0xac>)
 800053e:	f003 faf5 	bl	8003b2c <siprintf>
  sprintf(stry, "%X", y%16);
 8000542:	6a3b      	ldr	r3, [r7, #32]
 8000544:	425a      	negs	r2, r3
 8000546:	f003 030f 	and.w	r3, r3, #15
 800054a:	f002 020f 	and.w	r2, r2, #15
 800054e:	bf58      	it	pl
 8000550:	4253      	negpl	r3, r2
 8000552:	461a      	mov	r2, r3
 8000554:	4915      	ldr	r1, [pc, #84]	; (80005ac <main+0xa8>)
 8000556:	4817      	ldr	r0, [pc, #92]	; (80005b4 <main+0xb0>)
 8000558:	f003 fae8 	bl	8003b2c <siprintf>
  strcat(randSeq, stry);
 800055c:	4915      	ldr	r1, [pc, #84]	; (80005b4 <main+0xb0>)
 800055e:	4814      	ldr	r0, [pc, #80]	; (80005b0 <main+0xac>)
 8000560:	f003 fb04 	bl	8003b6c <strcat>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000564:	f000 f82e 	bl	80005c4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000568:	f000 f8e6 	bl	8000738 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 800056c:	f000 f866 	bl	800063c <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 8000570:	f000 f88e 	bl	8000690 <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 8000574:	f000 f8b6 	bl	80006e4 <MX_USART3_UART_Init>
  /* USER CODE BEGIN 2 */

  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000578:	2201      	movs	r2, #1
 800057a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800057e:	480e      	ldr	r0, [pc, #56]	; (80005b8 <main+0xb4>)
 8000580:	f000 ff34 	bl	80013ec <HAL_GPIO_WritePin>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 8000584:	4b0d      	ldr	r3, [pc, #52]	; (80005bc <main+0xb8>)
 8000586:	1d3c      	adds	r4, r7, #4
 8000588:	461d      	mov	r5, r3
 800058a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800058c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800058e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000592:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8000596:	1d3b      	adds	r3, r7, #4
 8000598:	2100      	movs	r1, #0
 800059a:	4618      	mov	r0, r3
 800059c:	f002 f860 	bl	8002660 <osThreadCreate>
 80005a0:	4603      	mov	r3, r0
 80005a2:	4a07      	ldr	r2, [pc, #28]	; (80005c0 <main+0xbc>)
 80005a4:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 80005a6:	f002 f854 	bl	8002652 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80005aa:	e7fe      	b.n	80005aa <main+0xa6>
 80005ac:	08004ef8 	.word	0x08004ef8
 80005b0:	200012c0 	.word	0x200012c0
 80005b4:	20001254 	.word	0x20001254
 80005b8:	40010800 	.word	0x40010800
 80005bc:	08004efc 	.word	0x08004efc
 80005c0:	20001144 	.word	0x20001144

080005c4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80005c4:	b580      	push	{r7, lr}
 80005c6:	b090      	sub	sp, #64	; 0x40
 80005c8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80005ca:	f107 0318 	add.w	r3, r7, #24
 80005ce:	2228      	movs	r2, #40	; 0x28
 80005d0:	2100      	movs	r1, #0
 80005d2:	4618      	mov	r0, r3
 80005d4:	f003 fa34 	bl	8003a40 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80005d8:	1d3b      	adds	r3, r7, #4
 80005da:	2200      	movs	r2, #0
 80005dc:	601a      	str	r2, [r3, #0]
 80005de:	605a      	str	r2, [r3, #4]
 80005e0:	609a      	str	r2, [r3, #8]
 80005e2:	60da      	str	r2, [r3, #12]
 80005e4:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80005e6:	2302      	movs	r3, #2
 80005e8:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80005ea:	2301      	movs	r3, #1
 80005ec:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80005ee:	2310      	movs	r3, #16
 80005f0:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80005f2:	2300      	movs	r3, #0
 80005f4:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80005f6:	f107 0318 	add.w	r3, r7, #24
 80005fa:	4618      	mov	r0, r3
 80005fc:	f000 ff28 	bl	8001450 <HAL_RCC_OscConfig>
 8000600:	4603      	mov	r3, r0
 8000602:	2b00      	cmp	r3, #0
 8000604:	d001      	beq.n	800060a <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000606:	f000 f9fb 	bl	8000a00 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800060a:	230f      	movs	r3, #15
 800060c:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800060e:	2300      	movs	r3, #0
 8000610:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000612:	2300      	movs	r3, #0
 8000614:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000616:	2300      	movs	r3, #0
 8000618:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800061a:	2300      	movs	r3, #0
 800061c:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800061e:	1d3b      	adds	r3, r7, #4
 8000620:	2100      	movs	r1, #0
 8000622:	4618      	mov	r0, r3
 8000624:	f001 f994 	bl	8001950 <HAL_RCC_ClockConfig>
 8000628:	4603      	mov	r3, r0
 800062a:	2b00      	cmp	r3, #0
 800062c:	d001      	beq.n	8000632 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 800062e:	f000 f9e7 	bl	8000a00 <Error_Handler>
  }
}
 8000632:	bf00      	nop
 8000634:	3740      	adds	r7, #64	; 0x40
 8000636:	46bd      	mov	sp, r7
 8000638:	bd80      	pop	{r7, pc}
	...

0800063c <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 800063c:	b580      	push	{r7, lr}
 800063e:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000640:	4b11      	ldr	r3, [pc, #68]	; (8000688 <MX_USART1_UART_Init+0x4c>)
 8000642:	4a12      	ldr	r2, [pc, #72]	; (800068c <MX_USART1_UART_Init+0x50>)
 8000644:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 57600;
 8000646:	4b10      	ldr	r3, [pc, #64]	; (8000688 <MX_USART1_UART_Init+0x4c>)
 8000648:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 800064c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800064e:	4b0e      	ldr	r3, [pc, #56]	; (8000688 <MX_USART1_UART_Init+0x4c>)
 8000650:	2200      	movs	r2, #0
 8000652:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <MX_USART1_UART_Init+0x4c>)
 8000656:	2200      	movs	r2, #0
 8000658:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800065a:	4b0b      	ldr	r3, [pc, #44]	; (8000688 <MX_USART1_UART_Init+0x4c>)
 800065c:	2200      	movs	r2, #0
 800065e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000660:	4b09      	ldr	r3, [pc, #36]	; (8000688 <MX_USART1_UART_Init+0x4c>)
 8000662:	220c      	movs	r2, #12
 8000664:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000666:	4b08      	ldr	r3, [pc, #32]	; (8000688 <MX_USART1_UART_Init+0x4c>)
 8000668:	2200      	movs	r2, #0
 800066a:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800066c:	4b06      	ldr	r3, [pc, #24]	; (8000688 <MX_USART1_UART_Init+0x4c>)
 800066e:	2200      	movs	r2, #0
 8000670:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000672:	4805      	ldr	r0, [pc, #20]	; (8000688 <MX_USART1_UART_Init+0x4c>)
 8000674:	f001 fd80 	bl	8002178 <HAL_UART_Init>
 8000678:	4603      	mov	r3, r0
 800067a:	2b00      	cmp	r3, #0
 800067c:	d001      	beq.n	8000682 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 800067e:	f000 f9bf 	bl	8000a00 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000682:	bf00      	nop
 8000684:	bd80      	pop	{r7, pc}
 8000686:	bf00      	nop
 8000688:	20001210 	.word	0x20001210
 800068c:	40013800 	.word	0x40013800

08000690 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000690:	b580      	push	{r7, lr}
 8000692:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000694:	4b11      	ldr	r3, [pc, #68]	; (80006dc <MX_USART2_UART_Init+0x4c>)
 8000696:	4a12      	ldr	r2, [pc, #72]	; (80006e0 <MX_USART2_UART_Init+0x50>)
 8000698:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 57600;
 800069a:	4b10      	ldr	r3, [pc, #64]	; (80006dc <MX_USART2_UART_Init+0x4c>)
 800069c:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 80006a0:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80006a2:	4b0e      	ldr	r3, [pc, #56]	; (80006dc <MX_USART2_UART_Init+0x4c>)
 80006a4:	2200      	movs	r2, #0
 80006a6:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80006a8:	4b0c      	ldr	r3, [pc, #48]	; (80006dc <MX_USART2_UART_Init+0x4c>)
 80006aa:	2200      	movs	r2, #0
 80006ac:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80006ae:	4b0b      	ldr	r3, [pc, #44]	; (80006dc <MX_USART2_UART_Init+0x4c>)
 80006b0:	2200      	movs	r2, #0
 80006b2:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80006b4:	4b09      	ldr	r3, [pc, #36]	; (80006dc <MX_USART2_UART_Init+0x4c>)
 80006b6:	220c      	movs	r2, #12
 80006b8:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80006ba:	4b08      	ldr	r3, [pc, #32]	; (80006dc <MX_USART2_UART_Init+0x4c>)
 80006bc:	2200      	movs	r2, #0
 80006be:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80006c0:	4b06      	ldr	r3, [pc, #24]	; (80006dc <MX_USART2_UART_Init+0x4c>)
 80006c2:	2200      	movs	r2, #0
 80006c4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80006c6:	4805      	ldr	r0, [pc, #20]	; (80006dc <MX_USART2_UART_Init+0x4c>)
 80006c8:	f001 fd56 	bl	8002178 <HAL_UART_Init>
 80006cc:	4603      	mov	r3, r0
 80006ce:	2b00      	cmp	r3, #0
 80006d0:	d001      	beq.n	80006d6 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80006d2:	f000 f995 	bl	8000a00 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80006d6:	bf00      	nop
 80006d8:	bd80      	pop	{r7, pc}
 80006da:	bf00      	nop
 80006dc:	20001258 	.word	0x20001258
 80006e0:	40004400 	.word	0x40004400

080006e4 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80006e4:	b580      	push	{r7, lr}
 80006e6:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80006e8:	4b11      	ldr	r3, [pc, #68]	; (8000730 <MX_USART3_UART_Init+0x4c>)
 80006ea:	4a12      	ldr	r2, [pc, #72]	; (8000734 <MX_USART3_UART_Init+0x50>)
 80006ec:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 38400;
 80006ee:	4b10      	ldr	r3, [pc, #64]	; (8000730 <MX_USART3_UART_Init+0x4c>)
 80006f0:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 80006f4:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80006f6:	4b0e      	ldr	r3, [pc, #56]	; (8000730 <MX_USART3_UART_Init+0x4c>)
 80006f8:	2200      	movs	r2, #0
 80006fa:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80006fc:	4b0c      	ldr	r3, [pc, #48]	; (8000730 <MX_USART3_UART_Init+0x4c>)
 80006fe:	2200      	movs	r2, #0
 8000700:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8000702:	4b0b      	ldr	r3, [pc, #44]	; (8000730 <MX_USART3_UART_Init+0x4c>)
 8000704:	2200      	movs	r2, #0
 8000706:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8000708:	4b09      	ldr	r3, [pc, #36]	; (8000730 <MX_USART3_UART_Init+0x4c>)
 800070a:	220c      	movs	r2, #12
 800070c:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800070e:	4b08      	ldr	r3, [pc, #32]	; (8000730 <MX_USART3_UART_Init+0x4c>)
 8000710:	2200      	movs	r2, #0
 8000712:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8000714:	4b06      	ldr	r3, [pc, #24]	; (8000730 <MX_USART3_UART_Init+0x4c>)
 8000716:	2200      	movs	r2, #0
 8000718:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800071a:	4805      	ldr	r0, [pc, #20]	; (8000730 <MX_USART3_UART_Init+0x4c>)
 800071c:	f001 fd2c 	bl	8002178 <HAL_UART_Init>
 8000720:	4603      	mov	r3, r0
 8000722:	2b00      	cmp	r3, #0
 8000724:	d001      	beq.n	800072a <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8000726:	f000 f96b 	bl	8000a00 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800072a:	bf00      	nop
 800072c:	bd80      	pop	{r7, pc}
 800072e:	bf00      	nop
 8000730:	20001148 	.word	0x20001148
 8000734:	40004800 	.word	0x40004800

08000738 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000738:	b580      	push	{r7, lr}
 800073a:	b088      	sub	sp, #32
 800073c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800073e:	f107 0310 	add.w	r3, r7, #16
 8000742:	2200      	movs	r2, #0
 8000744:	601a      	str	r2, [r3, #0]
 8000746:	605a      	str	r2, [r3, #4]
 8000748:	609a      	str	r2, [r3, #8]
 800074a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800074c:	4b28      	ldr	r3, [pc, #160]	; (80007f0 <MX_GPIO_Init+0xb8>)
 800074e:	699b      	ldr	r3, [r3, #24]
 8000750:	4a27      	ldr	r2, [pc, #156]	; (80007f0 <MX_GPIO_Init+0xb8>)
 8000752:	f043 0310 	orr.w	r3, r3, #16
 8000756:	6193      	str	r3, [r2, #24]
 8000758:	4b25      	ldr	r3, [pc, #148]	; (80007f0 <MX_GPIO_Init+0xb8>)
 800075a:	699b      	ldr	r3, [r3, #24]
 800075c:	f003 0310 	and.w	r3, r3, #16
 8000760:	60fb      	str	r3, [r7, #12]
 8000762:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000764:	4b22      	ldr	r3, [pc, #136]	; (80007f0 <MX_GPIO_Init+0xb8>)
 8000766:	699b      	ldr	r3, [r3, #24]
 8000768:	4a21      	ldr	r2, [pc, #132]	; (80007f0 <MX_GPIO_Init+0xb8>)
 800076a:	f043 0304 	orr.w	r3, r3, #4
 800076e:	6193      	str	r3, [r2, #24]
 8000770:	4b1f      	ldr	r3, [pc, #124]	; (80007f0 <MX_GPIO_Init+0xb8>)
 8000772:	699b      	ldr	r3, [r3, #24]
 8000774:	f003 0304 	and.w	r3, r3, #4
 8000778:	60bb      	str	r3, [r7, #8]
 800077a:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800077c:	4b1c      	ldr	r3, [pc, #112]	; (80007f0 <MX_GPIO_Init+0xb8>)
 800077e:	699b      	ldr	r3, [r3, #24]
 8000780:	4a1b      	ldr	r2, [pc, #108]	; (80007f0 <MX_GPIO_Init+0xb8>)
 8000782:	f043 0308 	orr.w	r3, r3, #8
 8000786:	6193      	str	r3, [r2, #24]
 8000788:	4b19      	ldr	r3, [pc, #100]	; (80007f0 <MX_GPIO_Init+0xb8>)
 800078a:	699b      	ldr	r3, [r3, #24]
 800078c:	f003 0308 	and.w	r3, r3, #8
 8000790:	607b      	str	r3, [r7, #4]
 8000792:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8000794:	2200      	movs	r2, #0
 8000796:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800079a:	4816      	ldr	r0, [pc, #88]	; (80007f4 <MX_GPIO_Init+0xbc>)
 800079c:	f000 fe26 	bl	80013ec <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 80007a0:	2200      	movs	r2, #0
 80007a2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80007a6:	4814      	ldr	r0, [pc, #80]	; (80007f8 <MX_GPIO_Init+0xc0>)
 80007a8:	f000 fe20 	bl	80013ec <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 80007ac:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80007b0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80007b2:	2301      	movs	r3, #1
 80007b4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80007b6:	2300      	movs	r3, #0
 80007b8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80007ba:	2302      	movs	r3, #2
 80007bc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80007be:	f107 0310 	add.w	r3, r7, #16
 80007c2:	4619      	mov	r1, r3
 80007c4:	480b      	ldr	r0, [pc, #44]	; (80007f4 <MX_GPIO_Init+0xbc>)
 80007c6:	f000 fc8d 	bl	80010e4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 80007ca:	f44f 7380 	mov.w	r3, #256	; 0x100
 80007ce:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80007d0:	2301      	movs	r3, #1
 80007d2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80007d4:	2300      	movs	r3, #0
 80007d6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80007d8:	2302      	movs	r3, #2
 80007da:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80007dc:	f107 0310 	add.w	r3, r7, #16
 80007e0:	4619      	mov	r1, r3
 80007e2:	4805      	ldr	r0, [pc, #20]	; (80007f8 <MX_GPIO_Init+0xc0>)
 80007e4:	f000 fc7e 	bl	80010e4 <HAL_GPIO_Init>

}
 80007e8:	bf00      	nop
 80007ea:	3720      	adds	r7, #32
 80007ec:	46bd      	mov	sp, r7
 80007ee:	bd80      	pop	{r7, pc}
 80007f0:	40021000 	.word	0x40021000
 80007f4:	40011000 	.word	0x40011000
 80007f8:	40010800 	.word	0x40010800

080007fc <sendToESP>:

/* USER CODE BEGIN 4 */

void sendToESP(uint8_t * msg) {
 80007fc:	b580      	push	{r7, lr}
 80007fe:	b082      	sub	sp, #8
 8000800:	af00      	add	r7, sp, #0
 8000802:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart2, beginDelim, 1, 50);
 8000804:	2332      	movs	r3, #50	; 0x32
 8000806:	2201      	movs	r2, #1
 8000808:	490b      	ldr	r1, [pc, #44]	; (8000838 <sendToESP+0x3c>)
 800080a:	480c      	ldr	r0, [pc, #48]	; (800083c <sendToESP+0x40>)
 800080c:	f001 fd01 	bl	8002212 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, msg, strlen(msg), 50);
 8000810:	6878      	ldr	r0, [r7, #4]
 8000812:	f7ff fc9d 	bl	8000150 <strlen>
 8000816:	4603      	mov	r3, r0
 8000818:	b29a      	uxth	r2, r3
 800081a:	2332      	movs	r3, #50	; 0x32
 800081c:	6879      	ldr	r1, [r7, #4]
 800081e:	4807      	ldr	r0, [pc, #28]	; (800083c <sendToESP+0x40>)
 8000820:	f001 fcf7 	bl	8002212 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, endDelim, 1, 50);
 8000824:	2332      	movs	r3, #50	; 0x32
 8000826:	2201      	movs	r2, #1
 8000828:	4905      	ldr	r1, [pc, #20]	; (8000840 <sendToESP+0x44>)
 800082a:	4804      	ldr	r0, [pc, #16]	; (800083c <sendToESP+0x40>)
 800082c:	f001 fcf1 	bl	8002212 <HAL_UART_Transmit>
}
 8000830:	bf00      	nop
 8000832:	3708      	adds	r7, #8
 8000834:	46bd      	mov	sp, r7
 8000836:	bd80      	pop	{r7, pc}
 8000838:	20000080 	.word	0x20000080
 800083c:	20001258 	.word	0x20001258
 8000840:	20000084 	.word	0x20000084

08000844 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 8000844:	b590      	push	{r4, r7, lr}
 8000846:	b0cb      	sub	sp, #300	; 0x12c
 8000848:	af00      	add	r7, sp, #0
 800084a:	1d3b      	adds	r3, r7, #4
 800084c:	6018      	str	r0, [r3, #0]
  /* USER CODE BEGIN 5 */

  uint8_t test[] = "AT+COPS?\r\n";
 800084e:	4a5a      	ldr	r2, [pc, #360]	; (80009b8 <StartDefaultTask+0x174>)
 8000850:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8000854:	ca07      	ldmia	r2, {r0, r1, r2}
 8000856:	c303      	stmia	r3!, {r0, r1}
 8000858:	801a      	strh	r2, [r3, #0]
 800085a:	3302      	adds	r3, #2
 800085c:	0c12      	lsrs	r2, r2, #16
 800085e:	701a      	strb	r2, [r3, #0]
  sendToESP(test);
 8000860:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8000864:	4618      	mov	r0, r3
 8000866:	f7ff ffc9 	bl	80007fc <sendToESP>
  osDelay(4500);
 800086a:	f241 1094 	movw	r0, #4500	; 0x1194
 800086e:	f001 ff43 	bl	80026f8 <osDelay>
  SARA_Init();
 8000872:	f7ff fc8d 	bl	8000190 <SARA_Init>
  nemeus_Power_Cycle();
 8000876:	f7ff fcf1 	bl	800025c <nemeus_Power_Cycle>

  uint8_t testRN[] = "AT+MAC=SNDLCR\r\n";
 800087a:	4b50      	ldr	r3, [pc, #320]	; (80009bc <StartDefaultTask+0x178>)
 800087c:	f507 7484 	add.w	r4, r7, #264	; 0x108
 8000880:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000882:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  uint8_t sigfoxSend[23] = "AT+SF=SNDBIN,";
 8000886:	4b4e      	ldr	r3, [pc, #312]	; (80009c0 <StartDefaultTask+0x17c>)
 8000888:	f107 04f0 	add.w	r4, r7, #240	; 0xf0
 800088c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800088e:	c407      	stmia	r4!, {r0, r1, r2}
 8000890:	8023      	strh	r3, [r4, #0]
 8000892:	f107 03fe 	add.w	r3, r7, #254	; 0xfe
 8000896:	2200      	movs	r2, #0
 8000898:	601a      	str	r2, [r3, #0]
 800089a:	605a      	str	r2, [r3, #4]
 800089c:	721a      	strb	r2, [r3, #8]
  uint8_t sigfoxEnd[] = ",0\r\n";
 800089e:	4a49      	ldr	r2, [pc, #292]	; (80009c4 <StartDefaultTask+0x180>)
 80008a0:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 80008a4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80008a8:	6018      	str	r0, [r3, #0]
 80008aa:	3304      	adds	r3, #4
 80008ac:	7019      	strb	r1, [r3, #0]
  int sigFoxSeq = 0;
 80008ae:	2300      	movs	r3, #0
 80008b0:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
  uint8_t myInt[4];// = "0000"

  strcat(sigfoxSend, randSeq);
 80008b4:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 80008b8:	4943      	ldr	r1, [pc, #268]	; (80009c8 <StartDefaultTask+0x184>)
 80008ba:	4618      	mov	r0, r3
 80008bc:	f003 f956 	bl	8003b6c <strcat>
  strcat(sigfoxSend, myInt);
 80008c0:	f107 02e4 	add.w	r2, r7, #228	; 0xe4
 80008c4:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 80008c8:	4611      	mov	r1, r2
 80008ca:	4618      	mov	r0, r3
 80008cc:	f003 f94e 	bl	8003b6c <strcat>
  strcat(sigfoxSend, sigfoxEnd);
 80008d0:	f107 02e8 	add.w	r2, r7, #232	; 0xe8
 80008d4:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 80008d8:	4611      	mov	r1, r2
 80008da:	4618      	mov	r0, r3
 80008dc:	f003 f946 	bl	8003b6c <strcat>
  uint8_t SigFoxMessage[69];
  uint8_t saraMSG[69];

  for(;;)
  {
    osDelay(1000);
 80008e0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80008e4:	f001 ff08 	bl	80026f8 <osDelay>
    //sendToESP(test);
    HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 80008e8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80008ec:	4837      	ldr	r0, [pc, #220]	; (80009cc <StartDefaultTask+0x188>)
 80008ee:	f000 fd95 	bl	800141c <HAL_GPIO_TogglePin>
// **** SARA STUFF ****

    HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 80008f2:	4837      	ldr	r0, [pc, #220]	; (80009d0 <StartDefaultTask+0x18c>)
 80008f4:	f7ff fc2c 	bl	8000150 <strlen>
 80008f8:	4603      	mov	r3, r0
 80008fa:	b29a      	uxth	r2, r3
 80008fc:	2332      	movs	r3, #50	; 0x32
 80008fe:	4934      	ldr	r1, [pc, #208]	; (80009d0 <StartDefaultTask+0x18c>)
 8000900:	4834      	ldr	r0, [pc, #208]	; (80009d4 <StartDefaultTask+0x190>)
 8000902:	f001 fc86 	bl	8002212 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraMSG, 69, 50);
 8000906:	f107 010c 	add.w	r1, r7, #12
 800090a:	2332      	movs	r3, #50	; 0x32
 800090c:	2245      	movs	r2, #69	; 0x45
 800090e:	4831      	ldr	r0, [pc, #196]	; (80009d4 <StartDefaultTask+0x190>)
 8000910:	f001 fd11 	bl	8002336 <HAL_UART_Receive>
    getResultParameterCESQ(4, saraMSG);
 8000914:	f107 030c 	add.w	r3, r7, #12
 8000918:	4619      	mov	r1, r3
 800091a:	2004      	movs	r0, #4
 800091c:	f7ff fd9c 	bl	8000458 <getResultParameterCESQ>
	sendToESP(SARARsrpRsrq);
 8000920:	482d      	ldr	r0, [pc, #180]	; (80009d8 <StartDefaultTask+0x194>)
 8000922:	f7ff ff6b 	bl	80007fc <sendToESP>
	SARA_ChangeTech('9');
 8000926:	2039      	movs	r0, #57	; 0x39
 8000928:	f7ff fcf8 	bl	800031c <SARA_ChangeTech>

	osDelay(1000);
 800092c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000930:	f001 fee2 	bl	80026f8 <osDelay>
	HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 8000934:	4826      	ldr	r0, [pc, #152]	; (80009d0 <StartDefaultTask+0x18c>)
 8000936:	f7ff fc0b 	bl	8000150 <strlen>
 800093a:	4603      	mov	r3, r0
 800093c:	b29a      	uxth	r2, r3
 800093e:	2332      	movs	r3, #50	; 0x32
 8000940:	4923      	ldr	r1, [pc, #140]	; (80009d0 <StartDefaultTask+0x18c>)
 8000942:	4824      	ldr	r0, [pc, #144]	; (80009d4 <StartDefaultTask+0x190>)
 8000944:	f001 fc65 	bl	8002212 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, saraMSG, 69, 50);
 8000948:	f107 010c 	add.w	r1, r7, #12
 800094c:	2332      	movs	r3, #50	; 0x32
 800094e:	2245      	movs	r2, #69	; 0x45
 8000950:	4820      	ldr	r0, [pc, #128]	; (80009d4 <StartDefaultTask+0x190>)
 8000952:	f001 fcf0 	bl	8002336 <HAL_UART_Receive>
	getResultParameterCESQ(4, saraMSG);
 8000956:	f107 030c 	add.w	r3, r7, #12
 800095a:	4619      	mov	r1, r3
 800095c:	2004      	movs	r0, #4
 800095e:	f7ff fd7b 	bl	8000458 <getResultParameterCESQ>
	sendToESP(SARARsrpRsrq);
 8000962:	481d      	ldr	r0, [pc, #116]	; (80009d8 <StartDefaultTask+0x194>)
 8000964:	f7ff ff4a 	bl	80007fc <sendToESP>
	SARA_ChangeTech('7');
 8000968:	2037      	movs	r0, #55	; 0x37
 800096a:	f7ff fcd7 	bl	800031c <SARA_ChangeTech>
	HAL_UART_Transmit(&huart3, sigfoxSend, strlen(sigfoxSend), 50);
    HAL_UART_Receive(&huart3, SigFoxMessage, 69, 1500);
	sendToESP(SigFoxMessage);
	*/

    osDelay(1000);
 800096e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000972:	f001 fec1 	bl	80026f8 <osDelay>
    nemeus_Power_Cycle();
 8000976:	f7ff fc71 	bl	800025c <nemeus_Power_Cycle>

	osDelay(50);
 800097a:	2032      	movs	r0, #50	; 0x32
 800097c:	f001 febc 	bl	80026f8 <osDelay>
    memset(saraMSG, '\0', 69);
 8000980:	f107 030c 	add.w	r3, r7, #12
 8000984:	2245      	movs	r2, #69	; 0x45
 8000986:	2100      	movs	r1, #0
 8000988:	4618      	mov	r0, r3
 800098a:	f003 f859 	bl	8003a40 <memset>
	memset(SigFoxMessage, '\0', 69);
 800098e:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8000992:	2245      	movs	r2, #69	; 0x45
 8000994:	2100      	movs	r1, #0
 8000996:	4618      	mov	r0, r3
 8000998:	f003 f852 	bl	8003a40 <memset>
	memset(LoRaMessage, '\0', 69);
 800099c:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 80009a0:	2245      	movs	r2, #69	; 0x45
 80009a2:	2100      	movs	r1, #0
 80009a4:	4618      	mov	r0, r3
 80009a6:	f003 f84b 	bl	8003a40 <memset>
	sigFoxSeq++;
 80009aa:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 80009ae:	3301      	adds	r3, #1
 80009b0:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
  {
 80009b4:	e794      	b.n	80008e0 <StartDefaultTask+0x9c>
 80009b6:	bf00      	nop
 80009b8:	08004f18 	.word	0x08004f18
 80009bc:	08004f24 	.word	0x08004f24
 80009c0:	08004f34 	.word	0x08004f34
 80009c4:	08004f4c 	.word	0x08004f4c
 80009c8:	200012c0 	.word	0x200012c0
 80009cc:	40011000 	.word	0x40011000
 80009d0:	20000050 	.word	0x20000050
 80009d4:	20001210 	.word	0x20001210
 80009d8:	200012b8 	.word	0x200012b8

080009dc <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80009dc:	b580      	push	{r7, lr}
 80009de:	b082      	sub	sp, #8
 80009e0:	af00      	add	r7, sp, #0
 80009e2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 80009e4:	687b      	ldr	r3, [r7, #4]
 80009e6:	681b      	ldr	r3, [r3, #0]
 80009e8:	4a04      	ldr	r2, [pc, #16]	; (80009fc <HAL_TIM_PeriodElapsedCallback+0x20>)
 80009ea:	4293      	cmp	r3, r2
 80009ec:	d101      	bne.n	80009f2 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 80009ee:	f000 fa7d 	bl	8000eec <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80009f2:	bf00      	nop
 80009f4:	3708      	adds	r7, #8
 80009f6:	46bd      	mov	sp, r7
 80009f8:	bd80      	pop	{r7, pc}
 80009fa:	bf00      	nop
 80009fc:	40012c00 	.word	0x40012c00

08000a00 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000a00:	b480      	push	{r7}
 8000a02:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000a04:	b672      	cpsid	i
}
 8000a06:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000a08:	e7fe      	b.n	8000a08 <Error_Handler+0x8>
	...

08000a0c <HAL_MspInit>:
 8000a0c:	b580      	push	{r7, lr}
 8000a0e:	b084      	sub	sp, #16
 8000a10:	af00      	add	r7, sp, #0
 8000a12:	4b18      	ldr	r3, [pc, #96]	; (8000a74 <HAL_MspInit+0x68>)
 8000a14:	699b      	ldr	r3, [r3, #24]
 8000a16:	4a17      	ldr	r2, [pc, #92]	; (8000a74 <HAL_MspInit+0x68>)
 8000a18:	f043 0301 	orr.w	r3, r3, #1
 8000a1c:	6193      	str	r3, [r2, #24]
 8000a1e:	4b15      	ldr	r3, [pc, #84]	; (8000a74 <HAL_MspInit+0x68>)
 8000a20:	699b      	ldr	r3, [r3, #24]
 8000a22:	f003 0301 	and.w	r3, r3, #1
 8000a26:	60bb      	str	r3, [r7, #8]
 8000a28:	68bb      	ldr	r3, [r7, #8]
 8000a2a:	4b12      	ldr	r3, [pc, #72]	; (8000a74 <HAL_MspInit+0x68>)
 8000a2c:	69db      	ldr	r3, [r3, #28]
 8000a2e:	4a11      	ldr	r2, [pc, #68]	; (8000a74 <HAL_MspInit+0x68>)
 8000a30:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000a34:	61d3      	str	r3, [r2, #28]
 8000a36:	4b0f      	ldr	r3, [pc, #60]	; (8000a74 <HAL_MspInit+0x68>)
 8000a38:	69db      	ldr	r3, [r3, #28]
 8000a3a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000a3e:	607b      	str	r3, [r7, #4]
 8000a40:	687b      	ldr	r3, [r7, #4]
 8000a42:	2200      	movs	r2, #0
 8000a44:	210f      	movs	r1, #15
 8000a46:	f06f 0001 	mvn.w	r0, #1
 8000a4a:	f000 fb20 	bl	800108e <HAL_NVIC_SetPriority>
 8000a4e:	4b0a      	ldr	r3, [pc, #40]	; (8000a78 <HAL_MspInit+0x6c>)
 8000a50:	685b      	ldr	r3, [r3, #4]
 8000a52:	60fb      	str	r3, [r7, #12]
 8000a54:	68fb      	ldr	r3, [r7, #12]
 8000a56:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000a5a:	60fb      	str	r3, [r7, #12]
 8000a5c:	68fb      	ldr	r3, [r7, #12]
 8000a5e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000a62:	60fb      	str	r3, [r7, #12]
 8000a64:	4a04      	ldr	r2, [pc, #16]	; (8000a78 <HAL_MspInit+0x6c>)
 8000a66:	68fb      	ldr	r3, [r7, #12]
 8000a68:	6053      	str	r3, [r2, #4]
 8000a6a:	bf00      	nop
 8000a6c:	3710      	adds	r7, #16
 8000a6e:	46bd      	mov	sp, r7
 8000a70:	bd80      	pop	{r7, pc}
 8000a72:	bf00      	nop
 8000a74:	40021000 	.word	0x40021000
 8000a78:	40010000 	.word	0x40010000

08000a7c <HAL_UART_MspInit>:
 8000a7c:	b580      	push	{r7, lr}
 8000a7e:	b08c      	sub	sp, #48	; 0x30
 8000a80:	af00      	add	r7, sp, #0
 8000a82:	6078      	str	r0, [r7, #4]
 8000a84:	f107 0320 	add.w	r3, r7, #32
 8000a88:	2200      	movs	r2, #0
 8000a8a:	601a      	str	r2, [r3, #0]
 8000a8c:	605a      	str	r2, [r3, #4]
 8000a8e:	609a      	str	r2, [r3, #8]
 8000a90:	60da      	str	r2, [r3, #12]
 8000a92:	687b      	ldr	r3, [r7, #4]
 8000a94:	681b      	ldr	r3, [r3, #0]
 8000a96:	4a53      	ldr	r2, [pc, #332]	; (8000be4 <HAL_UART_MspInit+0x168>)
 8000a98:	4293      	cmp	r3, r2
 8000a9a:	d132      	bne.n	8000b02 <HAL_UART_MspInit+0x86>
 8000a9c:	4b52      	ldr	r3, [pc, #328]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000a9e:	699b      	ldr	r3, [r3, #24]
 8000aa0:	4a51      	ldr	r2, [pc, #324]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000aa2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000aa6:	6193      	str	r3, [r2, #24]
 8000aa8:	4b4f      	ldr	r3, [pc, #316]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000aaa:	699b      	ldr	r3, [r3, #24]
 8000aac:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000ab0:	61fb      	str	r3, [r7, #28]
 8000ab2:	69fb      	ldr	r3, [r7, #28]
 8000ab4:	4b4c      	ldr	r3, [pc, #304]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000ab6:	699b      	ldr	r3, [r3, #24]
 8000ab8:	4a4b      	ldr	r2, [pc, #300]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000aba:	f043 0304 	orr.w	r3, r3, #4
 8000abe:	6193      	str	r3, [r2, #24]
 8000ac0:	4b49      	ldr	r3, [pc, #292]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000ac2:	699b      	ldr	r3, [r3, #24]
 8000ac4:	f003 0304 	and.w	r3, r3, #4
 8000ac8:	61bb      	str	r3, [r7, #24]
 8000aca:	69bb      	ldr	r3, [r7, #24]
 8000acc:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000ad0:	623b      	str	r3, [r7, #32]
 8000ad2:	2302      	movs	r3, #2
 8000ad4:	627b      	str	r3, [r7, #36]	; 0x24
 8000ad6:	2303      	movs	r3, #3
 8000ad8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000ada:	f107 0320 	add.w	r3, r7, #32
 8000ade:	4619      	mov	r1, r3
 8000ae0:	4842      	ldr	r0, [pc, #264]	; (8000bec <HAL_UART_MspInit+0x170>)
 8000ae2:	f000 faff 	bl	80010e4 <HAL_GPIO_Init>
 8000ae6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000aea:	623b      	str	r3, [r7, #32]
 8000aec:	2300      	movs	r3, #0
 8000aee:	627b      	str	r3, [r7, #36]	; 0x24
 8000af0:	2300      	movs	r3, #0
 8000af2:	62bb      	str	r3, [r7, #40]	; 0x28
 8000af4:	f107 0320 	add.w	r3, r7, #32
 8000af8:	4619      	mov	r1, r3
 8000afa:	483c      	ldr	r0, [pc, #240]	; (8000bec <HAL_UART_MspInit+0x170>)
 8000afc:	f000 faf2 	bl	80010e4 <HAL_GPIO_Init>
 8000b00:	e06c      	b.n	8000bdc <HAL_UART_MspInit+0x160>
 8000b02:	687b      	ldr	r3, [r7, #4]
 8000b04:	681b      	ldr	r3, [r3, #0]
 8000b06:	4a3a      	ldr	r2, [pc, #232]	; (8000bf0 <HAL_UART_MspInit+0x174>)
 8000b08:	4293      	cmp	r3, r2
 8000b0a:	d130      	bne.n	8000b6e <HAL_UART_MspInit+0xf2>
 8000b0c:	4b36      	ldr	r3, [pc, #216]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b0e:	69db      	ldr	r3, [r3, #28]
 8000b10:	4a35      	ldr	r2, [pc, #212]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b12:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000b16:	61d3      	str	r3, [r2, #28]
 8000b18:	4b33      	ldr	r3, [pc, #204]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b1a:	69db      	ldr	r3, [r3, #28]
 8000b1c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000b20:	617b      	str	r3, [r7, #20]
 8000b22:	697b      	ldr	r3, [r7, #20]
 8000b24:	4b30      	ldr	r3, [pc, #192]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b26:	699b      	ldr	r3, [r3, #24]
 8000b28:	4a2f      	ldr	r2, [pc, #188]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b2a:	f043 0304 	orr.w	r3, r3, #4
 8000b2e:	6193      	str	r3, [r2, #24]
 8000b30:	4b2d      	ldr	r3, [pc, #180]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b32:	699b      	ldr	r3, [r3, #24]
 8000b34:	f003 0304 	and.w	r3, r3, #4
 8000b38:	613b      	str	r3, [r7, #16]
 8000b3a:	693b      	ldr	r3, [r7, #16]
 8000b3c:	2304      	movs	r3, #4
 8000b3e:	623b      	str	r3, [r7, #32]
 8000b40:	2302      	movs	r3, #2
 8000b42:	627b      	str	r3, [r7, #36]	; 0x24
 8000b44:	2303      	movs	r3, #3
 8000b46:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000b48:	f107 0320 	add.w	r3, r7, #32
 8000b4c:	4619      	mov	r1, r3
 8000b4e:	4827      	ldr	r0, [pc, #156]	; (8000bec <HAL_UART_MspInit+0x170>)
 8000b50:	f000 fac8 	bl	80010e4 <HAL_GPIO_Init>
 8000b54:	2308      	movs	r3, #8
 8000b56:	623b      	str	r3, [r7, #32]
 8000b58:	2300      	movs	r3, #0
 8000b5a:	627b      	str	r3, [r7, #36]	; 0x24
 8000b5c:	2300      	movs	r3, #0
 8000b5e:	62bb      	str	r3, [r7, #40]	; 0x28
 8000b60:	f107 0320 	add.w	r3, r7, #32
 8000b64:	4619      	mov	r1, r3
 8000b66:	4821      	ldr	r0, [pc, #132]	; (8000bec <HAL_UART_MspInit+0x170>)
 8000b68:	f000 fabc 	bl	80010e4 <HAL_GPIO_Init>
 8000b6c:	e036      	b.n	8000bdc <HAL_UART_MspInit+0x160>
 8000b6e:	687b      	ldr	r3, [r7, #4]
 8000b70:	681b      	ldr	r3, [r3, #0]
 8000b72:	4a20      	ldr	r2, [pc, #128]	; (8000bf4 <HAL_UART_MspInit+0x178>)
 8000b74:	4293      	cmp	r3, r2
 8000b76:	d131      	bne.n	8000bdc <HAL_UART_MspInit+0x160>
 8000b78:	4b1b      	ldr	r3, [pc, #108]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b7a:	69db      	ldr	r3, [r3, #28]
 8000b7c:	4a1a      	ldr	r2, [pc, #104]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b7e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000b82:	61d3      	str	r3, [r2, #28]
 8000b84:	4b18      	ldr	r3, [pc, #96]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b86:	69db      	ldr	r3, [r3, #28]
 8000b88:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8000b8c:	60fb      	str	r3, [r7, #12]
 8000b8e:	68fb      	ldr	r3, [r7, #12]
 8000b90:	4b15      	ldr	r3, [pc, #84]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b92:	699b      	ldr	r3, [r3, #24]
 8000b94:	4a14      	ldr	r2, [pc, #80]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b96:	f043 0308 	orr.w	r3, r3, #8
 8000b9a:	6193      	str	r3, [r2, #24]
 8000b9c:	4b12      	ldr	r3, [pc, #72]	; (8000be8 <HAL_UART_MspInit+0x16c>)
 8000b9e:	699b      	ldr	r3, [r3, #24]
 8000ba0:	f003 0308 	and.w	r3, r3, #8
 8000ba4:	60bb      	str	r3, [r7, #8]
 8000ba6:	68bb      	ldr	r3, [r7, #8]
 8000ba8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000bac:	623b      	str	r3, [r7, #32]
 8000bae:	2302      	movs	r3, #2
 8000bb0:	627b      	str	r3, [r7, #36]	; 0x24
 8000bb2:	2303      	movs	r3, #3
 8000bb4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000bb6:	f107 0320 	add.w	r3, r7, #32
 8000bba:	4619      	mov	r1, r3
 8000bbc:	480e      	ldr	r0, [pc, #56]	; (8000bf8 <HAL_UART_MspInit+0x17c>)
 8000bbe:	f000 fa91 	bl	80010e4 <HAL_GPIO_Init>
 8000bc2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000bc6:	623b      	str	r3, [r7, #32]
 8000bc8:	2300      	movs	r3, #0
 8000bca:	627b      	str	r3, [r7, #36]	; 0x24
 8000bcc:	2300      	movs	r3, #0
 8000bce:	62bb      	str	r3, [r7, #40]	; 0x28
 8000bd0:	f107 0320 	add.w	r3, r7, #32
 8000bd4:	4619      	mov	r1, r3
 8000bd6:	4808      	ldr	r0, [pc, #32]	; (8000bf8 <HAL_UART_MspInit+0x17c>)
 8000bd8:	f000 fa84 	bl	80010e4 <HAL_GPIO_Init>
 8000bdc:	bf00      	nop
 8000bde:	3730      	adds	r7, #48	; 0x30
 8000be0:	46bd      	mov	sp, r7
 8000be2:	bd80      	pop	{r7, pc}
 8000be4:	40013800 	.word	0x40013800
 8000be8:	40021000 	.word	0x40021000
 8000bec:	40010800 	.word	0x40010800
 8000bf0:	40004400 	.word	0x40004400
 8000bf4:	40004800 	.word	0x40004800
 8000bf8:	40010c00 	.word	0x40010c00

08000bfc <HAL_InitTick>:
 8000bfc:	b580      	push	{r7, lr}
 8000bfe:	b08c      	sub	sp, #48	; 0x30
 8000c00:	af00      	add	r7, sp, #0
 8000c02:	6078      	str	r0, [r7, #4]
 8000c04:	2300      	movs	r3, #0
 8000c06:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000c08:	2300      	movs	r3, #0
 8000c0a:	62bb      	str	r3, [r7, #40]	; 0x28
 8000c0c:	2200      	movs	r2, #0
 8000c0e:	6879      	ldr	r1, [r7, #4]
 8000c10:	2019      	movs	r0, #25
 8000c12:	f000 fa3c 	bl	800108e <HAL_NVIC_SetPriority>
 8000c16:	2019      	movs	r0, #25
 8000c18:	f000 fa55 	bl	80010c6 <HAL_NVIC_EnableIRQ>
 8000c1c:	4b1e      	ldr	r3, [pc, #120]	; (8000c98 <HAL_InitTick+0x9c>)
 8000c1e:	699b      	ldr	r3, [r3, #24]
 8000c20:	4a1d      	ldr	r2, [pc, #116]	; (8000c98 <HAL_InitTick+0x9c>)
 8000c22:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000c26:	6193      	str	r3, [r2, #24]
 8000c28:	4b1b      	ldr	r3, [pc, #108]	; (8000c98 <HAL_InitTick+0x9c>)
 8000c2a:	699b      	ldr	r3, [r3, #24]
 8000c2c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000c30:	60fb      	str	r3, [r7, #12]
 8000c32:	68fb      	ldr	r3, [r7, #12]
 8000c34:	f107 0210 	add.w	r2, r7, #16
 8000c38:	f107 0314 	add.w	r3, r7, #20
 8000c3c:	4611      	mov	r1, r2
 8000c3e:	4618      	mov	r0, r3
 8000c40:	f001 f802 	bl	8001c48 <HAL_RCC_GetClockConfig>
 8000c44:	f000 ffec 	bl	8001c20 <HAL_RCC_GetPCLK2Freq>
 8000c48:	62f8      	str	r0, [r7, #44]	; 0x2c
 8000c4a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000c4c:	4a13      	ldr	r2, [pc, #76]	; (8000c9c <HAL_InitTick+0xa0>)
 8000c4e:	fba2 2303 	umull	r2, r3, r2, r3
 8000c52:	0c9b      	lsrs	r3, r3, #18
 8000c54:	3b01      	subs	r3, #1
 8000c56:	62bb      	str	r3, [r7, #40]	; 0x28
 8000c58:	4b11      	ldr	r3, [pc, #68]	; (8000ca0 <HAL_InitTick+0xa4>)
 8000c5a:	4a12      	ldr	r2, [pc, #72]	; (8000ca4 <HAL_InitTick+0xa8>)
 8000c5c:	601a      	str	r2, [r3, #0]
 8000c5e:	4b10      	ldr	r3, [pc, #64]	; (8000ca0 <HAL_InitTick+0xa4>)
 8000c60:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000c64:	60da      	str	r2, [r3, #12]
 8000c66:	4a0e      	ldr	r2, [pc, #56]	; (8000ca0 <HAL_InitTick+0xa4>)
 8000c68:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000c6a:	6053      	str	r3, [r2, #4]
 8000c6c:	4b0c      	ldr	r3, [pc, #48]	; (8000ca0 <HAL_InitTick+0xa4>)
 8000c6e:	2200      	movs	r2, #0
 8000c70:	611a      	str	r2, [r3, #16]
 8000c72:	4b0b      	ldr	r3, [pc, #44]	; (8000ca0 <HAL_InitTick+0xa4>)
 8000c74:	2200      	movs	r2, #0
 8000c76:	609a      	str	r2, [r3, #8]
 8000c78:	4809      	ldr	r0, [pc, #36]	; (8000ca0 <HAL_InitTick+0xa4>)
 8000c7a:	f001 f833 	bl	8001ce4 <HAL_TIM_Base_Init>
 8000c7e:	4603      	mov	r3, r0
 8000c80:	2b00      	cmp	r3, #0
 8000c82:	d104      	bne.n	8000c8e <HAL_InitTick+0x92>
 8000c84:	4806      	ldr	r0, [pc, #24]	; (8000ca0 <HAL_InitTick+0xa4>)
 8000c86:	f001 f885 	bl	8001d94 <HAL_TIM_Base_Start_IT>
 8000c8a:	4603      	mov	r3, r0
 8000c8c:	e000      	b.n	8000c90 <HAL_InitTick+0x94>
 8000c8e:	2301      	movs	r3, #1
 8000c90:	4618      	mov	r0, r3
 8000c92:	3730      	adds	r7, #48	; 0x30
 8000c94:	46bd      	mov	sp, r7
 8000c96:	bd80      	pop	{r7, pc}
 8000c98:	40021000 	.word	0x40021000
 8000c9c:	431bde83 	.word	0x431bde83
 8000ca0:	200012c4 	.word	0x200012c4
 8000ca4:	40012c00 	.word	0x40012c00

08000ca8 <NMI_Handler>:
 8000ca8:	b480      	push	{r7}
 8000caa:	af00      	add	r7, sp, #0
 8000cac:	e7fe      	b.n	8000cac <NMI_Handler+0x4>

08000cae <HardFault_Handler>:
 8000cae:	b480      	push	{r7}
 8000cb0:	af00      	add	r7, sp, #0
 8000cb2:	e7fe      	b.n	8000cb2 <HardFault_Handler+0x4>

08000cb4 <MemManage_Handler>:
 8000cb4:	b480      	push	{r7}
 8000cb6:	af00      	add	r7, sp, #0
 8000cb8:	e7fe      	b.n	8000cb8 <MemManage_Handler+0x4>

08000cba <BusFault_Handler>:
 8000cba:	b480      	push	{r7}
 8000cbc:	af00      	add	r7, sp, #0
 8000cbe:	e7fe      	b.n	8000cbe <BusFault_Handler+0x4>

08000cc0 <UsageFault_Handler>:
 8000cc0:	b480      	push	{r7}
 8000cc2:	af00      	add	r7, sp, #0
 8000cc4:	e7fe      	b.n	8000cc4 <UsageFault_Handler+0x4>

08000cc6 <DebugMon_Handler>:
 8000cc6:	b480      	push	{r7}
 8000cc8:	af00      	add	r7, sp, #0
 8000cca:	bf00      	nop
 8000ccc:	46bd      	mov	sp, r7
 8000cce:	bc80      	pop	{r7}
 8000cd0:	4770      	bx	lr
	...

08000cd4 <TIM1_UP_IRQHandler>:
 8000cd4:	b580      	push	{r7, lr}
 8000cd6:	af00      	add	r7, sp, #0
 8000cd8:	4802      	ldr	r0, [pc, #8]	; (8000ce4 <TIM1_UP_IRQHandler+0x10>)
 8000cda:	f001 f8ad 	bl	8001e38 <HAL_TIM_IRQHandler>
 8000cde:	bf00      	nop
 8000ce0:	bd80      	pop	{r7, pc}
 8000ce2:	bf00      	nop
 8000ce4:	200012c4 	.word	0x200012c4

08000ce8 <_getpid>:
 8000ce8:	b480      	push	{r7}
 8000cea:	af00      	add	r7, sp, #0
 8000cec:	2301      	movs	r3, #1
 8000cee:	4618      	mov	r0, r3
 8000cf0:	46bd      	mov	sp, r7
 8000cf2:	bc80      	pop	{r7}
 8000cf4:	4770      	bx	lr

08000cf6 <_kill>:
 8000cf6:	b580      	push	{r7, lr}
 8000cf8:	b082      	sub	sp, #8
 8000cfa:	af00      	add	r7, sp, #0
 8000cfc:	6078      	str	r0, [r7, #4]
 8000cfe:	6039      	str	r1, [r7, #0]
 8000d00:	f002 fe66 	bl	80039d0 <__errno>
 8000d04:	4603      	mov	r3, r0
 8000d06:	2216      	movs	r2, #22
 8000d08:	601a      	str	r2, [r3, #0]
 8000d0a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000d0e:	4618      	mov	r0, r3
 8000d10:	3708      	adds	r7, #8
 8000d12:	46bd      	mov	sp, r7
 8000d14:	bd80      	pop	{r7, pc}

08000d16 <_exit>:
 8000d16:	b580      	push	{r7, lr}
 8000d18:	b082      	sub	sp, #8
 8000d1a:	af00      	add	r7, sp, #0
 8000d1c:	6078      	str	r0, [r7, #4]
 8000d1e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000d22:	6878      	ldr	r0, [r7, #4]
 8000d24:	f7ff ffe7 	bl	8000cf6 <_kill>
 8000d28:	e7fe      	b.n	8000d28 <_exit+0x12>

08000d2a <_read>:
 8000d2a:	b580      	push	{r7, lr}
 8000d2c:	b086      	sub	sp, #24
 8000d2e:	af00      	add	r7, sp, #0
 8000d30:	60f8      	str	r0, [r7, #12]
 8000d32:	60b9      	str	r1, [r7, #8]
 8000d34:	607a      	str	r2, [r7, #4]
 8000d36:	2300      	movs	r3, #0
 8000d38:	617b      	str	r3, [r7, #20]
 8000d3a:	e00a      	b.n	8000d52 <_read+0x28>
 8000d3c:	f3af 8000 	nop.w
 8000d40:	4601      	mov	r1, r0
 8000d42:	68bb      	ldr	r3, [r7, #8]
 8000d44:	1c5a      	adds	r2, r3, #1
 8000d46:	60ba      	str	r2, [r7, #8]
 8000d48:	b2ca      	uxtb	r2, r1
 8000d4a:	701a      	strb	r2, [r3, #0]
 8000d4c:	697b      	ldr	r3, [r7, #20]
 8000d4e:	3301      	adds	r3, #1
 8000d50:	617b      	str	r3, [r7, #20]
 8000d52:	697a      	ldr	r2, [r7, #20]
 8000d54:	687b      	ldr	r3, [r7, #4]
 8000d56:	429a      	cmp	r2, r3
 8000d58:	dbf0      	blt.n	8000d3c <_read+0x12>
 8000d5a:	687b      	ldr	r3, [r7, #4]
 8000d5c:	4618      	mov	r0, r3
 8000d5e:	3718      	adds	r7, #24
 8000d60:	46bd      	mov	sp, r7
 8000d62:	bd80      	pop	{r7, pc}

08000d64 <_write>:
 8000d64:	b580      	push	{r7, lr}
 8000d66:	b086      	sub	sp, #24
 8000d68:	af00      	add	r7, sp, #0
 8000d6a:	60f8      	str	r0, [r7, #12]
 8000d6c:	60b9      	str	r1, [r7, #8]
 8000d6e:	607a      	str	r2, [r7, #4]
 8000d70:	2300      	movs	r3, #0
 8000d72:	617b      	str	r3, [r7, #20]
 8000d74:	e009      	b.n	8000d8a <_write+0x26>
 8000d76:	68bb      	ldr	r3, [r7, #8]
 8000d78:	1c5a      	adds	r2, r3, #1
 8000d7a:	60ba      	str	r2, [r7, #8]
 8000d7c:	781b      	ldrb	r3, [r3, #0]
 8000d7e:	4618      	mov	r0, r3
 8000d80:	f3af 8000 	nop.w
 8000d84:	697b      	ldr	r3, [r7, #20]
 8000d86:	3301      	adds	r3, #1
 8000d88:	617b      	str	r3, [r7, #20]
 8000d8a:	697a      	ldr	r2, [r7, #20]
 8000d8c:	687b      	ldr	r3, [r7, #4]
 8000d8e:	429a      	cmp	r2, r3
 8000d90:	dbf1      	blt.n	8000d76 <_write+0x12>
 8000d92:	687b      	ldr	r3, [r7, #4]
 8000d94:	4618      	mov	r0, r3
 8000d96:	3718      	adds	r7, #24
 8000d98:	46bd      	mov	sp, r7
 8000d9a:	bd80      	pop	{r7, pc}

08000d9c <_close>:
 8000d9c:	b480      	push	{r7}
 8000d9e:	b083      	sub	sp, #12
 8000da0:	af00      	add	r7, sp, #0
 8000da2:	6078      	str	r0, [r7, #4]
 8000da4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000da8:	4618      	mov	r0, r3
 8000daa:	370c      	adds	r7, #12
 8000dac:	46bd      	mov	sp, r7
 8000dae:	bc80      	pop	{r7}
 8000db0:	4770      	bx	lr

08000db2 <_fstat>:
 8000db2:	b480      	push	{r7}
 8000db4:	b083      	sub	sp, #12
 8000db6:	af00      	add	r7, sp, #0
 8000db8:	6078      	str	r0, [r7, #4]
 8000dba:	6039      	str	r1, [r7, #0]
 8000dbc:	683b      	ldr	r3, [r7, #0]
 8000dbe:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000dc2:	605a      	str	r2, [r3, #4]
 8000dc4:	2300      	movs	r3, #0
 8000dc6:	4618      	mov	r0, r3
 8000dc8:	370c      	adds	r7, #12
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	bc80      	pop	{r7}
 8000dce:	4770      	bx	lr

08000dd0 <_isatty>:
 8000dd0:	b480      	push	{r7}
 8000dd2:	b083      	sub	sp, #12
 8000dd4:	af00      	add	r7, sp, #0
 8000dd6:	6078      	str	r0, [r7, #4]
 8000dd8:	2301      	movs	r3, #1
 8000dda:	4618      	mov	r0, r3
 8000ddc:	370c      	adds	r7, #12
 8000dde:	46bd      	mov	sp, r7
 8000de0:	bc80      	pop	{r7}
 8000de2:	4770      	bx	lr

08000de4 <_lseek>:
 8000de4:	b480      	push	{r7}
 8000de6:	b085      	sub	sp, #20
 8000de8:	af00      	add	r7, sp, #0
 8000dea:	60f8      	str	r0, [r7, #12]
 8000dec:	60b9      	str	r1, [r7, #8]
 8000dee:	607a      	str	r2, [r7, #4]
 8000df0:	2300      	movs	r3, #0
 8000df2:	4618      	mov	r0, r3
 8000df4:	3714      	adds	r7, #20
 8000df6:	46bd      	mov	sp, r7
 8000df8:	bc80      	pop	{r7}
 8000dfa:	4770      	bx	lr

08000dfc <_sbrk>:
 8000dfc:	b580      	push	{r7, lr}
 8000dfe:	b086      	sub	sp, #24
 8000e00:	af00      	add	r7, sp, #0
 8000e02:	6078      	str	r0, [r7, #4]
 8000e04:	4a14      	ldr	r2, [pc, #80]	; (8000e58 <_sbrk+0x5c>)
 8000e06:	4b15      	ldr	r3, [pc, #84]	; (8000e5c <_sbrk+0x60>)
 8000e08:	1ad3      	subs	r3, r2, r3
 8000e0a:	617b      	str	r3, [r7, #20]
 8000e0c:	697b      	ldr	r3, [r7, #20]
 8000e0e:	613b      	str	r3, [r7, #16]
 8000e10:	4b13      	ldr	r3, [pc, #76]	; (8000e60 <_sbrk+0x64>)
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	2b00      	cmp	r3, #0
 8000e16:	d102      	bne.n	8000e1e <_sbrk+0x22>
 8000e18:	4b11      	ldr	r3, [pc, #68]	; (8000e60 <_sbrk+0x64>)
 8000e1a:	4a12      	ldr	r2, [pc, #72]	; (8000e64 <_sbrk+0x68>)
 8000e1c:	601a      	str	r2, [r3, #0]
 8000e1e:	4b10      	ldr	r3, [pc, #64]	; (8000e60 <_sbrk+0x64>)
 8000e20:	681a      	ldr	r2, [r3, #0]
 8000e22:	687b      	ldr	r3, [r7, #4]
 8000e24:	4413      	add	r3, r2
 8000e26:	693a      	ldr	r2, [r7, #16]
 8000e28:	429a      	cmp	r2, r3
 8000e2a:	d207      	bcs.n	8000e3c <_sbrk+0x40>
 8000e2c:	f002 fdd0 	bl	80039d0 <__errno>
 8000e30:	4603      	mov	r3, r0
 8000e32:	220c      	movs	r2, #12
 8000e34:	601a      	str	r2, [r3, #0]
 8000e36:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000e3a:	e009      	b.n	8000e50 <_sbrk+0x54>
 8000e3c:	4b08      	ldr	r3, [pc, #32]	; (8000e60 <_sbrk+0x64>)
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	60fb      	str	r3, [r7, #12]
 8000e42:	4b07      	ldr	r3, [pc, #28]	; (8000e60 <_sbrk+0x64>)
 8000e44:	681a      	ldr	r2, [r3, #0]
 8000e46:	687b      	ldr	r3, [r7, #4]
 8000e48:	4413      	add	r3, r2
 8000e4a:	4a05      	ldr	r2, [pc, #20]	; (8000e60 <_sbrk+0x64>)
 8000e4c:	6013      	str	r3, [r2, #0]
 8000e4e:	68fb      	ldr	r3, [r7, #12]
 8000e50:	4618      	mov	r0, r3
 8000e52:	3718      	adds	r7, #24
 8000e54:	46bd      	mov	sp, r7
 8000e56:	bd80      	pop	{r7, pc}
 8000e58:	20005000 	.word	0x20005000
 8000e5c:	00000400 	.word	0x00000400
 8000e60:	2000036c 	.word	0x2000036c
 8000e64:	20001320 	.word	0x20001320

08000e68 <SystemInit>:
 8000e68:	b480      	push	{r7}
 8000e6a:	af00      	add	r7, sp, #0
 8000e6c:	bf00      	nop
 8000e6e:	46bd      	mov	sp, r7
 8000e70:	bc80      	pop	{r7}
 8000e72:	4770      	bx	lr

08000e74 <Reset_Handler>:
 8000e74:	2100      	movs	r1, #0
 8000e76:	e003      	b.n	8000e80 <LoopCopyDataInit>

08000e78 <CopyDataInit>:
 8000e78:	4b0b      	ldr	r3, [pc, #44]	; (8000ea8 <LoopFillZerobss+0x14>)
 8000e7a:	585b      	ldr	r3, [r3, r1]
 8000e7c:	5043      	str	r3, [r0, r1]
 8000e7e:	3104      	adds	r1, #4

08000e80 <LoopCopyDataInit>:
 8000e80:	480a      	ldr	r0, [pc, #40]	; (8000eac <LoopFillZerobss+0x18>)
 8000e82:	4b0b      	ldr	r3, [pc, #44]	; (8000eb0 <LoopFillZerobss+0x1c>)
 8000e84:	1842      	adds	r2, r0, r1
 8000e86:	429a      	cmp	r2, r3
 8000e88:	d3f6      	bcc.n	8000e78 <CopyDataInit>
 8000e8a:	4a0a      	ldr	r2, [pc, #40]	; (8000eb4 <LoopFillZerobss+0x20>)
 8000e8c:	e002      	b.n	8000e94 <LoopFillZerobss>

08000e8e <FillZerobss>:
 8000e8e:	2300      	movs	r3, #0
 8000e90:	f842 3b04 	str.w	r3, [r2], #4

08000e94 <LoopFillZerobss>:
 8000e94:	4b08      	ldr	r3, [pc, #32]	; (8000eb8 <LoopFillZerobss+0x24>)
 8000e96:	429a      	cmp	r2, r3
 8000e98:	d3f9      	bcc.n	8000e8e <FillZerobss>
 8000e9a:	f7ff ffe5 	bl	8000e68 <SystemInit>
 8000e9e:	f002 fd9d 	bl	80039dc <__libc_init_array>
 8000ea2:	f7ff fb2f 	bl	8000504 <main>
 8000ea6:	4770      	bx	lr
 8000ea8:	080050d8 	.word	0x080050d8
 8000eac:	20000000 	.word	0x20000000
 8000eb0:	200000fc 	.word	0x200000fc
 8000eb4:	200000fc 	.word	0x200000fc
 8000eb8:	20001320 	.word	0x20001320

08000ebc <ADC1_2_IRQHandler>:
 8000ebc:	e7fe      	b.n	8000ebc <ADC1_2_IRQHandler>
	...

08000ec0 <HAL_Init>:
 8000ec0:	b580      	push	{r7, lr}
 8000ec2:	af00      	add	r7, sp, #0
 8000ec4:	4b08      	ldr	r3, [pc, #32]	; (8000ee8 <HAL_Init+0x28>)
 8000ec6:	681b      	ldr	r3, [r3, #0]
 8000ec8:	4a07      	ldr	r2, [pc, #28]	; (8000ee8 <HAL_Init+0x28>)
 8000eca:	f043 0310 	orr.w	r3, r3, #16
 8000ece:	6013      	str	r3, [r2, #0]
 8000ed0:	2003      	movs	r0, #3
 8000ed2:	f000 f8d1 	bl	8001078 <HAL_NVIC_SetPriorityGrouping>
 8000ed6:	2000      	movs	r0, #0
 8000ed8:	f7ff fe90 	bl	8000bfc <HAL_InitTick>
 8000edc:	f7ff fd96 	bl	8000a0c <HAL_MspInit>
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	4618      	mov	r0, r3
 8000ee4:	bd80      	pop	{r7, pc}
 8000ee6:	bf00      	nop
 8000ee8:	40022000 	.word	0x40022000

08000eec <HAL_IncTick>:
 8000eec:	b480      	push	{r7}
 8000eee:	af00      	add	r7, sp, #0
 8000ef0:	4b05      	ldr	r3, [pc, #20]	; (8000f08 <HAL_IncTick+0x1c>)
 8000ef2:	781b      	ldrb	r3, [r3, #0]
 8000ef4:	461a      	mov	r2, r3
 8000ef6:	4b05      	ldr	r3, [pc, #20]	; (8000f0c <HAL_IncTick+0x20>)
 8000ef8:	681b      	ldr	r3, [r3, #0]
 8000efa:	4413      	add	r3, r2
 8000efc:	4a03      	ldr	r2, [pc, #12]	; (8000f0c <HAL_IncTick+0x20>)
 8000efe:	6013      	str	r3, [r2, #0]
 8000f00:	bf00      	nop
 8000f02:	46bd      	mov	sp, r7
 8000f04:	bc80      	pop	{r7}
 8000f06:	4770      	bx	lr
 8000f08:	20000090 	.word	0x20000090
 8000f0c:	2000130c 	.word	0x2000130c

08000f10 <HAL_GetTick>:
 8000f10:	b480      	push	{r7}
 8000f12:	af00      	add	r7, sp, #0
 8000f14:	4b02      	ldr	r3, [pc, #8]	; (8000f20 <HAL_GetTick+0x10>)
 8000f16:	681b      	ldr	r3, [r3, #0]
 8000f18:	4618      	mov	r0, r3
 8000f1a:	46bd      	mov	sp, r7
 8000f1c:	bc80      	pop	{r7}
 8000f1e:	4770      	bx	lr
 8000f20:	2000130c 	.word	0x2000130c

08000f24 <__NVIC_SetPriorityGrouping>:
 8000f24:	b480      	push	{r7}
 8000f26:	b085      	sub	sp, #20
 8000f28:	af00      	add	r7, sp, #0
 8000f2a:	6078      	str	r0, [r7, #4]
 8000f2c:	687b      	ldr	r3, [r7, #4]
 8000f2e:	f003 0307 	and.w	r3, r3, #7
 8000f32:	60fb      	str	r3, [r7, #12]
 8000f34:	4b0c      	ldr	r3, [pc, #48]	; (8000f68 <__NVIC_SetPriorityGrouping+0x44>)
 8000f36:	68db      	ldr	r3, [r3, #12]
 8000f38:	60bb      	str	r3, [r7, #8]
 8000f3a:	68ba      	ldr	r2, [r7, #8]
 8000f3c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000f40:	4013      	ands	r3, r2
 8000f42:	60bb      	str	r3, [r7, #8]
 8000f44:	68fb      	ldr	r3, [r7, #12]
 8000f46:	021a      	lsls	r2, r3, #8
 8000f48:	68bb      	ldr	r3, [r7, #8]
 8000f4a:	4313      	orrs	r3, r2
 8000f4c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000f50:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000f54:	60bb      	str	r3, [r7, #8]
 8000f56:	4a04      	ldr	r2, [pc, #16]	; (8000f68 <__NVIC_SetPriorityGrouping+0x44>)
 8000f58:	68bb      	ldr	r3, [r7, #8]
 8000f5a:	60d3      	str	r3, [r2, #12]
 8000f5c:	bf00      	nop
 8000f5e:	3714      	adds	r7, #20
 8000f60:	46bd      	mov	sp, r7
 8000f62:	bc80      	pop	{r7}
 8000f64:	4770      	bx	lr
 8000f66:	bf00      	nop
 8000f68:	e000ed00 	.word	0xe000ed00

08000f6c <__NVIC_GetPriorityGrouping>:
 8000f6c:	b480      	push	{r7}
 8000f6e:	af00      	add	r7, sp, #0
 8000f70:	4b04      	ldr	r3, [pc, #16]	; (8000f84 <__NVIC_GetPriorityGrouping+0x18>)
 8000f72:	68db      	ldr	r3, [r3, #12]
 8000f74:	0a1b      	lsrs	r3, r3, #8
 8000f76:	f003 0307 	and.w	r3, r3, #7
 8000f7a:	4618      	mov	r0, r3
 8000f7c:	46bd      	mov	sp, r7
 8000f7e:	bc80      	pop	{r7}
 8000f80:	4770      	bx	lr
 8000f82:	bf00      	nop
 8000f84:	e000ed00 	.word	0xe000ed00

08000f88 <__NVIC_EnableIRQ>:
 8000f88:	b480      	push	{r7}
 8000f8a:	b083      	sub	sp, #12
 8000f8c:	af00      	add	r7, sp, #0
 8000f8e:	4603      	mov	r3, r0
 8000f90:	71fb      	strb	r3, [r7, #7]
 8000f92:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f96:	2b00      	cmp	r3, #0
 8000f98:	db0b      	blt.n	8000fb2 <__NVIC_EnableIRQ+0x2a>
 8000f9a:	79fb      	ldrb	r3, [r7, #7]
 8000f9c:	f003 021f 	and.w	r2, r3, #31
 8000fa0:	4906      	ldr	r1, [pc, #24]	; (8000fbc <__NVIC_EnableIRQ+0x34>)
 8000fa2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fa6:	095b      	lsrs	r3, r3, #5
 8000fa8:	2001      	movs	r0, #1
 8000faa:	fa00 f202 	lsl.w	r2, r0, r2
 8000fae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000fb2:	bf00      	nop
 8000fb4:	370c      	adds	r7, #12
 8000fb6:	46bd      	mov	sp, r7
 8000fb8:	bc80      	pop	{r7}
 8000fba:	4770      	bx	lr
 8000fbc:	e000e100 	.word	0xe000e100

08000fc0 <__NVIC_SetPriority>:
 8000fc0:	b480      	push	{r7}
 8000fc2:	b083      	sub	sp, #12
 8000fc4:	af00      	add	r7, sp, #0
 8000fc6:	4603      	mov	r3, r0
 8000fc8:	6039      	str	r1, [r7, #0]
 8000fca:	71fb      	strb	r3, [r7, #7]
 8000fcc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fd0:	2b00      	cmp	r3, #0
 8000fd2:	db0a      	blt.n	8000fea <__NVIC_SetPriority+0x2a>
 8000fd4:	683b      	ldr	r3, [r7, #0]
 8000fd6:	b2da      	uxtb	r2, r3
 8000fd8:	490c      	ldr	r1, [pc, #48]	; (800100c <__NVIC_SetPriority+0x4c>)
 8000fda:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fde:	0112      	lsls	r2, r2, #4
 8000fe0:	b2d2      	uxtb	r2, r2
 8000fe2:	440b      	add	r3, r1
 8000fe4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000fe8:	e00a      	b.n	8001000 <__NVIC_SetPriority+0x40>
 8000fea:	683b      	ldr	r3, [r7, #0]
 8000fec:	b2da      	uxtb	r2, r3
 8000fee:	4908      	ldr	r1, [pc, #32]	; (8001010 <__NVIC_SetPriority+0x50>)
 8000ff0:	79fb      	ldrb	r3, [r7, #7]
 8000ff2:	f003 030f 	and.w	r3, r3, #15
 8000ff6:	3b04      	subs	r3, #4
 8000ff8:	0112      	lsls	r2, r2, #4
 8000ffa:	b2d2      	uxtb	r2, r2
 8000ffc:	440b      	add	r3, r1
 8000ffe:	761a      	strb	r2, [r3, #24]
 8001000:	bf00      	nop
 8001002:	370c      	adds	r7, #12
 8001004:	46bd      	mov	sp, r7
 8001006:	bc80      	pop	{r7}
 8001008:	4770      	bx	lr
 800100a:	bf00      	nop
 800100c:	e000e100 	.word	0xe000e100
 8001010:	e000ed00 	.word	0xe000ed00

08001014 <NVIC_EncodePriority>:
 8001014:	b480      	push	{r7}
 8001016:	b089      	sub	sp, #36	; 0x24
 8001018:	af00      	add	r7, sp, #0
 800101a:	60f8      	str	r0, [r7, #12]
 800101c:	60b9      	str	r1, [r7, #8]
 800101e:	607a      	str	r2, [r7, #4]
 8001020:	68fb      	ldr	r3, [r7, #12]
 8001022:	f003 0307 	and.w	r3, r3, #7
 8001026:	61fb      	str	r3, [r7, #28]
 8001028:	69fb      	ldr	r3, [r7, #28]
 800102a:	f1c3 0307 	rsb	r3, r3, #7
 800102e:	2b04      	cmp	r3, #4
 8001030:	bf28      	it	cs
 8001032:	2304      	movcs	r3, #4
 8001034:	61bb      	str	r3, [r7, #24]
 8001036:	69fb      	ldr	r3, [r7, #28]
 8001038:	3304      	adds	r3, #4
 800103a:	2b06      	cmp	r3, #6
 800103c:	d902      	bls.n	8001044 <NVIC_EncodePriority+0x30>
 800103e:	69fb      	ldr	r3, [r7, #28]
 8001040:	3b03      	subs	r3, #3
 8001042:	e000      	b.n	8001046 <NVIC_EncodePriority+0x32>
 8001044:	2300      	movs	r3, #0
 8001046:	617b      	str	r3, [r7, #20]
 8001048:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800104c:	69bb      	ldr	r3, [r7, #24]
 800104e:	fa02 f303 	lsl.w	r3, r2, r3
 8001052:	43da      	mvns	r2, r3
 8001054:	68bb      	ldr	r3, [r7, #8]
 8001056:	401a      	ands	r2, r3
 8001058:	697b      	ldr	r3, [r7, #20]
 800105a:	409a      	lsls	r2, r3
 800105c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001060:	697b      	ldr	r3, [r7, #20]
 8001062:	fa01 f303 	lsl.w	r3, r1, r3
 8001066:	43d9      	mvns	r1, r3
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	400b      	ands	r3, r1
 800106c:	4313      	orrs	r3, r2
 800106e:	4618      	mov	r0, r3
 8001070:	3724      	adds	r7, #36	; 0x24
 8001072:	46bd      	mov	sp, r7
 8001074:	bc80      	pop	{r7}
 8001076:	4770      	bx	lr

08001078 <HAL_NVIC_SetPriorityGrouping>:
 8001078:	b580      	push	{r7, lr}
 800107a:	b082      	sub	sp, #8
 800107c:	af00      	add	r7, sp, #0
 800107e:	6078      	str	r0, [r7, #4]
 8001080:	6878      	ldr	r0, [r7, #4]
 8001082:	f7ff ff4f 	bl	8000f24 <__NVIC_SetPriorityGrouping>
 8001086:	bf00      	nop
 8001088:	3708      	adds	r7, #8
 800108a:	46bd      	mov	sp, r7
 800108c:	bd80      	pop	{r7, pc}

0800108e <HAL_NVIC_SetPriority>:
 800108e:	b580      	push	{r7, lr}
 8001090:	b086      	sub	sp, #24
 8001092:	af00      	add	r7, sp, #0
 8001094:	4603      	mov	r3, r0
 8001096:	60b9      	str	r1, [r7, #8]
 8001098:	607a      	str	r2, [r7, #4]
 800109a:	73fb      	strb	r3, [r7, #15]
 800109c:	2300      	movs	r3, #0
 800109e:	617b      	str	r3, [r7, #20]
 80010a0:	f7ff ff64 	bl	8000f6c <__NVIC_GetPriorityGrouping>
 80010a4:	6178      	str	r0, [r7, #20]
 80010a6:	687a      	ldr	r2, [r7, #4]
 80010a8:	68b9      	ldr	r1, [r7, #8]
 80010aa:	6978      	ldr	r0, [r7, #20]
 80010ac:	f7ff ffb2 	bl	8001014 <NVIC_EncodePriority>
 80010b0:	4602      	mov	r2, r0
 80010b2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80010b6:	4611      	mov	r1, r2
 80010b8:	4618      	mov	r0, r3
 80010ba:	f7ff ff81 	bl	8000fc0 <__NVIC_SetPriority>
 80010be:	bf00      	nop
 80010c0:	3718      	adds	r7, #24
 80010c2:	46bd      	mov	sp, r7
 80010c4:	bd80      	pop	{r7, pc}

080010c6 <HAL_NVIC_EnableIRQ>:
 80010c6:	b580      	push	{r7, lr}
 80010c8:	b082      	sub	sp, #8
 80010ca:	af00      	add	r7, sp, #0
 80010cc:	4603      	mov	r3, r0
 80010ce:	71fb      	strb	r3, [r7, #7]
 80010d0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010d4:	4618      	mov	r0, r3
 80010d6:	f7ff ff57 	bl	8000f88 <__NVIC_EnableIRQ>
 80010da:	bf00      	nop
 80010dc:	3708      	adds	r7, #8
 80010de:	46bd      	mov	sp, r7
 80010e0:	bd80      	pop	{r7, pc}
	...

080010e4 <HAL_GPIO_Init>:
 80010e4:	b480      	push	{r7}
 80010e6:	b08b      	sub	sp, #44	; 0x2c
 80010e8:	af00      	add	r7, sp, #0
 80010ea:	6078      	str	r0, [r7, #4]
 80010ec:	6039      	str	r1, [r7, #0]
 80010ee:	2300      	movs	r3, #0
 80010f0:	627b      	str	r3, [r7, #36]	; 0x24
 80010f2:	2300      	movs	r3, #0
 80010f4:	623b      	str	r3, [r7, #32]
 80010f6:	e169      	b.n	80013cc <HAL_GPIO_Init+0x2e8>
 80010f8:	2201      	movs	r2, #1
 80010fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010fc:	fa02 f303 	lsl.w	r3, r2, r3
 8001100:	61fb      	str	r3, [r7, #28]
 8001102:	683b      	ldr	r3, [r7, #0]
 8001104:	681b      	ldr	r3, [r3, #0]
 8001106:	69fa      	ldr	r2, [r7, #28]
 8001108:	4013      	ands	r3, r2
 800110a:	61bb      	str	r3, [r7, #24]
 800110c:	69ba      	ldr	r2, [r7, #24]
 800110e:	69fb      	ldr	r3, [r7, #28]
 8001110:	429a      	cmp	r2, r3
 8001112:	f040 8158 	bne.w	80013c6 <HAL_GPIO_Init+0x2e2>
 8001116:	683b      	ldr	r3, [r7, #0]
 8001118:	685b      	ldr	r3, [r3, #4]
 800111a:	4a9a      	ldr	r2, [pc, #616]	; (8001384 <HAL_GPIO_Init+0x2a0>)
 800111c:	4293      	cmp	r3, r2
 800111e:	d05e      	beq.n	80011de <HAL_GPIO_Init+0xfa>
 8001120:	4a98      	ldr	r2, [pc, #608]	; (8001384 <HAL_GPIO_Init+0x2a0>)
 8001122:	4293      	cmp	r3, r2
 8001124:	d875      	bhi.n	8001212 <HAL_GPIO_Init+0x12e>
 8001126:	4a98      	ldr	r2, [pc, #608]	; (8001388 <HAL_GPIO_Init+0x2a4>)
 8001128:	4293      	cmp	r3, r2
 800112a:	d058      	beq.n	80011de <HAL_GPIO_Init+0xfa>
 800112c:	4a96      	ldr	r2, [pc, #600]	; (8001388 <HAL_GPIO_Init+0x2a4>)
 800112e:	4293      	cmp	r3, r2
 8001130:	d86f      	bhi.n	8001212 <HAL_GPIO_Init+0x12e>
 8001132:	4a96      	ldr	r2, [pc, #600]	; (800138c <HAL_GPIO_Init+0x2a8>)
 8001134:	4293      	cmp	r3, r2
 8001136:	d052      	beq.n	80011de <HAL_GPIO_Init+0xfa>
 8001138:	4a94      	ldr	r2, [pc, #592]	; (800138c <HAL_GPIO_Init+0x2a8>)
 800113a:	4293      	cmp	r3, r2
 800113c:	d869      	bhi.n	8001212 <HAL_GPIO_Init+0x12e>
 800113e:	4a94      	ldr	r2, [pc, #592]	; (8001390 <HAL_GPIO_Init+0x2ac>)
 8001140:	4293      	cmp	r3, r2
 8001142:	d04c      	beq.n	80011de <HAL_GPIO_Init+0xfa>
 8001144:	4a92      	ldr	r2, [pc, #584]	; (8001390 <HAL_GPIO_Init+0x2ac>)
 8001146:	4293      	cmp	r3, r2
 8001148:	d863      	bhi.n	8001212 <HAL_GPIO_Init+0x12e>
 800114a:	4a92      	ldr	r2, [pc, #584]	; (8001394 <HAL_GPIO_Init+0x2b0>)
 800114c:	4293      	cmp	r3, r2
 800114e:	d046      	beq.n	80011de <HAL_GPIO_Init+0xfa>
 8001150:	4a90      	ldr	r2, [pc, #576]	; (8001394 <HAL_GPIO_Init+0x2b0>)
 8001152:	4293      	cmp	r3, r2
 8001154:	d85d      	bhi.n	8001212 <HAL_GPIO_Init+0x12e>
 8001156:	2b12      	cmp	r3, #18
 8001158:	d82a      	bhi.n	80011b0 <HAL_GPIO_Init+0xcc>
 800115a:	2b12      	cmp	r3, #18
 800115c:	d859      	bhi.n	8001212 <HAL_GPIO_Init+0x12e>
 800115e:	a201      	add	r2, pc, #4	; (adr r2, 8001164 <HAL_GPIO_Init+0x80>)
 8001160:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001164:	080011df 	.word	0x080011df
 8001168:	080011b9 	.word	0x080011b9
 800116c:	080011cb 	.word	0x080011cb
 8001170:	0800120d 	.word	0x0800120d
 8001174:	08001213 	.word	0x08001213
 8001178:	08001213 	.word	0x08001213
 800117c:	08001213 	.word	0x08001213
 8001180:	08001213 	.word	0x08001213
 8001184:	08001213 	.word	0x08001213
 8001188:	08001213 	.word	0x08001213
 800118c:	08001213 	.word	0x08001213
 8001190:	08001213 	.word	0x08001213
 8001194:	08001213 	.word	0x08001213
 8001198:	08001213 	.word	0x08001213
 800119c:	08001213 	.word	0x08001213
 80011a0:	08001213 	.word	0x08001213
 80011a4:	08001213 	.word	0x08001213
 80011a8:	080011c1 	.word	0x080011c1
 80011ac:	080011d5 	.word	0x080011d5
 80011b0:	4a79      	ldr	r2, [pc, #484]	; (8001398 <HAL_GPIO_Init+0x2b4>)
 80011b2:	4293      	cmp	r3, r2
 80011b4:	d013      	beq.n	80011de <HAL_GPIO_Init+0xfa>
 80011b6:	e02c      	b.n	8001212 <HAL_GPIO_Init+0x12e>
 80011b8:	683b      	ldr	r3, [r7, #0]
 80011ba:	68db      	ldr	r3, [r3, #12]
 80011bc:	623b      	str	r3, [r7, #32]
 80011be:	e029      	b.n	8001214 <HAL_GPIO_Init+0x130>
 80011c0:	683b      	ldr	r3, [r7, #0]
 80011c2:	68db      	ldr	r3, [r3, #12]
 80011c4:	3304      	adds	r3, #4
 80011c6:	623b      	str	r3, [r7, #32]
 80011c8:	e024      	b.n	8001214 <HAL_GPIO_Init+0x130>
 80011ca:	683b      	ldr	r3, [r7, #0]
 80011cc:	68db      	ldr	r3, [r3, #12]
 80011ce:	3308      	adds	r3, #8
 80011d0:	623b      	str	r3, [r7, #32]
 80011d2:	e01f      	b.n	8001214 <HAL_GPIO_Init+0x130>
 80011d4:	683b      	ldr	r3, [r7, #0]
 80011d6:	68db      	ldr	r3, [r3, #12]
 80011d8:	330c      	adds	r3, #12
 80011da:	623b      	str	r3, [r7, #32]
 80011dc:	e01a      	b.n	8001214 <HAL_GPIO_Init+0x130>
 80011de:	683b      	ldr	r3, [r7, #0]
 80011e0:	689b      	ldr	r3, [r3, #8]
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d102      	bne.n	80011ec <HAL_GPIO_Init+0x108>
 80011e6:	2304      	movs	r3, #4
 80011e8:	623b      	str	r3, [r7, #32]
 80011ea:	e013      	b.n	8001214 <HAL_GPIO_Init+0x130>
 80011ec:	683b      	ldr	r3, [r7, #0]
 80011ee:	689b      	ldr	r3, [r3, #8]
 80011f0:	2b01      	cmp	r3, #1
 80011f2:	d105      	bne.n	8001200 <HAL_GPIO_Init+0x11c>
 80011f4:	2308      	movs	r3, #8
 80011f6:	623b      	str	r3, [r7, #32]
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	69fa      	ldr	r2, [r7, #28]
 80011fc:	611a      	str	r2, [r3, #16]
 80011fe:	e009      	b.n	8001214 <HAL_GPIO_Init+0x130>
 8001200:	2308      	movs	r3, #8
 8001202:	623b      	str	r3, [r7, #32]
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	69fa      	ldr	r2, [r7, #28]
 8001208:	615a      	str	r2, [r3, #20]
 800120a:	e003      	b.n	8001214 <HAL_GPIO_Init+0x130>
 800120c:	2300      	movs	r3, #0
 800120e:	623b      	str	r3, [r7, #32]
 8001210:	e000      	b.n	8001214 <HAL_GPIO_Init+0x130>
 8001212:	bf00      	nop
 8001214:	69bb      	ldr	r3, [r7, #24]
 8001216:	2bff      	cmp	r3, #255	; 0xff
 8001218:	d801      	bhi.n	800121e <HAL_GPIO_Init+0x13a>
 800121a:	687b      	ldr	r3, [r7, #4]
 800121c:	e001      	b.n	8001222 <HAL_GPIO_Init+0x13e>
 800121e:	687b      	ldr	r3, [r7, #4]
 8001220:	3304      	adds	r3, #4
 8001222:	617b      	str	r3, [r7, #20]
 8001224:	69bb      	ldr	r3, [r7, #24]
 8001226:	2bff      	cmp	r3, #255	; 0xff
 8001228:	d802      	bhi.n	8001230 <HAL_GPIO_Init+0x14c>
 800122a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800122c:	009b      	lsls	r3, r3, #2
 800122e:	e002      	b.n	8001236 <HAL_GPIO_Init+0x152>
 8001230:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001232:	3b08      	subs	r3, #8
 8001234:	009b      	lsls	r3, r3, #2
 8001236:	613b      	str	r3, [r7, #16]
 8001238:	697b      	ldr	r3, [r7, #20]
 800123a:	681a      	ldr	r2, [r3, #0]
 800123c:	210f      	movs	r1, #15
 800123e:	693b      	ldr	r3, [r7, #16]
 8001240:	fa01 f303 	lsl.w	r3, r1, r3
 8001244:	43db      	mvns	r3, r3
 8001246:	401a      	ands	r2, r3
 8001248:	6a39      	ldr	r1, [r7, #32]
 800124a:	693b      	ldr	r3, [r7, #16]
 800124c:	fa01 f303 	lsl.w	r3, r1, r3
 8001250:	431a      	orrs	r2, r3
 8001252:	697b      	ldr	r3, [r7, #20]
 8001254:	601a      	str	r2, [r3, #0]
 8001256:	683b      	ldr	r3, [r7, #0]
 8001258:	685b      	ldr	r3, [r3, #4]
 800125a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800125e:	2b00      	cmp	r3, #0
 8001260:	f000 80b1 	beq.w	80013c6 <HAL_GPIO_Init+0x2e2>
 8001264:	4b4d      	ldr	r3, [pc, #308]	; (800139c <HAL_GPIO_Init+0x2b8>)
 8001266:	699b      	ldr	r3, [r3, #24]
 8001268:	4a4c      	ldr	r2, [pc, #304]	; (800139c <HAL_GPIO_Init+0x2b8>)
 800126a:	f043 0301 	orr.w	r3, r3, #1
 800126e:	6193      	str	r3, [r2, #24]
 8001270:	4b4a      	ldr	r3, [pc, #296]	; (800139c <HAL_GPIO_Init+0x2b8>)
 8001272:	699b      	ldr	r3, [r3, #24]
 8001274:	f003 0301 	and.w	r3, r3, #1
 8001278:	60bb      	str	r3, [r7, #8]
 800127a:	68bb      	ldr	r3, [r7, #8]
 800127c:	4a48      	ldr	r2, [pc, #288]	; (80013a0 <HAL_GPIO_Init+0x2bc>)
 800127e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001280:	089b      	lsrs	r3, r3, #2
 8001282:	3302      	adds	r3, #2
 8001284:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001288:	60fb      	str	r3, [r7, #12]
 800128a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800128c:	f003 0303 	and.w	r3, r3, #3
 8001290:	009b      	lsls	r3, r3, #2
 8001292:	220f      	movs	r2, #15
 8001294:	fa02 f303 	lsl.w	r3, r2, r3
 8001298:	43db      	mvns	r3, r3
 800129a:	68fa      	ldr	r2, [r7, #12]
 800129c:	4013      	ands	r3, r2
 800129e:	60fb      	str	r3, [r7, #12]
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	4a40      	ldr	r2, [pc, #256]	; (80013a4 <HAL_GPIO_Init+0x2c0>)
 80012a4:	4293      	cmp	r3, r2
 80012a6:	d013      	beq.n	80012d0 <HAL_GPIO_Init+0x1ec>
 80012a8:	687b      	ldr	r3, [r7, #4]
 80012aa:	4a3f      	ldr	r2, [pc, #252]	; (80013a8 <HAL_GPIO_Init+0x2c4>)
 80012ac:	4293      	cmp	r3, r2
 80012ae:	d00d      	beq.n	80012cc <HAL_GPIO_Init+0x1e8>
 80012b0:	687b      	ldr	r3, [r7, #4]
 80012b2:	4a3e      	ldr	r2, [pc, #248]	; (80013ac <HAL_GPIO_Init+0x2c8>)
 80012b4:	4293      	cmp	r3, r2
 80012b6:	d007      	beq.n	80012c8 <HAL_GPIO_Init+0x1e4>
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	4a3d      	ldr	r2, [pc, #244]	; (80013b0 <HAL_GPIO_Init+0x2cc>)
 80012bc:	4293      	cmp	r3, r2
 80012be:	d101      	bne.n	80012c4 <HAL_GPIO_Init+0x1e0>
 80012c0:	2303      	movs	r3, #3
 80012c2:	e006      	b.n	80012d2 <HAL_GPIO_Init+0x1ee>
 80012c4:	2304      	movs	r3, #4
 80012c6:	e004      	b.n	80012d2 <HAL_GPIO_Init+0x1ee>
 80012c8:	2302      	movs	r3, #2
 80012ca:	e002      	b.n	80012d2 <HAL_GPIO_Init+0x1ee>
 80012cc:	2301      	movs	r3, #1
 80012ce:	e000      	b.n	80012d2 <HAL_GPIO_Init+0x1ee>
 80012d0:	2300      	movs	r3, #0
 80012d2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80012d4:	f002 0203 	and.w	r2, r2, #3
 80012d8:	0092      	lsls	r2, r2, #2
 80012da:	4093      	lsls	r3, r2
 80012dc:	68fa      	ldr	r2, [r7, #12]
 80012de:	4313      	orrs	r3, r2
 80012e0:	60fb      	str	r3, [r7, #12]
 80012e2:	492f      	ldr	r1, [pc, #188]	; (80013a0 <HAL_GPIO_Init+0x2bc>)
 80012e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80012e6:	089b      	lsrs	r3, r3, #2
 80012e8:	3302      	adds	r3, #2
 80012ea:	68fa      	ldr	r2, [r7, #12]
 80012ec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80012f0:	683b      	ldr	r3, [r7, #0]
 80012f2:	685b      	ldr	r3, [r3, #4]
 80012f4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80012f8:	2b00      	cmp	r3, #0
 80012fa:	d006      	beq.n	800130a <HAL_GPIO_Init+0x226>
 80012fc:	4b2d      	ldr	r3, [pc, #180]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 80012fe:	681a      	ldr	r2, [r3, #0]
 8001300:	492c      	ldr	r1, [pc, #176]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 8001302:	69bb      	ldr	r3, [r7, #24]
 8001304:	4313      	orrs	r3, r2
 8001306:	600b      	str	r3, [r1, #0]
 8001308:	e006      	b.n	8001318 <HAL_GPIO_Init+0x234>
 800130a:	4b2a      	ldr	r3, [pc, #168]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 800130c:	681a      	ldr	r2, [r3, #0]
 800130e:	69bb      	ldr	r3, [r7, #24]
 8001310:	43db      	mvns	r3, r3
 8001312:	4928      	ldr	r1, [pc, #160]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 8001314:	4013      	ands	r3, r2
 8001316:	600b      	str	r3, [r1, #0]
 8001318:	683b      	ldr	r3, [r7, #0]
 800131a:	685b      	ldr	r3, [r3, #4]
 800131c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001320:	2b00      	cmp	r3, #0
 8001322:	d006      	beq.n	8001332 <HAL_GPIO_Init+0x24e>
 8001324:	4b23      	ldr	r3, [pc, #140]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 8001326:	685a      	ldr	r2, [r3, #4]
 8001328:	4922      	ldr	r1, [pc, #136]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 800132a:	69bb      	ldr	r3, [r7, #24]
 800132c:	4313      	orrs	r3, r2
 800132e:	604b      	str	r3, [r1, #4]
 8001330:	e006      	b.n	8001340 <HAL_GPIO_Init+0x25c>
 8001332:	4b20      	ldr	r3, [pc, #128]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 8001334:	685a      	ldr	r2, [r3, #4]
 8001336:	69bb      	ldr	r3, [r7, #24]
 8001338:	43db      	mvns	r3, r3
 800133a:	491e      	ldr	r1, [pc, #120]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 800133c:	4013      	ands	r3, r2
 800133e:	604b      	str	r3, [r1, #4]
 8001340:	683b      	ldr	r3, [r7, #0]
 8001342:	685b      	ldr	r3, [r3, #4]
 8001344:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001348:	2b00      	cmp	r3, #0
 800134a:	d006      	beq.n	800135a <HAL_GPIO_Init+0x276>
 800134c:	4b19      	ldr	r3, [pc, #100]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 800134e:	689a      	ldr	r2, [r3, #8]
 8001350:	4918      	ldr	r1, [pc, #96]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 8001352:	69bb      	ldr	r3, [r7, #24]
 8001354:	4313      	orrs	r3, r2
 8001356:	608b      	str	r3, [r1, #8]
 8001358:	e006      	b.n	8001368 <HAL_GPIO_Init+0x284>
 800135a:	4b16      	ldr	r3, [pc, #88]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 800135c:	689a      	ldr	r2, [r3, #8]
 800135e:	69bb      	ldr	r3, [r7, #24]
 8001360:	43db      	mvns	r3, r3
 8001362:	4914      	ldr	r1, [pc, #80]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 8001364:	4013      	ands	r3, r2
 8001366:	608b      	str	r3, [r1, #8]
 8001368:	683b      	ldr	r3, [r7, #0]
 800136a:	685b      	ldr	r3, [r3, #4]
 800136c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001370:	2b00      	cmp	r3, #0
 8001372:	d021      	beq.n	80013b8 <HAL_GPIO_Init+0x2d4>
 8001374:	4b0f      	ldr	r3, [pc, #60]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 8001376:	68da      	ldr	r2, [r3, #12]
 8001378:	490e      	ldr	r1, [pc, #56]	; (80013b4 <HAL_GPIO_Init+0x2d0>)
 800137a:	69bb      	ldr	r3, [r7, #24]
 800137c:	4313      	orrs	r3, r2
 800137e:	60cb      	str	r3, [r1, #12]
 8001380:	e021      	b.n	80013c6 <HAL_GPIO_Init+0x2e2>
 8001382:	bf00      	nop
 8001384:	10320000 	.word	0x10320000
 8001388:	10310000 	.word	0x10310000
 800138c:	10220000 	.word	0x10220000
 8001390:	10210000 	.word	0x10210000
 8001394:	10120000 	.word	0x10120000
 8001398:	10110000 	.word	0x10110000
 800139c:	40021000 	.word	0x40021000
 80013a0:	40010000 	.word	0x40010000
 80013a4:	40010800 	.word	0x40010800
 80013a8:	40010c00 	.word	0x40010c00
 80013ac:	40011000 	.word	0x40011000
 80013b0:	40011400 	.word	0x40011400
 80013b4:	40010400 	.word	0x40010400
 80013b8:	4b0b      	ldr	r3, [pc, #44]	; (80013e8 <HAL_GPIO_Init+0x304>)
 80013ba:	68da      	ldr	r2, [r3, #12]
 80013bc:	69bb      	ldr	r3, [r7, #24]
 80013be:	43db      	mvns	r3, r3
 80013c0:	4909      	ldr	r1, [pc, #36]	; (80013e8 <HAL_GPIO_Init+0x304>)
 80013c2:	4013      	ands	r3, r2
 80013c4:	60cb      	str	r3, [r1, #12]
 80013c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013c8:	3301      	adds	r3, #1
 80013ca:	627b      	str	r3, [r7, #36]	; 0x24
 80013cc:	683b      	ldr	r3, [r7, #0]
 80013ce:	681a      	ldr	r2, [r3, #0]
 80013d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013d2:	fa22 f303 	lsr.w	r3, r2, r3
 80013d6:	2b00      	cmp	r3, #0
 80013d8:	f47f ae8e 	bne.w	80010f8 <HAL_GPIO_Init+0x14>
 80013dc:	bf00      	nop
 80013de:	bf00      	nop
 80013e0:	372c      	adds	r7, #44	; 0x2c
 80013e2:	46bd      	mov	sp, r7
 80013e4:	bc80      	pop	{r7}
 80013e6:	4770      	bx	lr
 80013e8:	40010400 	.word	0x40010400

080013ec <HAL_GPIO_WritePin>:
 80013ec:	b480      	push	{r7}
 80013ee:	b083      	sub	sp, #12
 80013f0:	af00      	add	r7, sp, #0
 80013f2:	6078      	str	r0, [r7, #4]
 80013f4:	460b      	mov	r3, r1
 80013f6:	807b      	strh	r3, [r7, #2]
 80013f8:	4613      	mov	r3, r2
 80013fa:	707b      	strb	r3, [r7, #1]
 80013fc:	787b      	ldrb	r3, [r7, #1]
 80013fe:	2b00      	cmp	r3, #0
 8001400:	d003      	beq.n	800140a <HAL_GPIO_WritePin+0x1e>
 8001402:	887a      	ldrh	r2, [r7, #2]
 8001404:	687b      	ldr	r3, [r7, #4]
 8001406:	611a      	str	r2, [r3, #16]
 8001408:	e003      	b.n	8001412 <HAL_GPIO_WritePin+0x26>
 800140a:	887b      	ldrh	r3, [r7, #2]
 800140c:	041a      	lsls	r2, r3, #16
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	611a      	str	r2, [r3, #16]
 8001412:	bf00      	nop
 8001414:	370c      	adds	r7, #12
 8001416:	46bd      	mov	sp, r7
 8001418:	bc80      	pop	{r7}
 800141a:	4770      	bx	lr

0800141c <HAL_GPIO_TogglePin>:
 800141c:	b480      	push	{r7}
 800141e:	b085      	sub	sp, #20
 8001420:	af00      	add	r7, sp, #0
 8001422:	6078      	str	r0, [r7, #4]
 8001424:	460b      	mov	r3, r1
 8001426:	807b      	strh	r3, [r7, #2]
 8001428:	687b      	ldr	r3, [r7, #4]
 800142a:	68db      	ldr	r3, [r3, #12]
 800142c:	60fb      	str	r3, [r7, #12]
 800142e:	887a      	ldrh	r2, [r7, #2]
 8001430:	68fb      	ldr	r3, [r7, #12]
 8001432:	4013      	ands	r3, r2
 8001434:	041a      	lsls	r2, r3, #16
 8001436:	68fb      	ldr	r3, [r7, #12]
 8001438:	43d9      	mvns	r1, r3
 800143a:	887b      	ldrh	r3, [r7, #2]
 800143c:	400b      	ands	r3, r1
 800143e:	431a      	orrs	r2, r3
 8001440:	687b      	ldr	r3, [r7, #4]
 8001442:	611a      	str	r2, [r3, #16]
 8001444:	bf00      	nop
 8001446:	3714      	adds	r7, #20
 8001448:	46bd      	mov	sp, r7
 800144a:	bc80      	pop	{r7}
 800144c:	4770      	bx	lr
	...

08001450 <HAL_RCC_OscConfig>:
 8001450:	b580      	push	{r7, lr}
 8001452:	b086      	sub	sp, #24
 8001454:	af00      	add	r7, sp, #0
 8001456:	6078      	str	r0, [r7, #4]
 8001458:	687b      	ldr	r3, [r7, #4]
 800145a:	2b00      	cmp	r3, #0
 800145c:	d101      	bne.n	8001462 <HAL_RCC_OscConfig+0x12>
 800145e:	2301      	movs	r3, #1
 8001460:	e26c      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	f003 0301 	and.w	r3, r3, #1
 800146a:	2b00      	cmp	r3, #0
 800146c:	f000 8087 	beq.w	800157e <HAL_RCC_OscConfig+0x12e>
 8001470:	4b92      	ldr	r3, [pc, #584]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001472:	685b      	ldr	r3, [r3, #4]
 8001474:	f003 030c 	and.w	r3, r3, #12
 8001478:	2b04      	cmp	r3, #4
 800147a:	d00c      	beq.n	8001496 <HAL_RCC_OscConfig+0x46>
 800147c:	4b8f      	ldr	r3, [pc, #572]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 800147e:	685b      	ldr	r3, [r3, #4]
 8001480:	f003 030c 	and.w	r3, r3, #12
 8001484:	2b08      	cmp	r3, #8
 8001486:	d112      	bne.n	80014ae <HAL_RCC_OscConfig+0x5e>
 8001488:	4b8c      	ldr	r3, [pc, #560]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 800148a:	685b      	ldr	r3, [r3, #4]
 800148c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001490:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001494:	d10b      	bne.n	80014ae <HAL_RCC_OscConfig+0x5e>
 8001496:	4b89      	ldr	r3, [pc, #548]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001498:	681b      	ldr	r3, [r3, #0]
 800149a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800149e:	2b00      	cmp	r3, #0
 80014a0:	d06c      	beq.n	800157c <HAL_RCC_OscConfig+0x12c>
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	685b      	ldr	r3, [r3, #4]
 80014a6:	2b00      	cmp	r3, #0
 80014a8:	d168      	bne.n	800157c <HAL_RCC_OscConfig+0x12c>
 80014aa:	2301      	movs	r3, #1
 80014ac:	e246      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 80014ae:	687b      	ldr	r3, [r7, #4]
 80014b0:	685b      	ldr	r3, [r3, #4]
 80014b2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80014b6:	d106      	bne.n	80014c6 <HAL_RCC_OscConfig+0x76>
 80014b8:	4b80      	ldr	r3, [pc, #512]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80014ba:	681b      	ldr	r3, [r3, #0]
 80014bc:	4a7f      	ldr	r2, [pc, #508]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80014be:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80014c2:	6013      	str	r3, [r2, #0]
 80014c4:	e02e      	b.n	8001524 <HAL_RCC_OscConfig+0xd4>
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	685b      	ldr	r3, [r3, #4]
 80014ca:	2b00      	cmp	r3, #0
 80014cc:	d10c      	bne.n	80014e8 <HAL_RCC_OscConfig+0x98>
 80014ce:	4b7b      	ldr	r3, [pc, #492]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	4a7a      	ldr	r2, [pc, #488]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80014d4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80014d8:	6013      	str	r3, [r2, #0]
 80014da:	4b78      	ldr	r3, [pc, #480]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80014dc:	681b      	ldr	r3, [r3, #0]
 80014de:	4a77      	ldr	r2, [pc, #476]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80014e0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80014e4:	6013      	str	r3, [r2, #0]
 80014e6:	e01d      	b.n	8001524 <HAL_RCC_OscConfig+0xd4>
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	685b      	ldr	r3, [r3, #4]
 80014ec:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80014f0:	d10c      	bne.n	800150c <HAL_RCC_OscConfig+0xbc>
 80014f2:	4b72      	ldr	r3, [pc, #456]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80014f4:	681b      	ldr	r3, [r3, #0]
 80014f6:	4a71      	ldr	r2, [pc, #452]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80014f8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80014fc:	6013      	str	r3, [r2, #0]
 80014fe:	4b6f      	ldr	r3, [pc, #444]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001500:	681b      	ldr	r3, [r3, #0]
 8001502:	4a6e      	ldr	r2, [pc, #440]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001504:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001508:	6013      	str	r3, [r2, #0]
 800150a:	e00b      	b.n	8001524 <HAL_RCC_OscConfig+0xd4>
 800150c:	4b6b      	ldr	r3, [pc, #428]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 800150e:	681b      	ldr	r3, [r3, #0]
 8001510:	4a6a      	ldr	r2, [pc, #424]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001512:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001516:	6013      	str	r3, [r2, #0]
 8001518:	4b68      	ldr	r3, [pc, #416]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 800151a:	681b      	ldr	r3, [r3, #0]
 800151c:	4a67      	ldr	r2, [pc, #412]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 800151e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001522:	6013      	str	r3, [r2, #0]
 8001524:	687b      	ldr	r3, [r7, #4]
 8001526:	685b      	ldr	r3, [r3, #4]
 8001528:	2b00      	cmp	r3, #0
 800152a:	d013      	beq.n	8001554 <HAL_RCC_OscConfig+0x104>
 800152c:	f7ff fcf0 	bl	8000f10 <HAL_GetTick>
 8001530:	6138      	str	r0, [r7, #16]
 8001532:	e008      	b.n	8001546 <HAL_RCC_OscConfig+0xf6>
 8001534:	f7ff fcec 	bl	8000f10 <HAL_GetTick>
 8001538:	4602      	mov	r2, r0
 800153a:	693b      	ldr	r3, [r7, #16]
 800153c:	1ad3      	subs	r3, r2, r3
 800153e:	2b64      	cmp	r3, #100	; 0x64
 8001540:	d901      	bls.n	8001546 <HAL_RCC_OscConfig+0xf6>
 8001542:	2303      	movs	r3, #3
 8001544:	e1fa      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 8001546:	4b5d      	ldr	r3, [pc, #372]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001548:	681b      	ldr	r3, [r3, #0]
 800154a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800154e:	2b00      	cmp	r3, #0
 8001550:	d0f0      	beq.n	8001534 <HAL_RCC_OscConfig+0xe4>
 8001552:	e014      	b.n	800157e <HAL_RCC_OscConfig+0x12e>
 8001554:	f7ff fcdc 	bl	8000f10 <HAL_GetTick>
 8001558:	6138      	str	r0, [r7, #16]
 800155a:	e008      	b.n	800156e <HAL_RCC_OscConfig+0x11e>
 800155c:	f7ff fcd8 	bl	8000f10 <HAL_GetTick>
 8001560:	4602      	mov	r2, r0
 8001562:	693b      	ldr	r3, [r7, #16]
 8001564:	1ad3      	subs	r3, r2, r3
 8001566:	2b64      	cmp	r3, #100	; 0x64
 8001568:	d901      	bls.n	800156e <HAL_RCC_OscConfig+0x11e>
 800156a:	2303      	movs	r3, #3
 800156c:	e1e6      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 800156e:	4b53      	ldr	r3, [pc, #332]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001576:	2b00      	cmp	r3, #0
 8001578:	d1f0      	bne.n	800155c <HAL_RCC_OscConfig+0x10c>
 800157a:	e000      	b.n	800157e <HAL_RCC_OscConfig+0x12e>
 800157c:	bf00      	nop
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	f003 0302 	and.w	r3, r3, #2
 8001586:	2b00      	cmp	r3, #0
 8001588:	d063      	beq.n	8001652 <HAL_RCC_OscConfig+0x202>
 800158a:	4b4c      	ldr	r3, [pc, #304]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 800158c:	685b      	ldr	r3, [r3, #4]
 800158e:	f003 030c 	and.w	r3, r3, #12
 8001592:	2b00      	cmp	r3, #0
 8001594:	d00b      	beq.n	80015ae <HAL_RCC_OscConfig+0x15e>
 8001596:	4b49      	ldr	r3, [pc, #292]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001598:	685b      	ldr	r3, [r3, #4]
 800159a:	f003 030c 	and.w	r3, r3, #12
 800159e:	2b08      	cmp	r3, #8
 80015a0:	d11c      	bne.n	80015dc <HAL_RCC_OscConfig+0x18c>
 80015a2:	4b46      	ldr	r3, [pc, #280]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80015a4:	685b      	ldr	r3, [r3, #4]
 80015a6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	d116      	bne.n	80015dc <HAL_RCC_OscConfig+0x18c>
 80015ae:	4b43      	ldr	r3, [pc, #268]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	f003 0302 	and.w	r3, r3, #2
 80015b6:	2b00      	cmp	r3, #0
 80015b8:	d005      	beq.n	80015c6 <HAL_RCC_OscConfig+0x176>
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	691b      	ldr	r3, [r3, #16]
 80015be:	2b01      	cmp	r3, #1
 80015c0:	d001      	beq.n	80015c6 <HAL_RCC_OscConfig+0x176>
 80015c2:	2301      	movs	r3, #1
 80015c4:	e1ba      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 80015c6:	4b3d      	ldr	r3, [pc, #244]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80015c8:	681b      	ldr	r3, [r3, #0]
 80015ca:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	695b      	ldr	r3, [r3, #20]
 80015d2:	00db      	lsls	r3, r3, #3
 80015d4:	4939      	ldr	r1, [pc, #228]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 80015d6:	4313      	orrs	r3, r2
 80015d8:	600b      	str	r3, [r1, #0]
 80015da:	e03a      	b.n	8001652 <HAL_RCC_OscConfig+0x202>
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	691b      	ldr	r3, [r3, #16]
 80015e0:	2b00      	cmp	r3, #0
 80015e2:	d020      	beq.n	8001626 <HAL_RCC_OscConfig+0x1d6>
 80015e4:	4b36      	ldr	r3, [pc, #216]	; (80016c0 <HAL_RCC_OscConfig+0x270>)
 80015e6:	2201      	movs	r2, #1
 80015e8:	601a      	str	r2, [r3, #0]
 80015ea:	f7ff fc91 	bl	8000f10 <HAL_GetTick>
 80015ee:	6138      	str	r0, [r7, #16]
 80015f0:	e008      	b.n	8001604 <HAL_RCC_OscConfig+0x1b4>
 80015f2:	f7ff fc8d 	bl	8000f10 <HAL_GetTick>
 80015f6:	4602      	mov	r2, r0
 80015f8:	693b      	ldr	r3, [r7, #16]
 80015fa:	1ad3      	subs	r3, r2, r3
 80015fc:	2b02      	cmp	r3, #2
 80015fe:	d901      	bls.n	8001604 <HAL_RCC_OscConfig+0x1b4>
 8001600:	2303      	movs	r3, #3
 8001602:	e19b      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 8001604:	4b2d      	ldr	r3, [pc, #180]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001606:	681b      	ldr	r3, [r3, #0]
 8001608:	f003 0302 	and.w	r3, r3, #2
 800160c:	2b00      	cmp	r3, #0
 800160e:	d0f0      	beq.n	80015f2 <HAL_RCC_OscConfig+0x1a2>
 8001610:	4b2a      	ldr	r3, [pc, #168]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001618:	687b      	ldr	r3, [r7, #4]
 800161a:	695b      	ldr	r3, [r3, #20]
 800161c:	00db      	lsls	r3, r3, #3
 800161e:	4927      	ldr	r1, [pc, #156]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001620:	4313      	orrs	r3, r2
 8001622:	600b      	str	r3, [r1, #0]
 8001624:	e015      	b.n	8001652 <HAL_RCC_OscConfig+0x202>
 8001626:	4b26      	ldr	r3, [pc, #152]	; (80016c0 <HAL_RCC_OscConfig+0x270>)
 8001628:	2200      	movs	r2, #0
 800162a:	601a      	str	r2, [r3, #0]
 800162c:	f7ff fc70 	bl	8000f10 <HAL_GetTick>
 8001630:	6138      	str	r0, [r7, #16]
 8001632:	e008      	b.n	8001646 <HAL_RCC_OscConfig+0x1f6>
 8001634:	f7ff fc6c 	bl	8000f10 <HAL_GetTick>
 8001638:	4602      	mov	r2, r0
 800163a:	693b      	ldr	r3, [r7, #16]
 800163c:	1ad3      	subs	r3, r2, r3
 800163e:	2b02      	cmp	r3, #2
 8001640:	d901      	bls.n	8001646 <HAL_RCC_OscConfig+0x1f6>
 8001642:	2303      	movs	r3, #3
 8001644:	e17a      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 8001646:	4b1d      	ldr	r3, [pc, #116]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001648:	681b      	ldr	r3, [r3, #0]
 800164a:	f003 0302 	and.w	r3, r3, #2
 800164e:	2b00      	cmp	r3, #0
 8001650:	d1f0      	bne.n	8001634 <HAL_RCC_OscConfig+0x1e4>
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	681b      	ldr	r3, [r3, #0]
 8001656:	f003 0308 	and.w	r3, r3, #8
 800165a:	2b00      	cmp	r3, #0
 800165c:	d03a      	beq.n	80016d4 <HAL_RCC_OscConfig+0x284>
 800165e:	687b      	ldr	r3, [r7, #4]
 8001660:	699b      	ldr	r3, [r3, #24]
 8001662:	2b00      	cmp	r3, #0
 8001664:	d019      	beq.n	800169a <HAL_RCC_OscConfig+0x24a>
 8001666:	4b17      	ldr	r3, [pc, #92]	; (80016c4 <HAL_RCC_OscConfig+0x274>)
 8001668:	2201      	movs	r2, #1
 800166a:	601a      	str	r2, [r3, #0]
 800166c:	f7ff fc50 	bl	8000f10 <HAL_GetTick>
 8001670:	6138      	str	r0, [r7, #16]
 8001672:	e008      	b.n	8001686 <HAL_RCC_OscConfig+0x236>
 8001674:	f7ff fc4c 	bl	8000f10 <HAL_GetTick>
 8001678:	4602      	mov	r2, r0
 800167a:	693b      	ldr	r3, [r7, #16]
 800167c:	1ad3      	subs	r3, r2, r3
 800167e:	2b02      	cmp	r3, #2
 8001680:	d901      	bls.n	8001686 <HAL_RCC_OscConfig+0x236>
 8001682:	2303      	movs	r3, #3
 8001684:	e15a      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 8001686:	4b0d      	ldr	r3, [pc, #52]	; (80016bc <HAL_RCC_OscConfig+0x26c>)
 8001688:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800168a:	f003 0302 	and.w	r3, r3, #2
 800168e:	2b00      	cmp	r3, #0
 8001690:	d0f0      	beq.n	8001674 <HAL_RCC_OscConfig+0x224>
 8001692:	2001      	movs	r0, #1
 8001694:	f000 fb08 	bl	8001ca8 <RCC_Delay>
 8001698:	e01c      	b.n	80016d4 <HAL_RCC_OscConfig+0x284>
 800169a:	4b0a      	ldr	r3, [pc, #40]	; (80016c4 <HAL_RCC_OscConfig+0x274>)
 800169c:	2200      	movs	r2, #0
 800169e:	601a      	str	r2, [r3, #0]
 80016a0:	f7ff fc36 	bl	8000f10 <HAL_GetTick>
 80016a4:	6138      	str	r0, [r7, #16]
 80016a6:	e00f      	b.n	80016c8 <HAL_RCC_OscConfig+0x278>
 80016a8:	f7ff fc32 	bl	8000f10 <HAL_GetTick>
 80016ac:	4602      	mov	r2, r0
 80016ae:	693b      	ldr	r3, [r7, #16]
 80016b0:	1ad3      	subs	r3, r2, r3
 80016b2:	2b02      	cmp	r3, #2
 80016b4:	d908      	bls.n	80016c8 <HAL_RCC_OscConfig+0x278>
 80016b6:	2303      	movs	r3, #3
 80016b8:	e140      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 80016ba:	bf00      	nop
 80016bc:	40021000 	.word	0x40021000
 80016c0:	42420000 	.word	0x42420000
 80016c4:	42420480 	.word	0x42420480
 80016c8:	4b9e      	ldr	r3, [pc, #632]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80016ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80016cc:	f003 0302 	and.w	r3, r3, #2
 80016d0:	2b00      	cmp	r3, #0
 80016d2:	d1e9      	bne.n	80016a8 <HAL_RCC_OscConfig+0x258>
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	f003 0304 	and.w	r3, r3, #4
 80016dc:	2b00      	cmp	r3, #0
 80016de:	f000 80a6 	beq.w	800182e <HAL_RCC_OscConfig+0x3de>
 80016e2:	2300      	movs	r3, #0
 80016e4:	75fb      	strb	r3, [r7, #23]
 80016e6:	4b97      	ldr	r3, [pc, #604]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80016e8:	69db      	ldr	r3, [r3, #28]
 80016ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80016ee:	2b00      	cmp	r3, #0
 80016f0:	d10d      	bne.n	800170e <HAL_RCC_OscConfig+0x2be>
 80016f2:	4b94      	ldr	r3, [pc, #592]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80016f4:	69db      	ldr	r3, [r3, #28]
 80016f6:	4a93      	ldr	r2, [pc, #588]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80016f8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80016fc:	61d3      	str	r3, [r2, #28]
 80016fe:	4b91      	ldr	r3, [pc, #580]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001700:	69db      	ldr	r3, [r3, #28]
 8001702:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001706:	60bb      	str	r3, [r7, #8]
 8001708:	68bb      	ldr	r3, [r7, #8]
 800170a:	2301      	movs	r3, #1
 800170c:	75fb      	strb	r3, [r7, #23]
 800170e:	4b8e      	ldr	r3, [pc, #568]	; (8001948 <HAL_RCC_OscConfig+0x4f8>)
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001716:	2b00      	cmp	r3, #0
 8001718:	d118      	bne.n	800174c <HAL_RCC_OscConfig+0x2fc>
 800171a:	4b8b      	ldr	r3, [pc, #556]	; (8001948 <HAL_RCC_OscConfig+0x4f8>)
 800171c:	681b      	ldr	r3, [r3, #0]
 800171e:	4a8a      	ldr	r2, [pc, #552]	; (8001948 <HAL_RCC_OscConfig+0x4f8>)
 8001720:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001724:	6013      	str	r3, [r2, #0]
 8001726:	f7ff fbf3 	bl	8000f10 <HAL_GetTick>
 800172a:	6138      	str	r0, [r7, #16]
 800172c:	e008      	b.n	8001740 <HAL_RCC_OscConfig+0x2f0>
 800172e:	f7ff fbef 	bl	8000f10 <HAL_GetTick>
 8001732:	4602      	mov	r2, r0
 8001734:	693b      	ldr	r3, [r7, #16]
 8001736:	1ad3      	subs	r3, r2, r3
 8001738:	2b64      	cmp	r3, #100	; 0x64
 800173a:	d901      	bls.n	8001740 <HAL_RCC_OscConfig+0x2f0>
 800173c:	2303      	movs	r3, #3
 800173e:	e0fd      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 8001740:	4b81      	ldr	r3, [pc, #516]	; (8001948 <HAL_RCC_OscConfig+0x4f8>)
 8001742:	681b      	ldr	r3, [r3, #0]
 8001744:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001748:	2b00      	cmp	r3, #0
 800174a:	d0f0      	beq.n	800172e <HAL_RCC_OscConfig+0x2de>
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	68db      	ldr	r3, [r3, #12]
 8001750:	2b01      	cmp	r3, #1
 8001752:	d106      	bne.n	8001762 <HAL_RCC_OscConfig+0x312>
 8001754:	4b7b      	ldr	r3, [pc, #492]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001756:	6a1b      	ldr	r3, [r3, #32]
 8001758:	4a7a      	ldr	r2, [pc, #488]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 800175a:	f043 0301 	orr.w	r3, r3, #1
 800175e:	6213      	str	r3, [r2, #32]
 8001760:	e02d      	b.n	80017be <HAL_RCC_OscConfig+0x36e>
 8001762:	687b      	ldr	r3, [r7, #4]
 8001764:	68db      	ldr	r3, [r3, #12]
 8001766:	2b00      	cmp	r3, #0
 8001768:	d10c      	bne.n	8001784 <HAL_RCC_OscConfig+0x334>
 800176a:	4b76      	ldr	r3, [pc, #472]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 800176c:	6a1b      	ldr	r3, [r3, #32]
 800176e:	4a75      	ldr	r2, [pc, #468]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001770:	f023 0301 	bic.w	r3, r3, #1
 8001774:	6213      	str	r3, [r2, #32]
 8001776:	4b73      	ldr	r3, [pc, #460]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001778:	6a1b      	ldr	r3, [r3, #32]
 800177a:	4a72      	ldr	r2, [pc, #456]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 800177c:	f023 0304 	bic.w	r3, r3, #4
 8001780:	6213      	str	r3, [r2, #32]
 8001782:	e01c      	b.n	80017be <HAL_RCC_OscConfig+0x36e>
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	68db      	ldr	r3, [r3, #12]
 8001788:	2b05      	cmp	r3, #5
 800178a:	d10c      	bne.n	80017a6 <HAL_RCC_OscConfig+0x356>
 800178c:	4b6d      	ldr	r3, [pc, #436]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 800178e:	6a1b      	ldr	r3, [r3, #32]
 8001790:	4a6c      	ldr	r2, [pc, #432]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001792:	f043 0304 	orr.w	r3, r3, #4
 8001796:	6213      	str	r3, [r2, #32]
 8001798:	4b6a      	ldr	r3, [pc, #424]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 800179a:	6a1b      	ldr	r3, [r3, #32]
 800179c:	4a69      	ldr	r2, [pc, #420]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 800179e:	f043 0301 	orr.w	r3, r3, #1
 80017a2:	6213      	str	r3, [r2, #32]
 80017a4:	e00b      	b.n	80017be <HAL_RCC_OscConfig+0x36e>
 80017a6:	4b67      	ldr	r3, [pc, #412]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80017a8:	6a1b      	ldr	r3, [r3, #32]
 80017aa:	4a66      	ldr	r2, [pc, #408]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80017ac:	f023 0301 	bic.w	r3, r3, #1
 80017b0:	6213      	str	r3, [r2, #32]
 80017b2:	4b64      	ldr	r3, [pc, #400]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80017b4:	6a1b      	ldr	r3, [r3, #32]
 80017b6:	4a63      	ldr	r2, [pc, #396]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80017b8:	f023 0304 	bic.w	r3, r3, #4
 80017bc:	6213      	str	r3, [r2, #32]
 80017be:	687b      	ldr	r3, [r7, #4]
 80017c0:	68db      	ldr	r3, [r3, #12]
 80017c2:	2b00      	cmp	r3, #0
 80017c4:	d015      	beq.n	80017f2 <HAL_RCC_OscConfig+0x3a2>
 80017c6:	f7ff fba3 	bl	8000f10 <HAL_GetTick>
 80017ca:	6138      	str	r0, [r7, #16]
 80017cc:	e00a      	b.n	80017e4 <HAL_RCC_OscConfig+0x394>
 80017ce:	f7ff fb9f 	bl	8000f10 <HAL_GetTick>
 80017d2:	4602      	mov	r2, r0
 80017d4:	693b      	ldr	r3, [r7, #16]
 80017d6:	1ad3      	subs	r3, r2, r3
 80017d8:	f241 3288 	movw	r2, #5000	; 0x1388
 80017dc:	4293      	cmp	r3, r2
 80017de:	d901      	bls.n	80017e4 <HAL_RCC_OscConfig+0x394>
 80017e0:	2303      	movs	r3, #3
 80017e2:	e0ab      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 80017e4:	4b57      	ldr	r3, [pc, #348]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80017e6:	6a1b      	ldr	r3, [r3, #32]
 80017e8:	f003 0302 	and.w	r3, r3, #2
 80017ec:	2b00      	cmp	r3, #0
 80017ee:	d0ee      	beq.n	80017ce <HAL_RCC_OscConfig+0x37e>
 80017f0:	e014      	b.n	800181c <HAL_RCC_OscConfig+0x3cc>
 80017f2:	f7ff fb8d 	bl	8000f10 <HAL_GetTick>
 80017f6:	6138      	str	r0, [r7, #16]
 80017f8:	e00a      	b.n	8001810 <HAL_RCC_OscConfig+0x3c0>
 80017fa:	f7ff fb89 	bl	8000f10 <HAL_GetTick>
 80017fe:	4602      	mov	r2, r0
 8001800:	693b      	ldr	r3, [r7, #16]
 8001802:	1ad3      	subs	r3, r2, r3
 8001804:	f241 3288 	movw	r2, #5000	; 0x1388
 8001808:	4293      	cmp	r3, r2
 800180a:	d901      	bls.n	8001810 <HAL_RCC_OscConfig+0x3c0>
 800180c:	2303      	movs	r3, #3
 800180e:	e095      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 8001810:	4b4c      	ldr	r3, [pc, #304]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001812:	6a1b      	ldr	r3, [r3, #32]
 8001814:	f003 0302 	and.w	r3, r3, #2
 8001818:	2b00      	cmp	r3, #0
 800181a:	d1ee      	bne.n	80017fa <HAL_RCC_OscConfig+0x3aa>
 800181c:	7dfb      	ldrb	r3, [r7, #23]
 800181e:	2b01      	cmp	r3, #1
 8001820:	d105      	bne.n	800182e <HAL_RCC_OscConfig+0x3de>
 8001822:	4b48      	ldr	r3, [pc, #288]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001824:	69db      	ldr	r3, [r3, #28]
 8001826:	4a47      	ldr	r2, [pc, #284]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001828:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800182c:	61d3      	str	r3, [r2, #28]
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	69db      	ldr	r3, [r3, #28]
 8001832:	2b00      	cmp	r3, #0
 8001834:	f000 8081 	beq.w	800193a <HAL_RCC_OscConfig+0x4ea>
 8001838:	4b42      	ldr	r3, [pc, #264]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 800183a:	685b      	ldr	r3, [r3, #4]
 800183c:	f003 030c 	and.w	r3, r3, #12
 8001840:	2b08      	cmp	r3, #8
 8001842:	d061      	beq.n	8001908 <HAL_RCC_OscConfig+0x4b8>
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	69db      	ldr	r3, [r3, #28]
 8001848:	2b02      	cmp	r3, #2
 800184a:	d146      	bne.n	80018da <HAL_RCC_OscConfig+0x48a>
 800184c:	4b3f      	ldr	r3, [pc, #252]	; (800194c <HAL_RCC_OscConfig+0x4fc>)
 800184e:	2200      	movs	r2, #0
 8001850:	601a      	str	r2, [r3, #0]
 8001852:	f7ff fb5d 	bl	8000f10 <HAL_GetTick>
 8001856:	6138      	str	r0, [r7, #16]
 8001858:	e008      	b.n	800186c <HAL_RCC_OscConfig+0x41c>
 800185a:	f7ff fb59 	bl	8000f10 <HAL_GetTick>
 800185e:	4602      	mov	r2, r0
 8001860:	693b      	ldr	r3, [r7, #16]
 8001862:	1ad3      	subs	r3, r2, r3
 8001864:	2b02      	cmp	r3, #2
 8001866:	d901      	bls.n	800186c <HAL_RCC_OscConfig+0x41c>
 8001868:	2303      	movs	r3, #3
 800186a:	e067      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 800186c:	4b35      	ldr	r3, [pc, #212]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001874:	2b00      	cmp	r3, #0
 8001876:	d1f0      	bne.n	800185a <HAL_RCC_OscConfig+0x40a>
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	6a1b      	ldr	r3, [r3, #32]
 800187c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001880:	d108      	bne.n	8001894 <HAL_RCC_OscConfig+0x444>
 8001882:	4b30      	ldr	r3, [pc, #192]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001884:	685b      	ldr	r3, [r3, #4]
 8001886:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800188a:	687b      	ldr	r3, [r7, #4]
 800188c:	689b      	ldr	r3, [r3, #8]
 800188e:	492d      	ldr	r1, [pc, #180]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001890:	4313      	orrs	r3, r2
 8001892:	604b      	str	r3, [r1, #4]
 8001894:	4b2b      	ldr	r3, [pc, #172]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001896:	685b      	ldr	r3, [r3, #4]
 8001898:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 800189c:	687b      	ldr	r3, [r7, #4]
 800189e:	6a19      	ldr	r1, [r3, #32]
 80018a0:	687b      	ldr	r3, [r7, #4]
 80018a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80018a4:	430b      	orrs	r3, r1
 80018a6:	4927      	ldr	r1, [pc, #156]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80018a8:	4313      	orrs	r3, r2
 80018aa:	604b      	str	r3, [r1, #4]
 80018ac:	4b27      	ldr	r3, [pc, #156]	; (800194c <HAL_RCC_OscConfig+0x4fc>)
 80018ae:	2201      	movs	r2, #1
 80018b0:	601a      	str	r2, [r3, #0]
 80018b2:	f7ff fb2d 	bl	8000f10 <HAL_GetTick>
 80018b6:	6138      	str	r0, [r7, #16]
 80018b8:	e008      	b.n	80018cc <HAL_RCC_OscConfig+0x47c>
 80018ba:	f7ff fb29 	bl	8000f10 <HAL_GetTick>
 80018be:	4602      	mov	r2, r0
 80018c0:	693b      	ldr	r3, [r7, #16]
 80018c2:	1ad3      	subs	r3, r2, r3
 80018c4:	2b02      	cmp	r3, #2
 80018c6:	d901      	bls.n	80018cc <HAL_RCC_OscConfig+0x47c>
 80018c8:	2303      	movs	r3, #3
 80018ca:	e037      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 80018cc:	4b1d      	ldr	r3, [pc, #116]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80018d4:	2b00      	cmp	r3, #0
 80018d6:	d0f0      	beq.n	80018ba <HAL_RCC_OscConfig+0x46a>
 80018d8:	e02f      	b.n	800193a <HAL_RCC_OscConfig+0x4ea>
 80018da:	4b1c      	ldr	r3, [pc, #112]	; (800194c <HAL_RCC_OscConfig+0x4fc>)
 80018dc:	2200      	movs	r2, #0
 80018de:	601a      	str	r2, [r3, #0]
 80018e0:	f7ff fb16 	bl	8000f10 <HAL_GetTick>
 80018e4:	6138      	str	r0, [r7, #16]
 80018e6:	e008      	b.n	80018fa <HAL_RCC_OscConfig+0x4aa>
 80018e8:	f7ff fb12 	bl	8000f10 <HAL_GetTick>
 80018ec:	4602      	mov	r2, r0
 80018ee:	693b      	ldr	r3, [r7, #16]
 80018f0:	1ad3      	subs	r3, r2, r3
 80018f2:	2b02      	cmp	r3, #2
 80018f4:	d901      	bls.n	80018fa <HAL_RCC_OscConfig+0x4aa>
 80018f6:	2303      	movs	r3, #3
 80018f8:	e020      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 80018fa:	4b12      	ldr	r3, [pc, #72]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 80018fc:	681b      	ldr	r3, [r3, #0]
 80018fe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001902:	2b00      	cmp	r3, #0
 8001904:	d1f0      	bne.n	80018e8 <HAL_RCC_OscConfig+0x498>
 8001906:	e018      	b.n	800193a <HAL_RCC_OscConfig+0x4ea>
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	69db      	ldr	r3, [r3, #28]
 800190c:	2b01      	cmp	r3, #1
 800190e:	d101      	bne.n	8001914 <HAL_RCC_OscConfig+0x4c4>
 8001910:	2301      	movs	r3, #1
 8001912:	e013      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 8001914:	4b0b      	ldr	r3, [pc, #44]	; (8001944 <HAL_RCC_OscConfig+0x4f4>)
 8001916:	685b      	ldr	r3, [r3, #4]
 8001918:	60fb      	str	r3, [r7, #12]
 800191a:	68fb      	ldr	r3, [r7, #12]
 800191c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	6a1b      	ldr	r3, [r3, #32]
 8001924:	429a      	cmp	r2, r3
 8001926:	d106      	bne.n	8001936 <HAL_RCC_OscConfig+0x4e6>
 8001928:	68fb      	ldr	r3, [r7, #12]
 800192a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800192e:	687b      	ldr	r3, [r7, #4]
 8001930:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001932:	429a      	cmp	r2, r3
 8001934:	d001      	beq.n	800193a <HAL_RCC_OscConfig+0x4ea>
 8001936:	2301      	movs	r3, #1
 8001938:	e000      	b.n	800193c <HAL_RCC_OscConfig+0x4ec>
 800193a:	2300      	movs	r3, #0
 800193c:	4618      	mov	r0, r3
 800193e:	3718      	adds	r7, #24
 8001940:	46bd      	mov	sp, r7
 8001942:	bd80      	pop	{r7, pc}
 8001944:	40021000 	.word	0x40021000
 8001948:	40007000 	.word	0x40007000
 800194c:	42420060 	.word	0x42420060

08001950 <HAL_RCC_ClockConfig>:
 8001950:	b580      	push	{r7, lr}
 8001952:	b084      	sub	sp, #16
 8001954:	af00      	add	r7, sp, #0
 8001956:	6078      	str	r0, [r7, #4]
 8001958:	6039      	str	r1, [r7, #0]
 800195a:	687b      	ldr	r3, [r7, #4]
 800195c:	2b00      	cmp	r3, #0
 800195e:	d101      	bne.n	8001964 <HAL_RCC_ClockConfig+0x14>
 8001960:	2301      	movs	r3, #1
 8001962:	e0d0      	b.n	8001b06 <HAL_RCC_ClockConfig+0x1b6>
 8001964:	4b6a      	ldr	r3, [pc, #424]	; (8001b10 <HAL_RCC_ClockConfig+0x1c0>)
 8001966:	681b      	ldr	r3, [r3, #0]
 8001968:	f003 0307 	and.w	r3, r3, #7
 800196c:	683a      	ldr	r2, [r7, #0]
 800196e:	429a      	cmp	r2, r3
 8001970:	d910      	bls.n	8001994 <HAL_RCC_ClockConfig+0x44>
 8001972:	4b67      	ldr	r3, [pc, #412]	; (8001b10 <HAL_RCC_ClockConfig+0x1c0>)
 8001974:	681b      	ldr	r3, [r3, #0]
 8001976:	f023 0207 	bic.w	r2, r3, #7
 800197a:	4965      	ldr	r1, [pc, #404]	; (8001b10 <HAL_RCC_ClockConfig+0x1c0>)
 800197c:	683b      	ldr	r3, [r7, #0]
 800197e:	4313      	orrs	r3, r2
 8001980:	600b      	str	r3, [r1, #0]
 8001982:	4b63      	ldr	r3, [pc, #396]	; (8001b10 <HAL_RCC_ClockConfig+0x1c0>)
 8001984:	681b      	ldr	r3, [r3, #0]
 8001986:	f003 0307 	and.w	r3, r3, #7
 800198a:	683a      	ldr	r2, [r7, #0]
 800198c:	429a      	cmp	r2, r3
 800198e:	d001      	beq.n	8001994 <HAL_RCC_ClockConfig+0x44>
 8001990:	2301      	movs	r3, #1
 8001992:	e0b8      	b.n	8001b06 <HAL_RCC_ClockConfig+0x1b6>
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	681b      	ldr	r3, [r3, #0]
 8001998:	f003 0302 	and.w	r3, r3, #2
 800199c:	2b00      	cmp	r3, #0
 800199e:	d020      	beq.n	80019e2 <HAL_RCC_ClockConfig+0x92>
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	681b      	ldr	r3, [r3, #0]
 80019a4:	f003 0304 	and.w	r3, r3, #4
 80019a8:	2b00      	cmp	r3, #0
 80019aa:	d005      	beq.n	80019b8 <HAL_RCC_ClockConfig+0x68>
 80019ac:	4b59      	ldr	r3, [pc, #356]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 80019ae:	685b      	ldr	r3, [r3, #4]
 80019b0:	4a58      	ldr	r2, [pc, #352]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 80019b2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80019b6:	6053      	str	r3, [r2, #4]
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	681b      	ldr	r3, [r3, #0]
 80019bc:	f003 0308 	and.w	r3, r3, #8
 80019c0:	2b00      	cmp	r3, #0
 80019c2:	d005      	beq.n	80019d0 <HAL_RCC_ClockConfig+0x80>
 80019c4:	4b53      	ldr	r3, [pc, #332]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 80019c6:	685b      	ldr	r3, [r3, #4]
 80019c8:	4a52      	ldr	r2, [pc, #328]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 80019ca:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80019ce:	6053      	str	r3, [r2, #4]
 80019d0:	4b50      	ldr	r3, [pc, #320]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 80019d2:	685b      	ldr	r3, [r3, #4]
 80019d4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	689b      	ldr	r3, [r3, #8]
 80019dc:	494d      	ldr	r1, [pc, #308]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 80019de:	4313      	orrs	r3, r2
 80019e0:	604b      	str	r3, [r1, #4]
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	681b      	ldr	r3, [r3, #0]
 80019e6:	f003 0301 	and.w	r3, r3, #1
 80019ea:	2b00      	cmp	r3, #0
 80019ec:	d040      	beq.n	8001a70 <HAL_RCC_ClockConfig+0x120>
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	685b      	ldr	r3, [r3, #4]
 80019f2:	2b01      	cmp	r3, #1
 80019f4:	d107      	bne.n	8001a06 <HAL_RCC_ClockConfig+0xb6>
 80019f6:	4b47      	ldr	r3, [pc, #284]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80019fe:	2b00      	cmp	r3, #0
 8001a00:	d115      	bne.n	8001a2e <HAL_RCC_ClockConfig+0xde>
 8001a02:	2301      	movs	r3, #1
 8001a04:	e07f      	b.n	8001b06 <HAL_RCC_ClockConfig+0x1b6>
 8001a06:	687b      	ldr	r3, [r7, #4]
 8001a08:	685b      	ldr	r3, [r3, #4]
 8001a0a:	2b02      	cmp	r3, #2
 8001a0c:	d107      	bne.n	8001a1e <HAL_RCC_ClockConfig+0xce>
 8001a0e:	4b41      	ldr	r3, [pc, #260]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 8001a10:	681b      	ldr	r3, [r3, #0]
 8001a12:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a16:	2b00      	cmp	r3, #0
 8001a18:	d109      	bne.n	8001a2e <HAL_RCC_ClockConfig+0xde>
 8001a1a:	2301      	movs	r3, #1
 8001a1c:	e073      	b.n	8001b06 <HAL_RCC_ClockConfig+0x1b6>
 8001a1e:	4b3d      	ldr	r3, [pc, #244]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	f003 0302 	and.w	r3, r3, #2
 8001a26:	2b00      	cmp	r3, #0
 8001a28:	d101      	bne.n	8001a2e <HAL_RCC_ClockConfig+0xde>
 8001a2a:	2301      	movs	r3, #1
 8001a2c:	e06b      	b.n	8001b06 <HAL_RCC_ClockConfig+0x1b6>
 8001a2e:	4b39      	ldr	r3, [pc, #228]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 8001a30:	685b      	ldr	r3, [r3, #4]
 8001a32:	f023 0203 	bic.w	r2, r3, #3
 8001a36:	687b      	ldr	r3, [r7, #4]
 8001a38:	685b      	ldr	r3, [r3, #4]
 8001a3a:	4936      	ldr	r1, [pc, #216]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 8001a3c:	4313      	orrs	r3, r2
 8001a3e:	604b      	str	r3, [r1, #4]
 8001a40:	f7ff fa66 	bl	8000f10 <HAL_GetTick>
 8001a44:	60f8      	str	r0, [r7, #12]
 8001a46:	e00a      	b.n	8001a5e <HAL_RCC_ClockConfig+0x10e>
 8001a48:	f7ff fa62 	bl	8000f10 <HAL_GetTick>
 8001a4c:	4602      	mov	r2, r0
 8001a4e:	68fb      	ldr	r3, [r7, #12]
 8001a50:	1ad3      	subs	r3, r2, r3
 8001a52:	f241 3288 	movw	r2, #5000	; 0x1388
 8001a56:	4293      	cmp	r3, r2
 8001a58:	d901      	bls.n	8001a5e <HAL_RCC_ClockConfig+0x10e>
 8001a5a:	2303      	movs	r3, #3
 8001a5c:	e053      	b.n	8001b06 <HAL_RCC_ClockConfig+0x1b6>
 8001a5e:	4b2d      	ldr	r3, [pc, #180]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 8001a60:	685b      	ldr	r3, [r3, #4]
 8001a62:	f003 020c 	and.w	r2, r3, #12
 8001a66:	687b      	ldr	r3, [r7, #4]
 8001a68:	685b      	ldr	r3, [r3, #4]
 8001a6a:	009b      	lsls	r3, r3, #2
 8001a6c:	429a      	cmp	r2, r3
 8001a6e:	d1eb      	bne.n	8001a48 <HAL_RCC_ClockConfig+0xf8>
 8001a70:	4b27      	ldr	r3, [pc, #156]	; (8001b10 <HAL_RCC_ClockConfig+0x1c0>)
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	f003 0307 	and.w	r3, r3, #7
 8001a78:	683a      	ldr	r2, [r7, #0]
 8001a7a:	429a      	cmp	r2, r3
 8001a7c:	d210      	bcs.n	8001aa0 <HAL_RCC_ClockConfig+0x150>
 8001a7e:	4b24      	ldr	r3, [pc, #144]	; (8001b10 <HAL_RCC_ClockConfig+0x1c0>)
 8001a80:	681b      	ldr	r3, [r3, #0]
 8001a82:	f023 0207 	bic.w	r2, r3, #7
 8001a86:	4922      	ldr	r1, [pc, #136]	; (8001b10 <HAL_RCC_ClockConfig+0x1c0>)
 8001a88:	683b      	ldr	r3, [r7, #0]
 8001a8a:	4313      	orrs	r3, r2
 8001a8c:	600b      	str	r3, [r1, #0]
 8001a8e:	4b20      	ldr	r3, [pc, #128]	; (8001b10 <HAL_RCC_ClockConfig+0x1c0>)
 8001a90:	681b      	ldr	r3, [r3, #0]
 8001a92:	f003 0307 	and.w	r3, r3, #7
 8001a96:	683a      	ldr	r2, [r7, #0]
 8001a98:	429a      	cmp	r2, r3
 8001a9a:	d001      	beq.n	8001aa0 <HAL_RCC_ClockConfig+0x150>
 8001a9c:	2301      	movs	r3, #1
 8001a9e:	e032      	b.n	8001b06 <HAL_RCC_ClockConfig+0x1b6>
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	f003 0304 	and.w	r3, r3, #4
 8001aa8:	2b00      	cmp	r3, #0
 8001aaa:	d008      	beq.n	8001abe <HAL_RCC_ClockConfig+0x16e>
 8001aac:	4b19      	ldr	r3, [pc, #100]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 8001aae:	685b      	ldr	r3, [r3, #4]
 8001ab0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	68db      	ldr	r3, [r3, #12]
 8001ab8:	4916      	ldr	r1, [pc, #88]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 8001aba:	4313      	orrs	r3, r2
 8001abc:	604b      	str	r3, [r1, #4]
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	681b      	ldr	r3, [r3, #0]
 8001ac2:	f003 0308 	and.w	r3, r3, #8
 8001ac6:	2b00      	cmp	r3, #0
 8001ac8:	d009      	beq.n	8001ade <HAL_RCC_ClockConfig+0x18e>
 8001aca:	4b12      	ldr	r3, [pc, #72]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 8001acc:	685b      	ldr	r3, [r3, #4]
 8001ace:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	691b      	ldr	r3, [r3, #16]
 8001ad6:	00db      	lsls	r3, r3, #3
 8001ad8:	490e      	ldr	r1, [pc, #56]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 8001ada:	4313      	orrs	r3, r2
 8001adc:	604b      	str	r3, [r1, #4]
 8001ade:	f000 f821 	bl	8001b24 <HAL_RCC_GetSysClockFreq>
 8001ae2:	4602      	mov	r2, r0
 8001ae4:	4b0b      	ldr	r3, [pc, #44]	; (8001b14 <HAL_RCC_ClockConfig+0x1c4>)
 8001ae6:	685b      	ldr	r3, [r3, #4]
 8001ae8:	091b      	lsrs	r3, r3, #4
 8001aea:	f003 030f 	and.w	r3, r3, #15
 8001aee:	490a      	ldr	r1, [pc, #40]	; (8001b18 <HAL_RCC_ClockConfig+0x1c8>)
 8001af0:	5ccb      	ldrb	r3, [r1, r3]
 8001af2:	fa22 f303 	lsr.w	r3, r2, r3
 8001af6:	4a09      	ldr	r2, [pc, #36]	; (8001b1c <HAL_RCC_ClockConfig+0x1cc>)
 8001af8:	6013      	str	r3, [r2, #0]
 8001afa:	4b09      	ldr	r3, [pc, #36]	; (8001b20 <HAL_RCC_ClockConfig+0x1d0>)
 8001afc:	681b      	ldr	r3, [r3, #0]
 8001afe:	4618      	mov	r0, r3
 8001b00:	f7ff f87c 	bl	8000bfc <HAL_InitTick>
 8001b04:	2300      	movs	r3, #0
 8001b06:	4618      	mov	r0, r3
 8001b08:	3710      	adds	r7, #16
 8001b0a:	46bd      	mov	sp, r7
 8001b0c:	bd80      	pop	{r7, pc}
 8001b0e:	bf00      	nop
 8001b10:	40022000 	.word	0x40022000
 8001b14:	40021000 	.word	0x40021000
 8001b18:	08004f6c 	.word	0x08004f6c
 8001b1c:	20000088 	.word	0x20000088
 8001b20:	2000008c 	.word	0x2000008c

08001b24 <HAL_RCC_GetSysClockFreq>:
 8001b24:	b490      	push	{r4, r7}
 8001b26:	b08a      	sub	sp, #40	; 0x28
 8001b28:	af00      	add	r7, sp, #0
 8001b2a:	4b2a      	ldr	r3, [pc, #168]	; (8001bd4 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001b2c:	1d3c      	adds	r4, r7, #4
 8001b2e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001b30:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001b34:	f240 2301 	movw	r3, #513	; 0x201
 8001b38:	803b      	strh	r3, [r7, #0]
 8001b3a:	2300      	movs	r3, #0
 8001b3c:	61fb      	str	r3, [r7, #28]
 8001b3e:	2300      	movs	r3, #0
 8001b40:	61bb      	str	r3, [r7, #24]
 8001b42:	2300      	movs	r3, #0
 8001b44:	627b      	str	r3, [r7, #36]	; 0x24
 8001b46:	2300      	movs	r3, #0
 8001b48:	617b      	str	r3, [r7, #20]
 8001b4a:	2300      	movs	r3, #0
 8001b4c:	623b      	str	r3, [r7, #32]
 8001b4e:	4b22      	ldr	r3, [pc, #136]	; (8001bd8 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001b50:	685b      	ldr	r3, [r3, #4]
 8001b52:	61fb      	str	r3, [r7, #28]
 8001b54:	69fb      	ldr	r3, [r7, #28]
 8001b56:	f003 030c 	and.w	r3, r3, #12
 8001b5a:	2b04      	cmp	r3, #4
 8001b5c:	d002      	beq.n	8001b64 <HAL_RCC_GetSysClockFreq+0x40>
 8001b5e:	2b08      	cmp	r3, #8
 8001b60:	d003      	beq.n	8001b6a <HAL_RCC_GetSysClockFreq+0x46>
 8001b62:	e02d      	b.n	8001bc0 <HAL_RCC_GetSysClockFreq+0x9c>
 8001b64:	4b1d      	ldr	r3, [pc, #116]	; (8001bdc <HAL_RCC_GetSysClockFreq+0xb8>)
 8001b66:	623b      	str	r3, [r7, #32]
 8001b68:	e02d      	b.n	8001bc6 <HAL_RCC_GetSysClockFreq+0xa2>
 8001b6a:	69fb      	ldr	r3, [r7, #28]
 8001b6c:	0c9b      	lsrs	r3, r3, #18
 8001b6e:	f003 030f 	and.w	r3, r3, #15
 8001b72:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001b76:	4413      	add	r3, r2
 8001b78:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001b7c:	617b      	str	r3, [r7, #20]
 8001b7e:	69fb      	ldr	r3, [r7, #28]
 8001b80:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001b84:	2b00      	cmp	r3, #0
 8001b86:	d013      	beq.n	8001bb0 <HAL_RCC_GetSysClockFreq+0x8c>
 8001b88:	4b13      	ldr	r3, [pc, #76]	; (8001bd8 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001b8a:	685b      	ldr	r3, [r3, #4]
 8001b8c:	0c5b      	lsrs	r3, r3, #17
 8001b8e:	f003 0301 	and.w	r3, r3, #1
 8001b92:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001b96:	4413      	add	r3, r2
 8001b98:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001b9c:	61bb      	str	r3, [r7, #24]
 8001b9e:	697b      	ldr	r3, [r7, #20]
 8001ba0:	4a0e      	ldr	r2, [pc, #56]	; (8001bdc <HAL_RCC_GetSysClockFreq+0xb8>)
 8001ba2:	fb02 f203 	mul.w	r2, r2, r3
 8001ba6:	69bb      	ldr	r3, [r7, #24]
 8001ba8:	fbb2 f3f3 	udiv	r3, r2, r3
 8001bac:	627b      	str	r3, [r7, #36]	; 0x24
 8001bae:	e004      	b.n	8001bba <HAL_RCC_GetSysClockFreq+0x96>
 8001bb0:	697b      	ldr	r3, [r7, #20]
 8001bb2:	4a0b      	ldr	r2, [pc, #44]	; (8001be0 <HAL_RCC_GetSysClockFreq+0xbc>)
 8001bb4:	fb02 f303 	mul.w	r3, r2, r3
 8001bb8:	627b      	str	r3, [r7, #36]	; 0x24
 8001bba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001bbc:	623b      	str	r3, [r7, #32]
 8001bbe:	e002      	b.n	8001bc6 <HAL_RCC_GetSysClockFreq+0xa2>
 8001bc0:	4b06      	ldr	r3, [pc, #24]	; (8001bdc <HAL_RCC_GetSysClockFreq+0xb8>)
 8001bc2:	623b      	str	r3, [r7, #32]
 8001bc4:	bf00      	nop
 8001bc6:	6a3b      	ldr	r3, [r7, #32]
 8001bc8:	4618      	mov	r0, r3
 8001bca:	3728      	adds	r7, #40	; 0x28
 8001bcc:	46bd      	mov	sp, r7
 8001bce:	bc90      	pop	{r4, r7}
 8001bd0:	4770      	bx	lr
 8001bd2:	bf00      	nop
 8001bd4:	08004f54 	.word	0x08004f54
 8001bd8:	40021000 	.word	0x40021000
 8001bdc:	007a1200 	.word	0x007a1200
 8001be0:	003d0900 	.word	0x003d0900

08001be4 <HAL_RCC_GetHCLKFreq>:
 8001be4:	b480      	push	{r7}
 8001be6:	af00      	add	r7, sp, #0
 8001be8:	4b02      	ldr	r3, [pc, #8]	; (8001bf4 <HAL_RCC_GetHCLKFreq+0x10>)
 8001bea:	681b      	ldr	r3, [r3, #0]
 8001bec:	4618      	mov	r0, r3
 8001bee:	46bd      	mov	sp, r7
 8001bf0:	bc80      	pop	{r7}
 8001bf2:	4770      	bx	lr
 8001bf4:	20000088 	.word	0x20000088

08001bf8 <HAL_RCC_GetPCLK1Freq>:
 8001bf8:	b580      	push	{r7, lr}
 8001bfa:	af00      	add	r7, sp, #0
 8001bfc:	f7ff fff2 	bl	8001be4 <HAL_RCC_GetHCLKFreq>
 8001c00:	4602      	mov	r2, r0
 8001c02:	4b05      	ldr	r3, [pc, #20]	; (8001c18 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001c04:	685b      	ldr	r3, [r3, #4]
 8001c06:	0a1b      	lsrs	r3, r3, #8
 8001c08:	f003 0307 	and.w	r3, r3, #7
 8001c0c:	4903      	ldr	r1, [pc, #12]	; (8001c1c <HAL_RCC_GetPCLK1Freq+0x24>)
 8001c0e:	5ccb      	ldrb	r3, [r1, r3]
 8001c10:	fa22 f303 	lsr.w	r3, r2, r3
 8001c14:	4618      	mov	r0, r3
 8001c16:	bd80      	pop	{r7, pc}
 8001c18:	40021000 	.word	0x40021000
 8001c1c:	08004f7c 	.word	0x08004f7c

08001c20 <HAL_RCC_GetPCLK2Freq>:
 8001c20:	b580      	push	{r7, lr}
 8001c22:	af00      	add	r7, sp, #0
 8001c24:	f7ff ffde 	bl	8001be4 <HAL_RCC_GetHCLKFreq>
 8001c28:	4602      	mov	r2, r0
 8001c2a:	4b05      	ldr	r3, [pc, #20]	; (8001c40 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001c2c:	685b      	ldr	r3, [r3, #4]
 8001c2e:	0adb      	lsrs	r3, r3, #11
 8001c30:	f003 0307 	and.w	r3, r3, #7
 8001c34:	4903      	ldr	r1, [pc, #12]	; (8001c44 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001c36:	5ccb      	ldrb	r3, [r1, r3]
 8001c38:	fa22 f303 	lsr.w	r3, r2, r3
 8001c3c:	4618      	mov	r0, r3
 8001c3e:	bd80      	pop	{r7, pc}
 8001c40:	40021000 	.word	0x40021000
 8001c44:	08004f7c 	.word	0x08004f7c

08001c48 <HAL_RCC_GetClockConfig>:
 8001c48:	b480      	push	{r7}
 8001c4a:	b083      	sub	sp, #12
 8001c4c:	af00      	add	r7, sp, #0
 8001c4e:	6078      	str	r0, [r7, #4]
 8001c50:	6039      	str	r1, [r7, #0]
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	220f      	movs	r2, #15
 8001c56:	601a      	str	r2, [r3, #0]
 8001c58:	4b11      	ldr	r3, [pc, #68]	; (8001ca0 <HAL_RCC_GetClockConfig+0x58>)
 8001c5a:	685b      	ldr	r3, [r3, #4]
 8001c5c:	f003 0203 	and.w	r2, r3, #3
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	605a      	str	r2, [r3, #4]
 8001c64:	4b0e      	ldr	r3, [pc, #56]	; (8001ca0 <HAL_RCC_GetClockConfig+0x58>)
 8001c66:	685b      	ldr	r3, [r3, #4]
 8001c68:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	609a      	str	r2, [r3, #8]
 8001c70:	4b0b      	ldr	r3, [pc, #44]	; (8001ca0 <HAL_RCC_GetClockConfig+0x58>)
 8001c72:	685b      	ldr	r3, [r3, #4]
 8001c74:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	60da      	str	r2, [r3, #12]
 8001c7c:	4b08      	ldr	r3, [pc, #32]	; (8001ca0 <HAL_RCC_GetClockConfig+0x58>)
 8001c7e:	685b      	ldr	r3, [r3, #4]
 8001c80:	08db      	lsrs	r3, r3, #3
 8001c82:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	611a      	str	r2, [r3, #16]
 8001c8a:	4b06      	ldr	r3, [pc, #24]	; (8001ca4 <HAL_RCC_GetClockConfig+0x5c>)
 8001c8c:	681b      	ldr	r3, [r3, #0]
 8001c8e:	f003 0207 	and.w	r2, r3, #7
 8001c92:	683b      	ldr	r3, [r7, #0]
 8001c94:	601a      	str	r2, [r3, #0]
 8001c96:	bf00      	nop
 8001c98:	370c      	adds	r7, #12
 8001c9a:	46bd      	mov	sp, r7
 8001c9c:	bc80      	pop	{r7}
 8001c9e:	4770      	bx	lr
 8001ca0:	40021000 	.word	0x40021000
 8001ca4:	40022000 	.word	0x40022000

08001ca8 <RCC_Delay>:
 8001ca8:	b480      	push	{r7}
 8001caa:	b085      	sub	sp, #20
 8001cac:	af00      	add	r7, sp, #0
 8001cae:	6078      	str	r0, [r7, #4]
 8001cb0:	4b0a      	ldr	r3, [pc, #40]	; (8001cdc <RCC_Delay+0x34>)
 8001cb2:	681b      	ldr	r3, [r3, #0]
 8001cb4:	4a0a      	ldr	r2, [pc, #40]	; (8001ce0 <RCC_Delay+0x38>)
 8001cb6:	fba2 2303 	umull	r2, r3, r2, r3
 8001cba:	0a5b      	lsrs	r3, r3, #9
 8001cbc:	687a      	ldr	r2, [r7, #4]
 8001cbe:	fb02 f303 	mul.w	r3, r2, r3
 8001cc2:	60fb      	str	r3, [r7, #12]
 8001cc4:	bf00      	nop
 8001cc6:	68fb      	ldr	r3, [r7, #12]
 8001cc8:	1e5a      	subs	r2, r3, #1
 8001cca:	60fa      	str	r2, [r7, #12]
 8001ccc:	2b00      	cmp	r3, #0
 8001cce:	d1f9      	bne.n	8001cc4 <RCC_Delay+0x1c>
 8001cd0:	bf00      	nop
 8001cd2:	bf00      	nop
 8001cd4:	3714      	adds	r7, #20
 8001cd6:	46bd      	mov	sp, r7
 8001cd8:	bc80      	pop	{r7}
 8001cda:	4770      	bx	lr
 8001cdc:	20000088 	.word	0x20000088
 8001ce0:	10624dd3 	.word	0x10624dd3

08001ce4 <HAL_TIM_Base_Init>:
 8001ce4:	b580      	push	{r7, lr}
 8001ce6:	b082      	sub	sp, #8
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	6078      	str	r0, [r7, #4]
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	2b00      	cmp	r3, #0
 8001cf0:	d101      	bne.n	8001cf6 <HAL_TIM_Base_Init+0x12>
 8001cf2:	2301      	movs	r3, #1
 8001cf4:	e041      	b.n	8001d7a <HAL_TIM_Base_Init+0x96>
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001cfc:	b2db      	uxtb	r3, r3
 8001cfe:	2b00      	cmp	r3, #0
 8001d00:	d106      	bne.n	8001d10 <HAL_TIM_Base_Init+0x2c>
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	2200      	movs	r2, #0
 8001d06:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001d0a:	6878      	ldr	r0, [r7, #4]
 8001d0c:	f000 f839 	bl	8001d82 <HAL_TIM_Base_MspInit>
 8001d10:	687b      	ldr	r3, [r7, #4]
 8001d12:	2202      	movs	r2, #2
 8001d14:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	681a      	ldr	r2, [r3, #0]
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	3304      	adds	r3, #4
 8001d20:	4619      	mov	r1, r3
 8001d22:	4610      	mov	r0, r2
 8001d24:	f000 f9b4 	bl	8002090 <TIM_Base_SetConfig>
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	2201      	movs	r2, #1
 8001d2c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	2201      	movs	r2, #1
 8001d34:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	2201      	movs	r2, #1
 8001d3c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	2201      	movs	r2, #1
 8001d44:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	2201      	movs	r2, #1
 8001d4c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	2201      	movs	r2, #1
 8001d54:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001d58:	687b      	ldr	r3, [r7, #4]
 8001d5a:	2201      	movs	r2, #1
 8001d5c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	2201      	movs	r2, #1
 8001d64:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	2201      	movs	r2, #1
 8001d6c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	2201      	movs	r2, #1
 8001d74:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001d78:	2300      	movs	r3, #0
 8001d7a:	4618      	mov	r0, r3
 8001d7c:	3708      	adds	r7, #8
 8001d7e:	46bd      	mov	sp, r7
 8001d80:	bd80      	pop	{r7, pc}

08001d82 <HAL_TIM_Base_MspInit>:
 8001d82:	b480      	push	{r7}
 8001d84:	b083      	sub	sp, #12
 8001d86:	af00      	add	r7, sp, #0
 8001d88:	6078      	str	r0, [r7, #4]
 8001d8a:	bf00      	nop
 8001d8c:	370c      	adds	r7, #12
 8001d8e:	46bd      	mov	sp, r7
 8001d90:	bc80      	pop	{r7}
 8001d92:	4770      	bx	lr

08001d94 <HAL_TIM_Base_Start_IT>:
 8001d94:	b480      	push	{r7}
 8001d96:	b085      	sub	sp, #20
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	6078      	str	r0, [r7, #4]
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001da2:	b2db      	uxtb	r3, r3
 8001da4:	2b01      	cmp	r3, #1
 8001da6:	d001      	beq.n	8001dac <HAL_TIM_Base_Start_IT+0x18>
 8001da8:	2301      	movs	r3, #1
 8001daa:	e03a      	b.n	8001e22 <HAL_TIM_Base_Start_IT+0x8e>
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	2202      	movs	r2, #2
 8001db0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	68da      	ldr	r2, [r3, #12]
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	681b      	ldr	r3, [r3, #0]
 8001dbe:	f042 0201 	orr.w	r2, r2, #1
 8001dc2:	60da      	str	r2, [r3, #12]
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	4a18      	ldr	r2, [pc, #96]	; (8001e2c <HAL_TIM_Base_Start_IT+0x98>)
 8001dca:	4293      	cmp	r3, r2
 8001dcc:	d00e      	beq.n	8001dec <HAL_TIM_Base_Start_IT+0x58>
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	681b      	ldr	r3, [r3, #0]
 8001dd2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001dd6:	d009      	beq.n	8001dec <HAL_TIM_Base_Start_IT+0x58>
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	4a14      	ldr	r2, [pc, #80]	; (8001e30 <HAL_TIM_Base_Start_IT+0x9c>)
 8001dde:	4293      	cmp	r3, r2
 8001de0:	d004      	beq.n	8001dec <HAL_TIM_Base_Start_IT+0x58>
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	681b      	ldr	r3, [r3, #0]
 8001de6:	4a13      	ldr	r2, [pc, #76]	; (8001e34 <HAL_TIM_Base_Start_IT+0xa0>)
 8001de8:	4293      	cmp	r3, r2
 8001dea:	d111      	bne.n	8001e10 <HAL_TIM_Base_Start_IT+0x7c>
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	681b      	ldr	r3, [r3, #0]
 8001df0:	689b      	ldr	r3, [r3, #8]
 8001df2:	f003 0307 	and.w	r3, r3, #7
 8001df6:	60fb      	str	r3, [r7, #12]
 8001df8:	68fb      	ldr	r3, [r7, #12]
 8001dfa:	2b06      	cmp	r3, #6
 8001dfc:	d010      	beq.n	8001e20 <HAL_TIM_Base_Start_IT+0x8c>
 8001dfe:	687b      	ldr	r3, [r7, #4]
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	681a      	ldr	r2, [r3, #0]
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	f042 0201 	orr.w	r2, r2, #1
 8001e0c:	601a      	str	r2, [r3, #0]
 8001e0e:	e007      	b.n	8001e20 <HAL_TIM_Base_Start_IT+0x8c>
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	681a      	ldr	r2, [r3, #0]
 8001e16:	687b      	ldr	r3, [r7, #4]
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	f042 0201 	orr.w	r2, r2, #1
 8001e1e:	601a      	str	r2, [r3, #0]
 8001e20:	2300      	movs	r3, #0
 8001e22:	4618      	mov	r0, r3
 8001e24:	3714      	adds	r7, #20
 8001e26:	46bd      	mov	sp, r7
 8001e28:	bc80      	pop	{r7}
 8001e2a:	4770      	bx	lr
 8001e2c:	40012c00 	.word	0x40012c00
 8001e30:	40000400 	.word	0x40000400
 8001e34:	40000800 	.word	0x40000800

08001e38 <HAL_TIM_IRQHandler>:
 8001e38:	b580      	push	{r7, lr}
 8001e3a:	b082      	sub	sp, #8
 8001e3c:	af00      	add	r7, sp, #0
 8001e3e:	6078      	str	r0, [r7, #4]
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	681b      	ldr	r3, [r3, #0]
 8001e44:	691b      	ldr	r3, [r3, #16]
 8001e46:	f003 0302 	and.w	r3, r3, #2
 8001e4a:	2b02      	cmp	r3, #2
 8001e4c:	d122      	bne.n	8001e94 <HAL_TIM_IRQHandler+0x5c>
 8001e4e:	687b      	ldr	r3, [r7, #4]
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	68db      	ldr	r3, [r3, #12]
 8001e54:	f003 0302 	and.w	r3, r3, #2
 8001e58:	2b02      	cmp	r3, #2
 8001e5a:	d11b      	bne.n	8001e94 <HAL_TIM_IRQHandler+0x5c>
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	681b      	ldr	r3, [r3, #0]
 8001e60:	f06f 0202 	mvn.w	r2, #2
 8001e64:	611a      	str	r2, [r3, #16]
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	2201      	movs	r2, #1
 8001e6a:	771a      	strb	r2, [r3, #28]
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	699b      	ldr	r3, [r3, #24]
 8001e72:	f003 0303 	and.w	r3, r3, #3
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d003      	beq.n	8001e82 <HAL_TIM_IRQHandler+0x4a>
 8001e7a:	6878      	ldr	r0, [r7, #4]
 8001e7c:	f000 f8ed 	bl	800205a <HAL_TIM_IC_CaptureCallback>
 8001e80:	e005      	b.n	8001e8e <HAL_TIM_IRQHandler+0x56>
 8001e82:	6878      	ldr	r0, [r7, #4]
 8001e84:	f000 f8e0 	bl	8002048 <HAL_TIM_OC_DelayElapsedCallback>
 8001e88:	6878      	ldr	r0, [r7, #4]
 8001e8a:	f000 f8ef 	bl	800206c <HAL_TIM_PWM_PulseFinishedCallback>
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	2200      	movs	r2, #0
 8001e92:	771a      	strb	r2, [r3, #28]
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	681b      	ldr	r3, [r3, #0]
 8001e98:	691b      	ldr	r3, [r3, #16]
 8001e9a:	f003 0304 	and.w	r3, r3, #4
 8001e9e:	2b04      	cmp	r3, #4
 8001ea0:	d122      	bne.n	8001ee8 <HAL_TIM_IRQHandler+0xb0>
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	681b      	ldr	r3, [r3, #0]
 8001ea6:	68db      	ldr	r3, [r3, #12]
 8001ea8:	f003 0304 	and.w	r3, r3, #4
 8001eac:	2b04      	cmp	r3, #4
 8001eae:	d11b      	bne.n	8001ee8 <HAL_TIM_IRQHandler+0xb0>
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	681b      	ldr	r3, [r3, #0]
 8001eb4:	f06f 0204 	mvn.w	r2, #4
 8001eb8:	611a      	str	r2, [r3, #16]
 8001eba:	687b      	ldr	r3, [r7, #4]
 8001ebc:	2202      	movs	r2, #2
 8001ebe:	771a      	strb	r2, [r3, #28]
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	699b      	ldr	r3, [r3, #24]
 8001ec6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001eca:	2b00      	cmp	r3, #0
 8001ecc:	d003      	beq.n	8001ed6 <HAL_TIM_IRQHandler+0x9e>
 8001ece:	6878      	ldr	r0, [r7, #4]
 8001ed0:	f000 f8c3 	bl	800205a <HAL_TIM_IC_CaptureCallback>
 8001ed4:	e005      	b.n	8001ee2 <HAL_TIM_IRQHandler+0xaa>
 8001ed6:	6878      	ldr	r0, [r7, #4]
 8001ed8:	f000 f8b6 	bl	8002048 <HAL_TIM_OC_DelayElapsedCallback>
 8001edc:	6878      	ldr	r0, [r7, #4]
 8001ede:	f000 f8c5 	bl	800206c <HAL_TIM_PWM_PulseFinishedCallback>
 8001ee2:	687b      	ldr	r3, [r7, #4]
 8001ee4:	2200      	movs	r2, #0
 8001ee6:	771a      	strb	r2, [r3, #28]
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	681b      	ldr	r3, [r3, #0]
 8001eec:	691b      	ldr	r3, [r3, #16]
 8001eee:	f003 0308 	and.w	r3, r3, #8
 8001ef2:	2b08      	cmp	r3, #8
 8001ef4:	d122      	bne.n	8001f3c <HAL_TIM_IRQHandler+0x104>
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	68db      	ldr	r3, [r3, #12]
 8001efc:	f003 0308 	and.w	r3, r3, #8
 8001f00:	2b08      	cmp	r3, #8
 8001f02:	d11b      	bne.n	8001f3c <HAL_TIM_IRQHandler+0x104>
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	681b      	ldr	r3, [r3, #0]
 8001f08:	f06f 0208 	mvn.w	r2, #8
 8001f0c:	611a      	str	r2, [r3, #16]
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	2204      	movs	r2, #4
 8001f12:	771a      	strb	r2, [r3, #28]
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	69db      	ldr	r3, [r3, #28]
 8001f1a:	f003 0303 	and.w	r3, r3, #3
 8001f1e:	2b00      	cmp	r3, #0
 8001f20:	d003      	beq.n	8001f2a <HAL_TIM_IRQHandler+0xf2>
 8001f22:	6878      	ldr	r0, [r7, #4]
 8001f24:	f000 f899 	bl	800205a <HAL_TIM_IC_CaptureCallback>
 8001f28:	e005      	b.n	8001f36 <HAL_TIM_IRQHandler+0xfe>
 8001f2a:	6878      	ldr	r0, [r7, #4]
 8001f2c:	f000 f88c 	bl	8002048 <HAL_TIM_OC_DelayElapsedCallback>
 8001f30:	6878      	ldr	r0, [r7, #4]
 8001f32:	f000 f89b 	bl	800206c <HAL_TIM_PWM_PulseFinishedCallback>
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	2200      	movs	r2, #0
 8001f3a:	771a      	strb	r2, [r3, #28]
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	691b      	ldr	r3, [r3, #16]
 8001f42:	f003 0310 	and.w	r3, r3, #16
 8001f46:	2b10      	cmp	r3, #16
 8001f48:	d122      	bne.n	8001f90 <HAL_TIM_IRQHandler+0x158>
 8001f4a:	687b      	ldr	r3, [r7, #4]
 8001f4c:	681b      	ldr	r3, [r3, #0]
 8001f4e:	68db      	ldr	r3, [r3, #12]
 8001f50:	f003 0310 	and.w	r3, r3, #16
 8001f54:	2b10      	cmp	r3, #16
 8001f56:	d11b      	bne.n	8001f90 <HAL_TIM_IRQHandler+0x158>
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	681b      	ldr	r3, [r3, #0]
 8001f5c:	f06f 0210 	mvn.w	r2, #16
 8001f60:	611a      	str	r2, [r3, #16]
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	2208      	movs	r2, #8
 8001f66:	771a      	strb	r2, [r3, #28]
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	69db      	ldr	r3, [r3, #28]
 8001f6e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001f72:	2b00      	cmp	r3, #0
 8001f74:	d003      	beq.n	8001f7e <HAL_TIM_IRQHandler+0x146>
 8001f76:	6878      	ldr	r0, [r7, #4]
 8001f78:	f000 f86f 	bl	800205a <HAL_TIM_IC_CaptureCallback>
 8001f7c:	e005      	b.n	8001f8a <HAL_TIM_IRQHandler+0x152>
 8001f7e:	6878      	ldr	r0, [r7, #4]
 8001f80:	f000 f862 	bl	8002048 <HAL_TIM_OC_DelayElapsedCallback>
 8001f84:	6878      	ldr	r0, [r7, #4]
 8001f86:	f000 f871 	bl	800206c <HAL_TIM_PWM_PulseFinishedCallback>
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	2200      	movs	r2, #0
 8001f8e:	771a      	strb	r2, [r3, #28]
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	691b      	ldr	r3, [r3, #16]
 8001f96:	f003 0301 	and.w	r3, r3, #1
 8001f9a:	2b01      	cmp	r3, #1
 8001f9c:	d10e      	bne.n	8001fbc <HAL_TIM_IRQHandler+0x184>
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	68db      	ldr	r3, [r3, #12]
 8001fa4:	f003 0301 	and.w	r3, r3, #1
 8001fa8:	2b01      	cmp	r3, #1
 8001faa:	d107      	bne.n	8001fbc <HAL_TIM_IRQHandler+0x184>
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	f06f 0201 	mvn.w	r2, #1
 8001fb4:	611a      	str	r2, [r3, #16]
 8001fb6:	6878      	ldr	r0, [r7, #4]
 8001fb8:	f7fe fd10 	bl	80009dc <HAL_TIM_PeriodElapsedCallback>
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	691b      	ldr	r3, [r3, #16]
 8001fc2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001fc6:	2b80      	cmp	r3, #128	; 0x80
 8001fc8:	d10e      	bne.n	8001fe8 <HAL_TIM_IRQHandler+0x1b0>
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	68db      	ldr	r3, [r3, #12]
 8001fd0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001fd4:	2b80      	cmp	r3, #128	; 0x80
 8001fd6:	d107      	bne.n	8001fe8 <HAL_TIM_IRQHandler+0x1b0>
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8001fe0:	611a      	str	r2, [r3, #16]
 8001fe2:	6878      	ldr	r0, [r7, #4]
 8001fe4:	f000 f8bf 	bl	8002166 <HAL_TIMEx_BreakCallback>
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	691b      	ldr	r3, [r3, #16]
 8001fee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001ff2:	2b40      	cmp	r3, #64	; 0x40
 8001ff4:	d10e      	bne.n	8002014 <HAL_TIM_IRQHandler+0x1dc>
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	68db      	ldr	r3, [r3, #12]
 8001ffc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002000:	2b40      	cmp	r3, #64	; 0x40
 8002002:	d107      	bne.n	8002014 <HAL_TIM_IRQHandler+0x1dc>
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800200c:	611a      	str	r2, [r3, #16]
 800200e:	6878      	ldr	r0, [r7, #4]
 8002010:	f000 f835 	bl	800207e <HAL_TIM_TriggerCallback>
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	691b      	ldr	r3, [r3, #16]
 800201a:	f003 0320 	and.w	r3, r3, #32
 800201e:	2b20      	cmp	r3, #32
 8002020:	d10e      	bne.n	8002040 <HAL_TIM_IRQHandler+0x208>
 8002022:	687b      	ldr	r3, [r7, #4]
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	68db      	ldr	r3, [r3, #12]
 8002028:	f003 0320 	and.w	r3, r3, #32
 800202c:	2b20      	cmp	r3, #32
 800202e:	d107      	bne.n	8002040 <HAL_TIM_IRQHandler+0x208>
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	681b      	ldr	r3, [r3, #0]
 8002034:	f06f 0220 	mvn.w	r2, #32
 8002038:	611a      	str	r2, [r3, #16]
 800203a:	6878      	ldr	r0, [r7, #4]
 800203c:	f000 f88a 	bl	8002154 <HAL_TIMEx_CommutCallback>
 8002040:	bf00      	nop
 8002042:	3708      	adds	r7, #8
 8002044:	46bd      	mov	sp, r7
 8002046:	bd80      	pop	{r7, pc}

08002048 <HAL_TIM_OC_DelayElapsedCallback>:
 8002048:	b480      	push	{r7}
 800204a:	b083      	sub	sp, #12
 800204c:	af00      	add	r7, sp, #0
 800204e:	6078      	str	r0, [r7, #4]
 8002050:	bf00      	nop
 8002052:	370c      	adds	r7, #12
 8002054:	46bd      	mov	sp, r7
 8002056:	bc80      	pop	{r7}
 8002058:	4770      	bx	lr

0800205a <HAL_TIM_IC_CaptureCallback>:
 800205a:	b480      	push	{r7}
 800205c:	b083      	sub	sp, #12
 800205e:	af00      	add	r7, sp, #0
 8002060:	6078      	str	r0, [r7, #4]
 8002062:	bf00      	nop
 8002064:	370c      	adds	r7, #12
 8002066:	46bd      	mov	sp, r7
 8002068:	bc80      	pop	{r7}
 800206a:	4770      	bx	lr

0800206c <HAL_TIM_PWM_PulseFinishedCallback>:
 800206c:	b480      	push	{r7}
 800206e:	b083      	sub	sp, #12
 8002070:	af00      	add	r7, sp, #0
 8002072:	6078      	str	r0, [r7, #4]
 8002074:	bf00      	nop
 8002076:	370c      	adds	r7, #12
 8002078:	46bd      	mov	sp, r7
 800207a:	bc80      	pop	{r7}
 800207c:	4770      	bx	lr

0800207e <HAL_TIM_TriggerCallback>:
 800207e:	b480      	push	{r7}
 8002080:	b083      	sub	sp, #12
 8002082:	af00      	add	r7, sp, #0
 8002084:	6078      	str	r0, [r7, #4]
 8002086:	bf00      	nop
 8002088:	370c      	adds	r7, #12
 800208a:	46bd      	mov	sp, r7
 800208c:	bc80      	pop	{r7}
 800208e:	4770      	bx	lr

08002090 <TIM_Base_SetConfig>:
 8002090:	b480      	push	{r7}
 8002092:	b085      	sub	sp, #20
 8002094:	af00      	add	r7, sp, #0
 8002096:	6078      	str	r0, [r7, #4]
 8002098:	6039      	str	r1, [r7, #0]
 800209a:	687b      	ldr	r3, [r7, #4]
 800209c:	681b      	ldr	r3, [r3, #0]
 800209e:	60fb      	str	r3, [r7, #12]
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	4a29      	ldr	r2, [pc, #164]	; (8002148 <TIM_Base_SetConfig+0xb8>)
 80020a4:	4293      	cmp	r3, r2
 80020a6:	d00b      	beq.n	80020c0 <TIM_Base_SetConfig+0x30>
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80020ae:	d007      	beq.n	80020c0 <TIM_Base_SetConfig+0x30>
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	4a26      	ldr	r2, [pc, #152]	; (800214c <TIM_Base_SetConfig+0xbc>)
 80020b4:	4293      	cmp	r3, r2
 80020b6:	d003      	beq.n	80020c0 <TIM_Base_SetConfig+0x30>
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	4a25      	ldr	r2, [pc, #148]	; (8002150 <TIM_Base_SetConfig+0xc0>)
 80020bc:	4293      	cmp	r3, r2
 80020be:	d108      	bne.n	80020d2 <TIM_Base_SetConfig+0x42>
 80020c0:	68fb      	ldr	r3, [r7, #12]
 80020c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80020c6:	60fb      	str	r3, [r7, #12]
 80020c8:	683b      	ldr	r3, [r7, #0]
 80020ca:	685b      	ldr	r3, [r3, #4]
 80020cc:	68fa      	ldr	r2, [r7, #12]
 80020ce:	4313      	orrs	r3, r2
 80020d0:	60fb      	str	r3, [r7, #12]
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	4a1c      	ldr	r2, [pc, #112]	; (8002148 <TIM_Base_SetConfig+0xb8>)
 80020d6:	4293      	cmp	r3, r2
 80020d8:	d00b      	beq.n	80020f2 <TIM_Base_SetConfig+0x62>
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80020e0:	d007      	beq.n	80020f2 <TIM_Base_SetConfig+0x62>
 80020e2:	687b      	ldr	r3, [r7, #4]
 80020e4:	4a19      	ldr	r2, [pc, #100]	; (800214c <TIM_Base_SetConfig+0xbc>)
 80020e6:	4293      	cmp	r3, r2
 80020e8:	d003      	beq.n	80020f2 <TIM_Base_SetConfig+0x62>
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	4a18      	ldr	r2, [pc, #96]	; (8002150 <TIM_Base_SetConfig+0xc0>)
 80020ee:	4293      	cmp	r3, r2
 80020f0:	d108      	bne.n	8002104 <TIM_Base_SetConfig+0x74>
 80020f2:	68fb      	ldr	r3, [r7, #12]
 80020f4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80020f8:	60fb      	str	r3, [r7, #12]
 80020fa:	683b      	ldr	r3, [r7, #0]
 80020fc:	68db      	ldr	r3, [r3, #12]
 80020fe:	68fa      	ldr	r2, [r7, #12]
 8002100:	4313      	orrs	r3, r2
 8002102:	60fb      	str	r3, [r7, #12]
 8002104:	68fb      	ldr	r3, [r7, #12]
 8002106:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800210a:	683b      	ldr	r3, [r7, #0]
 800210c:	695b      	ldr	r3, [r3, #20]
 800210e:	4313      	orrs	r3, r2
 8002110:	60fb      	str	r3, [r7, #12]
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	68fa      	ldr	r2, [r7, #12]
 8002116:	601a      	str	r2, [r3, #0]
 8002118:	683b      	ldr	r3, [r7, #0]
 800211a:	689a      	ldr	r2, [r3, #8]
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	62da      	str	r2, [r3, #44]	; 0x2c
 8002120:	683b      	ldr	r3, [r7, #0]
 8002122:	681a      	ldr	r2, [r3, #0]
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	629a      	str	r2, [r3, #40]	; 0x28
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	4a07      	ldr	r2, [pc, #28]	; (8002148 <TIM_Base_SetConfig+0xb8>)
 800212c:	4293      	cmp	r3, r2
 800212e:	d103      	bne.n	8002138 <TIM_Base_SetConfig+0xa8>
 8002130:	683b      	ldr	r3, [r7, #0]
 8002132:	691a      	ldr	r2, [r3, #16]
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	631a      	str	r2, [r3, #48]	; 0x30
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	2201      	movs	r2, #1
 800213c:	615a      	str	r2, [r3, #20]
 800213e:	bf00      	nop
 8002140:	3714      	adds	r7, #20
 8002142:	46bd      	mov	sp, r7
 8002144:	bc80      	pop	{r7}
 8002146:	4770      	bx	lr
 8002148:	40012c00 	.word	0x40012c00
 800214c:	40000400 	.word	0x40000400
 8002150:	40000800 	.word	0x40000800

08002154 <HAL_TIMEx_CommutCallback>:
 8002154:	b480      	push	{r7}
 8002156:	b083      	sub	sp, #12
 8002158:	af00      	add	r7, sp, #0
 800215a:	6078      	str	r0, [r7, #4]
 800215c:	bf00      	nop
 800215e:	370c      	adds	r7, #12
 8002160:	46bd      	mov	sp, r7
 8002162:	bc80      	pop	{r7}
 8002164:	4770      	bx	lr

08002166 <HAL_TIMEx_BreakCallback>:
 8002166:	b480      	push	{r7}
 8002168:	b083      	sub	sp, #12
 800216a:	af00      	add	r7, sp, #0
 800216c:	6078      	str	r0, [r7, #4]
 800216e:	bf00      	nop
 8002170:	370c      	adds	r7, #12
 8002172:	46bd      	mov	sp, r7
 8002174:	bc80      	pop	{r7}
 8002176:	4770      	bx	lr

08002178 <HAL_UART_Init>:
 8002178:	b580      	push	{r7, lr}
 800217a:	b082      	sub	sp, #8
 800217c:	af00      	add	r7, sp, #0
 800217e:	6078      	str	r0, [r7, #4]
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	2b00      	cmp	r3, #0
 8002184:	d101      	bne.n	800218a <HAL_UART_Init+0x12>
 8002186:	2301      	movs	r3, #1
 8002188:	e03f      	b.n	800220a <HAL_UART_Init+0x92>
 800218a:	687b      	ldr	r3, [r7, #4]
 800218c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8002190:	b2db      	uxtb	r3, r3
 8002192:	2b00      	cmp	r3, #0
 8002194:	d106      	bne.n	80021a4 <HAL_UART_Init+0x2c>
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	2200      	movs	r2, #0
 800219a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800219e:	6878      	ldr	r0, [r7, #4]
 80021a0:	f7fe fc6c 	bl	8000a7c <HAL_UART_MspInit>
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	2224      	movs	r2, #36	; 0x24
 80021a8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	68da      	ldr	r2, [r3, #12]
 80021b2:	687b      	ldr	r3, [r7, #4]
 80021b4:	681b      	ldr	r3, [r3, #0]
 80021b6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80021ba:	60da      	str	r2, [r3, #12]
 80021bc:	6878      	ldr	r0, [r7, #4]
 80021be:	f000 f9a3 	bl	8002508 <UART_SetConfig>
 80021c2:	687b      	ldr	r3, [r7, #4]
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	691a      	ldr	r2, [r3, #16]
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80021d0:	611a      	str	r2, [r3, #16]
 80021d2:	687b      	ldr	r3, [r7, #4]
 80021d4:	681b      	ldr	r3, [r3, #0]
 80021d6:	695a      	ldr	r2, [r3, #20]
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80021e0:	615a      	str	r2, [r3, #20]
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	68da      	ldr	r2, [r3, #12]
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80021f0:	60da      	str	r2, [r3, #12]
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	2200      	movs	r2, #0
 80021f6:	63da      	str	r2, [r3, #60]	; 0x3c
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	2220      	movs	r2, #32
 80021fc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	2220      	movs	r2, #32
 8002204:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002208:	2300      	movs	r3, #0
 800220a:	4618      	mov	r0, r3
 800220c:	3708      	adds	r7, #8
 800220e:	46bd      	mov	sp, r7
 8002210:	bd80      	pop	{r7, pc}

08002212 <HAL_UART_Transmit>:
 8002212:	b580      	push	{r7, lr}
 8002214:	b08a      	sub	sp, #40	; 0x28
 8002216:	af02      	add	r7, sp, #8
 8002218:	60f8      	str	r0, [r7, #12]
 800221a:	60b9      	str	r1, [r7, #8]
 800221c:	603b      	str	r3, [r7, #0]
 800221e:	4613      	mov	r3, r2
 8002220:	80fb      	strh	r3, [r7, #6]
 8002222:	2300      	movs	r3, #0
 8002224:	617b      	str	r3, [r7, #20]
 8002226:	68fb      	ldr	r3, [r7, #12]
 8002228:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800222c:	b2db      	uxtb	r3, r3
 800222e:	2b20      	cmp	r3, #32
 8002230:	d17c      	bne.n	800232c <HAL_UART_Transmit+0x11a>
 8002232:	68bb      	ldr	r3, [r7, #8]
 8002234:	2b00      	cmp	r3, #0
 8002236:	d002      	beq.n	800223e <HAL_UART_Transmit+0x2c>
 8002238:	88fb      	ldrh	r3, [r7, #6]
 800223a:	2b00      	cmp	r3, #0
 800223c:	d101      	bne.n	8002242 <HAL_UART_Transmit+0x30>
 800223e:	2301      	movs	r3, #1
 8002240:	e075      	b.n	800232e <HAL_UART_Transmit+0x11c>
 8002242:	68fb      	ldr	r3, [r7, #12]
 8002244:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002248:	2b01      	cmp	r3, #1
 800224a:	d101      	bne.n	8002250 <HAL_UART_Transmit+0x3e>
 800224c:	2302      	movs	r3, #2
 800224e:	e06e      	b.n	800232e <HAL_UART_Transmit+0x11c>
 8002250:	68fb      	ldr	r3, [r7, #12]
 8002252:	2201      	movs	r2, #1
 8002254:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002258:	68fb      	ldr	r3, [r7, #12]
 800225a:	2200      	movs	r2, #0
 800225c:	63da      	str	r2, [r3, #60]	; 0x3c
 800225e:	68fb      	ldr	r3, [r7, #12]
 8002260:	2221      	movs	r2, #33	; 0x21
 8002262:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002266:	f7fe fe53 	bl	8000f10 <HAL_GetTick>
 800226a:	6178      	str	r0, [r7, #20]
 800226c:	68fb      	ldr	r3, [r7, #12]
 800226e:	88fa      	ldrh	r2, [r7, #6]
 8002270:	849a      	strh	r2, [r3, #36]	; 0x24
 8002272:	68fb      	ldr	r3, [r7, #12]
 8002274:	88fa      	ldrh	r2, [r7, #6]
 8002276:	84da      	strh	r2, [r3, #38]	; 0x26
 8002278:	68fb      	ldr	r3, [r7, #12]
 800227a:	689b      	ldr	r3, [r3, #8]
 800227c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002280:	d108      	bne.n	8002294 <HAL_UART_Transmit+0x82>
 8002282:	68fb      	ldr	r3, [r7, #12]
 8002284:	691b      	ldr	r3, [r3, #16]
 8002286:	2b00      	cmp	r3, #0
 8002288:	d104      	bne.n	8002294 <HAL_UART_Transmit+0x82>
 800228a:	2300      	movs	r3, #0
 800228c:	61fb      	str	r3, [r7, #28]
 800228e:	68bb      	ldr	r3, [r7, #8]
 8002290:	61bb      	str	r3, [r7, #24]
 8002292:	e003      	b.n	800229c <HAL_UART_Transmit+0x8a>
 8002294:	68bb      	ldr	r3, [r7, #8]
 8002296:	61fb      	str	r3, [r7, #28]
 8002298:	2300      	movs	r3, #0
 800229a:	61bb      	str	r3, [r7, #24]
 800229c:	68fb      	ldr	r3, [r7, #12]
 800229e:	2200      	movs	r2, #0
 80022a0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80022a4:	e02a      	b.n	80022fc <HAL_UART_Transmit+0xea>
 80022a6:	683b      	ldr	r3, [r7, #0]
 80022a8:	9300      	str	r3, [sp, #0]
 80022aa:	697b      	ldr	r3, [r7, #20]
 80022ac:	2200      	movs	r2, #0
 80022ae:	2180      	movs	r1, #128	; 0x80
 80022b0:	68f8      	ldr	r0, [r7, #12]
 80022b2:	f000 f8df 	bl	8002474 <UART_WaitOnFlagUntilTimeout>
 80022b6:	4603      	mov	r3, r0
 80022b8:	2b00      	cmp	r3, #0
 80022ba:	d001      	beq.n	80022c0 <HAL_UART_Transmit+0xae>
 80022bc:	2303      	movs	r3, #3
 80022be:	e036      	b.n	800232e <HAL_UART_Transmit+0x11c>
 80022c0:	69fb      	ldr	r3, [r7, #28]
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	d10b      	bne.n	80022de <HAL_UART_Transmit+0xcc>
 80022c6:	69bb      	ldr	r3, [r7, #24]
 80022c8:	881b      	ldrh	r3, [r3, #0]
 80022ca:	461a      	mov	r2, r3
 80022cc:	68fb      	ldr	r3, [r7, #12]
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80022d4:	605a      	str	r2, [r3, #4]
 80022d6:	69bb      	ldr	r3, [r7, #24]
 80022d8:	3302      	adds	r3, #2
 80022da:	61bb      	str	r3, [r7, #24]
 80022dc:	e007      	b.n	80022ee <HAL_UART_Transmit+0xdc>
 80022de:	69fb      	ldr	r3, [r7, #28]
 80022e0:	781a      	ldrb	r2, [r3, #0]
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	605a      	str	r2, [r3, #4]
 80022e8:	69fb      	ldr	r3, [r7, #28]
 80022ea:	3301      	adds	r3, #1
 80022ec:	61fb      	str	r3, [r7, #28]
 80022ee:	68fb      	ldr	r3, [r7, #12]
 80022f0:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80022f2:	b29b      	uxth	r3, r3
 80022f4:	3b01      	subs	r3, #1
 80022f6:	b29a      	uxth	r2, r3
 80022f8:	68fb      	ldr	r3, [r7, #12]
 80022fa:	84da      	strh	r2, [r3, #38]	; 0x26
 80022fc:	68fb      	ldr	r3, [r7, #12]
 80022fe:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002300:	b29b      	uxth	r3, r3
 8002302:	2b00      	cmp	r3, #0
 8002304:	d1cf      	bne.n	80022a6 <HAL_UART_Transmit+0x94>
 8002306:	683b      	ldr	r3, [r7, #0]
 8002308:	9300      	str	r3, [sp, #0]
 800230a:	697b      	ldr	r3, [r7, #20]
 800230c:	2200      	movs	r2, #0
 800230e:	2140      	movs	r1, #64	; 0x40
 8002310:	68f8      	ldr	r0, [r7, #12]
 8002312:	f000 f8af 	bl	8002474 <UART_WaitOnFlagUntilTimeout>
 8002316:	4603      	mov	r3, r0
 8002318:	2b00      	cmp	r3, #0
 800231a:	d001      	beq.n	8002320 <HAL_UART_Transmit+0x10e>
 800231c:	2303      	movs	r3, #3
 800231e:	e006      	b.n	800232e <HAL_UART_Transmit+0x11c>
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	2220      	movs	r2, #32
 8002324:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002328:	2300      	movs	r3, #0
 800232a:	e000      	b.n	800232e <HAL_UART_Transmit+0x11c>
 800232c:	2302      	movs	r3, #2
 800232e:	4618      	mov	r0, r3
 8002330:	3720      	adds	r7, #32
 8002332:	46bd      	mov	sp, r7
 8002334:	bd80      	pop	{r7, pc}

08002336 <HAL_UART_Receive>:
 8002336:	b580      	push	{r7, lr}
 8002338:	b08a      	sub	sp, #40	; 0x28
 800233a:	af02      	add	r7, sp, #8
 800233c:	60f8      	str	r0, [r7, #12]
 800233e:	60b9      	str	r1, [r7, #8]
 8002340:	603b      	str	r3, [r7, #0]
 8002342:	4613      	mov	r3, r2
 8002344:	80fb      	strh	r3, [r7, #6]
 8002346:	2300      	movs	r3, #0
 8002348:	617b      	str	r3, [r7, #20]
 800234a:	68fb      	ldr	r3, [r7, #12]
 800234c:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8002350:	b2db      	uxtb	r3, r3
 8002352:	2b20      	cmp	r3, #32
 8002354:	f040 8089 	bne.w	800246a <HAL_UART_Receive+0x134>
 8002358:	68bb      	ldr	r3, [r7, #8]
 800235a:	2b00      	cmp	r3, #0
 800235c:	d002      	beq.n	8002364 <HAL_UART_Receive+0x2e>
 800235e:	88fb      	ldrh	r3, [r7, #6]
 8002360:	2b00      	cmp	r3, #0
 8002362:	d101      	bne.n	8002368 <HAL_UART_Receive+0x32>
 8002364:	2301      	movs	r3, #1
 8002366:	e081      	b.n	800246c <HAL_UART_Receive+0x136>
 8002368:	68fb      	ldr	r3, [r7, #12]
 800236a:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800236e:	2b01      	cmp	r3, #1
 8002370:	d101      	bne.n	8002376 <HAL_UART_Receive+0x40>
 8002372:	2302      	movs	r3, #2
 8002374:	e07a      	b.n	800246c <HAL_UART_Receive+0x136>
 8002376:	68fb      	ldr	r3, [r7, #12]
 8002378:	2201      	movs	r2, #1
 800237a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800237e:	68fb      	ldr	r3, [r7, #12]
 8002380:	2200      	movs	r2, #0
 8002382:	63da      	str	r2, [r3, #60]	; 0x3c
 8002384:	68fb      	ldr	r3, [r7, #12]
 8002386:	2222      	movs	r2, #34	; 0x22
 8002388:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 800238c:	f7fe fdc0 	bl	8000f10 <HAL_GetTick>
 8002390:	6178      	str	r0, [r7, #20]
 8002392:	68fb      	ldr	r3, [r7, #12]
 8002394:	88fa      	ldrh	r2, [r7, #6]
 8002396:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002398:	68fb      	ldr	r3, [r7, #12]
 800239a:	88fa      	ldrh	r2, [r7, #6]
 800239c:	85da      	strh	r2, [r3, #46]	; 0x2e
 800239e:	68fb      	ldr	r3, [r7, #12]
 80023a0:	689b      	ldr	r3, [r3, #8]
 80023a2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80023a6:	d108      	bne.n	80023ba <HAL_UART_Receive+0x84>
 80023a8:	68fb      	ldr	r3, [r7, #12]
 80023aa:	691b      	ldr	r3, [r3, #16]
 80023ac:	2b00      	cmp	r3, #0
 80023ae:	d104      	bne.n	80023ba <HAL_UART_Receive+0x84>
 80023b0:	2300      	movs	r3, #0
 80023b2:	61fb      	str	r3, [r7, #28]
 80023b4:	68bb      	ldr	r3, [r7, #8]
 80023b6:	61bb      	str	r3, [r7, #24]
 80023b8:	e003      	b.n	80023c2 <HAL_UART_Receive+0x8c>
 80023ba:	68bb      	ldr	r3, [r7, #8]
 80023bc:	61fb      	str	r3, [r7, #28]
 80023be:	2300      	movs	r3, #0
 80023c0:	61bb      	str	r3, [r7, #24]
 80023c2:	68fb      	ldr	r3, [r7, #12]
 80023c4:	2200      	movs	r2, #0
 80023c6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80023ca:	e043      	b.n	8002454 <HAL_UART_Receive+0x11e>
 80023cc:	683b      	ldr	r3, [r7, #0]
 80023ce:	9300      	str	r3, [sp, #0]
 80023d0:	697b      	ldr	r3, [r7, #20]
 80023d2:	2200      	movs	r2, #0
 80023d4:	2120      	movs	r1, #32
 80023d6:	68f8      	ldr	r0, [r7, #12]
 80023d8:	f000 f84c 	bl	8002474 <UART_WaitOnFlagUntilTimeout>
 80023dc:	4603      	mov	r3, r0
 80023de:	2b00      	cmp	r3, #0
 80023e0:	d001      	beq.n	80023e6 <HAL_UART_Receive+0xb0>
 80023e2:	2303      	movs	r3, #3
 80023e4:	e042      	b.n	800246c <HAL_UART_Receive+0x136>
 80023e6:	69fb      	ldr	r3, [r7, #28]
 80023e8:	2b00      	cmp	r3, #0
 80023ea:	d10c      	bne.n	8002406 <HAL_UART_Receive+0xd0>
 80023ec:	68fb      	ldr	r3, [r7, #12]
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	685b      	ldr	r3, [r3, #4]
 80023f2:	b29b      	uxth	r3, r3
 80023f4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80023f8:	b29a      	uxth	r2, r3
 80023fa:	69bb      	ldr	r3, [r7, #24]
 80023fc:	801a      	strh	r2, [r3, #0]
 80023fe:	69bb      	ldr	r3, [r7, #24]
 8002400:	3302      	adds	r3, #2
 8002402:	61bb      	str	r3, [r7, #24]
 8002404:	e01f      	b.n	8002446 <HAL_UART_Receive+0x110>
 8002406:	68fb      	ldr	r3, [r7, #12]
 8002408:	689b      	ldr	r3, [r3, #8]
 800240a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800240e:	d007      	beq.n	8002420 <HAL_UART_Receive+0xea>
 8002410:	68fb      	ldr	r3, [r7, #12]
 8002412:	689b      	ldr	r3, [r3, #8]
 8002414:	2b00      	cmp	r3, #0
 8002416:	d10a      	bne.n	800242e <HAL_UART_Receive+0xf8>
 8002418:	68fb      	ldr	r3, [r7, #12]
 800241a:	691b      	ldr	r3, [r3, #16]
 800241c:	2b00      	cmp	r3, #0
 800241e:	d106      	bne.n	800242e <HAL_UART_Receive+0xf8>
 8002420:	68fb      	ldr	r3, [r7, #12]
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	685b      	ldr	r3, [r3, #4]
 8002426:	b2da      	uxtb	r2, r3
 8002428:	69fb      	ldr	r3, [r7, #28]
 800242a:	701a      	strb	r2, [r3, #0]
 800242c:	e008      	b.n	8002440 <HAL_UART_Receive+0x10a>
 800242e:	68fb      	ldr	r3, [r7, #12]
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	685b      	ldr	r3, [r3, #4]
 8002434:	b2db      	uxtb	r3, r3
 8002436:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800243a:	b2da      	uxtb	r2, r3
 800243c:	69fb      	ldr	r3, [r7, #28]
 800243e:	701a      	strb	r2, [r3, #0]
 8002440:	69fb      	ldr	r3, [r7, #28]
 8002442:	3301      	adds	r3, #1
 8002444:	61fb      	str	r3, [r7, #28]
 8002446:	68fb      	ldr	r3, [r7, #12]
 8002448:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800244a:	b29b      	uxth	r3, r3
 800244c:	3b01      	subs	r3, #1
 800244e:	b29a      	uxth	r2, r3
 8002450:	68fb      	ldr	r3, [r7, #12]
 8002452:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002458:	b29b      	uxth	r3, r3
 800245a:	2b00      	cmp	r3, #0
 800245c:	d1b6      	bne.n	80023cc <HAL_UART_Receive+0x96>
 800245e:	68fb      	ldr	r3, [r7, #12]
 8002460:	2220      	movs	r2, #32
 8002462:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002466:	2300      	movs	r3, #0
 8002468:	e000      	b.n	800246c <HAL_UART_Receive+0x136>
 800246a:	2302      	movs	r3, #2
 800246c:	4618      	mov	r0, r3
 800246e:	3720      	adds	r7, #32
 8002470:	46bd      	mov	sp, r7
 8002472:	bd80      	pop	{r7, pc}

08002474 <UART_WaitOnFlagUntilTimeout>:
 8002474:	b580      	push	{r7, lr}
 8002476:	b084      	sub	sp, #16
 8002478:	af00      	add	r7, sp, #0
 800247a:	60f8      	str	r0, [r7, #12]
 800247c:	60b9      	str	r1, [r7, #8]
 800247e:	603b      	str	r3, [r7, #0]
 8002480:	4613      	mov	r3, r2
 8002482:	71fb      	strb	r3, [r7, #7]
 8002484:	e02c      	b.n	80024e0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002486:	69bb      	ldr	r3, [r7, #24]
 8002488:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800248c:	d028      	beq.n	80024e0 <UART_WaitOnFlagUntilTimeout+0x6c>
 800248e:	69bb      	ldr	r3, [r7, #24]
 8002490:	2b00      	cmp	r3, #0
 8002492:	d007      	beq.n	80024a4 <UART_WaitOnFlagUntilTimeout+0x30>
 8002494:	f7fe fd3c 	bl	8000f10 <HAL_GetTick>
 8002498:	4602      	mov	r2, r0
 800249a:	683b      	ldr	r3, [r7, #0]
 800249c:	1ad3      	subs	r3, r2, r3
 800249e:	69ba      	ldr	r2, [r7, #24]
 80024a0:	429a      	cmp	r2, r3
 80024a2:	d21d      	bcs.n	80024e0 <UART_WaitOnFlagUntilTimeout+0x6c>
 80024a4:	68fb      	ldr	r3, [r7, #12]
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	68da      	ldr	r2, [r3, #12]
 80024aa:	68fb      	ldr	r3, [r7, #12]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80024b2:	60da      	str	r2, [r3, #12]
 80024b4:	68fb      	ldr	r3, [r7, #12]
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	695a      	ldr	r2, [r3, #20]
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	f022 0201 	bic.w	r2, r2, #1
 80024c2:	615a      	str	r2, [r3, #20]
 80024c4:	68fb      	ldr	r3, [r7, #12]
 80024c6:	2220      	movs	r2, #32
 80024c8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80024cc:	68fb      	ldr	r3, [r7, #12]
 80024ce:	2220      	movs	r2, #32
 80024d0:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	2200      	movs	r2, #0
 80024d8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80024dc:	2303      	movs	r3, #3
 80024de:	e00f      	b.n	8002500 <UART_WaitOnFlagUntilTimeout+0x8c>
 80024e0:	68fb      	ldr	r3, [r7, #12]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	681a      	ldr	r2, [r3, #0]
 80024e6:	68bb      	ldr	r3, [r7, #8]
 80024e8:	4013      	ands	r3, r2
 80024ea:	68ba      	ldr	r2, [r7, #8]
 80024ec:	429a      	cmp	r2, r3
 80024ee:	bf0c      	ite	eq
 80024f0:	2301      	moveq	r3, #1
 80024f2:	2300      	movne	r3, #0
 80024f4:	b2db      	uxtb	r3, r3
 80024f6:	461a      	mov	r2, r3
 80024f8:	79fb      	ldrb	r3, [r7, #7]
 80024fa:	429a      	cmp	r2, r3
 80024fc:	d0c3      	beq.n	8002486 <UART_WaitOnFlagUntilTimeout+0x12>
 80024fe:	2300      	movs	r3, #0
 8002500:	4618      	mov	r0, r3
 8002502:	3710      	adds	r7, #16
 8002504:	46bd      	mov	sp, r7
 8002506:	bd80      	pop	{r7, pc}

08002508 <UART_SetConfig>:
 8002508:	b580      	push	{r7, lr}
 800250a:	b084      	sub	sp, #16
 800250c:	af00      	add	r7, sp, #0
 800250e:	6078      	str	r0, [r7, #4]
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	691b      	ldr	r3, [r3, #16]
 8002516:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	68da      	ldr	r2, [r3, #12]
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	430a      	orrs	r2, r1
 8002524:	611a      	str	r2, [r3, #16]
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	689a      	ldr	r2, [r3, #8]
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	691b      	ldr	r3, [r3, #16]
 800252e:	431a      	orrs	r2, r3
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	695b      	ldr	r3, [r3, #20]
 8002534:	4313      	orrs	r3, r2
 8002536:	60bb      	str	r3, [r7, #8]
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	68db      	ldr	r3, [r3, #12]
 800253e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8002542:	f023 030c 	bic.w	r3, r3, #12
 8002546:	687a      	ldr	r2, [r7, #4]
 8002548:	6812      	ldr	r2, [r2, #0]
 800254a:	68b9      	ldr	r1, [r7, #8]
 800254c:	430b      	orrs	r3, r1
 800254e:	60d3      	str	r3, [r2, #12]
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	681b      	ldr	r3, [r3, #0]
 8002554:	695b      	ldr	r3, [r3, #20]
 8002556:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	699a      	ldr	r2, [r3, #24]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	681b      	ldr	r3, [r3, #0]
 8002562:	430a      	orrs	r2, r1
 8002564:	615a      	str	r2, [r3, #20]
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	4a2c      	ldr	r2, [pc, #176]	; (800261c <UART_SetConfig+0x114>)
 800256c:	4293      	cmp	r3, r2
 800256e:	d103      	bne.n	8002578 <UART_SetConfig+0x70>
 8002570:	f7ff fb56 	bl	8001c20 <HAL_RCC_GetPCLK2Freq>
 8002574:	60f8      	str	r0, [r7, #12]
 8002576:	e002      	b.n	800257e <UART_SetConfig+0x76>
 8002578:	f7ff fb3e 	bl	8001bf8 <HAL_RCC_GetPCLK1Freq>
 800257c:	60f8      	str	r0, [r7, #12]
 800257e:	68fa      	ldr	r2, [r7, #12]
 8002580:	4613      	mov	r3, r2
 8002582:	009b      	lsls	r3, r3, #2
 8002584:	4413      	add	r3, r2
 8002586:	009a      	lsls	r2, r3, #2
 8002588:	441a      	add	r2, r3
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	685b      	ldr	r3, [r3, #4]
 800258e:	009b      	lsls	r3, r3, #2
 8002590:	fbb2 f3f3 	udiv	r3, r2, r3
 8002594:	4a22      	ldr	r2, [pc, #136]	; (8002620 <UART_SetConfig+0x118>)
 8002596:	fba2 2303 	umull	r2, r3, r2, r3
 800259a:	095b      	lsrs	r3, r3, #5
 800259c:	0119      	lsls	r1, r3, #4
 800259e:	68fa      	ldr	r2, [r7, #12]
 80025a0:	4613      	mov	r3, r2
 80025a2:	009b      	lsls	r3, r3, #2
 80025a4:	4413      	add	r3, r2
 80025a6:	009a      	lsls	r2, r3, #2
 80025a8:	441a      	add	r2, r3
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	685b      	ldr	r3, [r3, #4]
 80025ae:	009b      	lsls	r3, r3, #2
 80025b0:	fbb2 f2f3 	udiv	r2, r2, r3
 80025b4:	4b1a      	ldr	r3, [pc, #104]	; (8002620 <UART_SetConfig+0x118>)
 80025b6:	fba3 0302 	umull	r0, r3, r3, r2
 80025ba:	095b      	lsrs	r3, r3, #5
 80025bc:	2064      	movs	r0, #100	; 0x64
 80025be:	fb00 f303 	mul.w	r3, r0, r3
 80025c2:	1ad3      	subs	r3, r2, r3
 80025c4:	011b      	lsls	r3, r3, #4
 80025c6:	3332      	adds	r3, #50	; 0x32
 80025c8:	4a15      	ldr	r2, [pc, #84]	; (8002620 <UART_SetConfig+0x118>)
 80025ca:	fba2 2303 	umull	r2, r3, r2, r3
 80025ce:	095b      	lsrs	r3, r3, #5
 80025d0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80025d4:	4419      	add	r1, r3
 80025d6:	68fa      	ldr	r2, [r7, #12]
 80025d8:	4613      	mov	r3, r2
 80025da:	009b      	lsls	r3, r3, #2
 80025dc:	4413      	add	r3, r2
 80025de:	009a      	lsls	r2, r3, #2
 80025e0:	441a      	add	r2, r3
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	685b      	ldr	r3, [r3, #4]
 80025e6:	009b      	lsls	r3, r3, #2
 80025e8:	fbb2 f2f3 	udiv	r2, r2, r3
 80025ec:	4b0c      	ldr	r3, [pc, #48]	; (8002620 <UART_SetConfig+0x118>)
 80025ee:	fba3 0302 	umull	r0, r3, r3, r2
 80025f2:	095b      	lsrs	r3, r3, #5
 80025f4:	2064      	movs	r0, #100	; 0x64
 80025f6:	fb00 f303 	mul.w	r3, r0, r3
 80025fa:	1ad3      	subs	r3, r2, r3
 80025fc:	011b      	lsls	r3, r3, #4
 80025fe:	3332      	adds	r3, #50	; 0x32
 8002600:	4a07      	ldr	r2, [pc, #28]	; (8002620 <UART_SetConfig+0x118>)
 8002602:	fba2 2303 	umull	r2, r3, r2, r3
 8002606:	095b      	lsrs	r3, r3, #5
 8002608:	f003 020f 	and.w	r2, r3, #15
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	440a      	add	r2, r1
 8002612:	609a      	str	r2, [r3, #8]
 8002614:	bf00      	nop
 8002616:	3710      	adds	r7, #16
 8002618:	46bd      	mov	sp, r7
 800261a:	bd80      	pop	{r7, pc}
 800261c:	40013800 	.word	0x40013800
 8002620:	51eb851f 	.word	0x51eb851f

08002624 <makeFreeRtosPriority>:
 8002624:	b480      	push	{r7}
 8002626:	b085      	sub	sp, #20
 8002628:	af00      	add	r7, sp, #0
 800262a:	4603      	mov	r3, r0
 800262c:	80fb      	strh	r3, [r7, #6]
 800262e:	2300      	movs	r3, #0
 8002630:	60fb      	str	r3, [r7, #12]
 8002632:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002636:	2b84      	cmp	r3, #132	; 0x84
 8002638:	d005      	beq.n	8002646 <makeFreeRtosPriority+0x22>
 800263a:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800263e:	68fb      	ldr	r3, [r7, #12]
 8002640:	4413      	add	r3, r2
 8002642:	3303      	adds	r3, #3
 8002644:	60fb      	str	r3, [r7, #12]
 8002646:	68fb      	ldr	r3, [r7, #12]
 8002648:	4618      	mov	r0, r3
 800264a:	3714      	adds	r7, #20
 800264c:	46bd      	mov	sp, r7
 800264e:	bc80      	pop	{r7}
 8002650:	4770      	bx	lr

08002652 <osKernelStart>:
 8002652:	b580      	push	{r7, lr}
 8002654:	af00      	add	r7, sp, #0
 8002656:	f000 fad1 	bl	8002bfc <vTaskStartScheduler>
 800265a:	2300      	movs	r3, #0
 800265c:	4618      	mov	r0, r3
 800265e:	bd80      	pop	{r7, pc}

08002660 <osThreadCreate>:
 8002660:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002662:	b089      	sub	sp, #36	; 0x24
 8002664:	af04      	add	r7, sp, #16
 8002666:	6078      	str	r0, [r7, #4]
 8002668:	6039      	str	r1, [r7, #0]
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	695b      	ldr	r3, [r3, #20]
 800266e:	2b00      	cmp	r3, #0
 8002670:	d020      	beq.n	80026b4 <osThreadCreate+0x54>
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	699b      	ldr	r3, [r3, #24]
 8002676:	2b00      	cmp	r3, #0
 8002678:	d01c      	beq.n	80026b4 <osThreadCreate+0x54>
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	685c      	ldr	r4, [r3, #4]
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	681d      	ldr	r5, [r3, #0]
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	691e      	ldr	r6, [r3, #16]
 8002686:	687b      	ldr	r3, [r7, #4]
 8002688:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800268c:	4618      	mov	r0, r3
 800268e:	f7ff ffc9 	bl	8002624 <makeFreeRtosPriority>
 8002692:	4601      	mov	r1, r0
 8002694:	687b      	ldr	r3, [r7, #4]
 8002696:	695b      	ldr	r3, [r3, #20]
 8002698:	687a      	ldr	r2, [r7, #4]
 800269a:	6992      	ldr	r2, [r2, #24]
 800269c:	9202      	str	r2, [sp, #8]
 800269e:	9301      	str	r3, [sp, #4]
 80026a0:	9100      	str	r1, [sp, #0]
 80026a2:	683b      	ldr	r3, [r7, #0]
 80026a4:	4632      	mov	r2, r6
 80026a6:	4629      	mov	r1, r5
 80026a8:	4620      	mov	r0, r4
 80026aa:	f000 f8e8 	bl	800287e <xTaskCreateStatic>
 80026ae:	4603      	mov	r3, r0
 80026b0:	60fb      	str	r3, [r7, #12]
 80026b2:	e01c      	b.n	80026ee <osThreadCreate+0x8e>
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	685c      	ldr	r4, [r3, #4]
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	681d      	ldr	r5, [r3, #0]
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	691b      	ldr	r3, [r3, #16]
 80026c0:	b29e      	uxth	r6, r3
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80026c8:	4618      	mov	r0, r3
 80026ca:	f7ff ffab 	bl	8002624 <makeFreeRtosPriority>
 80026ce:	4602      	mov	r2, r0
 80026d0:	f107 030c 	add.w	r3, r7, #12
 80026d4:	9301      	str	r3, [sp, #4]
 80026d6:	9200      	str	r2, [sp, #0]
 80026d8:	683b      	ldr	r3, [r7, #0]
 80026da:	4632      	mov	r2, r6
 80026dc:	4629      	mov	r1, r5
 80026de:	4620      	mov	r0, r4
 80026e0:	f000 f929 	bl	8002936 <xTaskCreate>
 80026e4:	4603      	mov	r3, r0
 80026e6:	2b01      	cmp	r3, #1
 80026e8:	d001      	beq.n	80026ee <osThreadCreate+0x8e>
 80026ea:	2300      	movs	r3, #0
 80026ec:	e000      	b.n	80026f0 <osThreadCreate+0x90>
 80026ee:	68fb      	ldr	r3, [r7, #12]
 80026f0:	4618      	mov	r0, r3
 80026f2:	3714      	adds	r7, #20
 80026f4:	46bd      	mov	sp, r7
 80026f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080026f8 <osDelay>:
 80026f8:	b580      	push	{r7, lr}
 80026fa:	b084      	sub	sp, #16
 80026fc:	af00      	add	r7, sp, #0
 80026fe:	6078      	str	r0, [r7, #4]
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	60fb      	str	r3, [r7, #12]
 8002704:	68fb      	ldr	r3, [r7, #12]
 8002706:	2b00      	cmp	r3, #0
 8002708:	d001      	beq.n	800270e <osDelay+0x16>
 800270a:	68fb      	ldr	r3, [r7, #12]
 800270c:	e000      	b.n	8002710 <osDelay+0x18>
 800270e:	2301      	movs	r3, #1
 8002710:	4618      	mov	r0, r3
 8002712:	f000 fa3f 	bl	8002b94 <vTaskDelay>
 8002716:	2300      	movs	r3, #0
 8002718:	4618      	mov	r0, r3
 800271a:	3710      	adds	r7, #16
 800271c:	46bd      	mov	sp, r7
 800271e:	bd80      	pop	{r7, pc}

08002720 <vListInitialise>:
 8002720:	b480      	push	{r7}
 8002722:	b083      	sub	sp, #12
 8002724:	af00      	add	r7, sp, #0
 8002726:	6078      	str	r0, [r7, #4]
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	f103 0208 	add.w	r2, r3, #8
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	605a      	str	r2, [r3, #4]
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002738:	609a      	str	r2, [r3, #8]
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	f103 0208 	add.w	r2, r3, #8
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	60da      	str	r2, [r3, #12]
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	f103 0208 	add.w	r2, r3, #8
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	611a      	str	r2, [r3, #16]
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	2200      	movs	r2, #0
 8002752:	601a      	str	r2, [r3, #0]
 8002754:	bf00      	nop
 8002756:	370c      	adds	r7, #12
 8002758:	46bd      	mov	sp, r7
 800275a:	bc80      	pop	{r7}
 800275c:	4770      	bx	lr

0800275e <vListInitialiseItem>:
 800275e:	b480      	push	{r7}
 8002760:	b083      	sub	sp, #12
 8002762:	af00      	add	r7, sp, #0
 8002764:	6078      	str	r0, [r7, #4]
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	2200      	movs	r2, #0
 800276a:	611a      	str	r2, [r3, #16]
 800276c:	bf00      	nop
 800276e:	370c      	adds	r7, #12
 8002770:	46bd      	mov	sp, r7
 8002772:	bc80      	pop	{r7}
 8002774:	4770      	bx	lr

08002776 <vListInsertEnd>:
 8002776:	b480      	push	{r7}
 8002778:	b085      	sub	sp, #20
 800277a:	af00      	add	r7, sp, #0
 800277c:	6078      	str	r0, [r7, #4]
 800277e:	6039      	str	r1, [r7, #0]
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	685b      	ldr	r3, [r3, #4]
 8002784:	60fb      	str	r3, [r7, #12]
 8002786:	683b      	ldr	r3, [r7, #0]
 8002788:	68fa      	ldr	r2, [r7, #12]
 800278a:	605a      	str	r2, [r3, #4]
 800278c:	68fb      	ldr	r3, [r7, #12]
 800278e:	689a      	ldr	r2, [r3, #8]
 8002790:	683b      	ldr	r3, [r7, #0]
 8002792:	609a      	str	r2, [r3, #8]
 8002794:	68fb      	ldr	r3, [r7, #12]
 8002796:	689b      	ldr	r3, [r3, #8]
 8002798:	683a      	ldr	r2, [r7, #0]
 800279a:	605a      	str	r2, [r3, #4]
 800279c:	68fb      	ldr	r3, [r7, #12]
 800279e:	683a      	ldr	r2, [r7, #0]
 80027a0:	609a      	str	r2, [r3, #8]
 80027a2:	683b      	ldr	r3, [r7, #0]
 80027a4:	687a      	ldr	r2, [r7, #4]
 80027a6:	611a      	str	r2, [r3, #16]
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	681b      	ldr	r3, [r3, #0]
 80027ac:	1c5a      	adds	r2, r3, #1
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	601a      	str	r2, [r3, #0]
 80027b2:	bf00      	nop
 80027b4:	3714      	adds	r7, #20
 80027b6:	46bd      	mov	sp, r7
 80027b8:	bc80      	pop	{r7}
 80027ba:	4770      	bx	lr

080027bc <vListInsert>:
 80027bc:	b480      	push	{r7}
 80027be:	b085      	sub	sp, #20
 80027c0:	af00      	add	r7, sp, #0
 80027c2:	6078      	str	r0, [r7, #4]
 80027c4:	6039      	str	r1, [r7, #0]
 80027c6:	683b      	ldr	r3, [r7, #0]
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	60bb      	str	r3, [r7, #8]
 80027cc:	68bb      	ldr	r3, [r7, #8]
 80027ce:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80027d2:	d103      	bne.n	80027dc <vListInsert+0x20>
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	691b      	ldr	r3, [r3, #16]
 80027d8:	60fb      	str	r3, [r7, #12]
 80027da:	e00c      	b.n	80027f6 <vListInsert+0x3a>
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	3308      	adds	r3, #8
 80027e0:	60fb      	str	r3, [r7, #12]
 80027e2:	e002      	b.n	80027ea <vListInsert+0x2e>
 80027e4:	68fb      	ldr	r3, [r7, #12]
 80027e6:	685b      	ldr	r3, [r3, #4]
 80027e8:	60fb      	str	r3, [r7, #12]
 80027ea:	68fb      	ldr	r3, [r7, #12]
 80027ec:	685b      	ldr	r3, [r3, #4]
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	68ba      	ldr	r2, [r7, #8]
 80027f2:	429a      	cmp	r2, r3
 80027f4:	d2f6      	bcs.n	80027e4 <vListInsert+0x28>
 80027f6:	68fb      	ldr	r3, [r7, #12]
 80027f8:	685a      	ldr	r2, [r3, #4]
 80027fa:	683b      	ldr	r3, [r7, #0]
 80027fc:	605a      	str	r2, [r3, #4]
 80027fe:	683b      	ldr	r3, [r7, #0]
 8002800:	685b      	ldr	r3, [r3, #4]
 8002802:	683a      	ldr	r2, [r7, #0]
 8002804:	609a      	str	r2, [r3, #8]
 8002806:	683b      	ldr	r3, [r7, #0]
 8002808:	68fa      	ldr	r2, [r7, #12]
 800280a:	609a      	str	r2, [r3, #8]
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	683a      	ldr	r2, [r7, #0]
 8002810:	605a      	str	r2, [r3, #4]
 8002812:	683b      	ldr	r3, [r7, #0]
 8002814:	687a      	ldr	r2, [r7, #4]
 8002816:	611a      	str	r2, [r3, #16]
 8002818:	687b      	ldr	r3, [r7, #4]
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	1c5a      	adds	r2, r3, #1
 800281e:	687b      	ldr	r3, [r7, #4]
 8002820:	601a      	str	r2, [r3, #0]
 8002822:	bf00      	nop
 8002824:	3714      	adds	r7, #20
 8002826:	46bd      	mov	sp, r7
 8002828:	bc80      	pop	{r7}
 800282a:	4770      	bx	lr

0800282c <uxListRemove>:
 800282c:	b480      	push	{r7}
 800282e:	b085      	sub	sp, #20
 8002830:	af00      	add	r7, sp, #0
 8002832:	6078      	str	r0, [r7, #4]
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	691b      	ldr	r3, [r3, #16]
 8002838:	60fb      	str	r3, [r7, #12]
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	685b      	ldr	r3, [r3, #4]
 800283e:	687a      	ldr	r2, [r7, #4]
 8002840:	6892      	ldr	r2, [r2, #8]
 8002842:	609a      	str	r2, [r3, #8]
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	689b      	ldr	r3, [r3, #8]
 8002848:	687a      	ldr	r2, [r7, #4]
 800284a:	6852      	ldr	r2, [r2, #4]
 800284c:	605a      	str	r2, [r3, #4]
 800284e:	68fb      	ldr	r3, [r7, #12]
 8002850:	685b      	ldr	r3, [r3, #4]
 8002852:	687a      	ldr	r2, [r7, #4]
 8002854:	429a      	cmp	r2, r3
 8002856:	d103      	bne.n	8002860 <uxListRemove+0x34>
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	689a      	ldr	r2, [r3, #8]
 800285c:	68fb      	ldr	r3, [r7, #12]
 800285e:	605a      	str	r2, [r3, #4]
 8002860:	687b      	ldr	r3, [r7, #4]
 8002862:	2200      	movs	r2, #0
 8002864:	611a      	str	r2, [r3, #16]
 8002866:	68fb      	ldr	r3, [r7, #12]
 8002868:	681b      	ldr	r3, [r3, #0]
 800286a:	1e5a      	subs	r2, r3, #1
 800286c:	68fb      	ldr	r3, [r7, #12]
 800286e:	601a      	str	r2, [r3, #0]
 8002870:	68fb      	ldr	r3, [r7, #12]
 8002872:	681b      	ldr	r3, [r3, #0]
 8002874:	4618      	mov	r0, r3
 8002876:	3714      	adds	r7, #20
 8002878:	46bd      	mov	sp, r7
 800287a:	bc80      	pop	{r7}
 800287c:	4770      	bx	lr

0800287e <xTaskCreateStatic>:
 800287e:	b580      	push	{r7, lr}
 8002880:	b08e      	sub	sp, #56	; 0x38
 8002882:	af04      	add	r7, sp, #16
 8002884:	60f8      	str	r0, [r7, #12]
 8002886:	60b9      	str	r1, [r7, #8]
 8002888:	607a      	str	r2, [r7, #4]
 800288a:	603b      	str	r3, [r7, #0]
 800288c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800288e:	2b00      	cmp	r3, #0
 8002890:	d10a      	bne.n	80028a8 <xTaskCreateStatic+0x2a>
 8002892:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002896:	f383 8811 	msr	BASEPRI, r3
 800289a:	f3bf 8f6f 	isb	sy
 800289e:	f3bf 8f4f 	dsb	sy
 80028a2:	623b      	str	r3, [r7, #32]
 80028a4:	bf00      	nop
 80028a6:	e7fe      	b.n	80028a6 <xTaskCreateStatic+0x28>
 80028a8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80028aa:	2b00      	cmp	r3, #0
 80028ac:	d10a      	bne.n	80028c4 <xTaskCreateStatic+0x46>
 80028ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80028b2:	f383 8811 	msr	BASEPRI, r3
 80028b6:	f3bf 8f6f 	isb	sy
 80028ba:	f3bf 8f4f 	dsb	sy
 80028be:	61fb      	str	r3, [r7, #28]
 80028c0:	bf00      	nop
 80028c2:	e7fe      	b.n	80028c2 <xTaskCreateStatic+0x44>
 80028c4:	2354      	movs	r3, #84	; 0x54
 80028c6:	613b      	str	r3, [r7, #16]
 80028c8:	693b      	ldr	r3, [r7, #16]
 80028ca:	2b54      	cmp	r3, #84	; 0x54
 80028cc:	d00a      	beq.n	80028e4 <xTaskCreateStatic+0x66>
 80028ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80028d2:	f383 8811 	msr	BASEPRI, r3
 80028d6:	f3bf 8f6f 	isb	sy
 80028da:	f3bf 8f4f 	dsb	sy
 80028de:	61bb      	str	r3, [r7, #24]
 80028e0:	bf00      	nop
 80028e2:	e7fe      	b.n	80028e2 <xTaskCreateStatic+0x64>
 80028e4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80028e6:	2b00      	cmp	r3, #0
 80028e8:	d01e      	beq.n	8002928 <xTaskCreateStatic+0xaa>
 80028ea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	d01b      	beq.n	8002928 <xTaskCreateStatic+0xaa>
 80028f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80028f2:	627b      	str	r3, [r7, #36]	; 0x24
 80028f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80028f6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80028f8:	631a      	str	r2, [r3, #48]	; 0x30
 80028fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80028fc:	2202      	movs	r2, #2
 80028fe:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002902:	2300      	movs	r3, #0
 8002904:	9303      	str	r3, [sp, #12]
 8002906:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002908:	9302      	str	r3, [sp, #8]
 800290a:	f107 0314 	add.w	r3, r7, #20
 800290e:	9301      	str	r3, [sp, #4]
 8002910:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002912:	9300      	str	r3, [sp, #0]
 8002914:	683b      	ldr	r3, [r7, #0]
 8002916:	687a      	ldr	r2, [r7, #4]
 8002918:	68b9      	ldr	r1, [r7, #8]
 800291a:	68f8      	ldr	r0, [r7, #12]
 800291c:	f000 f850 	bl	80029c0 <prvInitialiseNewTask>
 8002920:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002922:	f000 f8cd 	bl	8002ac0 <prvAddNewTaskToReadyList>
 8002926:	e001      	b.n	800292c <xTaskCreateStatic+0xae>
 8002928:	2300      	movs	r3, #0
 800292a:	617b      	str	r3, [r7, #20]
 800292c:	697b      	ldr	r3, [r7, #20]
 800292e:	4618      	mov	r0, r3
 8002930:	3728      	adds	r7, #40	; 0x28
 8002932:	46bd      	mov	sp, r7
 8002934:	bd80      	pop	{r7, pc}

08002936 <xTaskCreate>:
 8002936:	b580      	push	{r7, lr}
 8002938:	b08c      	sub	sp, #48	; 0x30
 800293a:	af04      	add	r7, sp, #16
 800293c:	60f8      	str	r0, [r7, #12]
 800293e:	60b9      	str	r1, [r7, #8]
 8002940:	603b      	str	r3, [r7, #0]
 8002942:	4613      	mov	r3, r2
 8002944:	80fb      	strh	r3, [r7, #6]
 8002946:	88fb      	ldrh	r3, [r7, #6]
 8002948:	009b      	lsls	r3, r3, #2
 800294a:	4618      	mov	r0, r3
 800294c:	f000 fe68 	bl	8003620 <pvPortMalloc>
 8002950:	6178      	str	r0, [r7, #20]
 8002952:	697b      	ldr	r3, [r7, #20]
 8002954:	2b00      	cmp	r3, #0
 8002956:	d00e      	beq.n	8002976 <xTaskCreate+0x40>
 8002958:	2054      	movs	r0, #84	; 0x54
 800295a:	f000 fe61 	bl	8003620 <pvPortMalloc>
 800295e:	61f8      	str	r0, [r7, #28]
 8002960:	69fb      	ldr	r3, [r7, #28]
 8002962:	2b00      	cmp	r3, #0
 8002964:	d003      	beq.n	800296e <xTaskCreate+0x38>
 8002966:	69fb      	ldr	r3, [r7, #28]
 8002968:	697a      	ldr	r2, [r7, #20]
 800296a:	631a      	str	r2, [r3, #48]	; 0x30
 800296c:	e005      	b.n	800297a <xTaskCreate+0x44>
 800296e:	6978      	ldr	r0, [r7, #20]
 8002970:	f000 ff1a 	bl	80037a8 <vPortFree>
 8002974:	e001      	b.n	800297a <xTaskCreate+0x44>
 8002976:	2300      	movs	r3, #0
 8002978:	61fb      	str	r3, [r7, #28]
 800297a:	69fb      	ldr	r3, [r7, #28]
 800297c:	2b00      	cmp	r3, #0
 800297e:	d017      	beq.n	80029b0 <xTaskCreate+0x7a>
 8002980:	69fb      	ldr	r3, [r7, #28]
 8002982:	2200      	movs	r2, #0
 8002984:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002988:	88fa      	ldrh	r2, [r7, #6]
 800298a:	2300      	movs	r3, #0
 800298c:	9303      	str	r3, [sp, #12]
 800298e:	69fb      	ldr	r3, [r7, #28]
 8002990:	9302      	str	r3, [sp, #8]
 8002992:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002994:	9301      	str	r3, [sp, #4]
 8002996:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002998:	9300      	str	r3, [sp, #0]
 800299a:	683b      	ldr	r3, [r7, #0]
 800299c:	68b9      	ldr	r1, [r7, #8]
 800299e:	68f8      	ldr	r0, [r7, #12]
 80029a0:	f000 f80e 	bl	80029c0 <prvInitialiseNewTask>
 80029a4:	69f8      	ldr	r0, [r7, #28]
 80029a6:	f000 f88b 	bl	8002ac0 <prvAddNewTaskToReadyList>
 80029aa:	2301      	movs	r3, #1
 80029ac:	61bb      	str	r3, [r7, #24]
 80029ae:	e002      	b.n	80029b6 <xTaskCreate+0x80>
 80029b0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80029b4:	61bb      	str	r3, [r7, #24]
 80029b6:	69bb      	ldr	r3, [r7, #24]
 80029b8:	4618      	mov	r0, r3
 80029ba:	3720      	adds	r7, #32
 80029bc:	46bd      	mov	sp, r7
 80029be:	bd80      	pop	{r7, pc}

080029c0 <prvInitialiseNewTask>:
 80029c0:	b580      	push	{r7, lr}
 80029c2:	b088      	sub	sp, #32
 80029c4:	af00      	add	r7, sp, #0
 80029c6:	60f8      	str	r0, [r7, #12]
 80029c8:	60b9      	str	r1, [r7, #8]
 80029ca:	607a      	str	r2, [r7, #4]
 80029cc:	603b      	str	r3, [r7, #0]
 80029ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80029d8:	3b01      	subs	r3, #1
 80029da:	009b      	lsls	r3, r3, #2
 80029dc:	4413      	add	r3, r2
 80029de:	61bb      	str	r3, [r7, #24]
 80029e0:	69bb      	ldr	r3, [r7, #24]
 80029e2:	f023 0307 	bic.w	r3, r3, #7
 80029e6:	61bb      	str	r3, [r7, #24]
 80029e8:	69bb      	ldr	r3, [r7, #24]
 80029ea:	f003 0307 	and.w	r3, r3, #7
 80029ee:	2b00      	cmp	r3, #0
 80029f0:	d00a      	beq.n	8002a08 <prvInitialiseNewTask+0x48>
 80029f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80029f6:	f383 8811 	msr	BASEPRI, r3
 80029fa:	f3bf 8f6f 	isb	sy
 80029fe:	f3bf 8f4f 	dsb	sy
 8002a02:	617b      	str	r3, [r7, #20]
 8002a04:	bf00      	nop
 8002a06:	e7fe      	b.n	8002a06 <prvInitialiseNewTask+0x46>
 8002a08:	2300      	movs	r3, #0
 8002a0a:	61fb      	str	r3, [r7, #28]
 8002a0c:	e012      	b.n	8002a34 <prvInitialiseNewTask+0x74>
 8002a0e:	68ba      	ldr	r2, [r7, #8]
 8002a10:	69fb      	ldr	r3, [r7, #28]
 8002a12:	4413      	add	r3, r2
 8002a14:	7819      	ldrb	r1, [r3, #0]
 8002a16:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002a18:	69fb      	ldr	r3, [r7, #28]
 8002a1a:	4413      	add	r3, r2
 8002a1c:	3334      	adds	r3, #52	; 0x34
 8002a1e:	460a      	mov	r2, r1
 8002a20:	701a      	strb	r2, [r3, #0]
 8002a22:	68ba      	ldr	r2, [r7, #8]
 8002a24:	69fb      	ldr	r3, [r7, #28]
 8002a26:	4413      	add	r3, r2
 8002a28:	781b      	ldrb	r3, [r3, #0]
 8002a2a:	2b00      	cmp	r3, #0
 8002a2c:	d006      	beq.n	8002a3c <prvInitialiseNewTask+0x7c>
 8002a2e:	69fb      	ldr	r3, [r7, #28]
 8002a30:	3301      	adds	r3, #1
 8002a32:	61fb      	str	r3, [r7, #28]
 8002a34:	69fb      	ldr	r3, [r7, #28]
 8002a36:	2b0f      	cmp	r3, #15
 8002a38:	d9e9      	bls.n	8002a0e <prvInitialiseNewTask+0x4e>
 8002a3a:	e000      	b.n	8002a3e <prvInitialiseNewTask+0x7e>
 8002a3c:	bf00      	nop
 8002a3e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a40:	2200      	movs	r2, #0
 8002a42:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002a46:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002a48:	2b06      	cmp	r3, #6
 8002a4a:	d901      	bls.n	8002a50 <prvInitialiseNewTask+0x90>
 8002a4c:	2306      	movs	r3, #6
 8002a4e:	62bb      	str	r3, [r7, #40]	; 0x28
 8002a50:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a52:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002a54:	62da      	str	r2, [r3, #44]	; 0x2c
 8002a56:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a58:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002a5a:	645a      	str	r2, [r3, #68]	; 0x44
 8002a5c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a5e:	2200      	movs	r2, #0
 8002a60:	649a      	str	r2, [r3, #72]	; 0x48
 8002a62:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a64:	3304      	adds	r3, #4
 8002a66:	4618      	mov	r0, r3
 8002a68:	f7ff fe79 	bl	800275e <vListInitialiseItem>
 8002a6c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a6e:	3318      	adds	r3, #24
 8002a70:	4618      	mov	r0, r3
 8002a72:	f7ff fe74 	bl	800275e <vListInitialiseItem>
 8002a76:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a78:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002a7a:	611a      	str	r2, [r3, #16]
 8002a7c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002a7e:	f1c3 0207 	rsb	r2, r3, #7
 8002a82:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a84:	619a      	str	r2, [r3, #24]
 8002a86:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a88:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002a8a:	625a      	str	r2, [r3, #36]	; 0x24
 8002a8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a8e:	2200      	movs	r2, #0
 8002a90:	64da      	str	r2, [r3, #76]	; 0x4c
 8002a92:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a94:	2200      	movs	r2, #0
 8002a96:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002a9a:	683a      	ldr	r2, [r7, #0]
 8002a9c:	68f9      	ldr	r1, [r7, #12]
 8002a9e:	69b8      	ldr	r0, [r7, #24]
 8002aa0:	f000 fc0e 	bl	80032c0 <pxPortInitialiseStack>
 8002aa4:	4602      	mov	r2, r0
 8002aa6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002aa8:	601a      	str	r2, [r3, #0]
 8002aaa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	d002      	beq.n	8002ab6 <prvInitialiseNewTask+0xf6>
 8002ab0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002ab2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002ab4:	601a      	str	r2, [r3, #0]
 8002ab6:	bf00      	nop
 8002ab8:	3720      	adds	r7, #32
 8002aba:	46bd      	mov	sp, r7
 8002abc:	bd80      	pop	{r7, pc}
	...

08002ac0 <prvAddNewTaskToReadyList>:
 8002ac0:	b580      	push	{r7, lr}
 8002ac2:	b082      	sub	sp, #8
 8002ac4:	af00      	add	r7, sp, #0
 8002ac6:	6078      	str	r0, [r7, #4]
 8002ac8:	f000 fce8 	bl	800349c <vPortEnterCritical>
 8002acc:	4b2a      	ldr	r3, [pc, #168]	; (8002b78 <prvAddNewTaskToReadyList+0xb8>)
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	3301      	adds	r3, #1
 8002ad2:	4a29      	ldr	r2, [pc, #164]	; (8002b78 <prvAddNewTaskToReadyList+0xb8>)
 8002ad4:	6013      	str	r3, [r2, #0]
 8002ad6:	4b29      	ldr	r3, [pc, #164]	; (8002b7c <prvAddNewTaskToReadyList+0xbc>)
 8002ad8:	681b      	ldr	r3, [r3, #0]
 8002ada:	2b00      	cmp	r3, #0
 8002adc:	d109      	bne.n	8002af2 <prvAddNewTaskToReadyList+0x32>
 8002ade:	4a27      	ldr	r2, [pc, #156]	; (8002b7c <prvAddNewTaskToReadyList+0xbc>)
 8002ae0:	687b      	ldr	r3, [r7, #4]
 8002ae2:	6013      	str	r3, [r2, #0]
 8002ae4:	4b24      	ldr	r3, [pc, #144]	; (8002b78 <prvAddNewTaskToReadyList+0xb8>)
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	2b01      	cmp	r3, #1
 8002aea:	d110      	bne.n	8002b0e <prvAddNewTaskToReadyList+0x4e>
 8002aec:	f000 fac0 	bl	8003070 <prvInitialiseTaskLists>
 8002af0:	e00d      	b.n	8002b0e <prvAddNewTaskToReadyList+0x4e>
 8002af2:	4b23      	ldr	r3, [pc, #140]	; (8002b80 <prvAddNewTaskToReadyList+0xc0>)
 8002af4:	681b      	ldr	r3, [r3, #0]
 8002af6:	2b00      	cmp	r3, #0
 8002af8:	d109      	bne.n	8002b0e <prvAddNewTaskToReadyList+0x4e>
 8002afa:	4b20      	ldr	r3, [pc, #128]	; (8002b7c <prvAddNewTaskToReadyList+0xbc>)
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b04:	429a      	cmp	r2, r3
 8002b06:	d802      	bhi.n	8002b0e <prvAddNewTaskToReadyList+0x4e>
 8002b08:	4a1c      	ldr	r2, [pc, #112]	; (8002b7c <prvAddNewTaskToReadyList+0xbc>)
 8002b0a:	687b      	ldr	r3, [r7, #4]
 8002b0c:	6013      	str	r3, [r2, #0]
 8002b0e:	4b1d      	ldr	r3, [pc, #116]	; (8002b84 <prvAddNewTaskToReadyList+0xc4>)
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	3301      	adds	r3, #1
 8002b14:	4a1b      	ldr	r2, [pc, #108]	; (8002b84 <prvAddNewTaskToReadyList+0xc4>)
 8002b16:	6013      	str	r3, [r2, #0]
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b1c:	2201      	movs	r2, #1
 8002b1e:	409a      	lsls	r2, r3
 8002b20:	4b19      	ldr	r3, [pc, #100]	; (8002b88 <prvAddNewTaskToReadyList+0xc8>)
 8002b22:	681b      	ldr	r3, [r3, #0]
 8002b24:	4313      	orrs	r3, r2
 8002b26:	4a18      	ldr	r2, [pc, #96]	; (8002b88 <prvAddNewTaskToReadyList+0xc8>)
 8002b28:	6013      	str	r3, [r2, #0]
 8002b2a:	687b      	ldr	r3, [r7, #4]
 8002b2c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002b2e:	4613      	mov	r3, r2
 8002b30:	009b      	lsls	r3, r3, #2
 8002b32:	4413      	add	r3, r2
 8002b34:	009b      	lsls	r3, r3, #2
 8002b36:	4a15      	ldr	r2, [pc, #84]	; (8002b8c <prvAddNewTaskToReadyList+0xcc>)
 8002b38:	441a      	add	r2, r3
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	3304      	adds	r3, #4
 8002b3e:	4619      	mov	r1, r3
 8002b40:	4610      	mov	r0, r2
 8002b42:	f7ff fe18 	bl	8002776 <vListInsertEnd>
 8002b46:	f000 fcd9 	bl	80034fc <vPortExitCritical>
 8002b4a:	4b0d      	ldr	r3, [pc, #52]	; (8002b80 <prvAddNewTaskToReadyList+0xc0>)
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	2b00      	cmp	r3, #0
 8002b50:	d00e      	beq.n	8002b70 <prvAddNewTaskToReadyList+0xb0>
 8002b52:	4b0a      	ldr	r3, [pc, #40]	; (8002b7c <prvAddNewTaskToReadyList+0xbc>)
 8002b54:	681b      	ldr	r3, [r3, #0]
 8002b56:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b5c:	429a      	cmp	r2, r3
 8002b5e:	d207      	bcs.n	8002b70 <prvAddNewTaskToReadyList+0xb0>
 8002b60:	4b0b      	ldr	r3, [pc, #44]	; (8002b90 <prvAddNewTaskToReadyList+0xd0>)
 8002b62:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002b66:	601a      	str	r2, [r3, #0]
 8002b68:	f3bf 8f4f 	dsb	sy
 8002b6c:	f3bf 8f6f 	isb	sy
 8002b70:	bf00      	nop
 8002b72:	3708      	adds	r7, #8
 8002b74:	46bd      	mov	sp, r7
 8002b76:	bd80      	pop	{r7, pc}
 8002b78:	20000470 	.word	0x20000470
 8002b7c:	20000370 	.word	0x20000370
 8002b80:	2000047c 	.word	0x2000047c
 8002b84:	2000048c 	.word	0x2000048c
 8002b88:	20000478 	.word	0x20000478
 8002b8c:	20000374 	.word	0x20000374
 8002b90:	e000ed04 	.word	0xe000ed04

08002b94 <vTaskDelay>:
 8002b94:	b580      	push	{r7, lr}
 8002b96:	b084      	sub	sp, #16
 8002b98:	af00      	add	r7, sp, #0
 8002b9a:	6078      	str	r0, [r7, #4]
 8002b9c:	2300      	movs	r3, #0
 8002b9e:	60fb      	str	r3, [r7, #12]
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	2b00      	cmp	r3, #0
 8002ba4:	d017      	beq.n	8002bd6 <vTaskDelay+0x42>
 8002ba6:	4b13      	ldr	r3, [pc, #76]	; (8002bf4 <vTaskDelay+0x60>)
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	d00a      	beq.n	8002bc4 <vTaskDelay+0x30>
 8002bae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002bb2:	f383 8811 	msr	BASEPRI, r3
 8002bb6:	f3bf 8f6f 	isb	sy
 8002bba:	f3bf 8f4f 	dsb	sy
 8002bbe:	60bb      	str	r3, [r7, #8]
 8002bc0:	bf00      	nop
 8002bc2:	e7fe      	b.n	8002bc2 <vTaskDelay+0x2e>
 8002bc4:	f000 f87a 	bl	8002cbc <vTaskSuspendAll>
 8002bc8:	2100      	movs	r1, #0
 8002bca:	6878      	ldr	r0, [r7, #4]
 8002bcc:	f000 fb12 	bl	80031f4 <prvAddCurrentTaskToDelayedList>
 8002bd0:	f000 f882 	bl	8002cd8 <xTaskResumeAll>
 8002bd4:	60f8      	str	r0, [r7, #12]
 8002bd6:	68fb      	ldr	r3, [r7, #12]
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d107      	bne.n	8002bec <vTaskDelay+0x58>
 8002bdc:	4b06      	ldr	r3, [pc, #24]	; (8002bf8 <vTaskDelay+0x64>)
 8002bde:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002be2:	601a      	str	r2, [r3, #0]
 8002be4:	f3bf 8f4f 	dsb	sy
 8002be8:	f3bf 8f6f 	isb	sy
 8002bec:	bf00      	nop
 8002bee:	3710      	adds	r7, #16
 8002bf0:	46bd      	mov	sp, r7
 8002bf2:	bd80      	pop	{r7, pc}
 8002bf4:	20000498 	.word	0x20000498
 8002bf8:	e000ed04 	.word	0xe000ed04

08002bfc <vTaskStartScheduler>:
 8002bfc:	b580      	push	{r7, lr}
 8002bfe:	b08a      	sub	sp, #40	; 0x28
 8002c00:	af04      	add	r7, sp, #16
 8002c02:	2300      	movs	r3, #0
 8002c04:	60bb      	str	r3, [r7, #8]
 8002c06:	2300      	movs	r3, #0
 8002c08:	607b      	str	r3, [r7, #4]
 8002c0a:	463a      	mov	r2, r7
 8002c0c:	1d39      	adds	r1, r7, #4
 8002c0e:	f107 0308 	add.w	r3, r7, #8
 8002c12:	4618      	mov	r0, r3
 8002c14:	f7fd faa4 	bl	8000160 <vApplicationGetIdleTaskMemory>
 8002c18:	6839      	ldr	r1, [r7, #0]
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	68ba      	ldr	r2, [r7, #8]
 8002c1e:	9202      	str	r2, [sp, #8]
 8002c20:	9301      	str	r3, [sp, #4]
 8002c22:	2300      	movs	r3, #0
 8002c24:	9300      	str	r3, [sp, #0]
 8002c26:	2300      	movs	r3, #0
 8002c28:	460a      	mov	r2, r1
 8002c2a:	491e      	ldr	r1, [pc, #120]	; (8002ca4 <vTaskStartScheduler+0xa8>)
 8002c2c:	481e      	ldr	r0, [pc, #120]	; (8002ca8 <vTaskStartScheduler+0xac>)
 8002c2e:	f7ff fe26 	bl	800287e <xTaskCreateStatic>
 8002c32:	4603      	mov	r3, r0
 8002c34:	4a1d      	ldr	r2, [pc, #116]	; (8002cac <vTaskStartScheduler+0xb0>)
 8002c36:	6013      	str	r3, [r2, #0]
 8002c38:	4b1c      	ldr	r3, [pc, #112]	; (8002cac <vTaskStartScheduler+0xb0>)
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	2b00      	cmp	r3, #0
 8002c3e:	d002      	beq.n	8002c46 <vTaskStartScheduler+0x4a>
 8002c40:	2301      	movs	r3, #1
 8002c42:	617b      	str	r3, [r7, #20]
 8002c44:	e001      	b.n	8002c4a <vTaskStartScheduler+0x4e>
 8002c46:	2300      	movs	r3, #0
 8002c48:	617b      	str	r3, [r7, #20]
 8002c4a:	697b      	ldr	r3, [r7, #20]
 8002c4c:	2b01      	cmp	r3, #1
 8002c4e:	d116      	bne.n	8002c7e <vTaskStartScheduler+0x82>
 8002c50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c54:	f383 8811 	msr	BASEPRI, r3
 8002c58:	f3bf 8f6f 	isb	sy
 8002c5c:	f3bf 8f4f 	dsb	sy
 8002c60:	613b      	str	r3, [r7, #16]
 8002c62:	bf00      	nop
 8002c64:	4b12      	ldr	r3, [pc, #72]	; (8002cb0 <vTaskStartScheduler+0xb4>)
 8002c66:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002c6a:	601a      	str	r2, [r3, #0]
 8002c6c:	4b11      	ldr	r3, [pc, #68]	; (8002cb4 <vTaskStartScheduler+0xb8>)
 8002c6e:	2201      	movs	r2, #1
 8002c70:	601a      	str	r2, [r3, #0]
 8002c72:	4b11      	ldr	r3, [pc, #68]	; (8002cb8 <vTaskStartScheduler+0xbc>)
 8002c74:	2200      	movs	r2, #0
 8002c76:	601a      	str	r2, [r3, #0]
 8002c78:	f000 fb9e 	bl	80033b8 <xPortStartScheduler>
 8002c7c:	e00e      	b.n	8002c9c <vTaskStartScheduler+0xa0>
 8002c7e:	697b      	ldr	r3, [r7, #20]
 8002c80:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002c84:	d10a      	bne.n	8002c9c <vTaskStartScheduler+0xa0>
 8002c86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c8a:	f383 8811 	msr	BASEPRI, r3
 8002c8e:	f3bf 8f6f 	isb	sy
 8002c92:	f3bf 8f4f 	dsb	sy
 8002c96:	60fb      	str	r3, [r7, #12]
 8002c98:	bf00      	nop
 8002c9a:	e7fe      	b.n	8002c9a <vTaskStartScheduler+0x9e>
 8002c9c:	bf00      	nop
 8002c9e:	3718      	adds	r7, #24
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	bd80      	pop	{r7, pc}
 8002ca4:	08004f64 	.word	0x08004f64
 8002ca8:	08003041 	.word	0x08003041
 8002cac:	20000494 	.word	0x20000494
 8002cb0:	20000490 	.word	0x20000490
 8002cb4:	2000047c 	.word	0x2000047c
 8002cb8:	20000474 	.word	0x20000474

08002cbc <vTaskSuspendAll>:
 8002cbc:	b480      	push	{r7}
 8002cbe:	af00      	add	r7, sp, #0
 8002cc0:	4b04      	ldr	r3, [pc, #16]	; (8002cd4 <vTaskSuspendAll+0x18>)
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	3301      	adds	r3, #1
 8002cc6:	4a03      	ldr	r2, [pc, #12]	; (8002cd4 <vTaskSuspendAll+0x18>)
 8002cc8:	6013      	str	r3, [r2, #0]
 8002cca:	bf00      	nop
 8002ccc:	46bd      	mov	sp, r7
 8002cce:	bc80      	pop	{r7}
 8002cd0:	4770      	bx	lr
 8002cd2:	bf00      	nop
 8002cd4:	20000498 	.word	0x20000498

08002cd8 <xTaskResumeAll>:
 8002cd8:	b580      	push	{r7, lr}
 8002cda:	b084      	sub	sp, #16
 8002cdc:	af00      	add	r7, sp, #0
 8002cde:	2300      	movs	r3, #0
 8002ce0:	60fb      	str	r3, [r7, #12]
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	60bb      	str	r3, [r7, #8]
 8002ce6:	4b41      	ldr	r3, [pc, #260]	; (8002dec <xTaskResumeAll+0x114>)
 8002ce8:	681b      	ldr	r3, [r3, #0]
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d10a      	bne.n	8002d04 <xTaskResumeAll+0x2c>
 8002cee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002cf2:	f383 8811 	msr	BASEPRI, r3
 8002cf6:	f3bf 8f6f 	isb	sy
 8002cfa:	f3bf 8f4f 	dsb	sy
 8002cfe:	603b      	str	r3, [r7, #0]
 8002d00:	bf00      	nop
 8002d02:	e7fe      	b.n	8002d02 <xTaskResumeAll+0x2a>
 8002d04:	f000 fbca 	bl	800349c <vPortEnterCritical>
 8002d08:	4b38      	ldr	r3, [pc, #224]	; (8002dec <xTaskResumeAll+0x114>)
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	3b01      	subs	r3, #1
 8002d0e:	4a37      	ldr	r2, [pc, #220]	; (8002dec <xTaskResumeAll+0x114>)
 8002d10:	6013      	str	r3, [r2, #0]
 8002d12:	4b36      	ldr	r3, [pc, #216]	; (8002dec <xTaskResumeAll+0x114>)
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d161      	bne.n	8002dde <xTaskResumeAll+0x106>
 8002d1a:	4b35      	ldr	r3, [pc, #212]	; (8002df0 <xTaskResumeAll+0x118>)
 8002d1c:	681b      	ldr	r3, [r3, #0]
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d05d      	beq.n	8002dde <xTaskResumeAll+0x106>
 8002d22:	e02e      	b.n	8002d82 <xTaskResumeAll+0xaa>
 8002d24:	4b33      	ldr	r3, [pc, #204]	; (8002df4 <xTaskResumeAll+0x11c>)
 8002d26:	68db      	ldr	r3, [r3, #12]
 8002d28:	68db      	ldr	r3, [r3, #12]
 8002d2a:	60fb      	str	r3, [r7, #12]
 8002d2c:	68fb      	ldr	r3, [r7, #12]
 8002d2e:	3318      	adds	r3, #24
 8002d30:	4618      	mov	r0, r3
 8002d32:	f7ff fd7b 	bl	800282c <uxListRemove>
 8002d36:	68fb      	ldr	r3, [r7, #12]
 8002d38:	3304      	adds	r3, #4
 8002d3a:	4618      	mov	r0, r3
 8002d3c:	f7ff fd76 	bl	800282c <uxListRemove>
 8002d40:	68fb      	ldr	r3, [r7, #12]
 8002d42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d44:	2201      	movs	r2, #1
 8002d46:	409a      	lsls	r2, r3
 8002d48:	4b2b      	ldr	r3, [pc, #172]	; (8002df8 <xTaskResumeAll+0x120>)
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	4313      	orrs	r3, r2
 8002d4e:	4a2a      	ldr	r2, [pc, #168]	; (8002df8 <xTaskResumeAll+0x120>)
 8002d50:	6013      	str	r3, [r2, #0]
 8002d52:	68fb      	ldr	r3, [r7, #12]
 8002d54:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002d56:	4613      	mov	r3, r2
 8002d58:	009b      	lsls	r3, r3, #2
 8002d5a:	4413      	add	r3, r2
 8002d5c:	009b      	lsls	r3, r3, #2
 8002d5e:	4a27      	ldr	r2, [pc, #156]	; (8002dfc <xTaskResumeAll+0x124>)
 8002d60:	441a      	add	r2, r3
 8002d62:	68fb      	ldr	r3, [r7, #12]
 8002d64:	3304      	adds	r3, #4
 8002d66:	4619      	mov	r1, r3
 8002d68:	4610      	mov	r0, r2
 8002d6a:	f7ff fd04 	bl	8002776 <vListInsertEnd>
 8002d6e:	68fb      	ldr	r3, [r7, #12]
 8002d70:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002d72:	4b23      	ldr	r3, [pc, #140]	; (8002e00 <xTaskResumeAll+0x128>)
 8002d74:	681b      	ldr	r3, [r3, #0]
 8002d76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d78:	429a      	cmp	r2, r3
 8002d7a:	d302      	bcc.n	8002d82 <xTaskResumeAll+0xaa>
 8002d7c:	4b21      	ldr	r3, [pc, #132]	; (8002e04 <xTaskResumeAll+0x12c>)
 8002d7e:	2201      	movs	r2, #1
 8002d80:	601a      	str	r2, [r3, #0]
 8002d82:	4b1c      	ldr	r3, [pc, #112]	; (8002df4 <xTaskResumeAll+0x11c>)
 8002d84:	681b      	ldr	r3, [r3, #0]
 8002d86:	2b00      	cmp	r3, #0
 8002d88:	d1cc      	bne.n	8002d24 <xTaskResumeAll+0x4c>
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	2b00      	cmp	r3, #0
 8002d8e:	d001      	beq.n	8002d94 <xTaskResumeAll+0xbc>
 8002d90:	f000 fa0c 	bl	80031ac <prvResetNextTaskUnblockTime>
 8002d94:	4b1c      	ldr	r3, [pc, #112]	; (8002e08 <xTaskResumeAll+0x130>)
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	607b      	str	r3, [r7, #4]
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	2b00      	cmp	r3, #0
 8002d9e:	d010      	beq.n	8002dc2 <xTaskResumeAll+0xea>
 8002da0:	f000 f836 	bl	8002e10 <xTaskIncrementTick>
 8002da4:	4603      	mov	r3, r0
 8002da6:	2b00      	cmp	r3, #0
 8002da8:	d002      	beq.n	8002db0 <xTaskResumeAll+0xd8>
 8002daa:	4b16      	ldr	r3, [pc, #88]	; (8002e04 <xTaskResumeAll+0x12c>)
 8002dac:	2201      	movs	r2, #1
 8002dae:	601a      	str	r2, [r3, #0]
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	3b01      	subs	r3, #1
 8002db4:	607b      	str	r3, [r7, #4]
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d1f1      	bne.n	8002da0 <xTaskResumeAll+0xc8>
 8002dbc:	4b12      	ldr	r3, [pc, #72]	; (8002e08 <xTaskResumeAll+0x130>)
 8002dbe:	2200      	movs	r2, #0
 8002dc0:	601a      	str	r2, [r3, #0]
 8002dc2:	4b10      	ldr	r3, [pc, #64]	; (8002e04 <xTaskResumeAll+0x12c>)
 8002dc4:	681b      	ldr	r3, [r3, #0]
 8002dc6:	2b00      	cmp	r3, #0
 8002dc8:	d009      	beq.n	8002dde <xTaskResumeAll+0x106>
 8002dca:	2301      	movs	r3, #1
 8002dcc:	60bb      	str	r3, [r7, #8]
 8002dce:	4b0f      	ldr	r3, [pc, #60]	; (8002e0c <xTaskResumeAll+0x134>)
 8002dd0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002dd4:	601a      	str	r2, [r3, #0]
 8002dd6:	f3bf 8f4f 	dsb	sy
 8002dda:	f3bf 8f6f 	isb	sy
 8002dde:	f000 fb8d 	bl	80034fc <vPortExitCritical>
 8002de2:	68bb      	ldr	r3, [r7, #8]
 8002de4:	4618      	mov	r0, r3
 8002de6:	3710      	adds	r7, #16
 8002de8:	46bd      	mov	sp, r7
 8002dea:	bd80      	pop	{r7, pc}
 8002dec:	20000498 	.word	0x20000498
 8002df0:	20000470 	.word	0x20000470
 8002df4:	20000430 	.word	0x20000430
 8002df8:	20000478 	.word	0x20000478
 8002dfc:	20000374 	.word	0x20000374
 8002e00:	20000370 	.word	0x20000370
 8002e04:	20000484 	.word	0x20000484
 8002e08:	20000480 	.word	0x20000480
 8002e0c:	e000ed04 	.word	0xe000ed04

08002e10 <xTaskIncrementTick>:
 8002e10:	b580      	push	{r7, lr}
 8002e12:	b086      	sub	sp, #24
 8002e14:	af00      	add	r7, sp, #0
 8002e16:	2300      	movs	r3, #0
 8002e18:	617b      	str	r3, [r7, #20]
 8002e1a:	4b51      	ldr	r3, [pc, #324]	; (8002f60 <xTaskIncrementTick+0x150>)
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	2b00      	cmp	r3, #0
 8002e20:	f040 808d 	bne.w	8002f3e <xTaskIncrementTick+0x12e>
 8002e24:	4b4f      	ldr	r3, [pc, #316]	; (8002f64 <xTaskIncrementTick+0x154>)
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	3301      	adds	r3, #1
 8002e2a:	613b      	str	r3, [r7, #16]
 8002e2c:	4a4d      	ldr	r2, [pc, #308]	; (8002f64 <xTaskIncrementTick+0x154>)
 8002e2e:	693b      	ldr	r3, [r7, #16]
 8002e30:	6013      	str	r3, [r2, #0]
 8002e32:	693b      	ldr	r3, [r7, #16]
 8002e34:	2b00      	cmp	r3, #0
 8002e36:	d120      	bne.n	8002e7a <xTaskIncrementTick+0x6a>
 8002e38:	4b4b      	ldr	r3, [pc, #300]	; (8002f68 <xTaskIncrementTick+0x158>)
 8002e3a:	681b      	ldr	r3, [r3, #0]
 8002e3c:	681b      	ldr	r3, [r3, #0]
 8002e3e:	2b00      	cmp	r3, #0
 8002e40:	d00a      	beq.n	8002e58 <xTaskIncrementTick+0x48>
 8002e42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002e46:	f383 8811 	msr	BASEPRI, r3
 8002e4a:	f3bf 8f6f 	isb	sy
 8002e4e:	f3bf 8f4f 	dsb	sy
 8002e52:	603b      	str	r3, [r7, #0]
 8002e54:	bf00      	nop
 8002e56:	e7fe      	b.n	8002e56 <xTaskIncrementTick+0x46>
 8002e58:	4b43      	ldr	r3, [pc, #268]	; (8002f68 <xTaskIncrementTick+0x158>)
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	60fb      	str	r3, [r7, #12]
 8002e5e:	4b43      	ldr	r3, [pc, #268]	; (8002f6c <xTaskIncrementTick+0x15c>)
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	4a41      	ldr	r2, [pc, #260]	; (8002f68 <xTaskIncrementTick+0x158>)
 8002e64:	6013      	str	r3, [r2, #0]
 8002e66:	4a41      	ldr	r2, [pc, #260]	; (8002f6c <xTaskIncrementTick+0x15c>)
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	6013      	str	r3, [r2, #0]
 8002e6c:	4b40      	ldr	r3, [pc, #256]	; (8002f70 <xTaskIncrementTick+0x160>)
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	3301      	adds	r3, #1
 8002e72:	4a3f      	ldr	r2, [pc, #252]	; (8002f70 <xTaskIncrementTick+0x160>)
 8002e74:	6013      	str	r3, [r2, #0]
 8002e76:	f000 f999 	bl	80031ac <prvResetNextTaskUnblockTime>
 8002e7a:	4b3e      	ldr	r3, [pc, #248]	; (8002f74 <xTaskIncrementTick+0x164>)
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	693a      	ldr	r2, [r7, #16]
 8002e80:	429a      	cmp	r2, r3
 8002e82:	d34d      	bcc.n	8002f20 <xTaskIncrementTick+0x110>
 8002e84:	4b38      	ldr	r3, [pc, #224]	; (8002f68 <xTaskIncrementTick+0x158>)
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	d101      	bne.n	8002e92 <xTaskIncrementTick+0x82>
 8002e8e:	2301      	movs	r3, #1
 8002e90:	e000      	b.n	8002e94 <xTaskIncrementTick+0x84>
 8002e92:	2300      	movs	r3, #0
 8002e94:	2b00      	cmp	r3, #0
 8002e96:	d004      	beq.n	8002ea2 <xTaskIncrementTick+0x92>
 8002e98:	4b36      	ldr	r3, [pc, #216]	; (8002f74 <xTaskIncrementTick+0x164>)
 8002e9a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002e9e:	601a      	str	r2, [r3, #0]
 8002ea0:	e03e      	b.n	8002f20 <xTaskIncrementTick+0x110>
 8002ea2:	4b31      	ldr	r3, [pc, #196]	; (8002f68 <xTaskIncrementTick+0x158>)
 8002ea4:	681b      	ldr	r3, [r3, #0]
 8002ea6:	68db      	ldr	r3, [r3, #12]
 8002ea8:	68db      	ldr	r3, [r3, #12]
 8002eaa:	60bb      	str	r3, [r7, #8]
 8002eac:	68bb      	ldr	r3, [r7, #8]
 8002eae:	685b      	ldr	r3, [r3, #4]
 8002eb0:	607b      	str	r3, [r7, #4]
 8002eb2:	693a      	ldr	r2, [r7, #16]
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	429a      	cmp	r2, r3
 8002eb8:	d203      	bcs.n	8002ec2 <xTaskIncrementTick+0xb2>
 8002eba:	4a2e      	ldr	r2, [pc, #184]	; (8002f74 <xTaskIncrementTick+0x164>)
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	6013      	str	r3, [r2, #0]
 8002ec0:	e02e      	b.n	8002f20 <xTaskIncrementTick+0x110>
 8002ec2:	68bb      	ldr	r3, [r7, #8]
 8002ec4:	3304      	adds	r3, #4
 8002ec6:	4618      	mov	r0, r3
 8002ec8:	f7ff fcb0 	bl	800282c <uxListRemove>
 8002ecc:	68bb      	ldr	r3, [r7, #8]
 8002ece:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d004      	beq.n	8002ede <xTaskIncrementTick+0xce>
 8002ed4:	68bb      	ldr	r3, [r7, #8]
 8002ed6:	3318      	adds	r3, #24
 8002ed8:	4618      	mov	r0, r3
 8002eda:	f7ff fca7 	bl	800282c <uxListRemove>
 8002ede:	68bb      	ldr	r3, [r7, #8]
 8002ee0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002ee2:	2201      	movs	r2, #1
 8002ee4:	409a      	lsls	r2, r3
 8002ee6:	4b24      	ldr	r3, [pc, #144]	; (8002f78 <xTaskIncrementTick+0x168>)
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	4313      	orrs	r3, r2
 8002eec:	4a22      	ldr	r2, [pc, #136]	; (8002f78 <xTaskIncrementTick+0x168>)
 8002eee:	6013      	str	r3, [r2, #0]
 8002ef0:	68bb      	ldr	r3, [r7, #8]
 8002ef2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002ef4:	4613      	mov	r3, r2
 8002ef6:	009b      	lsls	r3, r3, #2
 8002ef8:	4413      	add	r3, r2
 8002efa:	009b      	lsls	r3, r3, #2
 8002efc:	4a1f      	ldr	r2, [pc, #124]	; (8002f7c <xTaskIncrementTick+0x16c>)
 8002efe:	441a      	add	r2, r3
 8002f00:	68bb      	ldr	r3, [r7, #8]
 8002f02:	3304      	adds	r3, #4
 8002f04:	4619      	mov	r1, r3
 8002f06:	4610      	mov	r0, r2
 8002f08:	f7ff fc35 	bl	8002776 <vListInsertEnd>
 8002f0c:	68bb      	ldr	r3, [r7, #8]
 8002f0e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002f10:	4b1b      	ldr	r3, [pc, #108]	; (8002f80 <xTaskIncrementTick+0x170>)
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002f16:	429a      	cmp	r2, r3
 8002f18:	d3b4      	bcc.n	8002e84 <xTaskIncrementTick+0x74>
 8002f1a:	2301      	movs	r3, #1
 8002f1c:	617b      	str	r3, [r7, #20]
 8002f1e:	e7b1      	b.n	8002e84 <xTaskIncrementTick+0x74>
 8002f20:	4b17      	ldr	r3, [pc, #92]	; (8002f80 <xTaskIncrementTick+0x170>)
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002f26:	4915      	ldr	r1, [pc, #84]	; (8002f7c <xTaskIncrementTick+0x16c>)
 8002f28:	4613      	mov	r3, r2
 8002f2a:	009b      	lsls	r3, r3, #2
 8002f2c:	4413      	add	r3, r2
 8002f2e:	009b      	lsls	r3, r3, #2
 8002f30:	440b      	add	r3, r1
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	2b01      	cmp	r3, #1
 8002f36:	d907      	bls.n	8002f48 <xTaskIncrementTick+0x138>
 8002f38:	2301      	movs	r3, #1
 8002f3a:	617b      	str	r3, [r7, #20]
 8002f3c:	e004      	b.n	8002f48 <xTaskIncrementTick+0x138>
 8002f3e:	4b11      	ldr	r3, [pc, #68]	; (8002f84 <xTaskIncrementTick+0x174>)
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	3301      	adds	r3, #1
 8002f44:	4a0f      	ldr	r2, [pc, #60]	; (8002f84 <xTaskIncrementTick+0x174>)
 8002f46:	6013      	str	r3, [r2, #0]
 8002f48:	4b0f      	ldr	r3, [pc, #60]	; (8002f88 <xTaskIncrementTick+0x178>)
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	2b00      	cmp	r3, #0
 8002f4e:	d001      	beq.n	8002f54 <xTaskIncrementTick+0x144>
 8002f50:	2301      	movs	r3, #1
 8002f52:	617b      	str	r3, [r7, #20]
 8002f54:	697b      	ldr	r3, [r7, #20]
 8002f56:	4618      	mov	r0, r3
 8002f58:	3718      	adds	r7, #24
 8002f5a:	46bd      	mov	sp, r7
 8002f5c:	bd80      	pop	{r7, pc}
 8002f5e:	bf00      	nop
 8002f60:	20000498 	.word	0x20000498
 8002f64:	20000474 	.word	0x20000474
 8002f68:	20000428 	.word	0x20000428
 8002f6c:	2000042c 	.word	0x2000042c
 8002f70:	20000488 	.word	0x20000488
 8002f74:	20000490 	.word	0x20000490
 8002f78:	20000478 	.word	0x20000478
 8002f7c:	20000374 	.word	0x20000374
 8002f80:	20000370 	.word	0x20000370
 8002f84:	20000480 	.word	0x20000480
 8002f88:	20000484 	.word	0x20000484

08002f8c <vTaskSwitchContext>:
 8002f8c:	b480      	push	{r7}
 8002f8e:	b087      	sub	sp, #28
 8002f90:	af00      	add	r7, sp, #0
 8002f92:	4b26      	ldr	r3, [pc, #152]	; (800302c <vTaskSwitchContext+0xa0>)
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	d003      	beq.n	8002fa2 <vTaskSwitchContext+0x16>
 8002f9a:	4b25      	ldr	r3, [pc, #148]	; (8003030 <vTaskSwitchContext+0xa4>)
 8002f9c:	2201      	movs	r2, #1
 8002f9e:	601a      	str	r2, [r3, #0]
 8002fa0:	e03f      	b.n	8003022 <vTaskSwitchContext+0x96>
 8002fa2:	4b23      	ldr	r3, [pc, #140]	; (8003030 <vTaskSwitchContext+0xa4>)
 8002fa4:	2200      	movs	r2, #0
 8002fa6:	601a      	str	r2, [r3, #0]
 8002fa8:	4b22      	ldr	r3, [pc, #136]	; (8003034 <vTaskSwitchContext+0xa8>)
 8002faa:	681b      	ldr	r3, [r3, #0]
 8002fac:	60fb      	str	r3, [r7, #12]
 8002fae:	68fb      	ldr	r3, [r7, #12]
 8002fb0:	fab3 f383 	clz	r3, r3
 8002fb4:	72fb      	strb	r3, [r7, #11]
 8002fb6:	7afb      	ldrb	r3, [r7, #11]
 8002fb8:	f1c3 031f 	rsb	r3, r3, #31
 8002fbc:	617b      	str	r3, [r7, #20]
 8002fbe:	491e      	ldr	r1, [pc, #120]	; (8003038 <vTaskSwitchContext+0xac>)
 8002fc0:	697a      	ldr	r2, [r7, #20]
 8002fc2:	4613      	mov	r3, r2
 8002fc4:	009b      	lsls	r3, r3, #2
 8002fc6:	4413      	add	r3, r2
 8002fc8:	009b      	lsls	r3, r3, #2
 8002fca:	440b      	add	r3, r1
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	2b00      	cmp	r3, #0
 8002fd0:	d10a      	bne.n	8002fe8 <vTaskSwitchContext+0x5c>
 8002fd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002fd6:	f383 8811 	msr	BASEPRI, r3
 8002fda:	f3bf 8f6f 	isb	sy
 8002fde:	f3bf 8f4f 	dsb	sy
 8002fe2:	607b      	str	r3, [r7, #4]
 8002fe4:	bf00      	nop
 8002fe6:	e7fe      	b.n	8002fe6 <vTaskSwitchContext+0x5a>
 8002fe8:	697a      	ldr	r2, [r7, #20]
 8002fea:	4613      	mov	r3, r2
 8002fec:	009b      	lsls	r3, r3, #2
 8002fee:	4413      	add	r3, r2
 8002ff0:	009b      	lsls	r3, r3, #2
 8002ff2:	4a11      	ldr	r2, [pc, #68]	; (8003038 <vTaskSwitchContext+0xac>)
 8002ff4:	4413      	add	r3, r2
 8002ff6:	613b      	str	r3, [r7, #16]
 8002ff8:	693b      	ldr	r3, [r7, #16]
 8002ffa:	685b      	ldr	r3, [r3, #4]
 8002ffc:	685a      	ldr	r2, [r3, #4]
 8002ffe:	693b      	ldr	r3, [r7, #16]
 8003000:	605a      	str	r2, [r3, #4]
 8003002:	693b      	ldr	r3, [r7, #16]
 8003004:	685a      	ldr	r2, [r3, #4]
 8003006:	693b      	ldr	r3, [r7, #16]
 8003008:	3308      	adds	r3, #8
 800300a:	429a      	cmp	r2, r3
 800300c:	d104      	bne.n	8003018 <vTaskSwitchContext+0x8c>
 800300e:	693b      	ldr	r3, [r7, #16]
 8003010:	685b      	ldr	r3, [r3, #4]
 8003012:	685a      	ldr	r2, [r3, #4]
 8003014:	693b      	ldr	r3, [r7, #16]
 8003016:	605a      	str	r2, [r3, #4]
 8003018:	693b      	ldr	r3, [r7, #16]
 800301a:	685b      	ldr	r3, [r3, #4]
 800301c:	68db      	ldr	r3, [r3, #12]
 800301e:	4a07      	ldr	r2, [pc, #28]	; (800303c <vTaskSwitchContext+0xb0>)
 8003020:	6013      	str	r3, [r2, #0]
 8003022:	bf00      	nop
 8003024:	371c      	adds	r7, #28
 8003026:	46bd      	mov	sp, r7
 8003028:	bc80      	pop	{r7}
 800302a:	4770      	bx	lr
 800302c:	20000498 	.word	0x20000498
 8003030:	20000484 	.word	0x20000484
 8003034:	20000478 	.word	0x20000478
 8003038:	20000374 	.word	0x20000374
 800303c:	20000370 	.word	0x20000370

08003040 <prvIdleTask>:
 8003040:	b580      	push	{r7, lr}
 8003042:	b082      	sub	sp, #8
 8003044:	af00      	add	r7, sp, #0
 8003046:	6078      	str	r0, [r7, #4]
 8003048:	f000 f852 	bl	80030f0 <prvCheckTasksWaitingTermination>
 800304c:	4b06      	ldr	r3, [pc, #24]	; (8003068 <prvIdleTask+0x28>)
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	2b01      	cmp	r3, #1
 8003052:	d9f9      	bls.n	8003048 <prvIdleTask+0x8>
 8003054:	4b05      	ldr	r3, [pc, #20]	; (800306c <prvIdleTask+0x2c>)
 8003056:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800305a:	601a      	str	r2, [r3, #0]
 800305c:	f3bf 8f4f 	dsb	sy
 8003060:	f3bf 8f6f 	isb	sy
 8003064:	e7f0      	b.n	8003048 <prvIdleTask+0x8>
 8003066:	bf00      	nop
 8003068:	20000374 	.word	0x20000374
 800306c:	e000ed04 	.word	0xe000ed04

08003070 <prvInitialiseTaskLists>:
 8003070:	b580      	push	{r7, lr}
 8003072:	b082      	sub	sp, #8
 8003074:	af00      	add	r7, sp, #0
 8003076:	2300      	movs	r3, #0
 8003078:	607b      	str	r3, [r7, #4]
 800307a:	e00c      	b.n	8003096 <prvInitialiseTaskLists+0x26>
 800307c:	687a      	ldr	r2, [r7, #4]
 800307e:	4613      	mov	r3, r2
 8003080:	009b      	lsls	r3, r3, #2
 8003082:	4413      	add	r3, r2
 8003084:	009b      	lsls	r3, r3, #2
 8003086:	4a12      	ldr	r2, [pc, #72]	; (80030d0 <prvInitialiseTaskLists+0x60>)
 8003088:	4413      	add	r3, r2
 800308a:	4618      	mov	r0, r3
 800308c:	f7ff fb48 	bl	8002720 <vListInitialise>
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	3301      	adds	r3, #1
 8003094:	607b      	str	r3, [r7, #4]
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	2b06      	cmp	r3, #6
 800309a:	d9ef      	bls.n	800307c <prvInitialiseTaskLists+0xc>
 800309c:	480d      	ldr	r0, [pc, #52]	; (80030d4 <prvInitialiseTaskLists+0x64>)
 800309e:	f7ff fb3f 	bl	8002720 <vListInitialise>
 80030a2:	480d      	ldr	r0, [pc, #52]	; (80030d8 <prvInitialiseTaskLists+0x68>)
 80030a4:	f7ff fb3c 	bl	8002720 <vListInitialise>
 80030a8:	480c      	ldr	r0, [pc, #48]	; (80030dc <prvInitialiseTaskLists+0x6c>)
 80030aa:	f7ff fb39 	bl	8002720 <vListInitialise>
 80030ae:	480c      	ldr	r0, [pc, #48]	; (80030e0 <prvInitialiseTaskLists+0x70>)
 80030b0:	f7ff fb36 	bl	8002720 <vListInitialise>
 80030b4:	480b      	ldr	r0, [pc, #44]	; (80030e4 <prvInitialiseTaskLists+0x74>)
 80030b6:	f7ff fb33 	bl	8002720 <vListInitialise>
 80030ba:	4b0b      	ldr	r3, [pc, #44]	; (80030e8 <prvInitialiseTaskLists+0x78>)
 80030bc:	4a05      	ldr	r2, [pc, #20]	; (80030d4 <prvInitialiseTaskLists+0x64>)
 80030be:	601a      	str	r2, [r3, #0]
 80030c0:	4b0a      	ldr	r3, [pc, #40]	; (80030ec <prvInitialiseTaskLists+0x7c>)
 80030c2:	4a05      	ldr	r2, [pc, #20]	; (80030d8 <prvInitialiseTaskLists+0x68>)
 80030c4:	601a      	str	r2, [r3, #0]
 80030c6:	bf00      	nop
 80030c8:	3708      	adds	r7, #8
 80030ca:	46bd      	mov	sp, r7
 80030cc:	bd80      	pop	{r7, pc}
 80030ce:	bf00      	nop
 80030d0:	20000374 	.word	0x20000374
 80030d4:	20000400 	.word	0x20000400
 80030d8:	20000414 	.word	0x20000414
 80030dc:	20000430 	.word	0x20000430
 80030e0:	20000444 	.word	0x20000444
 80030e4:	2000045c 	.word	0x2000045c
 80030e8:	20000428 	.word	0x20000428
 80030ec:	2000042c 	.word	0x2000042c

080030f0 <prvCheckTasksWaitingTermination>:
 80030f0:	b580      	push	{r7, lr}
 80030f2:	b082      	sub	sp, #8
 80030f4:	af00      	add	r7, sp, #0
 80030f6:	e019      	b.n	800312c <prvCheckTasksWaitingTermination+0x3c>
 80030f8:	f000 f9d0 	bl	800349c <vPortEnterCritical>
 80030fc:	4b10      	ldr	r3, [pc, #64]	; (8003140 <prvCheckTasksWaitingTermination+0x50>)
 80030fe:	68db      	ldr	r3, [r3, #12]
 8003100:	68db      	ldr	r3, [r3, #12]
 8003102:	607b      	str	r3, [r7, #4]
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	3304      	adds	r3, #4
 8003108:	4618      	mov	r0, r3
 800310a:	f7ff fb8f 	bl	800282c <uxListRemove>
 800310e:	4b0d      	ldr	r3, [pc, #52]	; (8003144 <prvCheckTasksWaitingTermination+0x54>)
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	3b01      	subs	r3, #1
 8003114:	4a0b      	ldr	r2, [pc, #44]	; (8003144 <prvCheckTasksWaitingTermination+0x54>)
 8003116:	6013      	str	r3, [r2, #0]
 8003118:	4b0b      	ldr	r3, [pc, #44]	; (8003148 <prvCheckTasksWaitingTermination+0x58>)
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	3b01      	subs	r3, #1
 800311e:	4a0a      	ldr	r2, [pc, #40]	; (8003148 <prvCheckTasksWaitingTermination+0x58>)
 8003120:	6013      	str	r3, [r2, #0]
 8003122:	f000 f9eb 	bl	80034fc <vPortExitCritical>
 8003126:	6878      	ldr	r0, [r7, #4]
 8003128:	f000 f810 	bl	800314c <prvDeleteTCB>
 800312c:	4b06      	ldr	r3, [pc, #24]	; (8003148 <prvCheckTasksWaitingTermination+0x58>)
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	2b00      	cmp	r3, #0
 8003132:	d1e1      	bne.n	80030f8 <prvCheckTasksWaitingTermination+0x8>
 8003134:	bf00      	nop
 8003136:	bf00      	nop
 8003138:	3708      	adds	r7, #8
 800313a:	46bd      	mov	sp, r7
 800313c:	bd80      	pop	{r7, pc}
 800313e:	bf00      	nop
 8003140:	20000444 	.word	0x20000444
 8003144:	20000470 	.word	0x20000470
 8003148:	20000458 	.word	0x20000458

0800314c <prvDeleteTCB>:
 800314c:	b580      	push	{r7, lr}
 800314e:	b084      	sub	sp, #16
 8003150:	af00      	add	r7, sp, #0
 8003152:	6078      	str	r0, [r7, #4]
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800315a:	2b00      	cmp	r3, #0
 800315c:	d108      	bne.n	8003170 <prvDeleteTCB+0x24>
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003162:	4618      	mov	r0, r3
 8003164:	f000 fb20 	bl	80037a8 <vPortFree>
 8003168:	6878      	ldr	r0, [r7, #4]
 800316a:	f000 fb1d 	bl	80037a8 <vPortFree>
 800316e:	e018      	b.n	80031a2 <prvDeleteTCB+0x56>
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003176:	2b01      	cmp	r3, #1
 8003178:	d103      	bne.n	8003182 <prvDeleteTCB+0x36>
 800317a:	6878      	ldr	r0, [r7, #4]
 800317c:	f000 fb14 	bl	80037a8 <vPortFree>
 8003180:	e00f      	b.n	80031a2 <prvDeleteTCB+0x56>
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003188:	2b02      	cmp	r3, #2
 800318a:	d00a      	beq.n	80031a2 <prvDeleteTCB+0x56>
 800318c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003190:	f383 8811 	msr	BASEPRI, r3
 8003194:	f3bf 8f6f 	isb	sy
 8003198:	f3bf 8f4f 	dsb	sy
 800319c:	60fb      	str	r3, [r7, #12]
 800319e:	bf00      	nop
 80031a0:	e7fe      	b.n	80031a0 <prvDeleteTCB+0x54>
 80031a2:	bf00      	nop
 80031a4:	3710      	adds	r7, #16
 80031a6:	46bd      	mov	sp, r7
 80031a8:	bd80      	pop	{r7, pc}
	...

080031ac <prvResetNextTaskUnblockTime>:
 80031ac:	b480      	push	{r7}
 80031ae:	b083      	sub	sp, #12
 80031b0:	af00      	add	r7, sp, #0
 80031b2:	4b0e      	ldr	r3, [pc, #56]	; (80031ec <prvResetNextTaskUnblockTime+0x40>)
 80031b4:	681b      	ldr	r3, [r3, #0]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	2b00      	cmp	r3, #0
 80031ba:	d101      	bne.n	80031c0 <prvResetNextTaskUnblockTime+0x14>
 80031bc:	2301      	movs	r3, #1
 80031be:	e000      	b.n	80031c2 <prvResetNextTaskUnblockTime+0x16>
 80031c0:	2300      	movs	r3, #0
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d004      	beq.n	80031d0 <prvResetNextTaskUnblockTime+0x24>
 80031c6:	4b0a      	ldr	r3, [pc, #40]	; (80031f0 <prvResetNextTaskUnblockTime+0x44>)
 80031c8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80031cc:	601a      	str	r2, [r3, #0]
 80031ce:	e008      	b.n	80031e2 <prvResetNextTaskUnblockTime+0x36>
 80031d0:	4b06      	ldr	r3, [pc, #24]	; (80031ec <prvResetNextTaskUnblockTime+0x40>)
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	68db      	ldr	r3, [r3, #12]
 80031d6:	68db      	ldr	r3, [r3, #12]
 80031d8:	607b      	str	r3, [r7, #4]
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	685b      	ldr	r3, [r3, #4]
 80031de:	4a04      	ldr	r2, [pc, #16]	; (80031f0 <prvResetNextTaskUnblockTime+0x44>)
 80031e0:	6013      	str	r3, [r2, #0]
 80031e2:	bf00      	nop
 80031e4:	370c      	adds	r7, #12
 80031e6:	46bd      	mov	sp, r7
 80031e8:	bc80      	pop	{r7}
 80031ea:	4770      	bx	lr
 80031ec:	20000428 	.word	0x20000428
 80031f0:	20000490 	.word	0x20000490

080031f4 <prvAddCurrentTaskToDelayedList>:
 80031f4:	b580      	push	{r7, lr}
 80031f6:	b084      	sub	sp, #16
 80031f8:	af00      	add	r7, sp, #0
 80031fa:	6078      	str	r0, [r7, #4]
 80031fc:	6039      	str	r1, [r7, #0]
 80031fe:	4b29      	ldr	r3, [pc, #164]	; (80032a4 <prvAddCurrentTaskToDelayedList+0xb0>)
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	60fb      	str	r3, [r7, #12]
 8003204:	4b28      	ldr	r3, [pc, #160]	; (80032a8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	3304      	adds	r3, #4
 800320a:	4618      	mov	r0, r3
 800320c:	f7ff fb0e 	bl	800282c <uxListRemove>
 8003210:	4603      	mov	r3, r0
 8003212:	2b00      	cmp	r3, #0
 8003214:	d10b      	bne.n	800322e <prvAddCurrentTaskToDelayedList+0x3a>
 8003216:	4b24      	ldr	r3, [pc, #144]	; (80032a8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800321c:	2201      	movs	r2, #1
 800321e:	fa02 f303 	lsl.w	r3, r2, r3
 8003222:	43da      	mvns	r2, r3
 8003224:	4b21      	ldr	r3, [pc, #132]	; (80032ac <prvAddCurrentTaskToDelayedList+0xb8>)
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	4013      	ands	r3, r2
 800322a:	4a20      	ldr	r2, [pc, #128]	; (80032ac <prvAddCurrentTaskToDelayedList+0xb8>)
 800322c:	6013      	str	r3, [r2, #0]
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003234:	d10a      	bne.n	800324c <prvAddCurrentTaskToDelayedList+0x58>
 8003236:	683b      	ldr	r3, [r7, #0]
 8003238:	2b00      	cmp	r3, #0
 800323a:	d007      	beq.n	800324c <prvAddCurrentTaskToDelayedList+0x58>
 800323c:	4b1a      	ldr	r3, [pc, #104]	; (80032a8 <prvAddCurrentTaskToDelayedList+0xb4>)
 800323e:	681b      	ldr	r3, [r3, #0]
 8003240:	3304      	adds	r3, #4
 8003242:	4619      	mov	r1, r3
 8003244:	481a      	ldr	r0, [pc, #104]	; (80032b0 <prvAddCurrentTaskToDelayedList+0xbc>)
 8003246:	f7ff fa96 	bl	8002776 <vListInsertEnd>
 800324a:	e026      	b.n	800329a <prvAddCurrentTaskToDelayedList+0xa6>
 800324c:	68fa      	ldr	r2, [r7, #12]
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	4413      	add	r3, r2
 8003252:	60bb      	str	r3, [r7, #8]
 8003254:	4b14      	ldr	r3, [pc, #80]	; (80032a8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	68ba      	ldr	r2, [r7, #8]
 800325a:	605a      	str	r2, [r3, #4]
 800325c:	68ba      	ldr	r2, [r7, #8]
 800325e:	68fb      	ldr	r3, [r7, #12]
 8003260:	429a      	cmp	r2, r3
 8003262:	d209      	bcs.n	8003278 <prvAddCurrentTaskToDelayedList+0x84>
 8003264:	4b13      	ldr	r3, [pc, #76]	; (80032b4 <prvAddCurrentTaskToDelayedList+0xc0>)
 8003266:	681a      	ldr	r2, [r3, #0]
 8003268:	4b0f      	ldr	r3, [pc, #60]	; (80032a8 <prvAddCurrentTaskToDelayedList+0xb4>)
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	3304      	adds	r3, #4
 800326e:	4619      	mov	r1, r3
 8003270:	4610      	mov	r0, r2
 8003272:	f7ff faa3 	bl	80027bc <vListInsert>
 8003276:	e010      	b.n	800329a <prvAddCurrentTaskToDelayedList+0xa6>
 8003278:	4b0f      	ldr	r3, [pc, #60]	; (80032b8 <prvAddCurrentTaskToDelayedList+0xc4>)
 800327a:	681a      	ldr	r2, [r3, #0]
 800327c:	4b0a      	ldr	r3, [pc, #40]	; (80032a8 <prvAddCurrentTaskToDelayedList+0xb4>)
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	3304      	adds	r3, #4
 8003282:	4619      	mov	r1, r3
 8003284:	4610      	mov	r0, r2
 8003286:	f7ff fa99 	bl	80027bc <vListInsert>
 800328a:	4b0c      	ldr	r3, [pc, #48]	; (80032bc <prvAddCurrentTaskToDelayedList+0xc8>)
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	68ba      	ldr	r2, [r7, #8]
 8003290:	429a      	cmp	r2, r3
 8003292:	d202      	bcs.n	800329a <prvAddCurrentTaskToDelayedList+0xa6>
 8003294:	4a09      	ldr	r2, [pc, #36]	; (80032bc <prvAddCurrentTaskToDelayedList+0xc8>)
 8003296:	68bb      	ldr	r3, [r7, #8]
 8003298:	6013      	str	r3, [r2, #0]
 800329a:	bf00      	nop
 800329c:	3710      	adds	r7, #16
 800329e:	46bd      	mov	sp, r7
 80032a0:	bd80      	pop	{r7, pc}
 80032a2:	bf00      	nop
 80032a4:	20000474 	.word	0x20000474
 80032a8:	20000370 	.word	0x20000370
 80032ac:	20000478 	.word	0x20000478
 80032b0:	2000045c 	.word	0x2000045c
 80032b4:	2000042c 	.word	0x2000042c
 80032b8:	20000428 	.word	0x20000428
 80032bc:	20000490 	.word	0x20000490

080032c0 <pxPortInitialiseStack>:
 80032c0:	b480      	push	{r7}
 80032c2:	b085      	sub	sp, #20
 80032c4:	af00      	add	r7, sp, #0
 80032c6:	60f8      	str	r0, [r7, #12]
 80032c8:	60b9      	str	r1, [r7, #8]
 80032ca:	607a      	str	r2, [r7, #4]
 80032cc:	68fb      	ldr	r3, [r7, #12]
 80032ce:	3b04      	subs	r3, #4
 80032d0:	60fb      	str	r3, [r7, #12]
 80032d2:	68fb      	ldr	r3, [r7, #12]
 80032d4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80032d8:	601a      	str	r2, [r3, #0]
 80032da:	68fb      	ldr	r3, [r7, #12]
 80032dc:	3b04      	subs	r3, #4
 80032de:	60fb      	str	r3, [r7, #12]
 80032e0:	68bb      	ldr	r3, [r7, #8]
 80032e2:	f023 0201 	bic.w	r2, r3, #1
 80032e6:	68fb      	ldr	r3, [r7, #12]
 80032e8:	601a      	str	r2, [r3, #0]
 80032ea:	68fb      	ldr	r3, [r7, #12]
 80032ec:	3b04      	subs	r3, #4
 80032ee:	60fb      	str	r3, [r7, #12]
 80032f0:	4a08      	ldr	r2, [pc, #32]	; (8003314 <pxPortInitialiseStack+0x54>)
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	601a      	str	r2, [r3, #0]
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	3b14      	subs	r3, #20
 80032fa:	60fb      	str	r3, [r7, #12]
 80032fc:	687a      	ldr	r2, [r7, #4]
 80032fe:	68fb      	ldr	r3, [r7, #12]
 8003300:	601a      	str	r2, [r3, #0]
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	3b20      	subs	r3, #32
 8003306:	60fb      	str	r3, [r7, #12]
 8003308:	68fb      	ldr	r3, [r7, #12]
 800330a:	4618      	mov	r0, r3
 800330c:	3714      	adds	r7, #20
 800330e:	46bd      	mov	sp, r7
 8003310:	bc80      	pop	{r7}
 8003312:	4770      	bx	lr
 8003314:	08003319 	.word	0x08003319

08003318 <prvTaskExitError>:
 8003318:	b480      	push	{r7}
 800331a:	b085      	sub	sp, #20
 800331c:	af00      	add	r7, sp, #0
 800331e:	2300      	movs	r3, #0
 8003320:	607b      	str	r3, [r7, #4]
 8003322:	4b12      	ldr	r3, [pc, #72]	; (800336c <prvTaskExitError+0x54>)
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800332a:	d00a      	beq.n	8003342 <prvTaskExitError+0x2a>
 800332c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003330:	f383 8811 	msr	BASEPRI, r3
 8003334:	f3bf 8f6f 	isb	sy
 8003338:	f3bf 8f4f 	dsb	sy
 800333c:	60fb      	str	r3, [r7, #12]
 800333e:	bf00      	nop
 8003340:	e7fe      	b.n	8003340 <prvTaskExitError+0x28>
 8003342:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003346:	f383 8811 	msr	BASEPRI, r3
 800334a:	f3bf 8f6f 	isb	sy
 800334e:	f3bf 8f4f 	dsb	sy
 8003352:	60bb      	str	r3, [r7, #8]
 8003354:	bf00      	nop
 8003356:	bf00      	nop
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	2b00      	cmp	r3, #0
 800335c:	d0fc      	beq.n	8003358 <prvTaskExitError+0x40>
 800335e:	bf00      	nop
 8003360:	bf00      	nop
 8003362:	3714      	adds	r7, #20
 8003364:	46bd      	mov	sp, r7
 8003366:	bc80      	pop	{r7}
 8003368:	4770      	bx	lr
 800336a:	bf00      	nop
 800336c:	20000094 	.word	0x20000094

08003370 <SVC_Handler>:
 8003370:	4b07      	ldr	r3, [pc, #28]	; (8003390 <pxCurrentTCBConst2>)
 8003372:	6819      	ldr	r1, [r3, #0]
 8003374:	6808      	ldr	r0, [r1, #0]
 8003376:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 800337a:	f380 8809 	msr	PSP, r0
 800337e:	f3bf 8f6f 	isb	sy
 8003382:	f04f 0000 	mov.w	r0, #0
 8003386:	f380 8811 	msr	BASEPRI, r0
 800338a:	f04e 0e0d 	orr.w	lr, lr, #13
 800338e:	4770      	bx	lr

08003390 <pxCurrentTCBConst2>:
 8003390:	20000370 	.word	0x20000370
 8003394:	bf00      	nop
 8003396:	bf00      	nop

08003398 <prvPortStartFirstTask>:
 8003398:	4806      	ldr	r0, [pc, #24]	; (80033b4 <prvPortStartFirstTask+0x1c>)
 800339a:	6800      	ldr	r0, [r0, #0]
 800339c:	6800      	ldr	r0, [r0, #0]
 800339e:	f380 8808 	msr	MSP, r0
 80033a2:	b662      	cpsie	i
 80033a4:	b661      	cpsie	f
 80033a6:	f3bf 8f4f 	dsb	sy
 80033aa:	f3bf 8f6f 	isb	sy
 80033ae:	df00      	svc	0
 80033b0:	bf00      	nop
 80033b2:	bf00      	nop
 80033b4:	e000ed08 	.word	0xe000ed08

080033b8 <xPortStartScheduler>:
 80033b8:	b580      	push	{r7, lr}
 80033ba:	b084      	sub	sp, #16
 80033bc:	af00      	add	r7, sp, #0
 80033be:	4b32      	ldr	r3, [pc, #200]	; (8003488 <xPortStartScheduler+0xd0>)
 80033c0:	60fb      	str	r3, [r7, #12]
 80033c2:	68fb      	ldr	r3, [r7, #12]
 80033c4:	781b      	ldrb	r3, [r3, #0]
 80033c6:	b2db      	uxtb	r3, r3
 80033c8:	607b      	str	r3, [r7, #4]
 80033ca:	68fb      	ldr	r3, [r7, #12]
 80033cc:	22ff      	movs	r2, #255	; 0xff
 80033ce:	701a      	strb	r2, [r3, #0]
 80033d0:	68fb      	ldr	r3, [r7, #12]
 80033d2:	781b      	ldrb	r3, [r3, #0]
 80033d4:	b2db      	uxtb	r3, r3
 80033d6:	70fb      	strb	r3, [r7, #3]
 80033d8:	78fb      	ldrb	r3, [r7, #3]
 80033da:	b2db      	uxtb	r3, r3
 80033dc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80033e0:	b2da      	uxtb	r2, r3
 80033e2:	4b2a      	ldr	r3, [pc, #168]	; (800348c <xPortStartScheduler+0xd4>)
 80033e4:	701a      	strb	r2, [r3, #0]
 80033e6:	4b2a      	ldr	r3, [pc, #168]	; (8003490 <xPortStartScheduler+0xd8>)
 80033e8:	2207      	movs	r2, #7
 80033ea:	601a      	str	r2, [r3, #0]
 80033ec:	e009      	b.n	8003402 <xPortStartScheduler+0x4a>
 80033ee:	4b28      	ldr	r3, [pc, #160]	; (8003490 <xPortStartScheduler+0xd8>)
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	3b01      	subs	r3, #1
 80033f4:	4a26      	ldr	r2, [pc, #152]	; (8003490 <xPortStartScheduler+0xd8>)
 80033f6:	6013      	str	r3, [r2, #0]
 80033f8:	78fb      	ldrb	r3, [r7, #3]
 80033fa:	b2db      	uxtb	r3, r3
 80033fc:	005b      	lsls	r3, r3, #1
 80033fe:	b2db      	uxtb	r3, r3
 8003400:	70fb      	strb	r3, [r7, #3]
 8003402:	78fb      	ldrb	r3, [r7, #3]
 8003404:	b2db      	uxtb	r3, r3
 8003406:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800340a:	2b80      	cmp	r3, #128	; 0x80
 800340c:	d0ef      	beq.n	80033ee <xPortStartScheduler+0x36>
 800340e:	4b20      	ldr	r3, [pc, #128]	; (8003490 <xPortStartScheduler+0xd8>)
 8003410:	681b      	ldr	r3, [r3, #0]
 8003412:	f1c3 0307 	rsb	r3, r3, #7
 8003416:	2b04      	cmp	r3, #4
 8003418:	d00a      	beq.n	8003430 <xPortStartScheduler+0x78>
 800341a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800341e:	f383 8811 	msr	BASEPRI, r3
 8003422:	f3bf 8f6f 	isb	sy
 8003426:	f3bf 8f4f 	dsb	sy
 800342a:	60bb      	str	r3, [r7, #8]
 800342c:	bf00      	nop
 800342e:	e7fe      	b.n	800342e <xPortStartScheduler+0x76>
 8003430:	4b17      	ldr	r3, [pc, #92]	; (8003490 <xPortStartScheduler+0xd8>)
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	021b      	lsls	r3, r3, #8
 8003436:	4a16      	ldr	r2, [pc, #88]	; (8003490 <xPortStartScheduler+0xd8>)
 8003438:	6013      	str	r3, [r2, #0]
 800343a:	4b15      	ldr	r3, [pc, #84]	; (8003490 <xPortStartScheduler+0xd8>)
 800343c:	681b      	ldr	r3, [r3, #0]
 800343e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003442:	4a13      	ldr	r2, [pc, #76]	; (8003490 <xPortStartScheduler+0xd8>)
 8003444:	6013      	str	r3, [r2, #0]
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	b2da      	uxtb	r2, r3
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	701a      	strb	r2, [r3, #0]
 800344e:	4b11      	ldr	r3, [pc, #68]	; (8003494 <xPortStartScheduler+0xdc>)
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	4a10      	ldr	r2, [pc, #64]	; (8003494 <xPortStartScheduler+0xdc>)
 8003454:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003458:	6013      	str	r3, [r2, #0]
 800345a:	4b0e      	ldr	r3, [pc, #56]	; (8003494 <xPortStartScheduler+0xdc>)
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	4a0d      	ldr	r2, [pc, #52]	; (8003494 <xPortStartScheduler+0xdc>)
 8003460:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8003464:	6013      	str	r3, [r2, #0]
 8003466:	f000 f8b9 	bl	80035dc <vPortSetupTimerInterrupt>
 800346a:	4b0b      	ldr	r3, [pc, #44]	; (8003498 <xPortStartScheduler+0xe0>)
 800346c:	2200      	movs	r2, #0
 800346e:	601a      	str	r2, [r3, #0]
 8003470:	f7ff ff92 	bl	8003398 <prvPortStartFirstTask>
 8003474:	f7ff fd8a 	bl	8002f8c <vTaskSwitchContext>
 8003478:	f7ff ff4e 	bl	8003318 <prvTaskExitError>
 800347c:	2300      	movs	r3, #0
 800347e:	4618      	mov	r0, r3
 8003480:	3710      	adds	r7, #16
 8003482:	46bd      	mov	sp, r7
 8003484:	bd80      	pop	{r7, pc}
 8003486:	bf00      	nop
 8003488:	e000e400 	.word	0xe000e400
 800348c:	2000049c 	.word	0x2000049c
 8003490:	200004a0 	.word	0x200004a0
 8003494:	e000ed20 	.word	0xe000ed20
 8003498:	20000094 	.word	0x20000094

0800349c <vPortEnterCritical>:
 800349c:	b480      	push	{r7}
 800349e:	b083      	sub	sp, #12
 80034a0:	af00      	add	r7, sp, #0
 80034a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80034a6:	f383 8811 	msr	BASEPRI, r3
 80034aa:	f3bf 8f6f 	isb	sy
 80034ae:	f3bf 8f4f 	dsb	sy
 80034b2:	607b      	str	r3, [r7, #4]
 80034b4:	bf00      	nop
 80034b6:	4b0f      	ldr	r3, [pc, #60]	; (80034f4 <vPortEnterCritical+0x58>)
 80034b8:	681b      	ldr	r3, [r3, #0]
 80034ba:	3301      	adds	r3, #1
 80034bc:	4a0d      	ldr	r2, [pc, #52]	; (80034f4 <vPortEnterCritical+0x58>)
 80034be:	6013      	str	r3, [r2, #0]
 80034c0:	4b0c      	ldr	r3, [pc, #48]	; (80034f4 <vPortEnterCritical+0x58>)
 80034c2:	681b      	ldr	r3, [r3, #0]
 80034c4:	2b01      	cmp	r3, #1
 80034c6:	d10f      	bne.n	80034e8 <vPortEnterCritical+0x4c>
 80034c8:	4b0b      	ldr	r3, [pc, #44]	; (80034f8 <vPortEnterCritical+0x5c>)
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	b2db      	uxtb	r3, r3
 80034ce:	2b00      	cmp	r3, #0
 80034d0:	d00a      	beq.n	80034e8 <vPortEnterCritical+0x4c>
 80034d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80034d6:	f383 8811 	msr	BASEPRI, r3
 80034da:	f3bf 8f6f 	isb	sy
 80034de:	f3bf 8f4f 	dsb	sy
 80034e2:	603b      	str	r3, [r7, #0]
 80034e4:	bf00      	nop
 80034e6:	e7fe      	b.n	80034e6 <vPortEnterCritical+0x4a>
 80034e8:	bf00      	nop
 80034ea:	370c      	adds	r7, #12
 80034ec:	46bd      	mov	sp, r7
 80034ee:	bc80      	pop	{r7}
 80034f0:	4770      	bx	lr
 80034f2:	bf00      	nop
 80034f4:	20000094 	.word	0x20000094
 80034f8:	e000ed04 	.word	0xe000ed04

080034fc <vPortExitCritical>:
 80034fc:	b480      	push	{r7}
 80034fe:	b083      	sub	sp, #12
 8003500:	af00      	add	r7, sp, #0
 8003502:	4b11      	ldr	r3, [pc, #68]	; (8003548 <vPortExitCritical+0x4c>)
 8003504:	681b      	ldr	r3, [r3, #0]
 8003506:	2b00      	cmp	r3, #0
 8003508:	d10a      	bne.n	8003520 <vPortExitCritical+0x24>
 800350a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800350e:	f383 8811 	msr	BASEPRI, r3
 8003512:	f3bf 8f6f 	isb	sy
 8003516:	f3bf 8f4f 	dsb	sy
 800351a:	607b      	str	r3, [r7, #4]
 800351c:	bf00      	nop
 800351e:	e7fe      	b.n	800351e <vPortExitCritical+0x22>
 8003520:	4b09      	ldr	r3, [pc, #36]	; (8003548 <vPortExitCritical+0x4c>)
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	3b01      	subs	r3, #1
 8003526:	4a08      	ldr	r2, [pc, #32]	; (8003548 <vPortExitCritical+0x4c>)
 8003528:	6013      	str	r3, [r2, #0]
 800352a:	4b07      	ldr	r3, [pc, #28]	; (8003548 <vPortExitCritical+0x4c>)
 800352c:	681b      	ldr	r3, [r3, #0]
 800352e:	2b00      	cmp	r3, #0
 8003530:	d105      	bne.n	800353e <vPortExitCritical+0x42>
 8003532:	2300      	movs	r3, #0
 8003534:	603b      	str	r3, [r7, #0]
 8003536:	683b      	ldr	r3, [r7, #0]
 8003538:	f383 8811 	msr	BASEPRI, r3
 800353c:	bf00      	nop
 800353e:	bf00      	nop
 8003540:	370c      	adds	r7, #12
 8003542:	46bd      	mov	sp, r7
 8003544:	bc80      	pop	{r7}
 8003546:	4770      	bx	lr
 8003548:	20000094 	.word	0x20000094
 800354c:	00000000 	.word	0x00000000

08003550 <PendSV_Handler>:
 8003550:	f3ef 8009 	mrs	r0, PSP
 8003554:	f3bf 8f6f 	isb	sy
 8003558:	4b0d      	ldr	r3, [pc, #52]	; (8003590 <pxCurrentTCBConst>)
 800355a:	681a      	ldr	r2, [r3, #0]
 800355c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003560:	6010      	str	r0, [r2, #0]
 8003562:	e92d 4008 	stmdb	sp!, {r3, lr}
 8003566:	f04f 0050 	mov.w	r0, #80	; 0x50
 800356a:	f380 8811 	msr	BASEPRI, r0
 800356e:	f7ff fd0d 	bl	8002f8c <vTaskSwitchContext>
 8003572:	f04f 0000 	mov.w	r0, #0
 8003576:	f380 8811 	msr	BASEPRI, r0
 800357a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800357e:	6819      	ldr	r1, [r3, #0]
 8003580:	6808      	ldr	r0, [r1, #0]
 8003582:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003586:	f380 8809 	msr	PSP, r0
 800358a:	f3bf 8f6f 	isb	sy
 800358e:	4770      	bx	lr

08003590 <pxCurrentTCBConst>:
 8003590:	20000370 	.word	0x20000370
 8003594:	bf00      	nop
 8003596:	bf00      	nop

08003598 <SysTick_Handler>:
 8003598:	b580      	push	{r7, lr}
 800359a:	b082      	sub	sp, #8
 800359c:	af00      	add	r7, sp, #0
 800359e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80035a2:	f383 8811 	msr	BASEPRI, r3
 80035a6:	f3bf 8f6f 	isb	sy
 80035aa:	f3bf 8f4f 	dsb	sy
 80035ae:	607b      	str	r3, [r7, #4]
 80035b0:	bf00      	nop
 80035b2:	f7ff fc2d 	bl	8002e10 <xTaskIncrementTick>
 80035b6:	4603      	mov	r3, r0
 80035b8:	2b00      	cmp	r3, #0
 80035ba:	d003      	beq.n	80035c4 <SysTick_Handler+0x2c>
 80035bc:	4b06      	ldr	r3, [pc, #24]	; (80035d8 <SysTick_Handler+0x40>)
 80035be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80035c2:	601a      	str	r2, [r3, #0]
 80035c4:	2300      	movs	r3, #0
 80035c6:	603b      	str	r3, [r7, #0]
 80035c8:	683b      	ldr	r3, [r7, #0]
 80035ca:	f383 8811 	msr	BASEPRI, r3
 80035ce:	bf00      	nop
 80035d0:	bf00      	nop
 80035d2:	3708      	adds	r7, #8
 80035d4:	46bd      	mov	sp, r7
 80035d6:	bd80      	pop	{r7, pc}
 80035d8:	e000ed04 	.word	0xe000ed04

080035dc <vPortSetupTimerInterrupt>:
 80035dc:	b480      	push	{r7}
 80035de:	af00      	add	r7, sp, #0
 80035e0:	4b0a      	ldr	r3, [pc, #40]	; (800360c <vPortSetupTimerInterrupt+0x30>)
 80035e2:	2200      	movs	r2, #0
 80035e4:	601a      	str	r2, [r3, #0]
 80035e6:	4b0a      	ldr	r3, [pc, #40]	; (8003610 <vPortSetupTimerInterrupt+0x34>)
 80035e8:	2200      	movs	r2, #0
 80035ea:	601a      	str	r2, [r3, #0]
 80035ec:	4b09      	ldr	r3, [pc, #36]	; (8003614 <vPortSetupTimerInterrupt+0x38>)
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	4a09      	ldr	r2, [pc, #36]	; (8003618 <vPortSetupTimerInterrupt+0x3c>)
 80035f2:	fba2 2303 	umull	r2, r3, r2, r3
 80035f6:	099b      	lsrs	r3, r3, #6
 80035f8:	4a08      	ldr	r2, [pc, #32]	; (800361c <vPortSetupTimerInterrupt+0x40>)
 80035fa:	3b01      	subs	r3, #1
 80035fc:	6013      	str	r3, [r2, #0]
 80035fe:	4b03      	ldr	r3, [pc, #12]	; (800360c <vPortSetupTimerInterrupt+0x30>)
 8003600:	2207      	movs	r2, #7
 8003602:	601a      	str	r2, [r3, #0]
 8003604:	bf00      	nop
 8003606:	46bd      	mov	sp, r7
 8003608:	bc80      	pop	{r7}
 800360a:	4770      	bx	lr
 800360c:	e000e010 	.word	0xe000e010
 8003610:	e000e018 	.word	0xe000e018
 8003614:	20000088 	.word	0x20000088
 8003618:	10624dd3 	.word	0x10624dd3
 800361c:	e000e014 	.word	0xe000e014

08003620 <pvPortMalloc>:
 8003620:	b580      	push	{r7, lr}
 8003622:	b08a      	sub	sp, #40	; 0x28
 8003624:	af00      	add	r7, sp, #0
 8003626:	6078      	str	r0, [r7, #4]
 8003628:	2300      	movs	r3, #0
 800362a:	61fb      	str	r3, [r7, #28]
 800362c:	f7ff fb46 	bl	8002cbc <vTaskSuspendAll>
 8003630:	4b58      	ldr	r3, [pc, #352]	; (8003794 <pvPortMalloc+0x174>)
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	2b00      	cmp	r3, #0
 8003636:	d101      	bne.n	800363c <pvPortMalloc+0x1c>
 8003638:	f000 f910 	bl	800385c <prvHeapInit>
 800363c:	4b56      	ldr	r3, [pc, #344]	; (8003798 <pvPortMalloc+0x178>)
 800363e:	681a      	ldr	r2, [r3, #0]
 8003640:	687b      	ldr	r3, [r7, #4]
 8003642:	4013      	ands	r3, r2
 8003644:	2b00      	cmp	r3, #0
 8003646:	f040 808e 	bne.w	8003766 <pvPortMalloc+0x146>
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	2b00      	cmp	r3, #0
 800364e:	d01d      	beq.n	800368c <pvPortMalloc+0x6c>
 8003650:	2208      	movs	r2, #8
 8003652:	687b      	ldr	r3, [r7, #4]
 8003654:	4413      	add	r3, r2
 8003656:	607b      	str	r3, [r7, #4]
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	f003 0307 	and.w	r3, r3, #7
 800365e:	2b00      	cmp	r3, #0
 8003660:	d014      	beq.n	800368c <pvPortMalloc+0x6c>
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	f023 0307 	bic.w	r3, r3, #7
 8003668:	3308      	adds	r3, #8
 800366a:	607b      	str	r3, [r7, #4]
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	f003 0307 	and.w	r3, r3, #7
 8003672:	2b00      	cmp	r3, #0
 8003674:	d00a      	beq.n	800368c <pvPortMalloc+0x6c>
 8003676:	f04f 0350 	mov.w	r3, #80	; 0x50
 800367a:	f383 8811 	msr	BASEPRI, r3
 800367e:	f3bf 8f6f 	isb	sy
 8003682:	f3bf 8f4f 	dsb	sy
 8003686:	617b      	str	r3, [r7, #20]
 8003688:	bf00      	nop
 800368a:	e7fe      	b.n	800368a <pvPortMalloc+0x6a>
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	2b00      	cmp	r3, #0
 8003690:	d069      	beq.n	8003766 <pvPortMalloc+0x146>
 8003692:	4b42      	ldr	r3, [pc, #264]	; (800379c <pvPortMalloc+0x17c>)
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	687a      	ldr	r2, [r7, #4]
 8003698:	429a      	cmp	r2, r3
 800369a:	d864      	bhi.n	8003766 <pvPortMalloc+0x146>
 800369c:	4b40      	ldr	r3, [pc, #256]	; (80037a0 <pvPortMalloc+0x180>)
 800369e:	623b      	str	r3, [r7, #32]
 80036a0:	4b3f      	ldr	r3, [pc, #252]	; (80037a0 <pvPortMalloc+0x180>)
 80036a2:	681b      	ldr	r3, [r3, #0]
 80036a4:	627b      	str	r3, [r7, #36]	; 0x24
 80036a6:	e004      	b.n	80036b2 <pvPortMalloc+0x92>
 80036a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036aa:	623b      	str	r3, [r7, #32]
 80036ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	627b      	str	r3, [r7, #36]	; 0x24
 80036b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036b4:	685b      	ldr	r3, [r3, #4]
 80036b6:	687a      	ldr	r2, [r7, #4]
 80036b8:	429a      	cmp	r2, r3
 80036ba:	d903      	bls.n	80036c4 <pvPortMalloc+0xa4>
 80036bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036be:	681b      	ldr	r3, [r3, #0]
 80036c0:	2b00      	cmp	r3, #0
 80036c2:	d1f1      	bne.n	80036a8 <pvPortMalloc+0x88>
 80036c4:	4b33      	ldr	r3, [pc, #204]	; (8003794 <pvPortMalloc+0x174>)
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80036ca:	429a      	cmp	r2, r3
 80036cc:	d04b      	beq.n	8003766 <pvPortMalloc+0x146>
 80036ce:	6a3b      	ldr	r3, [r7, #32]
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	2208      	movs	r2, #8
 80036d4:	4413      	add	r3, r2
 80036d6:	61fb      	str	r3, [r7, #28]
 80036d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036da:	681a      	ldr	r2, [r3, #0]
 80036dc:	6a3b      	ldr	r3, [r7, #32]
 80036de:	601a      	str	r2, [r3, #0]
 80036e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036e2:	685a      	ldr	r2, [r3, #4]
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	1ad2      	subs	r2, r2, r3
 80036e8:	2308      	movs	r3, #8
 80036ea:	005b      	lsls	r3, r3, #1
 80036ec:	429a      	cmp	r2, r3
 80036ee:	d91f      	bls.n	8003730 <pvPortMalloc+0x110>
 80036f0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	4413      	add	r3, r2
 80036f6:	61bb      	str	r3, [r7, #24]
 80036f8:	69bb      	ldr	r3, [r7, #24]
 80036fa:	f003 0307 	and.w	r3, r3, #7
 80036fe:	2b00      	cmp	r3, #0
 8003700:	d00a      	beq.n	8003718 <pvPortMalloc+0xf8>
 8003702:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003706:	f383 8811 	msr	BASEPRI, r3
 800370a:	f3bf 8f6f 	isb	sy
 800370e:	f3bf 8f4f 	dsb	sy
 8003712:	613b      	str	r3, [r7, #16]
 8003714:	bf00      	nop
 8003716:	e7fe      	b.n	8003716 <pvPortMalloc+0xf6>
 8003718:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800371a:	685a      	ldr	r2, [r3, #4]
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	1ad2      	subs	r2, r2, r3
 8003720:	69bb      	ldr	r3, [r7, #24]
 8003722:	605a      	str	r2, [r3, #4]
 8003724:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003726:	687a      	ldr	r2, [r7, #4]
 8003728:	605a      	str	r2, [r3, #4]
 800372a:	69b8      	ldr	r0, [r7, #24]
 800372c:	f000 f8f8 	bl	8003920 <prvInsertBlockIntoFreeList>
 8003730:	4b1a      	ldr	r3, [pc, #104]	; (800379c <pvPortMalloc+0x17c>)
 8003732:	681a      	ldr	r2, [r3, #0]
 8003734:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003736:	685b      	ldr	r3, [r3, #4]
 8003738:	1ad3      	subs	r3, r2, r3
 800373a:	4a18      	ldr	r2, [pc, #96]	; (800379c <pvPortMalloc+0x17c>)
 800373c:	6013      	str	r3, [r2, #0]
 800373e:	4b17      	ldr	r3, [pc, #92]	; (800379c <pvPortMalloc+0x17c>)
 8003740:	681a      	ldr	r2, [r3, #0]
 8003742:	4b18      	ldr	r3, [pc, #96]	; (80037a4 <pvPortMalloc+0x184>)
 8003744:	681b      	ldr	r3, [r3, #0]
 8003746:	429a      	cmp	r2, r3
 8003748:	d203      	bcs.n	8003752 <pvPortMalloc+0x132>
 800374a:	4b14      	ldr	r3, [pc, #80]	; (800379c <pvPortMalloc+0x17c>)
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	4a15      	ldr	r2, [pc, #84]	; (80037a4 <pvPortMalloc+0x184>)
 8003750:	6013      	str	r3, [r2, #0]
 8003752:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003754:	685a      	ldr	r2, [r3, #4]
 8003756:	4b10      	ldr	r3, [pc, #64]	; (8003798 <pvPortMalloc+0x178>)
 8003758:	681b      	ldr	r3, [r3, #0]
 800375a:	431a      	orrs	r2, r3
 800375c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800375e:	605a      	str	r2, [r3, #4]
 8003760:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003762:	2200      	movs	r2, #0
 8003764:	601a      	str	r2, [r3, #0]
 8003766:	f7ff fab7 	bl	8002cd8 <xTaskResumeAll>
 800376a:	69fb      	ldr	r3, [r7, #28]
 800376c:	f003 0307 	and.w	r3, r3, #7
 8003770:	2b00      	cmp	r3, #0
 8003772:	d00a      	beq.n	800378a <pvPortMalloc+0x16a>
 8003774:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003778:	f383 8811 	msr	BASEPRI, r3
 800377c:	f3bf 8f6f 	isb	sy
 8003780:	f3bf 8f4f 	dsb	sy
 8003784:	60fb      	str	r3, [r7, #12]
 8003786:	bf00      	nop
 8003788:	e7fe      	b.n	8003788 <pvPortMalloc+0x168>
 800378a:	69fb      	ldr	r3, [r7, #28]
 800378c:	4618      	mov	r0, r3
 800378e:	3728      	adds	r7, #40	; 0x28
 8003790:	46bd      	mov	sp, r7
 8003792:	bd80      	pop	{r7, pc}
 8003794:	200010ac 	.word	0x200010ac
 8003798:	200010b8 	.word	0x200010b8
 800379c:	200010b0 	.word	0x200010b0
 80037a0:	200010a4 	.word	0x200010a4
 80037a4:	200010b4 	.word	0x200010b4

080037a8 <vPortFree>:
 80037a8:	b580      	push	{r7, lr}
 80037aa:	b086      	sub	sp, #24
 80037ac:	af00      	add	r7, sp, #0
 80037ae:	6078      	str	r0, [r7, #4]
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	617b      	str	r3, [r7, #20]
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	d048      	beq.n	800384c <vPortFree+0xa4>
 80037ba:	2308      	movs	r3, #8
 80037bc:	425b      	negs	r3, r3
 80037be:	697a      	ldr	r2, [r7, #20]
 80037c0:	4413      	add	r3, r2
 80037c2:	617b      	str	r3, [r7, #20]
 80037c4:	697b      	ldr	r3, [r7, #20]
 80037c6:	613b      	str	r3, [r7, #16]
 80037c8:	693b      	ldr	r3, [r7, #16]
 80037ca:	685a      	ldr	r2, [r3, #4]
 80037cc:	4b21      	ldr	r3, [pc, #132]	; (8003854 <vPortFree+0xac>)
 80037ce:	681b      	ldr	r3, [r3, #0]
 80037d0:	4013      	ands	r3, r2
 80037d2:	2b00      	cmp	r3, #0
 80037d4:	d10a      	bne.n	80037ec <vPortFree+0x44>
 80037d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80037da:	f383 8811 	msr	BASEPRI, r3
 80037de:	f3bf 8f6f 	isb	sy
 80037e2:	f3bf 8f4f 	dsb	sy
 80037e6:	60fb      	str	r3, [r7, #12]
 80037e8:	bf00      	nop
 80037ea:	e7fe      	b.n	80037ea <vPortFree+0x42>
 80037ec:	693b      	ldr	r3, [r7, #16]
 80037ee:	681b      	ldr	r3, [r3, #0]
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	d00a      	beq.n	800380a <vPortFree+0x62>
 80037f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80037f8:	f383 8811 	msr	BASEPRI, r3
 80037fc:	f3bf 8f6f 	isb	sy
 8003800:	f3bf 8f4f 	dsb	sy
 8003804:	60bb      	str	r3, [r7, #8]
 8003806:	bf00      	nop
 8003808:	e7fe      	b.n	8003808 <vPortFree+0x60>
 800380a:	693b      	ldr	r3, [r7, #16]
 800380c:	685a      	ldr	r2, [r3, #4]
 800380e:	4b11      	ldr	r3, [pc, #68]	; (8003854 <vPortFree+0xac>)
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	4013      	ands	r3, r2
 8003814:	2b00      	cmp	r3, #0
 8003816:	d019      	beq.n	800384c <vPortFree+0xa4>
 8003818:	693b      	ldr	r3, [r7, #16]
 800381a:	681b      	ldr	r3, [r3, #0]
 800381c:	2b00      	cmp	r3, #0
 800381e:	d115      	bne.n	800384c <vPortFree+0xa4>
 8003820:	693b      	ldr	r3, [r7, #16]
 8003822:	685a      	ldr	r2, [r3, #4]
 8003824:	4b0b      	ldr	r3, [pc, #44]	; (8003854 <vPortFree+0xac>)
 8003826:	681b      	ldr	r3, [r3, #0]
 8003828:	43db      	mvns	r3, r3
 800382a:	401a      	ands	r2, r3
 800382c:	693b      	ldr	r3, [r7, #16]
 800382e:	605a      	str	r2, [r3, #4]
 8003830:	f7ff fa44 	bl	8002cbc <vTaskSuspendAll>
 8003834:	693b      	ldr	r3, [r7, #16]
 8003836:	685a      	ldr	r2, [r3, #4]
 8003838:	4b07      	ldr	r3, [pc, #28]	; (8003858 <vPortFree+0xb0>)
 800383a:	681b      	ldr	r3, [r3, #0]
 800383c:	4413      	add	r3, r2
 800383e:	4a06      	ldr	r2, [pc, #24]	; (8003858 <vPortFree+0xb0>)
 8003840:	6013      	str	r3, [r2, #0]
 8003842:	6938      	ldr	r0, [r7, #16]
 8003844:	f000 f86c 	bl	8003920 <prvInsertBlockIntoFreeList>
 8003848:	f7ff fa46 	bl	8002cd8 <xTaskResumeAll>
 800384c:	bf00      	nop
 800384e:	3718      	adds	r7, #24
 8003850:	46bd      	mov	sp, r7
 8003852:	bd80      	pop	{r7, pc}
 8003854:	200010b8 	.word	0x200010b8
 8003858:	200010b0 	.word	0x200010b0

0800385c <prvHeapInit>:
 800385c:	b480      	push	{r7}
 800385e:	b085      	sub	sp, #20
 8003860:	af00      	add	r7, sp, #0
 8003862:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003866:	60bb      	str	r3, [r7, #8]
 8003868:	4b27      	ldr	r3, [pc, #156]	; (8003908 <prvHeapInit+0xac>)
 800386a:	60fb      	str	r3, [r7, #12]
 800386c:	68fb      	ldr	r3, [r7, #12]
 800386e:	f003 0307 	and.w	r3, r3, #7
 8003872:	2b00      	cmp	r3, #0
 8003874:	d00c      	beq.n	8003890 <prvHeapInit+0x34>
 8003876:	68fb      	ldr	r3, [r7, #12]
 8003878:	3307      	adds	r3, #7
 800387a:	60fb      	str	r3, [r7, #12]
 800387c:	68fb      	ldr	r3, [r7, #12]
 800387e:	f023 0307 	bic.w	r3, r3, #7
 8003882:	60fb      	str	r3, [r7, #12]
 8003884:	68ba      	ldr	r2, [r7, #8]
 8003886:	68fb      	ldr	r3, [r7, #12]
 8003888:	1ad3      	subs	r3, r2, r3
 800388a:	4a1f      	ldr	r2, [pc, #124]	; (8003908 <prvHeapInit+0xac>)
 800388c:	4413      	add	r3, r2
 800388e:	60bb      	str	r3, [r7, #8]
 8003890:	68fb      	ldr	r3, [r7, #12]
 8003892:	607b      	str	r3, [r7, #4]
 8003894:	4a1d      	ldr	r2, [pc, #116]	; (800390c <prvHeapInit+0xb0>)
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	6013      	str	r3, [r2, #0]
 800389a:	4b1c      	ldr	r3, [pc, #112]	; (800390c <prvHeapInit+0xb0>)
 800389c:	2200      	movs	r2, #0
 800389e:	605a      	str	r2, [r3, #4]
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	68ba      	ldr	r2, [r7, #8]
 80038a4:	4413      	add	r3, r2
 80038a6:	60fb      	str	r3, [r7, #12]
 80038a8:	2208      	movs	r2, #8
 80038aa:	68fb      	ldr	r3, [r7, #12]
 80038ac:	1a9b      	subs	r3, r3, r2
 80038ae:	60fb      	str	r3, [r7, #12]
 80038b0:	68fb      	ldr	r3, [r7, #12]
 80038b2:	f023 0307 	bic.w	r3, r3, #7
 80038b6:	60fb      	str	r3, [r7, #12]
 80038b8:	68fb      	ldr	r3, [r7, #12]
 80038ba:	4a15      	ldr	r2, [pc, #84]	; (8003910 <prvHeapInit+0xb4>)
 80038bc:	6013      	str	r3, [r2, #0]
 80038be:	4b14      	ldr	r3, [pc, #80]	; (8003910 <prvHeapInit+0xb4>)
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	2200      	movs	r2, #0
 80038c4:	605a      	str	r2, [r3, #4]
 80038c6:	4b12      	ldr	r3, [pc, #72]	; (8003910 <prvHeapInit+0xb4>)
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	2200      	movs	r2, #0
 80038cc:	601a      	str	r2, [r3, #0]
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	603b      	str	r3, [r7, #0]
 80038d2:	683b      	ldr	r3, [r7, #0]
 80038d4:	68fa      	ldr	r2, [r7, #12]
 80038d6:	1ad2      	subs	r2, r2, r3
 80038d8:	683b      	ldr	r3, [r7, #0]
 80038da:	605a      	str	r2, [r3, #4]
 80038dc:	4b0c      	ldr	r3, [pc, #48]	; (8003910 <prvHeapInit+0xb4>)
 80038de:	681a      	ldr	r2, [r3, #0]
 80038e0:	683b      	ldr	r3, [r7, #0]
 80038e2:	601a      	str	r2, [r3, #0]
 80038e4:	683b      	ldr	r3, [r7, #0]
 80038e6:	685b      	ldr	r3, [r3, #4]
 80038e8:	4a0a      	ldr	r2, [pc, #40]	; (8003914 <prvHeapInit+0xb8>)
 80038ea:	6013      	str	r3, [r2, #0]
 80038ec:	683b      	ldr	r3, [r7, #0]
 80038ee:	685b      	ldr	r3, [r3, #4]
 80038f0:	4a09      	ldr	r2, [pc, #36]	; (8003918 <prvHeapInit+0xbc>)
 80038f2:	6013      	str	r3, [r2, #0]
 80038f4:	4b09      	ldr	r3, [pc, #36]	; (800391c <prvHeapInit+0xc0>)
 80038f6:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80038fa:	601a      	str	r2, [r3, #0]
 80038fc:	bf00      	nop
 80038fe:	3714      	adds	r7, #20
 8003900:	46bd      	mov	sp, r7
 8003902:	bc80      	pop	{r7}
 8003904:	4770      	bx	lr
 8003906:	bf00      	nop
 8003908:	200004a4 	.word	0x200004a4
 800390c:	200010a4 	.word	0x200010a4
 8003910:	200010ac 	.word	0x200010ac
 8003914:	200010b4 	.word	0x200010b4
 8003918:	200010b0 	.word	0x200010b0
 800391c:	200010b8 	.word	0x200010b8

08003920 <prvInsertBlockIntoFreeList>:
 8003920:	b480      	push	{r7}
 8003922:	b085      	sub	sp, #20
 8003924:	af00      	add	r7, sp, #0
 8003926:	6078      	str	r0, [r7, #4]
 8003928:	4b27      	ldr	r3, [pc, #156]	; (80039c8 <prvInsertBlockIntoFreeList+0xa8>)
 800392a:	60fb      	str	r3, [r7, #12]
 800392c:	e002      	b.n	8003934 <prvInsertBlockIntoFreeList+0x14>
 800392e:	68fb      	ldr	r3, [r7, #12]
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	60fb      	str	r3, [r7, #12]
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	687a      	ldr	r2, [r7, #4]
 800393a:	429a      	cmp	r2, r3
 800393c:	d8f7      	bhi.n	800392e <prvInsertBlockIntoFreeList+0xe>
 800393e:	68fb      	ldr	r3, [r7, #12]
 8003940:	60bb      	str	r3, [r7, #8]
 8003942:	68fb      	ldr	r3, [r7, #12]
 8003944:	685b      	ldr	r3, [r3, #4]
 8003946:	68ba      	ldr	r2, [r7, #8]
 8003948:	4413      	add	r3, r2
 800394a:	687a      	ldr	r2, [r7, #4]
 800394c:	429a      	cmp	r2, r3
 800394e:	d108      	bne.n	8003962 <prvInsertBlockIntoFreeList+0x42>
 8003950:	68fb      	ldr	r3, [r7, #12]
 8003952:	685a      	ldr	r2, [r3, #4]
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	685b      	ldr	r3, [r3, #4]
 8003958:	441a      	add	r2, r3
 800395a:	68fb      	ldr	r3, [r7, #12]
 800395c:	605a      	str	r2, [r3, #4]
 800395e:	68fb      	ldr	r3, [r7, #12]
 8003960:	607b      	str	r3, [r7, #4]
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	60bb      	str	r3, [r7, #8]
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	685b      	ldr	r3, [r3, #4]
 800396a:	68ba      	ldr	r2, [r7, #8]
 800396c:	441a      	add	r2, r3
 800396e:	68fb      	ldr	r3, [r7, #12]
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	429a      	cmp	r2, r3
 8003974:	d118      	bne.n	80039a8 <prvInsertBlockIntoFreeList+0x88>
 8003976:	68fb      	ldr	r3, [r7, #12]
 8003978:	681a      	ldr	r2, [r3, #0]
 800397a:	4b14      	ldr	r3, [pc, #80]	; (80039cc <prvInsertBlockIntoFreeList+0xac>)
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	429a      	cmp	r2, r3
 8003980:	d00d      	beq.n	800399e <prvInsertBlockIntoFreeList+0x7e>
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	685a      	ldr	r2, [r3, #4]
 8003986:	68fb      	ldr	r3, [r7, #12]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	685b      	ldr	r3, [r3, #4]
 800398c:	441a      	add	r2, r3
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	605a      	str	r2, [r3, #4]
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	681a      	ldr	r2, [r3, #0]
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	601a      	str	r2, [r3, #0]
 800399c:	e008      	b.n	80039b0 <prvInsertBlockIntoFreeList+0x90>
 800399e:	4b0b      	ldr	r3, [pc, #44]	; (80039cc <prvInsertBlockIntoFreeList+0xac>)
 80039a0:	681a      	ldr	r2, [r3, #0]
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	601a      	str	r2, [r3, #0]
 80039a6:	e003      	b.n	80039b0 <prvInsertBlockIntoFreeList+0x90>
 80039a8:	68fb      	ldr	r3, [r7, #12]
 80039aa:	681a      	ldr	r2, [r3, #0]
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	601a      	str	r2, [r3, #0]
 80039b0:	68fa      	ldr	r2, [r7, #12]
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	429a      	cmp	r2, r3
 80039b6:	d002      	beq.n	80039be <prvInsertBlockIntoFreeList+0x9e>
 80039b8:	68fb      	ldr	r3, [r7, #12]
 80039ba:	687a      	ldr	r2, [r7, #4]
 80039bc:	601a      	str	r2, [r3, #0]
 80039be:	bf00      	nop
 80039c0:	3714      	adds	r7, #20
 80039c2:	46bd      	mov	sp, r7
 80039c4:	bc80      	pop	{r7}
 80039c6:	4770      	bx	lr
 80039c8:	200010a4 	.word	0x200010a4
 80039cc:	200010ac 	.word	0x200010ac

080039d0 <__errno>:
 80039d0:	4b01      	ldr	r3, [pc, #4]	; (80039d8 <__errno+0x8>)
 80039d2:	6818      	ldr	r0, [r3, #0]
 80039d4:	4770      	bx	lr
 80039d6:	bf00      	nop
 80039d8:	20000098 	.word	0x20000098

080039dc <__libc_init_array>:
 80039dc:	b570      	push	{r4, r5, r6, lr}
 80039de:	2600      	movs	r6, #0
 80039e0:	4d0c      	ldr	r5, [pc, #48]	; (8003a14 <__libc_init_array+0x38>)
 80039e2:	4c0d      	ldr	r4, [pc, #52]	; (8003a18 <__libc_init_array+0x3c>)
 80039e4:	1b64      	subs	r4, r4, r5
 80039e6:	10a4      	asrs	r4, r4, #2
 80039e8:	42a6      	cmp	r6, r4
 80039ea:	d109      	bne.n	8003a00 <__libc_init_array+0x24>
 80039ec:	f001 fa72 	bl	8004ed4 <_init>
 80039f0:	2600      	movs	r6, #0
 80039f2:	4d0a      	ldr	r5, [pc, #40]	; (8003a1c <__libc_init_array+0x40>)
 80039f4:	4c0a      	ldr	r4, [pc, #40]	; (8003a20 <__libc_init_array+0x44>)
 80039f6:	1b64      	subs	r4, r4, r5
 80039f8:	10a4      	asrs	r4, r4, #2
 80039fa:	42a6      	cmp	r6, r4
 80039fc:	d105      	bne.n	8003a0a <__libc_init_array+0x2e>
 80039fe:	bd70      	pop	{r4, r5, r6, pc}
 8003a00:	f855 3b04 	ldr.w	r3, [r5], #4
 8003a04:	4798      	blx	r3
 8003a06:	3601      	adds	r6, #1
 8003a08:	e7ee      	b.n	80039e8 <__libc_init_array+0xc>
 8003a0a:	f855 3b04 	ldr.w	r3, [r5], #4
 8003a0e:	4798      	blx	r3
 8003a10:	3601      	adds	r6, #1
 8003a12:	e7f2      	b.n	80039fa <__libc_init_array+0x1e>
 8003a14:	080050d0 	.word	0x080050d0
 8003a18:	080050d0 	.word	0x080050d0
 8003a1c:	080050d0 	.word	0x080050d0
 8003a20:	080050d4 	.word	0x080050d4

08003a24 <memcpy>:
 8003a24:	440a      	add	r2, r1
 8003a26:	4291      	cmp	r1, r2
 8003a28:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8003a2c:	d100      	bne.n	8003a30 <memcpy+0xc>
 8003a2e:	4770      	bx	lr
 8003a30:	b510      	push	{r4, lr}
 8003a32:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003a36:	4291      	cmp	r1, r2
 8003a38:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003a3c:	d1f9      	bne.n	8003a32 <memcpy+0xe>
 8003a3e:	bd10      	pop	{r4, pc}

08003a40 <memset>:
 8003a40:	4603      	mov	r3, r0
 8003a42:	4402      	add	r2, r0
 8003a44:	4293      	cmp	r3, r2
 8003a46:	d100      	bne.n	8003a4a <memset+0xa>
 8003a48:	4770      	bx	lr
 8003a4a:	f803 1b01 	strb.w	r1, [r3], #1
 8003a4e:	e7f9      	b.n	8003a44 <memset+0x4>

08003a50 <srand>:
 8003a50:	b538      	push	{r3, r4, r5, lr}
 8003a52:	4b10      	ldr	r3, [pc, #64]	; (8003a94 <srand+0x44>)
 8003a54:	4604      	mov	r4, r0
 8003a56:	681d      	ldr	r5, [r3, #0]
 8003a58:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8003a5a:	b9b3      	cbnz	r3, 8003a8a <srand+0x3a>
 8003a5c:	2018      	movs	r0, #24
 8003a5e:	f000 f8f1 	bl	8003c44 <malloc>
 8003a62:	4602      	mov	r2, r0
 8003a64:	63a8      	str	r0, [r5, #56]	; 0x38
 8003a66:	b920      	cbnz	r0, 8003a72 <srand+0x22>
 8003a68:	2142      	movs	r1, #66	; 0x42
 8003a6a:	4b0b      	ldr	r3, [pc, #44]	; (8003a98 <srand+0x48>)
 8003a6c:	480b      	ldr	r0, [pc, #44]	; (8003a9c <srand+0x4c>)
 8003a6e:	f000 f8a7 	bl	8003bc0 <__assert_func>
 8003a72:	490b      	ldr	r1, [pc, #44]	; (8003aa0 <srand+0x50>)
 8003a74:	4b0b      	ldr	r3, [pc, #44]	; (8003aa4 <srand+0x54>)
 8003a76:	e9c0 1300 	strd	r1, r3, [r0]
 8003a7a:	4b0b      	ldr	r3, [pc, #44]	; (8003aa8 <srand+0x58>)
 8003a7c:	2100      	movs	r1, #0
 8003a7e:	6083      	str	r3, [r0, #8]
 8003a80:	230b      	movs	r3, #11
 8003a82:	8183      	strh	r3, [r0, #12]
 8003a84:	2001      	movs	r0, #1
 8003a86:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003a8a:	2200      	movs	r2, #0
 8003a8c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8003a8e:	611c      	str	r4, [r3, #16]
 8003a90:	615a      	str	r2, [r3, #20]
 8003a92:	bd38      	pop	{r3, r4, r5, pc}
 8003a94:	20000098 	.word	0x20000098
 8003a98:	08004f88 	.word	0x08004f88
 8003a9c:	08004f9f 	.word	0x08004f9f
 8003aa0:	abcd330e 	.word	0xabcd330e
 8003aa4:	e66d1234 	.word	0xe66d1234
 8003aa8:	0005deec 	.word	0x0005deec

08003aac <rand>:
 8003aac:	4b17      	ldr	r3, [pc, #92]	; (8003b0c <rand+0x60>)
 8003aae:	b510      	push	{r4, lr}
 8003ab0:	681c      	ldr	r4, [r3, #0]
 8003ab2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003ab4:	b9b3      	cbnz	r3, 8003ae4 <rand+0x38>
 8003ab6:	2018      	movs	r0, #24
 8003ab8:	f000 f8c4 	bl	8003c44 <malloc>
 8003abc:	4602      	mov	r2, r0
 8003abe:	63a0      	str	r0, [r4, #56]	; 0x38
 8003ac0:	b920      	cbnz	r0, 8003acc <rand+0x20>
 8003ac2:	214e      	movs	r1, #78	; 0x4e
 8003ac4:	4b12      	ldr	r3, [pc, #72]	; (8003b10 <rand+0x64>)
 8003ac6:	4813      	ldr	r0, [pc, #76]	; (8003b14 <rand+0x68>)
 8003ac8:	f000 f87a 	bl	8003bc0 <__assert_func>
 8003acc:	4912      	ldr	r1, [pc, #72]	; (8003b18 <rand+0x6c>)
 8003ace:	4b13      	ldr	r3, [pc, #76]	; (8003b1c <rand+0x70>)
 8003ad0:	e9c0 1300 	strd	r1, r3, [r0]
 8003ad4:	4b12      	ldr	r3, [pc, #72]	; (8003b20 <rand+0x74>)
 8003ad6:	2100      	movs	r1, #0
 8003ad8:	6083      	str	r3, [r0, #8]
 8003ada:	230b      	movs	r3, #11
 8003adc:	8183      	strh	r3, [r0, #12]
 8003ade:	2001      	movs	r0, #1
 8003ae0:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003ae4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8003ae6:	480f      	ldr	r0, [pc, #60]	; (8003b24 <rand+0x78>)
 8003ae8:	690a      	ldr	r2, [r1, #16]
 8003aea:	694b      	ldr	r3, [r1, #20]
 8003aec:	4350      	muls	r0, r2
 8003aee:	4c0e      	ldr	r4, [pc, #56]	; (8003b28 <rand+0x7c>)
 8003af0:	fb04 0003 	mla	r0, r4, r3, r0
 8003af4:	fba2 3404 	umull	r3, r4, r2, r4
 8003af8:	1c5a      	adds	r2, r3, #1
 8003afa:	4404      	add	r4, r0
 8003afc:	f144 0000 	adc.w	r0, r4, #0
 8003b00:	e9c1 2004 	strd	r2, r0, [r1, #16]
 8003b04:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8003b08:	bd10      	pop	{r4, pc}
 8003b0a:	bf00      	nop
 8003b0c:	20000098 	.word	0x20000098
 8003b10:	08004f88 	.word	0x08004f88
 8003b14:	08004f9f 	.word	0x08004f9f
 8003b18:	abcd330e 	.word	0xabcd330e
 8003b1c:	e66d1234 	.word	0xe66d1234
 8003b20:	0005deec 	.word	0x0005deec
 8003b24:	5851f42d 	.word	0x5851f42d
 8003b28:	4c957f2d 	.word	0x4c957f2d

08003b2c <siprintf>:
 8003b2c:	b40e      	push	{r1, r2, r3}
 8003b2e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003b32:	b500      	push	{lr}
 8003b34:	b09c      	sub	sp, #112	; 0x70
 8003b36:	ab1d      	add	r3, sp, #116	; 0x74
 8003b38:	9002      	str	r0, [sp, #8]
 8003b3a:	9006      	str	r0, [sp, #24]
 8003b3c:	9107      	str	r1, [sp, #28]
 8003b3e:	9104      	str	r1, [sp, #16]
 8003b40:	4808      	ldr	r0, [pc, #32]	; (8003b64 <siprintf+0x38>)
 8003b42:	4909      	ldr	r1, [pc, #36]	; (8003b68 <siprintf+0x3c>)
 8003b44:	f853 2b04 	ldr.w	r2, [r3], #4
 8003b48:	9105      	str	r1, [sp, #20]
 8003b4a:	6800      	ldr	r0, [r0, #0]
 8003b4c:	a902      	add	r1, sp, #8
 8003b4e:	9301      	str	r3, [sp, #4]
 8003b50:	f000 f982 	bl	8003e58 <_svfiprintf_r>
 8003b54:	2200      	movs	r2, #0
 8003b56:	9b02      	ldr	r3, [sp, #8]
 8003b58:	701a      	strb	r2, [r3, #0]
 8003b5a:	b01c      	add	sp, #112	; 0x70
 8003b5c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b60:	b003      	add	sp, #12
 8003b62:	4770      	bx	lr
 8003b64:	20000098 	.word	0x20000098
 8003b68:	ffff0208 	.word	0xffff0208

08003b6c <strcat>:
 8003b6c:	4602      	mov	r2, r0
 8003b6e:	b510      	push	{r4, lr}
 8003b70:	7814      	ldrb	r4, [r2, #0]
 8003b72:	4613      	mov	r3, r2
 8003b74:	3201      	adds	r2, #1
 8003b76:	2c00      	cmp	r4, #0
 8003b78:	d1fa      	bne.n	8003b70 <strcat+0x4>
 8003b7a:	3b01      	subs	r3, #1
 8003b7c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003b80:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003b84:	2a00      	cmp	r2, #0
 8003b86:	d1f9      	bne.n	8003b7c <strcat+0x10>
 8003b88:	bd10      	pop	{r4, pc}
	...

08003b8c <time>:
 8003b8c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003b8e:	4b0b      	ldr	r3, [pc, #44]	; (8003bbc <time+0x30>)
 8003b90:	4604      	mov	r4, r0
 8003b92:	2200      	movs	r2, #0
 8003b94:	4669      	mov	r1, sp
 8003b96:	6818      	ldr	r0, [r3, #0]
 8003b98:	f000 f842 	bl	8003c20 <_gettimeofday_r>
 8003b9c:	2800      	cmp	r0, #0
 8003b9e:	da05      	bge.n	8003bac <time+0x20>
 8003ba0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003ba4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003ba8:	e9cd 2300 	strd	r2, r3, [sp]
 8003bac:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003bb0:	b10c      	cbz	r4, 8003bb6 <time+0x2a>
 8003bb2:	e9c4 0100 	strd	r0, r1, [r4]
 8003bb6:	b004      	add	sp, #16
 8003bb8:	bd10      	pop	{r4, pc}
 8003bba:	bf00      	nop
 8003bbc:	20000098 	.word	0x20000098

08003bc0 <__assert_func>:
 8003bc0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003bc2:	4614      	mov	r4, r2
 8003bc4:	461a      	mov	r2, r3
 8003bc6:	4b09      	ldr	r3, [pc, #36]	; (8003bec <__assert_func+0x2c>)
 8003bc8:	4605      	mov	r5, r0
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	68d8      	ldr	r0, [r3, #12]
 8003bce:	b14c      	cbz	r4, 8003be4 <__assert_func+0x24>
 8003bd0:	4b07      	ldr	r3, [pc, #28]	; (8003bf0 <__assert_func+0x30>)
 8003bd2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003bd6:	9100      	str	r1, [sp, #0]
 8003bd8:	462b      	mov	r3, r5
 8003bda:	4906      	ldr	r1, [pc, #24]	; (8003bf4 <__assert_func+0x34>)
 8003bdc:	f000 f80e 	bl	8003bfc <fiprintf>
 8003be0:	f000 fdf8 	bl	80047d4 <abort>
 8003be4:	4b04      	ldr	r3, [pc, #16]	; (8003bf8 <__assert_func+0x38>)
 8003be6:	461c      	mov	r4, r3
 8003be8:	e7f3      	b.n	8003bd2 <__assert_func+0x12>
 8003bea:	bf00      	nop
 8003bec:	20000098 	.word	0x20000098
 8003bf0:	08004ffe 	.word	0x08004ffe
 8003bf4:	0800500b 	.word	0x0800500b
 8003bf8:	08005039 	.word	0x08005039

08003bfc <fiprintf>:
 8003bfc:	b40e      	push	{r1, r2, r3}
 8003bfe:	b503      	push	{r0, r1, lr}
 8003c00:	4601      	mov	r1, r0
 8003c02:	ab03      	add	r3, sp, #12
 8003c04:	4805      	ldr	r0, [pc, #20]	; (8003c1c <fiprintf+0x20>)
 8003c06:	f853 2b04 	ldr.w	r2, [r3], #4
 8003c0a:	6800      	ldr	r0, [r0, #0]
 8003c0c:	9301      	str	r3, [sp, #4]
 8003c0e:	f000 fa4b 	bl	80040a8 <_vfiprintf_r>
 8003c12:	b002      	add	sp, #8
 8003c14:	f85d eb04 	ldr.w	lr, [sp], #4
 8003c18:	b003      	add	sp, #12
 8003c1a:	4770      	bx	lr
 8003c1c:	20000098 	.word	0x20000098

08003c20 <_gettimeofday_r>:
 8003c20:	b538      	push	{r3, r4, r5, lr}
 8003c22:	2300      	movs	r3, #0
 8003c24:	4d06      	ldr	r5, [pc, #24]	; (8003c40 <_gettimeofday_r+0x20>)
 8003c26:	4604      	mov	r4, r0
 8003c28:	4608      	mov	r0, r1
 8003c2a:	4611      	mov	r1, r2
 8003c2c:	602b      	str	r3, [r5, #0]
 8003c2e:	f001 f949 	bl	8004ec4 <_gettimeofday>
 8003c32:	1c43      	adds	r3, r0, #1
 8003c34:	d102      	bne.n	8003c3c <_gettimeofday_r+0x1c>
 8003c36:	682b      	ldr	r3, [r5, #0]
 8003c38:	b103      	cbz	r3, 8003c3c <_gettimeofday_r+0x1c>
 8003c3a:	6023      	str	r3, [r4, #0]
 8003c3c:	bd38      	pop	{r3, r4, r5, pc}
 8003c3e:	bf00      	nop
 8003c40:	20001310 	.word	0x20001310

08003c44 <malloc>:
 8003c44:	4b02      	ldr	r3, [pc, #8]	; (8003c50 <malloc+0xc>)
 8003c46:	4601      	mov	r1, r0
 8003c48:	6818      	ldr	r0, [r3, #0]
 8003c4a:	f000 b84f 	b.w	8003cec <_malloc_r>
 8003c4e:	bf00      	nop
 8003c50:	20000098 	.word	0x20000098

08003c54 <_free_r>:
 8003c54:	b538      	push	{r3, r4, r5, lr}
 8003c56:	4605      	mov	r5, r0
 8003c58:	2900      	cmp	r1, #0
 8003c5a:	d043      	beq.n	8003ce4 <_free_r+0x90>
 8003c5c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003c60:	1f0c      	subs	r4, r1, #4
 8003c62:	2b00      	cmp	r3, #0
 8003c64:	bfb8      	it	lt
 8003c66:	18e4      	addlt	r4, r4, r3
 8003c68:	f001 f802 	bl	8004c70 <__malloc_lock>
 8003c6c:	4a1e      	ldr	r2, [pc, #120]	; (8003ce8 <_free_r+0x94>)
 8003c6e:	6813      	ldr	r3, [r2, #0]
 8003c70:	4610      	mov	r0, r2
 8003c72:	b933      	cbnz	r3, 8003c82 <_free_r+0x2e>
 8003c74:	6063      	str	r3, [r4, #4]
 8003c76:	6014      	str	r4, [r2, #0]
 8003c78:	4628      	mov	r0, r5
 8003c7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003c7e:	f000 bffd 	b.w	8004c7c <__malloc_unlock>
 8003c82:	42a3      	cmp	r3, r4
 8003c84:	d90a      	bls.n	8003c9c <_free_r+0x48>
 8003c86:	6821      	ldr	r1, [r4, #0]
 8003c88:	1862      	adds	r2, r4, r1
 8003c8a:	4293      	cmp	r3, r2
 8003c8c:	bf01      	itttt	eq
 8003c8e:	681a      	ldreq	r2, [r3, #0]
 8003c90:	685b      	ldreq	r3, [r3, #4]
 8003c92:	1852      	addeq	r2, r2, r1
 8003c94:	6022      	streq	r2, [r4, #0]
 8003c96:	6063      	str	r3, [r4, #4]
 8003c98:	6004      	str	r4, [r0, #0]
 8003c9a:	e7ed      	b.n	8003c78 <_free_r+0x24>
 8003c9c:	461a      	mov	r2, r3
 8003c9e:	685b      	ldr	r3, [r3, #4]
 8003ca0:	b10b      	cbz	r3, 8003ca6 <_free_r+0x52>
 8003ca2:	42a3      	cmp	r3, r4
 8003ca4:	d9fa      	bls.n	8003c9c <_free_r+0x48>
 8003ca6:	6811      	ldr	r1, [r2, #0]
 8003ca8:	1850      	adds	r0, r2, r1
 8003caa:	42a0      	cmp	r0, r4
 8003cac:	d10b      	bne.n	8003cc6 <_free_r+0x72>
 8003cae:	6820      	ldr	r0, [r4, #0]
 8003cb0:	4401      	add	r1, r0
 8003cb2:	1850      	adds	r0, r2, r1
 8003cb4:	4283      	cmp	r3, r0
 8003cb6:	6011      	str	r1, [r2, #0]
 8003cb8:	d1de      	bne.n	8003c78 <_free_r+0x24>
 8003cba:	6818      	ldr	r0, [r3, #0]
 8003cbc:	685b      	ldr	r3, [r3, #4]
 8003cbe:	4401      	add	r1, r0
 8003cc0:	6011      	str	r1, [r2, #0]
 8003cc2:	6053      	str	r3, [r2, #4]
 8003cc4:	e7d8      	b.n	8003c78 <_free_r+0x24>
 8003cc6:	d902      	bls.n	8003cce <_free_r+0x7a>
 8003cc8:	230c      	movs	r3, #12
 8003cca:	602b      	str	r3, [r5, #0]
 8003ccc:	e7d4      	b.n	8003c78 <_free_r+0x24>
 8003cce:	6820      	ldr	r0, [r4, #0]
 8003cd0:	1821      	adds	r1, r4, r0
 8003cd2:	428b      	cmp	r3, r1
 8003cd4:	bf01      	itttt	eq
 8003cd6:	6819      	ldreq	r1, [r3, #0]
 8003cd8:	685b      	ldreq	r3, [r3, #4]
 8003cda:	1809      	addeq	r1, r1, r0
 8003cdc:	6021      	streq	r1, [r4, #0]
 8003cde:	6063      	str	r3, [r4, #4]
 8003ce0:	6054      	str	r4, [r2, #4]
 8003ce2:	e7c9      	b.n	8003c78 <_free_r+0x24>
 8003ce4:	bd38      	pop	{r3, r4, r5, pc}
 8003ce6:	bf00      	nop
 8003ce8:	200010bc 	.word	0x200010bc

08003cec <_malloc_r>:
 8003cec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cee:	1ccd      	adds	r5, r1, #3
 8003cf0:	f025 0503 	bic.w	r5, r5, #3
 8003cf4:	3508      	adds	r5, #8
 8003cf6:	2d0c      	cmp	r5, #12
 8003cf8:	bf38      	it	cc
 8003cfa:	250c      	movcc	r5, #12
 8003cfc:	2d00      	cmp	r5, #0
 8003cfe:	4606      	mov	r6, r0
 8003d00:	db01      	blt.n	8003d06 <_malloc_r+0x1a>
 8003d02:	42a9      	cmp	r1, r5
 8003d04:	d903      	bls.n	8003d0e <_malloc_r+0x22>
 8003d06:	230c      	movs	r3, #12
 8003d08:	6033      	str	r3, [r6, #0]
 8003d0a:	2000      	movs	r0, #0
 8003d0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d0e:	f000 ffaf 	bl	8004c70 <__malloc_lock>
 8003d12:	4921      	ldr	r1, [pc, #132]	; (8003d98 <_malloc_r+0xac>)
 8003d14:	680a      	ldr	r2, [r1, #0]
 8003d16:	4614      	mov	r4, r2
 8003d18:	b99c      	cbnz	r4, 8003d42 <_malloc_r+0x56>
 8003d1a:	4f20      	ldr	r7, [pc, #128]	; (8003d9c <_malloc_r+0xb0>)
 8003d1c:	683b      	ldr	r3, [r7, #0]
 8003d1e:	b923      	cbnz	r3, 8003d2a <_malloc_r+0x3e>
 8003d20:	4621      	mov	r1, r4
 8003d22:	4630      	mov	r0, r6
 8003d24:	f000 fc86 	bl	8004634 <_sbrk_r>
 8003d28:	6038      	str	r0, [r7, #0]
 8003d2a:	4629      	mov	r1, r5
 8003d2c:	4630      	mov	r0, r6
 8003d2e:	f000 fc81 	bl	8004634 <_sbrk_r>
 8003d32:	1c43      	adds	r3, r0, #1
 8003d34:	d123      	bne.n	8003d7e <_malloc_r+0x92>
 8003d36:	230c      	movs	r3, #12
 8003d38:	4630      	mov	r0, r6
 8003d3a:	6033      	str	r3, [r6, #0]
 8003d3c:	f000 ff9e 	bl	8004c7c <__malloc_unlock>
 8003d40:	e7e3      	b.n	8003d0a <_malloc_r+0x1e>
 8003d42:	6823      	ldr	r3, [r4, #0]
 8003d44:	1b5b      	subs	r3, r3, r5
 8003d46:	d417      	bmi.n	8003d78 <_malloc_r+0x8c>
 8003d48:	2b0b      	cmp	r3, #11
 8003d4a:	d903      	bls.n	8003d54 <_malloc_r+0x68>
 8003d4c:	6023      	str	r3, [r4, #0]
 8003d4e:	441c      	add	r4, r3
 8003d50:	6025      	str	r5, [r4, #0]
 8003d52:	e004      	b.n	8003d5e <_malloc_r+0x72>
 8003d54:	6863      	ldr	r3, [r4, #4]
 8003d56:	42a2      	cmp	r2, r4
 8003d58:	bf0c      	ite	eq
 8003d5a:	600b      	streq	r3, [r1, #0]
 8003d5c:	6053      	strne	r3, [r2, #4]
 8003d5e:	4630      	mov	r0, r6
 8003d60:	f000 ff8c 	bl	8004c7c <__malloc_unlock>
 8003d64:	f104 000b 	add.w	r0, r4, #11
 8003d68:	1d23      	adds	r3, r4, #4
 8003d6a:	f020 0007 	bic.w	r0, r0, #7
 8003d6e:	1ac2      	subs	r2, r0, r3
 8003d70:	d0cc      	beq.n	8003d0c <_malloc_r+0x20>
 8003d72:	1a1b      	subs	r3, r3, r0
 8003d74:	50a3      	str	r3, [r4, r2]
 8003d76:	e7c9      	b.n	8003d0c <_malloc_r+0x20>
 8003d78:	4622      	mov	r2, r4
 8003d7a:	6864      	ldr	r4, [r4, #4]
 8003d7c:	e7cc      	b.n	8003d18 <_malloc_r+0x2c>
 8003d7e:	1cc4      	adds	r4, r0, #3
 8003d80:	f024 0403 	bic.w	r4, r4, #3
 8003d84:	42a0      	cmp	r0, r4
 8003d86:	d0e3      	beq.n	8003d50 <_malloc_r+0x64>
 8003d88:	1a21      	subs	r1, r4, r0
 8003d8a:	4630      	mov	r0, r6
 8003d8c:	f000 fc52 	bl	8004634 <_sbrk_r>
 8003d90:	3001      	adds	r0, #1
 8003d92:	d1dd      	bne.n	8003d50 <_malloc_r+0x64>
 8003d94:	e7cf      	b.n	8003d36 <_malloc_r+0x4a>
 8003d96:	bf00      	nop
 8003d98:	200010bc 	.word	0x200010bc
 8003d9c:	200010c0 	.word	0x200010c0

08003da0 <__ssputs_r>:
 8003da0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003da4:	688e      	ldr	r6, [r1, #8]
 8003da6:	4682      	mov	sl, r0
 8003da8:	429e      	cmp	r6, r3
 8003daa:	460c      	mov	r4, r1
 8003dac:	4690      	mov	r8, r2
 8003dae:	461f      	mov	r7, r3
 8003db0:	d838      	bhi.n	8003e24 <__ssputs_r+0x84>
 8003db2:	898a      	ldrh	r2, [r1, #12]
 8003db4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003db8:	d032      	beq.n	8003e20 <__ssputs_r+0x80>
 8003dba:	6825      	ldr	r5, [r4, #0]
 8003dbc:	6909      	ldr	r1, [r1, #16]
 8003dbe:	3301      	adds	r3, #1
 8003dc0:	eba5 0901 	sub.w	r9, r5, r1
 8003dc4:	6965      	ldr	r5, [r4, #20]
 8003dc6:	444b      	add	r3, r9
 8003dc8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003dcc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003dd0:	106d      	asrs	r5, r5, #1
 8003dd2:	429d      	cmp	r5, r3
 8003dd4:	bf38      	it	cc
 8003dd6:	461d      	movcc	r5, r3
 8003dd8:	0553      	lsls	r3, r2, #21
 8003dda:	d531      	bpl.n	8003e40 <__ssputs_r+0xa0>
 8003ddc:	4629      	mov	r1, r5
 8003dde:	f7ff ff85 	bl	8003cec <_malloc_r>
 8003de2:	4606      	mov	r6, r0
 8003de4:	b950      	cbnz	r0, 8003dfc <__ssputs_r+0x5c>
 8003de6:	230c      	movs	r3, #12
 8003de8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003dec:	f8ca 3000 	str.w	r3, [sl]
 8003df0:	89a3      	ldrh	r3, [r4, #12]
 8003df2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003df6:	81a3      	strh	r3, [r4, #12]
 8003df8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003dfc:	464a      	mov	r2, r9
 8003dfe:	6921      	ldr	r1, [r4, #16]
 8003e00:	f7ff fe10 	bl	8003a24 <memcpy>
 8003e04:	89a3      	ldrh	r3, [r4, #12]
 8003e06:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003e0a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003e0e:	81a3      	strh	r3, [r4, #12]
 8003e10:	6126      	str	r6, [r4, #16]
 8003e12:	444e      	add	r6, r9
 8003e14:	6026      	str	r6, [r4, #0]
 8003e16:	463e      	mov	r6, r7
 8003e18:	6165      	str	r5, [r4, #20]
 8003e1a:	eba5 0509 	sub.w	r5, r5, r9
 8003e1e:	60a5      	str	r5, [r4, #8]
 8003e20:	42be      	cmp	r6, r7
 8003e22:	d900      	bls.n	8003e26 <__ssputs_r+0x86>
 8003e24:	463e      	mov	r6, r7
 8003e26:	4632      	mov	r2, r6
 8003e28:	4641      	mov	r1, r8
 8003e2a:	6820      	ldr	r0, [r4, #0]
 8003e2c:	f000 ff06 	bl	8004c3c <memmove>
 8003e30:	68a3      	ldr	r3, [r4, #8]
 8003e32:	6822      	ldr	r2, [r4, #0]
 8003e34:	1b9b      	subs	r3, r3, r6
 8003e36:	4432      	add	r2, r6
 8003e38:	2000      	movs	r0, #0
 8003e3a:	60a3      	str	r3, [r4, #8]
 8003e3c:	6022      	str	r2, [r4, #0]
 8003e3e:	e7db      	b.n	8003df8 <__ssputs_r+0x58>
 8003e40:	462a      	mov	r2, r5
 8003e42:	f000 ff21 	bl	8004c88 <_realloc_r>
 8003e46:	4606      	mov	r6, r0
 8003e48:	2800      	cmp	r0, #0
 8003e4a:	d1e1      	bne.n	8003e10 <__ssputs_r+0x70>
 8003e4c:	4650      	mov	r0, sl
 8003e4e:	6921      	ldr	r1, [r4, #16]
 8003e50:	f7ff ff00 	bl	8003c54 <_free_r>
 8003e54:	e7c7      	b.n	8003de6 <__ssputs_r+0x46>
	...

08003e58 <_svfiprintf_r>:
 8003e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e5c:	4698      	mov	r8, r3
 8003e5e:	898b      	ldrh	r3, [r1, #12]
 8003e60:	4607      	mov	r7, r0
 8003e62:	061b      	lsls	r3, r3, #24
 8003e64:	460d      	mov	r5, r1
 8003e66:	4614      	mov	r4, r2
 8003e68:	b09d      	sub	sp, #116	; 0x74
 8003e6a:	d50e      	bpl.n	8003e8a <_svfiprintf_r+0x32>
 8003e6c:	690b      	ldr	r3, [r1, #16]
 8003e6e:	b963      	cbnz	r3, 8003e8a <_svfiprintf_r+0x32>
 8003e70:	2140      	movs	r1, #64	; 0x40
 8003e72:	f7ff ff3b 	bl	8003cec <_malloc_r>
 8003e76:	6028      	str	r0, [r5, #0]
 8003e78:	6128      	str	r0, [r5, #16]
 8003e7a:	b920      	cbnz	r0, 8003e86 <_svfiprintf_r+0x2e>
 8003e7c:	230c      	movs	r3, #12
 8003e7e:	603b      	str	r3, [r7, #0]
 8003e80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003e84:	e0d1      	b.n	800402a <_svfiprintf_r+0x1d2>
 8003e86:	2340      	movs	r3, #64	; 0x40
 8003e88:	616b      	str	r3, [r5, #20]
 8003e8a:	2300      	movs	r3, #0
 8003e8c:	9309      	str	r3, [sp, #36]	; 0x24
 8003e8e:	2320      	movs	r3, #32
 8003e90:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003e94:	2330      	movs	r3, #48	; 0x30
 8003e96:	f04f 0901 	mov.w	r9, #1
 8003e9a:	f8cd 800c 	str.w	r8, [sp, #12]
 8003e9e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004044 <_svfiprintf_r+0x1ec>
 8003ea2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003ea6:	4623      	mov	r3, r4
 8003ea8:	469a      	mov	sl, r3
 8003eaa:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003eae:	b10a      	cbz	r2, 8003eb4 <_svfiprintf_r+0x5c>
 8003eb0:	2a25      	cmp	r2, #37	; 0x25
 8003eb2:	d1f9      	bne.n	8003ea8 <_svfiprintf_r+0x50>
 8003eb4:	ebba 0b04 	subs.w	fp, sl, r4
 8003eb8:	d00b      	beq.n	8003ed2 <_svfiprintf_r+0x7a>
 8003eba:	465b      	mov	r3, fp
 8003ebc:	4622      	mov	r2, r4
 8003ebe:	4629      	mov	r1, r5
 8003ec0:	4638      	mov	r0, r7
 8003ec2:	f7ff ff6d 	bl	8003da0 <__ssputs_r>
 8003ec6:	3001      	adds	r0, #1
 8003ec8:	f000 80aa 	beq.w	8004020 <_svfiprintf_r+0x1c8>
 8003ecc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003ece:	445a      	add	r2, fp
 8003ed0:	9209      	str	r2, [sp, #36]	; 0x24
 8003ed2:	f89a 3000 	ldrb.w	r3, [sl]
 8003ed6:	2b00      	cmp	r3, #0
 8003ed8:	f000 80a2 	beq.w	8004020 <_svfiprintf_r+0x1c8>
 8003edc:	2300      	movs	r3, #0
 8003ede:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003ee2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003ee6:	f10a 0a01 	add.w	sl, sl, #1
 8003eea:	9304      	str	r3, [sp, #16]
 8003eec:	9307      	str	r3, [sp, #28]
 8003eee:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003ef2:	931a      	str	r3, [sp, #104]	; 0x68
 8003ef4:	4654      	mov	r4, sl
 8003ef6:	2205      	movs	r2, #5
 8003ef8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003efc:	4851      	ldr	r0, [pc, #324]	; (8004044 <_svfiprintf_r+0x1ec>)
 8003efe:	f000 fe8f 	bl	8004c20 <memchr>
 8003f02:	9a04      	ldr	r2, [sp, #16]
 8003f04:	b9d8      	cbnz	r0, 8003f3e <_svfiprintf_r+0xe6>
 8003f06:	06d0      	lsls	r0, r2, #27
 8003f08:	bf44      	itt	mi
 8003f0a:	2320      	movmi	r3, #32
 8003f0c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003f10:	0711      	lsls	r1, r2, #28
 8003f12:	bf44      	itt	mi
 8003f14:	232b      	movmi	r3, #43	; 0x2b
 8003f16:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003f1a:	f89a 3000 	ldrb.w	r3, [sl]
 8003f1e:	2b2a      	cmp	r3, #42	; 0x2a
 8003f20:	d015      	beq.n	8003f4e <_svfiprintf_r+0xf6>
 8003f22:	4654      	mov	r4, sl
 8003f24:	2000      	movs	r0, #0
 8003f26:	f04f 0c0a 	mov.w	ip, #10
 8003f2a:	9a07      	ldr	r2, [sp, #28]
 8003f2c:	4621      	mov	r1, r4
 8003f2e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003f32:	3b30      	subs	r3, #48	; 0x30
 8003f34:	2b09      	cmp	r3, #9
 8003f36:	d94e      	bls.n	8003fd6 <_svfiprintf_r+0x17e>
 8003f38:	b1b0      	cbz	r0, 8003f68 <_svfiprintf_r+0x110>
 8003f3a:	9207      	str	r2, [sp, #28]
 8003f3c:	e014      	b.n	8003f68 <_svfiprintf_r+0x110>
 8003f3e:	eba0 0308 	sub.w	r3, r0, r8
 8003f42:	fa09 f303 	lsl.w	r3, r9, r3
 8003f46:	4313      	orrs	r3, r2
 8003f48:	46a2      	mov	sl, r4
 8003f4a:	9304      	str	r3, [sp, #16]
 8003f4c:	e7d2      	b.n	8003ef4 <_svfiprintf_r+0x9c>
 8003f4e:	9b03      	ldr	r3, [sp, #12]
 8003f50:	1d19      	adds	r1, r3, #4
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	9103      	str	r1, [sp, #12]
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	bfbb      	ittet	lt
 8003f5a:	425b      	neglt	r3, r3
 8003f5c:	f042 0202 	orrlt.w	r2, r2, #2
 8003f60:	9307      	strge	r3, [sp, #28]
 8003f62:	9307      	strlt	r3, [sp, #28]
 8003f64:	bfb8      	it	lt
 8003f66:	9204      	strlt	r2, [sp, #16]
 8003f68:	7823      	ldrb	r3, [r4, #0]
 8003f6a:	2b2e      	cmp	r3, #46	; 0x2e
 8003f6c:	d10c      	bne.n	8003f88 <_svfiprintf_r+0x130>
 8003f6e:	7863      	ldrb	r3, [r4, #1]
 8003f70:	2b2a      	cmp	r3, #42	; 0x2a
 8003f72:	d135      	bne.n	8003fe0 <_svfiprintf_r+0x188>
 8003f74:	9b03      	ldr	r3, [sp, #12]
 8003f76:	3402      	adds	r4, #2
 8003f78:	1d1a      	adds	r2, r3, #4
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	9203      	str	r2, [sp, #12]
 8003f7e:	2b00      	cmp	r3, #0
 8003f80:	bfb8      	it	lt
 8003f82:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8003f86:	9305      	str	r3, [sp, #20]
 8003f88:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8004054 <_svfiprintf_r+0x1fc>
 8003f8c:	2203      	movs	r2, #3
 8003f8e:	4650      	mov	r0, sl
 8003f90:	7821      	ldrb	r1, [r4, #0]
 8003f92:	f000 fe45 	bl	8004c20 <memchr>
 8003f96:	b140      	cbz	r0, 8003faa <_svfiprintf_r+0x152>
 8003f98:	2340      	movs	r3, #64	; 0x40
 8003f9a:	eba0 000a 	sub.w	r0, r0, sl
 8003f9e:	fa03 f000 	lsl.w	r0, r3, r0
 8003fa2:	9b04      	ldr	r3, [sp, #16]
 8003fa4:	3401      	adds	r4, #1
 8003fa6:	4303      	orrs	r3, r0
 8003fa8:	9304      	str	r3, [sp, #16]
 8003faa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003fae:	2206      	movs	r2, #6
 8003fb0:	4825      	ldr	r0, [pc, #148]	; (8004048 <_svfiprintf_r+0x1f0>)
 8003fb2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003fb6:	f000 fe33 	bl	8004c20 <memchr>
 8003fba:	2800      	cmp	r0, #0
 8003fbc:	d038      	beq.n	8004030 <_svfiprintf_r+0x1d8>
 8003fbe:	4b23      	ldr	r3, [pc, #140]	; (800404c <_svfiprintf_r+0x1f4>)
 8003fc0:	bb1b      	cbnz	r3, 800400a <_svfiprintf_r+0x1b2>
 8003fc2:	9b03      	ldr	r3, [sp, #12]
 8003fc4:	3307      	adds	r3, #7
 8003fc6:	f023 0307 	bic.w	r3, r3, #7
 8003fca:	3308      	adds	r3, #8
 8003fcc:	9303      	str	r3, [sp, #12]
 8003fce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003fd0:	4433      	add	r3, r6
 8003fd2:	9309      	str	r3, [sp, #36]	; 0x24
 8003fd4:	e767      	b.n	8003ea6 <_svfiprintf_r+0x4e>
 8003fd6:	460c      	mov	r4, r1
 8003fd8:	2001      	movs	r0, #1
 8003fda:	fb0c 3202 	mla	r2, ip, r2, r3
 8003fde:	e7a5      	b.n	8003f2c <_svfiprintf_r+0xd4>
 8003fe0:	2300      	movs	r3, #0
 8003fe2:	f04f 0c0a 	mov.w	ip, #10
 8003fe6:	4619      	mov	r1, r3
 8003fe8:	3401      	adds	r4, #1
 8003fea:	9305      	str	r3, [sp, #20]
 8003fec:	4620      	mov	r0, r4
 8003fee:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003ff2:	3a30      	subs	r2, #48	; 0x30
 8003ff4:	2a09      	cmp	r2, #9
 8003ff6:	d903      	bls.n	8004000 <_svfiprintf_r+0x1a8>
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d0c5      	beq.n	8003f88 <_svfiprintf_r+0x130>
 8003ffc:	9105      	str	r1, [sp, #20]
 8003ffe:	e7c3      	b.n	8003f88 <_svfiprintf_r+0x130>
 8004000:	4604      	mov	r4, r0
 8004002:	2301      	movs	r3, #1
 8004004:	fb0c 2101 	mla	r1, ip, r1, r2
 8004008:	e7f0      	b.n	8003fec <_svfiprintf_r+0x194>
 800400a:	ab03      	add	r3, sp, #12
 800400c:	9300      	str	r3, [sp, #0]
 800400e:	462a      	mov	r2, r5
 8004010:	4638      	mov	r0, r7
 8004012:	4b0f      	ldr	r3, [pc, #60]	; (8004050 <_svfiprintf_r+0x1f8>)
 8004014:	a904      	add	r1, sp, #16
 8004016:	f3af 8000 	nop.w
 800401a:	1c42      	adds	r2, r0, #1
 800401c:	4606      	mov	r6, r0
 800401e:	d1d6      	bne.n	8003fce <_svfiprintf_r+0x176>
 8004020:	89ab      	ldrh	r3, [r5, #12]
 8004022:	065b      	lsls	r3, r3, #25
 8004024:	f53f af2c 	bmi.w	8003e80 <_svfiprintf_r+0x28>
 8004028:	9809      	ldr	r0, [sp, #36]	; 0x24
 800402a:	b01d      	add	sp, #116	; 0x74
 800402c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004030:	ab03      	add	r3, sp, #12
 8004032:	9300      	str	r3, [sp, #0]
 8004034:	462a      	mov	r2, r5
 8004036:	4638      	mov	r0, r7
 8004038:	4b05      	ldr	r3, [pc, #20]	; (8004050 <_svfiprintf_r+0x1f8>)
 800403a:	a904      	add	r1, sp, #16
 800403c:	f000 f9d4 	bl	80043e8 <_printf_i>
 8004040:	e7eb      	b.n	800401a <_svfiprintf_r+0x1c2>
 8004042:	bf00      	nop
 8004044:	0800503a 	.word	0x0800503a
 8004048:	08005044 	.word	0x08005044
 800404c:	00000000 	.word	0x00000000
 8004050:	08003da1 	.word	0x08003da1
 8004054:	08005040 	.word	0x08005040

08004058 <__sfputc_r>:
 8004058:	6893      	ldr	r3, [r2, #8]
 800405a:	b410      	push	{r4}
 800405c:	3b01      	subs	r3, #1
 800405e:	2b00      	cmp	r3, #0
 8004060:	6093      	str	r3, [r2, #8]
 8004062:	da07      	bge.n	8004074 <__sfputc_r+0x1c>
 8004064:	6994      	ldr	r4, [r2, #24]
 8004066:	42a3      	cmp	r3, r4
 8004068:	db01      	blt.n	800406e <__sfputc_r+0x16>
 800406a:	290a      	cmp	r1, #10
 800406c:	d102      	bne.n	8004074 <__sfputc_r+0x1c>
 800406e:	bc10      	pop	{r4}
 8004070:	f000 baf0 	b.w	8004654 <__swbuf_r>
 8004074:	6813      	ldr	r3, [r2, #0]
 8004076:	1c58      	adds	r0, r3, #1
 8004078:	6010      	str	r0, [r2, #0]
 800407a:	7019      	strb	r1, [r3, #0]
 800407c:	4608      	mov	r0, r1
 800407e:	bc10      	pop	{r4}
 8004080:	4770      	bx	lr

08004082 <__sfputs_r>:
 8004082:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004084:	4606      	mov	r6, r0
 8004086:	460f      	mov	r7, r1
 8004088:	4614      	mov	r4, r2
 800408a:	18d5      	adds	r5, r2, r3
 800408c:	42ac      	cmp	r4, r5
 800408e:	d101      	bne.n	8004094 <__sfputs_r+0x12>
 8004090:	2000      	movs	r0, #0
 8004092:	e007      	b.n	80040a4 <__sfputs_r+0x22>
 8004094:	463a      	mov	r2, r7
 8004096:	4630      	mov	r0, r6
 8004098:	f814 1b01 	ldrb.w	r1, [r4], #1
 800409c:	f7ff ffdc 	bl	8004058 <__sfputc_r>
 80040a0:	1c43      	adds	r3, r0, #1
 80040a2:	d1f3      	bne.n	800408c <__sfputs_r+0xa>
 80040a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080040a8 <_vfiprintf_r>:
 80040a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040ac:	460d      	mov	r5, r1
 80040ae:	4614      	mov	r4, r2
 80040b0:	4698      	mov	r8, r3
 80040b2:	4606      	mov	r6, r0
 80040b4:	b09d      	sub	sp, #116	; 0x74
 80040b6:	b118      	cbz	r0, 80040c0 <_vfiprintf_r+0x18>
 80040b8:	6983      	ldr	r3, [r0, #24]
 80040ba:	b90b      	cbnz	r3, 80040c0 <_vfiprintf_r+0x18>
 80040bc:	f000 fcac 	bl	8004a18 <__sinit>
 80040c0:	4b89      	ldr	r3, [pc, #548]	; (80042e8 <_vfiprintf_r+0x240>)
 80040c2:	429d      	cmp	r5, r3
 80040c4:	d11b      	bne.n	80040fe <_vfiprintf_r+0x56>
 80040c6:	6875      	ldr	r5, [r6, #4]
 80040c8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80040ca:	07d9      	lsls	r1, r3, #31
 80040cc:	d405      	bmi.n	80040da <_vfiprintf_r+0x32>
 80040ce:	89ab      	ldrh	r3, [r5, #12]
 80040d0:	059a      	lsls	r2, r3, #22
 80040d2:	d402      	bmi.n	80040da <_vfiprintf_r+0x32>
 80040d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80040d6:	f000 fd3d 	bl	8004b54 <__retarget_lock_acquire_recursive>
 80040da:	89ab      	ldrh	r3, [r5, #12]
 80040dc:	071b      	lsls	r3, r3, #28
 80040de:	d501      	bpl.n	80040e4 <_vfiprintf_r+0x3c>
 80040e0:	692b      	ldr	r3, [r5, #16]
 80040e2:	b9eb      	cbnz	r3, 8004120 <_vfiprintf_r+0x78>
 80040e4:	4629      	mov	r1, r5
 80040e6:	4630      	mov	r0, r6
 80040e8:	f000 fb06 	bl	80046f8 <__swsetup_r>
 80040ec:	b1c0      	cbz	r0, 8004120 <_vfiprintf_r+0x78>
 80040ee:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80040f0:	07dc      	lsls	r4, r3, #31
 80040f2:	d50e      	bpl.n	8004112 <_vfiprintf_r+0x6a>
 80040f4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80040f8:	b01d      	add	sp, #116	; 0x74
 80040fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80040fe:	4b7b      	ldr	r3, [pc, #492]	; (80042ec <_vfiprintf_r+0x244>)
 8004100:	429d      	cmp	r5, r3
 8004102:	d101      	bne.n	8004108 <_vfiprintf_r+0x60>
 8004104:	68b5      	ldr	r5, [r6, #8]
 8004106:	e7df      	b.n	80040c8 <_vfiprintf_r+0x20>
 8004108:	4b79      	ldr	r3, [pc, #484]	; (80042f0 <_vfiprintf_r+0x248>)
 800410a:	429d      	cmp	r5, r3
 800410c:	bf08      	it	eq
 800410e:	68f5      	ldreq	r5, [r6, #12]
 8004110:	e7da      	b.n	80040c8 <_vfiprintf_r+0x20>
 8004112:	89ab      	ldrh	r3, [r5, #12]
 8004114:	0598      	lsls	r0, r3, #22
 8004116:	d4ed      	bmi.n	80040f4 <_vfiprintf_r+0x4c>
 8004118:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800411a:	f000 fd1c 	bl	8004b56 <__retarget_lock_release_recursive>
 800411e:	e7e9      	b.n	80040f4 <_vfiprintf_r+0x4c>
 8004120:	2300      	movs	r3, #0
 8004122:	9309      	str	r3, [sp, #36]	; 0x24
 8004124:	2320      	movs	r3, #32
 8004126:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800412a:	2330      	movs	r3, #48	; 0x30
 800412c:	f04f 0901 	mov.w	r9, #1
 8004130:	f8cd 800c 	str.w	r8, [sp, #12]
 8004134:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 80042f4 <_vfiprintf_r+0x24c>
 8004138:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800413c:	4623      	mov	r3, r4
 800413e:	469a      	mov	sl, r3
 8004140:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004144:	b10a      	cbz	r2, 800414a <_vfiprintf_r+0xa2>
 8004146:	2a25      	cmp	r2, #37	; 0x25
 8004148:	d1f9      	bne.n	800413e <_vfiprintf_r+0x96>
 800414a:	ebba 0b04 	subs.w	fp, sl, r4
 800414e:	d00b      	beq.n	8004168 <_vfiprintf_r+0xc0>
 8004150:	465b      	mov	r3, fp
 8004152:	4622      	mov	r2, r4
 8004154:	4629      	mov	r1, r5
 8004156:	4630      	mov	r0, r6
 8004158:	f7ff ff93 	bl	8004082 <__sfputs_r>
 800415c:	3001      	adds	r0, #1
 800415e:	f000 80aa 	beq.w	80042b6 <_vfiprintf_r+0x20e>
 8004162:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004164:	445a      	add	r2, fp
 8004166:	9209      	str	r2, [sp, #36]	; 0x24
 8004168:	f89a 3000 	ldrb.w	r3, [sl]
 800416c:	2b00      	cmp	r3, #0
 800416e:	f000 80a2 	beq.w	80042b6 <_vfiprintf_r+0x20e>
 8004172:	2300      	movs	r3, #0
 8004174:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004178:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800417c:	f10a 0a01 	add.w	sl, sl, #1
 8004180:	9304      	str	r3, [sp, #16]
 8004182:	9307      	str	r3, [sp, #28]
 8004184:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004188:	931a      	str	r3, [sp, #104]	; 0x68
 800418a:	4654      	mov	r4, sl
 800418c:	2205      	movs	r2, #5
 800418e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004192:	4858      	ldr	r0, [pc, #352]	; (80042f4 <_vfiprintf_r+0x24c>)
 8004194:	f000 fd44 	bl	8004c20 <memchr>
 8004198:	9a04      	ldr	r2, [sp, #16]
 800419a:	b9d8      	cbnz	r0, 80041d4 <_vfiprintf_r+0x12c>
 800419c:	06d1      	lsls	r1, r2, #27
 800419e:	bf44      	itt	mi
 80041a0:	2320      	movmi	r3, #32
 80041a2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80041a6:	0713      	lsls	r3, r2, #28
 80041a8:	bf44      	itt	mi
 80041aa:	232b      	movmi	r3, #43	; 0x2b
 80041ac:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80041b0:	f89a 3000 	ldrb.w	r3, [sl]
 80041b4:	2b2a      	cmp	r3, #42	; 0x2a
 80041b6:	d015      	beq.n	80041e4 <_vfiprintf_r+0x13c>
 80041b8:	4654      	mov	r4, sl
 80041ba:	2000      	movs	r0, #0
 80041bc:	f04f 0c0a 	mov.w	ip, #10
 80041c0:	9a07      	ldr	r2, [sp, #28]
 80041c2:	4621      	mov	r1, r4
 80041c4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80041c8:	3b30      	subs	r3, #48	; 0x30
 80041ca:	2b09      	cmp	r3, #9
 80041cc:	d94e      	bls.n	800426c <_vfiprintf_r+0x1c4>
 80041ce:	b1b0      	cbz	r0, 80041fe <_vfiprintf_r+0x156>
 80041d0:	9207      	str	r2, [sp, #28]
 80041d2:	e014      	b.n	80041fe <_vfiprintf_r+0x156>
 80041d4:	eba0 0308 	sub.w	r3, r0, r8
 80041d8:	fa09 f303 	lsl.w	r3, r9, r3
 80041dc:	4313      	orrs	r3, r2
 80041de:	46a2      	mov	sl, r4
 80041e0:	9304      	str	r3, [sp, #16]
 80041e2:	e7d2      	b.n	800418a <_vfiprintf_r+0xe2>
 80041e4:	9b03      	ldr	r3, [sp, #12]
 80041e6:	1d19      	adds	r1, r3, #4
 80041e8:	681b      	ldr	r3, [r3, #0]
 80041ea:	9103      	str	r1, [sp, #12]
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	bfbb      	ittet	lt
 80041f0:	425b      	neglt	r3, r3
 80041f2:	f042 0202 	orrlt.w	r2, r2, #2
 80041f6:	9307      	strge	r3, [sp, #28]
 80041f8:	9307      	strlt	r3, [sp, #28]
 80041fa:	bfb8      	it	lt
 80041fc:	9204      	strlt	r2, [sp, #16]
 80041fe:	7823      	ldrb	r3, [r4, #0]
 8004200:	2b2e      	cmp	r3, #46	; 0x2e
 8004202:	d10c      	bne.n	800421e <_vfiprintf_r+0x176>
 8004204:	7863      	ldrb	r3, [r4, #1]
 8004206:	2b2a      	cmp	r3, #42	; 0x2a
 8004208:	d135      	bne.n	8004276 <_vfiprintf_r+0x1ce>
 800420a:	9b03      	ldr	r3, [sp, #12]
 800420c:	3402      	adds	r4, #2
 800420e:	1d1a      	adds	r2, r3, #4
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	9203      	str	r2, [sp, #12]
 8004214:	2b00      	cmp	r3, #0
 8004216:	bfb8      	it	lt
 8004218:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800421c:	9305      	str	r3, [sp, #20]
 800421e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8004304 <_vfiprintf_r+0x25c>
 8004222:	2203      	movs	r2, #3
 8004224:	4650      	mov	r0, sl
 8004226:	7821      	ldrb	r1, [r4, #0]
 8004228:	f000 fcfa 	bl	8004c20 <memchr>
 800422c:	b140      	cbz	r0, 8004240 <_vfiprintf_r+0x198>
 800422e:	2340      	movs	r3, #64	; 0x40
 8004230:	eba0 000a 	sub.w	r0, r0, sl
 8004234:	fa03 f000 	lsl.w	r0, r3, r0
 8004238:	9b04      	ldr	r3, [sp, #16]
 800423a:	3401      	adds	r4, #1
 800423c:	4303      	orrs	r3, r0
 800423e:	9304      	str	r3, [sp, #16]
 8004240:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004244:	2206      	movs	r2, #6
 8004246:	482c      	ldr	r0, [pc, #176]	; (80042f8 <_vfiprintf_r+0x250>)
 8004248:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800424c:	f000 fce8 	bl	8004c20 <memchr>
 8004250:	2800      	cmp	r0, #0
 8004252:	d03f      	beq.n	80042d4 <_vfiprintf_r+0x22c>
 8004254:	4b29      	ldr	r3, [pc, #164]	; (80042fc <_vfiprintf_r+0x254>)
 8004256:	bb1b      	cbnz	r3, 80042a0 <_vfiprintf_r+0x1f8>
 8004258:	9b03      	ldr	r3, [sp, #12]
 800425a:	3307      	adds	r3, #7
 800425c:	f023 0307 	bic.w	r3, r3, #7
 8004260:	3308      	adds	r3, #8
 8004262:	9303      	str	r3, [sp, #12]
 8004264:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004266:	443b      	add	r3, r7
 8004268:	9309      	str	r3, [sp, #36]	; 0x24
 800426a:	e767      	b.n	800413c <_vfiprintf_r+0x94>
 800426c:	460c      	mov	r4, r1
 800426e:	2001      	movs	r0, #1
 8004270:	fb0c 3202 	mla	r2, ip, r2, r3
 8004274:	e7a5      	b.n	80041c2 <_vfiprintf_r+0x11a>
 8004276:	2300      	movs	r3, #0
 8004278:	f04f 0c0a 	mov.w	ip, #10
 800427c:	4619      	mov	r1, r3
 800427e:	3401      	adds	r4, #1
 8004280:	9305      	str	r3, [sp, #20]
 8004282:	4620      	mov	r0, r4
 8004284:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004288:	3a30      	subs	r2, #48	; 0x30
 800428a:	2a09      	cmp	r2, #9
 800428c:	d903      	bls.n	8004296 <_vfiprintf_r+0x1ee>
 800428e:	2b00      	cmp	r3, #0
 8004290:	d0c5      	beq.n	800421e <_vfiprintf_r+0x176>
 8004292:	9105      	str	r1, [sp, #20]
 8004294:	e7c3      	b.n	800421e <_vfiprintf_r+0x176>
 8004296:	4604      	mov	r4, r0
 8004298:	2301      	movs	r3, #1
 800429a:	fb0c 2101 	mla	r1, ip, r1, r2
 800429e:	e7f0      	b.n	8004282 <_vfiprintf_r+0x1da>
 80042a0:	ab03      	add	r3, sp, #12
 80042a2:	9300      	str	r3, [sp, #0]
 80042a4:	462a      	mov	r2, r5
 80042a6:	4630      	mov	r0, r6
 80042a8:	4b15      	ldr	r3, [pc, #84]	; (8004300 <_vfiprintf_r+0x258>)
 80042aa:	a904      	add	r1, sp, #16
 80042ac:	f3af 8000 	nop.w
 80042b0:	4607      	mov	r7, r0
 80042b2:	1c78      	adds	r0, r7, #1
 80042b4:	d1d6      	bne.n	8004264 <_vfiprintf_r+0x1bc>
 80042b6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80042b8:	07d9      	lsls	r1, r3, #31
 80042ba:	d405      	bmi.n	80042c8 <_vfiprintf_r+0x220>
 80042bc:	89ab      	ldrh	r3, [r5, #12]
 80042be:	059a      	lsls	r2, r3, #22
 80042c0:	d402      	bmi.n	80042c8 <_vfiprintf_r+0x220>
 80042c2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80042c4:	f000 fc47 	bl	8004b56 <__retarget_lock_release_recursive>
 80042c8:	89ab      	ldrh	r3, [r5, #12]
 80042ca:	065b      	lsls	r3, r3, #25
 80042cc:	f53f af12 	bmi.w	80040f4 <_vfiprintf_r+0x4c>
 80042d0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80042d2:	e711      	b.n	80040f8 <_vfiprintf_r+0x50>
 80042d4:	ab03      	add	r3, sp, #12
 80042d6:	9300      	str	r3, [sp, #0]
 80042d8:	462a      	mov	r2, r5
 80042da:	4630      	mov	r0, r6
 80042dc:	4b08      	ldr	r3, [pc, #32]	; (8004300 <_vfiprintf_r+0x258>)
 80042de:	a904      	add	r1, sp, #16
 80042e0:	f000 f882 	bl	80043e8 <_printf_i>
 80042e4:	e7e4      	b.n	80042b0 <_vfiprintf_r+0x208>
 80042e6:	bf00      	nop
 80042e8:	08005090 	.word	0x08005090
 80042ec:	080050b0 	.word	0x080050b0
 80042f0:	08005070 	.word	0x08005070
 80042f4:	0800503a 	.word	0x0800503a
 80042f8:	08005044 	.word	0x08005044
 80042fc:	00000000 	.word	0x00000000
 8004300:	08004083 	.word	0x08004083
 8004304:	08005040 	.word	0x08005040

08004308 <_printf_common>:
 8004308:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800430c:	4616      	mov	r6, r2
 800430e:	4699      	mov	r9, r3
 8004310:	688a      	ldr	r2, [r1, #8]
 8004312:	690b      	ldr	r3, [r1, #16]
 8004314:	4607      	mov	r7, r0
 8004316:	4293      	cmp	r3, r2
 8004318:	bfb8      	it	lt
 800431a:	4613      	movlt	r3, r2
 800431c:	6033      	str	r3, [r6, #0]
 800431e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004322:	460c      	mov	r4, r1
 8004324:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004328:	b10a      	cbz	r2, 800432e <_printf_common+0x26>
 800432a:	3301      	adds	r3, #1
 800432c:	6033      	str	r3, [r6, #0]
 800432e:	6823      	ldr	r3, [r4, #0]
 8004330:	0699      	lsls	r1, r3, #26
 8004332:	bf42      	ittt	mi
 8004334:	6833      	ldrmi	r3, [r6, #0]
 8004336:	3302      	addmi	r3, #2
 8004338:	6033      	strmi	r3, [r6, #0]
 800433a:	6825      	ldr	r5, [r4, #0]
 800433c:	f015 0506 	ands.w	r5, r5, #6
 8004340:	d106      	bne.n	8004350 <_printf_common+0x48>
 8004342:	f104 0a19 	add.w	sl, r4, #25
 8004346:	68e3      	ldr	r3, [r4, #12]
 8004348:	6832      	ldr	r2, [r6, #0]
 800434a:	1a9b      	subs	r3, r3, r2
 800434c:	42ab      	cmp	r3, r5
 800434e:	dc28      	bgt.n	80043a2 <_printf_common+0x9a>
 8004350:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004354:	1e13      	subs	r3, r2, #0
 8004356:	6822      	ldr	r2, [r4, #0]
 8004358:	bf18      	it	ne
 800435a:	2301      	movne	r3, #1
 800435c:	0692      	lsls	r2, r2, #26
 800435e:	d42d      	bmi.n	80043bc <_printf_common+0xb4>
 8004360:	4649      	mov	r1, r9
 8004362:	4638      	mov	r0, r7
 8004364:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004368:	47c0      	blx	r8
 800436a:	3001      	adds	r0, #1
 800436c:	d020      	beq.n	80043b0 <_printf_common+0xa8>
 800436e:	6823      	ldr	r3, [r4, #0]
 8004370:	68e5      	ldr	r5, [r4, #12]
 8004372:	f003 0306 	and.w	r3, r3, #6
 8004376:	2b04      	cmp	r3, #4
 8004378:	bf18      	it	ne
 800437a:	2500      	movne	r5, #0
 800437c:	6832      	ldr	r2, [r6, #0]
 800437e:	f04f 0600 	mov.w	r6, #0
 8004382:	68a3      	ldr	r3, [r4, #8]
 8004384:	bf08      	it	eq
 8004386:	1aad      	subeq	r5, r5, r2
 8004388:	6922      	ldr	r2, [r4, #16]
 800438a:	bf08      	it	eq
 800438c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004390:	4293      	cmp	r3, r2
 8004392:	bfc4      	itt	gt
 8004394:	1a9b      	subgt	r3, r3, r2
 8004396:	18ed      	addgt	r5, r5, r3
 8004398:	341a      	adds	r4, #26
 800439a:	42b5      	cmp	r5, r6
 800439c:	d11a      	bne.n	80043d4 <_printf_common+0xcc>
 800439e:	2000      	movs	r0, #0
 80043a0:	e008      	b.n	80043b4 <_printf_common+0xac>
 80043a2:	2301      	movs	r3, #1
 80043a4:	4652      	mov	r2, sl
 80043a6:	4649      	mov	r1, r9
 80043a8:	4638      	mov	r0, r7
 80043aa:	47c0      	blx	r8
 80043ac:	3001      	adds	r0, #1
 80043ae:	d103      	bne.n	80043b8 <_printf_common+0xb0>
 80043b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80043b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80043b8:	3501      	adds	r5, #1
 80043ba:	e7c4      	b.n	8004346 <_printf_common+0x3e>
 80043bc:	2030      	movs	r0, #48	; 0x30
 80043be:	18e1      	adds	r1, r4, r3
 80043c0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80043c4:	1c5a      	adds	r2, r3, #1
 80043c6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80043ca:	4422      	add	r2, r4
 80043cc:	3302      	adds	r3, #2
 80043ce:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80043d2:	e7c5      	b.n	8004360 <_printf_common+0x58>
 80043d4:	2301      	movs	r3, #1
 80043d6:	4622      	mov	r2, r4
 80043d8:	4649      	mov	r1, r9
 80043da:	4638      	mov	r0, r7
 80043dc:	47c0      	blx	r8
 80043de:	3001      	adds	r0, #1
 80043e0:	d0e6      	beq.n	80043b0 <_printf_common+0xa8>
 80043e2:	3601      	adds	r6, #1
 80043e4:	e7d9      	b.n	800439a <_printf_common+0x92>
	...

080043e8 <_printf_i>:
 80043e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80043ec:	460c      	mov	r4, r1
 80043ee:	7e27      	ldrb	r7, [r4, #24]
 80043f0:	4691      	mov	r9, r2
 80043f2:	2f78      	cmp	r7, #120	; 0x78
 80043f4:	4680      	mov	r8, r0
 80043f6:	469a      	mov	sl, r3
 80043f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80043fa:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80043fe:	d807      	bhi.n	8004410 <_printf_i+0x28>
 8004400:	2f62      	cmp	r7, #98	; 0x62
 8004402:	d80a      	bhi.n	800441a <_printf_i+0x32>
 8004404:	2f00      	cmp	r7, #0
 8004406:	f000 80d9 	beq.w	80045bc <_printf_i+0x1d4>
 800440a:	2f58      	cmp	r7, #88	; 0x58
 800440c:	f000 80a4 	beq.w	8004558 <_printf_i+0x170>
 8004410:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004414:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004418:	e03a      	b.n	8004490 <_printf_i+0xa8>
 800441a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800441e:	2b15      	cmp	r3, #21
 8004420:	d8f6      	bhi.n	8004410 <_printf_i+0x28>
 8004422:	a001      	add	r0, pc, #4	; (adr r0, 8004428 <_printf_i+0x40>)
 8004424:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8004428:	08004481 	.word	0x08004481
 800442c:	08004495 	.word	0x08004495
 8004430:	08004411 	.word	0x08004411
 8004434:	08004411 	.word	0x08004411
 8004438:	08004411 	.word	0x08004411
 800443c:	08004411 	.word	0x08004411
 8004440:	08004495 	.word	0x08004495
 8004444:	08004411 	.word	0x08004411
 8004448:	08004411 	.word	0x08004411
 800444c:	08004411 	.word	0x08004411
 8004450:	08004411 	.word	0x08004411
 8004454:	080045a3 	.word	0x080045a3
 8004458:	080044c5 	.word	0x080044c5
 800445c:	08004585 	.word	0x08004585
 8004460:	08004411 	.word	0x08004411
 8004464:	08004411 	.word	0x08004411
 8004468:	080045c5 	.word	0x080045c5
 800446c:	08004411 	.word	0x08004411
 8004470:	080044c5 	.word	0x080044c5
 8004474:	08004411 	.word	0x08004411
 8004478:	08004411 	.word	0x08004411
 800447c:	0800458d 	.word	0x0800458d
 8004480:	680b      	ldr	r3, [r1, #0]
 8004482:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004486:	1d1a      	adds	r2, r3, #4
 8004488:	681b      	ldr	r3, [r3, #0]
 800448a:	600a      	str	r2, [r1, #0]
 800448c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004490:	2301      	movs	r3, #1
 8004492:	e0a4      	b.n	80045de <_printf_i+0x1f6>
 8004494:	6825      	ldr	r5, [r4, #0]
 8004496:	6808      	ldr	r0, [r1, #0]
 8004498:	062e      	lsls	r6, r5, #24
 800449a:	f100 0304 	add.w	r3, r0, #4
 800449e:	d50a      	bpl.n	80044b6 <_printf_i+0xce>
 80044a0:	6805      	ldr	r5, [r0, #0]
 80044a2:	600b      	str	r3, [r1, #0]
 80044a4:	2d00      	cmp	r5, #0
 80044a6:	da03      	bge.n	80044b0 <_printf_i+0xc8>
 80044a8:	232d      	movs	r3, #45	; 0x2d
 80044aa:	426d      	negs	r5, r5
 80044ac:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80044b0:	230a      	movs	r3, #10
 80044b2:	485e      	ldr	r0, [pc, #376]	; (800462c <_printf_i+0x244>)
 80044b4:	e019      	b.n	80044ea <_printf_i+0x102>
 80044b6:	f015 0f40 	tst.w	r5, #64	; 0x40
 80044ba:	6805      	ldr	r5, [r0, #0]
 80044bc:	600b      	str	r3, [r1, #0]
 80044be:	bf18      	it	ne
 80044c0:	b22d      	sxthne	r5, r5
 80044c2:	e7ef      	b.n	80044a4 <_printf_i+0xbc>
 80044c4:	680b      	ldr	r3, [r1, #0]
 80044c6:	6825      	ldr	r5, [r4, #0]
 80044c8:	1d18      	adds	r0, r3, #4
 80044ca:	6008      	str	r0, [r1, #0]
 80044cc:	0628      	lsls	r0, r5, #24
 80044ce:	d501      	bpl.n	80044d4 <_printf_i+0xec>
 80044d0:	681d      	ldr	r5, [r3, #0]
 80044d2:	e002      	b.n	80044da <_printf_i+0xf2>
 80044d4:	0669      	lsls	r1, r5, #25
 80044d6:	d5fb      	bpl.n	80044d0 <_printf_i+0xe8>
 80044d8:	881d      	ldrh	r5, [r3, #0]
 80044da:	2f6f      	cmp	r7, #111	; 0x6f
 80044dc:	bf0c      	ite	eq
 80044de:	2308      	moveq	r3, #8
 80044e0:	230a      	movne	r3, #10
 80044e2:	4852      	ldr	r0, [pc, #328]	; (800462c <_printf_i+0x244>)
 80044e4:	2100      	movs	r1, #0
 80044e6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80044ea:	6866      	ldr	r6, [r4, #4]
 80044ec:	2e00      	cmp	r6, #0
 80044ee:	bfa8      	it	ge
 80044f0:	6821      	ldrge	r1, [r4, #0]
 80044f2:	60a6      	str	r6, [r4, #8]
 80044f4:	bfa4      	itt	ge
 80044f6:	f021 0104 	bicge.w	r1, r1, #4
 80044fa:	6021      	strge	r1, [r4, #0]
 80044fc:	b90d      	cbnz	r5, 8004502 <_printf_i+0x11a>
 80044fe:	2e00      	cmp	r6, #0
 8004500:	d04d      	beq.n	800459e <_printf_i+0x1b6>
 8004502:	4616      	mov	r6, r2
 8004504:	fbb5 f1f3 	udiv	r1, r5, r3
 8004508:	fb03 5711 	mls	r7, r3, r1, r5
 800450c:	5dc7      	ldrb	r7, [r0, r7]
 800450e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004512:	462f      	mov	r7, r5
 8004514:	42bb      	cmp	r3, r7
 8004516:	460d      	mov	r5, r1
 8004518:	d9f4      	bls.n	8004504 <_printf_i+0x11c>
 800451a:	2b08      	cmp	r3, #8
 800451c:	d10b      	bne.n	8004536 <_printf_i+0x14e>
 800451e:	6823      	ldr	r3, [r4, #0]
 8004520:	07df      	lsls	r7, r3, #31
 8004522:	d508      	bpl.n	8004536 <_printf_i+0x14e>
 8004524:	6923      	ldr	r3, [r4, #16]
 8004526:	6861      	ldr	r1, [r4, #4]
 8004528:	4299      	cmp	r1, r3
 800452a:	bfde      	ittt	le
 800452c:	2330      	movle	r3, #48	; 0x30
 800452e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004532:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8004536:	1b92      	subs	r2, r2, r6
 8004538:	6122      	str	r2, [r4, #16]
 800453a:	464b      	mov	r3, r9
 800453c:	4621      	mov	r1, r4
 800453e:	4640      	mov	r0, r8
 8004540:	f8cd a000 	str.w	sl, [sp]
 8004544:	aa03      	add	r2, sp, #12
 8004546:	f7ff fedf 	bl	8004308 <_printf_common>
 800454a:	3001      	adds	r0, #1
 800454c:	d14c      	bne.n	80045e8 <_printf_i+0x200>
 800454e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004552:	b004      	add	sp, #16
 8004554:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004558:	4834      	ldr	r0, [pc, #208]	; (800462c <_printf_i+0x244>)
 800455a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800455e:	680e      	ldr	r6, [r1, #0]
 8004560:	6823      	ldr	r3, [r4, #0]
 8004562:	f856 5b04 	ldr.w	r5, [r6], #4
 8004566:	061f      	lsls	r7, r3, #24
 8004568:	600e      	str	r6, [r1, #0]
 800456a:	d514      	bpl.n	8004596 <_printf_i+0x1ae>
 800456c:	07d9      	lsls	r1, r3, #31
 800456e:	bf44      	itt	mi
 8004570:	f043 0320 	orrmi.w	r3, r3, #32
 8004574:	6023      	strmi	r3, [r4, #0]
 8004576:	b91d      	cbnz	r5, 8004580 <_printf_i+0x198>
 8004578:	6823      	ldr	r3, [r4, #0]
 800457a:	f023 0320 	bic.w	r3, r3, #32
 800457e:	6023      	str	r3, [r4, #0]
 8004580:	2310      	movs	r3, #16
 8004582:	e7af      	b.n	80044e4 <_printf_i+0xfc>
 8004584:	6823      	ldr	r3, [r4, #0]
 8004586:	f043 0320 	orr.w	r3, r3, #32
 800458a:	6023      	str	r3, [r4, #0]
 800458c:	2378      	movs	r3, #120	; 0x78
 800458e:	4828      	ldr	r0, [pc, #160]	; (8004630 <_printf_i+0x248>)
 8004590:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004594:	e7e3      	b.n	800455e <_printf_i+0x176>
 8004596:	065e      	lsls	r6, r3, #25
 8004598:	bf48      	it	mi
 800459a:	b2ad      	uxthmi	r5, r5
 800459c:	e7e6      	b.n	800456c <_printf_i+0x184>
 800459e:	4616      	mov	r6, r2
 80045a0:	e7bb      	b.n	800451a <_printf_i+0x132>
 80045a2:	680b      	ldr	r3, [r1, #0]
 80045a4:	6826      	ldr	r6, [r4, #0]
 80045a6:	1d1d      	adds	r5, r3, #4
 80045a8:	6960      	ldr	r0, [r4, #20]
 80045aa:	600d      	str	r5, [r1, #0]
 80045ac:	0635      	lsls	r5, r6, #24
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	d501      	bpl.n	80045b6 <_printf_i+0x1ce>
 80045b2:	6018      	str	r0, [r3, #0]
 80045b4:	e002      	b.n	80045bc <_printf_i+0x1d4>
 80045b6:	0671      	lsls	r1, r6, #25
 80045b8:	d5fb      	bpl.n	80045b2 <_printf_i+0x1ca>
 80045ba:	8018      	strh	r0, [r3, #0]
 80045bc:	2300      	movs	r3, #0
 80045be:	4616      	mov	r6, r2
 80045c0:	6123      	str	r3, [r4, #16]
 80045c2:	e7ba      	b.n	800453a <_printf_i+0x152>
 80045c4:	680b      	ldr	r3, [r1, #0]
 80045c6:	1d1a      	adds	r2, r3, #4
 80045c8:	600a      	str	r2, [r1, #0]
 80045ca:	681e      	ldr	r6, [r3, #0]
 80045cc:	2100      	movs	r1, #0
 80045ce:	4630      	mov	r0, r6
 80045d0:	6862      	ldr	r2, [r4, #4]
 80045d2:	f000 fb25 	bl	8004c20 <memchr>
 80045d6:	b108      	cbz	r0, 80045dc <_printf_i+0x1f4>
 80045d8:	1b80      	subs	r0, r0, r6
 80045da:	6060      	str	r0, [r4, #4]
 80045dc:	6863      	ldr	r3, [r4, #4]
 80045de:	6123      	str	r3, [r4, #16]
 80045e0:	2300      	movs	r3, #0
 80045e2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80045e6:	e7a8      	b.n	800453a <_printf_i+0x152>
 80045e8:	4632      	mov	r2, r6
 80045ea:	4649      	mov	r1, r9
 80045ec:	4640      	mov	r0, r8
 80045ee:	6923      	ldr	r3, [r4, #16]
 80045f0:	47d0      	blx	sl
 80045f2:	3001      	adds	r0, #1
 80045f4:	d0ab      	beq.n	800454e <_printf_i+0x166>
 80045f6:	6823      	ldr	r3, [r4, #0]
 80045f8:	079b      	lsls	r3, r3, #30
 80045fa:	d413      	bmi.n	8004624 <_printf_i+0x23c>
 80045fc:	68e0      	ldr	r0, [r4, #12]
 80045fe:	9b03      	ldr	r3, [sp, #12]
 8004600:	4298      	cmp	r0, r3
 8004602:	bfb8      	it	lt
 8004604:	4618      	movlt	r0, r3
 8004606:	e7a4      	b.n	8004552 <_printf_i+0x16a>
 8004608:	2301      	movs	r3, #1
 800460a:	4632      	mov	r2, r6
 800460c:	4649      	mov	r1, r9
 800460e:	4640      	mov	r0, r8
 8004610:	47d0      	blx	sl
 8004612:	3001      	adds	r0, #1
 8004614:	d09b      	beq.n	800454e <_printf_i+0x166>
 8004616:	3501      	adds	r5, #1
 8004618:	68e3      	ldr	r3, [r4, #12]
 800461a:	9903      	ldr	r1, [sp, #12]
 800461c:	1a5b      	subs	r3, r3, r1
 800461e:	42ab      	cmp	r3, r5
 8004620:	dcf2      	bgt.n	8004608 <_printf_i+0x220>
 8004622:	e7eb      	b.n	80045fc <_printf_i+0x214>
 8004624:	2500      	movs	r5, #0
 8004626:	f104 0619 	add.w	r6, r4, #25
 800462a:	e7f5      	b.n	8004618 <_printf_i+0x230>
 800462c:	0800504b 	.word	0x0800504b
 8004630:	0800505c 	.word	0x0800505c

08004634 <_sbrk_r>:
 8004634:	b538      	push	{r3, r4, r5, lr}
 8004636:	2300      	movs	r3, #0
 8004638:	4d05      	ldr	r5, [pc, #20]	; (8004650 <_sbrk_r+0x1c>)
 800463a:	4604      	mov	r4, r0
 800463c:	4608      	mov	r0, r1
 800463e:	602b      	str	r3, [r5, #0]
 8004640:	f7fc fbdc 	bl	8000dfc <_sbrk>
 8004644:	1c43      	adds	r3, r0, #1
 8004646:	d102      	bne.n	800464e <_sbrk_r+0x1a>
 8004648:	682b      	ldr	r3, [r5, #0]
 800464a:	b103      	cbz	r3, 800464e <_sbrk_r+0x1a>
 800464c:	6023      	str	r3, [r4, #0]
 800464e:	bd38      	pop	{r3, r4, r5, pc}
 8004650:	20001310 	.word	0x20001310

08004654 <__swbuf_r>:
 8004654:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004656:	460e      	mov	r6, r1
 8004658:	4614      	mov	r4, r2
 800465a:	4605      	mov	r5, r0
 800465c:	b118      	cbz	r0, 8004666 <__swbuf_r+0x12>
 800465e:	6983      	ldr	r3, [r0, #24]
 8004660:	b90b      	cbnz	r3, 8004666 <__swbuf_r+0x12>
 8004662:	f000 f9d9 	bl	8004a18 <__sinit>
 8004666:	4b21      	ldr	r3, [pc, #132]	; (80046ec <__swbuf_r+0x98>)
 8004668:	429c      	cmp	r4, r3
 800466a:	d12b      	bne.n	80046c4 <__swbuf_r+0x70>
 800466c:	686c      	ldr	r4, [r5, #4]
 800466e:	69a3      	ldr	r3, [r4, #24]
 8004670:	60a3      	str	r3, [r4, #8]
 8004672:	89a3      	ldrh	r3, [r4, #12]
 8004674:	071a      	lsls	r2, r3, #28
 8004676:	d52f      	bpl.n	80046d8 <__swbuf_r+0x84>
 8004678:	6923      	ldr	r3, [r4, #16]
 800467a:	b36b      	cbz	r3, 80046d8 <__swbuf_r+0x84>
 800467c:	6923      	ldr	r3, [r4, #16]
 800467e:	6820      	ldr	r0, [r4, #0]
 8004680:	b2f6      	uxtb	r6, r6
 8004682:	1ac0      	subs	r0, r0, r3
 8004684:	6963      	ldr	r3, [r4, #20]
 8004686:	4637      	mov	r7, r6
 8004688:	4283      	cmp	r3, r0
 800468a:	dc04      	bgt.n	8004696 <__swbuf_r+0x42>
 800468c:	4621      	mov	r1, r4
 800468e:	4628      	mov	r0, r5
 8004690:	f000 f92e 	bl	80048f0 <_fflush_r>
 8004694:	bb30      	cbnz	r0, 80046e4 <__swbuf_r+0x90>
 8004696:	68a3      	ldr	r3, [r4, #8]
 8004698:	3001      	adds	r0, #1
 800469a:	3b01      	subs	r3, #1
 800469c:	60a3      	str	r3, [r4, #8]
 800469e:	6823      	ldr	r3, [r4, #0]
 80046a0:	1c5a      	adds	r2, r3, #1
 80046a2:	6022      	str	r2, [r4, #0]
 80046a4:	701e      	strb	r6, [r3, #0]
 80046a6:	6963      	ldr	r3, [r4, #20]
 80046a8:	4283      	cmp	r3, r0
 80046aa:	d004      	beq.n	80046b6 <__swbuf_r+0x62>
 80046ac:	89a3      	ldrh	r3, [r4, #12]
 80046ae:	07db      	lsls	r3, r3, #31
 80046b0:	d506      	bpl.n	80046c0 <__swbuf_r+0x6c>
 80046b2:	2e0a      	cmp	r6, #10
 80046b4:	d104      	bne.n	80046c0 <__swbuf_r+0x6c>
 80046b6:	4621      	mov	r1, r4
 80046b8:	4628      	mov	r0, r5
 80046ba:	f000 f919 	bl	80048f0 <_fflush_r>
 80046be:	b988      	cbnz	r0, 80046e4 <__swbuf_r+0x90>
 80046c0:	4638      	mov	r0, r7
 80046c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80046c4:	4b0a      	ldr	r3, [pc, #40]	; (80046f0 <__swbuf_r+0x9c>)
 80046c6:	429c      	cmp	r4, r3
 80046c8:	d101      	bne.n	80046ce <__swbuf_r+0x7a>
 80046ca:	68ac      	ldr	r4, [r5, #8]
 80046cc:	e7cf      	b.n	800466e <__swbuf_r+0x1a>
 80046ce:	4b09      	ldr	r3, [pc, #36]	; (80046f4 <__swbuf_r+0xa0>)
 80046d0:	429c      	cmp	r4, r3
 80046d2:	bf08      	it	eq
 80046d4:	68ec      	ldreq	r4, [r5, #12]
 80046d6:	e7ca      	b.n	800466e <__swbuf_r+0x1a>
 80046d8:	4621      	mov	r1, r4
 80046da:	4628      	mov	r0, r5
 80046dc:	f000 f80c 	bl	80046f8 <__swsetup_r>
 80046e0:	2800      	cmp	r0, #0
 80046e2:	d0cb      	beq.n	800467c <__swbuf_r+0x28>
 80046e4:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80046e8:	e7ea      	b.n	80046c0 <__swbuf_r+0x6c>
 80046ea:	bf00      	nop
 80046ec:	08005090 	.word	0x08005090
 80046f0:	080050b0 	.word	0x080050b0
 80046f4:	08005070 	.word	0x08005070

080046f8 <__swsetup_r>:
 80046f8:	4b32      	ldr	r3, [pc, #200]	; (80047c4 <__swsetup_r+0xcc>)
 80046fa:	b570      	push	{r4, r5, r6, lr}
 80046fc:	681d      	ldr	r5, [r3, #0]
 80046fe:	4606      	mov	r6, r0
 8004700:	460c      	mov	r4, r1
 8004702:	b125      	cbz	r5, 800470e <__swsetup_r+0x16>
 8004704:	69ab      	ldr	r3, [r5, #24]
 8004706:	b913      	cbnz	r3, 800470e <__swsetup_r+0x16>
 8004708:	4628      	mov	r0, r5
 800470a:	f000 f985 	bl	8004a18 <__sinit>
 800470e:	4b2e      	ldr	r3, [pc, #184]	; (80047c8 <__swsetup_r+0xd0>)
 8004710:	429c      	cmp	r4, r3
 8004712:	d10f      	bne.n	8004734 <__swsetup_r+0x3c>
 8004714:	686c      	ldr	r4, [r5, #4]
 8004716:	89a3      	ldrh	r3, [r4, #12]
 8004718:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800471c:	0719      	lsls	r1, r3, #28
 800471e:	d42c      	bmi.n	800477a <__swsetup_r+0x82>
 8004720:	06dd      	lsls	r5, r3, #27
 8004722:	d411      	bmi.n	8004748 <__swsetup_r+0x50>
 8004724:	2309      	movs	r3, #9
 8004726:	6033      	str	r3, [r6, #0]
 8004728:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800472c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004730:	81a3      	strh	r3, [r4, #12]
 8004732:	e03e      	b.n	80047b2 <__swsetup_r+0xba>
 8004734:	4b25      	ldr	r3, [pc, #148]	; (80047cc <__swsetup_r+0xd4>)
 8004736:	429c      	cmp	r4, r3
 8004738:	d101      	bne.n	800473e <__swsetup_r+0x46>
 800473a:	68ac      	ldr	r4, [r5, #8]
 800473c:	e7eb      	b.n	8004716 <__swsetup_r+0x1e>
 800473e:	4b24      	ldr	r3, [pc, #144]	; (80047d0 <__swsetup_r+0xd8>)
 8004740:	429c      	cmp	r4, r3
 8004742:	bf08      	it	eq
 8004744:	68ec      	ldreq	r4, [r5, #12]
 8004746:	e7e6      	b.n	8004716 <__swsetup_r+0x1e>
 8004748:	0758      	lsls	r0, r3, #29
 800474a:	d512      	bpl.n	8004772 <__swsetup_r+0x7a>
 800474c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800474e:	b141      	cbz	r1, 8004762 <__swsetup_r+0x6a>
 8004750:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004754:	4299      	cmp	r1, r3
 8004756:	d002      	beq.n	800475e <__swsetup_r+0x66>
 8004758:	4630      	mov	r0, r6
 800475a:	f7ff fa7b 	bl	8003c54 <_free_r>
 800475e:	2300      	movs	r3, #0
 8004760:	6363      	str	r3, [r4, #52]	; 0x34
 8004762:	89a3      	ldrh	r3, [r4, #12]
 8004764:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004768:	81a3      	strh	r3, [r4, #12]
 800476a:	2300      	movs	r3, #0
 800476c:	6063      	str	r3, [r4, #4]
 800476e:	6923      	ldr	r3, [r4, #16]
 8004770:	6023      	str	r3, [r4, #0]
 8004772:	89a3      	ldrh	r3, [r4, #12]
 8004774:	f043 0308 	orr.w	r3, r3, #8
 8004778:	81a3      	strh	r3, [r4, #12]
 800477a:	6923      	ldr	r3, [r4, #16]
 800477c:	b94b      	cbnz	r3, 8004792 <__swsetup_r+0x9a>
 800477e:	89a3      	ldrh	r3, [r4, #12]
 8004780:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8004784:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004788:	d003      	beq.n	8004792 <__swsetup_r+0x9a>
 800478a:	4621      	mov	r1, r4
 800478c:	4630      	mov	r0, r6
 800478e:	f000 fa07 	bl	8004ba0 <__smakebuf_r>
 8004792:	89a0      	ldrh	r0, [r4, #12]
 8004794:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004798:	f010 0301 	ands.w	r3, r0, #1
 800479c:	d00a      	beq.n	80047b4 <__swsetup_r+0xbc>
 800479e:	2300      	movs	r3, #0
 80047a0:	60a3      	str	r3, [r4, #8]
 80047a2:	6963      	ldr	r3, [r4, #20]
 80047a4:	425b      	negs	r3, r3
 80047a6:	61a3      	str	r3, [r4, #24]
 80047a8:	6923      	ldr	r3, [r4, #16]
 80047aa:	b943      	cbnz	r3, 80047be <__swsetup_r+0xc6>
 80047ac:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80047b0:	d1ba      	bne.n	8004728 <__swsetup_r+0x30>
 80047b2:	bd70      	pop	{r4, r5, r6, pc}
 80047b4:	0781      	lsls	r1, r0, #30
 80047b6:	bf58      	it	pl
 80047b8:	6963      	ldrpl	r3, [r4, #20]
 80047ba:	60a3      	str	r3, [r4, #8]
 80047bc:	e7f4      	b.n	80047a8 <__swsetup_r+0xb0>
 80047be:	2000      	movs	r0, #0
 80047c0:	e7f7      	b.n	80047b2 <__swsetup_r+0xba>
 80047c2:	bf00      	nop
 80047c4:	20000098 	.word	0x20000098
 80047c8:	08005090 	.word	0x08005090
 80047cc:	080050b0 	.word	0x080050b0
 80047d0:	08005070 	.word	0x08005070

080047d4 <abort>:
 80047d4:	2006      	movs	r0, #6
 80047d6:	b508      	push	{r3, lr}
 80047d8:	f000 faa4 	bl	8004d24 <raise>
 80047dc:	2001      	movs	r0, #1
 80047de:	f7fc fa9a 	bl	8000d16 <_exit>
	...

080047e4 <__sflush_r>:
 80047e4:	898a      	ldrh	r2, [r1, #12]
 80047e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80047ea:	4605      	mov	r5, r0
 80047ec:	0710      	lsls	r0, r2, #28
 80047ee:	460c      	mov	r4, r1
 80047f0:	d458      	bmi.n	80048a4 <__sflush_r+0xc0>
 80047f2:	684b      	ldr	r3, [r1, #4]
 80047f4:	2b00      	cmp	r3, #0
 80047f6:	dc05      	bgt.n	8004804 <__sflush_r+0x20>
 80047f8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80047fa:	2b00      	cmp	r3, #0
 80047fc:	dc02      	bgt.n	8004804 <__sflush_r+0x20>
 80047fe:	2000      	movs	r0, #0
 8004800:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004804:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004806:	2e00      	cmp	r6, #0
 8004808:	d0f9      	beq.n	80047fe <__sflush_r+0x1a>
 800480a:	2300      	movs	r3, #0
 800480c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004810:	682f      	ldr	r7, [r5, #0]
 8004812:	602b      	str	r3, [r5, #0]
 8004814:	d032      	beq.n	800487c <__sflush_r+0x98>
 8004816:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004818:	89a3      	ldrh	r3, [r4, #12]
 800481a:	075a      	lsls	r2, r3, #29
 800481c:	d505      	bpl.n	800482a <__sflush_r+0x46>
 800481e:	6863      	ldr	r3, [r4, #4]
 8004820:	1ac0      	subs	r0, r0, r3
 8004822:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004824:	b10b      	cbz	r3, 800482a <__sflush_r+0x46>
 8004826:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004828:	1ac0      	subs	r0, r0, r3
 800482a:	2300      	movs	r3, #0
 800482c:	4602      	mov	r2, r0
 800482e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004830:	4628      	mov	r0, r5
 8004832:	6a21      	ldr	r1, [r4, #32]
 8004834:	47b0      	blx	r6
 8004836:	1c43      	adds	r3, r0, #1
 8004838:	89a3      	ldrh	r3, [r4, #12]
 800483a:	d106      	bne.n	800484a <__sflush_r+0x66>
 800483c:	6829      	ldr	r1, [r5, #0]
 800483e:	291d      	cmp	r1, #29
 8004840:	d82c      	bhi.n	800489c <__sflush_r+0xb8>
 8004842:	4a2a      	ldr	r2, [pc, #168]	; (80048ec <__sflush_r+0x108>)
 8004844:	40ca      	lsrs	r2, r1
 8004846:	07d6      	lsls	r6, r2, #31
 8004848:	d528      	bpl.n	800489c <__sflush_r+0xb8>
 800484a:	2200      	movs	r2, #0
 800484c:	6062      	str	r2, [r4, #4]
 800484e:	6922      	ldr	r2, [r4, #16]
 8004850:	04d9      	lsls	r1, r3, #19
 8004852:	6022      	str	r2, [r4, #0]
 8004854:	d504      	bpl.n	8004860 <__sflush_r+0x7c>
 8004856:	1c42      	adds	r2, r0, #1
 8004858:	d101      	bne.n	800485e <__sflush_r+0x7a>
 800485a:	682b      	ldr	r3, [r5, #0]
 800485c:	b903      	cbnz	r3, 8004860 <__sflush_r+0x7c>
 800485e:	6560      	str	r0, [r4, #84]	; 0x54
 8004860:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004862:	602f      	str	r7, [r5, #0]
 8004864:	2900      	cmp	r1, #0
 8004866:	d0ca      	beq.n	80047fe <__sflush_r+0x1a>
 8004868:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800486c:	4299      	cmp	r1, r3
 800486e:	d002      	beq.n	8004876 <__sflush_r+0x92>
 8004870:	4628      	mov	r0, r5
 8004872:	f7ff f9ef 	bl	8003c54 <_free_r>
 8004876:	2000      	movs	r0, #0
 8004878:	6360      	str	r0, [r4, #52]	; 0x34
 800487a:	e7c1      	b.n	8004800 <__sflush_r+0x1c>
 800487c:	6a21      	ldr	r1, [r4, #32]
 800487e:	2301      	movs	r3, #1
 8004880:	4628      	mov	r0, r5
 8004882:	47b0      	blx	r6
 8004884:	1c41      	adds	r1, r0, #1
 8004886:	d1c7      	bne.n	8004818 <__sflush_r+0x34>
 8004888:	682b      	ldr	r3, [r5, #0]
 800488a:	2b00      	cmp	r3, #0
 800488c:	d0c4      	beq.n	8004818 <__sflush_r+0x34>
 800488e:	2b1d      	cmp	r3, #29
 8004890:	d001      	beq.n	8004896 <__sflush_r+0xb2>
 8004892:	2b16      	cmp	r3, #22
 8004894:	d101      	bne.n	800489a <__sflush_r+0xb6>
 8004896:	602f      	str	r7, [r5, #0]
 8004898:	e7b1      	b.n	80047fe <__sflush_r+0x1a>
 800489a:	89a3      	ldrh	r3, [r4, #12]
 800489c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80048a0:	81a3      	strh	r3, [r4, #12]
 80048a2:	e7ad      	b.n	8004800 <__sflush_r+0x1c>
 80048a4:	690f      	ldr	r7, [r1, #16]
 80048a6:	2f00      	cmp	r7, #0
 80048a8:	d0a9      	beq.n	80047fe <__sflush_r+0x1a>
 80048aa:	0793      	lsls	r3, r2, #30
 80048ac:	bf18      	it	ne
 80048ae:	2300      	movne	r3, #0
 80048b0:	680e      	ldr	r6, [r1, #0]
 80048b2:	bf08      	it	eq
 80048b4:	694b      	ldreq	r3, [r1, #20]
 80048b6:	eba6 0807 	sub.w	r8, r6, r7
 80048ba:	600f      	str	r7, [r1, #0]
 80048bc:	608b      	str	r3, [r1, #8]
 80048be:	f1b8 0f00 	cmp.w	r8, #0
 80048c2:	dd9c      	ble.n	80047fe <__sflush_r+0x1a>
 80048c4:	4643      	mov	r3, r8
 80048c6:	463a      	mov	r2, r7
 80048c8:	4628      	mov	r0, r5
 80048ca:	6a21      	ldr	r1, [r4, #32]
 80048cc:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80048ce:	47b0      	blx	r6
 80048d0:	2800      	cmp	r0, #0
 80048d2:	dc06      	bgt.n	80048e2 <__sflush_r+0xfe>
 80048d4:	89a3      	ldrh	r3, [r4, #12]
 80048d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80048da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80048de:	81a3      	strh	r3, [r4, #12]
 80048e0:	e78e      	b.n	8004800 <__sflush_r+0x1c>
 80048e2:	4407      	add	r7, r0
 80048e4:	eba8 0800 	sub.w	r8, r8, r0
 80048e8:	e7e9      	b.n	80048be <__sflush_r+0xda>
 80048ea:	bf00      	nop
 80048ec:	20400001 	.word	0x20400001

080048f0 <_fflush_r>:
 80048f0:	b538      	push	{r3, r4, r5, lr}
 80048f2:	690b      	ldr	r3, [r1, #16]
 80048f4:	4605      	mov	r5, r0
 80048f6:	460c      	mov	r4, r1
 80048f8:	b913      	cbnz	r3, 8004900 <_fflush_r+0x10>
 80048fa:	2500      	movs	r5, #0
 80048fc:	4628      	mov	r0, r5
 80048fe:	bd38      	pop	{r3, r4, r5, pc}
 8004900:	b118      	cbz	r0, 800490a <_fflush_r+0x1a>
 8004902:	6983      	ldr	r3, [r0, #24]
 8004904:	b90b      	cbnz	r3, 800490a <_fflush_r+0x1a>
 8004906:	f000 f887 	bl	8004a18 <__sinit>
 800490a:	4b14      	ldr	r3, [pc, #80]	; (800495c <_fflush_r+0x6c>)
 800490c:	429c      	cmp	r4, r3
 800490e:	d11b      	bne.n	8004948 <_fflush_r+0x58>
 8004910:	686c      	ldr	r4, [r5, #4]
 8004912:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004916:	2b00      	cmp	r3, #0
 8004918:	d0ef      	beq.n	80048fa <_fflush_r+0xa>
 800491a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800491c:	07d0      	lsls	r0, r2, #31
 800491e:	d404      	bmi.n	800492a <_fflush_r+0x3a>
 8004920:	0599      	lsls	r1, r3, #22
 8004922:	d402      	bmi.n	800492a <_fflush_r+0x3a>
 8004924:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004926:	f000 f915 	bl	8004b54 <__retarget_lock_acquire_recursive>
 800492a:	4628      	mov	r0, r5
 800492c:	4621      	mov	r1, r4
 800492e:	f7ff ff59 	bl	80047e4 <__sflush_r>
 8004932:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004934:	4605      	mov	r5, r0
 8004936:	07da      	lsls	r2, r3, #31
 8004938:	d4e0      	bmi.n	80048fc <_fflush_r+0xc>
 800493a:	89a3      	ldrh	r3, [r4, #12]
 800493c:	059b      	lsls	r3, r3, #22
 800493e:	d4dd      	bmi.n	80048fc <_fflush_r+0xc>
 8004940:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004942:	f000 f908 	bl	8004b56 <__retarget_lock_release_recursive>
 8004946:	e7d9      	b.n	80048fc <_fflush_r+0xc>
 8004948:	4b05      	ldr	r3, [pc, #20]	; (8004960 <_fflush_r+0x70>)
 800494a:	429c      	cmp	r4, r3
 800494c:	d101      	bne.n	8004952 <_fflush_r+0x62>
 800494e:	68ac      	ldr	r4, [r5, #8]
 8004950:	e7df      	b.n	8004912 <_fflush_r+0x22>
 8004952:	4b04      	ldr	r3, [pc, #16]	; (8004964 <_fflush_r+0x74>)
 8004954:	429c      	cmp	r4, r3
 8004956:	bf08      	it	eq
 8004958:	68ec      	ldreq	r4, [r5, #12]
 800495a:	e7da      	b.n	8004912 <_fflush_r+0x22>
 800495c:	08005090 	.word	0x08005090
 8004960:	080050b0 	.word	0x080050b0
 8004964:	08005070 	.word	0x08005070

08004968 <std>:
 8004968:	2300      	movs	r3, #0
 800496a:	b510      	push	{r4, lr}
 800496c:	4604      	mov	r4, r0
 800496e:	e9c0 3300 	strd	r3, r3, [r0]
 8004972:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004976:	6083      	str	r3, [r0, #8]
 8004978:	8181      	strh	r1, [r0, #12]
 800497a:	6643      	str	r3, [r0, #100]	; 0x64
 800497c:	81c2      	strh	r2, [r0, #14]
 800497e:	6183      	str	r3, [r0, #24]
 8004980:	4619      	mov	r1, r3
 8004982:	2208      	movs	r2, #8
 8004984:	305c      	adds	r0, #92	; 0x5c
 8004986:	f7ff f85b 	bl	8003a40 <memset>
 800498a:	4b05      	ldr	r3, [pc, #20]	; (80049a0 <std+0x38>)
 800498c:	6224      	str	r4, [r4, #32]
 800498e:	6263      	str	r3, [r4, #36]	; 0x24
 8004990:	4b04      	ldr	r3, [pc, #16]	; (80049a4 <std+0x3c>)
 8004992:	62a3      	str	r3, [r4, #40]	; 0x28
 8004994:	4b04      	ldr	r3, [pc, #16]	; (80049a8 <std+0x40>)
 8004996:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004998:	4b04      	ldr	r3, [pc, #16]	; (80049ac <std+0x44>)
 800499a:	6323      	str	r3, [r4, #48]	; 0x30
 800499c:	bd10      	pop	{r4, pc}
 800499e:	bf00      	nop
 80049a0:	08004d5d 	.word	0x08004d5d
 80049a4:	08004d7f 	.word	0x08004d7f
 80049a8:	08004db7 	.word	0x08004db7
 80049ac:	08004ddb 	.word	0x08004ddb

080049b0 <_cleanup_r>:
 80049b0:	4901      	ldr	r1, [pc, #4]	; (80049b8 <_cleanup_r+0x8>)
 80049b2:	f000 b8af 	b.w	8004b14 <_fwalk_reent>
 80049b6:	bf00      	nop
 80049b8:	080048f1 	.word	0x080048f1

080049bc <__sfmoreglue>:
 80049bc:	b570      	push	{r4, r5, r6, lr}
 80049be:	2568      	movs	r5, #104	; 0x68
 80049c0:	1e4a      	subs	r2, r1, #1
 80049c2:	4355      	muls	r5, r2
 80049c4:	460e      	mov	r6, r1
 80049c6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80049ca:	f7ff f98f 	bl	8003cec <_malloc_r>
 80049ce:	4604      	mov	r4, r0
 80049d0:	b140      	cbz	r0, 80049e4 <__sfmoreglue+0x28>
 80049d2:	2100      	movs	r1, #0
 80049d4:	e9c0 1600 	strd	r1, r6, [r0]
 80049d8:	300c      	adds	r0, #12
 80049da:	60a0      	str	r0, [r4, #8]
 80049dc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80049e0:	f7ff f82e 	bl	8003a40 <memset>
 80049e4:	4620      	mov	r0, r4
 80049e6:	bd70      	pop	{r4, r5, r6, pc}

080049e8 <__sfp_lock_acquire>:
 80049e8:	4801      	ldr	r0, [pc, #4]	; (80049f0 <__sfp_lock_acquire+0x8>)
 80049ea:	f000 b8b3 	b.w	8004b54 <__retarget_lock_acquire_recursive>
 80049ee:	bf00      	nop
 80049f0:	2000131c 	.word	0x2000131c

080049f4 <__sfp_lock_release>:
 80049f4:	4801      	ldr	r0, [pc, #4]	; (80049fc <__sfp_lock_release+0x8>)
 80049f6:	f000 b8ae 	b.w	8004b56 <__retarget_lock_release_recursive>
 80049fa:	bf00      	nop
 80049fc:	2000131c 	.word	0x2000131c

08004a00 <__sinit_lock_acquire>:
 8004a00:	4801      	ldr	r0, [pc, #4]	; (8004a08 <__sinit_lock_acquire+0x8>)
 8004a02:	f000 b8a7 	b.w	8004b54 <__retarget_lock_acquire_recursive>
 8004a06:	bf00      	nop
 8004a08:	20001317 	.word	0x20001317

08004a0c <__sinit_lock_release>:
 8004a0c:	4801      	ldr	r0, [pc, #4]	; (8004a14 <__sinit_lock_release+0x8>)
 8004a0e:	f000 b8a2 	b.w	8004b56 <__retarget_lock_release_recursive>
 8004a12:	bf00      	nop
 8004a14:	20001317 	.word	0x20001317

08004a18 <__sinit>:
 8004a18:	b510      	push	{r4, lr}
 8004a1a:	4604      	mov	r4, r0
 8004a1c:	f7ff fff0 	bl	8004a00 <__sinit_lock_acquire>
 8004a20:	69a3      	ldr	r3, [r4, #24]
 8004a22:	b11b      	cbz	r3, 8004a2c <__sinit+0x14>
 8004a24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004a28:	f7ff bff0 	b.w	8004a0c <__sinit_lock_release>
 8004a2c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8004a30:	6523      	str	r3, [r4, #80]	; 0x50
 8004a32:	4b13      	ldr	r3, [pc, #76]	; (8004a80 <__sinit+0x68>)
 8004a34:	4a13      	ldr	r2, [pc, #76]	; (8004a84 <__sinit+0x6c>)
 8004a36:	681b      	ldr	r3, [r3, #0]
 8004a38:	62a2      	str	r2, [r4, #40]	; 0x28
 8004a3a:	42a3      	cmp	r3, r4
 8004a3c:	bf08      	it	eq
 8004a3e:	2301      	moveq	r3, #1
 8004a40:	4620      	mov	r0, r4
 8004a42:	bf08      	it	eq
 8004a44:	61a3      	streq	r3, [r4, #24]
 8004a46:	f000 f81f 	bl	8004a88 <__sfp>
 8004a4a:	6060      	str	r0, [r4, #4]
 8004a4c:	4620      	mov	r0, r4
 8004a4e:	f000 f81b 	bl	8004a88 <__sfp>
 8004a52:	60a0      	str	r0, [r4, #8]
 8004a54:	4620      	mov	r0, r4
 8004a56:	f000 f817 	bl	8004a88 <__sfp>
 8004a5a:	2200      	movs	r2, #0
 8004a5c:	2104      	movs	r1, #4
 8004a5e:	60e0      	str	r0, [r4, #12]
 8004a60:	6860      	ldr	r0, [r4, #4]
 8004a62:	f7ff ff81 	bl	8004968 <std>
 8004a66:	2201      	movs	r2, #1
 8004a68:	2109      	movs	r1, #9
 8004a6a:	68a0      	ldr	r0, [r4, #8]
 8004a6c:	f7ff ff7c 	bl	8004968 <std>
 8004a70:	2202      	movs	r2, #2
 8004a72:	2112      	movs	r1, #18
 8004a74:	68e0      	ldr	r0, [r4, #12]
 8004a76:	f7ff ff77 	bl	8004968 <std>
 8004a7a:	2301      	movs	r3, #1
 8004a7c:	61a3      	str	r3, [r4, #24]
 8004a7e:	e7d1      	b.n	8004a24 <__sinit+0xc>
 8004a80:	08004f84 	.word	0x08004f84
 8004a84:	080049b1 	.word	0x080049b1

08004a88 <__sfp>:
 8004a88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a8a:	4607      	mov	r7, r0
 8004a8c:	f7ff ffac 	bl	80049e8 <__sfp_lock_acquire>
 8004a90:	4b1e      	ldr	r3, [pc, #120]	; (8004b0c <__sfp+0x84>)
 8004a92:	681e      	ldr	r6, [r3, #0]
 8004a94:	69b3      	ldr	r3, [r6, #24]
 8004a96:	b913      	cbnz	r3, 8004a9e <__sfp+0x16>
 8004a98:	4630      	mov	r0, r6
 8004a9a:	f7ff ffbd 	bl	8004a18 <__sinit>
 8004a9e:	3648      	adds	r6, #72	; 0x48
 8004aa0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8004aa4:	3b01      	subs	r3, #1
 8004aa6:	d503      	bpl.n	8004ab0 <__sfp+0x28>
 8004aa8:	6833      	ldr	r3, [r6, #0]
 8004aaa:	b30b      	cbz	r3, 8004af0 <__sfp+0x68>
 8004aac:	6836      	ldr	r6, [r6, #0]
 8004aae:	e7f7      	b.n	8004aa0 <__sfp+0x18>
 8004ab0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004ab4:	b9d5      	cbnz	r5, 8004aec <__sfp+0x64>
 8004ab6:	4b16      	ldr	r3, [pc, #88]	; (8004b10 <__sfp+0x88>)
 8004ab8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8004abc:	60e3      	str	r3, [r4, #12]
 8004abe:	6665      	str	r5, [r4, #100]	; 0x64
 8004ac0:	f000 f847 	bl	8004b52 <__retarget_lock_init_recursive>
 8004ac4:	f7ff ff96 	bl	80049f4 <__sfp_lock_release>
 8004ac8:	2208      	movs	r2, #8
 8004aca:	4629      	mov	r1, r5
 8004acc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8004ad0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8004ad4:	6025      	str	r5, [r4, #0]
 8004ad6:	61a5      	str	r5, [r4, #24]
 8004ad8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004adc:	f7fe ffb0 	bl	8003a40 <memset>
 8004ae0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8004ae4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004ae8:	4620      	mov	r0, r4
 8004aea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004aec:	3468      	adds	r4, #104	; 0x68
 8004aee:	e7d9      	b.n	8004aa4 <__sfp+0x1c>
 8004af0:	2104      	movs	r1, #4
 8004af2:	4638      	mov	r0, r7
 8004af4:	f7ff ff62 	bl	80049bc <__sfmoreglue>
 8004af8:	4604      	mov	r4, r0
 8004afa:	6030      	str	r0, [r6, #0]
 8004afc:	2800      	cmp	r0, #0
 8004afe:	d1d5      	bne.n	8004aac <__sfp+0x24>
 8004b00:	f7ff ff78 	bl	80049f4 <__sfp_lock_release>
 8004b04:	230c      	movs	r3, #12
 8004b06:	603b      	str	r3, [r7, #0]
 8004b08:	e7ee      	b.n	8004ae8 <__sfp+0x60>
 8004b0a:	bf00      	nop
 8004b0c:	08004f84 	.word	0x08004f84
 8004b10:	ffff0001 	.word	0xffff0001

08004b14 <_fwalk_reent>:
 8004b14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004b18:	4606      	mov	r6, r0
 8004b1a:	4688      	mov	r8, r1
 8004b1c:	2700      	movs	r7, #0
 8004b1e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004b22:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004b26:	f1b9 0901 	subs.w	r9, r9, #1
 8004b2a:	d505      	bpl.n	8004b38 <_fwalk_reent+0x24>
 8004b2c:	6824      	ldr	r4, [r4, #0]
 8004b2e:	2c00      	cmp	r4, #0
 8004b30:	d1f7      	bne.n	8004b22 <_fwalk_reent+0xe>
 8004b32:	4638      	mov	r0, r7
 8004b34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004b38:	89ab      	ldrh	r3, [r5, #12]
 8004b3a:	2b01      	cmp	r3, #1
 8004b3c:	d907      	bls.n	8004b4e <_fwalk_reent+0x3a>
 8004b3e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004b42:	3301      	adds	r3, #1
 8004b44:	d003      	beq.n	8004b4e <_fwalk_reent+0x3a>
 8004b46:	4629      	mov	r1, r5
 8004b48:	4630      	mov	r0, r6
 8004b4a:	47c0      	blx	r8
 8004b4c:	4307      	orrs	r7, r0
 8004b4e:	3568      	adds	r5, #104	; 0x68
 8004b50:	e7e9      	b.n	8004b26 <_fwalk_reent+0x12>

08004b52 <__retarget_lock_init_recursive>:
 8004b52:	4770      	bx	lr

08004b54 <__retarget_lock_acquire_recursive>:
 8004b54:	4770      	bx	lr

08004b56 <__retarget_lock_release_recursive>:
 8004b56:	4770      	bx	lr

08004b58 <__swhatbuf_r>:
 8004b58:	b570      	push	{r4, r5, r6, lr}
 8004b5a:	460e      	mov	r6, r1
 8004b5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004b60:	4614      	mov	r4, r2
 8004b62:	2900      	cmp	r1, #0
 8004b64:	461d      	mov	r5, r3
 8004b66:	b096      	sub	sp, #88	; 0x58
 8004b68:	da07      	bge.n	8004b7a <__swhatbuf_r+0x22>
 8004b6a:	2300      	movs	r3, #0
 8004b6c:	602b      	str	r3, [r5, #0]
 8004b6e:	89b3      	ldrh	r3, [r6, #12]
 8004b70:	061a      	lsls	r2, r3, #24
 8004b72:	d410      	bmi.n	8004b96 <__swhatbuf_r+0x3e>
 8004b74:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004b78:	e00e      	b.n	8004b98 <__swhatbuf_r+0x40>
 8004b7a:	466a      	mov	r2, sp
 8004b7c:	f000 f954 	bl	8004e28 <_fstat_r>
 8004b80:	2800      	cmp	r0, #0
 8004b82:	dbf2      	blt.n	8004b6a <__swhatbuf_r+0x12>
 8004b84:	9a01      	ldr	r2, [sp, #4]
 8004b86:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004b8a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8004b8e:	425a      	negs	r2, r3
 8004b90:	415a      	adcs	r2, r3
 8004b92:	602a      	str	r2, [r5, #0]
 8004b94:	e7ee      	b.n	8004b74 <__swhatbuf_r+0x1c>
 8004b96:	2340      	movs	r3, #64	; 0x40
 8004b98:	2000      	movs	r0, #0
 8004b9a:	6023      	str	r3, [r4, #0]
 8004b9c:	b016      	add	sp, #88	; 0x58
 8004b9e:	bd70      	pop	{r4, r5, r6, pc}

08004ba0 <__smakebuf_r>:
 8004ba0:	898b      	ldrh	r3, [r1, #12]
 8004ba2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004ba4:	079d      	lsls	r5, r3, #30
 8004ba6:	4606      	mov	r6, r0
 8004ba8:	460c      	mov	r4, r1
 8004baa:	d507      	bpl.n	8004bbc <__smakebuf_r+0x1c>
 8004bac:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004bb0:	6023      	str	r3, [r4, #0]
 8004bb2:	6123      	str	r3, [r4, #16]
 8004bb4:	2301      	movs	r3, #1
 8004bb6:	6163      	str	r3, [r4, #20]
 8004bb8:	b002      	add	sp, #8
 8004bba:	bd70      	pop	{r4, r5, r6, pc}
 8004bbc:	466a      	mov	r2, sp
 8004bbe:	ab01      	add	r3, sp, #4
 8004bc0:	f7ff ffca 	bl	8004b58 <__swhatbuf_r>
 8004bc4:	9900      	ldr	r1, [sp, #0]
 8004bc6:	4605      	mov	r5, r0
 8004bc8:	4630      	mov	r0, r6
 8004bca:	f7ff f88f 	bl	8003cec <_malloc_r>
 8004bce:	b948      	cbnz	r0, 8004be4 <__smakebuf_r+0x44>
 8004bd0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004bd4:	059a      	lsls	r2, r3, #22
 8004bd6:	d4ef      	bmi.n	8004bb8 <__smakebuf_r+0x18>
 8004bd8:	f023 0303 	bic.w	r3, r3, #3
 8004bdc:	f043 0302 	orr.w	r3, r3, #2
 8004be0:	81a3      	strh	r3, [r4, #12]
 8004be2:	e7e3      	b.n	8004bac <__smakebuf_r+0xc>
 8004be4:	4b0d      	ldr	r3, [pc, #52]	; (8004c1c <__smakebuf_r+0x7c>)
 8004be6:	62b3      	str	r3, [r6, #40]	; 0x28
 8004be8:	89a3      	ldrh	r3, [r4, #12]
 8004bea:	6020      	str	r0, [r4, #0]
 8004bec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004bf0:	81a3      	strh	r3, [r4, #12]
 8004bf2:	9b00      	ldr	r3, [sp, #0]
 8004bf4:	6120      	str	r0, [r4, #16]
 8004bf6:	6163      	str	r3, [r4, #20]
 8004bf8:	9b01      	ldr	r3, [sp, #4]
 8004bfa:	b15b      	cbz	r3, 8004c14 <__smakebuf_r+0x74>
 8004bfc:	4630      	mov	r0, r6
 8004bfe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004c02:	f000 f923 	bl	8004e4c <_isatty_r>
 8004c06:	b128      	cbz	r0, 8004c14 <__smakebuf_r+0x74>
 8004c08:	89a3      	ldrh	r3, [r4, #12]
 8004c0a:	f023 0303 	bic.w	r3, r3, #3
 8004c0e:	f043 0301 	orr.w	r3, r3, #1
 8004c12:	81a3      	strh	r3, [r4, #12]
 8004c14:	89a0      	ldrh	r0, [r4, #12]
 8004c16:	4305      	orrs	r5, r0
 8004c18:	81a5      	strh	r5, [r4, #12]
 8004c1a:	e7cd      	b.n	8004bb8 <__smakebuf_r+0x18>
 8004c1c:	080049b1 	.word	0x080049b1

08004c20 <memchr>:
 8004c20:	4603      	mov	r3, r0
 8004c22:	b510      	push	{r4, lr}
 8004c24:	b2c9      	uxtb	r1, r1
 8004c26:	4402      	add	r2, r0
 8004c28:	4293      	cmp	r3, r2
 8004c2a:	4618      	mov	r0, r3
 8004c2c:	d101      	bne.n	8004c32 <memchr+0x12>
 8004c2e:	2000      	movs	r0, #0
 8004c30:	e003      	b.n	8004c3a <memchr+0x1a>
 8004c32:	7804      	ldrb	r4, [r0, #0]
 8004c34:	3301      	adds	r3, #1
 8004c36:	428c      	cmp	r4, r1
 8004c38:	d1f6      	bne.n	8004c28 <memchr+0x8>
 8004c3a:	bd10      	pop	{r4, pc}

08004c3c <memmove>:
 8004c3c:	4288      	cmp	r0, r1
 8004c3e:	b510      	push	{r4, lr}
 8004c40:	eb01 0402 	add.w	r4, r1, r2
 8004c44:	d902      	bls.n	8004c4c <memmove+0x10>
 8004c46:	4284      	cmp	r4, r0
 8004c48:	4623      	mov	r3, r4
 8004c4a:	d807      	bhi.n	8004c5c <memmove+0x20>
 8004c4c:	1e43      	subs	r3, r0, #1
 8004c4e:	42a1      	cmp	r1, r4
 8004c50:	d008      	beq.n	8004c64 <memmove+0x28>
 8004c52:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004c56:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004c5a:	e7f8      	b.n	8004c4e <memmove+0x12>
 8004c5c:	4601      	mov	r1, r0
 8004c5e:	4402      	add	r2, r0
 8004c60:	428a      	cmp	r2, r1
 8004c62:	d100      	bne.n	8004c66 <memmove+0x2a>
 8004c64:	bd10      	pop	{r4, pc}
 8004c66:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004c6a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004c6e:	e7f7      	b.n	8004c60 <memmove+0x24>

08004c70 <__malloc_lock>:
 8004c70:	4801      	ldr	r0, [pc, #4]	; (8004c78 <__malloc_lock+0x8>)
 8004c72:	f7ff bf6f 	b.w	8004b54 <__retarget_lock_acquire_recursive>
 8004c76:	bf00      	nop
 8004c78:	20001318 	.word	0x20001318

08004c7c <__malloc_unlock>:
 8004c7c:	4801      	ldr	r0, [pc, #4]	; (8004c84 <__malloc_unlock+0x8>)
 8004c7e:	f7ff bf6a 	b.w	8004b56 <__retarget_lock_release_recursive>
 8004c82:	bf00      	nop
 8004c84:	20001318 	.word	0x20001318

08004c88 <_realloc_r>:
 8004c88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c8a:	4607      	mov	r7, r0
 8004c8c:	4614      	mov	r4, r2
 8004c8e:	460e      	mov	r6, r1
 8004c90:	b921      	cbnz	r1, 8004c9c <_realloc_r+0x14>
 8004c92:	4611      	mov	r1, r2
 8004c94:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004c98:	f7ff b828 	b.w	8003cec <_malloc_r>
 8004c9c:	b922      	cbnz	r2, 8004ca8 <_realloc_r+0x20>
 8004c9e:	f7fe ffd9 	bl	8003c54 <_free_r>
 8004ca2:	4625      	mov	r5, r4
 8004ca4:	4628      	mov	r0, r5
 8004ca6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004ca8:	f000 f8f2 	bl	8004e90 <_malloc_usable_size_r>
 8004cac:	42a0      	cmp	r0, r4
 8004cae:	d20f      	bcs.n	8004cd0 <_realloc_r+0x48>
 8004cb0:	4621      	mov	r1, r4
 8004cb2:	4638      	mov	r0, r7
 8004cb4:	f7ff f81a 	bl	8003cec <_malloc_r>
 8004cb8:	4605      	mov	r5, r0
 8004cba:	2800      	cmp	r0, #0
 8004cbc:	d0f2      	beq.n	8004ca4 <_realloc_r+0x1c>
 8004cbe:	4631      	mov	r1, r6
 8004cc0:	4622      	mov	r2, r4
 8004cc2:	f7fe feaf 	bl	8003a24 <memcpy>
 8004cc6:	4631      	mov	r1, r6
 8004cc8:	4638      	mov	r0, r7
 8004cca:	f7fe ffc3 	bl	8003c54 <_free_r>
 8004cce:	e7e9      	b.n	8004ca4 <_realloc_r+0x1c>
 8004cd0:	4635      	mov	r5, r6
 8004cd2:	e7e7      	b.n	8004ca4 <_realloc_r+0x1c>

08004cd4 <_raise_r>:
 8004cd4:	291f      	cmp	r1, #31
 8004cd6:	b538      	push	{r3, r4, r5, lr}
 8004cd8:	4604      	mov	r4, r0
 8004cda:	460d      	mov	r5, r1
 8004cdc:	d904      	bls.n	8004ce8 <_raise_r+0x14>
 8004cde:	2316      	movs	r3, #22
 8004ce0:	6003      	str	r3, [r0, #0]
 8004ce2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004ce6:	bd38      	pop	{r3, r4, r5, pc}
 8004ce8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8004cea:	b112      	cbz	r2, 8004cf2 <_raise_r+0x1e>
 8004cec:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004cf0:	b94b      	cbnz	r3, 8004d06 <_raise_r+0x32>
 8004cf2:	4620      	mov	r0, r4
 8004cf4:	f000 f830 	bl	8004d58 <_getpid_r>
 8004cf8:	462a      	mov	r2, r5
 8004cfa:	4601      	mov	r1, r0
 8004cfc:	4620      	mov	r0, r4
 8004cfe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004d02:	f000 b817 	b.w	8004d34 <_kill_r>
 8004d06:	2b01      	cmp	r3, #1
 8004d08:	d00a      	beq.n	8004d20 <_raise_r+0x4c>
 8004d0a:	1c59      	adds	r1, r3, #1
 8004d0c:	d103      	bne.n	8004d16 <_raise_r+0x42>
 8004d0e:	2316      	movs	r3, #22
 8004d10:	6003      	str	r3, [r0, #0]
 8004d12:	2001      	movs	r0, #1
 8004d14:	e7e7      	b.n	8004ce6 <_raise_r+0x12>
 8004d16:	2400      	movs	r4, #0
 8004d18:	4628      	mov	r0, r5
 8004d1a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8004d1e:	4798      	blx	r3
 8004d20:	2000      	movs	r0, #0
 8004d22:	e7e0      	b.n	8004ce6 <_raise_r+0x12>

08004d24 <raise>:
 8004d24:	4b02      	ldr	r3, [pc, #8]	; (8004d30 <raise+0xc>)
 8004d26:	4601      	mov	r1, r0
 8004d28:	6818      	ldr	r0, [r3, #0]
 8004d2a:	f7ff bfd3 	b.w	8004cd4 <_raise_r>
 8004d2e:	bf00      	nop
 8004d30:	20000098 	.word	0x20000098

08004d34 <_kill_r>:
 8004d34:	b538      	push	{r3, r4, r5, lr}
 8004d36:	2300      	movs	r3, #0
 8004d38:	4d06      	ldr	r5, [pc, #24]	; (8004d54 <_kill_r+0x20>)
 8004d3a:	4604      	mov	r4, r0
 8004d3c:	4608      	mov	r0, r1
 8004d3e:	4611      	mov	r1, r2
 8004d40:	602b      	str	r3, [r5, #0]
 8004d42:	f7fb ffd8 	bl	8000cf6 <_kill>
 8004d46:	1c43      	adds	r3, r0, #1
 8004d48:	d102      	bne.n	8004d50 <_kill_r+0x1c>
 8004d4a:	682b      	ldr	r3, [r5, #0]
 8004d4c:	b103      	cbz	r3, 8004d50 <_kill_r+0x1c>
 8004d4e:	6023      	str	r3, [r4, #0]
 8004d50:	bd38      	pop	{r3, r4, r5, pc}
 8004d52:	bf00      	nop
 8004d54:	20001310 	.word	0x20001310

08004d58 <_getpid_r>:
 8004d58:	f7fb bfc6 	b.w	8000ce8 <_getpid>

08004d5c <__sread>:
 8004d5c:	b510      	push	{r4, lr}
 8004d5e:	460c      	mov	r4, r1
 8004d60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004d64:	f000 f89c 	bl	8004ea0 <_read_r>
 8004d68:	2800      	cmp	r0, #0
 8004d6a:	bfab      	itete	ge
 8004d6c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004d6e:	89a3      	ldrhlt	r3, [r4, #12]
 8004d70:	181b      	addge	r3, r3, r0
 8004d72:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8004d76:	bfac      	ite	ge
 8004d78:	6563      	strge	r3, [r4, #84]	; 0x54
 8004d7a:	81a3      	strhlt	r3, [r4, #12]
 8004d7c:	bd10      	pop	{r4, pc}

08004d7e <__swrite>:
 8004d7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d82:	461f      	mov	r7, r3
 8004d84:	898b      	ldrh	r3, [r1, #12]
 8004d86:	4605      	mov	r5, r0
 8004d88:	05db      	lsls	r3, r3, #23
 8004d8a:	460c      	mov	r4, r1
 8004d8c:	4616      	mov	r6, r2
 8004d8e:	d505      	bpl.n	8004d9c <__swrite+0x1e>
 8004d90:	2302      	movs	r3, #2
 8004d92:	2200      	movs	r2, #0
 8004d94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004d98:	f000 f868 	bl	8004e6c <_lseek_r>
 8004d9c:	89a3      	ldrh	r3, [r4, #12]
 8004d9e:	4632      	mov	r2, r6
 8004da0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004da4:	81a3      	strh	r3, [r4, #12]
 8004da6:	4628      	mov	r0, r5
 8004da8:	463b      	mov	r3, r7
 8004daa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004dae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004db2:	f000 b817 	b.w	8004de4 <_write_r>

08004db6 <__sseek>:
 8004db6:	b510      	push	{r4, lr}
 8004db8:	460c      	mov	r4, r1
 8004dba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004dbe:	f000 f855 	bl	8004e6c <_lseek_r>
 8004dc2:	1c43      	adds	r3, r0, #1
 8004dc4:	89a3      	ldrh	r3, [r4, #12]
 8004dc6:	bf15      	itete	ne
 8004dc8:	6560      	strne	r0, [r4, #84]	; 0x54
 8004dca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004dce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004dd2:	81a3      	strheq	r3, [r4, #12]
 8004dd4:	bf18      	it	ne
 8004dd6:	81a3      	strhne	r3, [r4, #12]
 8004dd8:	bd10      	pop	{r4, pc}

08004dda <__sclose>:
 8004dda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004dde:	f000 b813 	b.w	8004e08 <_close_r>
	...

08004de4 <_write_r>:
 8004de4:	b538      	push	{r3, r4, r5, lr}
 8004de6:	4604      	mov	r4, r0
 8004de8:	4608      	mov	r0, r1
 8004dea:	4611      	mov	r1, r2
 8004dec:	2200      	movs	r2, #0
 8004dee:	4d05      	ldr	r5, [pc, #20]	; (8004e04 <_write_r+0x20>)
 8004df0:	602a      	str	r2, [r5, #0]
 8004df2:	461a      	mov	r2, r3
 8004df4:	f7fb ffb6 	bl	8000d64 <_write>
 8004df8:	1c43      	adds	r3, r0, #1
 8004dfa:	d102      	bne.n	8004e02 <_write_r+0x1e>
 8004dfc:	682b      	ldr	r3, [r5, #0]
 8004dfe:	b103      	cbz	r3, 8004e02 <_write_r+0x1e>
 8004e00:	6023      	str	r3, [r4, #0]
 8004e02:	bd38      	pop	{r3, r4, r5, pc}
 8004e04:	20001310 	.word	0x20001310

08004e08 <_close_r>:
 8004e08:	b538      	push	{r3, r4, r5, lr}
 8004e0a:	2300      	movs	r3, #0
 8004e0c:	4d05      	ldr	r5, [pc, #20]	; (8004e24 <_close_r+0x1c>)
 8004e0e:	4604      	mov	r4, r0
 8004e10:	4608      	mov	r0, r1
 8004e12:	602b      	str	r3, [r5, #0]
 8004e14:	f7fb ffc2 	bl	8000d9c <_close>
 8004e18:	1c43      	adds	r3, r0, #1
 8004e1a:	d102      	bne.n	8004e22 <_close_r+0x1a>
 8004e1c:	682b      	ldr	r3, [r5, #0]
 8004e1e:	b103      	cbz	r3, 8004e22 <_close_r+0x1a>
 8004e20:	6023      	str	r3, [r4, #0]
 8004e22:	bd38      	pop	{r3, r4, r5, pc}
 8004e24:	20001310 	.word	0x20001310

08004e28 <_fstat_r>:
 8004e28:	b538      	push	{r3, r4, r5, lr}
 8004e2a:	2300      	movs	r3, #0
 8004e2c:	4d06      	ldr	r5, [pc, #24]	; (8004e48 <_fstat_r+0x20>)
 8004e2e:	4604      	mov	r4, r0
 8004e30:	4608      	mov	r0, r1
 8004e32:	4611      	mov	r1, r2
 8004e34:	602b      	str	r3, [r5, #0]
 8004e36:	f7fb ffbc 	bl	8000db2 <_fstat>
 8004e3a:	1c43      	adds	r3, r0, #1
 8004e3c:	d102      	bne.n	8004e44 <_fstat_r+0x1c>
 8004e3e:	682b      	ldr	r3, [r5, #0]
 8004e40:	b103      	cbz	r3, 8004e44 <_fstat_r+0x1c>
 8004e42:	6023      	str	r3, [r4, #0]
 8004e44:	bd38      	pop	{r3, r4, r5, pc}
 8004e46:	bf00      	nop
 8004e48:	20001310 	.word	0x20001310

08004e4c <_isatty_r>:
 8004e4c:	b538      	push	{r3, r4, r5, lr}
 8004e4e:	2300      	movs	r3, #0
 8004e50:	4d05      	ldr	r5, [pc, #20]	; (8004e68 <_isatty_r+0x1c>)
 8004e52:	4604      	mov	r4, r0
 8004e54:	4608      	mov	r0, r1
 8004e56:	602b      	str	r3, [r5, #0]
 8004e58:	f7fb ffba 	bl	8000dd0 <_isatty>
 8004e5c:	1c43      	adds	r3, r0, #1
 8004e5e:	d102      	bne.n	8004e66 <_isatty_r+0x1a>
 8004e60:	682b      	ldr	r3, [r5, #0]
 8004e62:	b103      	cbz	r3, 8004e66 <_isatty_r+0x1a>
 8004e64:	6023      	str	r3, [r4, #0]
 8004e66:	bd38      	pop	{r3, r4, r5, pc}
 8004e68:	20001310 	.word	0x20001310

08004e6c <_lseek_r>:
 8004e6c:	b538      	push	{r3, r4, r5, lr}
 8004e6e:	4604      	mov	r4, r0
 8004e70:	4608      	mov	r0, r1
 8004e72:	4611      	mov	r1, r2
 8004e74:	2200      	movs	r2, #0
 8004e76:	4d05      	ldr	r5, [pc, #20]	; (8004e8c <_lseek_r+0x20>)
 8004e78:	602a      	str	r2, [r5, #0]
 8004e7a:	461a      	mov	r2, r3
 8004e7c:	f7fb ffb2 	bl	8000de4 <_lseek>
 8004e80:	1c43      	adds	r3, r0, #1
 8004e82:	d102      	bne.n	8004e8a <_lseek_r+0x1e>
 8004e84:	682b      	ldr	r3, [r5, #0]
 8004e86:	b103      	cbz	r3, 8004e8a <_lseek_r+0x1e>
 8004e88:	6023      	str	r3, [r4, #0]
 8004e8a:	bd38      	pop	{r3, r4, r5, pc}
 8004e8c:	20001310 	.word	0x20001310

08004e90 <_malloc_usable_size_r>:
 8004e90:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004e94:	1f18      	subs	r0, r3, #4
 8004e96:	2b00      	cmp	r3, #0
 8004e98:	bfbc      	itt	lt
 8004e9a:	580b      	ldrlt	r3, [r1, r0]
 8004e9c:	18c0      	addlt	r0, r0, r3
 8004e9e:	4770      	bx	lr

08004ea0 <_read_r>:
 8004ea0:	b538      	push	{r3, r4, r5, lr}
 8004ea2:	4604      	mov	r4, r0
 8004ea4:	4608      	mov	r0, r1
 8004ea6:	4611      	mov	r1, r2
 8004ea8:	2200      	movs	r2, #0
 8004eaa:	4d05      	ldr	r5, [pc, #20]	; (8004ec0 <_read_r+0x20>)
 8004eac:	602a      	str	r2, [r5, #0]
 8004eae:	461a      	mov	r2, r3
 8004eb0:	f7fb ff3b 	bl	8000d2a <_read>
 8004eb4:	1c43      	adds	r3, r0, #1
 8004eb6:	d102      	bne.n	8004ebe <_read_r+0x1e>
 8004eb8:	682b      	ldr	r3, [r5, #0]
 8004eba:	b103      	cbz	r3, 8004ebe <_read_r+0x1e>
 8004ebc:	6023      	str	r3, [r4, #0]
 8004ebe:	bd38      	pop	{r3, r4, r5, pc}
 8004ec0:	20001310 	.word	0x20001310

08004ec4 <_gettimeofday>:
 8004ec4:	2258      	movs	r2, #88	; 0x58
 8004ec6:	4b02      	ldr	r3, [pc, #8]	; (8004ed0 <_gettimeofday+0xc>)
 8004ec8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004ecc:	601a      	str	r2, [r3, #0]
 8004ece:	4770      	bx	lr
 8004ed0:	20001310 	.word	0x20001310

08004ed4 <_init>:
 8004ed4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004ed6:	bf00      	nop
 8004ed8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004eda:	bc08      	pop	{r3}
 8004edc:	469e      	mov	lr, r3
 8004ede:	4770      	bx	lr

08004ee0 <_fini>:
 8004ee0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004ee2:	bf00      	nop
 8004ee4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004ee6:	bc08      	pop	{r3}
 8004ee8:	469e      	mov	lr, r3
 8004eea:	4770      	bx	lr

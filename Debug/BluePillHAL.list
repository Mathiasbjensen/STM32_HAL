
BluePillHAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000516c  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001ec  0800527c  0800527c  0001527c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005468  08005468  00020144  2**0
                  CONTENTS
  4 .ARM          00000000  08005468  08005468  00020144  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005468  08005468  00020144  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005468  08005468  00015468  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800546c  0800546c  0001546c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000144  20000000  08005470  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000014cc  20000144  080055b4  00020144  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20001610  080055b4  00021610  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020144  2**0
                  CONTENTS, READONLY
 12 .debug_info   00012cbc  00000000  00000000  0002016d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002e4a  00000000  00000000  00032e29  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001110  00000000  00000000  00035c78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000fc8  00000000  00000000  00036d88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019cb5  00000000  00000000  00037d50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00010cee  00000000  00000000  00051a05  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00093b82  00000000  00000000  000626f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f6275  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005238  00000000  00000000  000f62c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         00000024  00000000  00000000  000fb500  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      0000004e  00000000  00000000  000fb524  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000144 	.word	0x20000144
 800012c:	00000000 	.word	0x00000000
 8000130:	08005264 	.word	0x08005264

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000148 	.word	0x20000148
 800014c:	08005264 	.word	0x08005264

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <vApplicationGetIdleTaskMemory>:
 8000160:	b480      	push	{r7}
 8000162:	b085      	sub	sp, #20
 8000164:	af00      	add	r7, sp, #0
 8000166:	60f8      	str	r0, [r7, #12]
 8000168:	60b9      	str	r1, [r7, #8]
 800016a:	607a      	str	r2, [r7, #4]
 800016c:	68fb      	ldr	r3, [r7, #12]
 800016e:	4a06      	ldr	r2, [pc, #24]	; (8000188 <vApplicationGetIdleTaskMemory+0x28>)
 8000170:	601a      	str	r2, [r3, #0]
 8000172:	68bb      	ldr	r3, [r7, #8]
 8000174:	4a05      	ldr	r2, [pc, #20]	; (800018c <vApplicationGetIdleTaskMemory+0x2c>)
 8000176:	601a      	str	r2, [r3, #0]
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	2280      	movs	r2, #128	; 0x80
 800017c:	601a      	str	r2, [r3, #0]
 800017e:	bf00      	nop
 8000180:	3714      	adds	r7, #20
 8000182:	46bd      	mov	sp, r7
 8000184:	bc80      	pop	{r7}
 8000186:	4770      	bx	lr
 8000188:	20000160 	.word	0x20000160
 800018c:	200001b4 	.word	0x200001b4

08000190 <SARA_Init>:
	HAL_UART_Receive(&huart1, msg, 60, 10)

}*/


void SARA_Init() {
 8000190:	b580      	push	{r7, lr}
 8000192:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARApause, strlen(SARApause), 50);
 8000194:	4833      	ldr	r0, [pc, #204]	; (8000264 <SARA_Init+0xd4>)
 8000196:	f7ff ffdb 	bl	8000150 <strlen>
 800019a:	4603      	mov	r3, r0
 800019c:	b29a      	uxth	r2, r3
 800019e:	2332      	movs	r3, #50	; 0x32
 80001a0:	4930      	ldr	r1, [pc, #192]	; (8000264 <SARA_Init+0xd4>)
 80001a2:	4831      	ldr	r0, [pc, #196]	; (8000268 <SARA_Init+0xd8>)
 80001a4:	f002 f9f5 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001a8:	2364      	movs	r3, #100	; 0x64
 80001aa:	2280      	movs	r2, #128	; 0x80
 80001ac:	492f      	ldr	r1, [pc, #188]	; (800026c <SARA_Init+0xdc>)
 80001ae:	482e      	ldr	r0, [pc, #184]	; (8000268 <SARA_Init+0xd8>)
 80001b0:	f002 fa81 	bl	80026b6 <HAL_UART_Receive>
	osDelay(500);
 80001b4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001b8:	f002 fc5e 	bl	8002a78 <osDelay>
	HAL_UART_Transmit(&huart1, SARAumnoprof, strlen(SARAumnoprof), 50);
 80001bc:	482c      	ldr	r0, [pc, #176]	; (8000270 <SARA_Init+0xe0>)
 80001be:	f7ff ffc7 	bl	8000150 <strlen>
 80001c2:	4603      	mov	r3, r0
 80001c4:	b29a      	uxth	r2, r3
 80001c6:	2332      	movs	r3, #50	; 0x32
 80001c8:	4929      	ldr	r1, [pc, #164]	; (8000270 <SARA_Init+0xe0>)
 80001ca:	4827      	ldr	r0, [pc, #156]	; (8000268 <SARA_Init+0xd8>)
 80001cc:	f002 f9e1 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001d0:	2364      	movs	r3, #100	; 0x64
 80001d2:	2280      	movs	r2, #128	; 0x80
 80001d4:	4925      	ldr	r1, [pc, #148]	; (800026c <SARA_Init+0xdc>)
 80001d6:	4824      	ldr	r0, [pc, #144]	; (8000268 <SARA_Init+0xd8>)
 80001d8:	f002 fa6d 	bl	80026b6 <HAL_UART_Receive>
	osDelay(500);
 80001dc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001e0:	f002 fc4a 	bl	8002a78 <osDelay>
	//HAL_UART_Transmit(&huart1, cereg, strlen(cereg), 10);
	//osDelay(250);
	HAL_UART_Transmit(&huart1, SARAcops, strlen(SARAcops), 50);
 80001e4:	4823      	ldr	r0, [pc, #140]	; (8000274 <SARA_Init+0xe4>)
 80001e6:	f7ff ffb3 	bl	8000150 <strlen>
 80001ea:	4603      	mov	r3, r0
 80001ec:	b29a      	uxth	r2, r3
 80001ee:	2332      	movs	r3, #50	; 0x32
 80001f0:	4920      	ldr	r1, [pc, #128]	; (8000274 <SARA_Init+0xe4>)
 80001f2:	481d      	ldr	r0, [pc, #116]	; (8000268 <SARA_Init+0xd8>)
 80001f4:	f002 f9cd 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001f8:	2364      	movs	r3, #100	; 0x64
 80001fa:	2280      	movs	r2, #128	; 0x80
 80001fc:	491b      	ldr	r1, [pc, #108]	; (800026c <SARA_Init+0xdc>)
 80001fe:	481a      	ldr	r0, [pc, #104]	; (8000268 <SARA_Init+0xd8>)
 8000200:	f002 fa59 	bl	80026b6 <HAL_UART_Receive>
	osDelay(500);
 8000204:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000208:	f002 fc36 	bl	8002a78 <osDelay>
	HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 50);
 800020c:	481a      	ldr	r0, [pc, #104]	; (8000278 <SARA_Init+0xe8>)
 800020e:	f7ff ff9f 	bl	8000150 <strlen>
 8000212:	4603      	mov	r3, r0
 8000214:	b29a      	uxth	r2, r3
 8000216:	2332      	movs	r3, #50	; 0x32
 8000218:	4917      	ldr	r1, [pc, #92]	; (8000278 <SARA_Init+0xe8>)
 800021a:	4813      	ldr	r0, [pc, #76]	; (8000268 <SARA_Init+0xd8>)
 800021c:	f002 f9b9 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000220:	2364      	movs	r3, #100	; 0x64
 8000222:	2280      	movs	r2, #128	; 0x80
 8000224:	4911      	ldr	r1, [pc, #68]	; (800026c <SARA_Init+0xdc>)
 8000226:	4810      	ldr	r0, [pc, #64]	; (8000268 <SARA_Init+0xd8>)
 8000228:	f002 fa45 	bl	80026b6 <HAL_UART_Receive>

	HAL_UART_Transmit(&huart1, SARApause, strlen(SARApause), 50);
 800022c:	480d      	ldr	r0, [pc, #52]	; (8000264 <SARA_Init+0xd4>)
 800022e:	f7ff ff8f 	bl	8000150 <strlen>
 8000232:	4603      	mov	r3, r0
 8000234:	b29a      	uxth	r2, r3
 8000236:	2332      	movs	r3, #50	; 0x32
 8000238:	490a      	ldr	r1, [pc, #40]	; (8000264 <SARA_Init+0xd4>)
 800023a:	480b      	ldr	r0, [pc, #44]	; (8000268 <SARA_Init+0xd8>)
 800023c:	f002 f9a9 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000240:	2364      	movs	r3, #100	; 0x64
 8000242:	2280      	movs	r2, #128	; 0x80
 8000244:	4909      	ldr	r1, [pc, #36]	; (800026c <SARA_Init+0xdc>)
 8000246:	4808      	ldr	r0, [pc, #32]	; (8000268 <SARA_Init+0xd8>)
 8000248:	f002 fa35 	bl	80026b6 <HAL_UART_Receive>

	osDelay(500);
 800024c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000250:	f002 fc12 	bl	8002a78 <osDelay>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000254:	2364      	movs	r3, #100	; 0x64
 8000256:	2280      	movs	r2, #128	; 0x80
 8000258:	4904      	ldr	r1, [pc, #16]	; (800026c <SARA_Init+0xdc>)
 800025a:	4803      	ldr	r0, [pc, #12]	; (8000268 <SARA_Init+0xd8>)
 800025c:	f002 fa2b 	bl	80026b6 <HAL_UART_Receive>

}
 8000260:	bf00      	nop
 8000262:	bd80      	pop	{r7, pc}
 8000264:	20000004 	.word	0x20000004
 8000268:	200012ac 	.word	0x200012ac
 800026c:	200011dc 	.word	0x200011dc
 8000270:	2000000c 	.word	0x2000000c
 8000274:	20000020 	.word	0x20000020
 8000278:	20000030 	.word	0x20000030

0800027c <nemeus_Power_Cycle>:

void nemeus_Power_Cycle() {
 800027c:	b580      	push	{r7, lr}
 800027e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8000280:	2200      	movs	r2, #0
 8000282:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000286:	4832      	ldr	r0, [pc, #200]	; (8000350 <nemeus_Power_Cycle+0xd4>)
 8000288:	f001 fa70 	bl	800176c <HAL_GPIO_WritePin>
    osDelay(1500);
 800028c:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8000290:	f002 fbf2 	bl	8002a78 <osDelay>
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000294:	2201      	movs	r2, #1
 8000296:	f44f 7180 	mov.w	r1, #256	; 0x100
 800029a:	482d      	ldr	r0, [pc, #180]	; (8000350 <nemeus_Power_Cycle+0xd4>)
 800029c:	f001 fa66 	bl	800176c <HAL_GPIO_WritePin>
	//osDelay(150);
    HAL_UART_Receive(&huart3, trash, 128, 150);
 80002a0:	2396      	movs	r3, #150	; 0x96
 80002a2:	2280      	movs	r2, #128	; 0x80
 80002a4:	492b      	ldr	r1, [pc, #172]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002a6:	482c      	ldr	r0, [pc, #176]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002a8:	f002 fa05 	bl	80026b6 <HAL_UART_Receive>

	HAL_UART_Transmit(&huart3, syncLora, strlen(syncLora), 10);
 80002ac:	482b      	ldr	r0, [pc, #172]	; (800035c <nemeus_Power_Cycle+0xe0>)
 80002ae:	f7ff ff4f 	bl	8000150 <strlen>
 80002b2:	4603      	mov	r3, r0
 80002b4:	b29a      	uxth	r2, r3
 80002b6:	230a      	movs	r3, #10
 80002b8:	4928      	ldr	r1, [pc, #160]	; (800035c <nemeus_Power_Cycle+0xe0>)
 80002ba:	4827      	ldr	r0, [pc, #156]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002bc:	f002 f969 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002c0:	2364      	movs	r3, #100	; 0x64
 80002c2:	2280      	movs	r2, #128	; 0x80
 80002c4:	4923      	ldr	r1, [pc, #140]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002c6:	4824      	ldr	r0, [pc, #144]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002c8:	f002 f9f5 	bl	80026b6 <HAL_UART_Receive>
	osDelay(500);
 80002cc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80002d0:	f002 fbd2 	bl	8002a78 <osDelay>

	HAL_UART_Transmit(&huart3, beginLora, strlen(beginLora), 10);
 80002d4:	4822      	ldr	r0, [pc, #136]	; (8000360 <nemeus_Power_Cycle+0xe4>)
 80002d6:	f7ff ff3b 	bl	8000150 <strlen>
 80002da:	4603      	mov	r3, r0
 80002dc:	b29a      	uxth	r2, r3
 80002de:	230a      	movs	r3, #10
 80002e0:	491f      	ldr	r1, [pc, #124]	; (8000360 <nemeus_Power_Cycle+0xe4>)
 80002e2:	481d      	ldr	r0, [pc, #116]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002e4:	f002 f955 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002e8:	2364      	movs	r3, #100	; 0x64
 80002ea:	2280      	movs	r2, #128	; 0x80
 80002ec:	4919      	ldr	r1, [pc, #100]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002ee:	481a      	ldr	r0, [pc, #104]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002f0:	f002 f9e1 	bl	80026b6 <HAL_UART_Receive>
	//osDelay(1500);
	memset(trash, '\0', 128);
 80002f4:	2280      	movs	r2, #128	; 0x80
 80002f6:	2100      	movs	r1, #0
 80002f8:	4816      	ldr	r0, [pc, #88]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002fa:	f003 fd61 	bl	8003dc0 <memset>
	//HAL_UART_Receive(&huart3, trash, 128, 4000);
	HAL_UART_Receive(&huart3, trash, 10, 40000);
 80002fe:	f649 4340 	movw	r3, #40000	; 0x9c40
 8000302:	220a      	movs	r2, #10
 8000304:	4913      	ldr	r1, [pc, #76]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000306:	4814      	ldr	r0, [pc, #80]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000308:	f002 f9d5 	bl	80026b6 <HAL_UART_Receive>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800030c:	2364      	movs	r3, #100	; 0x64
 800030e:	2280      	movs	r2, #128	; 0x80
 8000310:	4910      	ldr	r1, [pc, #64]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000312:	4811      	ldr	r0, [pc, #68]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000314:	f002 f9cf 	bl	80026b6 <HAL_UART_Receive>

	HAL_UART_Transmit(&huart3, beginSigfox, strlen(beginSigfox), 10);
 8000318:	4812      	ldr	r0, [pc, #72]	; (8000364 <nemeus_Power_Cycle+0xe8>)
 800031a:	f7ff ff19 	bl	8000150 <strlen>
 800031e:	4603      	mov	r3, r0
 8000320:	b29a      	uxth	r2, r3
 8000322:	230a      	movs	r3, #10
 8000324:	490f      	ldr	r1, [pc, #60]	; (8000364 <nemeus_Power_Cycle+0xe8>)
 8000326:	480c      	ldr	r0, [pc, #48]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000328:	f002 f933 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800032c:	2364      	movs	r3, #100	; 0x64
 800032e:	2280      	movs	r2, #128	; 0x80
 8000330:	4908      	ldr	r1, [pc, #32]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000332:	4809      	ldr	r0, [pc, #36]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000334:	f002 f9bf 	bl	80026b6 <HAL_UART_Receive>
	osDelay(50);
 8000338:	2032      	movs	r0, #50	; 0x32
 800033a:	f002 fb9d 	bl	8002a78 <osDelay>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800033e:	2364      	movs	r3, #100	; 0x64
 8000340:	2280      	movs	r2, #128	; 0x80
 8000342:	4904      	ldr	r1, [pc, #16]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000344:	4804      	ldr	r0, [pc, #16]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000346:	f002 f9b6 	bl	80026b6 <HAL_UART_Receive>


}
 800034a:	bf00      	nop
 800034c:	bd80      	pop	{r7, pc}
 800034e:	bf00      	nop
 8000350:	40010800 	.word	0x40010800
 8000354:	200011dc 	.word	0x200011dc
 8000358:	20001194 	.word	0x20001194
 800035c:	2000007c 	.word	0x2000007c
 8000360:	20000088 	.word	0x20000088
 8000364:	200000ac 	.word	0x200000ac

08000368 <SARA_ChangeTech>:
	HAL_UART_Receive(&huart1, SARAresult, 128, 100);
}



void SARA_ChangeTech(uint8_t tech){ //tech should be 9 for NB
 8000368:	b580      	push	{r7, lr}
 800036a:	b084      	sub	sp, #16
 800036c:	af00      	add	r7, sp, #0
 800036e:	4603      	mov	r3, r0
 8000370:	71fb      	strb	r3, [r7, #7]

	if(tech == '7'){ //LTE-M
 8000372:	79fb      	ldrb	r3, [r7, #7]
 8000374:	2b37      	cmp	r3, #55	; 0x37
 8000376:	d10a      	bne.n	800038e <SARA_ChangeTech+0x26>
		HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 10);
 8000378:	481a      	ldr	r0, [pc, #104]	; (80003e4 <SARA_ChangeTech+0x7c>)
 800037a:	f7ff fee9 	bl	8000150 <strlen>
 800037e:	4603      	mov	r3, r0
 8000380:	b29a      	uxth	r2, r3
 8000382:	230a      	movs	r3, #10
 8000384:	4917      	ldr	r1, [pc, #92]	; (80003e4 <SARA_ChangeTech+0x7c>)
 8000386:	4818      	ldr	r0, [pc, #96]	; (80003e8 <SARA_ChangeTech+0x80>)
 8000388:	f002 f903 	bl	8002592 <HAL_UART_Transmit>
 800038c:	e009      	b.n	80003a2 <SARA_ChangeTech+0x3a>
	} else { //8 = NB IOT
		HAL_UART_Transmit(&huart1, SARAconnNB, strlen(SARAconnNB), 10);
 800038e:	4817      	ldr	r0, [pc, #92]	; (80003ec <SARA_ChangeTech+0x84>)
 8000390:	f7ff fede 	bl	8000150 <strlen>
 8000394:	4603      	mov	r3, r0
 8000396:	b29a      	uxth	r2, r3
 8000398:	230a      	movs	r3, #10
 800039a:	4914      	ldr	r1, [pc, #80]	; (80003ec <SARA_ChangeTech+0x84>)
 800039c:	4812      	ldr	r0, [pc, #72]	; (80003e8 <SARA_ChangeTech+0x80>)
 800039e:	f002 f8f8 	bl	8002592 <HAL_UART_Transmit>
	}
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80003a2:	2364      	movs	r3, #100	; 0x64
 80003a4:	2280      	movs	r2, #128	; 0x80
 80003a6:	4912      	ldr	r1, [pc, #72]	; (80003f0 <SARA_ChangeTech+0x88>)
 80003a8:	480f      	ldr	r0, [pc, #60]	; (80003e8 <SARA_ChangeTech+0x80>)
 80003aa:	f002 f984 	bl	80026b6 <HAL_UART_Receive>

	uint8_t curTech; //if -1 then dont do following
	int i = 0;
 80003ae:	2300      	movs	r3, #0
 80003b0:	60fb      	str	r3, [r7, #12]
	do {
		SARA_CheckTech();
 80003b2:	f000 f823 	bl	80003fc <SARA_CheckTech>
		getResultParameterURAT(3, SARAtech);
 80003b6:	490f      	ldr	r1, [pc, #60]	; (80003f4 <SARA_ChangeTech+0x8c>)
 80003b8:	2003      	movs	r0, #3
 80003ba:	f000 f83b 	bl	8000434 <getResultParameterURAT>
		//SARA_Get_Current_URAT(SARAtech);
		osDelay(2500);
 80003be:	f640 10c4 	movw	r0, #2500	; 0x9c4
 80003c2:	f002 fb59 	bl	8002a78 <osDelay>
		i++;
 80003c6:	68fb      	ldr	r3, [r7, #12]
 80003c8:	3301      	adds	r3, #1
 80003ca:	60fb      	str	r3, [r7, #12]
		//sendToESP(SARATechnology);
	} while (SARATechnology[0] != tech && i < 15);
 80003cc:	4b0a      	ldr	r3, [pc, #40]	; (80003f8 <SARA_ChangeTech+0x90>)
 80003ce:	781b      	ldrb	r3, [r3, #0]
 80003d0:	79fa      	ldrb	r2, [r7, #7]
 80003d2:	429a      	cmp	r2, r3
 80003d4:	d002      	beq.n	80003dc <SARA_ChangeTech+0x74>
 80003d6:	68fb      	ldr	r3, [r7, #12]
 80003d8:	2b0e      	cmp	r3, #14
 80003da:	ddea      	ble.n	80003b2 <SARA_ChangeTech+0x4a>
}
 80003dc:	bf00      	nop
 80003de:	3710      	adds	r7, #16
 80003e0:	46bd      	mov	sp, r7
 80003e2:	bd80      	pop	{r7, pc}
 80003e4:	20000030 	.word	0x20000030
 80003e8:	200012ac 	.word	0x200012ac
 80003ec:	2000003c 	.word	0x2000003c
 80003f0:	200011dc 	.word	0x200011dc
 80003f4:	20001538 	.word	0x20001538
 80003f8:	200012a8 	.word	0x200012a8

080003fc <SARA_CheckTech>:

void SARA_CheckTech(){
 80003fc:	b580      	push	{r7, lr}
 80003fe:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARAcopsCheck, strlen(SARAcopsCheck), 10);
 8000400:	4809      	ldr	r0, [pc, #36]	; (8000428 <SARA_CheckTech+0x2c>)
 8000402:	f7ff fea5 	bl	8000150 <strlen>
 8000406:	4603      	mov	r3, r0
 8000408:	b29a      	uxth	r2, r3
 800040a:	230a      	movs	r3, #10
 800040c:	4906      	ldr	r1, [pc, #24]	; (8000428 <SARA_CheckTech+0x2c>)
 800040e:	4807      	ldr	r0, [pc, #28]	; (800042c <SARA_CheckTech+0x30>)
 8000410:	f002 f8bf 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, SARAtech, 30, 750);
 8000414:	f240 23ee 	movw	r3, #750	; 0x2ee
 8000418:	221e      	movs	r2, #30
 800041a:	4905      	ldr	r1, [pc, #20]	; (8000430 <SARA_CheckTech+0x34>)
 800041c:	4803      	ldr	r0, [pc, #12]	; (800042c <SARA_CheckTech+0x30>)
 800041e:	f002 f94a 	bl	80026b6 <HAL_UART_Receive>
	//sendToESP(SARAtech);
}
 8000422:	bf00      	nop
 8000424:	bd80      	pop	{r7, pc}
 8000426:	bf00      	nop
 8000428:	20000048 	.word	0x20000048
 800042c:	200012ac 	.word	0x200012ac
 8000430:	20001538 	.word	0x20001538

08000434 <getResultParameterURAT>:
*/




void getResultParameterURAT(int nParam, uint8_t * msg){
 8000434:	b480      	push	{r7}
 8000436:	b085      	sub	sp, #20
 8000438:	af00      	add	r7, sp, #0
 800043a:	6078      	str	r0, [r7, #4]
 800043c:	6039      	str	r1, [r7, #0]
	int commaCnt = 0;
 800043e:	2300      	movs	r3, #0
 8000440:	60fb      	str	r3, [r7, #12]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 8000442:	2300      	movs	r3, #0
 8000444:	60bb      	str	r3, [r7, #8]
	while (msg[i] != '\0'){
 8000446:	e01e      	b.n	8000486 <getResultParameterURAT+0x52>
		if(msg[i] == ',' && commaCnt == nParam-1){
 8000448:	68bb      	ldr	r3, [r7, #8]
 800044a:	683a      	ldr	r2, [r7, #0]
 800044c:	4413      	add	r3, r2
 800044e:	781b      	ldrb	r3, [r3, #0]
 8000450:	2b2c      	cmp	r3, #44	; 0x2c
 8000452:	d10c      	bne.n	800046e <getResultParameterURAT+0x3a>
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	3b01      	subs	r3, #1
 8000458:	68fa      	ldr	r2, [r7, #12]
 800045a:	429a      	cmp	r2, r3
 800045c:	d107      	bne.n	800046e <getResultParameterURAT+0x3a>
			SARATechnology[0] = msg[i+1];
 800045e:	68bb      	ldr	r3, [r7, #8]
 8000460:	3301      	adds	r3, #1
 8000462:	683a      	ldr	r2, [r7, #0]
 8000464:	4413      	add	r3, r2
 8000466:	781a      	ldrb	r2, [r3, #0]
 8000468:	4b0c      	ldr	r3, [pc, #48]	; (800049c <getResultParameterURAT+0x68>)
 800046a:	701a      	strb	r2, [r3, #0]
			return;
 800046c:	e011      	b.n	8000492 <getResultParameterURAT+0x5e>
		} else if(msg[i] == ','){
 800046e:	68bb      	ldr	r3, [r7, #8]
 8000470:	683a      	ldr	r2, [r7, #0]
 8000472:	4413      	add	r3, r2
 8000474:	781b      	ldrb	r3, [r3, #0]
 8000476:	2b2c      	cmp	r3, #44	; 0x2c
 8000478:	d102      	bne.n	8000480 <getResultParameterURAT+0x4c>
			commaCnt++;
 800047a:	68fb      	ldr	r3, [r7, #12]
 800047c:	3301      	adds	r3, #1
 800047e:	60fb      	str	r3, [r7, #12]
			//sendToESP(testing);
		}
		i++;
 8000480:	68bb      	ldr	r3, [r7, #8]
 8000482:	3301      	adds	r3, #1
 8000484:	60bb      	str	r3, [r7, #8]
	while (msg[i] != '\0'){
 8000486:	68bb      	ldr	r3, [r7, #8]
 8000488:	683a      	ldr	r2, [r7, #0]
 800048a:	4413      	add	r3, r2
 800048c:	781b      	ldrb	r3, [r3, #0]
 800048e:	2b00      	cmp	r3, #0
 8000490:	d1da      	bne.n	8000448 <getResultParameterURAT+0x14>
		//osDelay(400);
	}
}
 8000492:	3714      	adds	r7, #20
 8000494:	46bd      	mov	sp, r7
 8000496:	bc80      	pop	{r7}
 8000498:	4770      	bx	lr
 800049a:	bf00      	nop
 800049c:	200012a8 	.word	0x200012a8

080004a0 <getResultParameterCESQ>:


void getResultParameterCESQ(int nParam, uint8_t * msg){
 80004a0:	b480      	push	{r7}
 80004a2:	b087      	sub	sp, #28
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	6078      	str	r0, [r7, #4]
 80004a8:	6039      	str	r1, [r7, #0]
	int commaCnt = 0;
 80004aa:	2300      	movs	r3, #0
 80004ac:	617b      	str	r3, [r7, #20]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 80004ae:	2300      	movs	r3, #0
 80004b0:	613b      	str	r3, [r7, #16]
	int j = 1;
 80004b2:	2301      	movs	r3, #1
 80004b4:	60fb      	str	r3, [r7, #12]
	while (msg[i] != '\0'){
 80004b6:	e03b      	b.n	8000530 <getResultParameterCESQ+0x90>
		if(msg[i] == ',' && commaCnt == nParam-1){
 80004b8:	693b      	ldr	r3, [r7, #16]
 80004ba:	683a      	ldr	r2, [r7, #0]
 80004bc:	4413      	add	r3, r2
 80004be:	781b      	ldrb	r3, [r3, #0]
 80004c0:	2b2c      	cmp	r3, #44	; 0x2c
 80004c2:	d129      	bne.n	8000518 <getResultParameterCESQ+0x78>
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	3b01      	subs	r3, #1
 80004c8:	697a      	ldr	r2, [r7, #20]
 80004ca:	429a      	cmp	r2, r3
 80004cc:	d124      	bne.n	8000518 <getResultParameterCESQ+0x78>
			while (j <= 5 && msg[i+j] != '\r' && msg[i+j] != '\n'){
 80004ce:	e00d      	b.n	80004ec <getResultParameterCESQ+0x4c>
				SARARsrpRsrq[j-1] = msg[i+j];
 80004d0:	693a      	ldr	r2, [r7, #16]
 80004d2:	68fb      	ldr	r3, [r7, #12]
 80004d4:	4413      	add	r3, r2
 80004d6:	461a      	mov	r2, r3
 80004d8:	683b      	ldr	r3, [r7, #0]
 80004da:	441a      	add	r2, r3
 80004dc:	68fb      	ldr	r3, [r7, #12]
 80004de:	3b01      	subs	r3, #1
 80004e0:	7811      	ldrb	r1, [r2, #0]
 80004e2:	4a19      	ldr	r2, [pc, #100]	; (8000548 <getResultParameterCESQ+0xa8>)
 80004e4:	54d1      	strb	r1, [r2, r3]
				j++;
 80004e6:	68fb      	ldr	r3, [r7, #12]
 80004e8:	3301      	adds	r3, #1
 80004ea:	60fb      	str	r3, [r7, #12]
			while (j <= 5 && msg[i+j] != '\r' && msg[i+j] != '\n'){
 80004ec:	68fb      	ldr	r3, [r7, #12]
 80004ee:	2b05      	cmp	r3, #5
 80004f0:	dc25      	bgt.n	800053e <getResultParameterCESQ+0x9e>
 80004f2:	693a      	ldr	r2, [r7, #16]
 80004f4:	68fb      	ldr	r3, [r7, #12]
 80004f6:	4413      	add	r3, r2
 80004f8:	461a      	mov	r2, r3
 80004fa:	683b      	ldr	r3, [r7, #0]
 80004fc:	4413      	add	r3, r2
 80004fe:	781b      	ldrb	r3, [r3, #0]
 8000500:	2b0d      	cmp	r3, #13
 8000502:	d01c      	beq.n	800053e <getResultParameterCESQ+0x9e>
 8000504:	693a      	ldr	r2, [r7, #16]
 8000506:	68fb      	ldr	r3, [r7, #12]
 8000508:	4413      	add	r3, r2
 800050a:	461a      	mov	r2, r3
 800050c:	683b      	ldr	r3, [r7, #0]
 800050e:	4413      	add	r3, r2
 8000510:	781b      	ldrb	r3, [r3, #0]
 8000512:	2b0a      	cmp	r3, #10
 8000514:	d1dc      	bne.n	80004d0 <getResultParameterCESQ+0x30>
			}
			return;
 8000516:	e012      	b.n	800053e <getResultParameterCESQ+0x9e>
		} else if(msg[i] == ','){
 8000518:	693b      	ldr	r3, [r7, #16]
 800051a:	683a      	ldr	r2, [r7, #0]
 800051c:	4413      	add	r3, r2
 800051e:	781b      	ldrb	r3, [r3, #0]
 8000520:	2b2c      	cmp	r3, #44	; 0x2c
 8000522:	d102      	bne.n	800052a <getResultParameterCESQ+0x8a>
			commaCnt++;
 8000524:	697b      	ldr	r3, [r7, #20]
 8000526:	3301      	adds	r3, #1
 8000528:	617b      	str	r3, [r7, #20]
			//sendToESP(testing);
		}
		i++;
 800052a:	693b      	ldr	r3, [r7, #16]
 800052c:	3301      	adds	r3, #1
 800052e:	613b      	str	r3, [r7, #16]
	while (msg[i] != '\0'){
 8000530:	693b      	ldr	r3, [r7, #16]
 8000532:	683a      	ldr	r2, [r7, #0]
 8000534:	4413      	add	r3, r2
 8000536:	781b      	ldrb	r3, [r3, #0]
 8000538:	2b00      	cmp	r3, #0
 800053a:	d1bd      	bne.n	80004b8 <getResultParameterCESQ+0x18>
 800053c:	e000      	b.n	8000540 <getResultParameterCESQ+0xa0>
			return;
 800053e:	bf00      	nop
		//osDelay(400);
	}
}
 8000540:	371c      	adds	r7, #28
 8000542:	46bd      	mov	sp, r7
 8000544:	bc80      	pop	{r7}
 8000546:	4770      	bx	lr
 8000548:	200015a8 	.word	0x200015a8

0800054c <getCSQResult>:

void getCSQResult(uint8_t * msg){
 800054c:	b480      	push	{r7}
 800054e:	b085      	sub	sp, #20
 8000550:	af00      	add	r7, sp, #0
 8000552:	6078      	str	r0, [r7, #4]
	int i = 8;
 8000554:	2308      	movs	r3, #8
 8000556:	60fb      	str	r3, [r7, #12]
	int j = 0;
 8000558:	2300      	movs	r3, #0
 800055a:	60bb      	str	r3, [r7, #8]
	while (msg[i] != ',' && msg[i] != '\0' && msg[i] != '\r' && msg[i] != '\n' && j < 4){
 800055c:	e00e      	b.n	800057c <getCSQResult+0x30>
		SARAcsqResult[j] = msg[i];
 800055e:	68fb      	ldr	r3, [r7, #12]
 8000560:	687a      	ldr	r2, [r7, #4]
 8000562:	4413      	add	r3, r2
 8000564:	7819      	ldrb	r1, [r3, #0]
 8000566:	4a15      	ldr	r2, [pc, #84]	; (80005bc <getCSQResult+0x70>)
 8000568:	68bb      	ldr	r3, [r7, #8]
 800056a:	4413      	add	r3, r2
 800056c:	460a      	mov	r2, r1
 800056e:	701a      	strb	r2, [r3, #0]
		i++;
 8000570:	68fb      	ldr	r3, [r7, #12]
 8000572:	3301      	adds	r3, #1
 8000574:	60fb      	str	r3, [r7, #12]
		j++;
 8000576:	68bb      	ldr	r3, [r7, #8]
 8000578:	3301      	adds	r3, #1
 800057a:	60bb      	str	r3, [r7, #8]
	while (msg[i] != ',' && msg[i] != '\0' && msg[i] != '\r' && msg[i] != '\n' && j < 4){
 800057c:	68fb      	ldr	r3, [r7, #12]
 800057e:	687a      	ldr	r2, [r7, #4]
 8000580:	4413      	add	r3, r2
 8000582:	781b      	ldrb	r3, [r3, #0]
 8000584:	2b2c      	cmp	r3, #44	; 0x2c
 8000586:	d014      	beq.n	80005b2 <getCSQResult+0x66>
 8000588:	68fb      	ldr	r3, [r7, #12]
 800058a:	687a      	ldr	r2, [r7, #4]
 800058c:	4413      	add	r3, r2
 800058e:	781b      	ldrb	r3, [r3, #0]
 8000590:	2b00      	cmp	r3, #0
 8000592:	d00e      	beq.n	80005b2 <getCSQResult+0x66>
 8000594:	68fb      	ldr	r3, [r7, #12]
 8000596:	687a      	ldr	r2, [r7, #4]
 8000598:	4413      	add	r3, r2
 800059a:	781b      	ldrb	r3, [r3, #0]
 800059c:	2b0d      	cmp	r3, #13
 800059e:	d008      	beq.n	80005b2 <getCSQResult+0x66>
 80005a0:	68fb      	ldr	r3, [r7, #12]
 80005a2:	687a      	ldr	r2, [r7, #4]
 80005a4:	4413      	add	r3, r2
 80005a6:	781b      	ldrb	r3, [r3, #0]
 80005a8:	2b0a      	cmp	r3, #10
 80005aa:	d002      	beq.n	80005b2 <getCSQResult+0x66>
 80005ac:	68bb      	ldr	r3, [r7, #8]
 80005ae:	2b03      	cmp	r3, #3
 80005b0:	ddd5      	ble.n	800055e <getCSQResult+0x12>
	}
}
 80005b2:	bf00      	nop
 80005b4:	3714      	adds	r7, #20
 80005b6:	46bd      	mov	sp, r7
 80005b8:	bc80      	pop	{r7}
 80005ba:	4770      	bx	lr
 80005bc:	20001438 	.word	0x20001438

080005c0 <getGPSCoordinates>:

void getGPSCoordinates(){
 80005c0:	b580      	push	{r7, lr}
 80005c2:	af00      	add	r7, sp, #0
	memset(currentGPSCoords,'\0',80);
 80005c4:	2250      	movs	r2, #80	; 0x50
 80005c6:	2100      	movs	r1, #0
 80005c8:	4818      	ldr	r0, [pc, #96]	; (800062c <getGPSCoordinates+0x6c>)
 80005ca:	f003 fbf9 	bl	8003dc0 <memset>
    HAL_UART_Transmit(&huart1, getGPSCoordsCommand, strlen(getGPSCoordsCommand), 50);
 80005ce:	4818      	ldr	r0, [pc, #96]	; (8000630 <getGPSCoordinates+0x70>)
 80005d0:	f7ff fdbe 	bl	8000150 <strlen>
 80005d4:	4603      	mov	r3, r0
 80005d6:	b29a      	uxth	r2, r3
 80005d8:	2332      	movs	r3, #50	; 0x32
 80005da:	4915      	ldr	r1, [pc, #84]	; (8000630 <getGPSCoordinates+0x70>)
 80005dc:	4815      	ldr	r0, [pc, #84]	; (8000634 <getGPSCoordinates+0x74>)
 80005de:	f001 ffd8 	bl	8002592 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
 80005e2:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80005e6:	2250      	movs	r2, #80	; 0x50
 80005e8:	4910      	ldr	r1, [pc, #64]	; (800062c <getGPSCoordinates+0x6c>)
 80005ea:	4812      	ldr	r0, [pc, #72]	; (8000634 <getGPSCoordinates+0x74>)
 80005ec:	f002 f863 	bl	80026b6 <HAL_UART_Receive>

    if (strlen(currentGPSCoords) == 0){
 80005f0:	4b0e      	ldr	r3, [pc, #56]	; (800062c <getGPSCoordinates+0x6c>)
 80005f2:	781b      	ldrb	r3, [r3, #0]
 80005f4:	2b00      	cmp	r3, #0
 80005f6:	d117      	bne.n	8000628 <getGPSCoordinates+0x68>
    	sendToESP(testing);
 80005f8:	480f      	ldr	r0, [pc, #60]	; (8000638 <getGPSCoordinates+0x78>)
 80005fa:	f000 fa4b 	bl	8000a94 <sendToESP>
    	osDelay(400);
 80005fe:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000602:	f002 fa39 	bl	8002a78 <osDelay>
        HAL_UART_Transmit(&huart1, getGPSCoordsCommand, strlen(getGPSCoordsCommand), 50);
 8000606:	480a      	ldr	r0, [pc, #40]	; (8000630 <getGPSCoordinates+0x70>)
 8000608:	f7ff fda2 	bl	8000150 <strlen>
 800060c:	4603      	mov	r3, r0
 800060e:	b29a      	uxth	r2, r3
 8000610:	2332      	movs	r3, #50	; 0x32
 8000612:	4907      	ldr	r1, [pc, #28]	; (8000630 <getGPSCoordinates+0x70>)
 8000614:	4807      	ldr	r0, [pc, #28]	; (8000634 <getGPSCoordinates+0x74>)
 8000616:	f001 ffbc 	bl	8002592 <HAL_UART_Transmit>
        HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
 800061a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800061e:	2250      	movs	r2, #80	; 0x50
 8000620:	4902      	ldr	r1, [pc, #8]	; (800062c <getGPSCoordinates+0x6c>)
 8000622:	4804      	ldr	r0, [pc, #16]	; (8000634 <getGPSCoordinates+0x74>)
 8000624:	f002 f847 	bl	80026b6 <HAL_UART_Receive>
    }
}
 8000628:	bf00      	nop
 800062a:	bd80      	pop	{r7, pc}
 800062c:	20001558 	.word	0x20001558
 8000630:	200000b8 	.word	0x200000b8
 8000634:	200012ac 	.word	0x200012ac
 8000638:	20000000 	.word	0x20000000

0800063c <prepareSaraMeasurement>:

void prepareSaraMeasurement(int technology){
 800063c:	b580      	push	{r7, lr}
 800063e:	b082      	sub	sp, #8
 8000640:	af00      	add	r7, sp, #0
 8000642:	6078      	str	r0, [r7, #4]
	memset(SaraMeasurements,'\0',128);
 8000644:	2280      	movs	r2, #128	; 0x80
 8000646:	2100      	movs	r1, #0
 8000648:	4822      	ldr	r0, [pc, #136]	; (80006d4 <prepareSaraMeasurement+0x98>)
 800064a:	f003 fbb9 	bl	8003dc0 <memset>
	if (technology == 7){
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	2b07      	cmp	r3, #7
 8000652:	d103      	bne.n	800065c <prepareSaraMeasurement+0x20>
		strcpy(SaraMeasurements,LTEMTechName);
 8000654:	4920      	ldr	r1, [pc, #128]	; (80006d8 <prepareSaraMeasurement+0x9c>)
 8000656:	481f      	ldr	r0, [pc, #124]	; (80006d4 <prepareSaraMeasurement+0x98>)
 8000658:	f003 fc57 	bl	8003f0a <strcpy>
	}
	if (technology == 9){
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	2b09      	cmp	r3, #9
 8000660:	d103      	bne.n	800066a <prepareSaraMeasurement+0x2e>
		strcpy(SaraMeasurements,NBIoTTechName);
 8000662:	491e      	ldr	r1, [pc, #120]	; (80006dc <prepareSaraMeasurement+0xa0>)
 8000664:	481b      	ldr	r0, [pc, #108]	; (80006d4 <prepareSaraMeasurement+0x98>)
 8000666:	f003 fc50 	bl	8003f0a <strcpy>
	}

	strcat(SaraMeasurements,currentGPSCoords);
 800066a:	491d      	ldr	r1, [pc, #116]	; (80006e0 <prepareSaraMeasurement+0xa4>)
 800066c:	4819      	ldr	r0, [pc, #100]	; (80006d4 <prepareSaraMeasurement+0x98>)
 800066e:	f003 fc3d 	bl	8003eec <strcat>
	strcat(SaraMeasurements,SARARsrpRsrq);
 8000672:	491c      	ldr	r1, [pc, #112]	; (80006e4 <prepareSaraMeasurement+0xa8>)
 8000674:	4817      	ldr	r0, [pc, #92]	; (80006d4 <prepareSaraMeasurement+0x98>)
 8000676:	f003 fc39 	bl	8003eec <strcat>
	strcat(SaraMeasurements,",");
 800067a:	4816      	ldr	r0, [pc, #88]	; (80006d4 <prepareSaraMeasurement+0x98>)
 800067c:	f7ff fd68 	bl	8000150 <strlen>
 8000680:	4603      	mov	r3, r0
 8000682:	461a      	mov	r2, r3
 8000684:	4b13      	ldr	r3, [pc, #76]	; (80006d4 <prepareSaraMeasurement+0x98>)
 8000686:	4413      	add	r3, r2
 8000688:	4917      	ldr	r1, [pc, #92]	; (80006e8 <prepareSaraMeasurement+0xac>)
 800068a:	461a      	mov	r2, r3
 800068c:	460b      	mov	r3, r1
 800068e:	881b      	ldrh	r3, [r3, #0]
 8000690:	8013      	strh	r3, [r2, #0]
	strcat(SaraMeasurements,SARAcsqResult);
 8000692:	4916      	ldr	r1, [pc, #88]	; (80006ec <prepareSaraMeasurement+0xb0>)
 8000694:	480f      	ldr	r0, [pc, #60]	; (80006d4 <prepareSaraMeasurement+0x98>)
 8000696:	f003 fc29 	bl	8003eec <strcat>

	memset(currentGPSCoords,'\0',80);
 800069a:	2250      	movs	r2, #80	; 0x50
 800069c:	2100      	movs	r1, #0
 800069e:	4810      	ldr	r0, [pc, #64]	; (80006e0 <prepareSaraMeasurement+0xa4>)
 80006a0:	f003 fb8e 	bl	8003dc0 <memset>
	memset(SARARsrpRsrq,'\0',6);
 80006a4:	2206      	movs	r2, #6
 80006a6:	2100      	movs	r1, #0
 80006a8:	480e      	ldr	r0, [pc, #56]	; (80006e4 <prepareSaraMeasurement+0xa8>)
 80006aa:	f003 fb89 	bl	8003dc0 <memset>
	memset(SARAcsqResult,'\0',4);
 80006ae:	2204      	movs	r2, #4
 80006b0:	2100      	movs	r1, #0
 80006b2:	480e      	ldr	r0, [pc, #56]	; (80006ec <prepareSaraMeasurement+0xb0>)
 80006b4:	f003 fb84 	bl	8003dc0 <memset>

	memset(saraCESQmessage,'\0',70);
 80006b8:	2246      	movs	r2, #70	; 0x46
 80006ba:	2100      	movs	r1, #0
 80006bc:	480c      	ldr	r0, [pc, #48]	; (80006f0 <prepareSaraMeasurement+0xb4>)
 80006be:	f003 fb7f 	bl	8003dc0 <memset>
	memset(saraCSQmessage,'\0',50);
 80006c2:	2232      	movs	r2, #50	; 0x32
 80006c4:	2100      	movs	r1, #0
 80006c6:	480b      	ldr	r0, [pc, #44]	; (80006f4 <prepareSaraMeasurement+0xb8>)
 80006c8:	f003 fb7a 	bl	8003dc0 <memset>
}
 80006cc:	bf00      	nop
 80006ce:	3708      	adds	r7, #8
 80006d0:	46bd      	mov	sp, r7
 80006d2:	bd80      	pop	{r7, pc}
 80006d4:	200012f0 	.word	0x200012f0
 80006d8:	2000006c 	.word	0x2000006c
 80006dc:	20000074 	.word	0x20000074
 80006e0:	20001558 	.word	0x20001558
 80006e4:	200015a8 	.word	0x200015a8
 80006e8:	08005288 	.word	0x08005288
 80006ec:	20001438 	.word	0x20001438
 80006f0:	20001370 	.word	0x20001370
 80006f4:	20001504 	.word	0x20001504

080006f8 <NEMEUS_Extract_Lora_Measurements>:

void NEMEUS_Extract_Lora_Measurements(uint8_t * cmd){
 80006f8:	b480      	push	{r7}
 80006fa:	b085      	sub	sp, #20
 80006fc:	af00      	add	r7, sp, #0
 80006fe:	6078      	str	r0, [r7, #4]
	int i = 8; // start after '+MAC: ' also contains 2 more of some ascii stuff???
 8000700:	2308      	movs	r3, #8
 8000702:	60fb      	str	r3, [r7, #12]
	int j = 0;
 8000704:	2300      	movs	r3, #0
 8000706:	60bb      	str	r3, [r7, #8]
	//while(i < strlen(cmd) && cmd[i] != '\n' && cmd[i] != '\0'){
	while(i < 69 && cmd[i] != '\n' && cmd[i] != '\0' && cmd[i] != '\r'){
 8000708:	e00e      	b.n	8000728 <NEMEUS_Extract_Lora_Measurements+0x30>
		currentLoraSignalQuality[j] = cmd[i];
 800070a:	68fb      	ldr	r3, [r7, #12]
 800070c:	687a      	ldr	r2, [r7, #4]
 800070e:	4413      	add	r3, r2
 8000710:	7819      	ldrb	r1, [r3, #0]
 8000712:	4a12      	ldr	r2, [pc, #72]	; (800075c <NEMEUS_Extract_Lora_Measurements+0x64>)
 8000714:	68bb      	ldr	r3, [r7, #8]
 8000716:	4413      	add	r3, r2
 8000718:	460a      	mov	r2, r1
 800071a:	701a      	strb	r2, [r3, #0]
		i++;
 800071c:	68fb      	ldr	r3, [r7, #12]
 800071e:	3301      	adds	r3, #1
 8000720:	60fb      	str	r3, [r7, #12]
		j++;
 8000722:	68bb      	ldr	r3, [r7, #8]
 8000724:	3301      	adds	r3, #1
 8000726:	60bb      	str	r3, [r7, #8]
	while(i < 69 && cmd[i] != '\n' && cmd[i] != '\0' && cmd[i] != '\r'){
 8000728:	68fb      	ldr	r3, [r7, #12]
 800072a:	2b44      	cmp	r3, #68	; 0x44
 800072c:	dc11      	bgt.n	8000752 <NEMEUS_Extract_Lora_Measurements+0x5a>
 800072e:	68fb      	ldr	r3, [r7, #12]
 8000730:	687a      	ldr	r2, [r7, #4]
 8000732:	4413      	add	r3, r2
 8000734:	781b      	ldrb	r3, [r3, #0]
 8000736:	2b0a      	cmp	r3, #10
 8000738:	d00b      	beq.n	8000752 <NEMEUS_Extract_Lora_Measurements+0x5a>
 800073a:	68fb      	ldr	r3, [r7, #12]
 800073c:	687a      	ldr	r2, [r7, #4]
 800073e:	4413      	add	r3, r2
 8000740:	781b      	ldrb	r3, [r3, #0]
 8000742:	2b00      	cmp	r3, #0
 8000744:	d005      	beq.n	8000752 <NEMEUS_Extract_Lora_Measurements+0x5a>
 8000746:	68fb      	ldr	r3, [r7, #12]
 8000748:	687a      	ldr	r2, [r7, #4]
 800074a:	4413      	add	r3, r2
 800074c:	781b      	ldrb	r3, [r3, #0]
 800074e:	2b0d      	cmp	r3, #13
 8000750:	d1db      	bne.n	800070a <NEMEUS_Extract_Lora_Measurements+0x12>
	}
	//sendToESP()
	//currentLoraSignalQuality[j] = '\0';

}
 8000752:	bf00      	nop
 8000754:	3714      	adds	r7, #20
 8000756:	46bd      	mov	sp, r7
 8000758:	bc80      	pop	{r7}
 800075a:	4770      	bx	lr
 800075c:	20001260 	.word	0x20001260

08000760 <NEMEUS_Prepare_Lora_Measurements>:

void NEMEUS_Prepare_Lora_Measurements(){
 8000760:	b580      	push	{r7, lr}
 8000762:	af00      	add	r7, sp, #0

	strcpy(loraMeasurements,loraTechName);
 8000764:	4909      	ldr	r1, [pc, #36]	; (800078c <NEMEUS_Prepare_Lora_Measurements+0x2c>)
 8000766:	480a      	ldr	r0, [pc, #40]	; (8000790 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 8000768:	f003 fbcf 	bl	8003f0a <strcpy>
	strcat(loraMeasurements,currentGPSCoords);
 800076c:	4909      	ldr	r1, [pc, #36]	; (8000794 <NEMEUS_Prepare_Lora_Measurements+0x34>)
 800076e:	4808      	ldr	r0, [pc, #32]	; (8000790 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 8000770:	f003 fbbc 	bl	8003eec <strcat>
	strcat(loraMeasurements,currentLoraSignalQuality);
 8000774:	4908      	ldr	r1, [pc, #32]	; (8000798 <NEMEUS_Prepare_Lora_Measurements+0x38>)
 8000776:	4806      	ldr	r0, [pc, #24]	; (8000790 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 8000778:	f003 fbb8 	bl	8003eec <strcat>
	HAL_UART_Transmit(&huart2, endDelim, 1, 50);
	osDelay(50);
	*/


	memset(currentGPSCoords,'\0',80);
 800077c:	2250      	movs	r2, #80	; 0x50
 800077e:	2100      	movs	r1, #0
 8000780:	4804      	ldr	r0, [pc, #16]	; (8000794 <NEMEUS_Prepare_Lora_Measurements+0x34>)
 8000782:	f003 fb1d 	bl	8003dc0 <memset>
}
 8000786:	bf00      	nop
 8000788:	bd80      	pop	{r7, pc}
 800078a:	bf00      	nop
 800078c:	200000c0 	.word	0x200000c0
 8000790:	200013b8 	.word	0x200013b8
 8000794:	20001558 	.word	0x20001558
 8000798:	20001260 	.word	0x20001260

0800079c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800079c:	b5b0      	push	{r4, r5, r7, lr}
 800079e:	b08a      	sub	sp, #40	; 0x28
 80007a0:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80007a2:	f000 fd4d 	bl	8001240 <HAL_Init>

  /* USER CODE BEGIN Init */

  srand(time(0));
 80007a6:	2000      	movs	r0, #0
 80007a8:	f003 fbb8 	bl	8003f1c <time>
 80007ac:	4603      	mov	r3, r0
 80007ae:	4618      	mov	r0, r3
 80007b0:	f003 fb0e 	bl	8003dd0 <srand>
  int x = rand();
 80007b4:	f003 fb3a 	bl	8003e2c <rand>
 80007b8:	6278      	str	r0, [r7, #36]	; 0x24
  int y = rand();
 80007ba:	f003 fb37 	bl	8003e2c <rand>
 80007be:	6238      	str	r0, [r7, #32]
  sprintf(randSeq, "%X", x%16);
 80007c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80007c2:	425a      	negs	r2, r3
 80007c4:	f003 030f 	and.w	r3, r3, #15
 80007c8:	f002 020f 	and.w	r2, r2, #15
 80007cc:	bf58      	it	pl
 80007ce:	4253      	negpl	r3, r2
 80007d0:	461a      	mov	r2, r3
 80007d2:	491c      	ldr	r1, [pc, #112]	; (8000844 <main+0xa8>)
 80007d4:	481c      	ldr	r0, [pc, #112]	; (8000848 <main+0xac>)
 80007d6:	f003 fb69 	bl	8003eac <siprintf>
  sprintf(stry, "%X", y%16);
 80007da:	6a3b      	ldr	r3, [r7, #32]
 80007dc:	425a      	negs	r2, r3
 80007de:	f003 030f 	and.w	r3, r3, #15
 80007e2:	f002 020f 	and.w	r2, r2, #15
 80007e6:	bf58      	it	pl
 80007e8:	4253      	negpl	r3, r2
 80007ea:	461a      	mov	r2, r3
 80007ec:	4915      	ldr	r1, [pc, #84]	; (8000844 <main+0xa8>)
 80007ee:	4817      	ldr	r0, [pc, #92]	; (800084c <main+0xb0>)
 80007f0:	f003 fb5c 	bl	8003eac <siprintf>
  strcat(randSeq, stry);
 80007f4:	4915      	ldr	r1, [pc, #84]	; (800084c <main+0xb0>)
 80007f6:	4814      	ldr	r0, [pc, #80]	; (8000848 <main+0xac>)
 80007f8:	f003 fb78 	bl	8003eec <strcat>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80007fc:	f000 f82e 	bl	800085c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000800:	f000 f8e6 	bl	80009d0 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8000804:	f000 f866 	bl	80008d4 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 8000808:	f000 f88e 	bl	8000928 <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 800080c:	f000 f8b6 	bl	800097c <MX_USART3_UART_Init>
  /* USER CODE BEGIN 2 */

  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000810:	2201      	movs	r2, #1
 8000812:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000816:	480e      	ldr	r0, [pc, #56]	; (8000850 <main+0xb4>)
 8000818:	f000 ffa8 	bl	800176c <HAL_GPIO_WritePin>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 800081c:	4b0d      	ldr	r3, [pc, #52]	; (8000854 <main+0xb8>)
 800081e:	1d3c      	adds	r4, r7, #4
 8000820:	461d      	mov	r5, r3
 8000822:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000824:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000826:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800082a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 800082e:	1d3b      	adds	r3, r7, #4
 8000830:	2100      	movs	r1, #0
 8000832:	4618      	mov	r0, r3
 8000834:	f002 f8d4 	bl	80029e0 <osThreadCreate>
 8000838:	4603      	mov	r3, r0
 800083a:	4a07      	ldr	r2, [pc, #28]	; (8000858 <main+0xbc>)
 800083c:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 800083e:	f002 f8c8 	bl	80029d2 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000842:	e7fe      	b.n	8000842 <main+0xa6>
 8000844:	0800528c 	.word	0x0800528c
 8000848:	200015b0 	.word	0x200015b0
 800084c:	20001440 	.word	0x20001440
 8000850:	40010800 	.word	0x40010800
 8000854:	08005290 	.word	0x08005290
 8000858:	20001190 	.word	0x20001190

0800085c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800085c:	b580      	push	{r7, lr}
 800085e:	b090      	sub	sp, #64	; 0x40
 8000860:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000862:	f107 0318 	add.w	r3, r7, #24
 8000866:	2228      	movs	r2, #40	; 0x28
 8000868:	2100      	movs	r1, #0
 800086a:	4618      	mov	r0, r3
 800086c:	f003 faa8 	bl	8003dc0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000870:	1d3b      	adds	r3, r7, #4
 8000872:	2200      	movs	r2, #0
 8000874:	601a      	str	r2, [r3, #0]
 8000876:	605a      	str	r2, [r3, #4]
 8000878:	609a      	str	r2, [r3, #8]
 800087a:	60da      	str	r2, [r3, #12]
 800087c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800087e:	2302      	movs	r3, #2
 8000880:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000882:	2301      	movs	r3, #1
 8000884:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000886:	2310      	movs	r3, #16
 8000888:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800088a:	2300      	movs	r3, #0
 800088c:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800088e:	f107 0318 	add.w	r3, r7, #24
 8000892:	4618      	mov	r0, r3
 8000894:	f000 ff9c 	bl	80017d0 <HAL_RCC_OscConfig>
 8000898:	4603      	mov	r3, r0
 800089a:	2b00      	cmp	r3, #0
 800089c:	d001      	beq.n	80008a2 <SystemClock_Config+0x46>
  {
    Error_Handler();
 800089e:	f000 fa6f 	bl	8000d80 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80008a2:	230f      	movs	r3, #15
 80008a4:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80008a6:	2300      	movs	r3, #0
 80008a8:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80008aa:	2300      	movs	r3, #0
 80008ac:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80008ae:	2300      	movs	r3, #0
 80008b0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80008b2:	2300      	movs	r3, #0
 80008b4:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80008b6:	1d3b      	adds	r3, r7, #4
 80008b8:	2100      	movs	r1, #0
 80008ba:	4618      	mov	r0, r3
 80008bc:	f001 fa08 	bl	8001cd0 <HAL_RCC_ClockConfig>
 80008c0:	4603      	mov	r3, r0
 80008c2:	2b00      	cmp	r3, #0
 80008c4:	d001      	beq.n	80008ca <SystemClock_Config+0x6e>
  {
    Error_Handler();
 80008c6:	f000 fa5b 	bl	8000d80 <Error_Handler>
  }
}
 80008ca:	bf00      	nop
 80008cc:	3740      	adds	r7, #64	; 0x40
 80008ce:	46bd      	mov	sp, r7
 80008d0:	bd80      	pop	{r7, pc}
	...

080008d4 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80008d4:	b580      	push	{r7, lr}
 80008d6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80008d8:	4b11      	ldr	r3, [pc, #68]	; (8000920 <MX_USART1_UART_Init+0x4c>)
 80008da:	4a12      	ldr	r2, [pc, #72]	; (8000924 <MX_USART1_UART_Init+0x50>)
 80008dc:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 57600;
 80008de:	4b10      	ldr	r3, [pc, #64]	; (8000920 <MX_USART1_UART_Init+0x4c>)
 80008e0:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 80008e4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80008e6:	4b0e      	ldr	r3, [pc, #56]	; (8000920 <MX_USART1_UART_Init+0x4c>)
 80008e8:	2200      	movs	r2, #0
 80008ea:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80008ec:	4b0c      	ldr	r3, [pc, #48]	; (8000920 <MX_USART1_UART_Init+0x4c>)
 80008ee:	2200      	movs	r2, #0
 80008f0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80008f2:	4b0b      	ldr	r3, [pc, #44]	; (8000920 <MX_USART1_UART_Init+0x4c>)
 80008f4:	2200      	movs	r2, #0
 80008f6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80008f8:	4b09      	ldr	r3, [pc, #36]	; (8000920 <MX_USART1_UART_Init+0x4c>)
 80008fa:	220c      	movs	r2, #12
 80008fc:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80008fe:	4b08      	ldr	r3, [pc, #32]	; (8000920 <MX_USART1_UART_Init+0x4c>)
 8000900:	2200      	movs	r2, #0
 8000902:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000904:	4b06      	ldr	r3, [pc, #24]	; (8000920 <MX_USART1_UART_Init+0x4c>)
 8000906:	2200      	movs	r2, #0
 8000908:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800090a:	4805      	ldr	r0, [pc, #20]	; (8000920 <MX_USART1_UART_Init+0x4c>)
 800090c:	f001 fdf4 	bl	80024f8 <HAL_UART_Init>
 8000910:	4603      	mov	r3, r0
 8000912:	2b00      	cmp	r3, #0
 8000914:	d001      	beq.n	800091a <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8000916:	f000 fa33 	bl	8000d80 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800091a:	bf00      	nop
 800091c:	bd80      	pop	{r7, pc}
 800091e:	bf00      	nop
 8000920:	200012ac 	.word	0x200012ac
 8000924:	40013800 	.word	0x40013800

08000928 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000928:	b580      	push	{r7, lr}
 800092a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800092c:	4b11      	ldr	r3, [pc, #68]	; (8000974 <MX_USART2_UART_Init+0x4c>)
 800092e:	4a12      	ldr	r2, [pc, #72]	; (8000978 <MX_USART2_UART_Init+0x50>)
 8000930:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 57600;
 8000932:	4b10      	ldr	r3, [pc, #64]	; (8000974 <MX_USART2_UART_Init+0x4c>)
 8000934:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 8000938:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800093a:	4b0e      	ldr	r3, [pc, #56]	; (8000974 <MX_USART2_UART_Init+0x4c>)
 800093c:	2200      	movs	r2, #0
 800093e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000940:	4b0c      	ldr	r3, [pc, #48]	; (8000974 <MX_USART2_UART_Init+0x4c>)
 8000942:	2200      	movs	r2, #0
 8000944:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000946:	4b0b      	ldr	r3, [pc, #44]	; (8000974 <MX_USART2_UART_Init+0x4c>)
 8000948:	2200      	movs	r2, #0
 800094a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800094c:	4b09      	ldr	r3, [pc, #36]	; (8000974 <MX_USART2_UART_Init+0x4c>)
 800094e:	220c      	movs	r2, #12
 8000950:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000952:	4b08      	ldr	r3, [pc, #32]	; (8000974 <MX_USART2_UART_Init+0x4c>)
 8000954:	2200      	movs	r2, #0
 8000956:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000958:	4b06      	ldr	r3, [pc, #24]	; (8000974 <MX_USART2_UART_Init+0x4c>)
 800095a:	2200      	movs	r2, #0
 800095c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800095e:	4805      	ldr	r0, [pc, #20]	; (8000974 <MX_USART2_UART_Init+0x4c>)
 8000960:	f001 fdca 	bl	80024f8 <HAL_UART_Init>
 8000964:	4603      	mov	r3, r0
 8000966:	2b00      	cmp	r3, #0
 8000968:	d001      	beq.n	800096e <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800096a:	f000 fa09 	bl	8000d80 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800096e:	bf00      	nop
 8000970:	bd80      	pop	{r7, pc}
 8000972:	bf00      	nop
 8000974:	200014c4 	.word	0x200014c4
 8000978:	40004400 	.word	0x40004400

0800097c <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8000980:	4b11      	ldr	r3, [pc, #68]	; (80009c8 <MX_USART3_UART_Init+0x4c>)
 8000982:	4a12      	ldr	r2, [pc, #72]	; (80009cc <MX_USART3_UART_Init+0x50>)
 8000984:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 38400;
 8000986:	4b10      	ldr	r3, [pc, #64]	; (80009c8 <MX_USART3_UART_Init+0x4c>)
 8000988:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 800098c:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800098e:	4b0e      	ldr	r3, [pc, #56]	; (80009c8 <MX_USART3_UART_Init+0x4c>)
 8000990:	2200      	movs	r2, #0
 8000992:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8000994:	4b0c      	ldr	r3, [pc, #48]	; (80009c8 <MX_USART3_UART_Init+0x4c>)
 8000996:	2200      	movs	r2, #0
 8000998:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800099a:	4b0b      	ldr	r3, [pc, #44]	; (80009c8 <MX_USART3_UART_Init+0x4c>)
 800099c:	2200      	movs	r2, #0
 800099e:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80009a0:	4b09      	ldr	r3, [pc, #36]	; (80009c8 <MX_USART3_UART_Init+0x4c>)
 80009a2:	220c      	movs	r2, #12
 80009a4:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80009a6:	4b08      	ldr	r3, [pc, #32]	; (80009c8 <MX_USART3_UART_Init+0x4c>)
 80009a8:	2200      	movs	r2, #0
 80009aa:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80009ac:	4b06      	ldr	r3, [pc, #24]	; (80009c8 <MX_USART3_UART_Init+0x4c>)
 80009ae:	2200      	movs	r2, #0
 80009b0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80009b2:	4805      	ldr	r0, [pc, #20]	; (80009c8 <MX_USART3_UART_Init+0x4c>)
 80009b4:	f001 fda0 	bl	80024f8 <HAL_UART_Init>
 80009b8:	4603      	mov	r3, r0
 80009ba:	2b00      	cmp	r3, #0
 80009bc:	d001      	beq.n	80009c2 <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 80009be:	f000 f9df 	bl	8000d80 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80009c2:	bf00      	nop
 80009c4:	bd80      	pop	{r7, pc}
 80009c6:	bf00      	nop
 80009c8:	20001194 	.word	0x20001194
 80009cc:	40004800 	.word	0x40004800

080009d0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80009d0:	b580      	push	{r7, lr}
 80009d2:	b088      	sub	sp, #32
 80009d4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80009d6:	f107 0310 	add.w	r3, r7, #16
 80009da:	2200      	movs	r2, #0
 80009dc:	601a      	str	r2, [r3, #0]
 80009de:	605a      	str	r2, [r3, #4]
 80009e0:	609a      	str	r2, [r3, #8]
 80009e2:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80009e4:	4b28      	ldr	r3, [pc, #160]	; (8000a88 <MX_GPIO_Init+0xb8>)
 80009e6:	699b      	ldr	r3, [r3, #24]
 80009e8:	4a27      	ldr	r2, [pc, #156]	; (8000a88 <MX_GPIO_Init+0xb8>)
 80009ea:	f043 0310 	orr.w	r3, r3, #16
 80009ee:	6193      	str	r3, [r2, #24]
 80009f0:	4b25      	ldr	r3, [pc, #148]	; (8000a88 <MX_GPIO_Init+0xb8>)
 80009f2:	699b      	ldr	r3, [r3, #24]
 80009f4:	f003 0310 	and.w	r3, r3, #16
 80009f8:	60fb      	str	r3, [r7, #12]
 80009fa:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80009fc:	4b22      	ldr	r3, [pc, #136]	; (8000a88 <MX_GPIO_Init+0xb8>)
 80009fe:	699b      	ldr	r3, [r3, #24]
 8000a00:	4a21      	ldr	r2, [pc, #132]	; (8000a88 <MX_GPIO_Init+0xb8>)
 8000a02:	f043 0304 	orr.w	r3, r3, #4
 8000a06:	6193      	str	r3, [r2, #24]
 8000a08:	4b1f      	ldr	r3, [pc, #124]	; (8000a88 <MX_GPIO_Init+0xb8>)
 8000a0a:	699b      	ldr	r3, [r3, #24]
 8000a0c:	f003 0304 	and.w	r3, r3, #4
 8000a10:	60bb      	str	r3, [r7, #8]
 8000a12:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000a14:	4b1c      	ldr	r3, [pc, #112]	; (8000a88 <MX_GPIO_Init+0xb8>)
 8000a16:	699b      	ldr	r3, [r3, #24]
 8000a18:	4a1b      	ldr	r2, [pc, #108]	; (8000a88 <MX_GPIO_Init+0xb8>)
 8000a1a:	f043 0308 	orr.w	r3, r3, #8
 8000a1e:	6193      	str	r3, [r2, #24]
 8000a20:	4b19      	ldr	r3, [pc, #100]	; (8000a88 <MX_GPIO_Init+0xb8>)
 8000a22:	699b      	ldr	r3, [r3, #24]
 8000a24:	f003 0308 	and.w	r3, r3, #8
 8000a28:	607b      	str	r3, [r7, #4]
 8000a2a:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8000a2c:	2200      	movs	r2, #0
 8000a2e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000a32:	4816      	ldr	r0, [pc, #88]	; (8000a8c <MX_GPIO_Init+0xbc>)
 8000a34:	f000 fe9a 	bl	800176c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8000a38:	2200      	movs	r2, #0
 8000a3a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000a3e:	4814      	ldr	r0, [pc, #80]	; (8000a90 <MX_GPIO_Init+0xc0>)
 8000a40:	f000 fe94 	bl	800176c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000a44:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000a48:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a4a:	2301      	movs	r3, #1
 8000a4c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a4e:	2300      	movs	r3, #0
 8000a50:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a52:	2302      	movs	r3, #2
 8000a54:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000a56:	f107 0310 	add.w	r3, r7, #16
 8000a5a:	4619      	mov	r1, r3
 8000a5c:	480b      	ldr	r0, [pc, #44]	; (8000a8c <MX_GPIO_Init+0xbc>)
 8000a5e:	f000 fd01 	bl	8001464 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000a62:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000a66:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a68:	2301      	movs	r3, #1
 8000a6a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a6c:	2300      	movs	r3, #0
 8000a6e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a70:	2302      	movs	r3, #2
 8000a72:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000a74:	f107 0310 	add.w	r3, r7, #16
 8000a78:	4619      	mov	r1, r3
 8000a7a:	4805      	ldr	r0, [pc, #20]	; (8000a90 <MX_GPIO_Init+0xc0>)
 8000a7c:	f000 fcf2 	bl	8001464 <HAL_GPIO_Init>

}
 8000a80:	bf00      	nop
 8000a82:	3720      	adds	r7, #32
 8000a84:	46bd      	mov	sp, r7
 8000a86:	bd80      	pop	{r7, pc}
 8000a88:	40021000 	.word	0x40021000
 8000a8c:	40011000 	.word	0x40011000
 8000a90:	40010800 	.word	0x40010800

08000a94 <sendToESP>:

/* USER CODE BEGIN 4 */

void sendToESP(uint8_t * msg) {
 8000a94:	b580      	push	{r7, lr}
 8000a96:	b082      	sub	sp, #8
 8000a98:	af00      	add	r7, sp, #0
 8000a9a:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart2, beginDelim, 1, 50);
 8000a9c:	2332      	movs	r3, #50	; 0x32
 8000a9e:	2201      	movs	r2, #1
 8000aa0:	490b      	ldr	r1, [pc, #44]	; (8000ad0 <sendToESP+0x3c>)
 8000aa2:	480c      	ldr	r0, [pc, #48]	; (8000ad4 <sendToESP+0x40>)
 8000aa4:	f001 fd75 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, msg, strlen(msg), 50);
 8000aa8:	6878      	ldr	r0, [r7, #4]
 8000aaa:	f7ff fb51 	bl	8000150 <strlen>
 8000aae:	4603      	mov	r3, r0
 8000ab0:	b29a      	uxth	r2, r3
 8000ab2:	2332      	movs	r3, #50	; 0x32
 8000ab4:	6879      	ldr	r1, [r7, #4]
 8000ab6:	4807      	ldr	r0, [pc, #28]	; (8000ad4 <sendToESP+0x40>)
 8000ab8:	f001 fd6b 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, endDelim, 1, 50);
 8000abc:	2332      	movs	r3, #50	; 0x32
 8000abe:	2201      	movs	r2, #1
 8000ac0:	4905      	ldr	r1, [pc, #20]	; (8000ad8 <sendToESP+0x44>)
 8000ac2:	4804      	ldr	r0, [pc, #16]	; (8000ad4 <sendToESP+0x40>)
 8000ac4:	f001 fd65 	bl	8002592 <HAL_UART_Transmit>
}
 8000ac8:	bf00      	nop
 8000aca:	3708      	adds	r7, #8
 8000acc:	46bd      	mov	sp, r7
 8000ace:	bd80      	pop	{r7, pc}
 8000ad0:	200000c8 	.word	0x200000c8
 8000ad4:	200014c4 	.word	0x200014c4
 8000ad8:	200000cc 	.word	0x200000cc

08000adc <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 8000adc:	b590      	push	{r4, r7, lr}
 8000ade:	b0d1      	sub	sp, #324	; 0x144
 8000ae0:	af00      	add	r7, sp, #0
 8000ae2:	1d3b      	adds	r3, r7, #4
 8000ae4:	6018      	str	r0, [r3, #0]
  /* USER CODE BEGIN 5 */

  uint8_t test[] = "AT+COPS?\r\n";
 8000ae6:	4a88      	ldr	r2, [pc, #544]	; (8000d08 <StartDefaultTask+0x22c>)
 8000ae8:	f507 739a 	add.w	r3, r7, #308	; 0x134
 8000aec:	ca07      	ldmia	r2, {r0, r1, r2}
 8000aee:	c303      	stmia	r3!, {r0, r1}
 8000af0:	801a      	strh	r2, [r3, #0]
 8000af2:	3302      	adds	r3, #2
 8000af4:	0c12      	lsrs	r2, r2, #16
 8000af6:	701a      	strb	r2, [r3, #0]
  uint8_t test2[] = "AT+MAC=ON\r\n";
 8000af8:	4a84      	ldr	r2, [pc, #528]	; (8000d0c <StartDefaultTask+0x230>)
 8000afa:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8000afe:	ca07      	ldmia	r2, {r0, r1, r2}
 8000b00:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  uint8_t debugTest[] = "AT+DEBUG=ME?";
 8000b04:	4b82      	ldr	r3, [pc, #520]	; (8000d10 <StartDefaultTask+0x234>)
 8000b06:	f507 748c 	add.w	r4, r7, #280	; 0x118
 8000b0a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000b0c:	c407      	stmia	r4!, {r0, r1, r2}
 8000b0e:	7023      	strb	r3, [r4, #0]
  uint8_t loopDone[] = "Loop done\r\n";
 8000b10:	4a80      	ldr	r2, [pc, #512]	; (8000d14 <StartDefaultTask+0x238>)
 8000b12:	f507 7386 	add.w	r3, r7, #268	; 0x10c
 8000b16:	ca07      	ldmia	r2, {r0, r1, r2}
 8000b18:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  sendToESP(debugTest);
 8000b1c:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8000b20:	4618      	mov	r0, r3
 8000b22:	f7ff ffb7 	bl	8000a94 <sendToESP>
  osDelay(4500);
 8000b26:	f241 1094 	movw	r0, #4500	; 0x1194
 8000b2a:	f001 ffa5 	bl	8002a78 <osDelay>
  SARA_Init();
 8000b2e:	f7ff fb2f 	bl	8000190 <SARA_Init>
  nemeus_Power_Cycle();
 8000b32:	f7ff fba3 	bl	800027c <nemeus_Power_Cycle>

  //uint8_t sigfoxSend[23] = "AT+SF=SNDBIN,";
  uint8_t sigfoxSend[30];
  uint8_t sigfoxEnd[] = ",0\r\n";
 8000b36:	4a78      	ldr	r2, [pc, #480]	; (8000d18 <StartDefaultTask+0x23c>)
 8000b38:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8000b3c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000b40:	6018      	str	r0, [r3, #0]
 8000b42:	3304      	adds	r3, #4
 8000b44:	7019      	strb	r1, [r3, #0]
  uint8_t SigFoxMessage[69];
  uint8_t saraMSG[69];

  for(;;)
  {
    osDelay(1000);
 8000b46:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000b4a:	f001 ff95 	bl	8002a78 <osDelay>
    //sendToESP(test);
    HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 8000b4e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000b52:	4872      	ldr	r0, [pc, #456]	; (8000d1c <StartDefaultTask+0x240>)
 8000b54:	f000 fe22 	bl	800179c <HAL_GPIO_TogglePin>
// **** SARA STUFF ****

    HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 8000b58:	4871      	ldr	r0, [pc, #452]	; (8000d20 <StartDefaultTask+0x244>)
 8000b5a:	f7ff faf9 	bl	8000150 <strlen>
 8000b5e:	4603      	mov	r3, r0
 8000b60:	b29a      	uxth	r2, r3
 8000b62:	2332      	movs	r3, #50	; 0x32
 8000b64:	496e      	ldr	r1, [pc, #440]	; (8000d20 <StartDefaultTask+0x244>)
 8000b66:	486f      	ldr	r0, [pc, #444]	; (8000d24 <StartDefaultTask+0x248>)
 8000b68:	f001 fd13 	bl	8002592 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCESQmessage, 70, 150);
 8000b6c:	2396      	movs	r3, #150	; 0x96
 8000b6e:	2246      	movs	r2, #70	; 0x46
 8000b70:	496d      	ldr	r1, [pc, #436]	; (8000d28 <StartDefaultTask+0x24c>)
 8000b72:	486c      	ldr	r0, [pc, #432]	; (8000d24 <StartDefaultTask+0x248>)
 8000b74:	f001 fd9f 	bl	80026b6 <HAL_UART_Receive>
    osDelay(200);
 8000b78:	20c8      	movs	r0, #200	; 0xc8
 8000b7a:	f001 ff7d 	bl	8002a78 <osDelay>
    getResultParameterCESQ(4, saraCESQmessage);
 8000b7e:	496a      	ldr	r1, [pc, #424]	; (8000d28 <StartDefaultTask+0x24c>)
 8000b80:	2004      	movs	r0, #4
 8000b82:	f7ff fc8d 	bl	80004a0 <getResultParameterCESQ>
    //sendToESP(saraMSG);
    //sendToESP(SARARsrpRsrq);

    HAL_UART_Transmit(&huart1, SARAcsq, strlen(SARAcsq), 50);
 8000b86:	4869      	ldr	r0, [pc, #420]	; (8000d2c <StartDefaultTask+0x250>)
 8000b88:	f7ff fae2 	bl	8000150 <strlen>
 8000b8c:	4603      	mov	r3, r0
 8000b8e:	b29a      	uxth	r2, r3
 8000b90:	2332      	movs	r3, #50	; 0x32
 8000b92:	4966      	ldr	r1, [pc, #408]	; (8000d2c <StartDefaultTask+0x250>)
 8000b94:	4863      	ldr	r0, [pc, #396]	; (8000d24 <StartDefaultTask+0x248>)
 8000b96:	f001 fcfc 	bl	8002592 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCSQmessage, 50, 50);
 8000b9a:	2332      	movs	r3, #50	; 0x32
 8000b9c:	2232      	movs	r2, #50	; 0x32
 8000b9e:	4964      	ldr	r1, [pc, #400]	; (8000d30 <StartDefaultTask+0x254>)
 8000ba0:	4860      	ldr	r0, [pc, #384]	; (8000d24 <StartDefaultTask+0x248>)
 8000ba2:	f001 fd88 	bl	80026b6 <HAL_UART_Receive>
    //sendToESP(saraCSQmessage);

    getCSQResult(saraCSQmessage);
 8000ba6:	4862      	ldr	r0, [pc, #392]	; (8000d30 <StartDefaultTask+0x254>)
 8000ba8:	f7ff fcd0 	bl	800054c <getCSQResult>
    //sendToESP(SARAcsqResult);
    osDelay(1000);
 8000bac:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000bb0:	f001 ff62 	bl	8002a78 <osDelay>
    /*
    HAL_UART_Transmit(&huart1, getGPSCoords, strlen(getGPSCoords), 50);
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
	*/
    getGPSCoordinates();
 8000bb4:	f7ff fd04 	bl	80005c0 <getGPSCoordinates>
    prepareSaraMeasurement(7);
 8000bb8:	2007      	movs	r0, #7
 8000bba:	f7ff fd3f 	bl	800063c <prepareSaraMeasurement>
    sendToESP(SaraMeasurements);
 8000bbe:	485d      	ldr	r0, [pc, #372]	; (8000d34 <StartDefaultTask+0x258>)
 8000bc0:	f7ff ff68 	bl	8000a94 <sendToESP>

    //sendToESP(SARARsrpRsrq);

	SARA_ChangeTech('9');
 8000bc4:	2039      	movs	r0, #57	; 0x39
 8000bc6:	f7ff fbcf 	bl	8000368 <SARA_ChangeTech>

	osDelay(1000);
 8000bca:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000bce:	f001 ff53 	bl	8002a78 <osDelay>
	HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 8000bd2:	4853      	ldr	r0, [pc, #332]	; (8000d20 <StartDefaultTask+0x244>)
 8000bd4:	f7ff fabc 	bl	8000150 <strlen>
 8000bd8:	4603      	mov	r3, r0
 8000bda:	b29a      	uxth	r2, r3
 8000bdc:	2332      	movs	r3, #50	; 0x32
 8000bde:	4950      	ldr	r1, [pc, #320]	; (8000d20 <StartDefaultTask+0x244>)
 8000be0:	4850      	ldr	r0, [pc, #320]	; (8000d24 <StartDefaultTask+0x248>)
 8000be2:	f001 fcd6 	bl	8002592 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, saraCESQmessage, 70, 150);
 8000be6:	2396      	movs	r3, #150	; 0x96
 8000be8:	2246      	movs	r2, #70	; 0x46
 8000bea:	494f      	ldr	r1, [pc, #316]	; (8000d28 <StartDefaultTask+0x24c>)
 8000bec:	484d      	ldr	r0, [pc, #308]	; (8000d24 <StartDefaultTask+0x248>)
 8000bee:	f001 fd62 	bl	80026b6 <HAL_UART_Receive>
	osDelay(200);
 8000bf2:	20c8      	movs	r0, #200	; 0xc8
 8000bf4:	f001 ff40 	bl	8002a78 <osDelay>
	getResultParameterCESQ(4, saraCESQmessage);
 8000bf8:	494b      	ldr	r1, [pc, #300]	; (8000d28 <StartDefaultTask+0x24c>)
 8000bfa:	2004      	movs	r0, #4
 8000bfc:	f7ff fc50 	bl	80004a0 <getResultParameterCESQ>

    HAL_UART_Transmit(&huart1, SARAcsq, strlen(SARAcsq), 50);
 8000c00:	484a      	ldr	r0, [pc, #296]	; (8000d2c <StartDefaultTask+0x250>)
 8000c02:	f7ff faa5 	bl	8000150 <strlen>
 8000c06:	4603      	mov	r3, r0
 8000c08:	b29a      	uxth	r2, r3
 8000c0a:	2332      	movs	r3, #50	; 0x32
 8000c0c:	4947      	ldr	r1, [pc, #284]	; (8000d2c <StartDefaultTask+0x250>)
 8000c0e:	4845      	ldr	r0, [pc, #276]	; (8000d24 <StartDefaultTask+0x248>)
 8000c10:	f001 fcbf 	bl	8002592 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCSQmessage, 50, 50);
 8000c14:	2332      	movs	r3, #50	; 0x32
 8000c16:	2232      	movs	r2, #50	; 0x32
 8000c18:	4945      	ldr	r1, [pc, #276]	; (8000d30 <StartDefaultTask+0x254>)
 8000c1a:	4842      	ldr	r0, [pc, #264]	; (8000d24 <StartDefaultTask+0x248>)
 8000c1c:	f001 fd4b 	bl	80026b6 <HAL_UART_Receive>

    getCSQResult(saraCSQmessage);
 8000c20:	4843      	ldr	r0, [pc, #268]	; (8000d30 <StartDefaultTask+0x254>)
 8000c22:	f7ff fc93 	bl	800054c <getCSQResult>
    osDelay(500);
 8000c26:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000c2a:	f001 ff25 	bl	8002a78 <osDelay>
    /*
    HAL_UART_Transmit(&huart1, getGPSCoords, strlen(getGPSCoords), 50);
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
	*/
    getGPSCoordinates();
 8000c2e:	f7ff fcc7 	bl	80005c0 <getGPSCoordinates>
    prepareSaraMeasurement(9);
 8000c32:	2009      	movs	r0, #9
 8000c34:	f7ff fd02 	bl	800063c <prepareSaraMeasurement>
    sendToESP(SaraMeasurements);
 8000c38:	483e      	ldr	r0, [pc, #248]	; (8000d34 <StartDefaultTask+0x258>)
 8000c3a:	f7ff ff2b 	bl	8000a94 <sendToESP>

	SARA_ChangeTech('7');
 8000c3e:	2037      	movs	r0, #55	; 0x37
 8000c40:	f7ff fb92 	bl	8000368 <SARA_ChangeTech>


// **** NEMEUS STUFF ****
// **********************

    HAL_UART_Transmit(&huart3, getLoraLCR, strlen(getLoraLCR), 50);
 8000c44:	483c      	ldr	r0, [pc, #240]	; (8000d38 <StartDefaultTask+0x25c>)
 8000c46:	f7ff fa83 	bl	8000150 <strlen>
 8000c4a:	4603      	mov	r3, r0
 8000c4c:	b29a      	uxth	r2, r3
 8000c4e:	2332      	movs	r3, #50	; 0x32
 8000c50:	4939      	ldr	r1, [pc, #228]	; (8000d38 <StartDefaultTask+0x25c>)
 8000c52:	483a      	ldr	r0, [pc, #232]	; (8000d3c <StartDefaultTask+0x260>)
 8000c54:	f001 fc9d 	bl	8002592 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart3, LoRaMessage, 69, 10000);
 8000c58:	f107 019c 	add.w	r1, r7, #156	; 0x9c
 8000c5c:	f242 7310 	movw	r3, #10000	; 0x2710
 8000c60:	2245      	movs	r2, #69	; 0x45
 8000c62:	4836      	ldr	r0, [pc, #216]	; (8000d3c <StartDefaultTask+0x260>)
 8000c64:	f001 fd27 	bl	80026b6 <HAL_UART_Receive>
    NEMEUS_Extract_Lora_Measurements(LoRaMessage);
 8000c68:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8000c6c:	4618      	mov	r0, r3
 8000c6e:	f7ff fd43 	bl	80006f8 <NEMEUS_Extract_Lora_Measurements>
    // Get Coords:
    /*
    HAL_UART_Transmit(&huart1, getGPSCoords, strlen(getGPSCoords), 50);
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
	*/
    getGPSCoordinates();
 8000c72:	f7ff fca5 	bl	80005c0 <getGPSCoordinates>
    //sendToESP(currentGPSCoords);
    osDelay(500);
 8000c76:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000c7a:	f001 fefd 	bl	8002a78 <osDelay>


    NEMEUS_Prepare_Lora_Measurements();
 8000c7e:	f7ff fd6f 	bl	8000760 <NEMEUS_Prepare_Lora_Measurements>

    sendToESP(loraMeasurements);
 8000c82:	482f      	ldr	r0, [pc, #188]	; (8000d40 <StartDefaultTask+0x264>)
 8000c84:	f7ff ff06 	bl	8000a94 <sendToESP>
    sendToESP(currentGPSCoords);
*/

	// BARE SÅ TTL OUTPUT ER LIDT PÆNERE!!!!
	//HAL_UART_Transmit(&huart2, loopDone, strlen(loopDone), 50);
    HAL_UART_Transmit(&huart2, crlf, strlen(crlf), 50);
 8000c88:	2332      	movs	r3, #50	; 0x32
 8000c8a:	2202      	movs	r2, #2
 8000c8c:	492d      	ldr	r1, [pc, #180]	; (8000d44 <StartDefaultTask+0x268>)
 8000c8e:	482e      	ldr	r0, [pc, #184]	; (8000d48 <StartDefaultTask+0x26c>)
 8000c90:	f001 fc7f 	bl	8002592 <HAL_UART_Transmit>

    //osDelay(1000);
    //nemeus_Power_Cycle();

	osDelay(50);
 8000c94:	2032      	movs	r0, #50	; 0x32
 8000c96:	f001 feef 	bl	8002a78 <osDelay>
    memset(saraMSG,'\0', 69);
 8000c9a:	f107 030c 	add.w	r3, r7, #12
 8000c9e:	2245      	movs	r2, #69	; 0x45
 8000ca0:	2100      	movs	r1, #0
 8000ca2:	4618      	mov	r0, r3
 8000ca4:	f003 f88c 	bl	8003dc0 <memset>
	memset(SigFoxMessage, '\0', 69);
 8000ca8:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8000cac:	2245      	movs	r2, #69	; 0x45
 8000cae:	2100      	movs	r1, #0
 8000cb0:	4618      	mov	r0, r3
 8000cb2:	f003 f885 	bl	8003dc0 <memset>
	memset(LoRaMessage, '\0', 69);
 8000cb6:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8000cba:	2245      	movs	r2, #69	; 0x45
 8000cbc:	2100      	movs	r1, #0
 8000cbe:	4618      	mov	r0, r3
 8000cc0:	f003 f87e 	bl	8003dc0 <memset>
	memset(currentGPSCoords,'\0',80);
 8000cc4:	2250      	movs	r2, #80	; 0x50
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	4820      	ldr	r0, [pc, #128]	; (8000d4c <StartDefaultTask+0x270>)
 8000cca:	f003 f879 	bl	8003dc0 <memset>
	memset(currentLoraSignalQuality,'\0',69);
 8000cce:	2245      	movs	r2, #69	; 0x45
 8000cd0:	2100      	movs	r1, #0
 8000cd2:	481f      	ldr	r0, [pc, #124]	; (8000d50 <StartDefaultTask+0x274>)
 8000cd4:	f003 f874 	bl	8003dc0 <memset>
	memset(loraMeasurements,'\0',128);
 8000cd8:	2280      	movs	r2, #128	; 0x80
 8000cda:	2100      	movs	r1, #0
 8000cdc:	4818      	ldr	r0, [pc, #96]	; (8000d40 <StartDefaultTask+0x264>)
 8000cde:	f003 f86f 	bl	8003dc0 <memset>
	memset(sigfoxMeasurements,'\0',128);
 8000ce2:	2280      	movs	r2, #128	; 0x80
 8000ce4:	2100      	movs	r1, #0
 8000ce6:	481b      	ldr	r0, [pc, #108]	; (8000d54 <StartDefaultTask+0x278>)
 8000ce8:	f003 f86a 	bl	8003dc0 <memset>
	memset(sigfoxSend,'\0',30);
 8000cec:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8000cf0:	221e      	movs	r2, #30
 8000cf2:	2100      	movs	r1, #0
 8000cf4:	4618      	mov	r0, r3
 8000cf6:	f003 f863 	bl	8003dc0 <memset>
	sigFoxSeq++;
 8000cfa:	4b17      	ldr	r3, [pc, #92]	; (8000d58 <StartDefaultTask+0x27c>)
 8000cfc:	681b      	ldr	r3, [r3, #0]
 8000cfe:	3301      	adds	r3, #1
 8000d00:	4a15      	ldr	r2, [pc, #84]	; (8000d58 <StartDefaultTask+0x27c>)
 8000d02:	6013      	str	r3, [r2, #0]
  {
 8000d04:	e71f      	b.n	8000b46 <StartDefaultTask+0x6a>
 8000d06:	bf00      	nop
 8000d08:	080052ac 	.word	0x080052ac
 8000d0c:	080052b8 	.word	0x080052b8
 8000d10:	080052c4 	.word	0x080052c4
 8000d14:	080052d4 	.word	0x080052d4
 8000d18:	080052e0 	.word	0x080052e0
 8000d1c:	40011000 	.word	0x40011000
 8000d20:	20000060 	.word	0x20000060
 8000d24:	200012ac 	.word	0x200012ac
 8000d28:	20001370 	.word	0x20001370
 8000d2c:	20000054 	.word	0x20000054
 8000d30:	20001504 	.word	0x20001504
 8000d34:	200012f0 	.word	0x200012f0
 8000d38:	2000009c 	.word	0x2000009c
 8000d3c:	20001194 	.word	0x20001194
 8000d40:	200013b8 	.word	0x200013b8
 8000d44:	08005300 	.word	0x08005300
 8000d48:	200014c4 	.word	0x200014c4
 8000d4c:	20001558 	.word	0x20001558
 8000d50:	20001260 	.word	0x20001260
 8000d54:	20001444 	.word	0x20001444
 8000d58:	200003b4 	.word	0x200003b4

08000d5c <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000d5c:	b580      	push	{r7, lr}
 8000d5e:	b082      	sub	sp, #8
 8000d60:	af00      	add	r7, sp, #0
 8000d62:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8000d64:	687b      	ldr	r3, [r7, #4]
 8000d66:	681b      	ldr	r3, [r3, #0]
 8000d68:	4a04      	ldr	r2, [pc, #16]	; (8000d7c <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000d6a:	4293      	cmp	r3, r2
 8000d6c:	d101      	bne.n	8000d72 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000d6e:	f000 fa7d 	bl	800126c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000d72:	bf00      	nop
 8000d74:	3708      	adds	r7, #8
 8000d76:	46bd      	mov	sp, r7
 8000d78:	bd80      	pop	{r7, pc}
 8000d7a:	bf00      	nop
 8000d7c:	40012c00 	.word	0x40012c00

08000d80 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d80:	b480      	push	{r7}
 8000d82:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d84:	b672      	cpsid	i
}
 8000d86:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d88:	e7fe      	b.n	8000d88 <Error_Handler+0x8>
	...

08000d8c <HAL_MspInit>:
 8000d8c:	b580      	push	{r7, lr}
 8000d8e:	b084      	sub	sp, #16
 8000d90:	af00      	add	r7, sp, #0
 8000d92:	4b18      	ldr	r3, [pc, #96]	; (8000df4 <HAL_MspInit+0x68>)
 8000d94:	699b      	ldr	r3, [r3, #24]
 8000d96:	4a17      	ldr	r2, [pc, #92]	; (8000df4 <HAL_MspInit+0x68>)
 8000d98:	f043 0301 	orr.w	r3, r3, #1
 8000d9c:	6193      	str	r3, [r2, #24]
 8000d9e:	4b15      	ldr	r3, [pc, #84]	; (8000df4 <HAL_MspInit+0x68>)
 8000da0:	699b      	ldr	r3, [r3, #24]
 8000da2:	f003 0301 	and.w	r3, r3, #1
 8000da6:	60bb      	str	r3, [r7, #8]
 8000da8:	68bb      	ldr	r3, [r7, #8]
 8000daa:	4b12      	ldr	r3, [pc, #72]	; (8000df4 <HAL_MspInit+0x68>)
 8000dac:	69db      	ldr	r3, [r3, #28]
 8000dae:	4a11      	ldr	r2, [pc, #68]	; (8000df4 <HAL_MspInit+0x68>)
 8000db0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000db4:	61d3      	str	r3, [r2, #28]
 8000db6:	4b0f      	ldr	r3, [pc, #60]	; (8000df4 <HAL_MspInit+0x68>)
 8000db8:	69db      	ldr	r3, [r3, #28]
 8000dba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000dbe:	607b      	str	r3, [r7, #4]
 8000dc0:	687b      	ldr	r3, [r7, #4]
 8000dc2:	2200      	movs	r2, #0
 8000dc4:	210f      	movs	r1, #15
 8000dc6:	f06f 0001 	mvn.w	r0, #1
 8000dca:	f000 fb20 	bl	800140e <HAL_NVIC_SetPriority>
 8000dce:	4b0a      	ldr	r3, [pc, #40]	; (8000df8 <HAL_MspInit+0x6c>)
 8000dd0:	685b      	ldr	r3, [r3, #4]
 8000dd2:	60fb      	str	r3, [r7, #12]
 8000dd4:	68fb      	ldr	r3, [r7, #12]
 8000dd6:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000dda:	60fb      	str	r3, [r7, #12]
 8000ddc:	68fb      	ldr	r3, [r7, #12]
 8000dde:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000de2:	60fb      	str	r3, [r7, #12]
 8000de4:	4a04      	ldr	r2, [pc, #16]	; (8000df8 <HAL_MspInit+0x6c>)
 8000de6:	68fb      	ldr	r3, [r7, #12]
 8000de8:	6053      	str	r3, [r2, #4]
 8000dea:	bf00      	nop
 8000dec:	3710      	adds	r7, #16
 8000dee:	46bd      	mov	sp, r7
 8000df0:	bd80      	pop	{r7, pc}
 8000df2:	bf00      	nop
 8000df4:	40021000 	.word	0x40021000
 8000df8:	40010000 	.word	0x40010000

08000dfc <HAL_UART_MspInit>:
 8000dfc:	b580      	push	{r7, lr}
 8000dfe:	b08c      	sub	sp, #48	; 0x30
 8000e00:	af00      	add	r7, sp, #0
 8000e02:	6078      	str	r0, [r7, #4]
 8000e04:	f107 0320 	add.w	r3, r7, #32
 8000e08:	2200      	movs	r2, #0
 8000e0a:	601a      	str	r2, [r3, #0]
 8000e0c:	605a      	str	r2, [r3, #4]
 8000e0e:	609a      	str	r2, [r3, #8]
 8000e10:	60da      	str	r2, [r3, #12]
 8000e12:	687b      	ldr	r3, [r7, #4]
 8000e14:	681b      	ldr	r3, [r3, #0]
 8000e16:	4a53      	ldr	r2, [pc, #332]	; (8000f64 <HAL_UART_MspInit+0x168>)
 8000e18:	4293      	cmp	r3, r2
 8000e1a:	d132      	bne.n	8000e82 <HAL_UART_MspInit+0x86>
 8000e1c:	4b52      	ldr	r3, [pc, #328]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000e1e:	699b      	ldr	r3, [r3, #24]
 8000e20:	4a51      	ldr	r2, [pc, #324]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000e22:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000e26:	6193      	str	r3, [r2, #24]
 8000e28:	4b4f      	ldr	r3, [pc, #316]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000e2a:	699b      	ldr	r3, [r3, #24]
 8000e2c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000e30:	61fb      	str	r3, [r7, #28]
 8000e32:	69fb      	ldr	r3, [r7, #28]
 8000e34:	4b4c      	ldr	r3, [pc, #304]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000e36:	699b      	ldr	r3, [r3, #24]
 8000e38:	4a4b      	ldr	r2, [pc, #300]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000e3a:	f043 0304 	orr.w	r3, r3, #4
 8000e3e:	6193      	str	r3, [r2, #24]
 8000e40:	4b49      	ldr	r3, [pc, #292]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000e42:	699b      	ldr	r3, [r3, #24]
 8000e44:	f003 0304 	and.w	r3, r3, #4
 8000e48:	61bb      	str	r3, [r7, #24]
 8000e4a:	69bb      	ldr	r3, [r7, #24]
 8000e4c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000e50:	623b      	str	r3, [r7, #32]
 8000e52:	2302      	movs	r3, #2
 8000e54:	627b      	str	r3, [r7, #36]	; 0x24
 8000e56:	2303      	movs	r3, #3
 8000e58:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000e5a:	f107 0320 	add.w	r3, r7, #32
 8000e5e:	4619      	mov	r1, r3
 8000e60:	4842      	ldr	r0, [pc, #264]	; (8000f6c <HAL_UART_MspInit+0x170>)
 8000e62:	f000 faff 	bl	8001464 <HAL_GPIO_Init>
 8000e66:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000e6a:	623b      	str	r3, [r7, #32]
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	627b      	str	r3, [r7, #36]	; 0x24
 8000e70:	2300      	movs	r3, #0
 8000e72:	62bb      	str	r3, [r7, #40]	; 0x28
 8000e74:	f107 0320 	add.w	r3, r7, #32
 8000e78:	4619      	mov	r1, r3
 8000e7a:	483c      	ldr	r0, [pc, #240]	; (8000f6c <HAL_UART_MspInit+0x170>)
 8000e7c:	f000 faf2 	bl	8001464 <HAL_GPIO_Init>
 8000e80:	e06c      	b.n	8000f5c <HAL_UART_MspInit+0x160>
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	681b      	ldr	r3, [r3, #0]
 8000e86:	4a3a      	ldr	r2, [pc, #232]	; (8000f70 <HAL_UART_MspInit+0x174>)
 8000e88:	4293      	cmp	r3, r2
 8000e8a:	d130      	bne.n	8000eee <HAL_UART_MspInit+0xf2>
 8000e8c:	4b36      	ldr	r3, [pc, #216]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000e8e:	69db      	ldr	r3, [r3, #28]
 8000e90:	4a35      	ldr	r2, [pc, #212]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000e92:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000e96:	61d3      	str	r3, [r2, #28]
 8000e98:	4b33      	ldr	r3, [pc, #204]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000e9a:	69db      	ldr	r3, [r3, #28]
 8000e9c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000ea0:	617b      	str	r3, [r7, #20]
 8000ea2:	697b      	ldr	r3, [r7, #20]
 8000ea4:	4b30      	ldr	r3, [pc, #192]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000ea6:	699b      	ldr	r3, [r3, #24]
 8000ea8:	4a2f      	ldr	r2, [pc, #188]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000eaa:	f043 0304 	orr.w	r3, r3, #4
 8000eae:	6193      	str	r3, [r2, #24]
 8000eb0:	4b2d      	ldr	r3, [pc, #180]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000eb2:	699b      	ldr	r3, [r3, #24]
 8000eb4:	f003 0304 	and.w	r3, r3, #4
 8000eb8:	613b      	str	r3, [r7, #16]
 8000eba:	693b      	ldr	r3, [r7, #16]
 8000ebc:	2304      	movs	r3, #4
 8000ebe:	623b      	str	r3, [r7, #32]
 8000ec0:	2302      	movs	r3, #2
 8000ec2:	627b      	str	r3, [r7, #36]	; 0x24
 8000ec4:	2303      	movs	r3, #3
 8000ec6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000ec8:	f107 0320 	add.w	r3, r7, #32
 8000ecc:	4619      	mov	r1, r3
 8000ece:	4827      	ldr	r0, [pc, #156]	; (8000f6c <HAL_UART_MspInit+0x170>)
 8000ed0:	f000 fac8 	bl	8001464 <HAL_GPIO_Init>
 8000ed4:	2308      	movs	r3, #8
 8000ed6:	623b      	str	r3, [r7, #32]
 8000ed8:	2300      	movs	r3, #0
 8000eda:	627b      	str	r3, [r7, #36]	; 0x24
 8000edc:	2300      	movs	r3, #0
 8000ede:	62bb      	str	r3, [r7, #40]	; 0x28
 8000ee0:	f107 0320 	add.w	r3, r7, #32
 8000ee4:	4619      	mov	r1, r3
 8000ee6:	4821      	ldr	r0, [pc, #132]	; (8000f6c <HAL_UART_MspInit+0x170>)
 8000ee8:	f000 fabc 	bl	8001464 <HAL_GPIO_Init>
 8000eec:	e036      	b.n	8000f5c <HAL_UART_MspInit+0x160>
 8000eee:	687b      	ldr	r3, [r7, #4]
 8000ef0:	681b      	ldr	r3, [r3, #0]
 8000ef2:	4a20      	ldr	r2, [pc, #128]	; (8000f74 <HAL_UART_MspInit+0x178>)
 8000ef4:	4293      	cmp	r3, r2
 8000ef6:	d131      	bne.n	8000f5c <HAL_UART_MspInit+0x160>
 8000ef8:	4b1b      	ldr	r3, [pc, #108]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000efa:	69db      	ldr	r3, [r3, #28]
 8000efc:	4a1a      	ldr	r2, [pc, #104]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000efe:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000f02:	61d3      	str	r3, [r2, #28]
 8000f04:	4b18      	ldr	r3, [pc, #96]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000f06:	69db      	ldr	r3, [r3, #28]
 8000f08:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8000f0c:	60fb      	str	r3, [r7, #12]
 8000f0e:	68fb      	ldr	r3, [r7, #12]
 8000f10:	4b15      	ldr	r3, [pc, #84]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000f12:	699b      	ldr	r3, [r3, #24]
 8000f14:	4a14      	ldr	r2, [pc, #80]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000f16:	f043 0308 	orr.w	r3, r3, #8
 8000f1a:	6193      	str	r3, [r2, #24]
 8000f1c:	4b12      	ldr	r3, [pc, #72]	; (8000f68 <HAL_UART_MspInit+0x16c>)
 8000f1e:	699b      	ldr	r3, [r3, #24]
 8000f20:	f003 0308 	and.w	r3, r3, #8
 8000f24:	60bb      	str	r3, [r7, #8]
 8000f26:	68bb      	ldr	r3, [r7, #8]
 8000f28:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000f2c:	623b      	str	r3, [r7, #32]
 8000f2e:	2302      	movs	r3, #2
 8000f30:	627b      	str	r3, [r7, #36]	; 0x24
 8000f32:	2303      	movs	r3, #3
 8000f34:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000f36:	f107 0320 	add.w	r3, r7, #32
 8000f3a:	4619      	mov	r1, r3
 8000f3c:	480e      	ldr	r0, [pc, #56]	; (8000f78 <HAL_UART_MspInit+0x17c>)
 8000f3e:	f000 fa91 	bl	8001464 <HAL_GPIO_Init>
 8000f42:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000f46:	623b      	str	r3, [r7, #32]
 8000f48:	2300      	movs	r3, #0
 8000f4a:	627b      	str	r3, [r7, #36]	; 0x24
 8000f4c:	2300      	movs	r3, #0
 8000f4e:	62bb      	str	r3, [r7, #40]	; 0x28
 8000f50:	f107 0320 	add.w	r3, r7, #32
 8000f54:	4619      	mov	r1, r3
 8000f56:	4808      	ldr	r0, [pc, #32]	; (8000f78 <HAL_UART_MspInit+0x17c>)
 8000f58:	f000 fa84 	bl	8001464 <HAL_GPIO_Init>
 8000f5c:	bf00      	nop
 8000f5e:	3730      	adds	r7, #48	; 0x30
 8000f60:	46bd      	mov	sp, r7
 8000f62:	bd80      	pop	{r7, pc}
 8000f64:	40013800 	.word	0x40013800
 8000f68:	40021000 	.word	0x40021000
 8000f6c:	40010800 	.word	0x40010800
 8000f70:	40004400 	.word	0x40004400
 8000f74:	40004800 	.word	0x40004800
 8000f78:	40010c00 	.word	0x40010c00

08000f7c <HAL_InitTick>:
 8000f7c:	b580      	push	{r7, lr}
 8000f7e:	b08c      	sub	sp, #48	; 0x30
 8000f80:	af00      	add	r7, sp, #0
 8000f82:	6078      	str	r0, [r7, #4]
 8000f84:	2300      	movs	r3, #0
 8000f86:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000f88:	2300      	movs	r3, #0
 8000f8a:	62bb      	str	r3, [r7, #40]	; 0x28
 8000f8c:	2200      	movs	r2, #0
 8000f8e:	6879      	ldr	r1, [r7, #4]
 8000f90:	2019      	movs	r0, #25
 8000f92:	f000 fa3c 	bl	800140e <HAL_NVIC_SetPriority>
 8000f96:	2019      	movs	r0, #25
 8000f98:	f000 fa55 	bl	8001446 <HAL_NVIC_EnableIRQ>
 8000f9c:	4b1e      	ldr	r3, [pc, #120]	; (8001018 <HAL_InitTick+0x9c>)
 8000f9e:	699b      	ldr	r3, [r3, #24]
 8000fa0:	4a1d      	ldr	r2, [pc, #116]	; (8001018 <HAL_InitTick+0x9c>)
 8000fa2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000fa6:	6193      	str	r3, [r2, #24]
 8000fa8:	4b1b      	ldr	r3, [pc, #108]	; (8001018 <HAL_InitTick+0x9c>)
 8000faa:	699b      	ldr	r3, [r3, #24]
 8000fac:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000fb0:	60fb      	str	r3, [r7, #12]
 8000fb2:	68fb      	ldr	r3, [r7, #12]
 8000fb4:	f107 0210 	add.w	r2, r7, #16
 8000fb8:	f107 0314 	add.w	r3, r7, #20
 8000fbc:	4611      	mov	r1, r2
 8000fbe:	4618      	mov	r0, r3
 8000fc0:	f001 f802 	bl	8001fc8 <HAL_RCC_GetClockConfig>
 8000fc4:	f000 ffec 	bl	8001fa0 <HAL_RCC_GetPCLK2Freq>
 8000fc8:	62f8      	str	r0, [r7, #44]	; 0x2c
 8000fca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000fcc:	4a13      	ldr	r2, [pc, #76]	; (800101c <HAL_InitTick+0xa0>)
 8000fce:	fba2 2303 	umull	r2, r3, r2, r3
 8000fd2:	0c9b      	lsrs	r3, r3, #18
 8000fd4:	3b01      	subs	r3, #1
 8000fd6:	62bb      	str	r3, [r7, #40]	; 0x28
 8000fd8:	4b11      	ldr	r3, [pc, #68]	; (8001020 <HAL_InitTick+0xa4>)
 8000fda:	4a12      	ldr	r2, [pc, #72]	; (8001024 <HAL_InitTick+0xa8>)
 8000fdc:	601a      	str	r2, [r3, #0]
 8000fde:	4b10      	ldr	r3, [pc, #64]	; (8001020 <HAL_InitTick+0xa4>)
 8000fe0:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000fe4:	60da      	str	r2, [r3, #12]
 8000fe6:	4a0e      	ldr	r2, [pc, #56]	; (8001020 <HAL_InitTick+0xa4>)
 8000fe8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000fea:	6053      	str	r3, [r2, #4]
 8000fec:	4b0c      	ldr	r3, [pc, #48]	; (8001020 <HAL_InitTick+0xa4>)
 8000fee:	2200      	movs	r2, #0
 8000ff0:	611a      	str	r2, [r3, #16]
 8000ff2:	4b0b      	ldr	r3, [pc, #44]	; (8001020 <HAL_InitTick+0xa4>)
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	609a      	str	r2, [r3, #8]
 8000ff8:	4809      	ldr	r0, [pc, #36]	; (8001020 <HAL_InitTick+0xa4>)
 8000ffa:	f001 f833 	bl	8002064 <HAL_TIM_Base_Init>
 8000ffe:	4603      	mov	r3, r0
 8001000:	2b00      	cmp	r3, #0
 8001002:	d104      	bne.n	800100e <HAL_InitTick+0x92>
 8001004:	4806      	ldr	r0, [pc, #24]	; (8001020 <HAL_InitTick+0xa4>)
 8001006:	f001 f885 	bl	8002114 <HAL_TIM_Base_Start_IT>
 800100a:	4603      	mov	r3, r0
 800100c:	e000      	b.n	8001010 <HAL_InitTick+0x94>
 800100e:	2301      	movs	r3, #1
 8001010:	4618      	mov	r0, r3
 8001012:	3730      	adds	r7, #48	; 0x30
 8001014:	46bd      	mov	sp, r7
 8001016:	bd80      	pop	{r7, pc}
 8001018:	40021000 	.word	0x40021000
 800101c:	431bde83 	.word	0x431bde83
 8001020:	200015b4 	.word	0x200015b4
 8001024:	40012c00 	.word	0x40012c00

08001028 <NMI_Handler>:
 8001028:	b480      	push	{r7}
 800102a:	af00      	add	r7, sp, #0
 800102c:	e7fe      	b.n	800102c <NMI_Handler+0x4>

0800102e <HardFault_Handler>:
 800102e:	b480      	push	{r7}
 8001030:	af00      	add	r7, sp, #0
 8001032:	e7fe      	b.n	8001032 <HardFault_Handler+0x4>

08001034 <MemManage_Handler>:
 8001034:	b480      	push	{r7}
 8001036:	af00      	add	r7, sp, #0
 8001038:	e7fe      	b.n	8001038 <MemManage_Handler+0x4>

0800103a <BusFault_Handler>:
 800103a:	b480      	push	{r7}
 800103c:	af00      	add	r7, sp, #0
 800103e:	e7fe      	b.n	800103e <BusFault_Handler+0x4>

08001040 <UsageFault_Handler>:
 8001040:	b480      	push	{r7}
 8001042:	af00      	add	r7, sp, #0
 8001044:	e7fe      	b.n	8001044 <UsageFault_Handler+0x4>

08001046 <DebugMon_Handler>:
 8001046:	b480      	push	{r7}
 8001048:	af00      	add	r7, sp, #0
 800104a:	bf00      	nop
 800104c:	46bd      	mov	sp, r7
 800104e:	bc80      	pop	{r7}
 8001050:	4770      	bx	lr
	...

08001054 <TIM1_UP_IRQHandler>:
 8001054:	b580      	push	{r7, lr}
 8001056:	af00      	add	r7, sp, #0
 8001058:	4802      	ldr	r0, [pc, #8]	; (8001064 <TIM1_UP_IRQHandler+0x10>)
 800105a:	f001 f8ad 	bl	80021b8 <HAL_TIM_IRQHandler>
 800105e:	bf00      	nop
 8001060:	bd80      	pop	{r7, pc}
 8001062:	bf00      	nop
 8001064:	200015b4 	.word	0x200015b4

08001068 <_getpid>:
 8001068:	b480      	push	{r7}
 800106a:	af00      	add	r7, sp, #0
 800106c:	2301      	movs	r3, #1
 800106e:	4618      	mov	r0, r3
 8001070:	46bd      	mov	sp, r7
 8001072:	bc80      	pop	{r7}
 8001074:	4770      	bx	lr

08001076 <_kill>:
 8001076:	b580      	push	{r7, lr}
 8001078:	b082      	sub	sp, #8
 800107a:	af00      	add	r7, sp, #0
 800107c:	6078      	str	r0, [r7, #4]
 800107e:	6039      	str	r1, [r7, #0]
 8001080:	f002 fe66 	bl	8003d50 <__errno>
 8001084:	4603      	mov	r3, r0
 8001086:	2216      	movs	r2, #22
 8001088:	601a      	str	r2, [r3, #0]
 800108a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800108e:	4618      	mov	r0, r3
 8001090:	3708      	adds	r7, #8
 8001092:	46bd      	mov	sp, r7
 8001094:	bd80      	pop	{r7, pc}

08001096 <_exit>:
 8001096:	b580      	push	{r7, lr}
 8001098:	b082      	sub	sp, #8
 800109a:	af00      	add	r7, sp, #0
 800109c:	6078      	str	r0, [r7, #4]
 800109e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80010a2:	6878      	ldr	r0, [r7, #4]
 80010a4:	f7ff ffe7 	bl	8001076 <_kill>
 80010a8:	e7fe      	b.n	80010a8 <_exit+0x12>

080010aa <_read>:
 80010aa:	b580      	push	{r7, lr}
 80010ac:	b086      	sub	sp, #24
 80010ae:	af00      	add	r7, sp, #0
 80010b0:	60f8      	str	r0, [r7, #12]
 80010b2:	60b9      	str	r1, [r7, #8]
 80010b4:	607a      	str	r2, [r7, #4]
 80010b6:	2300      	movs	r3, #0
 80010b8:	617b      	str	r3, [r7, #20]
 80010ba:	e00a      	b.n	80010d2 <_read+0x28>
 80010bc:	f3af 8000 	nop.w
 80010c0:	4601      	mov	r1, r0
 80010c2:	68bb      	ldr	r3, [r7, #8]
 80010c4:	1c5a      	adds	r2, r3, #1
 80010c6:	60ba      	str	r2, [r7, #8]
 80010c8:	b2ca      	uxtb	r2, r1
 80010ca:	701a      	strb	r2, [r3, #0]
 80010cc:	697b      	ldr	r3, [r7, #20]
 80010ce:	3301      	adds	r3, #1
 80010d0:	617b      	str	r3, [r7, #20]
 80010d2:	697a      	ldr	r2, [r7, #20]
 80010d4:	687b      	ldr	r3, [r7, #4]
 80010d6:	429a      	cmp	r2, r3
 80010d8:	dbf0      	blt.n	80010bc <_read+0x12>
 80010da:	687b      	ldr	r3, [r7, #4]
 80010dc:	4618      	mov	r0, r3
 80010de:	3718      	adds	r7, #24
 80010e0:	46bd      	mov	sp, r7
 80010e2:	bd80      	pop	{r7, pc}

080010e4 <_write>:
 80010e4:	b580      	push	{r7, lr}
 80010e6:	b086      	sub	sp, #24
 80010e8:	af00      	add	r7, sp, #0
 80010ea:	60f8      	str	r0, [r7, #12]
 80010ec:	60b9      	str	r1, [r7, #8]
 80010ee:	607a      	str	r2, [r7, #4]
 80010f0:	2300      	movs	r3, #0
 80010f2:	617b      	str	r3, [r7, #20]
 80010f4:	e009      	b.n	800110a <_write+0x26>
 80010f6:	68bb      	ldr	r3, [r7, #8]
 80010f8:	1c5a      	adds	r2, r3, #1
 80010fa:	60ba      	str	r2, [r7, #8]
 80010fc:	781b      	ldrb	r3, [r3, #0]
 80010fe:	4618      	mov	r0, r3
 8001100:	f3af 8000 	nop.w
 8001104:	697b      	ldr	r3, [r7, #20]
 8001106:	3301      	adds	r3, #1
 8001108:	617b      	str	r3, [r7, #20]
 800110a:	697a      	ldr	r2, [r7, #20]
 800110c:	687b      	ldr	r3, [r7, #4]
 800110e:	429a      	cmp	r2, r3
 8001110:	dbf1      	blt.n	80010f6 <_write+0x12>
 8001112:	687b      	ldr	r3, [r7, #4]
 8001114:	4618      	mov	r0, r3
 8001116:	3718      	adds	r7, #24
 8001118:	46bd      	mov	sp, r7
 800111a:	bd80      	pop	{r7, pc}

0800111c <_close>:
 800111c:	b480      	push	{r7}
 800111e:	b083      	sub	sp, #12
 8001120:	af00      	add	r7, sp, #0
 8001122:	6078      	str	r0, [r7, #4]
 8001124:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001128:	4618      	mov	r0, r3
 800112a:	370c      	adds	r7, #12
 800112c:	46bd      	mov	sp, r7
 800112e:	bc80      	pop	{r7}
 8001130:	4770      	bx	lr

08001132 <_fstat>:
 8001132:	b480      	push	{r7}
 8001134:	b083      	sub	sp, #12
 8001136:	af00      	add	r7, sp, #0
 8001138:	6078      	str	r0, [r7, #4]
 800113a:	6039      	str	r1, [r7, #0]
 800113c:	683b      	ldr	r3, [r7, #0]
 800113e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001142:	605a      	str	r2, [r3, #4]
 8001144:	2300      	movs	r3, #0
 8001146:	4618      	mov	r0, r3
 8001148:	370c      	adds	r7, #12
 800114a:	46bd      	mov	sp, r7
 800114c:	bc80      	pop	{r7}
 800114e:	4770      	bx	lr

08001150 <_isatty>:
 8001150:	b480      	push	{r7}
 8001152:	b083      	sub	sp, #12
 8001154:	af00      	add	r7, sp, #0
 8001156:	6078      	str	r0, [r7, #4]
 8001158:	2301      	movs	r3, #1
 800115a:	4618      	mov	r0, r3
 800115c:	370c      	adds	r7, #12
 800115e:	46bd      	mov	sp, r7
 8001160:	bc80      	pop	{r7}
 8001162:	4770      	bx	lr

08001164 <_lseek>:
 8001164:	b480      	push	{r7}
 8001166:	b085      	sub	sp, #20
 8001168:	af00      	add	r7, sp, #0
 800116a:	60f8      	str	r0, [r7, #12]
 800116c:	60b9      	str	r1, [r7, #8]
 800116e:	607a      	str	r2, [r7, #4]
 8001170:	2300      	movs	r3, #0
 8001172:	4618      	mov	r0, r3
 8001174:	3714      	adds	r7, #20
 8001176:	46bd      	mov	sp, r7
 8001178:	bc80      	pop	{r7}
 800117a:	4770      	bx	lr

0800117c <_sbrk>:
 800117c:	b580      	push	{r7, lr}
 800117e:	b086      	sub	sp, #24
 8001180:	af00      	add	r7, sp, #0
 8001182:	6078      	str	r0, [r7, #4]
 8001184:	4a14      	ldr	r2, [pc, #80]	; (80011d8 <_sbrk+0x5c>)
 8001186:	4b15      	ldr	r3, [pc, #84]	; (80011dc <_sbrk+0x60>)
 8001188:	1ad3      	subs	r3, r2, r3
 800118a:	617b      	str	r3, [r7, #20]
 800118c:	697b      	ldr	r3, [r7, #20]
 800118e:	613b      	str	r3, [r7, #16]
 8001190:	4b13      	ldr	r3, [pc, #76]	; (80011e0 <_sbrk+0x64>)
 8001192:	681b      	ldr	r3, [r3, #0]
 8001194:	2b00      	cmp	r3, #0
 8001196:	d102      	bne.n	800119e <_sbrk+0x22>
 8001198:	4b11      	ldr	r3, [pc, #68]	; (80011e0 <_sbrk+0x64>)
 800119a:	4a12      	ldr	r2, [pc, #72]	; (80011e4 <_sbrk+0x68>)
 800119c:	601a      	str	r2, [r3, #0]
 800119e:	4b10      	ldr	r3, [pc, #64]	; (80011e0 <_sbrk+0x64>)
 80011a0:	681a      	ldr	r2, [r3, #0]
 80011a2:	687b      	ldr	r3, [r7, #4]
 80011a4:	4413      	add	r3, r2
 80011a6:	693a      	ldr	r2, [r7, #16]
 80011a8:	429a      	cmp	r2, r3
 80011aa:	d207      	bcs.n	80011bc <_sbrk+0x40>
 80011ac:	f002 fdd0 	bl	8003d50 <__errno>
 80011b0:	4603      	mov	r3, r0
 80011b2:	220c      	movs	r2, #12
 80011b4:	601a      	str	r2, [r3, #0]
 80011b6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80011ba:	e009      	b.n	80011d0 <_sbrk+0x54>
 80011bc:	4b08      	ldr	r3, [pc, #32]	; (80011e0 <_sbrk+0x64>)
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	60fb      	str	r3, [r7, #12]
 80011c2:	4b07      	ldr	r3, [pc, #28]	; (80011e0 <_sbrk+0x64>)
 80011c4:	681a      	ldr	r2, [r3, #0]
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	4413      	add	r3, r2
 80011ca:	4a05      	ldr	r2, [pc, #20]	; (80011e0 <_sbrk+0x64>)
 80011cc:	6013      	str	r3, [r2, #0]
 80011ce:	68fb      	ldr	r3, [r7, #12]
 80011d0:	4618      	mov	r0, r3
 80011d2:	3718      	adds	r7, #24
 80011d4:	46bd      	mov	sp, r7
 80011d6:	bd80      	pop	{r7, pc}
 80011d8:	20005000 	.word	0x20005000
 80011dc:	00000400 	.word	0x00000400
 80011e0:	200003b8 	.word	0x200003b8
 80011e4:	20001610 	.word	0x20001610

080011e8 <SystemInit>:
 80011e8:	b480      	push	{r7}
 80011ea:	af00      	add	r7, sp, #0
 80011ec:	bf00      	nop
 80011ee:	46bd      	mov	sp, r7
 80011f0:	bc80      	pop	{r7}
 80011f2:	4770      	bx	lr

080011f4 <Reset_Handler>:
 80011f4:	2100      	movs	r1, #0
 80011f6:	e003      	b.n	8001200 <LoopCopyDataInit>

080011f8 <CopyDataInit>:
 80011f8:	4b0b      	ldr	r3, [pc, #44]	; (8001228 <LoopFillZerobss+0x14>)
 80011fa:	585b      	ldr	r3, [r3, r1]
 80011fc:	5043      	str	r3, [r0, r1]
 80011fe:	3104      	adds	r1, #4

08001200 <LoopCopyDataInit>:
 8001200:	480a      	ldr	r0, [pc, #40]	; (800122c <LoopFillZerobss+0x18>)
 8001202:	4b0b      	ldr	r3, [pc, #44]	; (8001230 <LoopFillZerobss+0x1c>)
 8001204:	1842      	adds	r2, r0, r1
 8001206:	429a      	cmp	r2, r3
 8001208:	d3f6      	bcc.n	80011f8 <CopyDataInit>
 800120a:	4a0a      	ldr	r2, [pc, #40]	; (8001234 <LoopFillZerobss+0x20>)
 800120c:	e002      	b.n	8001214 <LoopFillZerobss>

0800120e <FillZerobss>:
 800120e:	2300      	movs	r3, #0
 8001210:	f842 3b04 	str.w	r3, [r2], #4

08001214 <LoopFillZerobss>:
 8001214:	4b08      	ldr	r3, [pc, #32]	; (8001238 <LoopFillZerobss+0x24>)
 8001216:	429a      	cmp	r2, r3
 8001218:	d3f9      	bcc.n	800120e <FillZerobss>
 800121a:	f7ff ffe5 	bl	80011e8 <SystemInit>
 800121e:	f002 fd9d 	bl	8003d5c <__libc_init_array>
 8001222:	f7ff fabb 	bl	800079c <main>
 8001226:	4770      	bx	lr
 8001228:	08005470 	.word	0x08005470
 800122c:	20000000 	.word	0x20000000
 8001230:	20000144 	.word	0x20000144
 8001234:	20000144 	.word	0x20000144
 8001238:	20001610 	.word	0x20001610

0800123c <ADC1_2_IRQHandler>:
 800123c:	e7fe      	b.n	800123c <ADC1_2_IRQHandler>
	...

08001240 <HAL_Init>:
 8001240:	b580      	push	{r7, lr}
 8001242:	af00      	add	r7, sp, #0
 8001244:	4b08      	ldr	r3, [pc, #32]	; (8001268 <HAL_Init+0x28>)
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	4a07      	ldr	r2, [pc, #28]	; (8001268 <HAL_Init+0x28>)
 800124a:	f043 0310 	orr.w	r3, r3, #16
 800124e:	6013      	str	r3, [r2, #0]
 8001250:	2003      	movs	r0, #3
 8001252:	f000 f8d1 	bl	80013f8 <HAL_NVIC_SetPriorityGrouping>
 8001256:	2000      	movs	r0, #0
 8001258:	f7ff fe90 	bl	8000f7c <HAL_InitTick>
 800125c:	f7ff fd96 	bl	8000d8c <HAL_MspInit>
 8001260:	2300      	movs	r3, #0
 8001262:	4618      	mov	r0, r3
 8001264:	bd80      	pop	{r7, pc}
 8001266:	bf00      	nop
 8001268:	40022000 	.word	0x40022000

0800126c <HAL_IncTick>:
 800126c:	b480      	push	{r7}
 800126e:	af00      	add	r7, sp, #0
 8001270:	4b05      	ldr	r3, [pc, #20]	; (8001288 <HAL_IncTick+0x1c>)
 8001272:	781b      	ldrb	r3, [r3, #0]
 8001274:	461a      	mov	r2, r3
 8001276:	4b05      	ldr	r3, [pc, #20]	; (800128c <HAL_IncTick+0x20>)
 8001278:	681b      	ldr	r3, [r3, #0]
 800127a:	4413      	add	r3, r2
 800127c:	4a03      	ldr	r2, [pc, #12]	; (800128c <HAL_IncTick+0x20>)
 800127e:	6013      	str	r3, [r2, #0]
 8001280:	bf00      	nop
 8001282:	46bd      	mov	sp, r7
 8001284:	bc80      	pop	{r7}
 8001286:	4770      	bx	lr
 8001288:	200000d8 	.word	0x200000d8
 800128c:	200015fc 	.word	0x200015fc

08001290 <HAL_GetTick>:
 8001290:	b480      	push	{r7}
 8001292:	af00      	add	r7, sp, #0
 8001294:	4b02      	ldr	r3, [pc, #8]	; (80012a0 <HAL_GetTick+0x10>)
 8001296:	681b      	ldr	r3, [r3, #0]
 8001298:	4618      	mov	r0, r3
 800129a:	46bd      	mov	sp, r7
 800129c:	bc80      	pop	{r7}
 800129e:	4770      	bx	lr
 80012a0:	200015fc 	.word	0x200015fc

080012a4 <__NVIC_SetPriorityGrouping>:
 80012a4:	b480      	push	{r7}
 80012a6:	b085      	sub	sp, #20
 80012a8:	af00      	add	r7, sp, #0
 80012aa:	6078      	str	r0, [r7, #4]
 80012ac:	687b      	ldr	r3, [r7, #4]
 80012ae:	f003 0307 	and.w	r3, r3, #7
 80012b2:	60fb      	str	r3, [r7, #12]
 80012b4:	4b0c      	ldr	r3, [pc, #48]	; (80012e8 <__NVIC_SetPriorityGrouping+0x44>)
 80012b6:	68db      	ldr	r3, [r3, #12]
 80012b8:	60bb      	str	r3, [r7, #8]
 80012ba:	68ba      	ldr	r2, [r7, #8]
 80012bc:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80012c0:	4013      	ands	r3, r2
 80012c2:	60bb      	str	r3, [r7, #8]
 80012c4:	68fb      	ldr	r3, [r7, #12]
 80012c6:	021a      	lsls	r2, r3, #8
 80012c8:	68bb      	ldr	r3, [r7, #8]
 80012ca:	4313      	orrs	r3, r2
 80012cc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80012d0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80012d4:	60bb      	str	r3, [r7, #8]
 80012d6:	4a04      	ldr	r2, [pc, #16]	; (80012e8 <__NVIC_SetPriorityGrouping+0x44>)
 80012d8:	68bb      	ldr	r3, [r7, #8]
 80012da:	60d3      	str	r3, [r2, #12]
 80012dc:	bf00      	nop
 80012de:	3714      	adds	r7, #20
 80012e0:	46bd      	mov	sp, r7
 80012e2:	bc80      	pop	{r7}
 80012e4:	4770      	bx	lr
 80012e6:	bf00      	nop
 80012e8:	e000ed00 	.word	0xe000ed00

080012ec <__NVIC_GetPriorityGrouping>:
 80012ec:	b480      	push	{r7}
 80012ee:	af00      	add	r7, sp, #0
 80012f0:	4b04      	ldr	r3, [pc, #16]	; (8001304 <__NVIC_GetPriorityGrouping+0x18>)
 80012f2:	68db      	ldr	r3, [r3, #12]
 80012f4:	0a1b      	lsrs	r3, r3, #8
 80012f6:	f003 0307 	and.w	r3, r3, #7
 80012fa:	4618      	mov	r0, r3
 80012fc:	46bd      	mov	sp, r7
 80012fe:	bc80      	pop	{r7}
 8001300:	4770      	bx	lr
 8001302:	bf00      	nop
 8001304:	e000ed00 	.word	0xe000ed00

08001308 <__NVIC_EnableIRQ>:
 8001308:	b480      	push	{r7}
 800130a:	b083      	sub	sp, #12
 800130c:	af00      	add	r7, sp, #0
 800130e:	4603      	mov	r3, r0
 8001310:	71fb      	strb	r3, [r7, #7]
 8001312:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001316:	2b00      	cmp	r3, #0
 8001318:	db0b      	blt.n	8001332 <__NVIC_EnableIRQ+0x2a>
 800131a:	79fb      	ldrb	r3, [r7, #7]
 800131c:	f003 021f 	and.w	r2, r3, #31
 8001320:	4906      	ldr	r1, [pc, #24]	; (800133c <__NVIC_EnableIRQ+0x34>)
 8001322:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001326:	095b      	lsrs	r3, r3, #5
 8001328:	2001      	movs	r0, #1
 800132a:	fa00 f202 	lsl.w	r2, r0, r2
 800132e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001332:	bf00      	nop
 8001334:	370c      	adds	r7, #12
 8001336:	46bd      	mov	sp, r7
 8001338:	bc80      	pop	{r7}
 800133a:	4770      	bx	lr
 800133c:	e000e100 	.word	0xe000e100

08001340 <__NVIC_SetPriority>:
 8001340:	b480      	push	{r7}
 8001342:	b083      	sub	sp, #12
 8001344:	af00      	add	r7, sp, #0
 8001346:	4603      	mov	r3, r0
 8001348:	6039      	str	r1, [r7, #0]
 800134a:	71fb      	strb	r3, [r7, #7]
 800134c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001350:	2b00      	cmp	r3, #0
 8001352:	db0a      	blt.n	800136a <__NVIC_SetPriority+0x2a>
 8001354:	683b      	ldr	r3, [r7, #0]
 8001356:	b2da      	uxtb	r2, r3
 8001358:	490c      	ldr	r1, [pc, #48]	; (800138c <__NVIC_SetPriority+0x4c>)
 800135a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800135e:	0112      	lsls	r2, r2, #4
 8001360:	b2d2      	uxtb	r2, r2
 8001362:	440b      	add	r3, r1
 8001364:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001368:	e00a      	b.n	8001380 <__NVIC_SetPriority+0x40>
 800136a:	683b      	ldr	r3, [r7, #0]
 800136c:	b2da      	uxtb	r2, r3
 800136e:	4908      	ldr	r1, [pc, #32]	; (8001390 <__NVIC_SetPriority+0x50>)
 8001370:	79fb      	ldrb	r3, [r7, #7]
 8001372:	f003 030f 	and.w	r3, r3, #15
 8001376:	3b04      	subs	r3, #4
 8001378:	0112      	lsls	r2, r2, #4
 800137a:	b2d2      	uxtb	r2, r2
 800137c:	440b      	add	r3, r1
 800137e:	761a      	strb	r2, [r3, #24]
 8001380:	bf00      	nop
 8001382:	370c      	adds	r7, #12
 8001384:	46bd      	mov	sp, r7
 8001386:	bc80      	pop	{r7}
 8001388:	4770      	bx	lr
 800138a:	bf00      	nop
 800138c:	e000e100 	.word	0xe000e100
 8001390:	e000ed00 	.word	0xe000ed00

08001394 <NVIC_EncodePriority>:
 8001394:	b480      	push	{r7}
 8001396:	b089      	sub	sp, #36	; 0x24
 8001398:	af00      	add	r7, sp, #0
 800139a:	60f8      	str	r0, [r7, #12]
 800139c:	60b9      	str	r1, [r7, #8]
 800139e:	607a      	str	r2, [r7, #4]
 80013a0:	68fb      	ldr	r3, [r7, #12]
 80013a2:	f003 0307 	and.w	r3, r3, #7
 80013a6:	61fb      	str	r3, [r7, #28]
 80013a8:	69fb      	ldr	r3, [r7, #28]
 80013aa:	f1c3 0307 	rsb	r3, r3, #7
 80013ae:	2b04      	cmp	r3, #4
 80013b0:	bf28      	it	cs
 80013b2:	2304      	movcs	r3, #4
 80013b4:	61bb      	str	r3, [r7, #24]
 80013b6:	69fb      	ldr	r3, [r7, #28]
 80013b8:	3304      	adds	r3, #4
 80013ba:	2b06      	cmp	r3, #6
 80013bc:	d902      	bls.n	80013c4 <NVIC_EncodePriority+0x30>
 80013be:	69fb      	ldr	r3, [r7, #28]
 80013c0:	3b03      	subs	r3, #3
 80013c2:	e000      	b.n	80013c6 <NVIC_EncodePriority+0x32>
 80013c4:	2300      	movs	r3, #0
 80013c6:	617b      	str	r3, [r7, #20]
 80013c8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80013cc:	69bb      	ldr	r3, [r7, #24]
 80013ce:	fa02 f303 	lsl.w	r3, r2, r3
 80013d2:	43da      	mvns	r2, r3
 80013d4:	68bb      	ldr	r3, [r7, #8]
 80013d6:	401a      	ands	r2, r3
 80013d8:	697b      	ldr	r3, [r7, #20]
 80013da:	409a      	lsls	r2, r3
 80013dc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80013e0:	697b      	ldr	r3, [r7, #20]
 80013e2:	fa01 f303 	lsl.w	r3, r1, r3
 80013e6:	43d9      	mvns	r1, r3
 80013e8:	687b      	ldr	r3, [r7, #4]
 80013ea:	400b      	ands	r3, r1
 80013ec:	4313      	orrs	r3, r2
 80013ee:	4618      	mov	r0, r3
 80013f0:	3724      	adds	r7, #36	; 0x24
 80013f2:	46bd      	mov	sp, r7
 80013f4:	bc80      	pop	{r7}
 80013f6:	4770      	bx	lr

080013f8 <HAL_NVIC_SetPriorityGrouping>:
 80013f8:	b580      	push	{r7, lr}
 80013fa:	b082      	sub	sp, #8
 80013fc:	af00      	add	r7, sp, #0
 80013fe:	6078      	str	r0, [r7, #4]
 8001400:	6878      	ldr	r0, [r7, #4]
 8001402:	f7ff ff4f 	bl	80012a4 <__NVIC_SetPriorityGrouping>
 8001406:	bf00      	nop
 8001408:	3708      	adds	r7, #8
 800140a:	46bd      	mov	sp, r7
 800140c:	bd80      	pop	{r7, pc}

0800140e <HAL_NVIC_SetPriority>:
 800140e:	b580      	push	{r7, lr}
 8001410:	b086      	sub	sp, #24
 8001412:	af00      	add	r7, sp, #0
 8001414:	4603      	mov	r3, r0
 8001416:	60b9      	str	r1, [r7, #8]
 8001418:	607a      	str	r2, [r7, #4]
 800141a:	73fb      	strb	r3, [r7, #15]
 800141c:	2300      	movs	r3, #0
 800141e:	617b      	str	r3, [r7, #20]
 8001420:	f7ff ff64 	bl	80012ec <__NVIC_GetPriorityGrouping>
 8001424:	6178      	str	r0, [r7, #20]
 8001426:	687a      	ldr	r2, [r7, #4]
 8001428:	68b9      	ldr	r1, [r7, #8]
 800142a:	6978      	ldr	r0, [r7, #20]
 800142c:	f7ff ffb2 	bl	8001394 <NVIC_EncodePriority>
 8001430:	4602      	mov	r2, r0
 8001432:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001436:	4611      	mov	r1, r2
 8001438:	4618      	mov	r0, r3
 800143a:	f7ff ff81 	bl	8001340 <__NVIC_SetPriority>
 800143e:	bf00      	nop
 8001440:	3718      	adds	r7, #24
 8001442:	46bd      	mov	sp, r7
 8001444:	bd80      	pop	{r7, pc}

08001446 <HAL_NVIC_EnableIRQ>:
 8001446:	b580      	push	{r7, lr}
 8001448:	b082      	sub	sp, #8
 800144a:	af00      	add	r7, sp, #0
 800144c:	4603      	mov	r3, r0
 800144e:	71fb      	strb	r3, [r7, #7]
 8001450:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001454:	4618      	mov	r0, r3
 8001456:	f7ff ff57 	bl	8001308 <__NVIC_EnableIRQ>
 800145a:	bf00      	nop
 800145c:	3708      	adds	r7, #8
 800145e:	46bd      	mov	sp, r7
 8001460:	bd80      	pop	{r7, pc}
	...

08001464 <HAL_GPIO_Init>:
 8001464:	b480      	push	{r7}
 8001466:	b08b      	sub	sp, #44	; 0x2c
 8001468:	af00      	add	r7, sp, #0
 800146a:	6078      	str	r0, [r7, #4]
 800146c:	6039      	str	r1, [r7, #0]
 800146e:	2300      	movs	r3, #0
 8001470:	627b      	str	r3, [r7, #36]	; 0x24
 8001472:	2300      	movs	r3, #0
 8001474:	623b      	str	r3, [r7, #32]
 8001476:	e169      	b.n	800174c <HAL_GPIO_Init+0x2e8>
 8001478:	2201      	movs	r2, #1
 800147a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800147c:	fa02 f303 	lsl.w	r3, r2, r3
 8001480:	61fb      	str	r3, [r7, #28]
 8001482:	683b      	ldr	r3, [r7, #0]
 8001484:	681b      	ldr	r3, [r3, #0]
 8001486:	69fa      	ldr	r2, [r7, #28]
 8001488:	4013      	ands	r3, r2
 800148a:	61bb      	str	r3, [r7, #24]
 800148c:	69ba      	ldr	r2, [r7, #24]
 800148e:	69fb      	ldr	r3, [r7, #28]
 8001490:	429a      	cmp	r2, r3
 8001492:	f040 8158 	bne.w	8001746 <HAL_GPIO_Init+0x2e2>
 8001496:	683b      	ldr	r3, [r7, #0]
 8001498:	685b      	ldr	r3, [r3, #4]
 800149a:	4a9a      	ldr	r2, [pc, #616]	; (8001704 <HAL_GPIO_Init+0x2a0>)
 800149c:	4293      	cmp	r3, r2
 800149e:	d05e      	beq.n	800155e <HAL_GPIO_Init+0xfa>
 80014a0:	4a98      	ldr	r2, [pc, #608]	; (8001704 <HAL_GPIO_Init+0x2a0>)
 80014a2:	4293      	cmp	r3, r2
 80014a4:	d875      	bhi.n	8001592 <HAL_GPIO_Init+0x12e>
 80014a6:	4a98      	ldr	r2, [pc, #608]	; (8001708 <HAL_GPIO_Init+0x2a4>)
 80014a8:	4293      	cmp	r3, r2
 80014aa:	d058      	beq.n	800155e <HAL_GPIO_Init+0xfa>
 80014ac:	4a96      	ldr	r2, [pc, #600]	; (8001708 <HAL_GPIO_Init+0x2a4>)
 80014ae:	4293      	cmp	r3, r2
 80014b0:	d86f      	bhi.n	8001592 <HAL_GPIO_Init+0x12e>
 80014b2:	4a96      	ldr	r2, [pc, #600]	; (800170c <HAL_GPIO_Init+0x2a8>)
 80014b4:	4293      	cmp	r3, r2
 80014b6:	d052      	beq.n	800155e <HAL_GPIO_Init+0xfa>
 80014b8:	4a94      	ldr	r2, [pc, #592]	; (800170c <HAL_GPIO_Init+0x2a8>)
 80014ba:	4293      	cmp	r3, r2
 80014bc:	d869      	bhi.n	8001592 <HAL_GPIO_Init+0x12e>
 80014be:	4a94      	ldr	r2, [pc, #592]	; (8001710 <HAL_GPIO_Init+0x2ac>)
 80014c0:	4293      	cmp	r3, r2
 80014c2:	d04c      	beq.n	800155e <HAL_GPIO_Init+0xfa>
 80014c4:	4a92      	ldr	r2, [pc, #584]	; (8001710 <HAL_GPIO_Init+0x2ac>)
 80014c6:	4293      	cmp	r3, r2
 80014c8:	d863      	bhi.n	8001592 <HAL_GPIO_Init+0x12e>
 80014ca:	4a92      	ldr	r2, [pc, #584]	; (8001714 <HAL_GPIO_Init+0x2b0>)
 80014cc:	4293      	cmp	r3, r2
 80014ce:	d046      	beq.n	800155e <HAL_GPIO_Init+0xfa>
 80014d0:	4a90      	ldr	r2, [pc, #576]	; (8001714 <HAL_GPIO_Init+0x2b0>)
 80014d2:	4293      	cmp	r3, r2
 80014d4:	d85d      	bhi.n	8001592 <HAL_GPIO_Init+0x12e>
 80014d6:	2b12      	cmp	r3, #18
 80014d8:	d82a      	bhi.n	8001530 <HAL_GPIO_Init+0xcc>
 80014da:	2b12      	cmp	r3, #18
 80014dc:	d859      	bhi.n	8001592 <HAL_GPIO_Init+0x12e>
 80014de:	a201      	add	r2, pc, #4	; (adr r2, 80014e4 <HAL_GPIO_Init+0x80>)
 80014e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80014e4:	0800155f 	.word	0x0800155f
 80014e8:	08001539 	.word	0x08001539
 80014ec:	0800154b 	.word	0x0800154b
 80014f0:	0800158d 	.word	0x0800158d
 80014f4:	08001593 	.word	0x08001593
 80014f8:	08001593 	.word	0x08001593
 80014fc:	08001593 	.word	0x08001593
 8001500:	08001593 	.word	0x08001593
 8001504:	08001593 	.word	0x08001593
 8001508:	08001593 	.word	0x08001593
 800150c:	08001593 	.word	0x08001593
 8001510:	08001593 	.word	0x08001593
 8001514:	08001593 	.word	0x08001593
 8001518:	08001593 	.word	0x08001593
 800151c:	08001593 	.word	0x08001593
 8001520:	08001593 	.word	0x08001593
 8001524:	08001593 	.word	0x08001593
 8001528:	08001541 	.word	0x08001541
 800152c:	08001555 	.word	0x08001555
 8001530:	4a79      	ldr	r2, [pc, #484]	; (8001718 <HAL_GPIO_Init+0x2b4>)
 8001532:	4293      	cmp	r3, r2
 8001534:	d013      	beq.n	800155e <HAL_GPIO_Init+0xfa>
 8001536:	e02c      	b.n	8001592 <HAL_GPIO_Init+0x12e>
 8001538:	683b      	ldr	r3, [r7, #0]
 800153a:	68db      	ldr	r3, [r3, #12]
 800153c:	623b      	str	r3, [r7, #32]
 800153e:	e029      	b.n	8001594 <HAL_GPIO_Init+0x130>
 8001540:	683b      	ldr	r3, [r7, #0]
 8001542:	68db      	ldr	r3, [r3, #12]
 8001544:	3304      	adds	r3, #4
 8001546:	623b      	str	r3, [r7, #32]
 8001548:	e024      	b.n	8001594 <HAL_GPIO_Init+0x130>
 800154a:	683b      	ldr	r3, [r7, #0]
 800154c:	68db      	ldr	r3, [r3, #12]
 800154e:	3308      	adds	r3, #8
 8001550:	623b      	str	r3, [r7, #32]
 8001552:	e01f      	b.n	8001594 <HAL_GPIO_Init+0x130>
 8001554:	683b      	ldr	r3, [r7, #0]
 8001556:	68db      	ldr	r3, [r3, #12]
 8001558:	330c      	adds	r3, #12
 800155a:	623b      	str	r3, [r7, #32]
 800155c:	e01a      	b.n	8001594 <HAL_GPIO_Init+0x130>
 800155e:	683b      	ldr	r3, [r7, #0]
 8001560:	689b      	ldr	r3, [r3, #8]
 8001562:	2b00      	cmp	r3, #0
 8001564:	d102      	bne.n	800156c <HAL_GPIO_Init+0x108>
 8001566:	2304      	movs	r3, #4
 8001568:	623b      	str	r3, [r7, #32]
 800156a:	e013      	b.n	8001594 <HAL_GPIO_Init+0x130>
 800156c:	683b      	ldr	r3, [r7, #0]
 800156e:	689b      	ldr	r3, [r3, #8]
 8001570:	2b01      	cmp	r3, #1
 8001572:	d105      	bne.n	8001580 <HAL_GPIO_Init+0x11c>
 8001574:	2308      	movs	r3, #8
 8001576:	623b      	str	r3, [r7, #32]
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	69fa      	ldr	r2, [r7, #28]
 800157c:	611a      	str	r2, [r3, #16]
 800157e:	e009      	b.n	8001594 <HAL_GPIO_Init+0x130>
 8001580:	2308      	movs	r3, #8
 8001582:	623b      	str	r3, [r7, #32]
 8001584:	687b      	ldr	r3, [r7, #4]
 8001586:	69fa      	ldr	r2, [r7, #28]
 8001588:	615a      	str	r2, [r3, #20]
 800158a:	e003      	b.n	8001594 <HAL_GPIO_Init+0x130>
 800158c:	2300      	movs	r3, #0
 800158e:	623b      	str	r3, [r7, #32]
 8001590:	e000      	b.n	8001594 <HAL_GPIO_Init+0x130>
 8001592:	bf00      	nop
 8001594:	69bb      	ldr	r3, [r7, #24]
 8001596:	2bff      	cmp	r3, #255	; 0xff
 8001598:	d801      	bhi.n	800159e <HAL_GPIO_Init+0x13a>
 800159a:	687b      	ldr	r3, [r7, #4]
 800159c:	e001      	b.n	80015a2 <HAL_GPIO_Init+0x13e>
 800159e:	687b      	ldr	r3, [r7, #4]
 80015a0:	3304      	adds	r3, #4
 80015a2:	617b      	str	r3, [r7, #20]
 80015a4:	69bb      	ldr	r3, [r7, #24]
 80015a6:	2bff      	cmp	r3, #255	; 0xff
 80015a8:	d802      	bhi.n	80015b0 <HAL_GPIO_Init+0x14c>
 80015aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015ac:	009b      	lsls	r3, r3, #2
 80015ae:	e002      	b.n	80015b6 <HAL_GPIO_Init+0x152>
 80015b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015b2:	3b08      	subs	r3, #8
 80015b4:	009b      	lsls	r3, r3, #2
 80015b6:	613b      	str	r3, [r7, #16]
 80015b8:	697b      	ldr	r3, [r7, #20]
 80015ba:	681a      	ldr	r2, [r3, #0]
 80015bc:	210f      	movs	r1, #15
 80015be:	693b      	ldr	r3, [r7, #16]
 80015c0:	fa01 f303 	lsl.w	r3, r1, r3
 80015c4:	43db      	mvns	r3, r3
 80015c6:	401a      	ands	r2, r3
 80015c8:	6a39      	ldr	r1, [r7, #32]
 80015ca:	693b      	ldr	r3, [r7, #16]
 80015cc:	fa01 f303 	lsl.w	r3, r1, r3
 80015d0:	431a      	orrs	r2, r3
 80015d2:	697b      	ldr	r3, [r7, #20]
 80015d4:	601a      	str	r2, [r3, #0]
 80015d6:	683b      	ldr	r3, [r7, #0]
 80015d8:	685b      	ldr	r3, [r3, #4]
 80015da:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015de:	2b00      	cmp	r3, #0
 80015e0:	f000 80b1 	beq.w	8001746 <HAL_GPIO_Init+0x2e2>
 80015e4:	4b4d      	ldr	r3, [pc, #308]	; (800171c <HAL_GPIO_Init+0x2b8>)
 80015e6:	699b      	ldr	r3, [r3, #24]
 80015e8:	4a4c      	ldr	r2, [pc, #304]	; (800171c <HAL_GPIO_Init+0x2b8>)
 80015ea:	f043 0301 	orr.w	r3, r3, #1
 80015ee:	6193      	str	r3, [r2, #24]
 80015f0:	4b4a      	ldr	r3, [pc, #296]	; (800171c <HAL_GPIO_Init+0x2b8>)
 80015f2:	699b      	ldr	r3, [r3, #24]
 80015f4:	f003 0301 	and.w	r3, r3, #1
 80015f8:	60bb      	str	r3, [r7, #8]
 80015fa:	68bb      	ldr	r3, [r7, #8]
 80015fc:	4a48      	ldr	r2, [pc, #288]	; (8001720 <HAL_GPIO_Init+0x2bc>)
 80015fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001600:	089b      	lsrs	r3, r3, #2
 8001602:	3302      	adds	r3, #2
 8001604:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001608:	60fb      	str	r3, [r7, #12]
 800160a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800160c:	f003 0303 	and.w	r3, r3, #3
 8001610:	009b      	lsls	r3, r3, #2
 8001612:	220f      	movs	r2, #15
 8001614:	fa02 f303 	lsl.w	r3, r2, r3
 8001618:	43db      	mvns	r3, r3
 800161a:	68fa      	ldr	r2, [r7, #12]
 800161c:	4013      	ands	r3, r2
 800161e:	60fb      	str	r3, [r7, #12]
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	4a40      	ldr	r2, [pc, #256]	; (8001724 <HAL_GPIO_Init+0x2c0>)
 8001624:	4293      	cmp	r3, r2
 8001626:	d013      	beq.n	8001650 <HAL_GPIO_Init+0x1ec>
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	4a3f      	ldr	r2, [pc, #252]	; (8001728 <HAL_GPIO_Init+0x2c4>)
 800162c:	4293      	cmp	r3, r2
 800162e:	d00d      	beq.n	800164c <HAL_GPIO_Init+0x1e8>
 8001630:	687b      	ldr	r3, [r7, #4]
 8001632:	4a3e      	ldr	r2, [pc, #248]	; (800172c <HAL_GPIO_Init+0x2c8>)
 8001634:	4293      	cmp	r3, r2
 8001636:	d007      	beq.n	8001648 <HAL_GPIO_Init+0x1e4>
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	4a3d      	ldr	r2, [pc, #244]	; (8001730 <HAL_GPIO_Init+0x2cc>)
 800163c:	4293      	cmp	r3, r2
 800163e:	d101      	bne.n	8001644 <HAL_GPIO_Init+0x1e0>
 8001640:	2303      	movs	r3, #3
 8001642:	e006      	b.n	8001652 <HAL_GPIO_Init+0x1ee>
 8001644:	2304      	movs	r3, #4
 8001646:	e004      	b.n	8001652 <HAL_GPIO_Init+0x1ee>
 8001648:	2302      	movs	r3, #2
 800164a:	e002      	b.n	8001652 <HAL_GPIO_Init+0x1ee>
 800164c:	2301      	movs	r3, #1
 800164e:	e000      	b.n	8001652 <HAL_GPIO_Init+0x1ee>
 8001650:	2300      	movs	r3, #0
 8001652:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001654:	f002 0203 	and.w	r2, r2, #3
 8001658:	0092      	lsls	r2, r2, #2
 800165a:	4093      	lsls	r3, r2
 800165c:	68fa      	ldr	r2, [r7, #12]
 800165e:	4313      	orrs	r3, r2
 8001660:	60fb      	str	r3, [r7, #12]
 8001662:	492f      	ldr	r1, [pc, #188]	; (8001720 <HAL_GPIO_Init+0x2bc>)
 8001664:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001666:	089b      	lsrs	r3, r3, #2
 8001668:	3302      	adds	r3, #2
 800166a:	68fa      	ldr	r2, [r7, #12]
 800166c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001670:	683b      	ldr	r3, [r7, #0]
 8001672:	685b      	ldr	r3, [r3, #4]
 8001674:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001678:	2b00      	cmp	r3, #0
 800167a:	d006      	beq.n	800168a <HAL_GPIO_Init+0x226>
 800167c:	4b2d      	ldr	r3, [pc, #180]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 800167e:	681a      	ldr	r2, [r3, #0]
 8001680:	492c      	ldr	r1, [pc, #176]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 8001682:	69bb      	ldr	r3, [r7, #24]
 8001684:	4313      	orrs	r3, r2
 8001686:	600b      	str	r3, [r1, #0]
 8001688:	e006      	b.n	8001698 <HAL_GPIO_Init+0x234>
 800168a:	4b2a      	ldr	r3, [pc, #168]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 800168c:	681a      	ldr	r2, [r3, #0]
 800168e:	69bb      	ldr	r3, [r7, #24]
 8001690:	43db      	mvns	r3, r3
 8001692:	4928      	ldr	r1, [pc, #160]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 8001694:	4013      	ands	r3, r2
 8001696:	600b      	str	r3, [r1, #0]
 8001698:	683b      	ldr	r3, [r7, #0]
 800169a:	685b      	ldr	r3, [r3, #4]
 800169c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d006      	beq.n	80016b2 <HAL_GPIO_Init+0x24e>
 80016a4:	4b23      	ldr	r3, [pc, #140]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 80016a6:	685a      	ldr	r2, [r3, #4]
 80016a8:	4922      	ldr	r1, [pc, #136]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 80016aa:	69bb      	ldr	r3, [r7, #24]
 80016ac:	4313      	orrs	r3, r2
 80016ae:	604b      	str	r3, [r1, #4]
 80016b0:	e006      	b.n	80016c0 <HAL_GPIO_Init+0x25c>
 80016b2:	4b20      	ldr	r3, [pc, #128]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 80016b4:	685a      	ldr	r2, [r3, #4]
 80016b6:	69bb      	ldr	r3, [r7, #24]
 80016b8:	43db      	mvns	r3, r3
 80016ba:	491e      	ldr	r1, [pc, #120]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 80016bc:	4013      	ands	r3, r2
 80016be:	604b      	str	r3, [r1, #4]
 80016c0:	683b      	ldr	r3, [r7, #0]
 80016c2:	685b      	ldr	r3, [r3, #4]
 80016c4:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80016c8:	2b00      	cmp	r3, #0
 80016ca:	d006      	beq.n	80016da <HAL_GPIO_Init+0x276>
 80016cc:	4b19      	ldr	r3, [pc, #100]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 80016ce:	689a      	ldr	r2, [r3, #8]
 80016d0:	4918      	ldr	r1, [pc, #96]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 80016d2:	69bb      	ldr	r3, [r7, #24]
 80016d4:	4313      	orrs	r3, r2
 80016d6:	608b      	str	r3, [r1, #8]
 80016d8:	e006      	b.n	80016e8 <HAL_GPIO_Init+0x284>
 80016da:	4b16      	ldr	r3, [pc, #88]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 80016dc:	689a      	ldr	r2, [r3, #8]
 80016de:	69bb      	ldr	r3, [r7, #24]
 80016e0:	43db      	mvns	r3, r3
 80016e2:	4914      	ldr	r1, [pc, #80]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 80016e4:	4013      	ands	r3, r2
 80016e6:	608b      	str	r3, [r1, #8]
 80016e8:	683b      	ldr	r3, [r7, #0]
 80016ea:	685b      	ldr	r3, [r3, #4]
 80016ec:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80016f0:	2b00      	cmp	r3, #0
 80016f2:	d021      	beq.n	8001738 <HAL_GPIO_Init+0x2d4>
 80016f4:	4b0f      	ldr	r3, [pc, #60]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 80016f6:	68da      	ldr	r2, [r3, #12]
 80016f8:	490e      	ldr	r1, [pc, #56]	; (8001734 <HAL_GPIO_Init+0x2d0>)
 80016fa:	69bb      	ldr	r3, [r7, #24]
 80016fc:	4313      	orrs	r3, r2
 80016fe:	60cb      	str	r3, [r1, #12]
 8001700:	e021      	b.n	8001746 <HAL_GPIO_Init+0x2e2>
 8001702:	bf00      	nop
 8001704:	10320000 	.word	0x10320000
 8001708:	10310000 	.word	0x10310000
 800170c:	10220000 	.word	0x10220000
 8001710:	10210000 	.word	0x10210000
 8001714:	10120000 	.word	0x10120000
 8001718:	10110000 	.word	0x10110000
 800171c:	40021000 	.word	0x40021000
 8001720:	40010000 	.word	0x40010000
 8001724:	40010800 	.word	0x40010800
 8001728:	40010c00 	.word	0x40010c00
 800172c:	40011000 	.word	0x40011000
 8001730:	40011400 	.word	0x40011400
 8001734:	40010400 	.word	0x40010400
 8001738:	4b0b      	ldr	r3, [pc, #44]	; (8001768 <HAL_GPIO_Init+0x304>)
 800173a:	68da      	ldr	r2, [r3, #12]
 800173c:	69bb      	ldr	r3, [r7, #24]
 800173e:	43db      	mvns	r3, r3
 8001740:	4909      	ldr	r1, [pc, #36]	; (8001768 <HAL_GPIO_Init+0x304>)
 8001742:	4013      	ands	r3, r2
 8001744:	60cb      	str	r3, [r1, #12]
 8001746:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001748:	3301      	adds	r3, #1
 800174a:	627b      	str	r3, [r7, #36]	; 0x24
 800174c:	683b      	ldr	r3, [r7, #0]
 800174e:	681a      	ldr	r2, [r3, #0]
 8001750:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001752:	fa22 f303 	lsr.w	r3, r2, r3
 8001756:	2b00      	cmp	r3, #0
 8001758:	f47f ae8e 	bne.w	8001478 <HAL_GPIO_Init+0x14>
 800175c:	bf00      	nop
 800175e:	bf00      	nop
 8001760:	372c      	adds	r7, #44	; 0x2c
 8001762:	46bd      	mov	sp, r7
 8001764:	bc80      	pop	{r7}
 8001766:	4770      	bx	lr
 8001768:	40010400 	.word	0x40010400

0800176c <HAL_GPIO_WritePin>:
 800176c:	b480      	push	{r7}
 800176e:	b083      	sub	sp, #12
 8001770:	af00      	add	r7, sp, #0
 8001772:	6078      	str	r0, [r7, #4]
 8001774:	460b      	mov	r3, r1
 8001776:	807b      	strh	r3, [r7, #2]
 8001778:	4613      	mov	r3, r2
 800177a:	707b      	strb	r3, [r7, #1]
 800177c:	787b      	ldrb	r3, [r7, #1]
 800177e:	2b00      	cmp	r3, #0
 8001780:	d003      	beq.n	800178a <HAL_GPIO_WritePin+0x1e>
 8001782:	887a      	ldrh	r2, [r7, #2]
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	611a      	str	r2, [r3, #16]
 8001788:	e003      	b.n	8001792 <HAL_GPIO_WritePin+0x26>
 800178a:	887b      	ldrh	r3, [r7, #2]
 800178c:	041a      	lsls	r2, r3, #16
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	611a      	str	r2, [r3, #16]
 8001792:	bf00      	nop
 8001794:	370c      	adds	r7, #12
 8001796:	46bd      	mov	sp, r7
 8001798:	bc80      	pop	{r7}
 800179a:	4770      	bx	lr

0800179c <HAL_GPIO_TogglePin>:
 800179c:	b480      	push	{r7}
 800179e:	b085      	sub	sp, #20
 80017a0:	af00      	add	r7, sp, #0
 80017a2:	6078      	str	r0, [r7, #4]
 80017a4:	460b      	mov	r3, r1
 80017a6:	807b      	strh	r3, [r7, #2]
 80017a8:	687b      	ldr	r3, [r7, #4]
 80017aa:	68db      	ldr	r3, [r3, #12]
 80017ac:	60fb      	str	r3, [r7, #12]
 80017ae:	887a      	ldrh	r2, [r7, #2]
 80017b0:	68fb      	ldr	r3, [r7, #12]
 80017b2:	4013      	ands	r3, r2
 80017b4:	041a      	lsls	r2, r3, #16
 80017b6:	68fb      	ldr	r3, [r7, #12]
 80017b8:	43d9      	mvns	r1, r3
 80017ba:	887b      	ldrh	r3, [r7, #2]
 80017bc:	400b      	ands	r3, r1
 80017be:	431a      	orrs	r2, r3
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	611a      	str	r2, [r3, #16]
 80017c4:	bf00      	nop
 80017c6:	3714      	adds	r7, #20
 80017c8:	46bd      	mov	sp, r7
 80017ca:	bc80      	pop	{r7}
 80017cc:	4770      	bx	lr
	...

080017d0 <HAL_RCC_OscConfig>:
 80017d0:	b580      	push	{r7, lr}
 80017d2:	b086      	sub	sp, #24
 80017d4:	af00      	add	r7, sp, #0
 80017d6:	6078      	str	r0, [r7, #4]
 80017d8:	687b      	ldr	r3, [r7, #4]
 80017da:	2b00      	cmp	r3, #0
 80017dc:	d101      	bne.n	80017e2 <HAL_RCC_OscConfig+0x12>
 80017de:	2301      	movs	r3, #1
 80017e0:	e26c      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	f003 0301 	and.w	r3, r3, #1
 80017ea:	2b00      	cmp	r3, #0
 80017ec:	f000 8087 	beq.w	80018fe <HAL_RCC_OscConfig+0x12e>
 80017f0:	4b92      	ldr	r3, [pc, #584]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 80017f2:	685b      	ldr	r3, [r3, #4]
 80017f4:	f003 030c 	and.w	r3, r3, #12
 80017f8:	2b04      	cmp	r3, #4
 80017fa:	d00c      	beq.n	8001816 <HAL_RCC_OscConfig+0x46>
 80017fc:	4b8f      	ldr	r3, [pc, #572]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 80017fe:	685b      	ldr	r3, [r3, #4]
 8001800:	f003 030c 	and.w	r3, r3, #12
 8001804:	2b08      	cmp	r3, #8
 8001806:	d112      	bne.n	800182e <HAL_RCC_OscConfig+0x5e>
 8001808:	4b8c      	ldr	r3, [pc, #560]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 800180a:	685b      	ldr	r3, [r3, #4]
 800180c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001810:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001814:	d10b      	bne.n	800182e <HAL_RCC_OscConfig+0x5e>
 8001816:	4b89      	ldr	r3, [pc, #548]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800181e:	2b00      	cmp	r3, #0
 8001820:	d06c      	beq.n	80018fc <HAL_RCC_OscConfig+0x12c>
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	685b      	ldr	r3, [r3, #4]
 8001826:	2b00      	cmp	r3, #0
 8001828:	d168      	bne.n	80018fc <HAL_RCC_OscConfig+0x12c>
 800182a:	2301      	movs	r3, #1
 800182c:	e246      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	685b      	ldr	r3, [r3, #4]
 8001832:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001836:	d106      	bne.n	8001846 <HAL_RCC_OscConfig+0x76>
 8001838:	4b80      	ldr	r3, [pc, #512]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	4a7f      	ldr	r2, [pc, #508]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 800183e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001842:	6013      	str	r3, [r2, #0]
 8001844:	e02e      	b.n	80018a4 <HAL_RCC_OscConfig+0xd4>
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	685b      	ldr	r3, [r3, #4]
 800184a:	2b00      	cmp	r3, #0
 800184c:	d10c      	bne.n	8001868 <HAL_RCC_OscConfig+0x98>
 800184e:	4b7b      	ldr	r3, [pc, #492]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	4a7a      	ldr	r2, [pc, #488]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001854:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001858:	6013      	str	r3, [r2, #0]
 800185a:	4b78      	ldr	r3, [pc, #480]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	4a77      	ldr	r2, [pc, #476]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001860:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001864:	6013      	str	r3, [r2, #0]
 8001866:	e01d      	b.n	80018a4 <HAL_RCC_OscConfig+0xd4>
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	685b      	ldr	r3, [r3, #4]
 800186c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001870:	d10c      	bne.n	800188c <HAL_RCC_OscConfig+0xbc>
 8001872:	4b72      	ldr	r3, [pc, #456]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001874:	681b      	ldr	r3, [r3, #0]
 8001876:	4a71      	ldr	r2, [pc, #452]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001878:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800187c:	6013      	str	r3, [r2, #0]
 800187e:	4b6f      	ldr	r3, [pc, #444]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	4a6e      	ldr	r2, [pc, #440]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001884:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001888:	6013      	str	r3, [r2, #0]
 800188a:	e00b      	b.n	80018a4 <HAL_RCC_OscConfig+0xd4>
 800188c:	4b6b      	ldr	r3, [pc, #428]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	4a6a      	ldr	r2, [pc, #424]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001892:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001896:	6013      	str	r3, [r2, #0]
 8001898:	4b68      	ldr	r3, [pc, #416]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	4a67      	ldr	r2, [pc, #412]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 800189e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018a2:	6013      	str	r3, [r2, #0]
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	685b      	ldr	r3, [r3, #4]
 80018a8:	2b00      	cmp	r3, #0
 80018aa:	d013      	beq.n	80018d4 <HAL_RCC_OscConfig+0x104>
 80018ac:	f7ff fcf0 	bl	8001290 <HAL_GetTick>
 80018b0:	6138      	str	r0, [r7, #16]
 80018b2:	e008      	b.n	80018c6 <HAL_RCC_OscConfig+0xf6>
 80018b4:	f7ff fcec 	bl	8001290 <HAL_GetTick>
 80018b8:	4602      	mov	r2, r0
 80018ba:	693b      	ldr	r3, [r7, #16]
 80018bc:	1ad3      	subs	r3, r2, r3
 80018be:	2b64      	cmp	r3, #100	; 0x64
 80018c0:	d901      	bls.n	80018c6 <HAL_RCC_OscConfig+0xf6>
 80018c2:	2303      	movs	r3, #3
 80018c4:	e1fa      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 80018c6:	4b5d      	ldr	r3, [pc, #372]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 80018c8:	681b      	ldr	r3, [r3, #0]
 80018ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80018ce:	2b00      	cmp	r3, #0
 80018d0:	d0f0      	beq.n	80018b4 <HAL_RCC_OscConfig+0xe4>
 80018d2:	e014      	b.n	80018fe <HAL_RCC_OscConfig+0x12e>
 80018d4:	f7ff fcdc 	bl	8001290 <HAL_GetTick>
 80018d8:	6138      	str	r0, [r7, #16]
 80018da:	e008      	b.n	80018ee <HAL_RCC_OscConfig+0x11e>
 80018dc:	f7ff fcd8 	bl	8001290 <HAL_GetTick>
 80018e0:	4602      	mov	r2, r0
 80018e2:	693b      	ldr	r3, [r7, #16]
 80018e4:	1ad3      	subs	r3, r2, r3
 80018e6:	2b64      	cmp	r3, #100	; 0x64
 80018e8:	d901      	bls.n	80018ee <HAL_RCC_OscConfig+0x11e>
 80018ea:	2303      	movs	r3, #3
 80018ec:	e1e6      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 80018ee:	4b53      	ldr	r3, [pc, #332]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80018f6:	2b00      	cmp	r3, #0
 80018f8:	d1f0      	bne.n	80018dc <HAL_RCC_OscConfig+0x10c>
 80018fa:	e000      	b.n	80018fe <HAL_RCC_OscConfig+0x12e>
 80018fc:	bf00      	nop
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	f003 0302 	and.w	r3, r3, #2
 8001906:	2b00      	cmp	r3, #0
 8001908:	d063      	beq.n	80019d2 <HAL_RCC_OscConfig+0x202>
 800190a:	4b4c      	ldr	r3, [pc, #304]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 800190c:	685b      	ldr	r3, [r3, #4]
 800190e:	f003 030c 	and.w	r3, r3, #12
 8001912:	2b00      	cmp	r3, #0
 8001914:	d00b      	beq.n	800192e <HAL_RCC_OscConfig+0x15e>
 8001916:	4b49      	ldr	r3, [pc, #292]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001918:	685b      	ldr	r3, [r3, #4]
 800191a:	f003 030c 	and.w	r3, r3, #12
 800191e:	2b08      	cmp	r3, #8
 8001920:	d11c      	bne.n	800195c <HAL_RCC_OscConfig+0x18c>
 8001922:	4b46      	ldr	r3, [pc, #280]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001924:	685b      	ldr	r3, [r3, #4]
 8001926:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800192a:	2b00      	cmp	r3, #0
 800192c:	d116      	bne.n	800195c <HAL_RCC_OscConfig+0x18c>
 800192e:	4b43      	ldr	r3, [pc, #268]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001930:	681b      	ldr	r3, [r3, #0]
 8001932:	f003 0302 	and.w	r3, r3, #2
 8001936:	2b00      	cmp	r3, #0
 8001938:	d005      	beq.n	8001946 <HAL_RCC_OscConfig+0x176>
 800193a:	687b      	ldr	r3, [r7, #4]
 800193c:	691b      	ldr	r3, [r3, #16]
 800193e:	2b01      	cmp	r3, #1
 8001940:	d001      	beq.n	8001946 <HAL_RCC_OscConfig+0x176>
 8001942:	2301      	movs	r3, #1
 8001944:	e1ba      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001946:	4b3d      	ldr	r3, [pc, #244]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001948:	681b      	ldr	r3, [r3, #0]
 800194a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	695b      	ldr	r3, [r3, #20]
 8001952:	00db      	lsls	r3, r3, #3
 8001954:	4939      	ldr	r1, [pc, #228]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001956:	4313      	orrs	r3, r2
 8001958:	600b      	str	r3, [r1, #0]
 800195a:	e03a      	b.n	80019d2 <HAL_RCC_OscConfig+0x202>
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	691b      	ldr	r3, [r3, #16]
 8001960:	2b00      	cmp	r3, #0
 8001962:	d020      	beq.n	80019a6 <HAL_RCC_OscConfig+0x1d6>
 8001964:	4b36      	ldr	r3, [pc, #216]	; (8001a40 <HAL_RCC_OscConfig+0x270>)
 8001966:	2201      	movs	r2, #1
 8001968:	601a      	str	r2, [r3, #0]
 800196a:	f7ff fc91 	bl	8001290 <HAL_GetTick>
 800196e:	6138      	str	r0, [r7, #16]
 8001970:	e008      	b.n	8001984 <HAL_RCC_OscConfig+0x1b4>
 8001972:	f7ff fc8d 	bl	8001290 <HAL_GetTick>
 8001976:	4602      	mov	r2, r0
 8001978:	693b      	ldr	r3, [r7, #16]
 800197a:	1ad3      	subs	r3, r2, r3
 800197c:	2b02      	cmp	r3, #2
 800197e:	d901      	bls.n	8001984 <HAL_RCC_OscConfig+0x1b4>
 8001980:	2303      	movs	r3, #3
 8001982:	e19b      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001984:	4b2d      	ldr	r3, [pc, #180]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	f003 0302 	and.w	r3, r3, #2
 800198c:	2b00      	cmp	r3, #0
 800198e:	d0f0      	beq.n	8001972 <HAL_RCC_OscConfig+0x1a2>
 8001990:	4b2a      	ldr	r3, [pc, #168]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	695b      	ldr	r3, [r3, #20]
 800199c:	00db      	lsls	r3, r3, #3
 800199e:	4927      	ldr	r1, [pc, #156]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 80019a0:	4313      	orrs	r3, r2
 80019a2:	600b      	str	r3, [r1, #0]
 80019a4:	e015      	b.n	80019d2 <HAL_RCC_OscConfig+0x202>
 80019a6:	4b26      	ldr	r3, [pc, #152]	; (8001a40 <HAL_RCC_OscConfig+0x270>)
 80019a8:	2200      	movs	r2, #0
 80019aa:	601a      	str	r2, [r3, #0]
 80019ac:	f7ff fc70 	bl	8001290 <HAL_GetTick>
 80019b0:	6138      	str	r0, [r7, #16]
 80019b2:	e008      	b.n	80019c6 <HAL_RCC_OscConfig+0x1f6>
 80019b4:	f7ff fc6c 	bl	8001290 <HAL_GetTick>
 80019b8:	4602      	mov	r2, r0
 80019ba:	693b      	ldr	r3, [r7, #16]
 80019bc:	1ad3      	subs	r3, r2, r3
 80019be:	2b02      	cmp	r3, #2
 80019c0:	d901      	bls.n	80019c6 <HAL_RCC_OscConfig+0x1f6>
 80019c2:	2303      	movs	r3, #3
 80019c4:	e17a      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 80019c6:	4b1d      	ldr	r3, [pc, #116]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 80019c8:	681b      	ldr	r3, [r3, #0]
 80019ca:	f003 0302 	and.w	r3, r3, #2
 80019ce:	2b00      	cmp	r3, #0
 80019d0:	d1f0      	bne.n	80019b4 <HAL_RCC_OscConfig+0x1e4>
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	681b      	ldr	r3, [r3, #0]
 80019d6:	f003 0308 	and.w	r3, r3, #8
 80019da:	2b00      	cmp	r3, #0
 80019dc:	d03a      	beq.n	8001a54 <HAL_RCC_OscConfig+0x284>
 80019de:	687b      	ldr	r3, [r7, #4]
 80019e0:	699b      	ldr	r3, [r3, #24]
 80019e2:	2b00      	cmp	r3, #0
 80019e4:	d019      	beq.n	8001a1a <HAL_RCC_OscConfig+0x24a>
 80019e6:	4b17      	ldr	r3, [pc, #92]	; (8001a44 <HAL_RCC_OscConfig+0x274>)
 80019e8:	2201      	movs	r2, #1
 80019ea:	601a      	str	r2, [r3, #0]
 80019ec:	f7ff fc50 	bl	8001290 <HAL_GetTick>
 80019f0:	6138      	str	r0, [r7, #16]
 80019f2:	e008      	b.n	8001a06 <HAL_RCC_OscConfig+0x236>
 80019f4:	f7ff fc4c 	bl	8001290 <HAL_GetTick>
 80019f8:	4602      	mov	r2, r0
 80019fa:	693b      	ldr	r3, [r7, #16]
 80019fc:	1ad3      	subs	r3, r2, r3
 80019fe:	2b02      	cmp	r3, #2
 8001a00:	d901      	bls.n	8001a06 <HAL_RCC_OscConfig+0x236>
 8001a02:	2303      	movs	r3, #3
 8001a04:	e15a      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001a06:	4b0d      	ldr	r3, [pc, #52]	; (8001a3c <HAL_RCC_OscConfig+0x26c>)
 8001a08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a0a:	f003 0302 	and.w	r3, r3, #2
 8001a0e:	2b00      	cmp	r3, #0
 8001a10:	d0f0      	beq.n	80019f4 <HAL_RCC_OscConfig+0x224>
 8001a12:	2001      	movs	r0, #1
 8001a14:	f000 fb08 	bl	8002028 <RCC_Delay>
 8001a18:	e01c      	b.n	8001a54 <HAL_RCC_OscConfig+0x284>
 8001a1a:	4b0a      	ldr	r3, [pc, #40]	; (8001a44 <HAL_RCC_OscConfig+0x274>)
 8001a1c:	2200      	movs	r2, #0
 8001a1e:	601a      	str	r2, [r3, #0]
 8001a20:	f7ff fc36 	bl	8001290 <HAL_GetTick>
 8001a24:	6138      	str	r0, [r7, #16]
 8001a26:	e00f      	b.n	8001a48 <HAL_RCC_OscConfig+0x278>
 8001a28:	f7ff fc32 	bl	8001290 <HAL_GetTick>
 8001a2c:	4602      	mov	r2, r0
 8001a2e:	693b      	ldr	r3, [r7, #16]
 8001a30:	1ad3      	subs	r3, r2, r3
 8001a32:	2b02      	cmp	r3, #2
 8001a34:	d908      	bls.n	8001a48 <HAL_RCC_OscConfig+0x278>
 8001a36:	2303      	movs	r3, #3
 8001a38:	e140      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001a3a:	bf00      	nop
 8001a3c:	40021000 	.word	0x40021000
 8001a40:	42420000 	.word	0x42420000
 8001a44:	42420480 	.word	0x42420480
 8001a48:	4b9e      	ldr	r3, [pc, #632]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001a4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a4c:	f003 0302 	and.w	r3, r3, #2
 8001a50:	2b00      	cmp	r3, #0
 8001a52:	d1e9      	bne.n	8001a28 <HAL_RCC_OscConfig+0x258>
 8001a54:	687b      	ldr	r3, [r7, #4]
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	f003 0304 	and.w	r3, r3, #4
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	f000 80a6 	beq.w	8001bae <HAL_RCC_OscConfig+0x3de>
 8001a62:	2300      	movs	r3, #0
 8001a64:	75fb      	strb	r3, [r7, #23]
 8001a66:	4b97      	ldr	r3, [pc, #604]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001a68:	69db      	ldr	r3, [r3, #28]
 8001a6a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a6e:	2b00      	cmp	r3, #0
 8001a70:	d10d      	bne.n	8001a8e <HAL_RCC_OscConfig+0x2be>
 8001a72:	4b94      	ldr	r3, [pc, #592]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001a74:	69db      	ldr	r3, [r3, #28]
 8001a76:	4a93      	ldr	r2, [pc, #588]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001a78:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001a7c:	61d3      	str	r3, [r2, #28]
 8001a7e:	4b91      	ldr	r3, [pc, #580]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001a80:	69db      	ldr	r3, [r3, #28]
 8001a82:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a86:	60bb      	str	r3, [r7, #8]
 8001a88:	68bb      	ldr	r3, [r7, #8]
 8001a8a:	2301      	movs	r3, #1
 8001a8c:	75fb      	strb	r3, [r7, #23]
 8001a8e:	4b8e      	ldr	r3, [pc, #568]	; (8001cc8 <HAL_RCC_OscConfig+0x4f8>)
 8001a90:	681b      	ldr	r3, [r3, #0]
 8001a92:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001a96:	2b00      	cmp	r3, #0
 8001a98:	d118      	bne.n	8001acc <HAL_RCC_OscConfig+0x2fc>
 8001a9a:	4b8b      	ldr	r3, [pc, #556]	; (8001cc8 <HAL_RCC_OscConfig+0x4f8>)
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	4a8a      	ldr	r2, [pc, #552]	; (8001cc8 <HAL_RCC_OscConfig+0x4f8>)
 8001aa0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001aa4:	6013      	str	r3, [r2, #0]
 8001aa6:	f7ff fbf3 	bl	8001290 <HAL_GetTick>
 8001aaa:	6138      	str	r0, [r7, #16]
 8001aac:	e008      	b.n	8001ac0 <HAL_RCC_OscConfig+0x2f0>
 8001aae:	f7ff fbef 	bl	8001290 <HAL_GetTick>
 8001ab2:	4602      	mov	r2, r0
 8001ab4:	693b      	ldr	r3, [r7, #16]
 8001ab6:	1ad3      	subs	r3, r2, r3
 8001ab8:	2b64      	cmp	r3, #100	; 0x64
 8001aba:	d901      	bls.n	8001ac0 <HAL_RCC_OscConfig+0x2f0>
 8001abc:	2303      	movs	r3, #3
 8001abe:	e0fd      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001ac0:	4b81      	ldr	r3, [pc, #516]	; (8001cc8 <HAL_RCC_OscConfig+0x4f8>)
 8001ac2:	681b      	ldr	r3, [r3, #0]
 8001ac4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001ac8:	2b00      	cmp	r3, #0
 8001aca:	d0f0      	beq.n	8001aae <HAL_RCC_OscConfig+0x2de>
 8001acc:	687b      	ldr	r3, [r7, #4]
 8001ace:	68db      	ldr	r3, [r3, #12]
 8001ad0:	2b01      	cmp	r3, #1
 8001ad2:	d106      	bne.n	8001ae2 <HAL_RCC_OscConfig+0x312>
 8001ad4:	4b7b      	ldr	r3, [pc, #492]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001ad6:	6a1b      	ldr	r3, [r3, #32]
 8001ad8:	4a7a      	ldr	r2, [pc, #488]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001ada:	f043 0301 	orr.w	r3, r3, #1
 8001ade:	6213      	str	r3, [r2, #32]
 8001ae0:	e02d      	b.n	8001b3e <HAL_RCC_OscConfig+0x36e>
 8001ae2:	687b      	ldr	r3, [r7, #4]
 8001ae4:	68db      	ldr	r3, [r3, #12]
 8001ae6:	2b00      	cmp	r3, #0
 8001ae8:	d10c      	bne.n	8001b04 <HAL_RCC_OscConfig+0x334>
 8001aea:	4b76      	ldr	r3, [pc, #472]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001aec:	6a1b      	ldr	r3, [r3, #32]
 8001aee:	4a75      	ldr	r2, [pc, #468]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001af0:	f023 0301 	bic.w	r3, r3, #1
 8001af4:	6213      	str	r3, [r2, #32]
 8001af6:	4b73      	ldr	r3, [pc, #460]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001af8:	6a1b      	ldr	r3, [r3, #32]
 8001afa:	4a72      	ldr	r2, [pc, #456]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001afc:	f023 0304 	bic.w	r3, r3, #4
 8001b00:	6213      	str	r3, [r2, #32]
 8001b02:	e01c      	b.n	8001b3e <HAL_RCC_OscConfig+0x36e>
 8001b04:	687b      	ldr	r3, [r7, #4]
 8001b06:	68db      	ldr	r3, [r3, #12]
 8001b08:	2b05      	cmp	r3, #5
 8001b0a:	d10c      	bne.n	8001b26 <HAL_RCC_OscConfig+0x356>
 8001b0c:	4b6d      	ldr	r3, [pc, #436]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001b0e:	6a1b      	ldr	r3, [r3, #32]
 8001b10:	4a6c      	ldr	r2, [pc, #432]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001b12:	f043 0304 	orr.w	r3, r3, #4
 8001b16:	6213      	str	r3, [r2, #32]
 8001b18:	4b6a      	ldr	r3, [pc, #424]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001b1a:	6a1b      	ldr	r3, [r3, #32]
 8001b1c:	4a69      	ldr	r2, [pc, #420]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001b1e:	f043 0301 	orr.w	r3, r3, #1
 8001b22:	6213      	str	r3, [r2, #32]
 8001b24:	e00b      	b.n	8001b3e <HAL_RCC_OscConfig+0x36e>
 8001b26:	4b67      	ldr	r3, [pc, #412]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001b28:	6a1b      	ldr	r3, [r3, #32]
 8001b2a:	4a66      	ldr	r2, [pc, #408]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001b2c:	f023 0301 	bic.w	r3, r3, #1
 8001b30:	6213      	str	r3, [r2, #32]
 8001b32:	4b64      	ldr	r3, [pc, #400]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001b34:	6a1b      	ldr	r3, [r3, #32]
 8001b36:	4a63      	ldr	r2, [pc, #396]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001b38:	f023 0304 	bic.w	r3, r3, #4
 8001b3c:	6213      	str	r3, [r2, #32]
 8001b3e:	687b      	ldr	r3, [r7, #4]
 8001b40:	68db      	ldr	r3, [r3, #12]
 8001b42:	2b00      	cmp	r3, #0
 8001b44:	d015      	beq.n	8001b72 <HAL_RCC_OscConfig+0x3a2>
 8001b46:	f7ff fba3 	bl	8001290 <HAL_GetTick>
 8001b4a:	6138      	str	r0, [r7, #16]
 8001b4c:	e00a      	b.n	8001b64 <HAL_RCC_OscConfig+0x394>
 8001b4e:	f7ff fb9f 	bl	8001290 <HAL_GetTick>
 8001b52:	4602      	mov	r2, r0
 8001b54:	693b      	ldr	r3, [r7, #16]
 8001b56:	1ad3      	subs	r3, r2, r3
 8001b58:	f241 3288 	movw	r2, #5000	; 0x1388
 8001b5c:	4293      	cmp	r3, r2
 8001b5e:	d901      	bls.n	8001b64 <HAL_RCC_OscConfig+0x394>
 8001b60:	2303      	movs	r3, #3
 8001b62:	e0ab      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001b64:	4b57      	ldr	r3, [pc, #348]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001b66:	6a1b      	ldr	r3, [r3, #32]
 8001b68:	f003 0302 	and.w	r3, r3, #2
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	d0ee      	beq.n	8001b4e <HAL_RCC_OscConfig+0x37e>
 8001b70:	e014      	b.n	8001b9c <HAL_RCC_OscConfig+0x3cc>
 8001b72:	f7ff fb8d 	bl	8001290 <HAL_GetTick>
 8001b76:	6138      	str	r0, [r7, #16]
 8001b78:	e00a      	b.n	8001b90 <HAL_RCC_OscConfig+0x3c0>
 8001b7a:	f7ff fb89 	bl	8001290 <HAL_GetTick>
 8001b7e:	4602      	mov	r2, r0
 8001b80:	693b      	ldr	r3, [r7, #16]
 8001b82:	1ad3      	subs	r3, r2, r3
 8001b84:	f241 3288 	movw	r2, #5000	; 0x1388
 8001b88:	4293      	cmp	r3, r2
 8001b8a:	d901      	bls.n	8001b90 <HAL_RCC_OscConfig+0x3c0>
 8001b8c:	2303      	movs	r3, #3
 8001b8e:	e095      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001b90:	4b4c      	ldr	r3, [pc, #304]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001b92:	6a1b      	ldr	r3, [r3, #32]
 8001b94:	f003 0302 	and.w	r3, r3, #2
 8001b98:	2b00      	cmp	r3, #0
 8001b9a:	d1ee      	bne.n	8001b7a <HAL_RCC_OscConfig+0x3aa>
 8001b9c:	7dfb      	ldrb	r3, [r7, #23]
 8001b9e:	2b01      	cmp	r3, #1
 8001ba0:	d105      	bne.n	8001bae <HAL_RCC_OscConfig+0x3de>
 8001ba2:	4b48      	ldr	r3, [pc, #288]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001ba4:	69db      	ldr	r3, [r3, #28]
 8001ba6:	4a47      	ldr	r2, [pc, #284]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001ba8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001bac:	61d3      	str	r3, [r2, #28]
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	69db      	ldr	r3, [r3, #28]
 8001bb2:	2b00      	cmp	r3, #0
 8001bb4:	f000 8081 	beq.w	8001cba <HAL_RCC_OscConfig+0x4ea>
 8001bb8:	4b42      	ldr	r3, [pc, #264]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001bba:	685b      	ldr	r3, [r3, #4]
 8001bbc:	f003 030c 	and.w	r3, r3, #12
 8001bc0:	2b08      	cmp	r3, #8
 8001bc2:	d061      	beq.n	8001c88 <HAL_RCC_OscConfig+0x4b8>
 8001bc4:	687b      	ldr	r3, [r7, #4]
 8001bc6:	69db      	ldr	r3, [r3, #28]
 8001bc8:	2b02      	cmp	r3, #2
 8001bca:	d146      	bne.n	8001c5a <HAL_RCC_OscConfig+0x48a>
 8001bcc:	4b3f      	ldr	r3, [pc, #252]	; (8001ccc <HAL_RCC_OscConfig+0x4fc>)
 8001bce:	2200      	movs	r2, #0
 8001bd0:	601a      	str	r2, [r3, #0]
 8001bd2:	f7ff fb5d 	bl	8001290 <HAL_GetTick>
 8001bd6:	6138      	str	r0, [r7, #16]
 8001bd8:	e008      	b.n	8001bec <HAL_RCC_OscConfig+0x41c>
 8001bda:	f7ff fb59 	bl	8001290 <HAL_GetTick>
 8001bde:	4602      	mov	r2, r0
 8001be0:	693b      	ldr	r3, [r7, #16]
 8001be2:	1ad3      	subs	r3, r2, r3
 8001be4:	2b02      	cmp	r3, #2
 8001be6:	d901      	bls.n	8001bec <HAL_RCC_OscConfig+0x41c>
 8001be8:	2303      	movs	r3, #3
 8001bea:	e067      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001bec:	4b35      	ldr	r3, [pc, #212]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001bee:	681b      	ldr	r3, [r3, #0]
 8001bf0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001bf4:	2b00      	cmp	r3, #0
 8001bf6:	d1f0      	bne.n	8001bda <HAL_RCC_OscConfig+0x40a>
 8001bf8:	687b      	ldr	r3, [r7, #4]
 8001bfa:	6a1b      	ldr	r3, [r3, #32]
 8001bfc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001c00:	d108      	bne.n	8001c14 <HAL_RCC_OscConfig+0x444>
 8001c02:	4b30      	ldr	r3, [pc, #192]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001c04:	685b      	ldr	r3, [r3, #4]
 8001c06:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001c0a:	687b      	ldr	r3, [r7, #4]
 8001c0c:	689b      	ldr	r3, [r3, #8]
 8001c0e:	492d      	ldr	r1, [pc, #180]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001c10:	4313      	orrs	r3, r2
 8001c12:	604b      	str	r3, [r1, #4]
 8001c14:	4b2b      	ldr	r3, [pc, #172]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001c16:	685b      	ldr	r3, [r3, #4]
 8001c18:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	6a19      	ldr	r1, [r3, #32]
 8001c20:	687b      	ldr	r3, [r7, #4]
 8001c22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c24:	430b      	orrs	r3, r1
 8001c26:	4927      	ldr	r1, [pc, #156]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001c28:	4313      	orrs	r3, r2
 8001c2a:	604b      	str	r3, [r1, #4]
 8001c2c:	4b27      	ldr	r3, [pc, #156]	; (8001ccc <HAL_RCC_OscConfig+0x4fc>)
 8001c2e:	2201      	movs	r2, #1
 8001c30:	601a      	str	r2, [r3, #0]
 8001c32:	f7ff fb2d 	bl	8001290 <HAL_GetTick>
 8001c36:	6138      	str	r0, [r7, #16]
 8001c38:	e008      	b.n	8001c4c <HAL_RCC_OscConfig+0x47c>
 8001c3a:	f7ff fb29 	bl	8001290 <HAL_GetTick>
 8001c3e:	4602      	mov	r2, r0
 8001c40:	693b      	ldr	r3, [r7, #16]
 8001c42:	1ad3      	subs	r3, r2, r3
 8001c44:	2b02      	cmp	r3, #2
 8001c46:	d901      	bls.n	8001c4c <HAL_RCC_OscConfig+0x47c>
 8001c48:	2303      	movs	r3, #3
 8001c4a:	e037      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001c4c:	4b1d      	ldr	r3, [pc, #116]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c54:	2b00      	cmp	r3, #0
 8001c56:	d0f0      	beq.n	8001c3a <HAL_RCC_OscConfig+0x46a>
 8001c58:	e02f      	b.n	8001cba <HAL_RCC_OscConfig+0x4ea>
 8001c5a:	4b1c      	ldr	r3, [pc, #112]	; (8001ccc <HAL_RCC_OscConfig+0x4fc>)
 8001c5c:	2200      	movs	r2, #0
 8001c5e:	601a      	str	r2, [r3, #0]
 8001c60:	f7ff fb16 	bl	8001290 <HAL_GetTick>
 8001c64:	6138      	str	r0, [r7, #16]
 8001c66:	e008      	b.n	8001c7a <HAL_RCC_OscConfig+0x4aa>
 8001c68:	f7ff fb12 	bl	8001290 <HAL_GetTick>
 8001c6c:	4602      	mov	r2, r0
 8001c6e:	693b      	ldr	r3, [r7, #16]
 8001c70:	1ad3      	subs	r3, r2, r3
 8001c72:	2b02      	cmp	r3, #2
 8001c74:	d901      	bls.n	8001c7a <HAL_RCC_OscConfig+0x4aa>
 8001c76:	2303      	movs	r3, #3
 8001c78:	e020      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001c7a:	4b12      	ldr	r3, [pc, #72]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c82:	2b00      	cmp	r3, #0
 8001c84:	d1f0      	bne.n	8001c68 <HAL_RCC_OscConfig+0x498>
 8001c86:	e018      	b.n	8001cba <HAL_RCC_OscConfig+0x4ea>
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	69db      	ldr	r3, [r3, #28]
 8001c8c:	2b01      	cmp	r3, #1
 8001c8e:	d101      	bne.n	8001c94 <HAL_RCC_OscConfig+0x4c4>
 8001c90:	2301      	movs	r3, #1
 8001c92:	e013      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001c94:	4b0b      	ldr	r3, [pc, #44]	; (8001cc4 <HAL_RCC_OscConfig+0x4f4>)
 8001c96:	685b      	ldr	r3, [r3, #4]
 8001c98:	60fb      	str	r3, [r7, #12]
 8001c9a:	68fb      	ldr	r3, [r7, #12]
 8001c9c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	6a1b      	ldr	r3, [r3, #32]
 8001ca4:	429a      	cmp	r2, r3
 8001ca6:	d106      	bne.n	8001cb6 <HAL_RCC_OscConfig+0x4e6>
 8001ca8:	68fb      	ldr	r3, [r7, #12]
 8001caa:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cb2:	429a      	cmp	r2, r3
 8001cb4:	d001      	beq.n	8001cba <HAL_RCC_OscConfig+0x4ea>
 8001cb6:	2301      	movs	r3, #1
 8001cb8:	e000      	b.n	8001cbc <HAL_RCC_OscConfig+0x4ec>
 8001cba:	2300      	movs	r3, #0
 8001cbc:	4618      	mov	r0, r3
 8001cbe:	3718      	adds	r7, #24
 8001cc0:	46bd      	mov	sp, r7
 8001cc2:	bd80      	pop	{r7, pc}
 8001cc4:	40021000 	.word	0x40021000
 8001cc8:	40007000 	.word	0x40007000
 8001ccc:	42420060 	.word	0x42420060

08001cd0 <HAL_RCC_ClockConfig>:
 8001cd0:	b580      	push	{r7, lr}
 8001cd2:	b084      	sub	sp, #16
 8001cd4:	af00      	add	r7, sp, #0
 8001cd6:	6078      	str	r0, [r7, #4]
 8001cd8:	6039      	str	r1, [r7, #0]
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	d101      	bne.n	8001ce4 <HAL_RCC_ClockConfig+0x14>
 8001ce0:	2301      	movs	r3, #1
 8001ce2:	e0d0      	b.n	8001e86 <HAL_RCC_ClockConfig+0x1b6>
 8001ce4:	4b6a      	ldr	r3, [pc, #424]	; (8001e90 <HAL_RCC_ClockConfig+0x1c0>)
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	f003 0307 	and.w	r3, r3, #7
 8001cec:	683a      	ldr	r2, [r7, #0]
 8001cee:	429a      	cmp	r2, r3
 8001cf0:	d910      	bls.n	8001d14 <HAL_RCC_ClockConfig+0x44>
 8001cf2:	4b67      	ldr	r3, [pc, #412]	; (8001e90 <HAL_RCC_ClockConfig+0x1c0>)
 8001cf4:	681b      	ldr	r3, [r3, #0]
 8001cf6:	f023 0207 	bic.w	r2, r3, #7
 8001cfa:	4965      	ldr	r1, [pc, #404]	; (8001e90 <HAL_RCC_ClockConfig+0x1c0>)
 8001cfc:	683b      	ldr	r3, [r7, #0]
 8001cfe:	4313      	orrs	r3, r2
 8001d00:	600b      	str	r3, [r1, #0]
 8001d02:	4b63      	ldr	r3, [pc, #396]	; (8001e90 <HAL_RCC_ClockConfig+0x1c0>)
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	f003 0307 	and.w	r3, r3, #7
 8001d0a:	683a      	ldr	r2, [r7, #0]
 8001d0c:	429a      	cmp	r2, r3
 8001d0e:	d001      	beq.n	8001d14 <HAL_RCC_ClockConfig+0x44>
 8001d10:	2301      	movs	r3, #1
 8001d12:	e0b8      	b.n	8001e86 <HAL_RCC_ClockConfig+0x1b6>
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	681b      	ldr	r3, [r3, #0]
 8001d18:	f003 0302 	and.w	r3, r3, #2
 8001d1c:	2b00      	cmp	r3, #0
 8001d1e:	d020      	beq.n	8001d62 <HAL_RCC_ClockConfig+0x92>
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	f003 0304 	and.w	r3, r3, #4
 8001d28:	2b00      	cmp	r3, #0
 8001d2a:	d005      	beq.n	8001d38 <HAL_RCC_ClockConfig+0x68>
 8001d2c:	4b59      	ldr	r3, [pc, #356]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001d2e:	685b      	ldr	r3, [r3, #4]
 8001d30:	4a58      	ldr	r2, [pc, #352]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001d32:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001d36:	6053      	str	r3, [r2, #4]
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	f003 0308 	and.w	r3, r3, #8
 8001d40:	2b00      	cmp	r3, #0
 8001d42:	d005      	beq.n	8001d50 <HAL_RCC_ClockConfig+0x80>
 8001d44:	4b53      	ldr	r3, [pc, #332]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001d46:	685b      	ldr	r3, [r3, #4]
 8001d48:	4a52      	ldr	r2, [pc, #328]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001d4a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001d4e:	6053      	str	r3, [r2, #4]
 8001d50:	4b50      	ldr	r3, [pc, #320]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001d52:	685b      	ldr	r3, [r3, #4]
 8001d54:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001d58:	687b      	ldr	r3, [r7, #4]
 8001d5a:	689b      	ldr	r3, [r3, #8]
 8001d5c:	494d      	ldr	r1, [pc, #308]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001d5e:	4313      	orrs	r3, r2
 8001d60:	604b      	str	r3, [r1, #4]
 8001d62:	687b      	ldr	r3, [r7, #4]
 8001d64:	681b      	ldr	r3, [r3, #0]
 8001d66:	f003 0301 	and.w	r3, r3, #1
 8001d6a:	2b00      	cmp	r3, #0
 8001d6c:	d040      	beq.n	8001df0 <HAL_RCC_ClockConfig+0x120>
 8001d6e:	687b      	ldr	r3, [r7, #4]
 8001d70:	685b      	ldr	r3, [r3, #4]
 8001d72:	2b01      	cmp	r3, #1
 8001d74:	d107      	bne.n	8001d86 <HAL_RCC_ClockConfig+0xb6>
 8001d76:	4b47      	ldr	r3, [pc, #284]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001d78:	681b      	ldr	r3, [r3, #0]
 8001d7a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d7e:	2b00      	cmp	r3, #0
 8001d80:	d115      	bne.n	8001dae <HAL_RCC_ClockConfig+0xde>
 8001d82:	2301      	movs	r3, #1
 8001d84:	e07f      	b.n	8001e86 <HAL_RCC_ClockConfig+0x1b6>
 8001d86:	687b      	ldr	r3, [r7, #4]
 8001d88:	685b      	ldr	r3, [r3, #4]
 8001d8a:	2b02      	cmp	r3, #2
 8001d8c:	d107      	bne.n	8001d9e <HAL_RCC_ClockConfig+0xce>
 8001d8e:	4b41      	ldr	r3, [pc, #260]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d96:	2b00      	cmp	r3, #0
 8001d98:	d109      	bne.n	8001dae <HAL_RCC_ClockConfig+0xde>
 8001d9a:	2301      	movs	r3, #1
 8001d9c:	e073      	b.n	8001e86 <HAL_RCC_ClockConfig+0x1b6>
 8001d9e:	4b3d      	ldr	r3, [pc, #244]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	f003 0302 	and.w	r3, r3, #2
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d101      	bne.n	8001dae <HAL_RCC_ClockConfig+0xde>
 8001daa:	2301      	movs	r3, #1
 8001dac:	e06b      	b.n	8001e86 <HAL_RCC_ClockConfig+0x1b6>
 8001dae:	4b39      	ldr	r3, [pc, #228]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001db0:	685b      	ldr	r3, [r3, #4]
 8001db2:	f023 0203 	bic.w	r2, r3, #3
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	685b      	ldr	r3, [r3, #4]
 8001dba:	4936      	ldr	r1, [pc, #216]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001dbc:	4313      	orrs	r3, r2
 8001dbe:	604b      	str	r3, [r1, #4]
 8001dc0:	f7ff fa66 	bl	8001290 <HAL_GetTick>
 8001dc4:	60f8      	str	r0, [r7, #12]
 8001dc6:	e00a      	b.n	8001dde <HAL_RCC_ClockConfig+0x10e>
 8001dc8:	f7ff fa62 	bl	8001290 <HAL_GetTick>
 8001dcc:	4602      	mov	r2, r0
 8001dce:	68fb      	ldr	r3, [r7, #12]
 8001dd0:	1ad3      	subs	r3, r2, r3
 8001dd2:	f241 3288 	movw	r2, #5000	; 0x1388
 8001dd6:	4293      	cmp	r3, r2
 8001dd8:	d901      	bls.n	8001dde <HAL_RCC_ClockConfig+0x10e>
 8001dda:	2303      	movs	r3, #3
 8001ddc:	e053      	b.n	8001e86 <HAL_RCC_ClockConfig+0x1b6>
 8001dde:	4b2d      	ldr	r3, [pc, #180]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001de0:	685b      	ldr	r3, [r3, #4]
 8001de2:	f003 020c 	and.w	r2, r3, #12
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	685b      	ldr	r3, [r3, #4]
 8001dea:	009b      	lsls	r3, r3, #2
 8001dec:	429a      	cmp	r2, r3
 8001dee:	d1eb      	bne.n	8001dc8 <HAL_RCC_ClockConfig+0xf8>
 8001df0:	4b27      	ldr	r3, [pc, #156]	; (8001e90 <HAL_RCC_ClockConfig+0x1c0>)
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	f003 0307 	and.w	r3, r3, #7
 8001df8:	683a      	ldr	r2, [r7, #0]
 8001dfa:	429a      	cmp	r2, r3
 8001dfc:	d210      	bcs.n	8001e20 <HAL_RCC_ClockConfig+0x150>
 8001dfe:	4b24      	ldr	r3, [pc, #144]	; (8001e90 <HAL_RCC_ClockConfig+0x1c0>)
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	f023 0207 	bic.w	r2, r3, #7
 8001e06:	4922      	ldr	r1, [pc, #136]	; (8001e90 <HAL_RCC_ClockConfig+0x1c0>)
 8001e08:	683b      	ldr	r3, [r7, #0]
 8001e0a:	4313      	orrs	r3, r2
 8001e0c:	600b      	str	r3, [r1, #0]
 8001e0e:	4b20      	ldr	r3, [pc, #128]	; (8001e90 <HAL_RCC_ClockConfig+0x1c0>)
 8001e10:	681b      	ldr	r3, [r3, #0]
 8001e12:	f003 0307 	and.w	r3, r3, #7
 8001e16:	683a      	ldr	r2, [r7, #0]
 8001e18:	429a      	cmp	r2, r3
 8001e1a:	d001      	beq.n	8001e20 <HAL_RCC_ClockConfig+0x150>
 8001e1c:	2301      	movs	r3, #1
 8001e1e:	e032      	b.n	8001e86 <HAL_RCC_ClockConfig+0x1b6>
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	f003 0304 	and.w	r3, r3, #4
 8001e28:	2b00      	cmp	r3, #0
 8001e2a:	d008      	beq.n	8001e3e <HAL_RCC_ClockConfig+0x16e>
 8001e2c:	4b19      	ldr	r3, [pc, #100]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001e2e:	685b      	ldr	r3, [r3, #4]
 8001e30:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	68db      	ldr	r3, [r3, #12]
 8001e38:	4916      	ldr	r1, [pc, #88]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001e3a:	4313      	orrs	r3, r2
 8001e3c:	604b      	str	r3, [r1, #4]
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	681b      	ldr	r3, [r3, #0]
 8001e42:	f003 0308 	and.w	r3, r3, #8
 8001e46:	2b00      	cmp	r3, #0
 8001e48:	d009      	beq.n	8001e5e <HAL_RCC_ClockConfig+0x18e>
 8001e4a:	4b12      	ldr	r3, [pc, #72]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001e4c:	685b      	ldr	r3, [r3, #4]
 8001e4e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	691b      	ldr	r3, [r3, #16]
 8001e56:	00db      	lsls	r3, r3, #3
 8001e58:	490e      	ldr	r1, [pc, #56]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001e5a:	4313      	orrs	r3, r2
 8001e5c:	604b      	str	r3, [r1, #4]
 8001e5e:	f000 f821 	bl	8001ea4 <HAL_RCC_GetSysClockFreq>
 8001e62:	4602      	mov	r2, r0
 8001e64:	4b0b      	ldr	r3, [pc, #44]	; (8001e94 <HAL_RCC_ClockConfig+0x1c4>)
 8001e66:	685b      	ldr	r3, [r3, #4]
 8001e68:	091b      	lsrs	r3, r3, #4
 8001e6a:	f003 030f 	and.w	r3, r3, #15
 8001e6e:	490a      	ldr	r1, [pc, #40]	; (8001e98 <HAL_RCC_ClockConfig+0x1c8>)
 8001e70:	5ccb      	ldrb	r3, [r1, r3]
 8001e72:	fa22 f303 	lsr.w	r3, r2, r3
 8001e76:	4a09      	ldr	r2, [pc, #36]	; (8001e9c <HAL_RCC_ClockConfig+0x1cc>)
 8001e78:	6013      	str	r3, [r2, #0]
 8001e7a:	4b09      	ldr	r3, [pc, #36]	; (8001ea0 <HAL_RCC_ClockConfig+0x1d0>)
 8001e7c:	681b      	ldr	r3, [r3, #0]
 8001e7e:	4618      	mov	r0, r3
 8001e80:	f7ff f87c 	bl	8000f7c <HAL_InitTick>
 8001e84:	2300      	movs	r3, #0
 8001e86:	4618      	mov	r0, r3
 8001e88:	3710      	adds	r7, #16
 8001e8a:	46bd      	mov	sp, r7
 8001e8c:	bd80      	pop	{r7, pc}
 8001e8e:	bf00      	nop
 8001e90:	40022000 	.word	0x40022000
 8001e94:	40021000 	.word	0x40021000
 8001e98:	08005304 	.word	0x08005304
 8001e9c:	200000d0 	.word	0x200000d0
 8001ea0:	200000d4 	.word	0x200000d4

08001ea4 <HAL_RCC_GetSysClockFreq>:
 8001ea4:	b490      	push	{r4, r7}
 8001ea6:	b08a      	sub	sp, #40	; 0x28
 8001ea8:	af00      	add	r7, sp, #0
 8001eaa:	4b2a      	ldr	r3, [pc, #168]	; (8001f54 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001eac:	1d3c      	adds	r4, r7, #4
 8001eae:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001eb0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001eb4:	f240 2301 	movw	r3, #513	; 0x201
 8001eb8:	803b      	strh	r3, [r7, #0]
 8001eba:	2300      	movs	r3, #0
 8001ebc:	61fb      	str	r3, [r7, #28]
 8001ebe:	2300      	movs	r3, #0
 8001ec0:	61bb      	str	r3, [r7, #24]
 8001ec2:	2300      	movs	r3, #0
 8001ec4:	627b      	str	r3, [r7, #36]	; 0x24
 8001ec6:	2300      	movs	r3, #0
 8001ec8:	617b      	str	r3, [r7, #20]
 8001eca:	2300      	movs	r3, #0
 8001ecc:	623b      	str	r3, [r7, #32]
 8001ece:	4b22      	ldr	r3, [pc, #136]	; (8001f58 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001ed0:	685b      	ldr	r3, [r3, #4]
 8001ed2:	61fb      	str	r3, [r7, #28]
 8001ed4:	69fb      	ldr	r3, [r7, #28]
 8001ed6:	f003 030c 	and.w	r3, r3, #12
 8001eda:	2b04      	cmp	r3, #4
 8001edc:	d002      	beq.n	8001ee4 <HAL_RCC_GetSysClockFreq+0x40>
 8001ede:	2b08      	cmp	r3, #8
 8001ee0:	d003      	beq.n	8001eea <HAL_RCC_GetSysClockFreq+0x46>
 8001ee2:	e02d      	b.n	8001f40 <HAL_RCC_GetSysClockFreq+0x9c>
 8001ee4:	4b1d      	ldr	r3, [pc, #116]	; (8001f5c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001ee6:	623b      	str	r3, [r7, #32]
 8001ee8:	e02d      	b.n	8001f46 <HAL_RCC_GetSysClockFreq+0xa2>
 8001eea:	69fb      	ldr	r3, [r7, #28]
 8001eec:	0c9b      	lsrs	r3, r3, #18
 8001eee:	f003 030f 	and.w	r3, r3, #15
 8001ef2:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001ef6:	4413      	add	r3, r2
 8001ef8:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001efc:	617b      	str	r3, [r7, #20]
 8001efe:	69fb      	ldr	r3, [r7, #28]
 8001f00:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001f04:	2b00      	cmp	r3, #0
 8001f06:	d013      	beq.n	8001f30 <HAL_RCC_GetSysClockFreq+0x8c>
 8001f08:	4b13      	ldr	r3, [pc, #76]	; (8001f58 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001f0a:	685b      	ldr	r3, [r3, #4]
 8001f0c:	0c5b      	lsrs	r3, r3, #17
 8001f0e:	f003 0301 	and.w	r3, r3, #1
 8001f12:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001f16:	4413      	add	r3, r2
 8001f18:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001f1c:	61bb      	str	r3, [r7, #24]
 8001f1e:	697b      	ldr	r3, [r7, #20]
 8001f20:	4a0e      	ldr	r2, [pc, #56]	; (8001f5c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001f22:	fb02 f203 	mul.w	r2, r2, r3
 8001f26:	69bb      	ldr	r3, [r7, #24]
 8001f28:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f2c:	627b      	str	r3, [r7, #36]	; 0x24
 8001f2e:	e004      	b.n	8001f3a <HAL_RCC_GetSysClockFreq+0x96>
 8001f30:	697b      	ldr	r3, [r7, #20]
 8001f32:	4a0b      	ldr	r2, [pc, #44]	; (8001f60 <HAL_RCC_GetSysClockFreq+0xbc>)
 8001f34:	fb02 f303 	mul.w	r3, r2, r3
 8001f38:	627b      	str	r3, [r7, #36]	; 0x24
 8001f3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f3c:	623b      	str	r3, [r7, #32]
 8001f3e:	e002      	b.n	8001f46 <HAL_RCC_GetSysClockFreq+0xa2>
 8001f40:	4b06      	ldr	r3, [pc, #24]	; (8001f5c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001f42:	623b      	str	r3, [r7, #32]
 8001f44:	bf00      	nop
 8001f46:	6a3b      	ldr	r3, [r7, #32]
 8001f48:	4618      	mov	r0, r3
 8001f4a:	3728      	adds	r7, #40	; 0x28
 8001f4c:	46bd      	mov	sp, r7
 8001f4e:	bc90      	pop	{r4, r7}
 8001f50:	4770      	bx	lr
 8001f52:	bf00      	nop
 8001f54:	080052e8 	.word	0x080052e8
 8001f58:	40021000 	.word	0x40021000
 8001f5c:	007a1200 	.word	0x007a1200
 8001f60:	003d0900 	.word	0x003d0900

08001f64 <HAL_RCC_GetHCLKFreq>:
 8001f64:	b480      	push	{r7}
 8001f66:	af00      	add	r7, sp, #0
 8001f68:	4b02      	ldr	r3, [pc, #8]	; (8001f74 <HAL_RCC_GetHCLKFreq+0x10>)
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	4618      	mov	r0, r3
 8001f6e:	46bd      	mov	sp, r7
 8001f70:	bc80      	pop	{r7}
 8001f72:	4770      	bx	lr
 8001f74:	200000d0 	.word	0x200000d0

08001f78 <HAL_RCC_GetPCLK1Freq>:
 8001f78:	b580      	push	{r7, lr}
 8001f7a:	af00      	add	r7, sp, #0
 8001f7c:	f7ff fff2 	bl	8001f64 <HAL_RCC_GetHCLKFreq>
 8001f80:	4602      	mov	r2, r0
 8001f82:	4b05      	ldr	r3, [pc, #20]	; (8001f98 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001f84:	685b      	ldr	r3, [r3, #4]
 8001f86:	0a1b      	lsrs	r3, r3, #8
 8001f88:	f003 0307 	and.w	r3, r3, #7
 8001f8c:	4903      	ldr	r1, [pc, #12]	; (8001f9c <HAL_RCC_GetPCLK1Freq+0x24>)
 8001f8e:	5ccb      	ldrb	r3, [r1, r3]
 8001f90:	fa22 f303 	lsr.w	r3, r2, r3
 8001f94:	4618      	mov	r0, r3
 8001f96:	bd80      	pop	{r7, pc}
 8001f98:	40021000 	.word	0x40021000
 8001f9c:	08005314 	.word	0x08005314

08001fa0 <HAL_RCC_GetPCLK2Freq>:
 8001fa0:	b580      	push	{r7, lr}
 8001fa2:	af00      	add	r7, sp, #0
 8001fa4:	f7ff ffde 	bl	8001f64 <HAL_RCC_GetHCLKFreq>
 8001fa8:	4602      	mov	r2, r0
 8001faa:	4b05      	ldr	r3, [pc, #20]	; (8001fc0 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001fac:	685b      	ldr	r3, [r3, #4]
 8001fae:	0adb      	lsrs	r3, r3, #11
 8001fb0:	f003 0307 	and.w	r3, r3, #7
 8001fb4:	4903      	ldr	r1, [pc, #12]	; (8001fc4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001fb6:	5ccb      	ldrb	r3, [r1, r3]
 8001fb8:	fa22 f303 	lsr.w	r3, r2, r3
 8001fbc:	4618      	mov	r0, r3
 8001fbe:	bd80      	pop	{r7, pc}
 8001fc0:	40021000 	.word	0x40021000
 8001fc4:	08005314 	.word	0x08005314

08001fc8 <HAL_RCC_GetClockConfig>:
 8001fc8:	b480      	push	{r7}
 8001fca:	b083      	sub	sp, #12
 8001fcc:	af00      	add	r7, sp, #0
 8001fce:	6078      	str	r0, [r7, #4]
 8001fd0:	6039      	str	r1, [r7, #0]
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	220f      	movs	r2, #15
 8001fd6:	601a      	str	r2, [r3, #0]
 8001fd8:	4b11      	ldr	r3, [pc, #68]	; (8002020 <HAL_RCC_GetClockConfig+0x58>)
 8001fda:	685b      	ldr	r3, [r3, #4]
 8001fdc:	f003 0203 	and.w	r2, r3, #3
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	605a      	str	r2, [r3, #4]
 8001fe4:	4b0e      	ldr	r3, [pc, #56]	; (8002020 <HAL_RCC_GetClockConfig+0x58>)
 8001fe6:	685b      	ldr	r3, [r3, #4]
 8001fe8:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	609a      	str	r2, [r3, #8]
 8001ff0:	4b0b      	ldr	r3, [pc, #44]	; (8002020 <HAL_RCC_GetClockConfig+0x58>)
 8001ff2:	685b      	ldr	r3, [r3, #4]
 8001ff4:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	60da      	str	r2, [r3, #12]
 8001ffc:	4b08      	ldr	r3, [pc, #32]	; (8002020 <HAL_RCC_GetClockConfig+0x58>)
 8001ffe:	685b      	ldr	r3, [r3, #4]
 8002000:	08db      	lsrs	r3, r3, #3
 8002002:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	611a      	str	r2, [r3, #16]
 800200a:	4b06      	ldr	r3, [pc, #24]	; (8002024 <HAL_RCC_GetClockConfig+0x5c>)
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	f003 0207 	and.w	r2, r3, #7
 8002012:	683b      	ldr	r3, [r7, #0]
 8002014:	601a      	str	r2, [r3, #0]
 8002016:	bf00      	nop
 8002018:	370c      	adds	r7, #12
 800201a:	46bd      	mov	sp, r7
 800201c:	bc80      	pop	{r7}
 800201e:	4770      	bx	lr
 8002020:	40021000 	.word	0x40021000
 8002024:	40022000 	.word	0x40022000

08002028 <RCC_Delay>:
 8002028:	b480      	push	{r7}
 800202a:	b085      	sub	sp, #20
 800202c:	af00      	add	r7, sp, #0
 800202e:	6078      	str	r0, [r7, #4]
 8002030:	4b0a      	ldr	r3, [pc, #40]	; (800205c <RCC_Delay+0x34>)
 8002032:	681b      	ldr	r3, [r3, #0]
 8002034:	4a0a      	ldr	r2, [pc, #40]	; (8002060 <RCC_Delay+0x38>)
 8002036:	fba2 2303 	umull	r2, r3, r2, r3
 800203a:	0a5b      	lsrs	r3, r3, #9
 800203c:	687a      	ldr	r2, [r7, #4]
 800203e:	fb02 f303 	mul.w	r3, r2, r3
 8002042:	60fb      	str	r3, [r7, #12]
 8002044:	bf00      	nop
 8002046:	68fb      	ldr	r3, [r7, #12]
 8002048:	1e5a      	subs	r2, r3, #1
 800204a:	60fa      	str	r2, [r7, #12]
 800204c:	2b00      	cmp	r3, #0
 800204e:	d1f9      	bne.n	8002044 <RCC_Delay+0x1c>
 8002050:	bf00      	nop
 8002052:	bf00      	nop
 8002054:	3714      	adds	r7, #20
 8002056:	46bd      	mov	sp, r7
 8002058:	bc80      	pop	{r7}
 800205a:	4770      	bx	lr
 800205c:	200000d0 	.word	0x200000d0
 8002060:	10624dd3 	.word	0x10624dd3

08002064 <HAL_TIM_Base_Init>:
 8002064:	b580      	push	{r7, lr}
 8002066:	b082      	sub	sp, #8
 8002068:	af00      	add	r7, sp, #0
 800206a:	6078      	str	r0, [r7, #4]
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	2b00      	cmp	r3, #0
 8002070:	d101      	bne.n	8002076 <HAL_TIM_Base_Init+0x12>
 8002072:	2301      	movs	r3, #1
 8002074:	e041      	b.n	80020fa <HAL_TIM_Base_Init+0x96>
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800207c:	b2db      	uxtb	r3, r3
 800207e:	2b00      	cmp	r3, #0
 8002080:	d106      	bne.n	8002090 <HAL_TIM_Base_Init+0x2c>
 8002082:	687b      	ldr	r3, [r7, #4]
 8002084:	2200      	movs	r2, #0
 8002086:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800208a:	6878      	ldr	r0, [r7, #4]
 800208c:	f000 f839 	bl	8002102 <HAL_TIM_Base_MspInit>
 8002090:	687b      	ldr	r3, [r7, #4]
 8002092:	2202      	movs	r2, #2
 8002094:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	681a      	ldr	r2, [r3, #0]
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	3304      	adds	r3, #4
 80020a0:	4619      	mov	r1, r3
 80020a2:	4610      	mov	r0, r2
 80020a4:	f000 f9b4 	bl	8002410 <TIM_Base_SetConfig>
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	2201      	movs	r2, #1
 80020ac:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	2201      	movs	r2, #1
 80020b4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	2201      	movs	r2, #1
 80020bc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80020c0:	687b      	ldr	r3, [r7, #4]
 80020c2:	2201      	movs	r2, #1
 80020c4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	2201      	movs	r2, #1
 80020cc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	2201      	movs	r2, #1
 80020d4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	2201      	movs	r2, #1
 80020dc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	2201      	movs	r2, #1
 80020e4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	2201      	movs	r2, #1
 80020ec:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	2201      	movs	r2, #1
 80020f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80020f8:	2300      	movs	r3, #0
 80020fa:	4618      	mov	r0, r3
 80020fc:	3708      	adds	r7, #8
 80020fe:	46bd      	mov	sp, r7
 8002100:	bd80      	pop	{r7, pc}

08002102 <HAL_TIM_Base_MspInit>:
 8002102:	b480      	push	{r7}
 8002104:	b083      	sub	sp, #12
 8002106:	af00      	add	r7, sp, #0
 8002108:	6078      	str	r0, [r7, #4]
 800210a:	bf00      	nop
 800210c:	370c      	adds	r7, #12
 800210e:	46bd      	mov	sp, r7
 8002110:	bc80      	pop	{r7}
 8002112:	4770      	bx	lr

08002114 <HAL_TIM_Base_Start_IT>:
 8002114:	b480      	push	{r7}
 8002116:	b085      	sub	sp, #20
 8002118:	af00      	add	r7, sp, #0
 800211a:	6078      	str	r0, [r7, #4]
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002122:	b2db      	uxtb	r3, r3
 8002124:	2b01      	cmp	r3, #1
 8002126:	d001      	beq.n	800212c <HAL_TIM_Base_Start_IT+0x18>
 8002128:	2301      	movs	r3, #1
 800212a:	e03a      	b.n	80021a2 <HAL_TIM_Base_Start_IT+0x8e>
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	2202      	movs	r2, #2
 8002130:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	68da      	ldr	r2, [r3, #12]
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	681b      	ldr	r3, [r3, #0]
 800213e:	f042 0201 	orr.w	r2, r2, #1
 8002142:	60da      	str	r2, [r3, #12]
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	681b      	ldr	r3, [r3, #0]
 8002148:	4a18      	ldr	r2, [pc, #96]	; (80021ac <HAL_TIM_Base_Start_IT+0x98>)
 800214a:	4293      	cmp	r3, r2
 800214c:	d00e      	beq.n	800216c <HAL_TIM_Base_Start_IT+0x58>
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	681b      	ldr	r3, [r3, #0]
 8002152:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002156:	d009      	beq.n	800216c <HAL_TIM_Base_Start_IT+0x58>
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	681b      	ldr	r3, [r3, #0]
 800215c:	4a14      	ldr	r2, [pc, #80]	; (80021b0 <HAL_TIM_Base_Start_IT+0x9c>)
 800215e:	4293      	cmp	r3, r2
 8002160:	d004      	beq.n	800216c <HAL_TIM_Base_Start_IT+0x58>
 8002162:	687b      	ldr	r3, [r7, #4]
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	4a13      	ldr	r2, [pc, #76]	; (80021b4 <HAL_TIM_Base_Start_IT+0xa0>)
 8002168:	4293      	cmp	r3, r2
 800216a:	d111      	bne.n	8002190 <HAL_TIM_Base_Start_IT+0x7c>
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	689b      	ldr	r3, [r3, #8]
 8002172:	f003 0307 	and.w	r3, r3, #7
 8002176:	60fb      	str	r3, [r7, #12]
 8002178:	68fb      	ldr	r3, [r7, #12]
 800217a:	2b06      	cmp	r3, #6
 800217c:	d010      	beq.n	80021a0 <HAL_TIM_Base_Start_IT+0x8c>
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	681b      	ldr	r3, [r3, #0]
 8002182:	681a      	ldr	r2, [r3, #0]
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	f042 0201 	orr.w	r2, r2, #1
 800218c:	601a      	str	r2, [r3, #0]
 800218e:	e007      	b.n	80021a0 <HAL_TIM_Base_Start_IT+0x8c>
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	681a      	ldr	r2, [r3, #0]
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	f042 0201 	orr.w	r2, r2, #1
 800219e:	601a      	str	r2, [r3, #0]
 80021a0:	2300      	movs	r3, #0
 80021a2:	4618      	mov	r0, r3
 80021a4:	3714      	adds	r7, #20
 80021a6:	46bd      	mov	sp, r7
 80021a8:	bc80      	pop	{r7}
 80021aa:	4770      	bx	lr
 80021ac:	40012c00 	.word	0x40012c00
 80021b0:	40000400 	.word	0x40000400
 80021b4:	40000800 	.word	0x40000800

080021b8 <HAL_TIM_IRQHandler>:
 80021b8:	b580      	push	{r7, lr}
 80021ba:	b082      	sub	sp, #8
 80021bc:	af00      	add	r7, sp, #0
 80021be:	6078      	str	r0, [r7, #4]
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	691b      	ldr	r3, [r3, #16]
 80021c6:	f003 0302 	and.w	r3, r3, #2
 80021ca:	2b02      	cmp	r3, #2
 80021cc:	d122      	bne.n	8002214 <HAL_TIM_IRQHandler+0x5c>
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	68db      	ldr	r3, [r3, #12]
 80021d4:	f003 0302 	and.w	r3, r3, #2
 80021d8:	2b02      	cmp	r3, #2
 80021da:	d11b      	bne.n	8002214 <HAL_TIM_IRQHandler+0x5c>
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	681b      	ldr	r3, [r3, #0]
 80021e0:	f06f 0202 	mvn.w	r2, #2
 80021e4:	611a      	str	r2, [r3, #16]
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	2201      	movs	r2, #1
 80021ea:	771a      	strb	r2, [r3, #28]
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	699b      	ldr	r3, [r3, #24]
 80021f2:	f003 0303 	and.w	r3, r3, #3
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d003      	beq.n	8002202 <HAL_TIM_IRQHandler+0x4a>
 80021fa:	6878      	ldr	r0, [r7, #4]
 80021fc:	f000 f8ed 	bl	80023da <HAL_TIM_IC_CaptureCallback>
 8002200:	e005      	b.n	800220e <HAL_TIM_IRQHandler+0x56>
 8002202:	6878      	ldr	r0, [r7, #4]
 8002204:	f000 f8e0 	bl	80023c8 <HAL_TIM_OC_DelayElapsedCallback>
 8002208:	6878      	ldr	r0, [r7, #4]
 800220a:	f000 f8ef 	bl	80023ec <HAL_TIM_PWM_PulseFinishedCallback>
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	2200      	movs	r2, #0
 8002212:	771a      	strb	r2, [r3, #28]
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	681b      	ldr	r3, [r3, #0]
 8002218:	691b      	ldr	r3, [r3, #16]
 800221a:	f003 0304 	and.w	r3, r3, #4
 800221e:	2b04      	cmp	r3, #4
 8002220:	d122      	bne.n	8002268 <HAL_TIM_IRQHandler+0xb0>
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	68db      	ldr	r3, [r3, #12]
 8002228:	f003 0304 	and.w	r3, r3, #4
 800222c:	2b04      	cmp	r3, #4
 800222e:	d11b      	bne.n	8002268 <HAL_TIM_IRQHandler+0xb0>
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	681b      	ldr	r3, [r3, #0]
 8002234:	f06f 0204 	mvn.w	r2, #4
 8002238:	611a      	str	r2, [r3, #16]
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	2202      	movs	r2, #2
 800223e:	771a      	strb	r2, [r3, #28]
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	681b      	ldr	r3, [r3, #0]
 8002244:	699b      	ldr	r3, [r3, #24]
 8002246:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800224a:	2b00      	cmp	r3, #0
 800224c:	d003      	beq.n	8002256 <HAL_TIM_IRQHandler+0x9e>
 800224e:	6878      	ldr	r0, [r7, #4]
 8002250:	f000 f8c3 	bl	80023da <HAL_TIM_IC_CaptureCallback>
 8002254:	e005      	b.n	8002262 <HAL_TIM_IRQHandler+0xaa>
 8002256:	6878      	ldr	r0, [r7, #4]
 8002258:	f000 f8b6 	bl	80023c8 <HAL_TIM_OC_DelayElapsedCallback>
 800225c:	6878      	ldr	r0, [r7, #4]
 800225e:	f000 f8c5 	bl	80023ec <HAL_TIM_PWM_PulseFinishedCallback>
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	2200      	movs	r2, #0
 8002266:	771a      	strb	r2, [r3, #28]
 8002268:	687b      	ldr	r3, [r7, #4]
 800226a:	681b      	ldr	r3, [r3, #0]
 800226c:	691b      	ldr	r3, [r3, #16]
 800226e:	f003 0308 	and.w	r3, r3, #8
 8002272:	2b08      	cmp	r3, #8
 8002274:	d122      	bne.n	80022bc <HAL_TIM_IRQHandler+0x104>
 8002276:	687b      	ldr	r3, [r7, #4]
 8002278:	681b      	ldr	r3, [r3, #0]
 800227a:	68db      	ldr	r3, [r3, #12]
 800227c:	f003 0308 	and.w	r3, r3, #8
 8002280:	2b08      	cmp	r3, #8
 8002282:	d11b      	bne.n	80022bc <HAL_TIM_IRQHandler+0x104>
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	f06f 0208 	mvn.w	r2, #8
 800228c:	611a      	str	r2, [r3, #16]
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	2204      	movs	r2, #4
 8002292:	771a      	strb	r2, [r3, #28]
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	69db      	ldr	r3, [r3, #28]
 800229a:	f003 0303 	and.w	r3, r3, #3
 800229e:	2b00      	cmp	r3, #0
 80022a0:	d003      	beq.n	80022aa <HAL_TIM_IRQHandler+0xf2>
 80022a2:	6878      	ldr	r0, [r7, #4]
 80022a4:	f000 f899 	bl	80023da <HAL_TIM_IC_CaptureCallback>
 80022a8:	e005      	b.n	80022b6 <HAL_TIM_IRQHandler+0xfe>
 80022aa:	6878      	ldr	r0, [r7, #4]
 80022ac:	f000 f88c 	bl	80023c8 <HAL_TIM_OC_DelayElapsedCallback>
 80022b0:	6878      	ldr	r0, [r7, #4]
 80022b2:	f000 f89b 	bl	80023ec <HAL_TIM_PWM_PulseFinishedCallback>
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	2200      	movs	r2, #0
 80022ba:	771a      	strb	r2, [r3, #28]
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	681b      	ldr	r3, [r3, #0]
 80022c0:	691b      	ldr	r3, [r3, #16]
 80022c2:	f003 0310 	and.w	r3, r3, #16
 80022c6:	2b10      	cmp	r3, #16
 80022c8:	d122      	bne.n	8002310 <HAL_TIM_IRQHandler+0x158>
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	68db      	ldr	r3, [r3, #12]
 80022d0:	f003 0310 	and.w	r3, r3, #16
 80022d4:	2b10      	cmp	r3, #16
 80022d6:	d11b      	bne.n	8002310 <HAL_TIM_IRQHandler+0x158>
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	f06f 0210 	mvn.w	r2, #16
 80022e0:	611a      	str	r2, [r3, #16]
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	2208      	movs	r2, #8
 80022e6:	771a      	strb	r2, [r3, #28]
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	69db      	ldr	r3, [r3, #28]
 80022ee:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	d003      	beq.n	80022fe <HAL_TIM_IRQHandler+0x146>
 80022f6:	6878      	ldr	r0, [r7, #4]
 80022f8:	f000 f86f 	bl	80023da <HAL_TIM_IC_CaptureCallback>
 80022fc:	e005      	b.n	800230a <HAL_TIM_IRQHandler+0x152>
 80022fe:	6878      	ldr	r0, [r7, #4]
 8002300:	f000 f862 	bl	80023c8 <HAL_TIM_OC_DelayElapsedCallback>
 8002304:	6878      	ldr	r0, [r7, #4]
 8002306:	f000 f871 	bl	80023ec <HAL_TIM_PWM_PulseFinishedCallback>
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	2200      	movs	r2, #0
 800230e:	771a      	strb	r2, [r3, #28]
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	681b      	ldr	r3, [r3, #0]
 8002314:	691b      	ldr	r3, [r3, #16]
 8002316:	f003 0301 	and.w	r3, r3, #1
 800231a:	2b01      	cmp	r3, #1
 800231c:	d10e      	bne.n	800233c <HAL_TIM_IRQHandler+0x184>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	68db      	ldr	r3, [r3, #12]
 8002324:	f003 0301 	and.w	r3, r3, #1
 8002328:	2b01      	cmp	r3, #1
 800232a:	d107      	bne.n	800233c <HAL_TIM_IRQHandler+0x184>
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	f06f 0201 	mvn.w	r2, #1
 8002334:	611a      	str	r2, [r3, #16]
 8002336:	6878      	ldr	r0, [r7, #4]
 8002338:	f7fe fd10 	bl	8000d5c <HAL_TIM_PeriodElapsedCallback>
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	691b      	ldr	r3, [r3, #16]
 8002342:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002346:	2b80      	cmp	r3, #128	; 0x80
 8002348:	d10e      	bne.n	8002368 <HAL_TIM_IRQHandler+0x1b0>
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	681b      	ldr	r3, [r3, #0]
 800234e:	68db      	ldr	r3, [r3, #12]
 8002350:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002354:	2b80      	cmp	r3, #128	; 0x80
 8002356:	d107      	bne.n	8002368 <HAL_TIM_IRQHandler+0x1b0>
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	681b      	ldr	r3, [r3, #0]
 800235c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002360:	611a      	str	r2, [r3, #16]
 8002362:	6878      	ldr	r0, [r7, #4]
 8002364:	f000 f8bf 	bl	80024e6 <HAL_TIMEx_BreakCallback>
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	691b      	ldr	r3, [r3, #16]
 800236e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002372:	2b40      	cmp	r3, #64	; 0x40
 8002374:	d10e      	bne.n	8002394 <HAL_TIM_IRQHandler+0x1dc>
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	681b      	ldr	r3, [r3, #0]
 800237a:	68db      	ldr	r3, [r3, #12]
 800237c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002380:	2b40      	cmp	r3, #64	; 0x40
 8002382:	d107      	bne.n	8002394 <HAL_TIM_IRQHandler+0x1dc>
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800238c:	611a      	str	r2, [r3, #16]
 800238e:	6878      	ldr	r0, [r7, #4]
 8002390:	f000 f835 	bl	80023fe <HAL_TIM_TriggerCallback>
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	691b      	ldr	r3, [r3, #16]
 800239a:	f003 0320 	and.w	r3, r3, #32
 800239e:	2b20      	cmp	r3, #32
 80023a0:	d10e      	bne.n	80023c0 <HAL_TIM_IRQHandler+0x208>
 80023a2:	687b      	ldr	r3, [r7, #4]
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	68db      	ldr	r3, [r3, #12]
 80023a8:	f003 0320 	and.w	r3, r3, #32
 80023ac:	2b20      	cmp	r3, #32
 80023ae:	d107      	bne.n	80023c0 <HAL_TIM_IRQHandler+0x208>
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	681b      	ldr	r3, [r3, #0]
 80023b4:	f06f 0220 	mvn.w	r2, #32
 80023b8:	611a      	str	r2, [r3, #16]
 80023ba:	6878      	ldr	r0, [r7, #4]
 80023bc:	f000 f88a 	bl	80024d4 <HAL_TIMEx_CommutCallback>
 80023c0:	bf00      	nop
 80023c2:	3708      	adds	r7, #8
 80023c4:	46bd      	mov	sp, r7
 80023c6:	bd80      	pop	{r7, pc}

080023c8 <HAL_TIM_OC_DelayElapsedCallback>:
 80023c8:	b480      	push	{r7}
 80023ca:	b083      	sub	sp, #12
 80023cc:	af00      	add	r7, sp, #0
 80023ce:	6078      	str	r0, [r7, #4]
 80023d0:	bf00      	nop
 80023d2:	370c      	adds	r7, #12
 80023d4:	46bd      	mov	sp, r7
 80023d6:	bc80      	pop	{r7}
 80023d8:	4770      	bx	lr

080023da <HAL_TIM_IC_CaptureCallback>:
 80023da:	b480      	push	{r7}
 80023dc:	b083      	sub	sp, #12
 80023de:	af00      	add	r7, sp, #0
 80023e0:	6078      	str	r0, [r7, #4]
 80023e2:	bf00      	nop
 80023e4:	370c      	adds	r7, #12
 80023e6:	46bd      	mov	sp, r7
 80023e8:	bc80      	pop	{r7}
 80023ea:	4770      	bx	lr

080023ec <HAL_TIM_PWM_PulseFinishedCallback>:
 80023ec:	b480      	push	{r7}
 80023ee:	b083      	sub	sp, #12
 80023f0:	af00      	add	r7, sp, #0
 80023f2:	6078      	str	r0, [r7, #4]
 80023f4:	bf00      	nop
 80023f6:	370c      	adds	r7, #12
 80023f8:	46bd      	mov	sp, r7
 80023fa:	bc80      	pop	{r7}
 80023fc:	4770      	bx	lr

080023fe <HAL_TIM_TriggerCallback>:
 80023fe:	b480      	push	{r7}
 8002400:	b083      	sub	sp, #12
 8002402:	af00      	add	r7, sp, #0
 8002404:	6078      	str	r0, [r7, #4]
 8002406:	bf00      	nop
 8002408:	370c      	adds	r7, #12
 800240a:	46bd      	mov	sp, r7
 800240c:	bc80      	pop	{r7}
 800240e:	4770      	bx	lr

08002410 <TIM_Base_SetConfig>:
 8002410:	b480      	push	{r7}
 8002412:	b085      	sub	sp, #20
 8002414:	af00      	add	r7, sp, #0
 8002416:	6078      	str	r0, [r7, #4]
 8002418:	6039      	str	r1, [r7, #0]
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	60fb      	str	r3, [r7, #12]
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	4a29      	ldr	r2, [pc, #164]	; (80024c8 <TIM_Base_SetConfig+0xb8>)
 8002424:	4293      	cmp	r3, r2
 8002426:	d00b      	beq.n	8002440 <TIM_Base_SetConfig+0x30>
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800242e:	d007      	beq.n	8002440 <TIM_Base_SetConfig+0x30>
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	4a26      	ldr	r2, [pc, #152]	; (80024cc <TIM_Base_SetConfig+0xbc>)
 8002434:	4293      	cmp	r3, r2
 8002436:	d003      	beq.n	8002440 <TIM_Base_SetConfig+0x30>
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	4a25      	ldr	r2, [pc, #148]	; (80024d0 <TIM_Base_SetConfig+0xc0>)
 800243c:	4293      	cmp	r3, r2
 800243e:	d108      	bne.n	8002452 <TIM_Base_SetConfig+0x42>
 8002440:	68fb      	ldr	r3, [r7, #12]
 8002442:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002446:	60fb      	str	r3, [r7, #12]
 8002448:	683b      	ldr	r3, [r7, #0]
 800244a:	685b      	ldr	r3, [r3, #4]
 800244c:	68fa      	ldr	r2, [r7, #12]
 800244e:	4313      	orrs	r3, r2
 8002450:	60fb      	str	r3, [r7, #12]
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	4a1c      	ldr	r2, [pc, #112]	; (80024c8 <TIM_Base_SetConfig+0xb8>)
 8002456:	4293      	cmp	r3, r2
 8002458:	d00b      	beq.n	8002472 <TIM_Base_SetConfig+0x62>
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002460:	d007      	beq.n	8002472 <TIM_Base_SetConfig+0x62>
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	4a19      	ldr	r2, [pc, #100]	; (80024cc <TIM_Base_SetConfig+0xbc>)
 8002466:	4293      	cmp	r3, r2
 8002468:	d003      	beq.n	8002472 <TIM_Base_SetConfig+0x62>
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	4a18      	ldr	r2, [pc, #96]	; (80024d0 <TIM_Base_SetConfig+0xc0>)
 800246e:	4293      	cmp	r3, r2
 8002470:	d108      	bne.n	8002484 <TIM_Base_SetConfig+0x74>
 8002472:	68fb      	ldr	r3, [r7, #12]
 8002474:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002478:	60fb      	str	r3, [r7, #12]
 800247a:	683b      	ldr	r3, [r7, #0]
 800247c:	68db      	ldr	r3, [r3, #12]
 800247e:	68fa      	ldr	r2, [r7, #12]
 8002480:	4313      	orrs	r3, r2
 8002482:	60fb      	str	r3, [r7, #12]
 8002484:	68fb      	ldr	r3, [r7, #12]
 8002486:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800248a:	683b      	ldr	r3, [r7, #0]
 800248c:	695b      	ldr	r3, [r3, #20]
 800248e:	4313      	orrs	r3, r2
 8002490:	60fb      	str	r3, [r7, #12]
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	68fa      	ldr	r2, [r7, #12]
 8002496:	601a      	str	r2, [r3, #0]
 8002498:	683b      	ldr	r3, [r7, #0]
 800249a:	689a      	ldr	r2, [r3, #8]
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	62da      	str	r2, [r3, #44]	; 0x2c
 80024a0:	683b      	ldr	r3, [r7, #0]
 80024a2:	681a      	ldr	r2, [r3, #0]
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	629a      	str	r2, [r3, #40]	; 0x28
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	4a07      	ldr	r2, [pc, #28]	; (80024c8 <TIM_Base_SetConfig+0xb8>)
 80024ac:	4293      	cmp	r3, r2
 80024ae:	d103      	bne.n	80024b8 <TIM_Base_SetConfig+0xa8>
 80024b0:	683b      	ldr	r3, [r7, #0]
 80024b2:	691a      	ldr	r2, [r3, #16]
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	631a      	str	r2, [r3, #48]	; 0x30
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	2201      	movs	r2, #1
 80024bc:	615a      	str	r2, [r3, #20]
 80024be:	bf00      	nop
 80024c0:	3714      	adds	r7, #20
 80024c2:	46bd      	mov	sp, r7
 80024c4:	bc80      	pop	{r7}
 80024c6:	4770      	bx	lr
 80024c8:	40012c00 	.word	0x40012c00
 80024cc:	40000400 	.word	0x40000400
 80024d0:	40000800 	.word	0x40000800

080024d4 <HAL_TIMEx_CommutCallback>:
 80024d4:	b480      	push	{r7}
 80024d6:	b083      	sub	sp, #12
 80024d8:	af00      	add	r7, sp, #0
 80024da:	6078      	str	r0, [r7, #4]
 80024dc:	bf00      	nop
 80024de:	370c      	adds	r7, #12
 80024e0:	46bd      	mov	sp, r7
 80024e2:	bc80      	pop	{r7}
 80024e4:	4770      	bx	lr

080024e6 <HAL_TIMEx_BreakCallback>:
 80024e6:	b480      	push	{r7}
 80024e8:	b083      	sub	sp, #12
 80024ea:	af00      	add	r7, sp, #0
 80024ec:	6078      	str	r0, [r7, #4]
 80024ee:	bf00      	nop
 80024f0:	370c      	adds	r7, #12
 80024f2:	46bd      	mov	sp, r7
 80024f4:	bc80      	pop	{r7}
 80024f6:	4770      	bx	lr

080024f8 <HAL_UART_Init>:
 80024f8:	b580      	push	{r7, lr}
 80024fa:	b082      	sub	sp, #8
 80024fc:	af00      	add	r7, sp, #0
 80024fe:	6078      	str	r0, [r7, #4]
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	2b00      	cmp	r3, #0
 8002504:	d101      	bne.n	800250a <HAL_UART_Init+0x12>
 8002506:	2301      	movs	r3, #1
 8002508:	e03f      	b.n	800258a <HAL_UART_Init+0x92>
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8002510:	b2db      	uxtb	r3, r3
 8002512:	2b00      	cmp	r3, #0
 8002514:	d106      	bne.n	8002524 <HAL_UART_Init+0x2c>
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	2200      	movs	r2, #0
 800251a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800251e:	6878      	ldr	r0, [r7, #4]
 8002520:	f7fe fc6c 	bl	8000dfc <HAL_UART_MspInit>
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	2224      	movs	r2, #36	; 0x24
 8002528:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	681b      	ldr	r3, [r3, #0]
 8002530:	68da      	ldr	r2, [r3, #12]
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800253a:	60da      	str	r2, [r3, #12]
 800253c:	6878      	ldr	r0, [r7, #4]
 800253e:	f000 f9a3 	bl	8002888 <UART_SetConfig>
 8002542:	687b      	ldr	r3, [r7, #4]
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	691a      	ldr	r2, [r3, #16]
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002550:	611a      	str	r2, [r3, #16]
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	681b      	ldr	r3, [r3, #0]
 8002556:	695a      	ldr	r2, [r3, #20]
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002560:	615a      	str	r2, [r3, #20]
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	681b      	ldr	r3, [r3, #0]
 8002566:	68da      	ldr	r2, [r3, #12]
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002570:	60da      	str	r2, [r3, #12]
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	2200      	movs	r2, #0
 8002576:	63da      	str	r2, [r3, #60]	; 0x3c
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	2220      	movs	r2, #32
 800257c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	2220      	movs	r2, #32
 8002584:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002588:	2300      	movs	r3, #0
 800258a:	4618      	mov	r0, r3
 800258c:	3708      	adds	r7, #8
 800258e:	46bd      	mov	sp, r7
 8002590:	bd80      	pop	{r7, pc}

08002592 <HAL_UART_Transmit>:
 8002592:	b580      	push	{r7, lr}
 8002594:	b08a      	sub	sp, #40	; 0x28
 8002596:	af02      	add	r7, sp, #8
 8002598:	60f8      	str	r0, [r7, #12]
 800259a:	60b9      	str	r1, [r7, #8]
 800259c:	603b      	str	r3, [r7, #0]
 800259e:	4613      	mov	r3, r2
 80025a0:	80fb      	strh	r3, [r7, #6]
 80025a2:	2300      	movs	r3, #0
 80025a4:	617b      	str	r3, [r7, #20]
 80025a6:	68fb      	ldr	r3, [r7, #12]
 80025a8:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80025ac:	b2db      	uxtb	r3, r3
 80025ae:	2b20      	cmp	r3, #32
 80025b0:	d17c      	bne.n	80026ac <HAL_UART_Transmit+0x11a>
 80025b2:	68bb      	ldr	r3, [r7, #8]
 80025b4:	2b00      	cmp	r3, #0
 80025b6:	d002      	beq.n	80025be <HAL_UART_Transmit+0x2c>
 80025b8:	88fb      	ldrh	r3, [r7, #6]
 80025ba:	2b00      	cmp	r3, #0
 80025bc:	d101      	bne.n	80025c2 <HAL_UART_Transmit+0x30>
 80025be:	2301      	movs	r3, #1
 80025c0:	e075      	b.n	80026ae <HAL_UART_Transmit+0x11c>
 80025c2:	68fb      	ldr	r3, [r7, #12]
 80025c4:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80025c8:	2b01      	cmp	r3, #1
 80025ca:	d101      	bne.n	80025d0 <HAL_UART_Transmit+0x3e>
 80025cc:	2302      	movs	r3, #2
 80025ce:	e06e      	b.n	80026ae <HAL_UART_Transmit+0x11c>
 80025d0:	68fb      	ldr	r3, [r7, #12]
 80025d2:	2201      	movs	r2, #1
 80025d4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80025d8:	68fb      	ldr	r3, [r7, #12]
 80025da:	2200      	movs	r2, #0
 80025dc:	63da      	str	r2, [r3, #60]	; 0x3c
 80025de:	68fb      	ldr	r3, [r7, #12]
 80025e0:	2221      	movs	r2, #33	; 0x21
 80025e2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80025e6:	f7fe fe53 	bl	8001290 <HAL_GetTick>
 80025ea:	6178      	str	r0, [r7, #20]
 80025ec:	68fb      	ldr	r3, [r7, #12]
 80025ee:	88fa      	ldrh	r2, [r7, #6]
 80025f0:	849a      	strh	r2, [r3, #36]	; 0x24
 80025f2:	68fb      	ldr	r3, [r7, #12]
 80025f4:	88fa      	ldrh	r2, [r7, #6]
 80025f6:	84da      	strh	r2, [r3, #38]	; 0x26
 80025f8:	68fb      	ldr	r3, [r7, #12]
 80025fa:	689b      	ldr	r3, [r3, #8]
 80025fc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002600:	d108      	bne.n	8002614 <HAL_UART_Transmit+0x82>
 8002602:	68fb      	ldr	r3, [r7, #12]
 8002604:	691b      	ldr	r3, [r3, #16]
 8002606:	2b00      	cmp	r3, #0
 8002608:	d104      	bne.n	8002614 <HAL_UART_Transmit+0x82>
 800260a:	2300      	movs	r3, #0
 800260c:	61fb      	str	r3, [r7, #28]
 800260e:	68bb      	ldr	r3, [r7, #8]
 8002610:	61bb      	str	r3, [r7, #24]
 8002612:	e003      	b.n	800261c <HAL_UART_Transmit+0x8a>
 8002614:	68bb      	ldr	r3, [r7, #8]
 8002616:	61fb      	str	r3, [r7, #28]
 8002618:	2300      	movs	r3, #0
 800261a:	61bb      	str	r3, [r7, #24]
 800261c:	68fb      	ldr	r3, [r7, #12]
 800261e:	2200      	movs	r2, #0
 8002620:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002624:	e02a      	b.n	800267c <HAL_UART_Transmit+0xea>
 8002626:	683b      	ldr	r3, [r7, #0]
 8002628:	9300      	str	r3, [sp, #0]
 800262a:	697b      	ldr	r3, [r7, #20]
 800262c:	2200      	movs	r2, #0
 800262e:	2180      	movs	r1, #128	; 0x80
 8002630:	68f8      	ldr	r0, [r7, #12]
 8002632:	f000 f8df 	bl	80027f4 <UART_WaitOnFlagUntilTimeout>
 8002636:	4603      	mov	r3, r0
 8002638:	2b00      	cmp	r3, #0
 800263a:	d001      	beq.n	8002640 <HAL_UART_Transmit+0xae>
 800263c:	2303      	movs	r3, #3
 800263e:	e036      	b.n	80026ae <HAL_UART_Transmit+0x11c>
 8002640:	69fb      	ldr	r3, [r7, #28]
 8002642:	2b00      	cmp	r3, #0
 8002644:	d10b      	bne.n	800265e <HAL_UART_Transmit+0xcc>
 8002646:	69bb      	ldr	r3, [r7, #24]
 8002648:	881b      	ldrh	r3, [r3, #0]
 800264a:	461a      	mov	r2, r3
 800264c:	68fb      	ldr	r3, [r7, #12]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002654:	605a      	str	r2, [r3, #4]
 8002656:	69bb      	ldr	r3, [r7, #24]
 8002658:	3302      	adds	r3, #2
 800265a:	61bb      	str	r3, [r7, #24]
 800265c:	e007      	b.n	800266e <HAL_UART_Transmit+0xdc>
 800265e:	69fb      	ldr	r3, [r7, #28]
 8002660:	781a      	ldrb	r2, [r3, #0]
 8002662:	68fb      	ldr	r3, [r7, #12]
 8002664:	681b      	ldr	r3, [r3, #0]
 8002666:	605a      	str	r2, [r3, #4]
 8002668:	69fb      	ldr	r3, [r7, #28]
 800266a:	3301      	adds	r3, #1
 800266c:	61fb      	str	r3, [r7, #28]
 800266e:	68fb      	ldr	r3, [r7, #12]
 8002670:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002672:	b29b      	uxth	r3, r3
 8002674:	3b01      	subs	r3, #1
 8002676:	b29a      	uxth	r2, r3
 8002678:	68fb      	ldr	r3, [r7, #12]
 800267a:	84da      	strh	r2, [r3, #38]	; 0x26
 800267c:	68fb      	ldr	r3, [r7, #12]
 800267e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002680:	b29b      	uxth	r3, r3
 8002682:	2b00      	cmp	r3, #0
 8002684:	d1cf      	bne.n	8002626 <HAL_UART_Transmit+0x94>
 8002686:	683b      	ldr	r3, [r7, #0]
 8002688:	9300      	str	r3, [sp, #0]
 800268a:	697b      	ldr	r3, [r7, #20]
 800268c:	2200      	movs	r2, #0
 800268e:	2140      	movs	r1, #64	; 0x40
 8002690:	68f8      	ldr	r0, [r7, #12]
 8002692:	f000 f8af 	bl	80027f4 <UART_WaitOnFlagUntilTimeout>
 8002696:	4603      	mov	r3, r0
 8002698:	2b00      	cmp	r3, #0
 800269a:	d001      	beq.n	80026a0 <HAL_UART_Transmit+0x10e>
 800269c:	2303      	movs	r3, #3
 800269e:	e006      	b.n	80026ae <HAL_UART_Transmit+0x11c>
 80026a0:	68fb      	ldr	r3, [r7, #12]
 80026a2:	2220      	movs	r2, #32
 80026a4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80026a8:	2300      	movs	r3, #0
 80026aa:	e000      	b.n	80026ae <HAL_UART_Transmit+0x11c>
 80026ac:	2302      	movs	r3, #2
 80026ae:	4618      	mov	r0, r3
 80026b0:	3720      	adds	r7, #32
 80026b2:	46bd      	mov	sp, r7
 80026b4:	bd80      	pop	{r7, pc}

080026b6 <HAL_UART_Receive>:
 80026b6:	b580      	push	{r7, lr}
 80026b8:	b08a      	sub	sp, #40	; 0x28
 80026ba:	af02      	add	r7, sp, #8
 80026bc:	60f8      	str	r0, [r7, #12]
 80026be:	60b9      	str	r1, [r7, #8]
 80026c0:	603b      	str	r3, [r7, #0]
 80026c2:	4613      	mov	r3, r2
 80026c4:	80fb      	strh	r3, [r7, #6]
 80026c6:	2300      	movs	r3, #0
 80026c8:	617b      	str	r3, [r7, #20]
 80026ca:	68fb      	ldr	r3, [r7, #12]
 80026cc:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 80026d0:	b2db      	uxtb	r3, r3
 80026d2:	2b20      	cmp	r3, #32
 80026d4:	f040 8089 	bne.w	80027ea <HAL_UART_Receive+0x134>
 80026d8:	68bb      	ldr	r3, [r7, #8]
 80026da:	2b00      	cmp	r3, #0
 80026dc:	d002      	beq.n	80026e4 <HAL_UART_Receive+0x2e>
 80026de:	88fb      	ldrh	r3, [r7, #6]
 80026e0:	2b00      	cmp	r3, #0
 80026e2:	d101      	bne.n	80026e8 <HAL_UART_Receive+0x32>
 80026e4:	2301      	movs	r3, #1
 80026e6:	e081      	b.n	80027ec <HAL_UART_Receive+0x136>
 80026e8:	68fb      	ldr	r3, [r7, #12]
 80026ea:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80026ee:	2b01      	cmp	r3, #1
 80026f0:	d101      	bne.n	80026f6 <HAL_UART_Receive+0x40>
 80026f2:	2302      	movs	r3, #2
 80026f4:	e07a      	b.n	80027ec <HAL_UART_Receive+0x136>
 80026f6:	68fb      	ldr	r3, [r7, #12]
 80026f8:	2201      	movs	r2, #1
 80026fa:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80026fe:	68fb      	ldr	r3, [r7, #12]
 8002700:	2200      	movs	r2, #0
 8002702:	63da      	str	r2, [r3, #60]	; 0x3c
 8002704:	68fb      	ldr	r3, [r7, #12]
 8002706:	2222      	movs	r2, #34	; 0x22
 8002708:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 800270c:	f7fe fdc0 	bl	8001290 <HAL_GetTick>
 8002710:	6178      	str	r0, [r7, #20]
 8002712:	68fb      	ldr	r3, [r7, #12]
 8002714:	88fa      	ldrh	r2, [r7, #6]
 8002716:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002718:	68fb      	ldr	r3, [r7, #12]
 800271a:	88fa      	ldrh	r2, [r7, #6]
 800271c:	85da      	strh	r2, [r3, #46]	; 0x2e
 800271e:	68fb      	ldr	r3, [r7, #12]
 8002720:	689b      	ldr	r3, [r3, #8]
 8002722:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002726:	d108      	bne.n	800273a <HAL_UART_Receive+0x84>
 8002728:	68fb      	ldr	r3, [r7, #12]
 800272a:	691b      	ldr	r3, [r3, #16]
 800272c:	2b00      	cmp	r3, #0
 800272e:	d104      	bne.n	800273a <HAL_UART_Receive+0x84>
 8002730:	2300      	movs	r3, #0
 8002732:	61fb      	str	r3, [r7, #28]
 8002734:	68bb      	ldr	r3, [r7, #8]
 8002736:	61bb      	str	r3, [r7, #24]
 8002738:	e003      	b.n	8002742 <HAL_UART_Receive+0x8c>
 800273a:	68bb      	ldr	r3, [r7, #8]
 800273c:	61fb      	str	r3, [r7, #28]
 800273e:	2300      	movs	r3, #0
 8002740:	61bb      	str	r3, [r7, #24]
 8002742:	68fb      	ldr	r3, [r7, #12]
 8002744:	2200      	movs	r2, #0
 8002746:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800274a:	e043      	b.n	80027d4 <HAL_UART_Receive+0x11e>
 800274c:	683b      	ldr	r3, [r7, #0]
 800274e:	9300      	str	r3, [sp, #0]
 8002750:	697b      	ldr	r3, [r7, #20]
 8002752:	2200      	movs	r2, #0
 8002754:	2120      	movs	r1, #32
 8002756:	68f8      	ldr	r0, [r7, #12]
 8002758:	f000 f84c 	bl	80027f4 <UART_WaitOnFlagUntilTimeout>
 800275c:	4603      	mov	r3, r0
 800275e:	2b00      	cmp	r3, #0
 8002760:	d001      	beq.n	8002766 <HAL_UART_Receive+0xb0>
 8002762:	2303      	movs	r3, #3
 8002764:	e042      	b.n	80027ec <HAL_UART_Receive+0x136>
 8002766:	69fb      	ldr	r3, [r7, #28]
 8002768:	2b00      	cmp	r3, #0
 800276a:	d10c      	bne.n	8002786 <HAL_UART_Receive+0xd0>
 800276c:	68fb      	ldr	r3, [r7, #12]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	685b      	ldr	r3, [r3, #4]
 8002772:	b29b      	uxth	r3, r3
 8002774:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002778:	b29a      	uxth	r2, r3
 800277a:	69bb      	ldr	r3, [r7, #24]
 800277c:	801a      	strh	r2, [r3, #0]
 800277e:	69bb      	ldr	r3, [r7, #24]
 8002780:	3302      	adds	r3, #2
 8002782:	61bb      	str	r3, [r7, #24]
 8002784:	e01f      	b.n	80027c6 <HAL_UART_Receive+0x110>
 8002786:	68fb      	ldr	r3, [r7, #12]
 8002788:	689b      	ldr	r3, [r3, #8]
 800278a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800278e:	d007      	beq.n	80027a0 <HAL_UART_Receive+0xea>
 8002790:	68fb      	ldr	r3, [r7, #12]
 8002792:	689b      	ldr	r3, [r3, #8]
 8002794:	2b00      	cmp	r3, #0
 8002796:	d10a      	bne.n	80027ae <HAL_UART_Receive+0xf8>
 8002798:	68fb      	ldr	r3, [r7, #12]
 800279a:	691b      	ldr	r3, [r3, #16]
 800279c:	2b00      	cmp	r3, #0
 800279e:	d106      	bne.n	80027ae <HAL_UART_Receive+0xf8>
 80027a0:	68fb      	ldr	r3, [r7, #12]
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	685b      	ldr	r3, [r3, #4]
 80027a6:	b2da      	uxtb	r2, r3
 80027a8:	69fb      	ldr	r3, [r7, #28]
 80027aa:	701a      	strb	r2, [r3, #0]
 80027ac:	e008      	b.n	80027c0 <HAL_UART_Receive+0x10a>
 80027ae:	68fb      	ldr	r3, [r7, #12]
 80027b0:	681b      	ldr	r3, [r3, #0]
 80027b2:	685b      	ldr	r3, [r3, #4]
 80027b4:	b2db      	uxtb	r3, r3
 80027b6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80027ba:	b2da      	uxtb	r2, r3
 80027bc:	69fb      	ldr	r3, [r7, #28]
 80027be:	701a      	strb	r2, [r3, #0]
 80027c0:	69fb      	ldr	r3, [r7, #28]
 80027c2:	3301      	adds	r3, #1
 80027c4:	61fb      	str	r3, [r7, #28]
 80027c6:	68fb      	ldr	r3, [r7, #12]
 80027c8:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80027ca:	b29b      	uxth	r3, r3
 80027cc:	3b01      	subs	r3, #1
 80027ce:	b29a      	uxth	r2, r3
 80027d0:	68fb      	ldr	r3, [r7, #12]
 80027d2:	85da      	strh	r2, [r3, #46]	; 0x2e
 80027d4:	68fb      	ldr	r3, [r7, #12]
 80027d6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80027d8:	b29b      	uxth	r3, r3
 80027da:	2b00      	cmp	r3, #0
 80027dc:	d1b6      	bne.n	800274c <HAL_UART_Receive+0x96>
 80027de:	68fb      	ldr	r3, [r7, #12]
 80027e0:	2220      	movs	r2, #32
 80027e2:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80027e6:	2300      	movs	r3, #0
 80027e8:	e000      	b.n	80027ec <HAL_UART_Receive+0x136>
 80027ea:	2302      	movs	r3, #2
 80027ec:	4618      	mov	r0, r3
 80027ee:	3720      	adds	r7, #32
 80027f0:	46bd      	mov	sp, r7
 80027f2:	bd80      	pop	{r7, pc}

080027f4 <UART_WaitOnFlagUntilTimeout>:
 80027f4:	b580      	push	{r7, lr}
 80027f6:	b084      	sub	sp, #16
 80027f8:	af00      	add	r7, sp, #0
 80027fa:	60f8      	str	r0, [r7, #12]
 80027fc:	60b9      	str	r1, [r7, #8]
 80027fe:	603b      	str	r3, [r7, #0]
 8002800:	4613      	mov	r3, r2
 8002802:	71fb      	strb	r3, [r7, #7]
 8002804:	e02c      	b.n	8002860 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002806:	69bb      	ldr	r3, [r7, #24]
 8002808:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800280c:	d028      	beq.n	8002860 <UART_WaitOnFlagUntilTimeout+0x6c>
 800280e:	69bb      	ldr	r3, [r7, #24]
 8002810:	2b00      	cmp	r3, #0
 8002812:	d007      	beq.n	8002824 <UART_WaitOnFlagUntilTimeout+0x30>
 8002814:	f7fe fd3c 	bl	8001290 <HAL_GetTick>
 8002818:	4602      	mov	r2, r0
 800281a:	683b      	ldr	r3, [r7, #0]
 800281c:	1ad3      	subs	r3, r2, r3
 800281e:	69ba      	ldr	r2, [r7, #24]
 8002820:	429a      	cmp	r2, r3
 8002822:	d21d      	bcs.n	8002860 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002824:	68fb      	ldr	r3, [r7, #12]
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	68da      	ldr	r2, [r3, #12]
 800282a:	68fb      	ldr	r3, [r7, #12]
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8002832:	60da      	str	r2, [r3, #12]
 8002834:	68fb      	ldr	r3, [r7, #12]
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	695a      	ldr	r2, [r3, #20]
 800283a:	68fb      	ldr	r3, [r7, #12]
 800283c:	681b      	ldr	r3, [r3, #0]
 800283e:	f022 0201 	bic.w	r2, r2, #1
 8002842:	615a      	str	r2, [r3, #20]
 8002844:	68fb      	ldr	r3, [r7, #12]
 8002846:	2220      	movs	r2, #32
 8002848:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800284c:	68fb      	ldr	r3, [r7, #12]
 800284e:	2220      	movs	r2, #32
 8002850:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002854:	68fb      	ldr	r3, [r7, #12]
 8002856:	2200      	movs	r2, #0
 8002858:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800285c:	2303      	movs	r3, #3
 800285e:	e00f      	b.n	8002880 <UART_WaitOnFlagUntilTimeout+0x8c>
 8002860:	68fb      	ldr	r3, [r7, #12]
 8002862:	681b      	ldr	r3, [r3, #0]
 8002864:	681a      	ldr	r2, [r3, #0]
 8002866:	68bb      	ldr	r3, [r7, #8]
 8002868:	4013      	ands	r3, r2
 800286a:	68ba      	ldr	r2, [r7, #8]
 800286c:	429a      	cmp	r2, r3
 800286e:	bf0c      	ite	eq
 8002870:	2301      	moveq	r3, #1
 8002872:	2300      	movne	r3, #0
 8002874:	b2db      	uxtb	r3, r3
 8002876:	461a      	mov	r2, r3
 8002878:	79fb      	ldrb	r3, [r7, #7]
 800287a:	429a      	cmp	r2, r3
 800287c:	d0c3      	beq.n	8002806 <UART_WaitOnFlagUntilTimeout+0x12>
 800287e:	2300      	movs	r3, #0
 8002880:	4618      	mov	r0, r3
 8002882:	3710      	adds	r7, #16
 8002884:	46bd      	mov	sp, r7
 8002886:	bd80      	pop	{r7, pc}

08002888 <UART_SetConfig>:
 8002888:	b580      	push	{r7, lr}
 800288a:	b084      	sub	sp, #16
 800288c:	af00      	add	r7, sp, #0
 800288e:	6078      	str	r0, [r7, #4]
 8002890:	687b      	ldr	r3, [r7, #4]
 8002892:	681b      	ldr	r3, [r3, #0]
 8002894:	691b      	ldr	r3, [r3, #16]
 8002896:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800289a:	687b      	ldr	r3, [r7, #4]
 800289c:	68da      	ldr	r2, [r3, #12]
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	430a      	orrs	r2, r1
 80028a4:	611a      	str	r2, [r3, #16]
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	689a      	ldr	r2, [r3, #8]
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	691b      	ldr	r3, [r3, #16]
 80028ae:	431a      	orrs	r2, r3
 80028b0:	687b      	ldr	r3, [r7, #4]
 80028b2:	695b      	ldr	r3, [r3, #20]
 80028b4:	4313      	orrs	r3, r2
 80028b6:	60bb      	str	r3, [r7, #8]
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	681b      	ldr	r3, [r3, #0]
 80028bc:	68db      	ldr	r3, [r3, #12]
 80028be:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80028c2:	f023 030c 	bic.w	r3, r3, #12
 80028c6:	687a      	ldr	r2, [r7, #4]
 80028c8:	6812      	ldr	r2, [r2, #0]
 80028ca:	68b9      	ldr	r1, [r7, #8]
 80028cc:	430b      	orrs	r3, r1
 80028ce:	60d3      	str	r3, [r2, #12]
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	681b      	ldr	r3, [r3, #0]
 80028d4:	695b      	ldr	r3, [r3, #20]
 80028d6:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80028da:	687b      	ldr	r3, [r7, #4]
 80028dc:	699a      	ldr	r2, [r3, #24]
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	681b      	ldr	r3, [r3, #0]
 80028e2:	430a      	orrs	r2, r1
 80028e4:	615a      	str	r2, [r3, #20]
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	4a2c      	ldr	r2, [pc, #176]	; (800299c <UART_SetConfig+0x114>)
 80028ec:	4293      	cmp	r3, r2
 80028ee:	d103      	bne.n	80028f8 <UART_SetConfig+0x70>
 80028f0:	f7ff fb56 	bl	8001fa0 <HAL_RCC_GetPCLK2Freq>
 80028f4:	60f8      	str	r0, [r7, #12]
 80028f6:	e002      	b.n	80028fe <UART_SetConfig+0x76>
 80028f8:	f7ff fb3e 	bl	8001f78 <HAL_RCC_GetPCLK1Freq>
 80028fc:	60f8      	str	r0, [r7, #12]
 80028fe:	68fa      	ldr	r2, [r7, #12]
 8002900:	4613      	mov	r3, r2
 8002902:	009b      	lsls	r3, r3, #2
 8002904:	4413      	add	r3, r2
 8002906:	009a      	lsls	r2, r3, #2
 8002908:	441a      	add	r2, r3
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	685b      	ldr	r3, [r3, #4]
 800290e:	009b      	lsls	r3, r3, #2
 8002910:	fbb2 f3f3 	udiv	r3, r2, r3
 8002914:	4a22      	ldr	r2, [pc, #136]	; (80029a0 <UART_SetConfig+0x118>)
 8002916:	fba2 2303 	umull	r2, r3, r2, r3
 800291a:	095b      	lsrs	r3, r3, #5
 800291c:	0119      	lsls	r1, r3, #4
 800291e:	68fa      	ldr	r2, [r7, #12]
 8002920:	4613      	mov	r3, r2
 8002922:	009b      	lsls	r3, r3, #2
 8002924:	4413      	add	r3, r2
 8002926:	009a      	lsls	r2, r3, #2
 8002928:	441a      	add	r2, r3
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	685b      	ldr	r3, [r3, #4]
 800292e:	009b      	lsls	r3, r3, #2
 8002930:	fbb2 f2f3 	udiv	r2, r2, r3
 8002934:	4b1a      	ldr	r3, [pc, #104]	; (80029a0 <UART_SetConfig+0x118>)
 8002936:	fba3 0302 	umull	r0, r3, r3, r2
 800293a:	095b      	lsrs	r3, r3, #5
 800293c:	2064      	movs	r0, #100	; 0x64
 800293e:	fb00 f303 	mul.w	r3, r0, r3
 8002942:	1ad3      	subs	r3, r2, r3
 8002944:	011b      	lsls	r3, r3, #4
 8002946:	3332      	adds	r3, #50	; 0x32
 8002948:	4a15      	ldr	r2, [pc, #84]	; (80029a0 <UART_SetConfig+0x118>)
 800294a:	fba2 2303 	umull	r2, r3, r2, r3
 800294e:	095b      	lsrs	r3, r3, #5
 8002950:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002954:	4419      	add	r1, r3
 8002956:	68fa      	ldr	r2, [r7, #12]
 8002958:	4613      	mov	r3, r2
 800295a:	009b      	lsls	r3, r3, #2
 800295c:	4413      	add	r3, r2
 800295e:	009a      	lsls	r2, r3, #2
 8002960:	441a      	add	r2, r3
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	685b      	ldr	r3, [r3, #4]
 8002966:	009b      	lsls	r3, r3, #2
 8002968:	fbb2 f2f3 	udiv	r2, r2, r3
 800296c:	4b0c      	ldr	r3, [pc, #48]	; (80029a0 <UART_SetConfig+0x118>)
 800296e:	fba3 0302 	umull	r0, r3, r3, r2
 8002972:	095b      	lsrs	r3, r3, #5
 8002974:	2064      	movs	r0, #100	; 0x64
 8002976:	fb00 f303 	mul.w	r3, r0, r3
 800297a:	1ad3      	subs	r3, r2, r3
 800297c:	011b      	lsls	r3, r3, #4
 800297e:	3332      	adds	r3, #50	; 0x32
 8002980:	4a07      	ldr	r2, [pc, #28]	; (80029a0 <UART_SetConfig+0x118>)
 8002982:	fba2 2303 	umull	r2, r3, r2, r3
 8002986:	095b      	lsrs	r3, r3, #5
 8002988:	f003 020f 	and.w	r2, r3, #15
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	440a      	add	r2, r1
 8002992:	609a      	str	r2, [r3, #8]
 8002994:	bf00      	nop
 8002996:	3710      	adds	r7, #16
 8002998:	46bd      	mov	sp, r7
 800299a:	bd80      	pop	{r7, pc}
 800299c:	40013800 	.word	0x40013800
 80029a0:	51eb851f 	.word	0x51eb851f

080029a4 <makeFreeRtosPriority>:
 80029a4:	b480      	push	{r7}
 80029a6:	b085      	sub	sp, #20
 80029a8:	af00      	add	r7, sp, #0
 80029aa:	4603      	mov	r3, r0
 80029ac:	80fb      	strh	r3, [r7, #6]
 80029ae:	2300      	movs	r3, #0
 80029b0:	60fb      	str	r3, [r7, #12]
 80029b2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80029b6:	2b84      	cmp	r3, #132	; 0x84
 80029b8:	d005      	beq.n	80029c6 <makeFreeRtosPriority+0x22>
 80029ba:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80029be:	68fb      	ldr	r3, [r7, #12]
 80029c0:	4413      	add	r3, r2
 80029c2:	3303      	adds	r3, #3
 80029c4:	60fb      	str	r3, [r7, #12]
 80029c6:	68fb      	ldr	r3, [r7, #12]
 80029c8:	4618      	mov	r0, r3
 80029ca:	3714      	adds	r7, #20
 80029cc:	46bd      	mov	sp, r7
 80029ce:	bc80      	pop	{r7}
 80029d0:	4770      	bx	lr

080029d2 <osKernelStart>:
 80029d2:	b580      	push	{r7, lr}
 80029d4:	af00      	add	r7, sp, #0
 80029d6:	f000 fad1 	bl	8002f7c <vTaskStartScheduler>
 80029da:	2300      	movs	r3, #0
 80029dc:	4618      	mov	r0, r3
 80029de:	bd80      	pop	{r7, pc}

080029e0 <osThreadCreate>:
 80029e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80029e2:	b089      	sub	sp, #36	; 0x24
 80029e4:	af04      	add	r7, sp, #16
 80029e6:	6078      	str	r0, [r7, #4]
 80029e8:	6039      	str	r1, [r7, #0]
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	695b      	ldr	r3, [r3, #20]
 80029ee:	2b00      	cmp	r3, #0
 80029f0:	d020      	beq.n	8002a34 <osThreadCreate+0x54>
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	699b      	ldr	r3, [r3, #24]
 80029f6:	2b00      	cmp	r3, #0
 80029f8:	d01c      	beq.n	8002a34 <osThreadCreate+0x54>
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	685c      	ldr	r4, [r3, #4]
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	681d      	ldr	r5, [r3, #0]
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	691e      	ldr	r6, [r3, #16]
 8002a06:	687b      	ldr	r3, [r7, #4]
 8002a08:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002a0c:	4618      	mov	r0, r3
 8002a0e:	f7ff ffc9 	bl	80029a4 <makeFreeRtosPriority>
 8002a12:	4601      	mov	r1, r0
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	695b      	ldr	r3, [r3, #20]
 8002a18:	687a      	ldr	r2, [r7, #4]
 8002a1a:	6992      	ldr	r2, [r2, #24]
 8002a1c:	9202      	str	r2, [sp, #8]
 8002a1e:	9301      	str	r3, [sp, #4]
 8002a20:	9100      	str	r1, [sp, #0]
 8002a22:	683b      	ldr	r3, [r7, #0]
 8002a24:	4632      	mov	r2, r6
 8002a26:	4629      	mov	r1, r5
 8002a28:	4620      	mov	r0, r4
 8002a2a:	f000 f8e8 	bl	8002bfe <xTaskCreateStatic>
 8002a2e:	4603      	mov	r3, r0
 8002a30:	60fb      	str	r3, [r7, #12]
 8002a32:	e01c      	b.n	8002a6e <osThreadCreate+0x8e>
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	685c      	ldr	r4, [r3, #4]
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	681d      	ldr	r5, [r3, #0]
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	691b      	ldr	r3, [r3, #16]
 8002a40:	b29e      	uxth	r6, r3
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002a48:	4618      	mov	r0, r3
 8002a4a:	f7ff ffab 	bl	80029a4 <makeFreeRtosPriority>
 8002a4e:	4602      	mov	r2, r0
 8002a50:	f107 030c 	add.w	r3, r7, #12
 8002a54:	9301      	str	r3, [sp, #4]
 8002a56:	9200      	str	r2, [sp, #0]
 8002a58:	683b      	ldr	r3, [r7, #0]
 8002a5a:	4632      	mov	r2, r6
 8002a5c:	4629      	mov	r1, r5
 8002a5e:	4620      	mov	r0, r4
 8002a60:	f000 f929 	bl	8002cb6 <xTaskCreate>
 8002a64:	4603      	mov	r3, r0
 8002a66:	2b01      	cmp	r3, #1
 8002a68:	d001      	beq.n	8002a6e <osThreadCreate+0x8e>
 8002a6a:	2300      	movs	r3, #0
 8002a6c:	e000      	b.n	8002a70 <osThreadCreate+0x90>
 8002a6e:	68fb      	ldr	r3, [r7, #12]
 8002a70:	4618      	mov	r0, r3
 8002a72:	3714      	adds	r7, #20
 8002a74:	46bd      	mov	sp, r7
 8002a76:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002a78 <osDelay>:
 8002a78:	b580      	push	{r7, lr}
 8002a7a:	b084      	sub	sp, #16
 8002a7c:	af00      	add	r7, sp, #0
 8002a7e:	6078      	str	r0, [r7, #4]
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	60fb      	str	r3, [r7, #12]
 8002a84:	68fb      	ldr	r3, [r7, #12]
 8002a86:	2b00      	cmp	r3, #0
 8002a88:	d001      	beq.n	8002a8e <osDelay+0x16>
 8002a8a:	68fb      	ldr	r3, [r7, #12]
 8002a8c:	e000      	b.n	8002a90 <osDelay+0x18>
 8002a8e:	2301      	movs	r3, #1
 8002a90:	4618      	mov	r0, r3
 8002a92:	f000 fa3f 	bl	8002f14 <vTaskDelay>
 8002a96:	2300      	movs	r3, #0
 8002a98:	4618      	mov	r0, r3
 8002a9a:	3710      	adds	r7, #16
 8002a9c:	46bd      	mov	sp, r7
 8002a9e:	bd80      	pop	{r7, pc}

08002aa0 <vListInitialise>:
 8002aa0:	b480      	push	{r7}
 8002aa2:	b083      	sub	sp, #12
 8002aa4:	af00      	add	r7, sp, #0
 8002aa6:	6078      	str	r0, [r7, #4]
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	f103 0208 	add.w	r2, r3, #8
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	605a      	str	r2, [r3, #4]
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002ab8:	609a      	str	r2, [r3, #8]
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	f103 0208 	add.w	r2, r3, #8
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	60da      	str	r2, [r3, #12]
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	f103 0208 	add.w	r2, r3, #8
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	611a      	str	r2, [r3, #16]
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	2200      	movs	r2, #0
 8002ad2:	601a      	str	r2, [r3, #0]
 8002ad4:	bf00      	nop
 8002ad6:	370c      	adds	r7, #12
 8002ad8:	46bd      	mov	sp, r7
 8002ada:	bc80      	pop	{r7}
 8002adc:	4770      	bx	lr

08002ade <vListInitialiseItem>:
 8002ade:	b480      	push	{r7}
 8002ae0:	b083      	sub	sp, #12
 8002ae2:	af00      	add	r7, sp, #0
 8002ae4:	6078      	str	r0, [r7, #4]
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	2200      	movs	r2, #0
 8002aea:	611a      	str	r2, [r3, #16]
 8002aec:	bf00      	nop
 8002aee:	370c      	adds	r7, #12
 8002af0:	46bd      	mov	sp, r7
 8002af2:	bc80      	pop	{r7}
 8002af4:	4770      	bx	lr

08002af6 <vListInsertEnd>:
 8002af6:	b480      	push	{r7}
 8002af8:	b085      	sub	sp, #20
 8002afa:	af00      	add	r7, sp, #0
 8002afc:	6078      	str	r0, [r7, #4]
 8002afe:	6039      	str	r1, [r7, #0]
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	685b      	ldr	r3, [r3, #4]
 8002b04:	60fb      	str	r3, [r7, #12]
 8002b06:	683b      	ldr	r3, [r7, #0]
 8002b08:	68fa      	ldr	r2, [r7, #12]
 8002b0a:	605a      	str	r2, [r3, #4]
 8002b0c:	68fb      	ldr	r3, [r7, #12]
 8002b0e:	689a      	ldr	r2, [r3, #8]
 8002b10:	683b      	ldr	r3, [r7, #0]
 8002b12:	609a      	str	r2, [r3, #8]
 8002b14:	68fb      	ldr	r3, [r7, #12]
 8002b16:	689b      	ldr	r3, [r3, #8]
 8002b18:	683a      	ldr	r2, [r7, #0]
 8002b1a:	605a      	str	r2, [r3, #4]
 8002b1c:	68fb      	ldr	r3, [r7, #12]
 8002b1e:	683a      	ldr	r2, [r7, #0]
 8002b20:	609a      	str	r2, [r3, #8]
 8002b22:	683b      	ldr	r3, [r7, #0]
 8002b24:	687a      	ldr	r2, [r7, #4]
 8002b26:	611a      	str	r2, [r3, #16]
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	681b      	ldr	r3, [r3, #0]
 8002b2c:	1c5a      	adds	r2, r3, #1
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	601a      	str	r2, [r3, #0]
 8002b32:	bf00      	nop
 8002b34:	3714      	adds	r7, #20
 8002b36:	46bd      	mov	sp, r7
 8002b38:	bc80      	pop	{r7}
 8002b3a:	4770      	bx	lr

08002b3c <vListInsert>:
 8002b3c:	b480      	push	{r7}
 8002b3e:	b085      	sub	sp, #20
 8002b40:	af00      	add	r7, sp, #0
 8002b42:	6078      	str	r0, [r7, #4]
 8002b44:	6039      	str	r1, [r7, #0]
 8002b46:	683b      	ldr	r3, [r7, #0]
 8002b48:	681b      	ldr	r3, [r3, #0]
 8002b4a:	60bb      	str	r3, [r7, #8]
 8002b4c:	68bb      	ldr	r3, [r7, #8]
 8002b4e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002b52:	d103      	bne.n	8002b5c <vListInsert+0x20>
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	691b      	ldr	r3, [r3, #16]
 8002b58:	60fb      	str	r3, [r7, #12]
 8002b5a:	e00c      	b.n	8002b76 <vListInsert+0x3a>
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	3308      	adds	r3, #8
 8002b60:	60fb      	str	r3, [r7, #12]
 8002b62:	e002      	b.n	8002b6a <vListInsert+0x2e>
 8002b64:	68fb      	ldr	r3, [r7, #12]
 8002b66:	685b      	ldr	r3, [r3, #4]
 8002b68:	60fb      	str	r3, [r7, #12]
 8002b6a:	68fb      	ldr	r3, [r7, #12]
 8002b6c:	685b      	ldr	r3, [r3, #4]
 8002b6e:	681b      	ldr	r3, [r3, #0]
 8002b70:	68ba      	ldr	r2, [r7, #8]
 8002b72:	429a      	cmp	r2, r3
 8002b74:	d2f6      	bcs.n	8002b64 <vListInsert+0x28>
 8002b76:	68fb      	ldr	r3, [r7, #12]
 8002b78:	685a      	ldr	r2, [r3, #4]
 8002b7a:	683b      	ldr	r3, [r7, #0]
 8002b7c:	605a      	str	r2, [r3, #4]
 8002b7e:	683b      	ldr	r3, [r7, #0]
 8002b80:	685b      	ldr	r3, [r3, #4]
 8002b82:	683a      	ldr	r2, [r7, #0]
 8002b84:	609a      	str	r2, [r3, #8]
 8002b86:	683b      	ldr	r3, [r7, #0]
 8002b88:	68fa      	ldr	r2, [r7, #12]
 8002b8a:	609a      	str	r2, [r3, #8]
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	683a      	ldr	r2, [r7, #0]
 8002b90:	605a      	str	r2, [r3, #4]
 8002b92:	683b      	ldr	r3, [r7, #0]
 8002b94:	687a      	ldr	r2, [r7, #4]
 8002b96:	611a      	str	r2, [r3, #16]
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	1c5a      	adds	r2, r3, #1
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	601a      	str	r2, [r3, #0]
 8002ba2:	bf00      	nop
 8002ba4:	3714      	adds	r7, #20
 8002ba6:	46bd      	mov	sp, r7
 8002ba8:	bc80      	pop	{r7}
 8002baa:	4770      	bx	lr

08002bac <uxListRemove>:
 8002bac:	b480      	push	{r7}
 8002bae:	b085      	sub	sp, #20
 8002bb0:	af00      	add	r7, sp, #0
 8002bb2:	6078      	str	r0, [r7, #4]
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	691b      	ldr	r3, [r3, #16]
 8002bb8:	60fb      	str	r3, [r7, #12]
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	685b      	ldr	r3, [r3, #4]
 8002bbe:	687a      	ldr	r2, [r7, #4]
 8002bc0:	6892      	ldr	r2, [r2, #8]
 8002bc2:	609a      	str	r2, [r3, #8]
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	689b      	ldr	r3, [r3, #8]
 8002bc8:	687a      	ldr	r2, [r7, #4]
 8002bca:	6852      	ldr	r2, [r2, #4]
 8002bcc:	605a      	str	r2, [r3, #4]
 8002bce:	68fb      	ldr	r3, [r7, #12]
 8002bd0:	685b      	ldr	r3, [r3, #4]
 8002bd2:	687a      	ldr	r2, [r7, #4]
 8002bd4:	429a      	cmp	r2, r3
 8002bd6:	d103      	bne.n	8002be0 <uxListRemove+0x34>
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	689a      	ldr	r2, [r3, #8]
 8002bdc:	68fb      	ldr	r3, [r7, #12]
 8002bde:	605a      	str	r2, [r3, #4]
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	2200      	movs	r2, #0
 8002be4:	611a      	str	r2, [r3, #16]
 8002be6:	68fb      	ldr	r3, [r7, #12]
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	1e5a      	subs	r2, r3, #1
 8002bec:	68fb      	ldr	r3, [r7, #12]
 8002bee:	601a      	str	r2, [r3, #0]
 8002bf0:	68fb      	ldr	r3, [r7, #12]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	4618      	mov	r0, r3
 8002bf6:	3714      	adds	r7, #20
 8002bf8:	46bd      	mov	sp, r7
 8002bfa:	bc80      	pop	{r7}
 8002bfc:	4770      	bx	lr

08002bfe <xTaskCreateStatic>:
 8002bfe:	b580      	push	{r7, lr}
 8002c00:	b08e      	sub	sp, #56	; 0x38
 8002c02:	af04      	add	r7, sp, #16
 8002c04:	60f8      	str	r0, [r7, #12]
 8002c06:	60b9      	str	r1, [r7, #8]
 8002c08:	607a      	str	r2, [r7, #4]
 8002c0a:	603b      	str	r3, [r7, #0]
 8002c0c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002c0e:	2b00      	cmp	r3, #0
 8002c10:	d10a      	bne.n	8002c28 <xTaskCreateStatic+0x2a>
 8002c12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c16:	f383 8811 	msr	BASEPRI, r3
 8002c1a:	f3bf 8f6f 	isb	sy
 8002c1e:	f3bf 8f4f 	dsb	sy
 8002c22:	623b      	str	r3, [r7, #32]
 8002c24:	bf00      	nop
 8002c26:	e7fe      	b.n	8002c26 <xTaskCreateStatic+0x28>
 8002c28:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002c2a:	2b00      	cmp	r3, #0
 8002c2c:	d10a      	bne.n	8002c44 <xTaskCreateStatic+0x46>
 8002c2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c32:	f383 8811 	msr	BASEPRI, r3
 8002c36:	f3bf 8f6f 	isb	sy
 8002c3a:	f3bf 8f4f 	dsb	sy
 8002c3e:	61fb      	str	r3, [r7, #28]
 8002c40:	bf00      	nop
 8002c42:	e7fe      	b.n	8002c42 <xTaskCreateStatic+0x44>
 8002c44:	2354      	movs	r3, #84	; 0x54
 8002c46:	613b      	str	r3, [r7, #16]
 8002c48:	693b      	ldr	r3, [r7, #16]
 8002c4a:	2b54      	cmp	r3, #84	; 0x54
 8002c4c:	d00a      	beq.n	8002c64 <xTaskCreateStatic+0x66>
 8002c4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c52:	f383 8811 	msr	BASEPRI, r3
 8002c56:	f3bf 8f6f 	isb	sy
 8002c5a:	f3bf 8f4f 	dsb	sy
 8002c5e:	61bb      	str	r3, [r7, #24]
 8002c60:	bf00      	nop
 8002c62:	e7fe      	b.n	8002c62 <xTaskCreateStatic+0x64>
 8002c64:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002c66:	2b00      	cmp	r3, #0
 8002c68:	d01e      	beq.n	8002ca8 <xTaskCreateStatic+0xaa>
 8002c6a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002c6c:	2b00      	cmp	r3, #0
 8002c6e:	d01b      	beq.n	8002ca8 <xTaskCreateStatic+0xaa>
 8002c70:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002c72:	627b      	str	r3, [r7, #36]	; 0x24
 8002c74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c76:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002c78:	631a      	str	r2, [r3, #48]	; 0x30
 8002c7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c7c:	2202      	movs	r2, #2
 8002c7e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002c82:	2300      	movs	r3, #0
 8002c84:	9303      	str	r3, [sp, #12]
 8002c86:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c88:	9302      	str	r3, [sp, #8]
 8002c8a:	f107 0314 	add.w	r3, r7, #20
 8002c8e:	9301      	str	r3, [sp, #4]
 8002c90:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002c92:	9300      	str	r3, [sp, #0]
 8002c94:	683b      	ldr	r3, [r7, #0]
 8002c96:	687a      	ldr	r2, [r7, #4]
 8002c98:	68b9      	ldr	r1, [r7, #8]
 8002c9a:	68f8      	ldr	r0, [r7, #12]
 8002c9c:	f000 f850 	bl	8002d40 <prvInitialiseNewTask>
 8002ca0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002ca2:	f000 f8cd 	bl	8002e40 <prvAddNewTaskToReadyList>
 8002ca6:	e001      	b.n	8002cac <xTaskCreateStatic+0xae>
 8002ca8:	2300      	movs	r3, #0
 8002caa:	617b      	str	r3, [r7, #20]
 8002cac:	697b      	ldr	r3, [r7, #20]
 8002cae:	4618      	mov	r0, r3
 8002cb0:	3728      	adds	r7, #40	; 0x28
 8002cb2:	46bd      	mov	sp, r7
 8002cb4:	bd80      	pop	{r7, pc}

08002cb6 <xTaskCreate>:
 8002cb6:	b580      	push	{r7, lr}
 8002cb8:	b08c      	sub	sp, #48	; 0x30
 8002cba:	af04      	add	r7, sp, #16
 8002cbc:	60f8      	str	r0, [r7, #12]
 8002cbe:	60b9      	str	r1, [r7, #8]
 8002cc0:	603b      	str	r3, [r7, #0]
 8002cc2:	4613      	mov	r3, r2
 8002cc4:	80fb      	strh	r3, [r7, #6]
 8002cc6:	88fb      	ldrh	r3, [r7, #6]
 8002cc8:	009b      	lsls	r3, r3, #2
 8002cca:	4618      	mov	r0, r3
 8002ccc:	f000 fe68 	bl	80039a0 <pvPortMalloc>
 8002cd0:	6178      	str	r0, [r7, #20]
 8002cd2:	697b      	ldr	r3, [r7, #20]
 8002cd4:	2b00      	cmp	r3, #0
 8002cd6:	d00e      	beq.n	8002cf6 <xTaskCreate+0x40>
 8002cd8:	2054      	movs	r0, #84	; 0x54
 8002cda:	f000 fe61 	bl	80039a0 <pvPortMalloc>
 8002cde:	61f8      	str	r0, [r7, #28]
 8002ce0:	69fb      	ldr	r3, [r7, #28]
 8002ce2:	2b00      	cmp	r3, #0
 8002ce4:	d003      	beq.n	8002cee <xTaskCreate+0x38>
 8002ce6:	69fb      	ldr	r3, [r7, #28]
 8002ce8:	697a      	ldr	r2, [r7, #20]
 8002cea:	631a      	str	r2, [r3, #48]	; 0x30
 8002cec:	e005      	b.n	8002cfa <xTaskCreate+0x44>
 8002cee:	6978      	ldr	r0, [r7, #20]
 8002cf0:	f000 ff1a 	bl	8003b28 <vPortFree>
 8002cf4:	e001      	b.n	8002cfa <xTaskCreate+0x44>
 8002cf6:	2300      	movs	r3, #0
 8002cf8:	61fb      	str	r3, [r7, #28]
 8002cfa:	69fb      	ldr	r3, [r7, #28]
 8002cfc:	2b00      	cmp	r3, #0
 8002cfe:	d017      	beq.n	8002d30 <xTaskCreate+0x7a>
 8002d00:	69fb      	ldr	r3, [r7, #28]
 8002d02:	2200      	movs	r2, #0
 8002d04:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002d08:	88fa      	ldrh	r2, [r7, #6]
 8002d0a:	2300      	movs	r3, #0
 8002d0c:	9303      	str	r3, [sp, #12]
 8002d0e:	69fb      	ldr	r3, [r7, #28]
 8002d10:	9302      	str	r3, [sp, #8]
 8002d12:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002d14:	9301      	str	r3, [sp, #4]
 8002d16:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002d18:	9300      	str	r3, [sp, #0]
 8002d1a:	683b      	ldr	r3, [r7, #0]
 8002d1c:	68b9      	ldr	r1, [r7, #8]
 8002d1e:	68f8      	ldr	r0, [r7, #12]
 8002d20:	f000 f80e 	bl	8002d40 <prvInitialiseNewTask>
 8002d24:	69f8      	ldr	r0, [r7, #28]
 8002d26:	f000 f88b 	bl	8002e40 <prvAddNewTaskToReadyList>
 8002d2a:	2301      	movs	r3, #1
 8002d2c:	61bb      	str	r3, [r7, #24]
 8002d2e:	e002      	b.n	8002d36 <xTaskCreate+0x80>
 8002d30:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002d34:	61bb      	str	r3, [r7, #24]
 8002d36:	69bb      	ldr	r3, [r7, #24]
 8002d38:	4618      	mov	r0, r3
 8002d3a:	3720      	adds	r7, #32
 8002d3c:	46bd      	mov	sp, r7
 8002d3e:	bd80      	pop	{r7, pc}

08002d40 <prvInitialiseNewTask>:
 8002d40:	b580      	push	{r7, lr}
 8002d42:	b088      	sub	sp, #32
 8002d44:	af00      	add	r7, sp, #0
 8002d46:	60f8      	str	r0, [r7, #12]
 8002d48:	60b9      	str	r1, [r7, #8]
 8002d4a:	607a      	str	r2, [r7, #4]
 8002d4c:	603b      	str	r3, [r7, #0]
 8002d4e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8002d58:	3b01      	subs	r3, #1
 8002d5a:	009b      	lsls	r3, r3, #2
 8002d5c:	4413      	add	r3, r2
 8002d5e:	61bb      	str	r3, [r7, #24]
 8002d60:	69bb      	ldr	r3, [r7, #24]
 8002d62:	f023 0307 	bic.w	r3, r3, #7
 8002d66:	61bb      	str	r3, [r7, #24]
 8002d68:	69bb      	ldr	r3, [r7, #24]
 8002d6a:	f003 0307 	and.w	r3, r3, #7
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	d00a      	beq.n	8002d88 <prvInitialiseNewTask+0x48>
 8002d72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002d76:	f383 8811 	msr	BASEPRI, r3
 8002d7a:	f3bf 8f6f 	isb	sy
 8002d7e:	f3bf 8f4f 	dsb	sy
 8002d82:	617b      	str	r3, [r7, #20]
 8002d84:	bf00      	nop
 8002d86:	e7fe      	b.n	8002d86 <prvInitialiseNewTask+0x46>
 8002d88:	2300      	movs	r3, #0
 8002d8a:	61fb      	str	r3, [r7, #28]
 8002d8c:	e012      	b.n	8002db4 <prvInitialiseNewTask+0x74>
 8002d8e:	68ba      	ldr	r2, [r7, #8]
 8002d90:	69fb      	ldr	r3, [r7, #28]
 8002d92:	4413      	add	r3, r2
 8002d94:	7819      	ldrb	r1, [r3, #0]
 8002d96:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002d98:	69fb      	ldr	r3, [r7, #28]
 8002d9a:	4413      	add	r3, r2
 8002d9c:	3334      	adds	r3, #52	; 0x34
 8002d9e:	460a      	mov	r2, r1
 8002da0:	701a      	strb	r2, [r3, #0]
 8002da2:	68ba      	ldr	r2, [r7, #8]
 8002da4:	69fb      	ldr	r3, [r7, #28]
 8002da6:	4413      	add	r3, r2
 8002da8:	781b      	ldrb	r3, [r3, #0]
 8002daa:	2b00      	cmp	r3, #0
 8002dac:	d006      	beq.n	8002dbc <prvInitialiseNewTask+0x7c>
 8002dae:	69fb      	ldr	r3, [r7, #28]
 8002db0:	3301      	adds	r3, #1
 8002db2:	61fb      	str	r3, [r7, #28]
 8002db4:	69fb      	ldr	r3, [r7, #28]
 8002db6:	2b0f      	cmp	r3, #15
 8002db8:	d9e9      	bls.n	8002d8e <prvInitialiseNewTask+0x4e>
 8002dba:	e000      	b.n	8002dbe <prvInitialiseNewTask+0x7e>
 8002dbc:	bf00      	nop
 8002dbe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dc0:	2200      	movs	r2, #0
 8002dc2:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002dc6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002dc8:	2b06      	cmp	r3, #6
 8002dca:	d901      	bls.n	8002dd0 <prvInitialiseNewTask+0x90>
 8002dcc:	2306      	movs	r3, #6
 8002dce:	62bb      	str	r3, [r7, #40]	; 0x28
 8002dd0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dd2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002dd4:	62da      	str	r2, [r3, #44]	; 0x2c
 8002dd6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dd8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002dda:	645a      	str	r2, [r3, #68]	; 0x44
 8002ddc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dde:	2200      	movs	r2, #0
 8002de0:	649a      	str	r2, [r3, #72]	; 0x48
 8002de2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002de4:	3304      	adds	r3, #4
 8002de6:	4618      	mov	r0, r3
 8002de8:	f7ff fe79 	bl	8002ade <vListInitialiseItem>
 8002dec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dee:	3318      	adds	r3, #24
 8002df0:	4618      	mov	r0, r3
 8002df2:	f7ff fe74 	bl	8002ade <vListInitialiseItem>
 8002df6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002df8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002dfa:	611a      	str	r2, [r3, #16]
 8002dfc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002dfe:	f1c3 0207 	rsb	r2, r3, #7
 8002e02:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e04:	619a      	str	r2, [r3, #24]
 8002e06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e08:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002e0a:	625a      	str	r2, [r3, #36]	; 0x24
 8002e0c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e0e:	2200      	movs	r2, #0
 8002e10:	64da      	str	r2, [r3, #76]	; 0x4c
 8002e12:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e14:	2200      	movs	r2, #0
 8002e16:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002e1a:	683a      	ldr	r2, [r7, #0]
 8002e1c:	68f9      	ldr	r1, [r7, #12]
 8002e1e:	69b8      	ldr	r0, [r7, #24]
 8002e20:	f000 fc0e 	bl	8003640 <pxPortInitialiseStack>
 8002e24:	4602      	mov	r2, r0
 8002e26:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e28:	601a      	str	r2, [r3, #0]
 8002e2a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002e2c:	2b00      	cmp	r3, #0
 8002e2e:	d002      	beq.n	8002e36 <prvInitialiseNewTask+0xf6>
 8002e30:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002e32:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002e34:	601a      	str	r2, [r3, #0]
 8002e36:	bf00      	nop
 8002e38:	3720      	adds	r7, #32
 8002e3a:	46bd      	mov	sp, r7
 8002e3c:	bd80      	pop	{r7, pc}
	...

08002e40 <prvAddNewTaskToReadyList>:
 8002e40:	b580      	push	{r7, lr}
 8002e42:	b082      	sub	sp, #8
 8002e44:	af00      	add	r7, sp, #0
 8002e46:	6078      	str	r0, [r7, #4]
 8002e48:	f000 fce8 	bl	800381c <vPortEnterCritical>
 8002e4c:	4b2a      	ldr	r3, [pc, #168]	; (8002ef8 <prvAddNewTaskToReadyList+0xb8>)
 8002e4e:	681b      	ldr	r3, [r3, #0]
 8002e50:	3301      	adds	r3, #1
 8002e52:	4a29      	ldr	r2, [pc, #164]	; (8002ef8 <prvAddNewTaskToReadyList+0xb8>)
 8002e54:	6013      	str	r3, [r2, #0]
 8002e56:	4b29      	ldr	r3, [pc, #164]	; (8002efc <prvAddNewTaskToReadyList+0xbc>)
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d109      	bne.n	8002e72 <prvAddNewTaskToReadyList+0x32>
 8002e5e:	4a27      	ldr	r2, [pc, #156]	; (8002efc <prvAddNewTaskToReadyList+0xbc>)
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	6013      	str	r3, [r2, #0]
 8002e64:	4b24      	ldr	r3, [pc, #144]	; (8002ef8 <prvAddNewTaskToReadyList+0xb8>)
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	2b01      	cmp	r3, #1
 8002e6a:	d110      	bne.n	8002e8e <prvAddNewTaskToReadyList+0x4e>
 8002e6c:	f000 fac0 	bl	80033f0 <prvInitialiseTaskLists>
 8002e70:	e00d      	b.n	8002e8e <prvAddNewTaskToReadyList+0x4e>
 8002e72:	4b23      	ldr	r3, [pc, #140]	; (8002f00 <prvAddNewTaskToReadyList+0xc0>)
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	2b00      	cmp	r3, #0
 8002e78:	d109      	bne.n	8002e8e <prvAddNewTaskToReadyList+0x4e>
 8002e7a:	4b20      	ldr	r3, [pc, #128]	; (8002efc <prvAddNewTaskToReadyList+0xbc>)
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e84:	429a      	cmp	r2, r3
 8002e86:	d802      	bhi.n	8002e8e <prvAddNewTaskToReadyList+0x4e>
 8002e88:	4a1c      	ldr	r2, [pc, #112]	; (8002efc <prvAddNewTaskToReadyList+0xbc>)
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	6013      	str	r3, [r2, #0]
 8002e8e:	4b1d      	ldr	r3, [pc, #116]	; (8002f04 <prvAddNewTaskToReadyList+0xc4>)
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	3301      	adds	r3, #1
 8002e94:	4a1b      	ldr	r2, [pc, #108]	; (8002f04 <prvAddNewTaskToReadyList+0xc4>)
 8002e96:	6013      	str	r3, [r2, #0]
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e9c:	2201      	movs	r2, #1
 8002e9e:	409a      	lsls	r2, r3
 8002ea0:	4b19      	ldr	r3, [pc, #100]	; (8002f08 <prvAddNewTaskToReadyList+0xc8>)
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	4313      	orrs	r3, r2
 8002ea6:	4a18      	ldr	r2, [pc, #96]	; (8002f08 <prvAddNewTaskToReadyList+0xc8>)
 8002ea8:	6013      	str	r3, [r2, #0]
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002eae:	4613      	mov	r3, r2
 8002eb0:	009b      	lsls	r3, r3, #2
 8002eb2:	4413      	add	r3, r2
 8002eb4:	009b      	lsls	r3, r3, #2
 8002eb6:	4a15      	ldr	r2, [pc, #84]	; (8002f0c <prvAddNewTaskToReadyList+0xcc>)
 8002eb8:	441a      	add	r2, r3
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	3304      	adds	r3, #4
 8002ebe:	4619      	mov	r1, r3
 8002ec0:	4610      	mov	r0, r2
 8002ec2:	f7ff fe18 	bl	8002af6 <vListInsertEnd>
 8002ec6:	f000 fcd9 	bl	800387c <vPortExitCritical>
 8002eca:	4b0d      	ldr	r3, [pc, #52]	; (8002f00 <prvAddNewTaskToReadyList+0xc0>)
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d00e      	beq.n	8002ef0 <prvAddNewTaskToReadyList+0xb0>
 8002ed2:	4b0a      	ldr	r3, [pc, #40]	; (8002efc <prvAddNewTaskToReadyList+0xbc>)
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002edc:	429a      	cmp	r2, r3
 8002ede:	d207      	bcs.n	8002ef0 <prvAddNewTaskToReadyList+0xb0>
 8002ee0:	4b0b      	ldr	r3, [pc, #44]	; (8002f10 <prvAddNewTaskToReadyList+0xd0>)
 8002ee2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002ee6:	601a      	str	r2, [r3, #0]
 8002ee8:	f3bf 8f4f 	dsb	sy
 8002eec:	f3bf 8f6f 	isb	sy
 8002ef0:	bf00      	nop
 8002ef2:	3708      	adds	r7, #8
 8002ef4:	46bd      	mov	sp, r7
 8002ef6:	bd80      	pop	{r7, pc}
 8002ef8:	200004bc 	.word	0x200004bc
 8002efc:	200003bc 	.word	0x200003bc
 8002f00:	200004c8 	.word	0x200004c8
 8002f04:	200004d8 	.word	0x200004d8
 8002f08:	200004c4 	.word	0x200004c4
 8002f0c:	200003c0 	.word	0x200003c0
 8002f10:	e000ed04 	.word	0xe000ed04

08002f14 <vTaskDelay>:
 8002f14:	b580      	push	{r7, lr}
 8002f16:	b084      	sub	sp, #16
 8002f18:	af00      	add	r7, sp, #0
 8002f1a:	6078      	str	r0, [r7, #4]
 8002f1c:	2300      	movs	r3, #0
 8002f1e:	60fb      	str	r3, [r7, #12]
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	d017      	beq.n	8002f56 <vTaskDelay+0x42>
 8002f26:	4b13      	ldr	r3, [pc, #76]	; (8002f74 <vTaskDelay+0x60>)
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	d00a      	beq.n	8002f44 <vTaskDelay+0x30>
 8002f2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002f32:	f383 8811 	msr	BASEPRI, r3
 8002f36:	f3bf 8f6f 	isb	sy
 8002f3a:	f3bf 8f4f 	dsb	sy
 8002f3e:	60bb      	str	r3, [r7, #8]
 8002f40:	bf00      	nop
 8002f42:	e7fe      	b.n	8002f42 <vTaskDelay+0x2e>
 8002f44:	f000 f87a 	bl	800303c <vTaskSuspendAll>
 8002f48:	2100      	movs	r1, #0
 8002f4a:	6878      	ldr	r0, [r7, #4]
 8002f4c:	f000 fb12 	bl	8003574 <prvAddCurrentTaskToDelayedList>
 8002f50:	f000 f882 	bl	8003058 <xTaskResumeAll>
 8002f54:	60f8      	str	r0, [r7, #12]
 8002f56:	68fb      	ldr	r3, [r7, #12]
 8002f58:	2b00      	cmp	r3, #0
 8002f5a:	d107      	bne.n	8002f6c <vTaskDelay+0x58>
 8002f5c:	4b06      	ldr	r3, [pc, #24]	; (8002f78 <vTaskDelay+0x64>)
 8002f5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002f62:	601a      	str	r2, [r3, #0]
 8002f64:	f3bf 8f4f 	dsb	sy
 8002f68:	f3bf 8f6f 	isb	sy
 8002f6c:	bf00      	nop
 8002f6e:	3710      	adds	r7, #16
 8002f70:	46bd      	mov	sp, r7
 8002f72:	bd80      	pop	{r7, pc}
 8002f74:	200004e4 	.word	0x200004e4
 8002f78:	e000ed04 	.word	0xe000ed04

08002f7c <vTaskStartScheduler>:
 8002f7c:	b580      	push	{r7, lr}
 8002f7e:	b08a      	sub	sp, #40	; 0x28
 8002f80:	af04      	add	r7, sp, #16
 8002f82:	2300      	movs	r3, #0
 8002f84:	60bb      	str	r3, [r7, #8]
 8002f86:	2300      	movs	r3, #0
 8002f88:	607b      	str	r3, [r7, #4]
 8002f8a:	463a      	mov	r2, r7
 8002f8c:	1d39      	adds	r1, r7, #4
 8002f8e:	f107 0308 	add.w	r3, r7, #8
 8002f92:	4618      	mov	r0, r3
 8002f94:	f7fd f8e4 	bl	8000160 <vApplicationGetIdleTaskMemory>
 8002f98:	6839      	ldr	r1, [r7, #0]
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	68ba      	ldr	r2, [r7, #8]
 8002f9e:	9202      	str	r2, [sp, #8]
 8002fa0:	9301      	str	r3, [sp, #4]
 8002fa2:	2300      	movs	r3, #0
 8002fa4:	9300      	str	r3, [sp, #0]
 8002fa6:	2300      	movs	r3, #0
 8002fa8:	460a      	mov	r2, r1
 8002faa:	491e      	ldr	r1, [pc, #120]	; (8003024 <vTaskStartScheduler+0xa8>)
 8002fac:	481e      	ldr	r0, [pc, #120]	; (8003028 <vTaskStartScheduler+0xac>)
 8002fae:	f7ff fe26 	bl	8002bfe <xTaskCreateStatic>
 8002fb2:	4603      	mov	r3, r0
 8002fb4:	4a1d      	ldr	r2, [pc, #116]	; (800302c <vTaskStartScheduler+0xb0>)
 8002fb6:	6013      	str	r3, [r2, #0]
 8002fb8:	4b1c      	ldr	r3, [pc, #112]	; (800302c <vTaskStartScheduler+0xb0>)
 8002fba:	681b      	ldr	r3, [r3, #0]
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	d002      	beq.n	8002fc6 <vTaskStartScheduler+0x4a>
 8002fc0:	2301      	movs	r3, #1
 8002fc2:	617b      	str	r3, [r7, #20]
 8002fc4:	e001      	b.n	8002fca <vTaskStartScheduler+0x4e>
 8002fc6:	2300      	movs	r3, #0
 8002fc8:	617b      	str	r3, [r7, #20]
 8002fca:	697b      	ldr	r3, [r7, #20]
 8002fcc:	2b01      	cmp	r3, #1
 8002fce:	d116      	bne.n	8002ffe <vTaskStartScheduler+0x82>
 8002fd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002fd4:	f383 8811 	msr	BASEPRI, r3
 8002fd8:	f3bf 8f6f 	isb	sy
 8002fdc:	f3bf 8f4f 	dsb	sy
 8002fe0:	613b      	str	r3, [r7, #16]
 8002fe2:	bf00      	nop
 8002fe4:	4b12      	ldr	r3, [pc, #72]	; (8003030 <vTaskStartScheduler+0xb4>)
 8002fe6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002fea:	601a      	str	r2, [r3, #0]
 8002fec:	4b11      	ldr	r3, [pc, #68]	; (8003034 <vTaskStartScheduler+0xb8>)
 8002fee:	2201      	movs	r2, #1
 8002ff0:	601a      	str	r2, [r3, #0]
 8002ff2:	4b11      	ldr	r3, [pc, #68]	; (8003038 <vTaskStartScheduler+0xbc>)
 8002ff4:	2200      	movs	r2, #0
 8002ff6:	601a      	str	r2, [r3, #0]
 8002ff8:	f000 fb9e 	bl	8003738 <xPortStartScheduler>
 8002ffc:	e00e      	b.n	800301c <vTaskStartScheduler+0xa0>
 8002ffe:	697b      	ldr	r3, [r7, #20]
 8003000:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003004:	d10a      	bne.n	800301c <vTaskStartScheduler+0xa0>
 8003006:	f04f 0350 	mov.w	r3, #80	; 0x50
 800300a:	f383 8811 	msr	BASEPRI, r3
 800300e:	f3bf 8f6f 	isb	sy
 8003012:	f3bf 8f4f 	dsb	sy
 8003016:	60fb      	str	r3, [r7, #12]
 8003018:	bf00      	nop
 800301a:	e7fe      	b.n	800301a <vTaskStartScheduler+0x9e>
 800301c:	bf00      	nop
 800301e:	3718      	adds	r7, #24
 8003020:	46bd      	mov	sp, r7
 8003022:	bd80      	pop	{r7, pc}
 8003024:	080052f8 	.word	0x080052f8
 8003028:	080033c1 	.word	0x080033c1
 800302c:	200004e0 	.word	0x200004e0
 8003030:	200004dc 	.word	0x200004dc
 8003034:	200004c8 	.word	0x200004c8
 8003038:	200004c0 	.word	0x200004c0

0800303c <vTaskSuspendAll>:
 800303c:	b480      	push	{r7}
 800303e:	af00      	add	r7, sp, #0
 8003040:	4b04      	ldr	r3, [pc, #16]	; (8003054 <vTaskSuspendAll+0x18>)
 8003042:	681b      	ldr	r3, [r3, #0]
 8003044:	3301      	adds	r3, #1
 8003046:	4a03      	ldr	r2, [pc, #12]	; (8003054 <vTaskSuspendAll+0x18>)
 8003048:	6013      	str	r3, [r2, #0]
 800304a:	bf00      	nop
 800304c:	46bd      	mov	sp, r7
 800304e:	bc80      	pop	{r7}
 8003050:	4770      	bx	lr
 8003052:	bf00      	nop
 8003054:	200004e4 	.word	0x200004e4

08003058 <xTaskResumeAll>:
 8003058:	b580      	push	{r7, lr}
 800305a:	b084      	sub	sp, #16
 800305c:	af00      	add	r7, sp, #0
 800305e:	2300      	movs	r3, #0
 8003060:	60fb      	str	r3, [r7, #12]
 8003062:	2300      	movs	r3, #0
 8003064:	60bb      	str	r3, [r7, #8]
 8003066:	4b41      	ldr	r3, [pc, #260]	; (800316c <xTaskResumeAll+0x114>)
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	2b00      	cmp	r3, #0
 800306c:	d10a      	bne.n	8003084 <xTaskResumeAll+0x2c>
 800306e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003072:	f383 8811 	msr	BASEPRI, r3
 8003076:	f3bf 8f6f 	isb	sy
 800307a:	f3bf 8f4f 	dsb	sy
 800307e:	603b      	str	r3, [r7, #0]
 8003080:	bf00      	nop
 8003082:	e7fe      	b.n	8003082 <xTaskResumeAll+0x2a>
 8003084:	f000 fbca 	bl	800381c <vPortEnterCritical>
 8003088:	4b38      	ldr	r3, [pc, #224]	; (800316c <xTaskResumeAll+0x114>)
 800308a:	681b      	ldr	r3, [r3, #0]
 800308c:	3b01      	subs	r3, #1
 800308e:	4a37      	ldr	r2, [pc, #220]	; (800316c <xTaskResumeAll+0x114>)
 8003090:	6013      	str	r3, [r2, #0]
 8003092:	4b36      	ldr	r3, [pc, #216]	; (800316c <xTaskResumeAll+0x114>)
 8003094:	681b      	ldr	r3, [r3, #0]
 8003096:	2b00      	cmp	r3, #0
 8003098:	d161      	bne.n	800315e <xTaskResumeAll+0x106>
 800309a:	4b35      	ldr	r3, [pc, #212]	; (8003170 <xTaskResumeAll+0x118>)
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d05d      	beq.n	800315e <xTaskResumeAll+0x106>
 80030a2:	e02e      	b.n	8003102 <xTaskResumeAll+0xaa>
 80030a4:	4b33      	ldr	r3, [pc, #204]	; (8003174 <xTaskResumeAll+0x11c>)
 80030a6:	68db      	ldr	r3, [r3, #12]
 80030a8:	68db      	ldr	r3, [r3, #12]
 80030aa:	60fb      	str	r3, [r7, #12]
 80030ac:	68fb      	ldr	r3, [r7, #12]
 80030ae:	3318      	adds	r3, #24
 80030b0:	4618      	mov	r0, r3
 80030b2:	f7ff fd7b 	bl	8002bac <uxListRemove>
 80030b6:	68fb      	ldr	r3, [r7, #12]
 80030b8:	3304      	adds	r3, #4
 80030ba:	4618      	mov	r0, r3
 80030bc:	f7ff fd76 	bl	8002bac <uxListRemove>
 80030c0:	68fb      	ldr	r3, [r7, #12]
 80030c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80030c4:	2201      	movs	r2, #1
 80030c6:	409a      	lsls	r2, r3
 80030c8:	4b2b      	ldr	r3, [pc, #172]	; (8003178 <xTaskResumeAll+0x120>)
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	4313      	orrs	r3, r2
 80030ce:	4a2a      	ldr	r2, [pc, #168]	; (8003178 <xTaskResumeAll+0x120>)
 80030d0:	6013      	str	r3, [r2, #0]
 80030d2:	68fb      	ldr	r3, [r7, #12]
 80030d4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80030d6:	4613      	mov	r3, r2
 80030d8:	009b      	lsls	r3, r3, #2
 80030da:	4413      	add	r3, r2
 80030dc:	009b      	lsls	r3, r3, #2
 80030de:	4a27      	ldr	r2, [pc, #156]	; (800317c <xTaskResumeAll+0x124>)
 80030e0:	441a      	add	r2, r3
 80030e2:	68fb      	ldr	r3, [r7, #12]
 80030e4:	3304      	adds	r3, #4
 80030e6:	4619      	mov	r1, r3
 80030e8:	4610      	mov	r0, r2
 80030ea:	f7ff fd04 	bl	8002af6 <vListInsertEnd>
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80030f2:	4b23      	ldr	r3, [pc, #140]	; (8003180 <xTaskResumeAll+0x128>)
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80030f8:	429a      	cmp	r2, r3
 80030fa:	d302      	bcc.n	8003102 <xTaskResumeAll+0xaa>
 80030fc:	4b21      	ldr	r3, [pc, #132]	; (8003184 <xTaskResumeAll+0x12c>)
 80030fe:	2201      	movs	r2, #1
 8003100:	601a      	str	r2, [r3, #0]
 8003102:	4b1c      	ldr	r3, [pc, #112]	; (8003174 <xTaskResumeAll+0x11c>)
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	2b00      	cmp	r3, #0
 8003108:	d1cc      	bne.n	80030a4 <xTaskResumeAll+0x4c>
 800310a:	68fb      	ldr	r3, [r7, #12]
 800310c:	2b00      	cmp	r3, #0
 800310e:	d001      	beq.n	8003114 <xTaskResumeAll+0xbc>
 8003110:	f000 fa0c 	bl	800352c <prvResetNextTaskUnblockTime>
 8003114:	4b1c      	ldr	r3, [pc, #112]	; (8003188 <xTaskResumeAll+0x130>)
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	607b      	str	r3, [r7, #4]
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	2b00      	cmp	r3, #0
 800311e:	d010      	beq.n	8003142 <xTaskResumeAll+0xea>
 8003120:	f000 f836 	bl	8003190 <xTaskIncrementTick>
 8003124:	4603      	mov	r3, r0
 8003126:	2b00      	cmp	r3, #0
 8003128:	d002      	beq.n	8003130 <xTaskResumeAll+0xd8>
 800312a:	4b16      	ldr	r3, [pc, #88]	; (8003184 <xTaskResumeAll+0x12c>)
 800312c:	2201      	movs	r2, #1
 800312e:	601a      	str	r2, [r3, #0]
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	3b01      	subs	r3, #1
 8003134:	607b      	str	r3, [r7, #4]
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	2b00      	cmp	r3, #0
 800313a:	d1f1      	bne.n	8003120 <xTaskResumeAll+0xc8>
 800313c:	4b12      	ldr	r3, [pc, #72]	; (8003188 <xTaskResumeAll+0x130>)
 800313e:	2200      	movs	r2, #0
 8003140:	601a      	str	r2, [r3, #0]
 8003142:	4b10      	ldr	r3, [pc, #64]	; (8003184 <xTaskResumeAll+0x12c>)
 8003144:	681b      	ldr	r3, [r3, #0]
 8003146:	2b00      	cmp	r3, #0
 8003148:	d009      	beq.n	800315e <xTaskResumeAll+0x106>
 800314a:	2301      	movs	r3, #1
 800314c:	60bb      	str	r3, [r7, #8]
 800314e:	4b0f      	ldr	r3, [pc, #60]	; (800318c <xTaskResumeAll+0x134>)
 8003150:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003154:	601a      	str	r2, [r3, #0]
 8003156:	f3bf 8f4f 	dsb	sy
 800315a:	f3bf 8f6f 	isb	sy
 800315e:	f000 fb8d 	bl	800387c <vPortExitCritical>
 8003162:	68bb      	ldr	r3, [r7, #8]
 8003164:	4618      	mov	r0, r3
 8003166:	3710      	adds	r7, #16
 8003168:	46bd      	mov	sp, r7
 800316a:	bd80      	pop	{r7, pc}
 800316c:	200004e4 	.word	0x200004e4
 8003170:	200004bc 	.word	0x200004bc
 8003174:	2000047c 	.word	0x2000047c
 8003178:	200004c4 	.word	0x200004c4
 800317c:	200003c0 	.word	0x200003c0
 8003180:	200003bc 	.word	0x200003bc
 8003184:	200004d0 	.word	0x200004d0
 8003188:	200004cc 	.word	0x200004cc
 800318c:	e000ed04 	.word	0xe000ed04

08003190 <xTaskIncrementTick>:
 8003190:	b580      	push	{r7, lr}
 8003192:	b086      	sub	sp, #24
 8003194:	af00      	add	r7, sp, #0
 8003196:	2300      	movs	r3, #0
 8003198:	617b      	str	r3, [r7, #20]
 800319a:	4b51      	ldr	r3, [pc, #324]	; (80032e0 <xTaskIncrementTick+0x150>)
 800319c:	681b      	ldr	r3, [r3, #0]
 800319e:	2b00      	cmp	r3, #0
 80031a0:	f040 808d 	bne.w	80032be <xTaskIncrementTick+0x12e>
 80031a4:	4b4f      	ldr	r3, [pc, #316]	; (80032e4 <xTaskIncrementTick+0x154>)
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	3301      	adds	r3, #1
 80031aa:	613b      	str	r3, [r7, #16]
 80031ac:	4a4d      	ldr	r2, [pc, #308]	; (80032e4 <xTaskIncrementTick+0x154>)
 80031ae:	693b      	ldr	r3, [r7, #16]
 80031b0:	6013      	str	r3, [r2, #0]
 80031b2:	693b      	ldr	r3, [r7, #16]
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	d120      	bne.n	80031fa <xTaskIncrementTick+0x6a>
 80031b8:	4b4b      	ldr	r3, [pc, #300]	; (80032e8 <xTaskIncrementTick+0x158>)
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	2b00      	cmp	r3, #0
 80031c0:	d00a      	beq.n	80031d8 <xTaskIncrementTick+0x48>
 80031c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80031c6:	f383 8811 	msr	BASEPRI, r3
 80031ca:	f3bf 8f6f 	isb	sy
 80031ce:	f3bf 8f4f 	dsb	sy
 80031d2:	603b      	str	r3, [r7, #0]
 80031d4:	bf00      	nop
 80031d6:	e7fe      	b.n	80031d6 <xTaskIncrementTick+0x46>
 80031d8:	4b43      	ldr	r3, [pc, #268]	; (80032e8 <xTaskIncrementTick+0x158>)
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	60fb      	str	r3, [r7, #12]
 80031de:	4b43      	ldr	r3, [pc, #268]	; (80032ec <xTaskIncrementTick+0x15c>)
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	4a41      	ldr	r2, [pc, #260]	; (80032e8 <xTaskIncrementTick+0x158>)
 80031e4:	6013      	str	r3, [r2, #0]
 80031e6:	4a41      	ldr	r2, [pc, #260]	; (80032ec <xTaskIncrementTick+0x15c>)
 80031e8:	68fb      	ldr	r3, [r7, #12]
 80031ea:	6013      	str	r3, [r2, #0]
 80031ec:	4b40      	ldr	r3, [pc, #256]	; (80032f0 <xTaskIncrementTick+0x160>)
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	3301      	adds	r3, #1
 80031f2:	4a3f      	ldr	r2, [pc, #252]	; (80032f0 <xTaskIncrementTick+0x160>)
 80031f4:	6013      	str	r3, [r2, #0]
 80031f6:	f000 f999 	bl	800352c <prvResetNextTaskUnblockTime>
 80031fa:	4b3e      	ldr	r3, [pc, #248]	; (80032f4 <xTaskIncrementTick+0x164>)
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	693a      	ldr	r2, [r7, #16]
 8003200:	429a      	cmp	r2, r3
 8003202:	d34d      	bcc.n	80032a0 <xTaskIncrementTick+0x110>
 8003204:	4b38      	ldr	r3, [pc, #224]	; (80032e8 <xTaskIncrementTick+0x158>)
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	681b      	ldr	r3, [r3, #0]
 800320a:	2b00      	cmp	r3, #0
 800320c:	d101      	bne.n	8003212 <xTaskIncrementTick+0x82>
 800320e:	2301      	movs	r3, #1
 8003210:	e000      	b.n	8003214 <xTaskIncrementTick+0x84>
 8003212:	2300      	movs	r3, #0
 8003214:	2b00      	cmp	r3, #0
 8003216:	d004      	beq.n	8003222 <xTaskIncrementTick+0x92>
 8003218:	4b36      	ldr	r3, [pc, #216]	; (80032f4 <xTaskIncrementTick+0x164>)
 800321a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800321e:	601a      	str	r2, [r3, #0]
 8003220:	e03e      	b.n	80032a0 <xTaskIncrementTick+0x110>
 8003222:	4b31      	ldr	r3, [pc, #196]	; (80032e8 <xTaskIncrementTick+0x158>)
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	68db      	ldr	r3, [r3, #12]
 8003228:	68db      	ldr	r3, [r3, #12]
 800322a:	60bb      	str	r3, [r7, #8]
 800322c:	68bb      	ldr	r3, [r7, #8]
 800322e:	685b      	ldr	r3, [r3, #4]
 8003230:	607b      	str	r3, [r7, #4]
 8003232:	693a      	ldr	r2, [r7, #16]
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	429a      	cmp	r2, r3
 8003238:	d203      	bcs.n	8003242 <xTaskIncrementTick+0xb2>
 800323a:	4a2e      	ldr	r2, [pc, #184]	; (80032f4 <xTaskIncrementTick+0x164>)
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	6013      	str	r3, [r2, #0]
 8003240:	e02e      	b.n	80032a0 <xTaskIncrementTick+0x110>
 8003242:	68bb      	ldr	r3, [r7, #8]
 8003244:	3304      	adds	r3, #4
 8003246:	4618      	mov	r0, r3
 8003248:	f7ff fcb0 	bl	8002bac <uxListRemove>
 800324c:	68bb      	ldr	r3, [r7, #8]
 800324e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003250:	2b00      	cmp	r3, #0
 8003252:	d004      	beq.n	800325e <xTaskIncrementTick+0xce>
 8003254:	68bb      	ldr	r3, [r7, #8]
 8003256:	3318      	adds	r3, #24
 8003258:	4618      	mov	r0, r3
 800325a:	f7ff fca7 	bl	8002bac <uxListRemove>
 800325e:	68bb      	ldr	r3, [r7, #8]
 8003260:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003262:	2201      	movs	r2, #1
 8003264:	409a      	lsls	r2, r3
 8003266:	4b24      	ldr	r3, [pc, #144]	; (80032f8 <xTaskIncrementTick+0x168>)
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	4313      	orrs	r3, r2
 800326c:	4a22      	ldr	r2, [pc, #136]	; (80032f8 <xTaskIncrementTick+0x168>)
 800326e:	6013      	str	r3, [r2, #0]
 8003270:	68bb      	ldr	r3, [r7, #8]
 8003272:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003274:	4613      	mov	r3, r2
 8003276:	009b      	lsls	r3, r3, #2
 8003278:	4413      	add	r3, r2
 800327a:	009b      	lsls	r3, r3, #2
 800327c:	4a1f      	ldr	r2, [pc, #124]	; (80032fc <xTaskIncrementTick+0x16c>)
 800327e:	441a      	add	r2, r3
 8003280:	68bb      	ldr	r3, [r7, #8]
 8003282:	3304      	adds	r3, #4
 8003284:	4619      	mov	r1, r3
 8003286:	4610      	mov	r0, r2
 8003288:	f7ff fc35 	bl	8002af6 <vListInsertEnd>
 800328c:	68bb      	ldr	r3, [r7, #8]
 800328e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003290:	4b1b      	ldr	r3, [pc, #108]	; (8003300 <xTaskIncrementTick+0x170>)
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003296:	429a      	cmp	r2, r3
 8003298:	d3b4      	bcc.n	8003204 <xTaskIncrementTick+0x74>
 800329a:	2301      	movs	r3, #1
 800329c:	617b      	str	r3, [r7, #20]
 800329e:	e7b1      	b.n	8003204 <xTaskIncrementTick+0x74>
 80032a0:	4b17      	ldr	r3, [pc, #92]	; (8003300 <xTaskIncrementTick+0x170>)
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80032a6:	4915      	ldr	r1, [pc, #84]	; (80032fc <xTaskIncrementTick+0x16c>)
 80032a8:	4613      	mov	r3, r2
 80032aa:	009b      	lsls	r3, r3, #2
 80032ac:	4413      	add	r3, r2
 80032ae:	009b      	lsls	r3, r3, #2
 80032b0:	440b      	add	r3, r1
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	2b01      	cmp	r3, #1
 80032b6:	d907      	bls.n	80032c8 <xTaskIncrementTick+0x138>
 80032b8:	2301      	movs	r3, #1
 80032ba:	617b      	str	r3, [r7, #20]
 80032bc:	e004      	b.n	80032c8 <xTaskIncrementTick+0x138>
 80032be:	4b11      	ldr	r3, [pc, #68]	; (8003304 <xTaskIncrementTick+0x174>)
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	3301      	adds	r3, #1
 80032c4:	4a0f      	ldr	r2, [pc, #60]	; (8003304 <xTaskIncrementTick+0x174>)
 80032c6:	6013      	str	r3, [r2, #0]
 80032c8:	4b0f      	ldr	r3, [pc, #60]	; (8003308 <xTaskIncrementTick+0x178>)
 80032ca:	681b      	ldr	r3, [r3, #0]
 80032cc:	2b00      	cmp	r3, #0
 80032ce:	d001      	beq.n	80032d4 <xTaskIncrementTick+0x144>
 80032d0:	2301      	movs	r3, #1
 80032d2:	617b      	str	r3, [r7, #20]
 80032d4:	697b      	ldr	r3, [r7, #20]
 80032d6:	4618      	mov	r0, r3
 80032d8:	3718      	adds	r7, #24
 80032da:	46bd      	mov	sp, r7
 80032dc:	bd80      	pop	{r7, pc}
 80032de:	bf00      	nop
 80032e0:	200004e4 	.word	0x200004e4
 80032e4:	200004c0 	.word	0x200004c0
 80032e8:	20000474 	.word	0x20000474
 80032ec:	20000478 	.word	0x20000478
 80032f0:	200004d4 	.word	0x200004d4
 80032f4:	200004dc 	.word	0x200004dc
 80032f8:	200004c4 	.word	0x200004c4
 80032fc:	200003c0 	.word	0x200003c0
 8003300:	200003bc 	.word	0x200003bc
 8003304:	200004cc 	.word	0x200004cc
 8003308:	200004d0 	.word	0x200004d0

0800330c <vTaskSwitchContext>:
 800330c:	b480      	push	{r7}
 800330e:	b087      	sub	sp, #28
 8003310:	af00      	add	r7, sp, #0
 8003312:	4b26      	ldr	r3, [pc, #152]	; (80033ac <vTaskSwitchContext+0xa0>)
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	2b00      	cmp	r3, #0
 8003318:	d003      	beq.n	8003322 <vTaskSwitchContext+0x16>
 800331a:	4b25      	ldr	r3, [pc, #148]	; (80033b0 <vTaskSwitchContext+0xa4>)
 800331c:	2201      	movs	r2, #1
 800331e:	601a      	str	r2, [r3, #0]
 8003320:	e03f      	b.n	80033a2 <vTaskSwitchContext+0x96>
 8003322:	4b23      	ldr	r3, [pc, #140]	; (80033b0 <vTaskSwitchContext+0xa4>)
 8003324:	2200      	movs	r2, #0
 8003326:	601a      	str	r2, [r3, #0]
 8003328:	4b22      	ldr	r3, [pc, #136]	; (80033b4 <vTaskSwitchContext+0xa8>)
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	60fb      	str	r3, [r7, #12]
 800332e:	68fb      	ldr	r3, [r7, #12]
 8003330:	fab3 f383 	clz	r3, r3
 8003334:	72fb      	strb	r3, [r7, #11]
 8003336:	7afb      	ldrb	r3, [r7, #11]
 8003338:	f1c3 031f 	rsb	r3, r3, #31
 800333c:	617b      	str	r3, [r7, #20]
 800333e:	491e      	ldr	r1, [pc, #120]	; (80033b8 <vTaskSwitchContext+0xac>)
 8003340:	697a      	ldr	r2, [r7, #20]
 8003342:	4613      	mov	r3, r2
 8003344:	009b      	lsls	r3, r3, #2
 8003346:	4413      	add	r3, r2
 8003348:	009b      	lsls	r3, r3, #2
 800334a:	440b      	add	r3, r1
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	2b00      	cmp	r3, #0
 8003350:	d10a      	bne.n	8003368 <vTaskSwitchContext+0x5c>
 8003352:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003356:	f383 8811 	msr	BASEPRI, r3
 800335a:	f3bf 8f6f 	isb	sy
 800335e:	f3bf 8f4f 	dsb	sy
 8003362:	607b      	str	r3, [r7, #4]
 8003364:	bf00      	nop
 8003366:	e7fe      	b.n	8003366 <vTaskSwitchContext+0x5a>
 8003368:	697a      	ldr	r2, [r7, #20]
 800336a:	4613      	mov	r3, r2
 800336c:	009b      	lsls	r3, r3, #2
 800336e:	4413      	add	r3, r2
 8003370:	009b      	lsls	r3, r3, #2
 8003372:	4a11      	ldr	r2, [pc, #68]	; (80033b8 <vTaskSwitchContext+0xac>)
 8003374:	4413      	add	r3, r2
 8003376:	613b      	str	r3, [r7, #16]
 8003378:	693b      	ldr	r3, [r7, #16]
 800337a:	685b      	ldr	r3, [r3, #4]
 800337c:	685a      	ldr	r2, [r3, #4]
 800337e:	693b      	ldr	r3, [r7, #16]
 8003380:	605a      	str	r2, [r3, #4]
 8003382:	693b      	ldr	r3, [r7, #16]
 8003384:	685a      	ldr	r2, [r3, #4]
 8003386:	693b      	ldr	r3, [r7, #16]
 8003388:	3308      	adds	r3, #8
 800338a:	429a      	cmp	r2, r3
 800338c:	d104      	bne.n	8003398 <vTaskSwitchContext+0x8c>
 800338e:	693b      	ldr	r3, [r7, #16]
 8003390:	685b      	ldr	r3, [r3, #4]
 8003392:	685a      	ldr	r2, [r3, #4]
 8003394:	693b      	ldr	r3, [r7, #16]
 8003396:	605a      	str	r2, [r3, #4]
 8003398:	693b      	ldr	r3, [r7, #16]
 800339a:	685b      	ldr	r3, [r3, #4]
 800339c:	68db      	ldr	r3, [r3, #12]
 800339e:	4a07      	ldr	r2, [pc, #28]	; (80033bc <vTaskSwitchContext+0xb0>)
 80033a0:	6013      	str	r3, [r2, #0]
 80033a2:	bf00      	nop
 80033a4:	371c      	adds	r7, #28
 80033a6:	46bd      	mov	sp, r7
 80033a8:	bc80      	pop	{r7}
 80033aa:	4770      	bx	lr
 80033ac:	200004e4 	.word	0x200004e4
 80033b0:	200004d0 	.word	0x200004d0
 80033b4:	200004c4 	.word	0x200004c4
 80033b8:	200003c0 	.word	0x200003c0
 80033bc:	200003bc 	.word	0x200003bc

080033c0 <prvIdleTask>:
 80033c0:	b580      	push	{r7, lr}
 80033c2:	b082      	sub	sp, #8
 80033c4:	af00      	add	r7, sp, #0
 80033c6:	6078      	str	r0, [r7, #4]
 80033c8:	f000 f852 	bl	8003470 <prvCheckTasksWaitingTermination>
 80033cc:	4b06      	ldr	r3, [pc, #24]	; (80033e8 <prvIdleTask+0x28>)
 80033ce:	681b      	ldr	r3, [r3, #0]
 80033d0:	2b01      	cmp	r3, #1
 80033d2:	d9f9      	bls.n	80033c8 <prvIdleTask+0x8>
 80033d4:	4b05      	ldr	r3, [pc, #20]	; (80033ec <prvIdleTask+0x2c>)
 80033d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80033da:	601a      	str	r2, [r3, #0]
 80033dc:	f3bf 8f4f 	dsb	sy
 80033e0:	f3bf 8f6f 	isb	sy
 80033e4:	e7f0      	b.n	80033c8 <prvIdleTask+0x8>
 80033e6:	bf00      	nop
 80033e8:	200003c0 	.word	0x200003c0
 80033ec:	e000ed04 	.word	0xe000ed04

080033f0 <prvInitialiseTaskLists>:
 80033f0:	b580      	push	{r7, lr}
 80033f2:	b082      	sub	sp, #8
 80033f4:	af00      	add	r7, sp, #0
 80033f6:	2300      	movs	r3, #0
 80033f8:	607b      	str	r3, [r7, #4]
 80033fa:	e00c      	b.n	8003416 <prvInitialiseTaskLists+0x26>
 80033fc:	687a      	ldr	r2, [r7, #4]
 80033fe:	4613      	mov	r3, r2
 8003400:	009b      	lsls	r3, r3, #2
 8003402:	4413      	add	r3, r2
 8003404:	009b      	lsls	r3, r3, #2
 8003406:	4a12      	ldr	r2, [pc, #72]	; (8003450 <prvInitialiseTaskLists+0x60>)
 8003408:	4413      	add	r3, r2
 800340a:	4618      	mov	r0, r3
 800340c:	f7ff fb48 	bl	8002aa0 <vListInitialise>
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	3301      	adds	r3, #1
 8003414:	607b      	str	r3, [r7, #4]
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	2b06      	cmp	r3, #6
 800341a:	d9ef      	bls.n	80033fc <prvInitialiseTaskLists+0xc>
 800341c:	480d      	ldr	r0, [pc, #52]	; (8003454 <prvInitialiseTaskLists+0x64>)
 800341e:	f7ff fb3f 	bl	8002aa0 <vListInitialise>
 8003422:	480d      	ldr	r0, [pc, #52]	; (8003458 <prvInitialiseTaskLists+0x68>)
 8003424:	f7ff fb3c 	bl	8002aa0 <vListInitialise>
 8003428:	480c      	ldr	r0, [pc, #48]	; (800345c <prvInitialiseTaskLists+0x6c>)
 800342a:	f7ff fb39 	bl	8002aa0 <vListInitialise>
 800342e:	480c      	ldr	r0, [pc, #48]	; (8003460 <prvInitialiseTaskLists+0x70>)
 8003430:	f7ff fb36 	bl	8002aa0 <vListInitialise>
 8003434:	480b      	ldr	r0, [pc, #44]	; (8003464 <prvInitialiseTaskLists+0x74>)
 8003436:	f7ff fb33 	bl	8002aa0 <vListInitialise>
 800343a:	4b0b      	ldr	r3, [pc, #44]	; (8003468 <prvInitialiseTaskLists+0x78>)
 800343c:	4a05      	ldr	r2, [pc, #20]	; (8003454 <prvInitialiseTaskLists+0x64>)
 800343e:	601a      	str	r2, [r3, #0]
 8003440:	4b0a      	ldr	r3, [pc, #40]	; (800346c <prvInitialiseTaskLists+0x7c>)
 8003442:	4a05      	ldr	r2, [pc, #20]	; (8003458 <prvInitialiseTaskLists+0x68>)
 8003444:	601a      	str	r2, [r3, #0]
 8003446:	bf00      	nop
 8003448:	3708      	adds	r7, #8
 800344a:	46bd      	mov	sp, r7
 800344c:	bd80      	pop	{r7, pc}
 800344e:	bf00      	nop
 8003450:	200003c0 	.word	0x200003c0
 8003454:	2000044c 	.word	0x2000044c
 8003458:	20000460 	.word	0x20000460
 800345c:	2000047c 	.word	0x2000047c
 8003460:	20000490 	.word	0x20000490
 8003464:	200004a8 	.word	0x200004a8
 8003468:	20000474 	.word	0x20000474
 800346c:	20000478 	.word	0x20000478

08003470 <prvCheckTasksWaitingTermination>:
 8003470:	b580      	push	{r7, lr}
 8003472:	b082      	sub	sp, #8
 8003474:	af00      	add	r7, sp, #0
 8003476:	e019      	b.n	80034ac <prvCheckTasksWaitingTermination+0x3c>
 8003478:	f000 f9d0 	bl	800381c <vPortEnterCritical>
 800347c:	4b10      	ldr	r3, [pc, #64]	; (80034c0 <prvCheckTasksWaitingTermination+0x50>)
 800347e:	68db      	ldr	r3, [r3, #12]
 8003480:	68db      	ldr	r3, [r3, #12]
 8003482:	607b      	str	r3, [r7, #4]
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	3304      	adds	r3, #4
 8003488:	4618      	mov	r0, r3
 800348a:	f7ff fb8f 	bl	8002bac <uxListRemove>
 800348e:	4b0d      	ldr	r3, [pc, #52]	; (80034c4 <prvCheckTasksWaitingTermination+0x54>)
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	3b01      	subs	r3, #1
 8003494:	4a0b      	ldr	r2, [pc, #44]	; (80034c4 <prvCheckTasksWaitingTermination+0x54>)
 8003496:	6013      	str	r3, [r2, #0]
 8003498:	4b0b      	ldr	r3, [pc, #44]	; (80034c8 <prvCheckTasksWaitingTermination+0x58>)
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	3b01      	subs	r3, #1
 800349e:	4a0a      	ldr	r2, [pc, #40]	; (80034c8 <prvCheckTasksWaitingTermination+0x58>)
 80034a0:	6013      	str	r3, [r2, #0]
 80034a2:	f000 f9eb 	bl	800387c <vPortExitCritical>
 80034a6:	6878      	ldr	r0, [r7, #4]
 80034a8:	f000 f810 	bl	80034cc <prvDeleteTCB>
 80034ac:	4b06      	ldr	r3, [pc, #24]	; (80034c8 <prvCheckTasksWaitingTermination+0x58>)
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	2b00      	cmp	r3, #0
 80034b2:	d1e1      	bne.n	8003478 <prvCheckTasksWaitingTermination+0x8>
 80034b4:	bf00      	nop
 80034b6:	bf00      	nop
 80034b8:	3708      	adds	r7, #8
 80034ba:	46bd      	mov	sp, r7
 80034bc:	bd80      	pop	{r7, pc}
 80034be:	bf00      	nop
 80034c0:	20000490 	.word	0x20000490
 80034c4:	200004bc 	.word	0x200004bc
 80034c8:	200004a4 	.word	0x200004a4

080034cc <prvDeleteTCB>:
 80034cc:	b580      	push	{r7, lr}
 80034ce:	b084      	sub	sp, #16
 80034d0:	af00      	add	r7, sp, #0
 80034d2:	6078      	str	r0, [r7, #4]
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80034da:	2b00      	cmp	r3, #0
 80034dc:	d108      	bne.n	80034f0 <prvDeleteTCB+0x24>
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034e2:	4618      	mov	r0, r3
 80034e4:	f000 fb20 	bl	8003b28 <vPortFree>
 80034e8:	6878      	ldr	r0, [r7, #4]
 80034ea:	f000 fb1d 	bl	8003b28 <vPortFree>
 80034ee:	e018      	b.n	8003522 <prvDeleteTCB+0x56>
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80034f6:	2b01      	cmp	r3, #1
 80034f8:	d103      	bne.n	8003502 <prvDeleteTCB+0x36>
 80034fa:	6878      	ldr	r0, [r7, #4]
 80034fc:	f000 fb14 	bl	8003b28 <vPortFree>
 8003500:	e00f      	b.n	8003522 <prvDeleteTCB+0x56>
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003508:	2b02      	cmp	r3, #2
 800350a:	d00a      	beq.n	8003522 <prvDeleteTCB+0x56>
 800350c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003510:	f383 8811 	msr	BASEPRI, r3
 8003514:	f3bf 8f6f 	isb	sy
 8003518:	f3bf 8f4f 	dsb	sy
 800351c:	60fb      	str	r3, [r7, #12]
 800351e:	bf00      	nop
 8003520:	e7fe      	b.n	8003520 <prvDeleteTCB+0x54>
 8003522:	bf00      	nop
 8003524:	3710      	adds	r7, #16
 8003526:	46bd      	mov	sp, r7
 8003528:	bd80      	pop	{r7, pc}
	...

0800352c <prvResetNextTaskUnblockTime>:
 800352c:	b480      	push	{r7}
 800352e:	b083      	sub	sp, #12
 8003530:	af00      	add	r7, sp, #0
 8003532:	4b0e      	ldr	r3, [pc, #56]	; (800356c <prvResetNextTaskUnblockTime+0x40>)
 8003534:	681b      	ldr	r3, [r3, #0]
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	2b00      	cmp	r3, #0
 800353a:	d101      	bne.n	8003540 <prvResetNextTaskUnblockTime+0x14>
 800353c:	2301      	movs	r3, #1
 800353e:	e000      	b.n	8003542 <prvResetNextTaskUnblockTime+0x16>
 8003540:	2300      	movs	r3, #0
 8003542:	2b00      	cmp	r3, #0
 8003544:	d004      	beq.n	8003550 <prvResetNextTaskUnblockTime+0x24>
 8003546:	4b0a      	ldr	r3, [pc, #40]	; (8003570 <prvResetNextTaskUnblockTime+0x44>)
 8003548:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800354c:	601a      	str	r2, [r3, #0]
 800354e:	e008      	b.n	8003562 <prvResetNextTaskUnblockTime+0x36>
 8003550:	4b06      	ldr	r3, [pc, #24]	; (800356c <prvResetNextTaskUnblockTime+0x40>)
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	68db      	ldr	r3, [r3, #12]
 8003556:	68db      	ldr	r3, [r3, #12]
 8003558:	607b      	str	r3, [r7, #4]
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	685b      	ldr	r3, [r3, #4]
 800355e:	4a04      	ldr	r2, [pc, #16]	; (8003570 <prvResetNextTaskUnblockTime+0x44>)
 8003560:	6013      	str	r3, [r2, #0]
 8003562:	bf00      	nop
 8003564:	370c      	adds	r7, #12
 8003566:	46bd      	mov	sp, r7
 8003568:	bc80      	pop	{r7}
 800356a:	4770      	bx	lr
 800356c:	20000474 	.word	0x20000474
 8003570:	200004dc 	.word	0x200004dc

08003574 <prvAddCurrentTaskToDelayedList>:
 8003574:	b580      	push	{r7, lr}
 8003576:	b084      	sub	sp, #16
 8003578:	af00      	add	r7, sp, #0
 800357a:	6078      	str	r0, [r7, #4]
 800357c:	6039      	str	r1, [r7, #0]
 800357e:	4b29      	ldr	r3, [pc, #164]	; (8003624 <prvAddCurrentTaskToDelayedList+0xb0>)
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	60fb      	str	r3, [r7, #12]
 8003584:	4b28      	ldr	r3, [pc, #160]	; (8003628 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	3304      	adds	r3, #4
 800358a:	4618      	mov	r0, r3
 800358c:	f7ff fb0e 	bl	8002bac <uxListRemove>
 8003590:	4603      	mov	r3, r0
 8003592:	2b00      	cmp	r3, #0
 8003594:	d10b      	bne.n	80035ae <prvAddCurrentTaskToDelayedList+0x3a>
 8003596:	4b24      	ldr	r3, [pc, #144]	; (8003628 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003598:	681b      	ldr	r3, [r3, #0]
 800359a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800359c:	2201      	movs	r2, #1
 800359e:	fa02 f303 	lsl.w	r3, r2, r3
 80035a2:	43da      	mvns	r2, r3
 80035a4:	4b21      	ldr	r3, [pc, #132]	; (800362c <prvAddCurrentTaskToDelayedList+0xb8>)
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	4013      	ands	r3, r2
 80035aa:	4a20      	ldr	r2, [pc, #128]	; (800362c <prvAddCurrentTaskToDelayedList+0xb8>)
 80035ac:	6013      	str	r3, [r2, #0]
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80035b4:	d10a      	bne.n	80035cc <prvAddCurrentTaskToDelayedList+0x58>
 80035b6:	683b      	ldr	r3, [r7, #0]
 80035b8:	2b00      	cmp	r3, #0
 80035ba:	d007      	beq.n	80035cc <prvAddCurrentTaskToDelayedList+0x58>
 80035bc:	4b1a      	ldr	r3, [pc, #104]	; (8003628 <prvAddCurrentTaskToDelayedList+0xb4>)
 80035be:	681b      	ldr	r3, [r3, #0]
 80035c0:	3304      	adds	r3, #4
 80035c2:	4619      	mov	r1, r3
 80035c4:	481a      	ldr	r0, [pc, #104]	; (8003630 <prvAddCurrentTaskToDelayedList+0xbc>)
 80035c6:	f7ff fa96 	bl	8002af6 <vListInsertEnd>
 80035ca:	e026      	b.n	800361a <prvAddCurrentTaskToDelayedList+0xa6>
 80035cc:	68fa      	ldr	r2, [r7, #12]
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	4413      	add	r3, r2
 80035d2:	60bb      	str	r3, [r7, #8]
 80035d4:	4b14      	ldr	r3, [pc, #80]	; (8003628 <prvAddCurrentTaskToDelayedList+0xb4>)
 80035d6:	681b      	ldr	r3, [r3, #0]
 80035d8:	68ba      	ldr	r2, [r7, #8]
 80035da:	605a      	str	r2, [r3, #4]
 80035dc:	68ba      	ldr	r2, [r7, #8]
 80035de:	68fb      	ldr	r3, [r7, #12]
 80035e0:	429a      	cmp	r2, r3
 80035e2:	d209      	bcs.n	80035f8 <prvAddCurrentTaskToDelayedList+0x84>
 80035e4:	4b13      	ldr	r3, [pc, #76]	; (8003634 <prvAddCurrentTaskToDelayedList+0xc0>)
 80035e6:	681a      	ldr	r2, [r3, #0]
 80035e8:	4b0f      	ldr	r3, [pc, #60]	; (8003628 <prvAddCurrentTaskToDelayedList+0xb4>)
 80035ea:	681b      	ldr	r3, [r3, #0]
 80035ec:	3304      	adds	r3, #4
 80035ee:	4619      	mov	r1, r3
 80035f0:	4610      	mov	r0, r2
 80035f2:	f7ff faa3 	bl	8002b3c <vListInsert>
 80035f6:	e010      	b.n	800361a <prvAddCurrentTaskToDelayedList+0xa6>
 80035f8:	4b0f      	ldr	r3, [pc, #60]	; (8003638 <prvAddCurrentTaskToDelayedList+0xc4>)
 80035fa:	681a      	ldr	r2, [r3, #0]
 80035fc:	4b0a      	ldr	r3, [pc, #40]	; (8003628 <prvAddCurrentTaskToDelayedList+0xb4>)
 80035fe:	681b      	ldr	r3, [r3, #0]
 8003600:	3304      	adds	r3, #4
 8003602:	4619      	mov	r1, r3
 8003604:	4610      	mov	r0, r2
 8003606:	f7ff fa99 	bl	8002b3c <vListInsert>
 800360a:	4b0c      	ldr	r3, [pc, #48]	; (800363c <prvAddCurrentTaskToDelayedList+0xc8>)
 800360c:	681b      	ldr	r3, [r3, #0]
 800360e:	68ba      	ldr	r2, [r7, #8]
 8003610:	429a      	cmp	r2, r3
 8003612:	d202      	bcs.n	800361a <prvAddCurrentTaskToDelayedList+0xa6>
 8003614:	4a09      	ldr	r2, [pc, #36]	; (800363c <prvAddCurrentTaskToDelayedList+0xc8>)
 8003616:	68bb      	ldr	r3, [r7, #8]
 8003618:	6013      	str	r3, [r2, #0]
 800361a:	bf00      	nop
 800361c:	3710      	adds	r7, #16
 800361e:	46bd      	mov	sp, r7
 8003620:	bd80      	pop	{r7, pc}
 8003622:	bf00      	nop
 8003624:	200004c0 	.word	0x200004c0
 8003628:	200003bc 	.word	0x200003bc
 800362c:	200004c4 	.word	0x200004c4
 8003630:	200004a8 	.word	0x200004a8
 8003634:	20000478 	.word	0x20000478
 8003638:	20000474 	.word	0x20000474
 800363c:	200004dc 	.word	0x200004dc

08003640 <pxPortInitialiseStack>:
 8003640:	b480      	push	{r7}
 8003642:	b085      	sub	sp, #20
 8003644:	af00      	add	r7, sp, #0
 8003646:	60f8      	str	r0, [r7, #12]
 8003648:	60b9      	str	r1, [r7, #8]
 800364a:	607a      	str	r2, [r7, #4]
 800364c:	68fb      	ldr	r3, [r7, #12]
 800364e:	3b04      	subs	r3, #4
 8003650:	60fb      	str	r3, [r7, #12]
 8003652:	68fb      	ldr	r3, [r7, #12]
 8003654:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003658:	601a      	str	r2, [r3, #0]
 800365a:	68fb      	ldr	r3, [r7, #12]
 800365c:	3b04      	subs	r3, #4
 800365e:	60fb      	str	r3, [r7, #12]
 8003660:	68bb      	ldr	r3, [r7, #8]
 8003662:	f023 0201 	bic.w	r2, r3, #1
 8003666:	68fb      	ldr	r3, [r7, #12]
 8003668:	601a      	str	r2, [r3, #0]
 800366a:	68fb      	ldr	r3, [r7, #12]
 800366c:	3b04      	subs	r3, #4
 800366e:	60fb      	str	r3, [r7, #12]
 8003670:	4a08      	ldr	r2, [pc, #32]	; (8003694 <pxPortInitialiseStack+0x54>)
 8003672:	68fb      	ldr	r3, [r7, #12]
 8003674:	601a      	str	r2, [r3, #0]
 8003676:	68fb      	ldr	r3, [r7, #12]
 8003678:	3b14      	subs	r3, #20
 800367a:	60fb      	str	r3, [r7, #12]
 800367c:	687a      	ldr	r2, [r7, #4]
 800367e:	68fb      	ldr	r3, [r7, #12]
 8003680:	601a      	str	r2, [r3, #0]
 8003682:	68fb      	ldr	r3, [r7, #12]
 8003684:	3b20      	subs	r3, #32
 8003686:	60fb      	str	r3, [r7, #12]
 8003688:	68fb      	ldr	r3, [r7, #12]
 800368a:	4618      	mov	r0, r3
 800368c:	3714      	adds	r7, #20
 800368e:	46bd      	mov	sp, r7
 8003690:	bc80      	pop	{r7}
 8003692:	4770      	bx	lr
 8003694:	08003699 	.word	0x08003699

08003698 <prvTaskExitError>:
 8003698:	b480      	push	{r7}
 800369a:	b085      	sub	sp, #20
 800369c:	af00      	add	r7, sp, #0
 800369e:	2300      	movs	r3, #0
 80036a0:	607b      	str	r3, [r7, #4]
 80036a2:	4b12      	ldr	r3, [pc, #72]	; (80036ec <prvTaskExitError+0x54>)
 80036a4:	681b      	ldr	r3, [r3, #0]
 80036a6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80036aa:	d00a      	beq.n	80036c2 <prvTaskExitError+0x2a>
 80036ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80036b0:	f383 8811 	msr	BASEPRI, r3
 80036b4:	f3bf 8f6f 	isb	sy
 80036b8:	f3bf 8f4f 	dsb	sy
 80036bc:	60fb      	str	r3, [r7, #12]
 80036be:	bf00      	nop
 80036c0:	e7fe      	b.n	80036c0 <prvTaskExitError+0x28>
 80036c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80036c6:	f383 8811 	msr	BASEPRI, r3
 80036ca:	f3bf 8f6f 	isb	sy
 80036ce:	f3bf 8f4f 	dsb	sy
 80036d2:	60bb      	str	r3, [r7, #8]
 80036d4:	bf00      	nop
 80036d6:	bf00      	nop
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	2b00      	cmp	r3, #0
 80036dc:	d0fc      	beq.n	80036d8 <prvTaskExitError+0x40>
 80036de:	bf00      	nop
 80036e0:	bf00      	nop
 80036e2:	3714      	adds	r7, #20
 80036e4:	46bd      	mov	sp, r7
 80036e6:	bc80      	pop	{r7}
 80036e8:	4770      	bx	lr
 80036ea:	bf00      	nop
 80036ec:	200000dc 	.word	0x200000dc

080036f0 <SVC_Handler>:
 80036f0:	4b07      	ldr	r3, [pc, #28]	; (8003710 <pxCurrentTCBConst2>)
 80036f2:	6819      	ldr	r1, [r3, #0]
 80036f4:	6808      	ldr	r0, [r1, #0]
 80036f6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80036fa:	f380 8809 	msr	PSP, r0
 80036fe:	f3bf 8f6f 	isb	sy
 8003702:	f04f 0000 	mov.w	r0, #0
 8003706:	f380 8811 	msr	BASEPRI, r0
 800370a:	f04e 0e0d 	orr.w	lr, lr, #13
 800370e:	4770      	bx	lr

08003710 <pxCurrentTCBConst2>:
 8003710:	200003bc 	.word	0x200003bc
 8003714:	bf00      	nop
 8003716:	bf00      	nop

08003718 <prvPortStartFirstTask>:
 8003718:	4806      	ldr	r0, [pc, #24]	; (8003734 <prvPortStartFirstTask+0x1c>)
 800371a:	6800      	ldr	r0, [r0, #0]
 800371c:	6800      	ldr	r0, [r0, #0]
 800371e:	f380 8808 	msr	MSP, r0
 8003722:	b662      	cpsie	i
 8003724:	b661      	cpsie	f
 8003726:	f3bf 8f4f 	dsb	sy
 800372a:	f3bf 8f6f 	isb	sy
 800372e:	df00      	svc	0
 8003730:	bf00      	nop
 8003732:	bf00      	nop
 8003734:	e000ed08 	.word	0xe000ed08

08003738 <xPortStartScheduler>:
 8003738:	b580      	push	{r7, lr}
 800373a:	b084      	sub	sp, #16
 800373c:	af00      	add	r7, sp, #0
 800373e:	4b32      	ldr	r3, [pc, #200]	; (8003808 <xPortStartScheduler+0xd0>)
 8003740:	60fb      	str	r3, [r7, #12]
 8003742:	68fb      	ldr	r3, [r7, #12]
 8003744:	781b      	ldrb	r3, [r3, #0]
 8003746:	b2db      	uxtb	r3, r3
 8003748:	607b      	str	r3, [r7, #4]
 800374a:	68fb      	ldr	r3, [r7, #12]
 800374c:	22ff      	movs	r2, #255	; 0xff
 800374e:	701a      	strb	r2, [r3, #0]
 8003750:	68fb      	ldr	r3, [r7, #12]
 8003752:	781b      	ldrb	r3, [r3, #0]
 8003754:	b2db      	uxtb	r3, r3
 8003756:	70fb      	strb	r3, [r7, #3]
 8003758:	78fb      	ldrb	r3, [r7, #3]
 800375a:	b2db      	uxtb	r3, r3
 800375c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8003760:	b2da      	uxtb	r2, r3
 8003762:	4b2a      	ldr	r3, [pc, #168]	; (800380c <xPortStartScheduler+0xd4>)
 8003764:	701a      	strb	r2, [r3, #0]
 8003766:	4b2a      	ldr	r3, [pc, #168]	; (8003810 <xPortStartScheduler+0xd8>)
 8003768:	2207      	movs	r2, #7
 800376a:	601a      	str	r2, [r3, #0]
 800376c:	e009      	b.n	8003782 <xPortStartScheduler+0x4a>
 800376e:	4b28      	ldr	r3, [pc, #160]	; (8003810 <xPortStartScheduler+0xd8>)
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	3b01      	subs	r3, #1
 8003774:	4a26      	ldr	r2, [pc, #152]	; (8003810 <xPortStartScheduler+0xd8>)
 8003776:	6013      	str	r3, [r2, #0]
 8003778:	78fb      	ldrb	r3, [r7, #3]
 800377a:	b2db      	uxtb	r3, r3
 800377c:	005b      	lsls	r3, r3, #1
 800377e:	b2db      	uxtb	r3, r3
 8003780:	70fb      	strb	r3, [r7, #3]
 8003782:	78fb      	ldrb	r3, [r7, #3]
 8003784:	b2db      	uxtb	r3, r3
 8003786:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800378a:	2b80      	cmp	r3, #128	; 0x80
 800378c:	d0ef      	beq.n	800376e <xPortStartScheduler+0x36>
 800378e:	4b20      	ldr	r3, [pc, #128]	; (8003810 <xPortStartScheduler+0xd8>)
 8003790:	681b      	ldr	r3, [r3, #0]
 8003792:	f1c3 0307 	rsb	r3, r3, #7
 8003796:	2b04      	cmp	r3, #4
 8003798:	d00a      	beq.n	80037b0 <xPortStartScheduler+0x78>
 800379a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800379e:	f383 8811 	msr	BASEPRI, r3
 80037a2:	f3bf 8f6f 	isb	sy
 80037a6:	f3bf 8f4f 	dsb	sy
 80037aa:	60bb      	str	r3, [r7, #8]
 80037ac:	bf00      	nop
 80037ae:	e7fe      	b.n	80037ae <xPortStartScheduler+0x76>
 80037b0:	4b17      	ldr	r3, [pc, #92]	; (8003810 <xPortStartScheduler+0xd8>)
 80037b2:	681b      	ldr	r3, [r3, #0]
 80037b4:	021b      	lsls	r3, r3, #8
 80037b6:	4a16      	ldr	r2, [pc, #88]	; (8003810 <xPortStartScheduler+0xd8>)
 80037b8:	6013      	str	r3, [r2, #0]
 80037ba:	4b15      	ldr	r3, [pc, #84]	; (8003810 <xPortStartScheduler+0xd8>)
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80037c2:	4a13      	ldr	r2, [pc, #76]	; (8003810 <xPortStartScheduler+0xd8>)
 80037c4:	6013      	str	r3, [r2, #0]
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	b2da      	uxtb	r2, r3
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	701a      	strb	r2, [r3, #0]
 80037ce:	4b11      	ldr	r3, [pc, #68]	; (8003814 <xPortStartScheduler+0xdc>)
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	4a10      	ldr	r2, [pc, #64]	; (8003814 <xPortStartScheduler+0xdc>)
 80037d4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80037d8:	6013      	str	r3, [r2, #0]
 80037da:	4b0e      	ldr	r3, [pc, #56]	; (8003814 <xPortStartScheduler+0xdc>)
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	4a0d      	ldr	r2, [pc, #52]	; (8003814 <xPortStartScheduler+0xdc>)
 80037e0:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80037e4:	6013      	str	r3, [r2, #0]
 80037e6:	f000 f8b9 	bl	800395c <vPortSetupTimerInterrupt>
 80037ea:	4b0b      	ldr	r3, [pc, #44]	; (8003818 <xPortStartScheduler+0xe0>)
 80037ec:	2200      	movs	r2, #0
 80037ee:	601a      	str	r2, [r3, #0]
 80037f0:	f7ff ff92 	bl	8003718 <prvPortStartFirstTask>
 80037f4:	f7ff fd8a 	bl	800330c <vTaskSwitchContext>
 80037f8:	f7ff ff4e 	bl	8003698 <prvTaskExitError>
 80037fc:	2300      	movs	r3, #0
 80037fe:	4618      	mov	r0, r3
 8003800:	3710      	adds	r7, #16
 8003802:	46bd      	mov	sp, r7
 8003804:	bd80      	pop	{r7, pc}
 8003806:	bf00      	nop
 8003808:	e000e400 	.word	0xe000e400
 800380c:	200004e8 	.word	0x200004e8
 8003810:	200004ec 	.word	0x200004ec
 8003814:	e000ed20 	.word	0xe000ed20
 8003818:	200000dc 	.word	0x200000dc

0800381c <vPortEnterCritical>:
 800381c:	b480      	push	{r7}
 800381e:	b083      	sub	sp, #12
 8003820:	af00      	add	r7, sp, #0
 8003822:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003826:	f383 8811 	msr	BASEPRI, r3
 800382a:	f3bf 8f6f 	isb	sy
 800382e:	f3bf 8f4f 	dsb	sy
 8003832:	607b      	str	r3, [r7, #4]
 8003834:	bf00      	nop
 8003836:	4b0f      	ldr	r3, [pc, #60]	; (8003874 <vPortEnterCritical+0x58>)
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	3301      	adds	r3, #1
 800383c:	4a0d      	ldr	r2, [pc, #52]	; (8003874 <vPortEnterCritical+0x58>)
 800383e:	6013      	str	r3, [r2, #0]
 8003840:	4b0c      	ldr	r3, [pc, #48]	; (8003874 <vPortEnterCritical+0x58>)
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	2b01      	cmp	r3, #1
 8003846:	d10f      	bne.n	8003868 <vPortEnterCritical+0x4c>
 8003848:	4b0b      	ldr	r3, [pc, #44]	; (8003878 <vPortEnterCritical+0x5c>)
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	b2db      	uxtb	r3, r3
 800384e:	2b00      	cmp	r3, #0
 8003850:	d00a      	beq.n	8003868 <vPortEnterCritical+0x4c>
 8003852:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003856:	f383 8811 	msr	BASEPRI, r3
 800385a:	f3bf 8f6f 	isb	sy
 800385e:	f3bf 8f4f 	dsb	sy
 8003862:	603b      	str	r3, [r7, #0]
 8003864:	bf00      	nop
 8003866:	e7fe      	b.n	8003866 <vPortEnterCritical+0x4a>
 8003868:	bf00      	nop
 800386a:	370c      	adds	r7, #12
 800386c:	46bd      	mov	sp, r7
 800386e:	bc80      	pop	{r7}
 8003870:	4770      	bx	lr
 8003872:	bf00      	nop
 8003874:	200000dc 	.word	0x200000dc
 8003878:	e000ed04 	.word	0xe000ed04

0800387c <vPortExitCritical>:
 800387c:	b480      	push	{r7}
 800387e:	b083      	sub	sp, #12
 8003880:	af00      	add	r7, sp, #0
 8003882:	4b11      	ldr	r3, [pc, #68]	; (80038c8 <vPortExitCritical+0x4c>)
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	2b00      	cmp	r3, #0
 8003888:	d10a      	bne.n	80038a0 <vPortExitCritical+0x24>
 800388a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800388e:	f383 8811 	msr	BASEPRI, r3
 8003892:	f3bf 8f6f 	isb	sy
 8003896:	f3bf 8f4f 	dsb	sy
 800389a:	607b      	str	r3, [r7, #4]
 800389c:	bf00      	nop
 800389e:	e7fe      	b.n	800389e <vPortExitCritical+0x22>
 80038a0:	4b09      	ldr	r3, [pc, #36]	; (80038c8 <vPortExitCritical+0x4c>)
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	3b01      	subs	r3, #1
 80038a6:	4a08      	ldr	r2, [pc, #32]	; (80038c8 <vPortExitCritical+0x4c>)
 80038a8:	6013      	str	r3, [r2, #0]
 80038aa:	4b07      	ldr	r3, [pc, #28]	; (80038c8 <vPortExitCritical+0x4c>)
 80038ac:	681b      	ldr	r3, [r3, #0]
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d105      	bne.n	80038be <vPortExitCritical+0x42>
 80038b2:	2300      	movs	r3, #0
 80038b4:	603b      	str	r3, [r7, #0]
 80038b6:	683b      	ldr	r3, [r7, #0]
 80038b8:	f383 8811 	msr	BASEPRI, r3
 80038bc:	bf00      	nop
 80038be:	bf00      	nop
 80038c0:	370c      	adds	r7, #12
 80038c2:	46bd      	mov	sp, r7
 80038c4:	bc80      	pop	{r7}
 80038c6:	4770      	bx	lr
 80038c8:	200000dc 	.word	0x200000dc
 80038cc:	00000000 	.word	0x00000000

080038d0 <PendSV_Handler>:
 80038d0:	f3ef 8009 	mrs	r0, PSP
 80038d4:	f3bf 8f6f 	isb	sy
 80038d8:	4b0d      	ldr	r3, [pc, #52]	; (8003910 <pxCurrentTCBConst>)
 80038da:	681a      	ldr	r2, [r3, #0]
 80038dc:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80038e0:	6010      	str	r0, [r2, #0]
 80038e2:	e92d 4008 	stmdb	sp!, {r3, lr}
 80038e6:	f04f 0050 	mov.w	r0, #80	; 0x50
 80038ea:	f380 8811 	msr	BASEPRI, r0
 80038ee:	f7ff fd0d 	bl	800330c <vTaskSwitchContext>
 80038f2:	f04f 0000 	mov.w	r0, #0
 80038f6:	f380 8811 	msr	BASEPRI, r0
 80038fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80038fe:	6819      	ldr	r1, [r3, #0]
 8003900:	6808      	ldr	r0, [r1, #0]
 8003902:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003906:	f380 8809 	msr	PSP, r0
 800390a:	f3bf 8f6f 	isb	sy
 800390e:	4770      	bx	lr

08003910 <pxCurrentTCBConst>:
 8003910:	200003bc 	.word	0x200003bc
 8003914:	bf00      	nop
 8003916:	bf00      	nop

08003918 <SysTick_Handler>:
 8003918:	b580      	push	{r7, lr}
 800391a:	b082      	sub	sp, #8
 800391c:	af00      	add	r7, sp, #0
 800391e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003922:	f383 8811 	msr	BASEPRI, r3
 8003926:	f3bf 8f6f 	isb	sy
 800392a:	f3bf 8f4f 	dsb	sy
 800392e:	607b      	str	r3, [r7, #4]
 8003930:	bf00      	nop
 8003932:	f7ff fc2d 	bl	8003190 <xTaskIncrementTick>
 8003936:	4603      	mov	r3, r0
 8003938:	2b00      	cmp	r3, #0
 800393a:	d003      	beq.n	8003944 <SysTick_Handler+0x2c>
 800393c:	4b06      	ldr	r3, [pc, #24]	; (8003958 <SysTick_Handler+0x40>)
 800393e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003942:	601a      	str	r2, [r3, #0]
 8003944:	2300      	movs	r3, #0
 8003946:	603b      	str	r3, [r7, #0]
 8003948:	683b      	ldr	r3, [r7, #0]
 800394a:	f383 8811 	msr	BASEPRI, r3
 800394e:	bf00      	nop
 8003950:	bf00      	nop
 8003952:	3708      	adds	r7, #8
 8003954:	46bd      	mov	sp, r7
 8003956:	bd80      	pop	{r7, pc}
 8003958:	e000ed04 	.word	0xe000ed04

0800395c <vPortSetupTimerInterrupt>:
 800395c:	b480      	push	{r7}
 800395e:	af00      	add	r7, sp, #0
 8003960:	4b0a      	ldr	r3, [pc, #40]	; (800398c <vPortSetupTimerInterrupt+0x30>)
 8003962:	2200      	movs	r2, #0
 8003964:	601a      	str	r2, [r3, #0]
 8003966:	4b0a      	ldr	r3, [pc, #40]	; (8003990 <vPortSetupTimerInterrupt+0x34>)
 8003968:	2200      	movs	r2, #0
 800396a:	601a      	str	r2, [r3, #0]
 800396c:	4b09      	ldr	r3, [pc, #36]	; (8003994 <vPortSetupTimerInterrupt+0x38>)
 800396e:	681b      	ldr	r3, [r3, #0]
 8003970:	4a09      	ldr	r2, [pc, #36]	; (8003998 <vPortSetupTimerInterrupt+0x3c>)
 8003972:	fba2 2303 	umull	r2, r3, r2, r3
 8003976:	099b      	lsrs	r3, r3, #6
 8003978:	4a08      	ldr	r2, [pc, #32]	; (800399c <vPortSetupTimerInterrupt+0x40>)
 800397a:	3b01      	subs	r3, #1
 800397c:	6013      	str	r3, [r2, #0]
 800397e:	4b03      	ldr	r3, [pc, #12]	; (800398c <vPortSetupTimerInterrupt+0x30>)
 8003980:	2207      	movs	r2, #7
 8003982:	601a      	str	r2, [r3, #0]
 8003984:	bf00      	nop
 8003986:	46bd      	mov	sp, r7
 8003988:	bc80      	pop	{r7}
 800398a:	4770      	bx	lr
 800398c:	e000e010 	.word	0xe000e010
 8003990:	e000e018 	.word	0xe000e018
 8003994:	200000d0 	.word	0x200000d0
 8003998:	10624dd3 	.word	0x10624dd3
 800399c:	e000e014 	.word	0xe000e014

080039a0 <pvPortMalloc>:
 80039a0:	b580      	push	{r7, lr}
 80039a2:	b08a      	sub	sp, #40	; 0x28
 80039a4:	af00      	add	r7, sp, #0
 80039a6:	6078      	str	r0, [r7, #4]
 80039a8:	2300      	movs	r3, #0
 80039aa:	61fb      	str	r3, [r7, #28]
 80039ac:	f7ff fb46 	bl	800303c <vTaskSuspendAll>
 80039b0:	4b58      	ldr	r3, [pc, #352]	; (8003b14 <pvPortMalloc+0x174>)
 80039b2:	681b      	ldr	r3, [r3, #0]
 80039b4:	2b00      	cmp	r3, #0
 80039b6:	d101      	bne.n	80039bc <pvPortMalloc+0x1c>
 80039b8:	f000 f910 	bl	8003bdc <prvHeapInit>
 80039bc:	4b56      	ldr	r3, [pc, #344]	; (8003b18 <pvPortMalloc+0x178>)
 80039be:	681a      	ldr	r2, [r3, #0]
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	4013      	ands	r3, r2
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	f040 808e 	bne.w	8003ae6 <pvPortMalloc+0x146>
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	2b00      	cmp	r3, #0
 80039ce:	d01d      	beq.n	8003a0c <pvPortMalloc+0x6c>
 80039d0:	2208      	movs	r2, #8
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	4413      	add	r3, r2
 80039d6:	607b      	str	r3, [r7, #4]
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	f003 0307 	and.w	r3, r3, #7
 80039de:	2b00      	cmp	r3, #0
 80039e0:	d014      	beq.n	8003a0c <pvPortMalloc+0x6c>
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	f023 0307 	bic.w	r3, r3, #7
 80039e8:	3308      	adds	r3, #8
 80039ea:	607b      	str	r3, [r7, #4]
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	f003 0307 	and.w	r3, r3, #7
 80039f2:	2b00      	cmp	r3, #0
 80039f4:	d00a      	beq.n	8003a0c <pvPortMalloc+0x6c>
 80039f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80039fa:	f383 8811 	msr	BASEPRI, r3
 80039fe:	f3bf 8f6f 	isb	sy
 8003a02:	f3bf 8f4f 	dsb	sy
 8003a06:	617b      	str	r3, [r7, #20]
 8003a08:	bf00      	nop
 8003a0a:	e7fe      	b.n	8003a0a <pvPortMalloc+0x6a>
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d069      	beq.n	8003ae6 <pvPortMalloc+0x146>
 8003a12:	4b42      	ldr	r3, [pc, #264]	; (8003b1c <pvPortMalloc+0x17c>)
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	687a      	ldr	r2, [r7, #4]
 8003a18:	429a      	cmp	r2, r3
 8003a1a:	d864      	bhi.n	8003ae6 <pvPortMalloc+0x146>
 8003a1c:	4b40      	ldr	r3, [pc, #256]	; (8003b20 <pvPortMalloc+0x180>)
 8003a1e:	623b      	str	r3, [r7, #32]
 8003a20:	4b3f      	ldr	r3, [pc, #252]	; (8003b20 <pvPortMalloc+0x180>)
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	627b      	str	r3, [r7, #36]	; 0x24
 8003a26:	e004      	b.n	8003a32 <pvPortMalloc+0x92>
 8003a28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a2a:	623b      	str	r3, [r7, #32]
 8003a2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	627b      	str	r3, [r7, #36]	; 0x24
 8003a32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a34:	685b      	ldr	r3, [r3, #4]
 8003a36:	687a      	ldr	r2, [r7, #4]
 8003a38:	429a      	cmp	r2, r3
 8003a3a:	d903      	bls.n	8003a44 <pvPortMalloc+0xa4>
 8003a3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	d1f1      	bne.n	8003a28 <pvPortMalloc+0x88>
 8003a44:	4b33      	ldr	r3, [pc, #204]	; (8003b14 <pvPortMalloc+0x174>)
 8003a46:	681b      	ldr	r3, [r3, #0]
 8003a48:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003a4a:	429a      	cmp	r2, r3
 8003a4c:	d04b      	beq.n	8003ae6 <pvPortMalloc+0x146>
 8003a4e:	6a3b      	ldr	r3, [r7, #32]
 8003a50:	681b      	ldr	r3, [r3, #0]
 8003a52:	2208      	movs	r2, #8
 8003a54:	4413      	add	r3, r2
 8003a56:	61fb      	str	r3, [r7, #28]
 8003a58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a5a:	681a      	ldr	r2, [r3, #0]
 8003a5c:	6a3b      	ldr	r3, [r7, #32]
 8003a5e:	601a      	str	r2, [r3, #0]
 8003a60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a62:	685a      	ldr	r2, [r3, #4]
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	1ad2      	subs	r2, r2, r3
 8003a68:	2308      	movs	r3, #8
 8003a6a:	005b      	lsls	r3, r3, #1
 8003a6c:	429a      	cmp	r2, r3
 8003a6e:	d91f      	bls.n	8003ab0 <pvPortMalloc+0x110>
 8003a70:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	4413      	add	r3, r2
 8003a76:	61bb      	str	r3, [r7, #24]
 8003a78:	69bb      	ldr	r3, [r7, #24]
 8003a7a:	f003 0307 	and.w	r3, r3, #7
 8003a7e:	2b00      	cmp	r3, #0
 8003a80:	d00a      	beq.n	8003a98 <pvPortMalloc+0xf8>
 8003a82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003a86:	f383 8811 	msr	BASEPRI, r3
 8003a8a:	f3bf 8f6f 	isb	sy
 8003a8e:	f3bf 8f4f 	dsb	sy
 8003a92:	613b      	str	r3, [r7, #16]
 8003a94:	bf00      	nop
 8003a96:	e7fe      	b.n	8003a96 <pvPortMalloc+0xf6>
 8003a98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a9a:	685a      	ldr	r2, [r3, #4]
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	1ad2      	subs	r2, r2, r3
 8003aa0:	69bb      	ldr	r3, [r7, #24]
 8003aa2:	605a      	str	r2, [r3, #4]
 8003aa4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003aa6:	687a      	ldr	r2, [r7, #4]
 8003aa8:	605a      	str	r2, [r3, #4]
 8003aaa:	69b8      	ldr	r0, [r7, #24]
 8003aac:	f000 f8f8 	bl	8003ca0 <prvInsertBlockIntoFreeList>
 8003ab0:	4b1a      	ldr	r3, [pc, #104]	; (8003b1c <pvPortMalloc+0x17c>)
 8003ab2:	681a      	ldr	r2, [r3, #0]
 8003ab4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ab6:	685b      	ldr	r3, [r3, #4]
 8003ab8:	1ad3      	subs	r3, r2, r3
 8003aba:	4a18      	ldr	r2, [pc, #96]	; (8003b1c <pvPortMalloc+0x17c>)
 8003abc:	6013      	str	r3, [r2, #0]
 8003abe:	4b17      	ldr	r3, [pc, #92]	; (8003b1c <pvPortMalloc+0x17c>)
 8003ac0:	681a      	ldr	r2, [r3, #0]
 8003ac2:	4b18      	ldr	r3, [pc, #96]	; (8003b24 <pvPortMalloc+0x184>)
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	429a      	cmp	r2, r3
 8003ac8:	d203      	bcs.n	8003ad2 <pvPortMalloc+0x132>
 8003aca:	4b14      	ldr	r3, [pc, #80]	; (8003b1c <pvPortMalloc+0x17c>)
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	4a15      	ldr	r2, [pc, #84]	; (8003b24 <pvPortMalloc+0x184>)
 8003ad0:	6013      	str	r3, [r2, #0]
 8003ad2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ad4:	685a      	ldr	r2, [r3, #4]
 8003ad6:	4b10      	ldr	r3, [pc, #64]	; (8003b18 <pvPortMalloc+0x178>)
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	431a      	orrs	r2, r3
 8003adc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ade:	605a      	str	r2, [r3, #4]
 8003ae0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ae2:	2200      	movs	r2, #0
 8003ae4:	601a      	str	r2, [r3, #0]
 8003ae6:	f7ff fab7 	bl	8003058 <xTaskResumeAll>
 8003aea:	69fb      	ldr	r3, [r7, #28]
 8003aec:	f003 0307 	and.w	r3, r3, #7
 8003af0:	2b00      	cmp	r3, #0
 8003af2:	d00a      	beq.n	8003b0a <pvPortMalloc+0x16a>
 8003af4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003af8:	f383 8811 	msr	BASEPRI, r3
 8003afc:	f3bf 8f6f 	isb	sy
 8003b00:	f3bf 8f4f 	dsb	sy
 8003b04:	60fb      	str	r3, [r7, #12]
 8003b06:	bf00      	nop
 8003b08:	e7fe      	b.n	8003b08 <pvPortMalloc+0x168>
 8003b0a:	69fb      	ldr	r3, [r7, #28]
 8003b0c:	4618      	mov	r0, r3
 8003b0e:	3728      	adds	r7, #40	; 0x28
 8003b10:	46bd      	mov	sp, r7
 8003b12:	bd80      	pop	{r7, pc}
 8003b14:	200010f8 	.word	0x200010f8
 8003b18:	20001104 	.word	0x20001104
 8003b1c:	200010fc 	.word	0x200010fc
 8003b20:	200010f0 	.word	0x200010f0
 8003b24:	20001100 	.word	0x20001100

08003b28 <vPortFree>:
 8003b28:	b580      	push	{r7, lr}
 8003b2a:	b086      	sub	sp, #24
 8003b2c:	af00      	add	r7, sp, #0
 8003b2e:	6078      	str	r0, [r7, #4]
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	617b      	str	r3, [r7, #20]
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	d048      	beq.n	8003bcc <vPortFree+0xa4>
 8003b3a:	2308      	movs	r3, #8
 8003b3c:	425b      	negs	r3, r3
 8003b3e:	697a      	ldr	r2, [r7, #20]
 8003b40:	4413      	add	r3, r2
 8003b42:	617b      	str	r3, [r7, #20]
 8003b44:	697b      	ldr	r3, [r7, #20]
 8003b46:	613b      	str	r3, [r7, #16]
 8003b48:	693b      	ldr	r3, [r7, #16]
 8003b4a:	685a      	ldr	r2, [r3, #4]
 8003b4c:	4b21      	ldr	r3, [pc, #132]	; (8003bd4 <vPortFree+0xac>)
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	4013      	ands	r3, r2
 8003b52:	2b00      	cmp	r3, #0
 8003b54:	d10a      	bne.n	8003b6c <vPortFree+0x44>
 8003b56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b5a:	f383 8811 	msr	BASEPRI, r3
 8003b5e:	f3bf 8f6f 	isb	sy
 8003b62:	f3bf 8f4f 	dsb	sy
 8003b66:	60fb      	str	r3, [r7, #12]
 8003b68:	bf00      	nop
 8003b6a:	e7fe      	b.n	8003b6a <vPortFree+0x42>
 8003b6c:	693b      	ldr	r3, [r7, #16]
 8003b6e:	681b      	ldr	r3, [r3, #0]
 8003b70:	2b00      	cmp	r3, #0
 8003b72:	d00a      	beq.n	8003b8a <vPortFree+0x62>
 8003b74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b78:	f383 8811 	msr	BASEPRI, r3
 8003b7c:	f3bf 8f6f 	isb	sy
 8003b80:	f3bf 8f4f 	dsb	sy
 8003b84:	60bb      	str	r3, [r7, #8]
 8003b86:	bf00      	nop
 8003b88:	e7fe      	b.n	8003b88 <vPortFree+0x60>
 8003b8a:	693b      	ldr	r3, [r7, #16]
 8003b8c:	685a      	ldr	r2, [r3, #4]
 8003b8e:	4b11      	ldr	r3, [pc, #68]	; (8003bd4 <vPortFree+0xac>)
 8003b90:	681b      	ldr	r3, [r3, #0]
 8003b92:	4013      	ands	r3, r2
 8003b94:	2b00      	cmp	r3, #0
 8003b96:	d019      	beq.n	8003bcc <vPortFree+0xa4>
 8003b98:	693b      	ldr	r3, [r7, #16]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	d115      	bne.n	8003bcc <vPortFree+0xa4>
 8003ba0:	693b      	ldr	r3, [r7, #16]
 8003ba2:	685a      	ldr	r2, [r3, #4]
 8003ba4:	4b0b      	ldr	r3, [pc, #44]	; (8003bd4 <vPortFree+0xac>)
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	43db      	mvns	r3, r3
 8003baa:	401a      	ands	r2, r3
 8003bac:	693b      	ldr	r3, [r7, #16]
 8003bae:	605a      	str	r2, [r3, #4]
 8003bb0:	f7ff fa44 	bl	800303c <vTaskSuspendAll>
 8003bb4:	693b      	ldr	r3, [r7, #16]
 8003bb6:	685a      	ldr	r2, [r3, #4]
 8003bb8:	4b07      	ldr	r3, [pc, #28]	; (8003bd8 <vPortFree+0xb0>)
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	4413      	add	r3, r2
 8003bbe:	4a06      	ldr	r2, [pc, #24]	; (8003bd8 <vPortFree+0xb0>)
 8003bc0:	6013      	str	r3, [r2, #0]
 8003bc2:	6938      	ldr	r0, [r7, #16]
 8003bc4:	f000 f86c 	bl	8003ca0 <prvInsertBlockIntoFreeList>
 8003bc8:	f7ff fa46 	bl	8003058 <xTaskResumeAll>
 8003bcc:	bf00      	nop
 8003bce:	3718      	adds	r7, #24
 8003bd0:	46bd      	mov	sp, r7
 8003bd2:	bd80      	pop	{r7, pc}
 8003bd4:	20001104 	.word	0x20001104
 8003bd8:	200010fc 	.word	0x200010fc

08003bdc <prvHeapInit>:
 8003bdc:	b480      	push	{r7}
 8003bde:	b085      	sub	sp, #20
 8003be0:	af00      	add	r7, sp, #0
 8003be2:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003be6:	60bb      	str	r3, [r7, #8]
 8003be8:	4b27      	ldr	r3, [pc, #156]	; (8003c88 <prvHeapInit+0xac>)
 8003bea:	60fb      	str	r3, [r7, #12]
 8003bec:	68fb      	ldr	r3, [r7, #12]
 8003bee:	f003 0307 	and.w	r3, r3, #7
 8003bf2:	2b00      	cmp	r3, #0
 8003bf4:	d00c      	beq.n	8003c10 <prvHeapInit+0x34>
 8003bf6:	68fb      	ldr	r3, [r7, #12]
 8003bf8:	3307      	adds	r3, #7
 8003bfa:	60fb      	str	r3, [r7, #12]
 8003bfc:	68fb      	ldr	r3, [r7, #12]
 8003bfe:	f023 0307 	bic.w	r3, r3, #7
 8003c02:	60fb      	str	r3, [r7, #12]
 8003c04:	68ba      	ldr	r2, [r7, #8]
 8003c06:	68fb      	ldr	r3, [r7, #12]
 8003c08:	1ad3      	subs	r3, r2, r3
 8003c0a:	4a1f      	ldr	r2, [pc, #124]	; (8003c88 <prvHeapInit+0xac>)
 8003c0c:	4413      	add	r3, r2
 8003c0e:	60bb      	str	r3, [r7, #8]
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	607b      	str	r3, [r7, #4]
 8003c14:	4a1d      	ldr	r2, [pc, #116]	; (8003c8c <prvHeapInit+0xb0>)
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	6013      	str	r3, [r2, #0]
 8003c1a:	4b1c      	ldr	r3, [pc, #112]	; (8003c8c <prvHeapInit+0xb0>)
 8003c1c:	2200      	movs	r2, #0
 8003c1e:	605a      	str	r2, [r3, #4]
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	68ba      	ldr	r2, [r7, #8]
 8003c24:	4413      	add	r3, r2
 8003c26:	60fb      	str	r3, [r7, #12]
 8003c28:	2208      	movs	r2, #8
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	1a9b      	subs	r3, r3, r2
 8003c2e:	60fb      	str	r3, [r7, #12]
 8003c30:	68fb      	ldr	r3, [r7, #12]
 8003c32:	f023 0307 	bic.w	r3, r3, #7
 8003c36:	60fb      	str	r3, [r7, #12]
 8003c38:	68fb      	ldr	r3, [r7, #12]
 8003c3a:	4a15      	ldr	r2, [pc, #84]	; (8003c90 <prvHeapInit+0xb4>)
 8003c3c:	6013      	str	r3, [r2, #0]
 8003c3e:	4b14      	ldr	r3, [pc, #80]	; (8003c90 <prvHeapInit+0xb4>)
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	2200      	movs	r2, #0
 8003c44:	605a      	str	r2, [r3, #4]
 8003c46:	4b12      	ldr	r3, [pc, #72]	; (8003c90 <prvHeapInit+0xb4>)
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	2200      	movs	r2, #0
 8003c4c:	601a      	str	r2, [r3, #0]
 8003c4e:	687b      	ldr	r3, [r7, #4]
 8003c50:	603b      	str	r3, [r7, #0]
 8003c52:	683b      	ldr	r3, [r7, #0]
 8003c54:	68fa      	ldr	r2, [r7, #12]
 8003c56:	1ad2      	subs	r2, r2, r3
 8003c58:	683b      	ldr	r3, [r7, #0]
 8003c5a:	605a      	str	r2, [r3, #4]
 8003c5c:	4b0c      	ldr	r3, [pc, #48]	; (8003c90 <prvHeapInit+0xb4>)
 8003c5e:	681a      	ldr	r2, [r3, #0]
 8003c60:	683b      	ldr	r3, [r7, #0]
 8003c62:	601a      	str	r2, [r3, #0]
 8003c64:	683b      	ldr	r3, [r7, #0]
 8003c66:	685b      	ldr	r3, [r3, #4]
 8003c68:	4a0a      	ldr	r2, [pc, #40]	; (8003c94 <prvHeapInit+0xb8>)
 8003c6a:	6013      	str	r3, [r2, #0]
 8003c6c:	683b      	ldr	r3, [r7, #0]
 8003c6e:	685b      	ldr	r3, [r3, #4]
 8003c70:	4a09      	ldr	r2, [pc, #36]	; (8003c98 <prvHeapInit+0xbc>)
 8003c72:	6013      	str	r3, [r2, #0]
 8003c74:	4b09      	ldr	r3, [pc, #36]	; (8003c9c <prvHeapInit+0xc0>)
 8003c76:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8003c7a:	601a      	str	r2, [r3, #0]
 8003c7c:	bf00      	nop
 8003c7e:	3714      	adds	r7, #20
 8003c80:	46bd      	mov	sp, r7
 8003c82:	bc80      	pop	{r7}
 8003c84:	4770      	bx	lr
 8003c86:	bf00      	nop
 8003c88:	200004f0 	.word	0x200004f0
 8003c8c:	200010f0 	.word	0x200010f0
 8003c90:	200010f8 	.word	0x200010f8
 8003c94:	20001100 	.word	0x20001100
 8003c98:	200010fc 	.word	0x200010fc
 8003c9c:	20001104 	.word	0x20001104

08003ca0 <prvInsertBlockIntoFreeList>:
 8003ca0:	b480      	push	{r7}
 8003ca2:	b085      	sub	sp, #20
 8003ca4:	af00      	add	r7, sp, #0
 8003ca6:	6078      	str	r0, [r7, #4]
 8003ca8:	4b27      	ldr	r3, [pc, #156]	; (8003d48 <prvInsertBlockIntoFreeList+0xa8>)
 8003caa:	60fb      	str	r3, [r7, #12]
 8003cac:	e002      	b.n	8003cb4 <prvInsertBlockIntoFreeList+0x14>
 8003cae:	68fb      	ldr	r3, [r7, #12]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	60fb      	str	r3, [r7, #12]
 8003cb4:	68fb      	ldr	r3, [r7, #12]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	687a      	ldr	r2, [r7, #4]
 8003cba:	429a      	cmp	r2, r3
 8003cbc:	d8f7      	bhi.n	8003cae <prvInsertBlockIntoFreeList+0xe>
 8003cbe:	68fb      	ldr	r3, [r7, #12]
 8003cc0:	60bb      	str	r3, [r7, #8]
 8003cc2:	68fb      	ldr	r3, [r7, #12]
 8003cc4:	685b      	ldr	r3, [r3, #4]
 8003cc6:	68ba      	ldr	r2, [r7, #8]
 8003cc8:	4413      	add	r3, r2
 8003cca:	687a      	ldr	r2, [r7, #4]
 8003ccc:	429a      	cmp	r2, r3
 8003cce:	d108      	bne.n	8003ce2 <prvInsertBlockIntoFreeList+0x42>
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	685a      	ldr	r2, [r3, #4]
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	685b      	ldr	r3, [r3, #4]
 8003cd8:	441a      	add	r2, r3
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	605a      	str	r2, [r3, #4]
 8003cde:	68fb      	ldr	r3, [r7, #12]
 8003ce0:	607b      	str	r3, [r7, #4]
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	60bb      	str	r3, [r7, #8]
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	685b      	ldr	r3, [r3, #4]
 8003cea:	68ba      	ldr	r2, [r7, #8]
 8003cec:	441a      	add	r2, r3
 8003cee:	68fb      	ldr	r3, [r7, #12]
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	429a      	cmp	r2, r3
 8003cf4:	d118      	bne.n	8003d28 <prvInsertBlockIntoFreeList+0x88>
 8003cf6:	68fb      	ldr	r3, [r7, #12]
 8003cf8:	681a      	ldr	r2, [r3, #0]
 8003cfa:	4b14      	ldr	r3, [pc, #80]	; (8003d4c <prvInsertBlockIntoFreeList+0xac>)
 8003cfc:	681b      	ldr	r3, [r3, #0]
 8003cfe:	429a      	cmp	r2, r3
 8003d00:	d00d      	beq.n	8003d1e <prvInsertBlockIntoFreeList+0x7e>
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	685a      	ldr	r2, [r3, #4]
 8003d06:	68fb      	ldr	r3, [r7, #12]
 8003d08:	681b      	ldr	r3, [r3, #0]
 8003d0a:	685b      	ldr	r3, [r3, #4]
 8003d0c:	441a      	add	r2, r3
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	605a      	str	r2, [r3, #4]
 8003d12:	68fb      	ldr	r3, [r7, #12]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	681a      	ldr	r2, [r3, #0]
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	601a      	str	r2, [r3, #0]
 8003d1c:	e008      	b.n	8003d30 <prvInsertBlockIntoFreeList+0x90>
 8003d1e:	4b0b      	ldr	r3, [pc, #44]	; (8003d4c <prvInsertBlockIntoFreeList+0xac>)
 8003d20:	681a      	ldr	r2, [r3, #0]
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	601a      	str	r2, [r3, #0]
 8003d26:	e003      	b.n	8003d30 <prvInsertBlockIntoFreeList+0x90>
 8003d28:	68fb      	ldr	r3, [r7, #12]
 8003d2a:	681a      	ldr	r2, [r3, #0]
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	601a      	str	r2, [r3, #0]
 8003d30:	68fa      	ldr	r2, [r7, #12]
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	429a      	cmp	r2, r3
 8003d36:	d002      	beq.n	8003d3e <prvInsertBlockIntoFreeList+0x9e>
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	687a      	ldr	r2, [r7, #4]
 8003d3c:	601a      	str	r2, [r3, #0]
 8003d3e:	bf00      	nop
 8003d40:	3714      	adds	r7, #20
 8003d42:	46bd      	mov	sp, r7
 8003d44:	bc80      	pop	{r7}
 8003d46:	4770      	bx	lr
 8003d48:	200010f0 	.word	0x200010f0
 8003d4c:	200010f8 	.word	0x200010f8

08003d50 <__errno>:
 8003d50:	4b01      	ldr	r3, [pc, #4]	; (8003d58 <__errno+0x8>)
 8003d52:	6818      	ldr	r0, [r3, #0]
 8003d54:	4770      	bx	lr
 8003d56:	bf00      	nop
 8003d58:	200000e0 	.word	0x200000e0

08003d5c <__libc_init_array>:
 8003d5c:	b570      	push	{r4, r5, r6, lr}
 8003d5e:	2600      	movs	r6, #0
 8003d60:	4d0c      	ldr	r5, [pc, #48]	; (8003d94 <__libc_init_array+0x38>)
 8003d62:	4c0d      	ldr	r4, [pc, #52]	; (8003d98 <__libc_init_array+0x3c>)
 8003d64:	1b64      	subs	r4, r4, r5
 8003d66:	10a4      	asrs	r4, r4, #2
 8003d68:	42a6      	cmp	r6, r4
 8003d6a:	d109      	bne.n	8003d80 <__libc_init_array+0x24>
 8003d6c:	f001 fa7a 	bl	8005264 <_init>
 8003d70:	2600      	movs	r6, #0
 8003d72:	4d0a      	ldr	r5, [pc, #40]	; (8003d9c <__libc_init_array+0x40>)
 8003d74:	4c0a      	ldr	r4, [pc, #40]	; (8003da0 <__libc_init_array+0x44>)
 8003d76:	1b64      	subs	r4, r4, r5
 8003d78:	10a4      	asrs	r4, r4, #2
 8003d7a:	42a6      	cmp	r6, r4
 8003d7c:	d105      	bne.n	8003d8a <__libc_init_array+0x2e>
 8003d7e:	bd70      	pop	{r4, r5, r6, pc}
 8003d80:	f855 3b04 	ldr.w	r3, [r5], #4
 8003d84:	4798      	blx	r3
 8003d86:	3601      	adds	r6, #1
 8003d88:	e7ee      	b.n	8003d68 <__libc_init_array+0xc>
 8003d8a:	f855 3b04 	ldr.w	r3, [r5], #4
 8003d8e:	4798      	blx	r3
 8003d90:	3601      	adds	r6, #1
 8003d92:	e7f2      	b.n	8003d7a <__libc_init_array+0x1e>
 8003d94:	08005468 	.word	0x08005468
 8003d98:	08005468 	.word	0x08005468
 8003d9c:	08005468 	.word	0x08005468
 8003da0:	0800546c 	.word	0x0800546c

08003da4 <memcpy>:
 8003da4:	440a      	add	r2, r1
 8003da6:	4291      	cmp	r1, r2
 8003da8:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8003dac:	d100      	bne.n	8003db0 <memcpy+0xc>
 8003dae:	4770      	bx	lr
 8003db0:	b510      	push	{r4, lr}
 8003db2:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003db6:	4291      	cmp	r1, r2
 8003db8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003dbc:	d1f9      	bne.n	8003db2 <memcpy+0xe>
 8003dbe:	bd10      	pop	{r4, pc}

08003dc0 <memset>:
 8003dc0:	4603      	mov	r3, r0
 8003dc2:	4402      	add	r2, r0
 8003dc4:	4293      	cmp	r3, r2
 8003dc6:	d100      	bne.n	8003dca <memset+0xa>
 8003dc8:	4770      	bx	lr
 8003dca:	f803 1b01 	strb.w	r1, [r3], #1
 8003dce:	e7f9      	b.n	8003dc4 <memset+0x4>

08003dd0 <srand>:
 8003dd0:	b538      	push	{r3, r4, r5, lr}
 8003dd2:	4b10      	ldr	r3, [pc, #64]	; (8003e14 <srand+0x44>)
 8003dd4:	4604      	mov	r4, r0
 8003dd6:	681d      	ldr	r5, [r3, #0]
 8003dd8:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8003dda:	b9b3      	cbnz	r3, 8003e0a <srand+0x3a>
 8003ddc:	2018      	movs	r0, #24
 8003dde:	f000 f8f9 	bl	8003fd4 <malloc>
 8003de2:	4602      	mov	r2, r0
 8003de4:	63a8      	str	r0, [r5, #56]	; 0x38
 8003de6:	b920      	cbnz	r0, 8003df2 <srand+0x22>
 8003de8:	2142      	movs	r1, #66	; 0x42
 8003dea:	4b0b      	ldr	r3, [pc, #44]	; (8003e18 <srand+0x48>)
 8003dec:	480b      	ldr	r0, [pc, #44]	; (8003e1c <srand+0x4c>)
 8003dee:	f000 f8af 	bl	8003f50 <__assert_func>
 8003df2:	490b      	ldr	r1, [pc, #44]	; (8003e20 <srand+0x50>)
 8003df4:	4b0b      	ldr	r3, [pc, #44]	; (8003e24 <srand+0x54>)
 8003df6:	e9c0 1300 	strd	r1, r3, [r0]
 8003dfa:	4b0b      	ldr	r3, [pc, #44]	; (8003e28 <srand+0x58>)
 8003dfc:	2100      	movs	r1, #0
 8003dfe:	6083      	str	r3, [r0, #8]
 8003e00:	230b      	movs	r3, #11
 8003e02:	8183      	strh	r3, [r0, #12]
 8003e04:	2001      	movs	r0, #1
 8003e06:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003e0a:	2200      	movs	r2, #0
 8003e0c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8003e0e:	611c      	str	r4, [r3, #16]
 8003e10:	615a      	str	r2, [r3, #20]
 8003e12:	bd38      	pop	{r3, r4, r5, pc}
 8003e14:	200000e0 	.word	0x200000e0
 8003e18:	08005320 	.word	0x08005320
 8003e1c:	08005337 	.word	0x08005337
 8003e20:	abcd330e 	.word	0xabcd330e
 8003e24:	e66d1234 	.word	0xe66d1234
 8003e28:	0005deec 	.word	0x0005deec

08003e2c <rand>:
 8003e2c:	4b17      	ldr	r3, [pc, #92]	; (8003e8c <rand+0x60>)
 8003e2e:	b510      	push	{r4, lr}
 8003e30:	681c      	ldr	r4, [r3, #0]
 8003e32:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003e34:	b9b3      	cbnz	r3, 8003e64 <rand+0x38>
 8003e36:	2018      	movs	r0, #24
 8003e38:	f000 f8cc 	bl	8003fd4 <malloc>
 8003e3c:	4602      	mov	r2, r0
 8003e3e:	63a0      	str	r0, [r4, #56]	; 0x38
 8003e40:	b920      	cbnz	r0, 8003e4c <rand+0x20>
 8003e42:	214e      	movs	r1, #78	; 0x4e
 8003e44:	4b12      	ldr	r3, [pc, #72]	; (8003e90 <rand+0x64>)
 8003e46:	4813      	ldr	r0, [pc, #76]	; (8003e94 <rand+0x68>)
 8003e48:	f000 f882 	bl	8003f50 <__assert_func>
 8003e4c:	4912      	ldr	r1, [pc, #72]	; (8003e98 <rand+0x6c>)
 8003e4e:	4b13      	ldr	r3, [pc, #76]	; (8003e9c <rand+0x70>)
 8003e50:	e9c0 1300 	strd	r1, r3, [r0]
 8003e54:	4b12      	ldr	r3, [pc, #72]	; (8003ea0 <rand+0x74>)
 8003e56:	2100      	movs	r1, #0
 8003e58:	6083      	str	r3, [r0, #8]
 8003e5a:	230b      	movs	r3, #11
 8003e5c:	8183      	strh	r3, [r0, #12]
 8003e5e:	2001      	movs	r0, #1
 8003e60:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003e64:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8003e66:	480f      	ldr	r0, [pc, #60]	; (8003ea4 <rand+0x78>)
 8003e68:	690a      	ldr	r2, [r1, #16]
 8003e6a:	694b      	ldr	r3, [r1, #20]
 8003e6c:	4350      	muls	r0, r2
 8003e6e:	4c0e      	ldr	r4, [pc, #56]	; (8003ea8 <rand+0x7c>)
 8003e70:	fb04 0003 	mla	r0, r4, r3, r0
 8003e74:	fba2 3404 	umull	r3, r4, r2, r4
 8003e78:	1c5a      	adds	r2, r3, #1
 8003e7a:	4404      	add	r4, r0
 8003e7c:	f144 0000 	adc.w	r0, r4, #0
 8003e80:	e9c1 2004 	strd	r2, r0, [r1, #16]
 8003e84:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8003e88:	bd10      	pop	{r4, pc}
 8003e8a:	bf00      	nop
 8003e8c:	200000e0 	.word	0x200000e0
 8003e90:	08005320 	.word	0x08005320
 8003e94:	08005337 	.word	0x08005337
 8003e98:	abcd330e 	.word	0xabcd330e
 8003e9c:	e66d1234 	.word	0xe66d1234
 8003ea0:	0005deec 	.word	0x0005deec
 8003ea4:	5851f42d 	.word	0x5851f42d
 8003ea8:	4c957f2d 	.word	0x4c957f2d

08003eac <siprintf>:
 8003eac:	b40e      	push	{r1, r2, r3}
 8003eae:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003eb2:	b500      	push	{lr}
 8003eb4:	b09c      	sub	sp, #112	; 0x70
 8003eb6:	ab1d      	add	r3, sp, #116	; 0x74
 8003eb8:	9002      	str	r0, [sp, #8]
 8003eba:	9006      	str	r0, [sp, #24]
 8003ebc:	9107      	str	r1, [sp, #28]
 8003ebe:	9104      	str	r1, [sp, #16]
 8003ec0:	4808      	ldr	r0, [pc, #32]	; (8003ee4 <siprintf+0x38>)
 8003ec2:	4909      	ldr	r1, [pc, #36]	; (8003ee8 <siprintf+0x3c>)
 8003ec4:	f853 2b04 	ldr.w	r2, [r3], #4
 8003ec8:	9105      	str	r1, [sp, #20]
 8003eca:	6800      	ldr	r0, [r0, #0]
 8003ecc:	a902      	add	r1, sp, #8
 8003ece:	9301      	str	r3, [sp, #4]
 8003ed0:	f000 f98a 	bl	80041e8 <_svfiprintf_r>
 8003ed4:	2200      	movs	r2, #0
 8003ed6:	9b02      	ldr	r3, [sp, #8]
 8003ed8:	701a      	strb	r2, [r3, #0]
 8003eda:	b01c      	add	sp, #112	; 0x70
 8003edc:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ee0:	b003      	add	sp, #12
 8003ee2:	4770      	bx	lr
 8003ee4:	200000e0 	.word	0x200000e0
 8003ee8:	ffff0208 	.word	0xffff0208

08003eec <strcat>:
 8003eec:	4602      	mov	r2, r0
 8003eee:	b510      	push	{r4, lr}
 8003ef0:	7814      	ldrb	r4, [r2, #0]
 8003ef2:	4613      	mov	r3, r2
 8003ef4:	3201      	adds	r2, #1
 8003ef6:	2c00      	cmp	r4, #0
 8003ef8:	d1fa      	bne.n	8003ef0 <strcat+0x4>
 8003efa:	3b01      	subs	r3, #1
 8003efc:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003f00:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003f04:	2a00      	cmp	r2, #0
 8003f06:	d1f9      	bne.n	8003efc <strcat+0x10>
 8003f08:	bd10      	pop	{r4, pc}

08003f0a <strcpy>:
 8003f0a:	4603      	mov	r3, r0
 8003f0c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003f10:	f803 2b01 	strb.w	r2, [r3], #1
 8003f14:	2a00      	cmp	r2, #0
 8003f16:	d1f9      	bne.n	8003f0c <strcpy+0x2>
 8003f18:	4770      	bx	lr
	...

08003f1c <time>:
 8003f1c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003f1e:	4b0b      	ldr	r3, [pc, #44]	; (8003f4c <time+0x30>)
 8003f20:	4604      	mov	r4, r0
 8003f22:	2200      	movs	r2, #0
 8003f24:	4669      	mov	r1, sp
 8003f26:	6818      	ldr	r0, [r3, #0]
 8003f28:	f000 f842 	bl	8003fb0 <_gettimeofday_r>
 8003f2c:	2800      	cmp	r0, #0
 8003f2e:	da05      	bge.n	8003f3c <time+0x20>
 8003f30:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003f34:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003f38:	e9cd 2300 	strd	r2, r3, [sp]
 8003f3c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003f40:	b10c      	cbz	r4, 8003f46 <time+0x2a>
 8003f42:	e9c4 0100 	strd	r0, r1, [r4]
 8003f46:	b004      	add	sp, #16
 8003f48:	bd10      	pop	{r4, pc}
 8003f4a:	bf00      	nop
 8003f4c:	200000e0 	.word	0x200000e0

08003f50 <__assert_func>:
 8003f50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003f52:	4614      	mov	r4, r2
 8003f54:	461a      	mov	r2, r3
 8003f56:	4b09      	ldr	r3, [pc, #36]	; (8003f7c <__assert_func+0x2c>)
 8003f58:	4605      	mov	r5, r0
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	68d8      	ldr	r0, [r3, #12]
 8003f5e:	b14c      	cbz	r4, 8003f74 <__assert_func+0x24>
 8003f60:	4b07      	ldr	r3, [pc, #28]	; (8003f80 <__assert_func+0x30>)
 8003f62:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003f66:	9100      	str	r1, [sp, #0]
 8003f68:	462b      	mov	r3, r5
 8003f6a:	4906      	ldr	r1, [pc, #24]	; (8003f84 <__assert_func+0x34>)
 8003f6c:	f000 f80e 	bl	8003f8c <fiprintf>
 8003f70:	f000 fdf8 	bl	8004b64 <abort>
 8003f74:	4b04      	ldr	r3, [pc, #16]	; (8003f88 <__assert_func+0x38>)
 8003f76:	461c      	mov	r4, r3
 8003f78:	e7f3      	b.n	8003f62 <__assert_func+0x12>
 8003f7a:	bf00      	nop
 8003f7c:	200000e0 	.word	0x200000e0
 8003f80:	08005396 	.word	0x08005396
 8003f84:	080053a3 	.word	0x080053a3
 8003f88:	080053d1 	.word	0x080053d1

08003f8c <fiprintf>:
 8003f8c:	b40e      	push	{r1, r2, r3}
 8003f8e:	b503      	push	{r0, r1, lr}
 8003f90:	4601      	mov	r1, r0
 8003f92:	ab03      	add	r3, sp, #12
 8003f94:	4805      	ldr	r0, [pc, #20]	; (8003fac <fiprintf+0x20>)
 8003f96:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f9a:	6800      	ldr	r0, [r0, #0]
 8003f9c:	9301      	str	r3, [sp, #4]
 8003f9e:	f000 fa4b 	bl	8004438 <_vfiprintf_r>
 8003fa2:	b002      	add	sp, #8
 8003fa4:	f85d eb04 	ldr.w	lr, [sp], #4
 8003fa8:	b003      	add	sp, #12
 8003faa:	4770      	bx	lr
 8003fac:	200000e0 	.word	0x200000e0

08003fb0 <_gettimeofday_r>:
 8003fb0:	b538      	push	{r3, r4, r5, lr}
 8003fb2:	2300      	movs	r3, #0
 8003fb4:	4d06      	ldr	r5, [pc, #24]	; (8003fd0 <_gettimeofday_r+0x20>)
 8003fb6:	4604      	mov	r4, r0
 8003fb8:	4608      	mov	r0, r1
 8003fba:	4611      	mov	r1, r2
 8003fbc:	602b      	str	r3, [r5, #0]
 8003fbe:	f001 f949 	bl	8005254 <_gettimeofday>
 8003fc2:	1c43      	adds	r3, r0, #1
 8003fc4:	d102      	bne.n	8003fcc <_gettimeofday_r+0x1c>
 8003fc6:	682b      	ldr	r3, [r5, #0]
 8003fc8:	b103      	cbz	r3, 8003fcc <_gettimeofday_r+0x1c>
 8003fca:	6023      	str	r3, [r4, #0]
 8003fcc:	bd38      	pop	{r3, r4, r5, pc}
 8003fce:	bf00      	nop
 8003fd0:	20001600 	.word	0x20001600

08003fd4 <malloc>:
 8003fd4:	4b02      	ldr	r3, [pc, #8]	; (8003fe0 <malloc+0xc>)
 8003fd6:	4601      	mov	r1, r0
 8003fd8:	6818      	ldr	r0, [r3, #0]
 8003fda:	f000 b84f 	b.w	800407c <_malloc_r>
 8003fde:	bf00      	nop
 8003fe0:	200000e0 	.word	0x200000e0

08003fe4 <_free_r>:
 8003fe4:	b538      	push	{r3, r4, r5, lr}
 8003fe6:	4605      	mov	r5, r0
 8003fe8:	2900      	cmp	r1, #0
 8003fea:	d043      	beq.n	8004074 <_free_r+0x90>
 8003fec:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003ff0:	1f0c      	subs	r4, r1, #4
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	bfb8      	it	lt
 8003ff6:	18e4      	addlt	r4, r4, r3
 8003ff8:	f001 f802 	bl	8005000 <__malloc_lock>
 8003ffc:	4a1e      	ldr	r2, [pc, #120]	; (8004078 <_free_r+0x94>)
 8003ffe:	6813      	ldr	r3, [r2, #0]
 8004000:	4610      	mov	r0, r2
 8004002:	b933      	cbnz	r3, 8004012 <_free_r+0x2e>
 8004004:	6063      	str	r3, [r4, #4]
 8004006:	6014      	str	r4, [r2, #0]
 8004008:	4628      	mov	r0, r5
 800400a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800400e:	f000 bffd 	b.w	800500c <__malloc_unlock>
 8004012:	42a3      	cmp	r3, r4
 8004014:	d90a      	bls.n	800402c <_free_r+0x48>
 8004016:	6821      	ldr	r1, [r4, #0]
 8004018:	1862      	adds	r2, r4, r1
 800401a:	4293      	cmp	r3, r2
 800401c:	bf01      	itttt	eq
 800401e:	681a      	ldreq	r2, [r3, #0]
 8004020:	685b      	ldreq	r3, [r3, #4]
 8004022:	1852      	addeq	r2, r2, r1
 8004024:	6022      	streq	r2, [r4, #0]
 8004026:	6063      	str	r3, [r4, #4]
 8004028:	6004      	str	r4, [r0, #0]
 800402a:	e7ed      	b.n	8004008 <_free_r+0x24>
 800402c:	461a      	mov	r2, r3
 800402e:	685b      	ldr	r3, [r3, #4]
 8004030:	b10b      	cbz	r3, 8004036 <_free_r+0x52>
 8004032:	42a3      	cmp	r3, r4
 8004034:	d9fa      	bls.n	800402c <_free_r+0x48>
 8004036:	6811      	ldr	r1, [r2, #0]
 8004038:	1850      	adds	r0, r2, r1
 800403a:	42a0      	cmp	r0, r4
 800403c:	d10b      	bne.n	8004056 <_free_r+0x72>
 800403e:	6820      	ldr	r0, [r4, #0]
 8004040:	4401      	add	r1, r0
 8004042:	1850      	adds	r0, r2, r1
 8004044:	4283      	cmp	r3, r0
 8004046:	6011      	str	r1, [r2, #0]
 8004048:	d1de      	bne.n	8004008 <_free_r+0x24>
 800404a:	6818      	ldr	r0, [r3, #0]
 800404c:	685b      	ldr	r3, [r3, #4]
 800404e:	4401      	add	r1, r0
 8004050:	6011      	str	r1, [r2, #0]
 8004052:	6053      	str	r3, [r2, #4]
 8004054:	e7d8      	b.n	8004008 <_free_r+0x24>
 8004056:	d902      	bls.n	800405e <_free_r+0x7a>
 8004058:	230c      	movs	r3, #12
 800405a:	602b      	str	r3, [r5, #0]
 800405c:	e7d4      	b.n	8004008 <_free_r+0x24>
 800405e:	6820      	ldr	r0, [r4, #0]
 8004060:	1821      	adds	r1, r4, r0
 8004062:	428b      	cmp	r3, r1
 8004064:	bf01      	itttt	eq
 8004066:	6819      	ldreq	r1, [r3, #0]
 8004068:	685b      	ldreq	r3, [r3, #4]
 800406a:	1809      	addeq	r1, r1, r0
 800406c:	6021      	streq	r1, [r4, #0]
 800406e:	6063      	str	r3, [r4, #4]
 8004070:	6054      	str	r4, [r2, #4]
 8004072:	e7c9      	b.n	8004008 <_free_r+0x24>
 8004074:	bd38      	pop	{r3, r4, r5, pc}
 8004076:	bf00      	nop
 8004078:	20001108 	.word	0x20001108

0800407c <_malloc_r>:
 800407c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800407e:	1ccd      	adds	r5, r1, #3
 8004080:	f025 0503 	bic.w	r5, r5, #3
 8004084:	3508      	adds	r5, #8
 8004086:	2d0c      	cmp	r5, #12
 8004088:	bf38      	it	cc
 800408a:	250c      	movcc	r5, #12
 800408c:	2d00      	cmp	r5, #0
 800408e:	4606      	mov	r6, r0
 8004090:	db01      	blt.n	8004096 <_malloc_r+0x1a>
 8004092:	42a9      	cmp	r1, r5
 8004094:	d903      	bls.n	800409e <_malloc_r+0x22>
 8004096:	230c      	movs	r3, #12
 8004098:	6033      	str	r3, [r6, #0]
 800409a:	2000      	movs	r0, #0
 800409c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800409e:	f000 ffaf 	bl	8005000 <__malloc_lock>
 80040a2:	4921      	ldr	r1, [pc, #132]	; (8004128 <_malloc_r+0xac>)
 80040a4:	680a      	ldr	r2, [r1, #0]
 80040a6:	4614      	mov	r4, r2
 80040a8:	b99c      	cbnz	r4, 80040d2 <_malloc_r+0x56>
 80040aa:	4f20      	ldr	r7, [pc, #128]	; (800412c <_malloc_r+0xb0>)
 80040ac:	683b      	ldr	r3, [r7, #0]
 80040ae:	b923      	cbnz	r3, 80040ba <_malloc_r+0x3e>
 80040b0:	4621      	mov	r1, r4
 80040b2:	4630      	mov	r0, r6
 80040b4:	f000 fc86 	bl	80049c4 <_sbrk_r>
 80040b8:	6038      	str	r0, [r7, #0]
 80040ba:	4629      	mov	r1, r5
 80040bc:	4630      	mov	r0, r6
 80040be:	f000 fc81 	bl	80049c4 <_sbrk_r>
 80040c2:	1c43      	adds	r3, r0, #1
 80040c4:	d123      	bne.n	800410e <_malloc_r+0x92>
 80040c6:	230c      	movs	r3, #12
 80040c8:	4630      	mov	r0, r6
 80040ca:	6033      	str	r3, [r6, #0]
 80040cc:	f000 ff9e 	bl	800500c <__malloc_unlock>
 80040d0:	e7e3      	b.n	800409a <_malloc_r+0x1e>
 80040d2:	6823      	ldr	r3, [r4, #0]
 80040d4:	1b5b      	subs	r3, r3, r5
 80040d6:	d417      	bmi.n	8004108 <_malloc_r+0x8c>
 80040d8:	2b0b      	cmp	r3, #11
 80040da:	d903      	bls.n	80040e4 <_malloc_r+0x68>
 80040dc:	6023      	str	r3, [r4, #0]
 80040de:	441c      	add	r4, r3
 80040e0:	6025      	str	r5, [r4, #0]
 80040e2:	e004      	b.n	80040ee <_malloc_r+0x72>
 80040e4:	6863      	ldr	r3, [r4, #4]
 80040e6:	42a2      	cmp	r2, r4
 80040e8:	bf0c      	ite	eq
 80040ea:	600b      	streq	r3, [r1, #0]
 80040ec:	6053      	strne	r3, [r2, #4]
 80040ee:	4630      	mov	r0, r6
 80040f0:	f000 ff8c 	bl	800500c <__malloc_unlock>
 80040f4:	f104 000b 	add.w	r0, r4, #11
 80040f8:	1d23      	adds	r3, r4, #4
 80040fa:	f020 0007 	bic.w	r0, r0, #7
 80040fe:	1ac2      	subs	r2, r0, r3
 8004100:	d0cc      	beq.n	800409c <_malloc_r+0x20>
 8004102:	1a1b      	subs	r3, r3, r0
 8004104:	50a3      	str	r3, [r4, r2]
 8004106:	e7c9      	b.n	800409c <_malloc_r+0x20>
 8004108:	4622      	mov	r2, r4
 800410a:	6864      	ldr	r4, [r4, #4]
 800410c:	e7cc      	b.n	80040a8 <_malloc_r+0x2c>
 800410e:	1cc4      	adds	r4, r0, #3
 8004110:	f024 0403 	bic.w	r4, r4, #3
 8004114:	42a0      	cmp	r0, r4
 8004116:	d0e3      	beq.n	80040e0 <_malloc_r+0x64>
 8004118:	1a21      	subs	r1, r4, r0
 800411a:	4630      	mov	r0, r6
 800411c:	f000 fc52 	bl	80049c4 <_sbrk_r>
 8004120:	3001      	adds	r0, #1
 8004122:	d1dd      	bne.n	80040e0 <_malloc_r+0x64>
 8004124:	e7cf      	b.n	80040c6 <_malloc_r+0x4a>
 8004126:	bf00      	nop
 8004128:	20001108 	.word	0x20001108
 800412c:	2000110c 	.word	0x2000110c

08004130 <__ssputs_r>:
 8004130:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004134:	688e      	ldr	r6, [r1, #8]
 8004136:	4682      	mov	sl, r0
 8004138:	429e      	cmp	r6, r3
 800413a:	460c      	mov	r4, r1
 800413c:	4690      	mov	r8, r2
 800413e:	461f      	mov	r7, r3
 8004140:	d838      	bhi.n	80041b4 <__ssputs_r+0x84>
 8004142:	898a      	ldrh	r2, [r1, #12]
 8004144:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004148:	d032      	beq.n	80041b0 <__ssputs_r+0x80>
 800414a:	6825      	ldr	r5, [r4, #0]
 800414c:	6909      	ldr	r1, [r1, #16]
 800414e:	3301      	adds	r3, #1
 8004150:	eba5 0901 	sub.w	r9, r5, r1
 8004154:	6965      	ldr	r5, [r4, #20]
 8004156:	444b      	add	r3, r9
 8004158:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800415c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004160:	106d      	asrs	r5, r5, #1
 8004162:	429d      	cmp	r5, r3
 8004164:	bf38      	it	cc
 8004166:	461d      	movcc	r5, r3
 8004168:	0553      	lsls	r3, r2, #21
 800416a:	d531      	bpl.n	80041d0 <__ssputs_r+0xa0>
 800416c:	4629      	mov	r1, r5
 800416e:	f7ff ff85 	bl	800407c <_malloc_r>
 8004172:	4606      	mov	r6, r0
 8004174:	b950      	cbnz	r0, 800418c <__ssputs_r+0x5c>
 8004176:	230c      	movs	r3, #12
 8004178:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800417c:	f8ca 3000 	str.w	r3, [sl]
 8004180:	89a3      	ldrh	r3, [r4, #12]
 8004182:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004186:	81a3      	strh	r3, [r4, #12]
 8004188:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800418c:	464a      	mov	r2, r9
 800418e:	6921      	ldr	r1, [r4, #16]
 8004190:	f7ff fe08 	bl	8003da4 <memcpy>
 8004194:	89a3      	ldrh	r3, [r4, #12]
 8004196:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800419a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800419e:	81a3      	strh	r3, [r4, #12]
 80041a0:	6126      	str	r6, [r4, #16]
 80041a2:	444e      	add	r6, r9
 80041a4:	6026      	str	r6, [r4, #0]
 80041a6:	463e      	mov	r6, r7
 80041a8:	6165      	str	r5, [r4, #20]
 80041aa:	eba5 0509 	sub.w	r5, r5, r9
 80041ae:	60a5      	str	r5, [r4, #8]
 80041b0:	42be      	cmp	r6, r7
 80041b2:	d900      	bls.n	80041b6 <__ssputs_r+0x86>
 80041b4:	463e      	mov	r6, r7
 80041b6:	4632      	mov	r2, r6
 80041b8:	4641      	mov	r1, r8
 80041ba:	6820      	ldr	r0, [r4, #0]
 80041bc:	f000 ff06 	bl	8004fcc <memmove>
 80041c0:	68a3      	ldr	r3, [r4, #8]
 80041c2:	6822      	ldr	r2, [r4, #0]
 80041c4:	1b9b      	subs	r3, r3, r6
 80041c6:	4432      	add	r2, r6
 80041c8:	2000      	movs	r0, #0
 80041ca:	60a3      	str	r3, [r4, #8]
 80041cc:	6022      	str	r2, [r4, #0]
 80041ce:	e7db      	b.n	8004188 <__ssputs_r+0x58>
 80041d0:	462a      	mov	r2, r5
 80041d2:	f000 ff21 	bl	8005018 <_realloc_r>
 80041d6:	4606      	mov	r6, r0
 80041d8:	2800      	cmp	r0, #0
 80041da:	d1e1      	bne.n	80041a0 <__ssputs_r+0x70>
 80041dc:	4650      	mov	r0, sl
 80041de:	6921      	ldr	r1, [r4, #16]
 80041e0:	f7ff ff00 	bl	8003fe4 <_free_r>
 80041e4:	e7c7      	b.n	8004176 <__ssputs_r+0x46>
	...

080041e8 <_svfiprintf_r>:
 80041e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041ec:	4698      	mov	r8, r3
 80041ee:	898b      	ldrh	r3, [r1, #12]
 80041f0:	4607      	mov	r7, r0
 80041f2:	061b      	lsls	r3, r3, #24
 80041f4:	460d      	mov	r5, r1
 80041f6:	4614      	mov	r4, r2
 80041f8:	b09d      	sub	sp, #116	; 0x74
 80041fa:	d50e      	bpl.n	800421a <_svfiprintf_r+0x32>
 80041fc:	690b      	ldr	r3, [r1, #16]
 80041fe:	b963      	cbnz	r3, 800421a <_svfiprintf_r+0x32>
 8004200:	2140      	movs	r1, #64	; 0x40
 8004202:	f7ff ff3b 	bl	800407c <_malloc_r>
 8004206:	6028      	str	r0, [r5, #0]
 8004208:	6128      	str	r0, [r5, #16]
 800420a:	b920      	cbnz	r0, 8004216 <_svfiprintf_r+0x2e>
 800420c:	230c      	movs	r3, #12
 800420e:	603b      	str	r3, [r7, #0]
 8004210:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004214:	e0d1      	b.n	80043ba <_svfiprintf_r+0x1d2>
 8004216:	2340      	movs	r3, #64	; 0x40
 8004218:	616b      	str	r3, [r5, #20]
 800421a:	2300      	movs	r3, #0
 800421c:	9309      	str	r3, [sp, #36]	; 0x24
 800421e:	2320      	movs	r3, #32
 8004220:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004224:	2330      	movs	r3, #48	; 0x30
 8004226:	f04f 0901 	mov.w	r9, #1
 800422a:	f8cd 800c 	str.w	r8, [sp, #12]
 800422e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80043d4 <_svfiprintf_r+0x1ec>
 8004232:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004236:	4623      	mov	r3, r4
 8004238:	469a      	mov	sl, r3
 800423a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800423e:	b10a      	cbz	r2, 8004244 <_svfiprintf_r+0x5c>
 8004240:	2a25      	cmp	r2, #37	; 0x25
 8004242:	d1f9      	bne.n	8004238 <_svfiprintf_r+0x50>
 8004244:	ebba 0b04 	subs.w	fp, sl, r4
 8004248:	d00b      	beq.n	8004262 <_svfiprintf_r+0x7a>
 800424a:	465b      	mov	r3, fp
 800424c:	4622      	mov	r2, r4
 800424e:	4629      	mov	r1, r5
 8004250:	4638      	mov	r0, r7
 8004252:	f7ff ff6d 	bl	8004130 <__ssputs_r>
 8004256:	3001      	adds	r0, #1
 8004258:	f000 80aa 	beq.w	80043b0 <_svfiprintf_r+0x1c8>
 800425c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800425e:	445a      	add	r2, fp
 8004260:	9209      	str	r2, [sp, #36]	; 0x24
 8004262:	f89a 3000 	ldrb.w	r3, [sl]
 8004266:	2b00      	cmp	r3, #0
 8004268:	f000 80a2 	beq.w	80043b0 <_svfiprintf_r+0x1c8>
 800426c:	2300      	movs	r3, #0
 800426e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004272:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004276:	f10a 0a01 	add.w	sl, sl, #1
 800427a:	9304      	str	r3, [sp, #16]
 800427c:	9307      	str	r3, [sp, #28]
 800427e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004282:	931a      	str	r3, [sp, #104]	; 0x68
 8004284:	4654      	mov	r4, sl
 8004286:	2205      	movs	r2, #5
 8004288:	f814 1b01 	ldrb.w	r1, [r4], #1
 800428c:	4851      	ldr	r0, [pc, #324]	; (80043d4 <_svfiprintf_r+0x1ec>)
 800428e:	f000 fe8f 	bl	8004fb0 <memchr>
 8004292:	9a04      	ldr	r2, [sp, #16]
 8004294:	b9d8      	cbnz	r0, 80042ce <_svfiprintf_r+0xe6>
 8004296:	06d0      	lsls	r0, r2, #27
 8004298:	bf44      	itt	mi
 800429a:	2320      	movmi	r3, #32
 800429c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80042a0:	0711      	lsls	r1, r2, #28
 80042a2:	bf44      	itt	mi
 80042a4:	232b      	movmi	r3, #43	; 0x2b
 80042a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80042aa:	f89a 3000 	ldrb.w	r3, [sl]
 80042ae:	2b2a      	cmp	r3, #42	; 0x2a
 80042b0:	d015      	beq.n	80042de <_svfiprintf_r+0xf6>
 80042b2:	4654      	mov	r4, sl
 80042b4:	2000      	movs	r0, #0
 80042b6:	f04f 0c0a 	mov.w	ip, #10
 80042ba:	9a07      	ldr	r2, [sp, #28]
 80042bc:	4621      	mov	r1, r4
 80042be:	f811 3b01 	ldrb.w	r3, [r1], #1
 80042c2:	3b30      	subs	r3, #48	; 0x30
 80042c4:	2b09      	cmp	r3, #9
 80042c6:	d94e      	bls.n	8004366 <_svfiprintf_r+0x17e>
 80042c8:	b1b0      	cbz	r0, 80042f8 <_svfiprintf_r+0x110>
 80042ca:	9207      	str	r2, [sp, #28]
 80042cc:	e014      	b.n	80042f8 <_svfiprintf_r+0x110>
 80042ce:	eba0 0308 	sub.w	r3, r0, r8
 80042d2:	fa09 f303 	lsl.w	r3, r9, r3
 80042d6:	4313      	orrs	r3, r2
 80042d8:	46a2      	mov	sl, r4
 80042da:	9304      	str	r3, [sp, #16]
 80042dc:	e7d2      	b.n	8004284 <_svfiprintf_r+0x9c>
 80042de:	9b03      	ldr	r3, [sp, #12]
 80042e0:	1d19      	adds	r1, r3, #4
 80042e2:	681b      	ldr	r3, [r3, #0]
 80042e4:	9103      	str	r1, [sp, #12]
 80042e6:	2b00      	cmp	r3, #0
 80042e8:	bfbb      	ittet	lt
 80042ea:	425b      	neglt	r3, r3
 80042ec:	f042 0202 	orrlt.w	r2, r2, #2
 80042f0:	9307      	strge	r3, [sp, #28]
 80042f2:	9307      	strlt	r3, [sp, #28]
 80042f4:	bfb8      	it	lt
 80042f6:	9204      	strlt	r2, [sp, #16]
 80042f8:	7823      	ldrb	r3, [r4, #0]
 80042fa:	2b2e      	cmp	r3, #46	; 0x2e
 80042fc:	d10c      	bne.n	8004318 <_svfiprintf_r+0x130>
 80042fe:	7863      	ldrb	r3, [r4, #1]
 8004300:	2b2a      	cmp	r3, #42	; 0x2a
 8004302:	d135      	bne.n	8004370 <_svfiprintf_r+0x188>
 8004304:	9b03      	ldr	r3, [sp, #12]
 8004306:	3402      	adds	r4, #2
 8004308:	1d1a      	adds	r2, r3, #4
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	9203      	str	r2, [sp, #12]
 800430e:	2b00      	cmp	r3, #0
 8004310:	bfb8      	it	lt
 8004312:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8004316:	9305      	str	r3, [sp, #20]
 8004318:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80043e4 <_svfiprintf_r+0x1fc>
 800431c:	2203      	movs	r2, #3
 800431e:	4650      	mov	r0, sl
 8004320:	7821      	ldrb	r1, [r4, #0]
 8004322:	f000 fe45 	bl	8004fb0 <memchr>
 8004326:	b140      	cbz	r0, 800433a <_svfiprintf_r+0x152>
 8004328:	2340      	movs	r3, #64	; 0x40
 800432a:	eba0 000a 	sub.w	r0, r0, sl
 800432e:	fa03 f000 	lsl.w	r0, r3, r0
 8004332:	9b04      	ldr	r3, [sp, #16]
 8004334:	3401      	adds	r4, #1
 8004336:	4303      	orrs	r3, r0
 8004338:	9304      	str	r3, [sp, #16]
 800433a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800433e:	2206      	movs	r2, #6
 8004340:	4825      	ldr	r0, [pc, #148]	; (80043d8 <_svfiprintf_r+0x1f0>)
 8004342:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004346:	f000 fe33 	bl	8004fb0 <memchr>
 800434a:	2800      	cmp	r0, #0
 800434c:	d038      	beq.n	80043c0 <_svfiprintf_r+0x1d8>
 800434e:	4b23      	ldr	r3, [pc, #140]	; (80043dc <_svfiprintf_r+0x1f4>)
 8004350:	bb1b      	cbnz	r3, 800439a <_svfiprintf_r+0x1b2>
 8004352:	9b03      	ldr	r3, [sp, #12]
 8004354:	3307      	adds	r3, #7
 8004356:	f023 0307 	bic.w	r3, r3, #7
 800435a:	3308      	adds	r3, #8
 800435c:	9303      	str	r3, [sp, #12]
 800435e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004360:	4433      	add	r3, r6
 8004362:	9309      	str	r3, [sp, #36]	; 0x24
 8004364:	e767      	b.n	8004236 <_svfiprintf_r+0x4e>
 8004366:	460c      	mov	r4, r1
 8004368:	2001      	movs	r0, #1
 800436a:	fb0c 3202 	mla	r2, ip, r2, r3
 800436e:	e7a5      	b.n	80042bc <_svfiprintf_r+0xd4>
 8004370:	2300      	movs	r3, #0
 8004372:	f04f 0c0a 	mov.w	ip, #10
 8004376:	4619      	mov	r1, r3
 8004378:	3401      	adds	r4, #1
 800437a:	9305      	str	r3, [sp, #20]
 800437c:	4620      	mov	r0, r4
 800437e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004382:	3a30      	subs	r2, #48	; 0x30
 8004384:	2a09      	cmp	r2, #9
 8004386:	d903      	bls.n	8004390 <_svfiprintf_r+0x1a8>
 8004388:	2b00      	cmp	r3, #0
 800438a:	d0c5      	beq.n	8004318 <_svfiprintf_r+0x130>
 800438c:	9105      	str	r1, [sp, #20]
 800438e:	e7c3      	b.n	8004318 <_svfiprintf_r+0x130>
 8004390:	4604      	mov	r4, r0
 8004392:	2301      	movs	r3, #1
 8004394:	fb0c 2101 	mla	r1, ip, r1, r2
 8004398:	e7f0      	b.n	800437c <_svfiprintf_r+0x194>
 800439a:	ab03      	add	r3, sp, #12
 800439c:	9300      	str	r3, [sp, #0]
 800439e:	462a      	mov	r2, r5
 80043a0:	4638      	mov	r0, r7
 80043a2:	4b0f      	ldr	r3, [pc, #60]	; (80043e0 <_svfiprintf_r+0x1f8>)
 80043a4:	a904      	add	r1, sp, #16
 80043a6:	f3af 8000 	nop.w
 80043aa:	1c42      	adds	r2, r0, #1
 80043ac:	4606      	mov	r6, r0
 80043ae:	d1d6      	bne.n	800435e <_svfiprintf_r+0x176>
 80043b0:	89ab      	ldrh	r3, [r5, #12]
 80043b2:	065b      	lsls	r3, r3, #25
 80043b4:	f53f af2c 	bmi.w	8004210 <_svfiprintf_r+0x28>
 80043b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80043ba:	b01d      	add	sp, #116	; 0x74
 80043bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043c0:	ab03      	add	r3, sp, #12
 80043c2:	9300      	str	r3, [sp, #0]
 80043c4:	462a      	mov	r2, r5
 80043c6:	4638      	mov	r0, r7
 80043c8:	4b05      	ldr	r3, [pc, #20]	; (80043e0 <_svfiprintf_r+0x1f8>)
 80043ca:	a904      	add	r1, sp, #16
 80043cc:	f000 f9d4 	bl	8004778 <_printf_i>
 80043d0:	e7eb      	b.n	80043aa <_svfiprintf_r+0x1c2>
 80043d2:	bf00      	nop
 80043d4:	080053d2 	.word	0x080053d2
 80043d8:	080053dc 	.word	0x080053dc
 80043dc:	00000000 	.word	0x00000000
 80043e0:	08004131 	.word	0x08004131
 80043e4:	080053d8 	.word	0x080053d8

080043e8 <__sfputc_r>:
 80043e8:	6893      	ldr	r3, [r2, #8]
 80043ea:	b410      	push	{r4}
 80043ec:	3b01      	subs	r3, #1
 80043ee:	2b00      	cmp	r3, #0
 80043f0:	6093      	str	r3, [r2, #8]
 80043f2:	da07      	bge.n	8004404 <__sfputc_r+0x1c>
 80043f4:	6994      	ldr	r4, [r2, #24]
 80043f6:	42a3      	cmp	r3, r4
 80043f8:	db01      	blt.n	80043fe <__sfputc_r+0x16>
 80043fa:	290a      	cmp	r1, #10
 80043fc:	d102      	bne.n	8004404 <__sfputc_r+0x1c>
 80043fe:	bc10      	pop	{r4}
 8004400:	f000 baf0 	b.w	80049e4 <__swbuf_r>
 8004404:	6813      	ldr	r3, [r2, #0]
 8004406:	1c58      	adds	r0, r3, #1
 8004408:	6010      	str	r0, [r2, #0]
 800440a:	7019      	strb	r1, [r3, #0]
 800440c:	4608      	mov	r0, r1
 800440e:	bc10      	pop	{r4}
 8004410:	4770      	bx	lr

08004412 <__sfputs_r>:
 8004412:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004414:	4606      	mov	r6, r0
 8004416:	460f      	mov	r7, r1
 8004418:	4614      	mov	r4, r2
 800441a:	18d5      	adds	r5, r2, r3
 800441c:	42ac      	cmp	r4, r5
 800441e:	d101      	bne.n	8004424 <__sfputs_r+0x12>
 8004420:	2000      	movs	r0, #0
 8004422:	e007      	b.n	8004434 <__sfputs_r+0x22>
 8004424:	463a      	mov	r2, r7
 8004426:	4630      	mov	r0, r6
 8004428:	f814 1b01 	ldrb.w	r1, [r4], #1
 800442c:	f7ff ffdc 	bl	80043e8 <__sfputc_r>
 8004430:	1c43      	adds	r3, r0, #1
 8004432:	d1f3      	bne.n	800441c <__sfputs_r+0xa>
 8004434:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08004438 <_vfiprintf_r>:
 8004438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800443c:	460d      	mov	r5, r1
 800443e:	4614      	mov	r4, r2
 8004440:	4698      	mov	r8, r3
 8004442:	4606      	mov	r6, r0
 8004444:	b09d      	sub	sp, #116	; 0x74
 8004446:	b118      	cbz	r0, 8004450 <_vfiprintf_r+0x18>
 8004448:	6983      	ldr	r3, [r0, #24]
 800444a:	b90b      	cbnz	r3, 8004450 <_vfiprintf_r+0x18>
 800444c:	f000 fcac 	bl	8004da8 <__sinit>
 8004450:	4b89      	ldr	r3, [pc, #548]	; (8004678 <_vfiprintf_r+0x240>)
 8004452:	429d      	cmp	r5, r3
 8004454:	d11b      	bne.n	800448e <_vfiprintf_r+0x56>
 8004456:	6875      	ldr	r5, [r6, #4]
 8004458:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800445a:	07d9      	lsls	r1, r3, #31
 800445c:	d405      	bmi.n	800446a <_vfiprintf_r+0x32>
 800445e:	89ab      	ldrh	r3, [r5, #12]
 8004460:	059a      	lsls	r2, r3, #22
 8004462:	d402      	bmi.n	800446a <_vfiprintf_r+0x32>
 8004464:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004466:	f000 fd3d 	bl	8004ee4 <__retarget_lock_acquire_recursive>
 800446a:	89ab      	ldrh	r3, [r5, #12]
 800446c:	071b      	lsls	r3, r3, #28
 800446e:	d501      	bpl.n	8004474 <_vfiprintf_r+0x3c>
 8004470:	692b      	ldr	r3, [r5, #16]
 8004472:	b9eb      	cbnz	r3, 80044b0 <_vfiprintf_r+0x78>
 8004474:	4629      	mov	r1, r5
 8004476:	4630      	mov	r0, r6
 8004478:	f000 fb06 	bl	8004a88 <__swsetup_r>
 800447c:	b1c0      	cbz	r0, 80044b0 <_vfiprintf_r+0x78>
 800447e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004480:	07dc      	lsls	r4, r3, #31
 8004482:	d50e      	bpl.n	80044a2 <_vfiprintf_r+0x6a>
 8004484:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004488:	b01d      	add	sp, #116	; 0x74
 800448a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800448e:	4b7b      	ldr	r3, [pc, #492]	; (800467c <_vfiprintf_r+0x244>)
 8004490:	429d      	cmp	r5, r3
 8004492:	d101      	bne.n	8004498 <_vfiprintf_r+0x60>
 8004494:	68b5      	ldr	r5, [r6, #8]
 8004496:	e7df      	b.n	8004458 <_vfiprintf_r+0x20>
 8004498:	4b79      	ldr	r3, [pc, #484]	; (8004680 <_vfiprintf_r+0x248>)
 800449a:	429d      	cmp	r5, r3
 800449c:	bf08      	it	eq
 800449e:	68f5      	ldreq	r5, [r6, #12]
 80044a0:	e7da      	b.n	8004458 <_vfiprintf_r+0x20>
 80044a2:	89ab      	ldrh	r3, [r5, #12]
 80044a4:	0598      	lsls	r0, r3, #22
 80044a6:	d4ed      	bmi.n	8004484 <_vfiprintf_r+0x4c>
 80044a8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80044aa:	f000 fd1c 	bl	8004ee6 <__retarget_lock_release_recursive>
 80044ae:	e7e9      	b.n	8004484 <_vfiprintf_r+0x4c>
 80044b0:	2300      	movs	r3, #0
 80044b2:	9309      	str	r3, [sp, #36]	; 0x24
 80044b4:	2320      	movs	r3, #32
 80044b6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80044ba:	2330      	movs	r3, #48	; 0x30
 80044bc:	f04f 0901 	mov.w	r9, #1
 80044c0:	f8cd 800c 	str.w	r8, [sp, #12]
 80044c4:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8004684 <_vfiprintf_r+0x24c>
 80044c8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80044cc:	4623      	mov	r3, r4
 80044ce:	469a      	mov	sl, r3
 80044d0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80044d4:	b10a      	cbz	r2, 80044da <_vfiprintf_r+0xa2>
 80044d6:	2a25      	cmp	r2, #37	; 0x25
 80044d8:	d1f9      	bne.n	80044ce <_vfiprintf_r+0x96>
 80044da:	ebba 0b04 	subs.w	fp, sl, r4
 80044de:	d00b      	beq.n	80044f8 <_vfiprintf_r+0xc0>
 80044e0:	465b      	mov	r3, fp
 80044e2:	4622      	mov	r2, r4
 80044e4:	4629      	mov	r1, r5
 80044e6:	4630      	mov	r0, r6
 80044e8:	f7ff ff93 	bl	8004412 <__sfputs_r>
 80044ec:	3001      	adds	r0, #1
 80044ee:	f000 80aa 	beq.w	8004646 <_vfiprintf_r+0x20e>
 80044f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80044f4:	445a      	add	r2, fp
 80044f6:	9209      	str	r2, [sp, #36]	; 0x24
 80044f8:	f89a 3000 	ldrb.w	r3, [sl]
 80044fc:	2b00      	cmp	r3, #0
 80044fe:	f000 80a2 	beq.w	8004646 <_vfiprintf_r+0x20e>
 8004502:	2300      	movs	r3, #0
 8004504:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004508:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800450c:	f10a 0a01 	add.w	sl, sl, #1
 8004510:	9304      	str	r3, [sp, #16]
 8004512:	9307      	str	r3, [sp, #28]
 8004514:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004518:	931a      	str	r3, [sp, #104]	; 0x68
 800451a:	4654      	mov	r4, sl
 800451c:	2205      	movs	r2, #5
 800451e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004522:	4858      	ldr	r0, [pc, #352]	; (8004684 <_vfiprintf_r+0x24c>)
 8004524:	f000 fd44 	bl	8004fb0 <memchr>
 8004528:	9a04      	ldr	r2, [sp, #16]
 800452a:	b9d8      	cbnz	r0, 8004564 <_vfiprintf_r+0x12c>
 800452c:	06d1      	lsls	r1, r2, #27
 800452e:	bf44      	itt	mi
 8004530:	2320      	movmi	r3, #32
 8004532:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004536:	0713      	lsls	r3, r2, #28
 8004538:	bf44      	itt	mi
 800453a:	232b      	movmi	r3, #43	; 0x2b
 800453c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004540:	f89a 3000 	ldrb.w	r3, [sl]
 8004544:	2b2a      	cmp	r3, #42	; 0x2a
 8004546:	d015      	beq.n	8004574 <_vfiprintf_r+0x13c>
 8004548:	4654      	mov	r4, sl
 800454a:	2000      	movs	r0, #0
 800454c:	f04f 0c0a 	mov.w	ip, #10
 8004550:	9a07      	ldr	r2, [sp, #28]
 8004552:	4621      	mov	r1, r4
 8004554:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004558:	3b30      	subs	r3, #48	; 0x30
 800455a:	2b09      	cmp	r3, #9
 800455c:	d94e      	bls.n	80045fc <_vfiprintf_r+0x1c4>
 800455e:	b1b0      	cbz	r0, 800458e <_vfiprintf_r+0x156>
 8004560:	9207      	str	r2, [sp, #28]
 8004562:	e014      	b.n	800458e <_vfiprintf_r+0x156>
 8004564:	eba0 0308 	sub.w	r3, r0, r8
 8004568:	fa09 f303 	lsl.w	r3, r9, r3
 800456c:	4313      	orrs	r3, r2
 800456e:	46a2      	mov	sl, r4
 8004570:	9304      	str	r3, [sp, #16]
 8004572:	e7d2      	b.n	800451a <_vfiprintf_r+0xe2>
 8004574:	9b03      	ldr	r3, [sp, #12]
 8004576:	1d19      	adds	r1, r3, #4
 8004578:	681b      	ldr	r3, [r3, #0]
 800457a:	9103      	str	r1, [sp, #12]
 800457c:	2b00      	cmp	r3, #0
 800457e:	bfbb      	ittet	lt
 8004580:	425b      	neglt	r3, r3
 8004582:	f042 0202 	orrlt.w	r2, r2, #2
 8004586:	9307      	strge	r3, [sp, #28]
 8004588:	9307      	strlt	r3, [sp, #28]
 800458a:	bfb8      	it	lt
 800458c:	9204      	strlt	r2, [sp, #16]
 800458e:	7823      	ldrb	r3, [r4, #0]
 8004590:	2b2e      	cmp	r3, #46	; 0x2e
 8004592:	d10c      	bne.n	80045ae <_vfiprintf_r+0x176>
 8004594:	7863      	ldrb	r3, [r4, #1]
 8004596:	2b2a      	cmp	r3, #42	; 0x2a
 8004598:	d135      	bne.n	8004606 <_vfiprintf_r+0x1ce>
 800459a:	9b03      	ldr	r3, [sp, #12]
 800459c:	3402      	adds	r4, #2
 800459e:	1d1a      	adds	r2, r3, #4
 80045a0:	681b      	ldr	r3, [r3, #0]
 80045a2:	9203      	str	r2, [sp, #12]
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	bfb8      	it	lt
 80045a8:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80045ac:	9305      	str	r3, [sp, #20]
 80045ae:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8004694 <_vfiprintf_r+0x25c>
 80045b2:	2203      	movs	r2, #3
 80045b4:	4650      	mov	r0, sl
 80045b6:	7821      	ldrb	r1, [r4, #0]
 80045b8:	f000 fcfa 	bl	8004fb0 <memchr>
 80045bc:	b140      	cbz	r0, 80045d0 <_vfiprintf_r+0x198>
 80045be:	2340      	movs	r3, #64	; 0x40
 80045c0:	eba0 000a 	sub.w	r0, r0, sl
 80045c4:	fa03 f000 	lsl.w	r0, r3, r0
 80045c8:	9b04      	ldr	r3, [sp, #16]
 80045ca:	3401      	adds	r4, #1
 80045cc:	4303      	orrs	r3, r0
 80045ce:	9304      	str	r3, [sp, #16]
 80045d0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045d4:	2206      	movs	r2, #6
 80045d6:	482c      	ldr	r0, [pc, #176]	; (8004688 <_vfiprintf_r+0x250>)
 80045d8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80045dc:	f000 fce8 	bl	8004fb0 <memchr>
 80045e0:	2800      	cmp	r0, #0
 80045e2:	d03f      	beq.n	8004664 <_vfiprintf_r+0x22c>
 80045e4:	4b29      	ldr	r3, [pc, #164]	; (800468c <_vfiprintf_r+0x254>)
 80045e6:	bb1b      	cbnz	r3, 8004630 <_vfiprintf_r+0x1f8>
 80045e8:	9b03      	ldr	r3, [sp, #12]
 80045ea:	3307      	adds	r3, #7
 80045ec:	f023 0307 	bic.w	r3, r3, #7
 80045f0:	3308      	adds	r3, #8
 80045f2:	9303      	str	r3, [sp, #12]
 80045f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80045f6:	443b      	add	r3, r7
 80045f8:	9309      	str	r3, [sp, #36]	; 0x24
 80045fa:	e767      	b.n	80044cc <_vfiprintf_r+0x94>
 80045fc:	460c      	mov	r4, r1
 80045fe:	2001      	movs	r0, #1
 8004600:	fb0c 3202 	mla	r2, ip, r2, r3
 8004604:	e7a5      	b.n	8004552 <_vfiprintf_r+0x11a>
 8004606:	2300      	movs	r3, #0
 8004608:	f04f 0c0a 	mov.w	ip, #10
 800460c:	4619      	mov	r1, r3
 800460e:	3401      	adds	r4, #1
 8004610:	9305      	str	r3, [sp, #20]
 8004612:	4620      	mov	r0, r4
 8004614:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004618:	3a30      	subs	r2, #48	; 0x30
 800461a:	2a09      	cmp	r2, #9
 800461c:	d903      	bls.n	8004626 <_vfiprintf_r+0x1ee>
 800461e:	2b00      	cmp	r3, #0
 8004620:	d0c5      	beq.n	80045ae <_vfiprintf_r+0x176>
 8004622:	9105      	str	r1, [sp, #20]
 8004624:	e7c3      	b.n	80045ae <_vfiprintf_r+0x176>
 8004626:	4604      	mov	r4, r0
 8004628:	2301      	movs	r3, #1
 800462a:	fb0c 2101 	mla	r1, ip, r1, r2
 800462e:	e7f0      	b.n	8004612 <_vfiprintf_r+0x1da>
 8004630:	ab03      	add	r3, sp, #12
 8004632:	9300      	str	r3, [sp, #0]
 8004634:	462a      	mov	r2, r5
 8004636:	4630      	mov	r0, r6
 8004638:	4b15      	ldr	r3, [pc, #84]	; (8004690 <_vfiprintf_r+0x258>)
 800463a:	a904      	add	r1, sp, #16
 800463c:	f3af 8000 	nop.w
 8004640:	4607      	mov	r7, r0
 8004642:	1c78      	adds	r0, r7, #1
 8004644:	d1d6      	bne.n	80045f4 <_vfiprintf_r+0x1bc>
 8004646:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004648:	07d9      	lsls	r1, r3, #31
 800464a:	d405      	bmi.n	8004658 <_vfiprintf_r+0x220>
 800464c:	89ab      	ldrh	r3, [r5, #12]
 800464e:	059a      	lsls	r2, r3, #22
 8004650:	d402      	bmi.n	8004658 <_vfiprintf_r+0x220>
 8004652:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004654:	f000 fc47 	bl	8004ee6 <__retarget_lock_release_recursive>
 8004658:	89ab      	ldrh	r3, [r5, #12]
 800465a:	065b      	lsls	r3, r3, #25
 800465c:	f53f af12 	bmi.w	8004484 <_vfiprintf_r+0x4c>
 8004660:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004662:	e711      	b.n	8004488 <_vfiprintf_r+0x50>
 8004664:	ab03      	add	r3, sp, #12
 8004666:	9300      	str	r3, [sp, #0]
 8004668:	462a      	mov	r2, r5
 800466a:	4630      	mov	r0, r6
 800466c:	4b08      	ldr	r3, [pc, #32]	; (8004690 <_vfiprintf_r+0x258>)
 800466e:	a904      	add	r1, sp, #16
 8004670:	f000 f882 	bl	8004778 <_printf_i>
 8004674:	e7e4      	b.n	8004640 <_vfiprintf_r+0x208>
 8004676:	bf00      	nop
 8004678:	08005428 	.word	0x08005428
 800467c:	08005448 	.word	0x08005448
 8004680:	08005408 	.word	0x08005408
 8004684:	080053d2 	.word	0x080053d2
 8004688:	080053dc 	.word	0x080053dc
 800468c:	00000000 	.word	0x00000000
 8004690:	08004413 	.word	0x08004413
 8004694:	080053d8 	.word	0x080053d8

08004698 <_printf_common>:
 8004698:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800469c:	4616      	mov	r6, r2
 800469e:	4699      	mov	r9, r3
 80046a0:	688a      	ldr	r2, [r1, #8]
 80046a2:	690b      	ldr	r3, [r1, #16]
 80046a4:	4607      	mov	r7, r0
 80046a6:	4293      	cmp	r3, r2
 80046a8:	bfb8      	it	lt
 80046aa:	4613      	movlt	r3, r2
 80046ac:	6033      	str	r3, [r6, #0]
 80046ae:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80046b2:	460c      	mov	r4, r1
 80046b4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80046b8:	b10a      	cbz	r2, 80046be <_printf_common+0x26>
 80046ba:	3301      	adds	r3, #1
 80046bc:	6033      	str	r3, [r6, #0]
 80046be:	6823      	ldr	r3, [r4, #0]
 80046c0:	0699      	lsls	r1, r3, #26
 80046c2:	bf42      	ittt	mi
 80046c4:	6833      	ldrmi	r3, [r6, #0]
 80046c6:	3302      	addmi	r3, #2
 80046c8:	6033      	strmi	r3, [r6, #0]
 80046ca:	6825      	ldr	r5, [r4, #0]
 80046cc:	f015 0506 	ands.w	r5, r5, #6
 80046d0:	d106      	bne.n	80046e0 <_printf_common+0x48>
 80046d2:	f104 0a19 	add.w	sl, r4, #25
 80046d6:	68e3      	ldr	r3, [r4, #12]
 80046d8:	6832      	ldr	r2, [r6, #0]
 80046da:	1a9b      	subs	r3, r3, r2
 80046dc:	42ab      	cmp	r3, r5
 80046de:	dc28      	bgt.n	8004732 <_printf_common+0x9a>
 80046e0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80046e4:	1e13      	subs	r3, r2, #0
 80046e6:	6822      	ldr	r2, [r4, #0]
 80046e8:	bf18      	it	ne
 80046ea:	2301      	movne	r3, #1
 80046ec:	0692      	lsls	r2, r2, #26
 80046ee:	d42d      	bmi.n	800474c <_printf_common+0xb4>
 80046f0:	4649      	mov	r1, r9
 80046f2:	4638      	mov	r0, r7
 80046f4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80046f8:	47c0      	blx	r8
 80046fa:	3001      	adds	r0, #1
 80046fc:	d020      	beq.n	8004740 <_printf_common+0xa8>
 80046fe:	6823      	ldr	r3, [r4, #0]
 8004700:	68e5      	ldr	r5, [r4, #12]
 8004702:	f003 0306 	and.w	r3, r3, #6
 8004706:	2b04      	cmp	r3, #4
 8004708:	bf18      	it	ne
 800470a:	2500      	movne	r5, #0
 800470c:	6832      	ldr	r2, [r6, #0]
 800470e:	f04f 0600 	mov.w	r6, #0
 8004712:	68a3      	ldr	r3, [r4, #8]
 8004714:	bf08      	it	eq
 8004716:	1aad      	subeq	r5, r5, r2
 8004718:	6922      	ldr	r2, [r4, #16]
 800471a:	bf08      	it	eq
 800471c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004720:	4293      	cmp	r3, r2
 8004722:	bfc4      	itt	gt
 8004724:	1a9b      	subgt	r3, r3, r2
 8004726:	18ed      	addgt	r5, r5, r3
 8004728:	341a      	adds	r4, #26
 800472a:	42b5      	cmp	r5, r6
 800472c:	d11a      	bne.n	8004764 <_printf_common+0xcc>
 800472e:	2000      	movs	r0, #0
 8004730:	e008      	b.n	8004744 <_printf_common+0xac>
 8004732:	2301      	movs	r3, #1
 8004734:	4652      	mov	r2, sl
 8004736:	4649      	mov	r1, r9
 8004738:	4638      	mov	r0, r7
 800473a:	47c0      	blx	r8
 800473c:	3001      	adds	r0, #1
 800473e:	d103      	bne.n	8004748 <_printf_common+0xb0>
 8004740:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004744:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004748:	3501      	adds	r5, #1
 800474a:	e7c4      	b.n	80046d6 <_printf_common+0x3e>
 800474c:	2030      	movs	r0, #48	; 0x30
 800474e:	18e1      	adds	r1, r4, r3
 8004750:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004754:	1c5a      	adds	r2, r3, #1
 8004756:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800475a:	4422      	add	r2, r4
 800475c:	3302      	adds	r3, #2
 800475e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004762:	e7c5      	b.n	80046f0 <_printf_common+0x58>
 8004764:	2301      	movs	r3, #1
 8004766:	4622      	mov	r2, r4
 8004768:	4649      	mov	r1, r9
 800476a:	4638      	mov	r0, r7
 800476c:	47c0      	blx	r8
 800476e:	3001      	adds	r0, #1
 8004770:	d0e6      	beq.n	8004740 <_printf_common+0xa8>
 8004772:	3601      	adds	r6, #1
 8004774:	e7d9      	b.n	800472a <_printf_common+0x92>
	...

08004778 <_printf_i>:
 8004778:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800477c:	460c      	mov	r4, r1
 800477e:	7e27      	ldrb	r7, [r4, #24]
 8004780:	4691      	mov	r9, r2
 8004782:	2f78      	cmp	r7, #120	; 0x78
 8004784:	4680      	mov	r8, r0
 8004786:	469a      	mov	sl, r3
 8004788:	990c      	ldr	r1, [sp, #48]	; 0x30
 800478a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800478e:	d807      	bhi.n	80047a0 <_printf_i+0x28>
 8004790:	2f62      	cmp	r7, #98	; 0x62
 8004792:	d80a      	bhi.n	80047aa <_printf_i+0x32>
 8004794:	2f00      	cmp	r7, #0
 8004796:	f000 80d9 	beq.w	800494c <_printf_i+0x1d4>
 800479a:	2f58      	cmp	r7, #88	; 0x58
 800479c:	f000 80a4 	beq.w	80048e8 <_printf_i+0x170>
 80047a0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80047a4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80047a8:	e03a      	b.n	8004820 <_printf_i+0xa8>
 80047aa:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80047ae:	2b15      	cmp	r3, #21
 80047b0:	d8f6      	bhi.n	80047a0 <_printf_i+0x28>
 80047b2:	a001      	add	r0, pc, #4	; (adr r0, 80047b8 <_printf_i+0x40>)
 80047b4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80047b8:	08004811 	.word	0x08004811
 80047bc:	08004825 	.word	0x08004825
 80047c0:	080047a1 	.word	0x080047a1
 80047c4:	080047a1 	.word	0x080047a1
 80047c8:	080047a1 	.word	0x080047a1
 80047cc:	080047a1 	.word	0x080047a1
 80047d0:	08004825 	.word	0x08004825
 80047d4:	080047a1 	.word	0x080047a1
 80047d8:	080047a1 	.word	0x080047a1
 80047dc:	080047a1 	.word	0x080047a1
 80047e0:	080047a1 	.word	0x080047a1
 80047e4:	08004933 	.word	0x08004933
 80047e8:	08004855 	.word	0x08004855
 80047ec:	08004915 	.word	0x08004915
 80047f0:	080047a1 	.word	0x080047a1
 80047f4:	080047a1 	.word	0x080047a1
 80047f8:	08004955 	.word	0x08004955
 80047fc:	080047a1 	.word	0x080047a1
 8004800:	08004855 	.word	0x08004855
 8004804:	080047a1 	.word	0x080047a1
 8004808:	080047a1 	.word	0x080047a1
 800480c:	0800491d 	.word	0x0800491d
 8004810:	680b      	ldr	r3, [r1, #0]
 8004812:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004816:	1d1a      	adds	r2, r3, #4
 8004818:	681b      	ldr	r3, [r3, #0]
 800481a:	600a      	str	r2, [r1, #0]
 800481c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004820:	2301      	movs	r3, #1
 8004822:	e0a4      	b.n	800496e <_printf_i+0x1f6>
 8004824:	6825      	ldr	r5, [r4, #0]
 8004826:	6808      	ldr	r0, [r1, #0]
 8004828:	062e      	lsls	r6, r5, #24
 800482a:	f100 0304 	add.w	r3, r0, #4
 800482e:	d50a      	bpl.n	8004846 <_printf_i+0xce>
 8004830:	6805      	ldr	r5, [r0, #0]
 8004832:	600b      	str	r3, [r1, #0]
 8004834:	2d00      	cmp	r5, #0
 8004836:	da03      	bge.n	8004840 <_printf_i+0xc8>
 8004838:	232d      	movs	r3, #45	; 0x2d
 800483a:	426d      	negs	r5, r5
 800483c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004840:	230a      	movs	r3, #10
 8004842:	485e      	ldr	r0, [pc, #376]	; (80049bc <_printf_i+0x244>)
 8004844:	e019      	b.n	800487a <_printf_i+0x102>
 8004846:	f015 0f40 	tst.w	r5, #64	; 0x40
 800484a:	6805      	ldr	r5, [r0, #0]
 800484c:	600b      	str	r3, [r1, #0]
 800484e:	bf18      	it	ne
 8004850:	b22d      	sxthne	r5, r5
 8004852:	e7ef      	b.n	8004834 <_printf_i+0xbc>
 8004854:	680b      	ldr	r3, [r1, #0]
 8004856:	6825      	ldr	r5, [r4, #0]
 8004858:	1d18      	adds	r0, r3, #4
 800485a:	6008      	str	r0, [r1, #0]
 800485c:	0628      	lsls	r0, r5, #24
 800485e:	d501      	bpl.n	8004864 <_printf_i+0xec>
 8004860:	681d      	ldr	r5, [r3, #0]
 8004862:	e002      	b.n	800486a <_printf_i+0xf2>
 8004864:	0669      	lsls	r1, r5, #25
 8004866:	d5fb      	bpl.n	8004860 <_printf_i+0xe8>
 8004868:	881d      	ldrh	r5, [r3, #0]
 800486a:	2f6f      	cmp	r7, #111	; 0x6f
 800486c:	bf0c      	ite	eq
 800486e:	2308      	moveq	r3, #8
 8004870:	230a      	movne	r3, #10
 8004872:	4852      	ldr	r0, [pc, #328]	; (80049bc <_printf_i+0x244>)
 8004874:	2100      	movs	r1, #0
 8004876:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800487a:	6866      	ldr	r6, [r4, #4]
 800487c:	2e00      	cmp	r6, #0
 800487e:	bfa8      	it	ge
 8004880:	6821      	ldrge	r1, [r4, #0]
 8004882:	60a6      	str	r6, [r4, #8]
 8004884:	bfa4      	itt	ge
 8004886:	f021 0104 	bicge.w	r1, r1, #4
 800488a:	6021      	strge	r1, [r4, #0]
 800488c:	b90d      	cbnz	r5, 8004892 <_printf_i+0x11a>
 800488e:	2e00      	cmp	r6, #0
 8004890:	d04d      	beq.n	800492e <_printf_i+0x1b6>
 8004892:	4616      	mov	r6, r2
 8004894:	fbb5 f1f3 	udiv	r1, r5, r3
 8004898:	fb03 5711 	mls	r7, r3, r1, r5
 800489c:	5dc7      	ldrb	r7, [r0, r7]
 800489e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80048a2:	462f      	mov	r7, r5
 80048a4:	42bb      	cmp	r3, r7
 80048a6:	460d      	mov	r5, r1
 80048a8:	d9f4      	bls.n	8004894 <_printf_i+0x11c>
 80048aa:	2b08      	cmp	r3, #8
 80048ac:	d10b      	bne.n	80048c6 <_printf_i+0x14e>
 80048ae:	6823      	ldr	r3, [r4, #0]
 80048b0:	07df      	lsls	r7, r3, #31
 80048b2:	d508      	bpl.n	80048c6 <_printf_i+0x14e>
 80048b4:	6923      	ldr	r3, [r4, #16]
 80048b6:	6861      	ldr	r1, [r4, #4]
 80048b8:	4299      	cmp	r1, r3
 80048ba:	bfde      	ittt	le
 80048bc:	2330      	movle	r3, #48	; 0x30
 80048be:	f806 3c01 	strble.w	r3, [r6, #-1]
 80048c2:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 80048c6:	1b92      	subs	r2, r2, r6
 80048c8:	6122      	str	r2, [r4, #16]
 80048ca:	464b      	mov	r3, r9
 80048cc:	4621      	mov	r1, r4
 80048ce:	4640      	mov	r0, r8
 80048d0:	f8cd a000 	str.w	sl, [sp]
 80048d4:	aa03      	add	r2, sp, #12
 80048d6:	f7ff fedf 	bl	8004698 <_printf_common>
 80048da:	3001      	adds	r0, #1
 80048dc:	d14c      	bne.n	8004978 <_printf_i+0x200>
 80048de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80048e2:	b004      	add	sp, #16
 80048e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80048e8:	4834      	ldr	r0, [pc, #208]	; (80049bc <_printf_i+0x244>)
 80048ea:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80048ee:	680e      	ldr	r6, [r1, #0]
 80048f0:	6823      	ldr	r3, [r4, #0]
 80048f2:	f856 5b04 	ldr.w	r5, [r6], #4
 80048f6:	061f      	lsls	r7, r3, #24
 80048f8:	600e      	str	r6, [r1, #0]
 80048fa:	d514      	bpl.n	8004926 <_printf_i+0x1ae>
 80048fc:	07d9      	lsls	r1, r3, #31
 80048fe:	bf44      	itt	mi
 8004900:	f043 0320 	orrmi.w	r3, r3, #32
 8004904:	6023      	strmi	r3, [r4, #0]
 8004906:	b91d      	cbnz	r5, 8004910 <_printf_i+0x198>
 8004908:	6823      	ldr	r3, [r4, #0]
 800490a:	f023 0320 	bic.w	r3, r3, #32
 800490e:	6023      	str	r3, [r4, #0]
 8004910:	2310      	movs	r3, #16
 8004912:	e7af      	b.n	8004874 <_printf_i+0xfc>
 8004914:	6823      	ldr	r3, [r4, #0]
 8004916:	f043 0320 	orr.w	r3, r3, #32
 800491a:	6023      	str	r3, [r4, #0]
 800491c:	2378      	movs	r3, #120	; 0x78
 800491e:	4828      	ldr	r0, [pc, #160]	; (80049c0 <_printf_i+0x248>)
 8004920:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004924:	e7e3      	b.n	80048ee <_printf_i+0x176>
 8004926:	065e      	lsls	r6, r3, #25
 8004928:	bf48      	it	mi
 800492a:	b2ad      	uxthmi	r5, r5
 800492c:	e7e6      	b.n	80048fc <_printf_i+0x184>
 800492e:	4616      	mov	r6, r2
 8004930:	e7bb      	b.n	80048aa <_printf_i+0x132>
 8004932:	680b      	ldr	r3, [r1, #0]
 8004934:	6826      	ldr	r6, [r4, #0]
 8004936:	1d1d      	adds	r5, r3, #4
 8004938:	6960      	ldr	r0, [r4, #20]
 800493a:	600d      	str	r5, [r1, #0]
 800493c:	0635      	lsls	r5, r6, #24
 800493e:	681b      	ldr	r3, [r3, #0]
 8004940:	d501      	bpl.n	8004946 <_printf_i+0x1ce>
 8004942:	6018      	str	r0, [r3, #0]
 8004944:	e002      	b.n	800494c <_printf_i+0x1d4>
 8004946:	0671      	lsls	r1, r6, #25
 8004948:	d5fb      	bpl.n	8004942 <_printf_i+0x1ca>
 800494a:	8018      	strh	r0, [r3, #0]
 800494c:	2300      	movs	r3, #0
 800494e:	4616      	mov	r6, r2
 8004950:	6123      	str	r3, [r4, #16]
 8004952:	e7ba      	b.n	80048ca <_printf_i+0x152>
 8004954:	680b      	ldr	r3, [r1, #0]
 8004956:	1d1a      	adds	r2, r3, #4
 8004958:	600a      	str	r2, [r1, #0]
 800495a:	681e      	ldr	r6, [r3, #0]
 800495c:	2100      	movs	r1, #0
 800495e:	4630      	mov	r0, r6
 8004960:	6862      	ldr	r2, [r4, #4]
 8004962:	f000 fb25 	bl	8004fb0 <memchr>
 8004966:	b108      	cbz	r0, 800496c <_printf_i+0x1f4>
 8004968:	1b80      	subs	r0, r0, r6
 800496a:	6060      	str	r0, [r4, #4]
 800496c:	6863      	ldr	r3, [r4, #4]
 800496e:	6123      	str	r3, [r4, #16]
 8004970:	2300      	movs	r3, #0
 8004972:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004976:	e7a8      	b.n	80048ca <_printf_i+0x152>
 8004978:	4632      	mov	r2, r6
 800497a:	4649      	mov	r1, r9
 800497c:	4640      	mov	r0, r8
 800497e:	6923      	ldr	r3, [r4, #16]
 8004980:	47d0      	blx	sl
 8004982:	3001      	adds	r0, #1
 8004984:	d0ab      	beq.n	80048de <_printf_i+0x166>
 8004986:	6823      	ldr	r3, [r4, #0]
 8004988:	079b      	lsls	r3, r3, #30
 800498a:	d413      	bmi.n	80049b4 <_printf_i+0x23c>
 800498c:	68e0      	ldr	r0, [r4, #12]
 800498e:	9b03      	ldr	r3, [sp, #12]
 8004990:	4298      	cmp	r0, r3
 8004992:	bfb8      	it	lt
 8004994:	4618      	movlt	r0, r3
 8004996:	e7a4      	b.n	80048e2 <_printf_i+0x16a>
 8004998:	2301      	movs	r3, #1
 800499a:	4632      	mov	r2, r6
 800499c:	4649      	mov	r1, r9
 800499e:	4640      	mov	r0, r8
 80049a0:	47d0      	blx	sl
 80049a2:	3001      	adds	r0, #1
 80049a4:	d09b      	beq.n	80048de <_printf_i+0x166>
 80049a6:	3501      	adds	r5, #1
 80049a8:	68e3      	ldr	r3, [r4, #12]
 80049aa:	9903      	ldr	r1, [sp, #12]
 80049ac:	1a5b      	subs	r3, r3, r1
 80049ae:	42ab      	cmp	r3, r5
 80049b0:	dcf2      	bgt.n	8004998 <_printf_i+0x220>
 80049b2:	e7eb      	b.n	800498c <_printf_i+0x214>
 80049b4:	2500      	movs	r5, #0
 80049b6:	f104 0619 	add.w	r6, r4, #25
 80049ba:	e7f5      	b.n	80049a8 <_printf_i+0x230>
 80049bc:	080053e3 	.word	0x080053e3
 80049c0:	080053f4 	.word	0x080053f4

080049c4 <_sbrk_r>:
 80049c4:	b538      	push	{r3, r4, r5, lr}
 80049c6:	2300      	movs	r3, #0
 80049c8:	4d05      	ldr	r5, [pc, #20]	; (80049e0 <_sbrk_r+0x1c>)
 80049ca:	4604      	mov	r4, r0
 80049cc:	4608      	mov	r0, r1
 80049ce:	602b      	str	r3, [r5, #0]
 80049d0:	f7fc fbd4 	bl	800117c <_sbrk>
 80049d4:	1c43      	adds	r3, r0, #1
 80049d6:	d102      	bne.n	80049de <_sbrk_r+0x1a>
 80049d8:	682b      	ldr	r3, [r5, #0]
 80049da:	b103      	cbz	r3, 80049de <_sbrk_r+0x1a>
 80049dc:	6023      	str	r3, [r4, #0]
 80049de:	bd38      	pop	{r3, r4, r5, pc}
 80049e0:	20001600 	.word	0x20001600

080049e4 <__swbuf_r>:
 80049e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049e6:	460e      	mov	r6, r1
 80049e8:	4614      	mov	r4, r2
 80049ea:	4605      	mov	r5, r0
 80049ec:	b118      	cbz	r0, 80049f6 <__swbuf_r+0x12>
 80049ee:	6983      	ldr	r3, [r0, #24]
 80049f0:	b90b      	cbnz	r3, 80049f6 <__swbuf_r+0x12>
 80049f2:	f000 f9d9 	bl	8004da8 <__sinit>
 80049f6:	4b21      	ldr	r3, [pc, #132]	; (8004a7c <__swbuf_r+0x98>)
 80049f8:	429c      	cmp	r4, r3
 80049fa:	d12b      	bne.n	8004a54 <__swbuf_r+0x70>
 80049fc:	686c      	ldr	r4, [r5, #4]
 80049fe:	69a3      	ldr	r3, [r4, #24]
 8004a00:	60a3      	str	r3, [r4, #8]
 8004a02:	89a3      	ldrh	r3, [r4, #12]
 8004a04:	071a      	lsls	r2, r3, #28
 8004a06:	d52f      	bpl.n	8004a68 <__swbuf_r+0x84>
 8004a08:	6923      	ldr	r3, [r4, #16]
 8004a0a:	b36b      	cbz	r3, 8004a68 <__swbuf_r+0x84>
 8004a0c:	6923      	ldr	r3, [r4, #16]
 8004a0e:	6820      	ldr	r0, [r4, #0]
 8004a10:	b2f6      	uxtb	r6, r6
 8004a12:	1ac0      	subs	r0, r0, r3
 8004a14:	6963      	ldr	r3, [r4, #20]
 8004a16:	4637      	mov	r7, r6
 8004a18:	4283      	cmp	r3, r0
 8004a1a:	dc04      	bgt.n	8004a26 <__swbuf_r+0x42>
 8004a1c:	4621      	mov	r1, r4
 8004a1e:	4628      	mov	r0, r5
 8004a20:	f000 f92e 	bl	8004c80 <_fflush_r>
 8004a24:	bb30      	cbnz	r0, 8004a74 <__swbuf_r+0x90>
 8004a26:	68a3      	ldr	r3, [r4, #8]
 8004a28:	3001      	adds	r0, #1
 8004a2a:	3b01      	subs	r3, #1
 8004a2c:	60a3      	str	r3, [r4, #8]
 8004a2e:	6823      	ldr	r3, [r4, #0]
 8004a30:	1c5a      	adds	r2, r3, #1
 8004a32:	6022      	str	r2, [r4, #0]
 8004a34:	701e      	strb	r6, [r3, #0]
 8004a36:	6963      	ldr	r3, [r4, #20]
 8004a38:	4283      	cmp	r3, r0
 8004a3a:	d004      	beq.n	8004a46 <__swbuf_r+0x62>
 8004a3c:	89a3      	ldrh	r3, [r4, #12]
 8004a3e:	07db      	lsls	r3, r3, #31
 8004a40:	d506      	bpl.n	8004a50 <__swbuf_r+0x6c>
 8004a42:	2e0a      	cmp	r6, #10
 8004a44:	d104      	bne.n	8004a50 <__swbuf_r+0x6c>
 8004a46:	4621      	mov	r1, r4
 8004a48:	4628      	mov	r0, r5
 8004a4a:	f000 f919 	bl	8004c80 <_fflush_r>
 8004a4e:	b988      	cbnz	r0, 8004a74 <__swbuf_r+0x90>
 8004a50:	4638      	mov	r0, r7
 8004a52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a54:	4b0a      	ldr	r3, [pc, #40]	; (8004a80 <__swbuf_r+0x9c>)
 8004a56:	429c      	cmp	r4, r3
 8004a58:	d101      	bne.n	8004a5e <__swbuf_r+0x7a>
 8004a5a:	68ac      	ldr	r4, [r5, #8]
 8004a5c:	e7cf      	b.n	80049fe <__swbuf_r+0x1a>
 8004a5e:	4b09      	ldr	r3, [pc, #36]	; (8004a84 <__swbuf_r+0xa0>)
 8004a60:	429c      	cmp	r4, r3
 8004a62:	bf08      	it	eq
 8004a64:	68ec      	ldreq	r4, [r5, #12]
 8004a66:	e7ca      	b.n	80049fe <__swbuf_r+0x1a>
 8004a68:	4621      	mov	r1, r4
 8004a6a:	4628      	mov	r0, r5
 8004a6c:	f000 f80c 	bl	8004a88 <__swsetup_r>
 8004a70:	2800      	cmp	r0, #0
 8004a72:	d0cb      	beq.n	8004a0c <__swbuf_r+0x28>
 8004a74:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8004a78:	e7ea      	b.n	8004a50 <__swbuf_r+0x6c>
 8004a7a:	bf00      	nop
 8004a7c:	08005428 	.word	0x08005428
 8004a80:	08005448 	.word	0x08005448
 8004a84:	08005408 	.word	0x08005408

08004a88 <__swsetup_r>:
 8004a88:	4b32      	ldr	r3, [pc, #200]	; (8004b54 <__swsetup_r+0xcc>)
 8004a8a:	b570      	push	{r4, r5, r6, lr}
 8004a8c:	681d      	ldr	r5, [r3, #0]
 8004a8e:	4606      	mov	r6, r0
 8004a90:	460c      	mov	r4, r1
 8004a92:	b125      	cbz	r5, 8004a9e <__swsetup_r+0x16>
 8004a94:	69ab      	ldr	r3, [r5, #24]
 8004a96:	b913      	cbnz	r3, 8004a9e <__swsetup_r+0x16>
 8004a98:	4628      	mov	r0, r5
 8004a9a:	f000 f985 	bl	8004da8 <__sinit>
 8004a9e:	4b2e      	ldr	r3, [pc, #184]	; (8004b58 <__swsetup_r+0xd0>)
 8004aa0:	429c      	cmp	r4, r3
 8004aa2:	d10f      	bne.n	8004ac4 <__swsetup_r+0x3c>
 8004aa4:	686c      	ldr	r4, [r5, #4]
 8004aa6:	89a3      	ldrh	r3, [r4, #12]
 8004aa8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004aac:	0719      	lsls	r1, r3, #28
 8004aae:	d42c      	bmi.n	8004b0a <__swsetup_r+0x82>
 8004ab0:	06dd      	lsls	r5, r3, #27
 8004ab2:	d411      	bmi.n	8004ad8 <__swsetup_r+0x50>
 8004ab4:	2309      	movs	r3, #9
 8004ab6:	6033      	str	r3, [r6, #0]
 8004ab8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004abc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004ac0:	81a3      	strh	r3, [r4, #12]
 8004ac2:	e03e      	b.n	8004b42 <__swsetup_r+0xba>
 8004ac4:	4b25      	ldr	r3, [pc, #148]	; (8004b5c <__swsetup_r+0xd4>)
 8004ac6:	429c      	cmp	r4, r3
 8004ac8:	d101      	bne.n	8004ace <__swsetup_r+0x46>
 8004aca:	68ac      	ldr	r4, [r5, #8]
 8004acc:	e7eb      	b.n	8004aa6 <__swsetup_r+0x1e>
 8004ace:	4b24      	ldr	r3, [pc, #144]	; (8004b60 <__swsetup_r+0xd8>)
 8004ad0:	429c      	cmp	r4, r3
 8004ad2:	bf08      	it	eq
 8004ad4:	68ec      	ldreq	r4, [r5, #12]
 8004ad6:	e7e6      	b.n	8004aa6 <__swsetup_r+0x1e>
 8004ad8:	0758      	lsls	r0, r3, #29
 8004ada:	d512      	bpl.n	8004b02 <__swsetup_r+0x7a>
 8004adc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004ade:	b141      	cbz	r1, 8004af2 <__swsetup_r+0x6a>
 8004ae0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004ae4:	4299      	cmp	r1, r3
 8004ae6:	d002      	beq.n	8004aee <__swsetup_r+0x66>
 8004ae8:	4630      	mov	r0, r6
 8004aea:	f7ff fa7b 	bl	8003fe4 <_free_r>
 8004aee:	2300      	movs	r3, #0
 8004af0:	6363      	str	r3, [r4, #52]	; 0x34
 8004af2:	89a3      	ldrh	r3, [r4, #12]
 8004af4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004af8:	81a3      	strh	r3, [r4, #12]
 8004afa:	2300      	movs	r3, #0
 8004afc:	6063      	str	r3, [r4, #4]
 8004afe:	6923      	ldr	r3, [r4, #16]
 8004b00:	6023      	str	r3, [r4, #0]
 8004b02:	89a3      	ldrh	r3, [r4, #12]
 8004b04:	f043 0308 	orr.w	r3, r3, #8
 8004b08:	81a3      	strh	r3, [r4, #12]
 8004b0a:	6923      	ldr	r3, [r4, #16]
 8004b0c:	b94b      	cbnz	r3, 8004b22 <__swsetup_r+0x9a>
 8004b0e:	89a3      	ldrh	r3, [r4, #12]
 8004b10:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8004b14:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004b18:	d003      	beq.n	8004b22 <__swsetup_r+0x9a>
 8004b1a:	4621      	mov	r1, r4
 8004b1c:	4630      	mov	r0, r6
 8004b1e:	f000 fa07 	bl	8004f30 <__smakebuf_r>
 8004b22:	89a0      	ldrh	r0, [r4, #12]
 8004b24:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004b28:	f010 0301 	ands.w	r3, r0, #1
 8004b2c:	d00a      	beq.n	8004b44 <__swsetup_r+0xbc>
 8004b2e:	2300      	movs	r3, #0
 8004b30:	60a3      	str	r3, [r4, #8]
 8004b32:	6963      	ldr	r3, [r4, #20]
 8004b34:	425b      	negs	r3, r3
 8004b36:	61a3      	str	r3, [r4, #24]
 8004b38:	6923      	ldr	r3, [r4, #16]
 8004b3a:	b943      	cbnz	r3, 8004b4e <__swsetup_r+0xc6>
 8004b3c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8004b40:	d1ba      	bne.n	8004ab8 <__swsetup_r+0x30>
 8004b42:	bd70      	pop	{r4, r5, r6, pc}
 8004b44:	0781      	lsls	r1, r0, #30
 8004b46:	bf58      	it	pl
 8004b48:	6963      	ldrpl	r3, [r4, #20]
 8004b4a:	60a3      	str	r3, [r4, #8]
 8004b4c:	e7f4      	b.n	8004b38 <__swsetup_r+0xb0>
 8004b4e:	2000      	movs	r0, #0
 8004b50:	e7f7      	b.n	8004b42 <__swsetup_r+0xba>
 8004b52:	bf00      	nop
 8004b54:	200000e0 	.word	0x200000e0
 8004b58:	08005428 	.word	0x08005428
 8004b5c:	08005448 	.word	0x08005448
 8004b60:	08005408 	.word	0x08005408

08004b64 <abort>:
 8004b64:	2006      	movs	r0, #6
 8004b66:	b508      	push	{r3, lr}
 8004b68:	f000 faa4 	bl	80050b4 <raise>
 8004b6c:	2001      	movs	r0, #1
 8004b6e:	f7fc fa92 	bl	8001096 <_exit>
	...

08004b74 <__sflush_r>:
 8004b74:	898a      	ldrh	r2, [r1, #12]
 8004b76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b7a:	4605      	mov	r5, r0
 8004b7c:	0710      	lsls	r0, r2, #28
 8004b7e:	460c      	mov	r4, r1
 8004b80:	d458      	bmi.n	8004c34 <__sflush_r+0xc0>
 8004b82:	684b      	ldr	r3, [r1, #4]
 8004b84:	2b00      	cmp	r3, #0
 8004b86:	dc05      	bgt.n	8004b94 <__sflush_r+0x20>
 8004b88:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8004b8a:	2b00      	cmp	r3, #0
 8004b8c:	dc02      	bgt.n	8004b94 <__sflush_r+0x20>
 8004b8e:	2000      	movs	r0, #0
 8004b90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b94:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004b96:	2e00      	cmp	r6, #0
 8004b98:	d0f9      	beq.n	8004b8e <__sflush_r+0x1a>
 8004b9a:	2300      	movs	r3, #0
 8004b9c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004ba0:	682f      	ldr	r7, [r5, #0]
 8004ba2:	602b      	str	r3, [r5, #0]
 8004ba4:	d032      	beq.n	8004c0c <__sflush_r+0x98>
 8004ba6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004ba8:	89a3      	ldrh	r3, [r4, #12]
 8004baa:	075a      	lsls	r2, r3, #29
 8004bac:	d505      	bpl.n	8004bba <__sflush_r+0x46>
 8004bae:	6863      	ldr	r3, [r4, #4]
 8004bb0:	1ac0      	subs	r0, r0, r3
 8004bb2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004bb4:	b10b      	cbz	r3, 8004bba <__sflush_r+0x46>
 8004bb6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004bb8:	1ac0      	subs	r0, r0, r3
 8004bba:	2300      	movs	r3, #0
 8004bbc:	4602      	mov	r2, r0
 8004bbe:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004bc0:	4628      	mov	r0, r5
 8004bc2:	6a21      	ldr	r1, [r4, #32]
 8004bc4:	47b0      	blx	r6
 8004bc6:	1c43      	adds	r3, r0, #1
 8004bc8:	89a3      	ldrh	r3, [r4, #12]
 8004bca:	d106      	bne.n	8004bda <__sflush_r+0x66>
 8004bcc:	6829      	ldr	r1, [r5, #0]
 8004bce:	291d      	cmp	r1, #29
 8004bd0:	d82c      	bhi.n	8004c2c <__sflush_r+0xb8>
 8004bd2:	4a2a      	ldr	r2, [pc, #168]	; (8004c7c <__sflush_r+0x108>)
 8004bd4:	40ca      	lsrs	r2, r1
 8004bd6:	07d6      	lsls	r6, r2, #31
 8004bd8:	d528      	bpl.n	8004c2c <__sflush_r+0xb8>
 8004bda:	2200      	movs	r2, #0
 8004bdc:	6062      	str	r2, [r4, #4]
 8004bde:	6922      	ldr	r2, [r4, #16]
 8004be0:	04d9      	lsls	r1, r3, #19
 8004be2:	6022      	str	r2, [r4, #0]
 8004be4:	d504      	bpl.n	8004bf0 <__sflush_r+0x7c>
 8004be6:	1c42      	adds	r2, r0, #1
 8004be8:	d101      	bne.n	8004bee <__sflush_r+0x7a>
 8004bea:	682b      	ldr	r3, [r5, #0]
 8004bec:	b903      	cbnz	r3, 8004bf0 <__sflush_r+0x7c>
 8004bee:	6560      	str	r0, [r4, #84]	; 0x54
 8004bf0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004bf2:	602f      	str	r7, [r5, #0]
 8004bf4:	2900      	cmp	r1, #0
 8004bf6:	d0ca      	beq.n	8004b8e <__sflush_r+0x1a>
 8004bf8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004bfc:	4299      	cmp	r1, r3
 8004bfe:	d002      	beq.n	8004c06 <__sflush_r+0x92>
 8004c00:	4628      	mov	r0, r5
 8004c02:	f7ff f9ef 	bl	8003fe4 <_free_r>
 8004c06:	2000      	movs	r0, #0
 8004c08:	6360      	str	r0, [r4, #52]	; 0x34
 8004c0a:	e7c1      	b.n	8004b90 <__sflush_r+0x1c>
 8004c0c:	6a21      	ldr	r1, [r4, #32]
 8004c0e:	2301      	movs	r3, #1
 8004c10:	4628      	mov	r0, r5
 8004c12:	47b0      	blx	r6
 8004c14:	1c41      	adds	r1, r0, #1
 8004c16:	d1c7      	bne.n	8004ba8 <__sflush_r+0x34>
 8004c18:	682b      	ldr	r3, [r5, #0]
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	d0c4      	beq.n	8004ba8 <__sflush_r+0x34>
 8004c1e:	2b1d      	cmp	r3, #29
 8004c20:	d001      	beq.n	8004c26 <__sflush_r+0xb2>
 8004c22:	2b16      	cmp	r3, #22
 8004c24:	d101      	bne.n	8004c2a <__sflush_r+0xb6>
 8004c26:	602f      	str	r7, [r5, #0]
 8004c28:	e7b1      	b.n	8004b8e <__sflush_r+0x1a>
 8004c2a:	89a3      	ldrh	r3, [r4, #12]
 8004c2c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004c30:	81a3      	strh	r3, [r4, #12]
 8004c32:	e7ad      	b.n	8004b90 <__sflush_r+0x1c>
 8004c34:	690f      	ldr	r7, [r1, #16]
 8004c36:	2f00      	cmp	r7, #0
 8004c38:	d0a9      	beq.n	8004b8e <__sflush_r+0x1a>
 8004c3a:	0793      	lsls	r3, r2, #30
 8004c3c:	bf18      	it	ne
 8004c3e:	2300      	movne	r3, #0
 8004c40:	680e      	ldr	r6, [r1, #0]
 8004c42:	bf08      	it	eq
 8004c44:	694b      	ldreq	r3, [r1, #20]
 8004c46:	eba6 0807 	sub.w	r8, r6, r7
 8004c4a:	600f      	str	r7, [r1, #0]
 8004c4c:	608b      	str	r3, [r1, #8]
 8004c4e:	f1b8 0f00 	cmp.w	r8, #0
 8004c52:	dd9c      	ble.n	8004b8e <__sflush_r+0x1a>
 8004c54:	4643      	mov	r3, r8
 8004c56:	463a      	mov	r2, r7
 8004c58:	4628      	mov	r0, r5
 8004c5a:	6a21      	ldr	r1, [r4, #32]
 8004c5c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004c5e:	47b0      	blx	r6
 8004c60:	2800      	cmp	r0, #0
 8004c62:	dc06      	bgt.n	8004c72 <__sflush_r+0xfe>
 8004c64:	89a3      	ldrh	r3, [r4, #12]
 8004c66:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004c6a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004c6e:	81a3      	strh	r3, [r4, #12]
 8004c70:	e78e      	b.n	8004b90 <__sflush_r+0x1c>
 8004c72:	4407      	add	r7, r0
 8004c74:	eba8 0800 	sub.w	r8, r8, r0
 8004c78:	e7e9      	b.n	8004c4e <__sflush_r+0xda>
 8004c7a:	bf00      	nop
 8004c7c:	20400001 	.word	0x20400001

08004c80 <_fflush_r>:
 8004c80:	b538      	push	{r3, r4, r5, lr}
 8004c82:	690b      	ldr	r3, [r1, #16]
 8004c84:	4605      	mov	r5, r0
 8004c86:	460c      	mov	r4, r1
 8004c88:	b913      	cbnz	r3, 8004c90 <_fflush_r+0x10>
 8004c8a:	2500      	movs	r5, #0
 8004c8c:	4628      	mov	r0, r5
 8004c8e:	bd38      	pop	{r3, r4, r5, pc}
 8004c90:	b118      	cbz	r0, 8004c9a <_fflush_r+0x1a>
 8004c92:	6983      	ldr	r3, [r0, #24]
 8004c94:	b90b      	cbnz	r3, 8004c9a <_fflush_r+0x1a>
 8004c96:	f000 f887 	bl	8004da8 <__sinit>
 8004c9a:	4b14      	ldr	r3, [pc, #80]	; (8004cec <_fflush_r+0x6c>)
 8004c9c:	429c      	cmp	r4, r3
 8004c9e:	d11b      	bne.n	8004cd8 <_fflush_r+0x58>
 8004ca0:	686c      	ldr	r4, [r5, #4]
 8004ca2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004ca6:	2b00      	cmp	r3, #0
 8004ca8:	d0ef      	beq.n	8004c8a <_fflush_r+0xa>
 8004caa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004cac:	07d0      	lsls	r0, r2, #31
 8004cae:	d404      	bmi.n	8004cba <_fflush_r+0x3a>
 8004cb0:	0599      	lsls	r1, r3, #22
 8004cb2:	d402      	bmi.n	8004cba <_fflush_r+0x3a>
 8004cb4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004cb6:	f000 f915 	bl	8004ee4 <__retarget_lock_acquire_recursive>
 8004cba:	4628      	mov	r0, r5
 8004cbc:	4621      	mov	r1, r4
 8004cbe:	f7ff ff59 	bl	8004b74 <__sflush_r>
 8004cc2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004cc4:	4605      	mov	r5, r0
 8004cc6:	07da      	lsls	r2, r3, #31
 8004cc8:	d4e0      	bmi.n	8004c8c <_fflush_r+0xc>
 8004cca:	89a3      	ldrh	r3, [r4, #12]
 8004ccc:	059b      	lsls	r3, r3, #22
 8004cce:	d4dd      	bmi.n	8004c8c <_fflush_r+0xc>
 8004cd0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004cd2:	f000 f908 	bl	8004ee6 <__retarget_lock_release_recursive>
 8004cd6:	e7d9      	b.n	8004c8c <_fflush_r+0xc>
 8004cd8:	4b05      	ldr	r3, [pc, #20]	; (8004cf0 <_fflush_r+0x70>)
 8004cda:	429c      	cmp	r4, r3
 8004cdc:	d101      	bne.n	8004ce2 <_fflush_r+0x62>
 8004cde:	68ac      	ldr	r4, [r5, #8]
 8004ce0:	e7df      	b.n	8004ca2 <_fflush_r+0x22>
 8004ce2:	4b04      	ldr	r3, [pc, #16]	; (8004cf4 <_fflush_r+0x74>)
 8004ce4:	429c      	cmp	r4, r3
 8004ce6:	bf08      	it	eq
 8004ce8:	68ec      	ldreq	r4, [r5, #12]
 8004cea:	e7da      	b.n	8004ca2 <_fflush_r+0x22>
 8004cec:	08005428 	.word	0x08005428
 8004cf0:	08005448 	.word	0x08005448
 8004cf4:	08005408 	.word	0x08005408

08004cf8 <std>:
 8004cf8:	2300      	movs	r3, #0
 8004cfa:	b510      	push	{r4, lr}
 8004cfc:	4604      	mov	r4, r0
 8004cfe:	e9c0 3300 	strd	r3, r3, [r0]
 8004d02:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004d06:	6083      	str	r3, [r0, #8]
 8004d08:	8181      	strh	r1, [r0, #12]
 8004d0a:	6643      	str	r3, [r0, #100]	; 0x64
 8004d0c:	81c2      	strh	r2, [r0, #14]
 8004d0e:	6183      	str	r3, [r0, #24]
 8004d10:	4619      	mov	r1, r3
 8004d12:	2208      	movs	r2, #8
 8004d14:	305c      	adds	r0, #92	; 0x5c
 8004d16:	f7ff f853 	bl	8003dc0 <memset>
 8004d1a:	4b05      	ldr	r3, [pc, #20]	; (8004d30 <std+0x38>)
 8004d1c:	6224      	str	r4, [r4, #32]
 8004d1e:	6263      	str	r3, [r4, #36]	; 0x24
 8004d20:	4b04      	ldr	r3, [pc, #16]	; (8004d34 <std+0x3c>)
 8004d22:	62a3      	str	r3, [r4, #40]	; 0x28
 8004d24:	4b04      	ldr	r3, [pc, #16]	; (8004d38 <std+0x40>)
 8004d26:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004d28:	4b04      	ldr	r3, [pc, #16]	; (8004d3c <std+0x44>)
 8004d2a:	6323      	str	r3, [r4, #48]	; 0x30
 8004d2c:	bd10      	pop	{r4, pc}
 8004d2e:	bf00      	nop
 8004d30:	080050ed 	.word	0x080050ed
 8004d34:	0800510f 	.word	0x0800510f
 8004d38:	08005147 	.word	0x08005147
 8004d3c:	0800516b 	.word	0x0800516b

08004d40 <_cleanup_r>:
 8004d40:	4901      	ldr	r1, [pc, #4]	; (8004d48 <_cleanup_r+0x8>)
 8004d42:	f000 b8af 	b.w	8004ea4 <_fwalk_reent>
 8004d46:	bf00      	nop
 8004d48:	08004c81 	.word	0x08004c81

08004d4c <__sfmoreglue>:
 8004d4c:	b570      	push	{r4, r5, r6, lr}
 8004d4e:	2568      	movs	r5, #104	; 0x68
 8004d50:	1e4a      	subs	r2, r1, #1
 8004d52:	4355      	muls	r5, r2
 8004d54:	460e      	mov	r6, r1
 8004d56:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004d5a:	f7ff f98f 	bl	800407c <_malloc_r>
 8004d5e:	4604      	mov	r4, r0
 8004d60:	b140      	cbz	r0, 8004d74 <__sfmoreglue+0x28>
 8004d62:	2100      	movs	r1, #0
 8004d64:	e9c0 1600 	strd	r1, r6, [r0]
 8004d68:	300c      	adds	r0, #12
 8004d6a:	60a0      	str	r0, [r4, #8]
 8004d6c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8004d70:	f7ff f826 	bl	8003dc0 <memset>
 8004d74:	4620      	mov	r0, r4
 8004d76:	bd70      	pop	{r4, r5, r6, pc}

08004d78 <__sfp_lock_acquire>:
 8004d78:	4801      	ldr	r0, [pc, #4]	; (8004d80 <__sfp_lock_acquire+0x8>)
 8004d7a:	f000 b8b3 	b.w	8004ee4 <__retarget_lock_acquire_recursive>
 8004d7e:	bf00      	nop
 8004d80:	2000160c 	.word	0x2000160c

08004d84 <__sfp_lock_release>:
 8004d84:	4801      	ldr	r0, [pc, #4]	; (8004d8c <__sfp_lock_release+0x8>)
 8004d86:	f000 b8ae 	b.w	8004ee6 <__retarget_lock_release_recursive>
 8004d8a:	bf00      	nop
 8004d8c:	2000160c 	.word	0x2000160c

08004d90 <__sinit_lock_acquire>:
 8004d90:	4801      	ldr	r0, [pc, #4]	; (8004d98 <__sinit_lock_acquire+0x8>)
 8004d92:	f000 b8a7 	b.w	8004ee4 <__retarget_lock_acquire_recursive>
 8004d96:	bf00      	nop
 8004d98:	20001607 	.word	0x20001607

08004d9c <__sinit_lock_release>:
 8004d9c:	4801      	ldr	r0, [pc, #4]	; (8004da4 <__sinit_lock_release+0x8>)
 8004d9e:	f000 b8a2 	b.w	8004ee6 <__retarget_lock_release_recursive>
 8004da2:	bf00      	nop
 8004da4:	20001607 	.word	0x20001607

08004da8 <__sinit>:
 8004da8:	b510      	push	{r4, lr}
 8004daa:	4604      	mov	r4, r0
 8004dac:	f7ff fff0 	bl	8004d90 <__sinit_lock_acquire>
 8004db0:	69a3      	ldr	r3, [r4, #24]
 8004db2:	b11b      	cbz	r3, 8004dbc <__sinit+0x14>
 8004db4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004db8:	f7ff bff0 	b.w	8004d9c <__sinit_lock_release>
 8004dbc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8004dc0:	6523      	str	r3, [r4, #80]	; 0x50
 8004dc2:	4b13      	ldr	r3, [pc, #76]	; (8004e10 <__sinit+0x68>)
 8004dc4:	4a13      	ldr	r2, [pc, #76]	; (8004e14 <__sinit+0x6c>)
 8004dc6:	681b      	ldr	r3, [r3, #0]
 8004dc8:	62a2      	str	r2, [r4, #40]	; 0x28
 8004dca:	42a3      	cmp	r3, r4
 8004dcc:	bf08      	it	eq
 8004dce:	2301      	moveq	r3, #1
 8004dd0:	4620      	mov	r0, r4
 8004dd2:	bf08      	it	eq
 8004dd4:	61a3      	streq	r3, [r4, #24]
 8004dd6:	f000 f81f 	bl	8004e18 <__sfp>
 8004dda:	6060      	str	r0, [r4, #4]
 8004ddc:	4620      	mov	r0, r4
 8004dde:	f000 f81b 	bl	8004e18 <__sfp>
 8004de2:	60a0      	str	r0, [r4, #8]
 8004de4:	4620      	mov	r0, r4
 8004de6:	f000 f817 	bl	8004e18 <__sfp>
 8004dea:	2200      	movs	r2, #0
 8004dec:	2104      	movs	r1, #4
 8004dee:	60e0      	str	r0, [r4, #12]
 8004df0:	6860      	ldr	r0, [r4, #4]
 8004df2:	f7ff ff81 	bl	8004cf8 <std>
 8004df6:	2201      	movs	r2, #1
 8004df8:	2109      	movs	r1, #9
 8004dfa:	68a0      	ldr	r0, [r4, #8]
 8004dfc:	f7ff ff7c 	bl	8004cf8 <std>
 8004e00:	2202      	movs	r2, #2
 8004e02:	2112      	movs	r1, #18
 8004e04:	68e0      	ldr	r0, [r4, #12]
 8004e06:	f7ff ff77 	bl	8004cf8 <std>
 8004e0a:	2301      	movs	r3, #1
 8004e0c:	61a3      	str	r3, [r4, #24]
 8004e0e:	e7d1      	b.n	8004db4 <__sinit+0xc>
 8004e10:	0800531c 	.word	0x0800531c
 8004e14:	08004d41 	.word	0x08004d41

08004e18 <__sfp>:
 8004e18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e1a:	4607      	mov	r7, r0
 8004e1c:	f7ff ffac 	bl	8004d78 <__sfp_lock_acquire>
 8004e20:	4b1e      	ldr	r3, [pc, #120]	; (8004e9c <__sfp+0x84>)
 8004e22:	681e      	ldr	r6, [r3, #0]
 8004e24:	69b3      	ldr	r3, [r6, #24]
 8004e26:	b913      	cbnz	r3, 8004e2e <__sfp+0x16>
 8004e28:	4630      	mov	r0, r6
 8004e2a:	f7ff ffbd 	bl	8004da8 <__sinit>
 8004e2e:	3648      	adds	r6, #72	; 0x48
 8004e30:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8004e34:	3b01      	subs	r3, #1
 8004e36:	d503      	bpl.n	8004e40 <__sfp+0x28>
 8004e38:	6833      	ldr	r3, [r6, #0]
 8004e3a:	b30b      	cbz	r3, 8004e80 <__sfp+0x68>
 8004e3c:	6836      	ldr	r6, [r6, #0]
 8004e3e:	e7f7      	b.n	8004e30 <__sfp+0x18>
 8004e40:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004e44:	b9d5      	cbnz	r5, 8004e7c <__sfp+0x64>
 8004e46:	4b16      	ldr	r3, [pc, #88]	; (8004ea0 <__sfp+0x88>)
 8004e48:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8004e4c:	60e3      	str	r3, [r4, #12]
 8004e4e:	6665      	str	r5, [r4, #100]	; 0x64
 8004e50:	f000 f847 	bl	8004ee2 <__retarget_lock_init_recursive>
 8004e54:	f7ff ff96 	bl	8004d84 <__sfp_lock_release>
 8004e58:	2208      	movs	r2, #8
 8004e5a:	4629      	mov	r1, r5
 8004e5c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8004e60:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8004e64:	6025      	str	r5, [r4, #0]
 8004e66:	61a5      	str	r5, [r4, #24]
 8004e68:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004e6c:	f7fe ffa8 	bl	8003dc0 <memset>
 8004e70:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8004e74:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004e78:	4620      	mov	r0, r4
 8004e7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004e7c:	3468      	adds	r4, #104	; 0x68
 8004e7e:	e7d9      	b.n	8004e34 <__sfp+0x1c>
 8004e80:	2104      	movs	r1, #4
 8004e82:	4638      	mov	r0, r7
 8004e84:	f7ff ff62 	bl	8004d4c <__sfmoreglue>
 8004e88:	4604      	mov	r4, r0
 8004e8a:	6030      	str	r0, [r6, #0]
 8004e8c:	2800      	cmp	r0, #0
 8004e8e:	d1d5      	bne.n	8004e3c <__sfp+0x24>
 8004e90:	f7ff ff78 	bl	8004d84 <__sfp_lock_release>
 8004e94:	230c      	movs	r3, #12
 8004e96:	603b      	str	r3, [r7, #0]
 8004e98:	e7ee      	b.n	8004e78 <__sfp+0x60>
 8004e9a:	bf00      	nop
 8004e9c:	0800531c 	.word	0x0800531c
 8004ea0:	ffff0001 	.word	0xffff0001

08004ea4 <_fwalk_reent>:
 8004ea4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004ea8:	4606      	mov	r6, r0
 8004eaa:	4688      	mov	r8, r1
 8004eac:	2700      	movs	r7, #0
 8004eae:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004eb2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004eb6:	f1b9 0901 	subs.w	r9, r9, #1
 8004eba:	d505      	bpl.n	8004ec8 <_fwalk_reent+0x24>
 8004ebc:	6824      	ldr	r4, [r4, #0]
 8004ebe:	2c00      	cmp	r4, #0
 8004ec0:	d1f7      	bne.n	8004eb2 <_fwalk_reent+0xe>
 8004ec2:	4638      	mov	r0, r7
 8004ec4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004ec8:	89ab      	ldrh	r3, [r5, #12]
 8004eca:	2b01      	cmp	r3, #1
 8004ecc:	d907      	bls.n	8004ede <_fwalk_reent+0x3a>
 8004ece:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004ed2:	3301      	adds	r3, #1
 8004ed4:	d003      	beq.n	8004ede <_fwalk_reent+0x3a>
 8004ed6:	4629      	mov	r1, r5
 8004ed8:	4630      	mov	r0, r6
 8004eda:	47c0      	blx	r8
 8004edc:	4307      	orrs	r7, r0
 8004ede:	3568      	adds	r5, #104	; 0x68
 8004ee0:	e7e9      	b.n	8004eb6 <_fwalk_reent+0x12>

08004ee2 <__retarget_lock_init_recursive>:
 8004ee2:	4770      	bx	lr

08004ee4 <__retarget_lock_acquire_recursive>:
 8004ee4:	4770      	bx	lr

08004ee6 <__retarget_lock_release_recursive>:
 8004ee6:	4770      	bx	lr

08004ee8 <__swhatbuf_r>:
 8004ee8:	b570      	push	{r4, r5, r6, lr}
 8004eea:	460e      	mov	r6, r1
 8004eec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004ef0:	4614      	mov	r4, r2
 8004ef2:	2900      	cmp	r1, #0
 8004ef4:	461d      	mov	r5, r3
 8004ef6:	b096      	sub	sp, #88	; 0x58
 8004ef8:	da07      	bge.n	8004f0a <__swhatbuf_r+0x22>
 8004efa:	2300      	movs	r3, #0
 8004efc:	602b      	str	r3, [r5, #0]
 8004efe:	89b3      	ldrh	r3, [r6, #12]
 8004f00:	061a      	lsls	r2, r3, #24
 8004f02:	d410      	bmi.n	8004f26 <__swhatbuf_r+0x3e>
 8004f04:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004f08:	e00e      	b.n	8004f28 <__swhatbuf_r+0x40>
 8004f0a:	466a      	mov	r2, sp
 8004f0c:	f000 f954 	bl	80051b8 <_fstat_r>
 8004f10:	2800      	cmp	r0, #0
 8004f12:	dbf2      	blt.n	8004efa <__swhatbuf_r+0x12>
 8004f14:	9a01      	ldr	r2, [sp, #4]
 8004f16:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004f1a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8004f1e:	425a      	negs	r2, r3
 8004f20:	415a      	adcs	r2, r3
 8004f22:	602a      	str	r2, [r5, #0]
 8004f24:	e7ee      	b.n	8004f04 <__swhatbuf_r+0x1c>
 8004f26:	2340      	movs	r3, #64	; 0x40
 8004f28:	2000      	movs	r0, #0
 8004f2a:	6023      	str	r3, [r4, #0]
 8004f2c:	b016      	add	sp, #88	; 0x58
 8004f2e:	bd70      	pop	{r4, r5, r6, pc}

08004f30 <__smakebuf_r>:
 8004f30:	898b      	ldrh	r3, [r1, #12]
 8004f32:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004f34:	079d      	lsls	r5, r3, #30
 8004f36:	4606      	mov	r6, r0
 8004f38:	460c      	mov	r4, r1
 8004f3a:	d507      	bpl.n	8004f4c <__smakebuf_r+0x1c>
 8004f3c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004f40:	6023      	str	r3, [r4, #0]
 8004f42:	6123      	str	r3, [r4, #16]
 8004f44:	2301      	movs	r3, #1
 8004f46:	6163      	str	r3, [r4, #20]
 8004f48:	b002      	add	sp, #8
 8004f4a:	bd70      	pop	{r4, r5, r6, pc}
 8004f4c:	466a      	mov	r2, sp
 8004f4e:	ab01      	add	r3, sp, #4
 8004f50:	f7ff ffca 	bl	8004ee8 <__swhatbuf_r>
 8004f54:	9900      	ldr	r1, [sp, #0]
 8004f56:	4605      	mov	r5, r0
 8004f58:	4630      	mov	r0, r6
 8004f5a:	f7ff f88f 	bl	800407c <_malloc_r>
 8004f5e:	b948      	cbnz	r0, 8004f74 <__smakebuf_r+0x44>
 8004f60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004f64:	059a      	lsls	r2, r3, #22
 8004f66:	d4ef      	bmi.n	8004f48 <__smakebuf_r+0x18>
 8004f68:	f023 0303 	bic.w	r3, r3, #3
 8004f6c:	f043 0302 	orr.w	r3, r3, #2
 8004f70:	81a3      	strh	r3, [r4, #12]
 8004f72:	e7e3      	b.n	8004f3c <__smakebuf_r+0xc>
 8004f74:	4b0d      	ldr	r3, [pc, #52]	; (8004fac <__smakebuf_r+0x7c>)
 8004f76:	62b3      	str	r3, [r6, #40]	; 0x28
 8004f78:	89a3      	ldrh	r3, [r4, #12]
 8004f7a:	6020      	str	r0, [r4, #0]
 8004f7c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004f80:	81a3      	strh	r3, [r4, #12]
 8004f82:	9b00      	ldr	r3, [sp, #0]
 8004f84:	6120      	str	r0, [r4, #16]
 8004f86:	6163      	str	r3, [r4, #20]
 8004f88:	9b01      	ldr	r3, [sp, #4]
 8004f8a:	b15b      	cbz	r3, 8004fa4 <__smakebuf_r+0x74>
 8004f8c:	4630      	mov	r0, r6
 8004f8e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004f92:	f000 f923 	bl	80051dc <_isatty_r>
 8004f96:	b128      	cbz	r0, 8004fa4 <__smakebuf_r+0x74>
 8004f98:	89a3      	ldrh	r3, [r4, #12]
 8004f9a:	f023 0303 	bic.w	r3, r3, #3
 8004f9e:	f043 0301 	orr.w	r3, r3, #1
 8004fa2:	81a3      	strh	r3, [r4, #12]
 8004fa4:	89a0      	ldrh	r0, [r4, #12]
 8004fa6:	4305      	orrs	r5, r0
 8004fa8:	81a5      	strh	r5, [r4, #12]
 8004faa:	e7cd      	b.n	8004f48 <__smakebuf_r+0x18>
 8004fac:	08004d41 	.word	0x08004d41

08004fb0 <memchr>:
 8004fb0:	4603      	mov	r3, r0
 8004fb2:	b510      	push	{r4, lr}
 8004fb4:	b2c9      	uxtb	r1, r1
 8004fb6:	4402      	add	r2, r0
 8004fb8:	4293      	cmp	r3, r2
 8004fba:	4618      	mov	r0, r3
 8004fbc:	d101      	bne.n	8004fc2 <memchr+0x12>
 8004fbe:	2000      	movs	r0, #0
 8004fc0:	e003      	b.n	8004fca <memchr+0x1a>
 8004fc2:	7804      	ldrb	r4, [r0, #0]
 8004fc4:	3301      	adds	r3, #1
 8004fc6:	428c      	cmp	r4, r1
 8004fc8:	d1f6      	bne.n	8004fb8 <memchr+0x8>
 8004fca:	bd10      	pop	{r4, pc}

08004fcc <memmove>:
 8004fcc:	4288      	cmp	r0, r1
 8004fce:	b510      	push	{r4, lr}
 8004fd0:	eb01 0402 	add.w	r4, r1, r2
 8004fd4:	d902      	bls.n	8004fdc <memmove+0x10>
 8004fd6:	4284      	cmp	r4, r0
 8004fd8:	4623      	mov	r3, r4
 8004fda:	d807      	bhi.n	8004fec <memmove+0x20>
 8004fdc:	1e43      	subs	r3, r0, #1
 8004fde:	42a1      	cmp	r1, r4
 8004fe0:	d008      	beq.n	8004ff4 <memmove+0x28>
 8004fe2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004fe6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004fea:	e7f8      	b.n	8004fde <memmove+0x12>
 8004fec:	4601      	mov	r1, r0
 8004fee:	4402      	add	r2, r0
 8004ff0:	428a      	cmp	r2, r1
 8004ff2:	d100      	bne.n	8004ff6 <memmove+0x2a>
 8004ff4:	bd10      	pop	{r4, pc}
 8004ff6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004ffa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004ffe:	e7f7      	b.n	8004ff0 <memmove+0x24>

08005000 <__malloc_lock>:
 8005000:	4801      	ldr	r0, [pc, #4]	; (8005008 <__malloc_lock+0x8>)
 8005002:	f7ff bf6f 	b.w	8004ee4 <__retarget_lock_acquire_recursive>
 8005006:	bf00      	nop
 8005008:	20001608 	.word	0x20001608

0800500c <__malloc_unlock>:
 800500c:	4801      	ldr	r0, [pc, #4]	; (8005014 <__malloc_unlock+0x8>)
 800500e:	f7ff bf6a 	b.w	8004ee6 <__retarget_lock_release_recursive>
 8005012:	bf00      	nop
 8005014:	20001608 	.word	0x20001608

08005018 <_realloc_r>:
 8005018:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800501a:	4607      	mov	r7, r0
 800501c:	4614      	mov	r4, r2
 800501e:	460e      	mov	r6, r1
 8005020:	b921      	cbnz	r1, 800502c <_realloc_r+0x14>
 8005022:	4611      	mov	r1, r2
 8005024:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005028:	f7ff b828 	b.w	800407c <_malloc_r>
 800502c:	b922      	cbnz	r2, 8005038 <_realloc_r+0x20>
 800502e:	f7fe ffd9 	bl	8003fe4 <_free_r>
 8005032:	4625      	mov	r5, r4
 8005034:	4628      	mov	r0, r5
 8005036:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005038:	f000 f8f2 	bl	8005220 <_malloc_usable_size_r>
 800503c:	42a0      	cmp	r0, r4
 800503e:	d20f      	bcs.n	8005060 <_realloc_r+0x48>
 8005040:	4621      	mov	r1, r4
 8005042:	4638      	mov	r0, r7
 8005044:	f7ff f81a 	bl	800407c <_malloc_r>
 8005048:	4605      	mov	r5, r0
 800504a:	2800      	cmp	r0, #0
 800504c:	d0f2      	beq.n	8005034 <_realloc_r+0x1c>
 800504e:	4631      	mov	r1, r6
 8005050:	4622      	mov	r2, r4
 8005052:	f7fe fea7 	bl	8003da4 <memcpy>
 8005056:	4631      	mov	r1, r6
 8005058:	4638      	mov	r0, r7
 800505a:	f7fe ffc3 	bl	8003fe4 <_free_r>
 800505e:	e7e9      	b.n	8005034 <_realloc_r+0x1c>
 8005060:	4635      	mov	r5, r6
 8005062:	e7e7      	b.n	8005034 <_realloc_r+0x1c>

08005064 <_raise_r>:
 8005064:	291f      	cmp	r1, #31
 8005066:	b538      	push	{r3, r4, r5, lr}
 8005068:	4604      	mov	r4, r0
 800506a:	460d      	mov	r5, r1
 800506c:	d904      	bls.n	8005078 <_raise_r+0x14>
 800506e:	2316      	movs	r3, #22
 8005070:	6003      	str	r3, [r0, #0]
 8005072:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005076:	bd38      	pop	{r3, r4, r5, pc}
 8005078:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800507a:	b112      	cbz	r2, 8005082 <_raise_r+0x1e>
 800507c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005080:	b94b      	cbnz	r3, 8005096 <_raise_r+0x32>
 8005082:	4620      	mov	r0, r4
 8005084:	f000 f830 	bl	80050e8 <_getpid_r>
 8005088:	462a      	mov	r2, r5
 800508a:	4601      	mov	r1, r0
 800508c:	4620      	mov	r0, r4
 800508e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005092:	f000 b817 	b.w	80050c4 <_kill_r>
 8005096:	2b01      	cmp	r3, #1
 8005098:	d00a      	beq.n	80050b0 <_raise_r+0x4c>
 800509a:	1c59      	adds	r1, r3, #1
 800509c:	d103      	bne.n	80050a6 <_raise_r+0x42>
 800509e:	2316      	movs	r3, #22
 80050a0:	6003      	str	r3, [r0, #0]
 80050a2:	2001      	movs	r0, #1
 80050a4:	e7e7      	b.n	8005076 <_raise_r+0x12>
 80050a6:	2400      	movs	r4, #0
 80050a8:	4628      	mov	r0, r5
 80050aa:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80050ae:	4798      	blx	r3
 80050b0:	2000      	movs	r0, #0
 80050b2:	e7e0      	b.n	8005076 <_raise_r+0x12>

080050b4 <raise>:
 80050b4:	4b02      	ldr	r3, [pc, #8]	; (80050c0 <raise+0xc>)
 80050b6:	4601      	mov	r1, r0
 80050b8:	6818      	ldr	r0, [r3, #0]
 80050ba:	f7ff bfd3 	b.w	8005064 <_raise_r>
 80050be:	bf00      	nop
 80050c0:	200000e0 	.word	0x200000e0

080050c4 <_kill_r>:
 80050c4:	b538      	push	{r3, r4, r5, lr}
 80050c6:	2300      	movs	r3, #0
 80050c8:	4d06      	ldr	r5, [pc, #24]	; (80050e4 <_kill_r+0x20>)
 80050ca:	4604      	mov	r4, r0
 80050cc:	4608      	mov	r0, r1
 80050ce:	4611      	mov	r1, r2
 80050d0:	602b      	str	r3, [r5, #0]
 80050d2:	f7fb ffd0 	bl	8001076 <_kill>
 80050d6:	1c43      	adds	r3, r0, #1
 80050d8:	d102      	bne.n	80050e0 <_kill_r+0x1c>
 80050da:	682b      	ldr	r3, [r5, #0]
 80050dc:	b103      	cbz	r3, 80050e0 <_kill_r+0x1c>
 80050de:	6023      	str	r3, [r4, #0]
 80050e0:	bd38      	pop	{r3, r4, r5, pc}
 80050e2:	bf00      	nop
 80050e4:	20001600 	.word	0x20001600

080050e8 <_getpid_r>:
 80050e8:	f7fb bfbe 	b.w	8001068 <_getpid>

080050ec <__sread>:
 80050ec:	b510      	push	{r4, lr}
 80050ee:	460c      	mov	r4, r1
 80050f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80050f4:	f000 f89c 	bl	8005230 <_read_r>
 80050f8:	2800      	cmp	r0, #0
 80050fa:	bfab      	itete	ge
 80050fc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80050fe:	89a3      	ldrhlt	r3, [r4, #12]
 8005100:	181b      	addge	r3, r3, r0
 8005102:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005106:	bfac      	ite	ge
 8005108:	6563      	strge	r3, [r4, #84]	; 0x54
 800510a:	81a3      	strhlt	r3, [r4, #12]
 800510c:	bd10      	pop	{r4, pc}

0800510e <__swrite>:
 800510e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005112:	461f      	mov	r7, r3
 8005114:	898b      	ldrh	r3, [r1, #12]
 8005116:	4605      	mov	r5, r0
 8005118:	05db      	lsls	r3, r3, #23
 800511a:	460c      	mov	r4, r1
 800511c:	4616      	mov	r6, r2
 800511e:	d505      	bpl.n	800512c <__swrite+0x1e>
 8005120:	2302      	movs	r3, #2
 8005122:	2200      	movs	r2, #0
 8005124:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005128:	f000 f868 	bl	80051fc <_lseek_r>
 800512c:	89a3      	ldrh	r3, [r4, #12]
 800512e:	4632      	mov	r2, r6
 8005130:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005134:	81a3      	strh	r3, [r4, #12]
 8005136:	4628      	mov	r0, r5
 8005138:	463b      	mov	r3, r7
 800513a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800513e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005142:	f000 b817 	b.w	8005174 <_write_r>

08005146 <__sseek>:
 8005146:	b510      	push	{r4, lr}
 8005148:	460c      	mov	r4, r1
 800514a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800514e:	f000 f855 	bl	80051fc <_lseek_r>
 8005152:	1c43      	adds	r3, r0, #1
 8005154:	89a3      	ldrh	r3, [r4, #12]
 8005156:	bf15      	itete	ne
 8005158:	6560      	strne	r0, [r4, #84]	; 0x54
 800515a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800515e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005162:	81a3      	strheq	r3, [r4, #12]
 8005164:	bf18      	it	ne
 8005166:	81a3      	strhne	r3, [r4, #12]
 8005168:	bd10      	pop	{r4, pc}

0800516a <__sclose>:
 800516a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800516e:	f000 b813 	b.w	8005198 <_close_r>
	...

08005174 <_write_r>:
 8005174:	b538      	push	{r3, r4, r5, lr}
 8005176:	4604      	mov	r4, r0
 8005178:	4608      	mov	r0, r1
 800517a:	4611      	mov	r1, r2
 800517c:	2200      	movs	r2, #0
 800517e:	4d05      	ldr	r5, [pc, #20]	; (8005194 <_write_r+0x20>)
 8005180:	602a      	str	r2, [r5, #0]
 8005182:	461a      	mov	r2, r3
 8005184:	f7fb ffae 	bl	80010e4 <_write>
 8005188:	1c43      	adds	r3, r0, #1
 800518a:	d102      	bne.n	8005192 <_write_r+0x1e>
 800518c:	682b      	ldr	r3, [r5, #0]
 800518e:	b103      	cbz	r3, 8005192 <_write_r+0x1e>
 8005190:	6023      	str	r3, [r4, #0]
 8005192:	bd38      	pop	{r3, r4, r5, pc}
 8005194:	20001600 	.word	0x20001600

08005198 <_close_r>:
 8005198:	b538      	push	{r3, r4, r5, lr}
 800519a:	2300      	movs	r3, #0
 800519c:	4d05      	ldr	r5, [pc, #20]	; (80051b4 <_close_r+0x1c>)
 800519e:	4604      	mov	r4, r0
 80051a0:	4608      	mov	r0, r1
 80051a2:	602b      	str	r3, [r5, #0]
 80051a4:	f7fb ffba 	bl	800111c <_close>
 80051a8:	1c43      	adds	r3, r0, #1
 80051aa:	d102      	bne.n	80051b2 <_close_r+0x1a>
 80051ac:	682b      	ldr	r3, [r5, #0]
 80051ae:	b103      	cbz	r3, 80051b2 <_close_r+0x1a>
 80051b0:	6023      	str	r3, [r4, #0]
 80051b2:	bd38      	pop	{r3, r4, r5, pc}
 80051b4:	20001600 	.word	0x20001600

080051b8 <_fstat_r>:
 80051b8:	b538      	push	{r3, r4, r5, lr}
 80051ba:	2300      	movs	r3, #0
 80051bc:	4d06      	ldr	r5, [pc, #24]	; (80051d8 <_fstat_r+0x20>)
 80051be:	4604      	mov	r4, r0
 80051c0:	4608      	mov	r0, r1
 80051c2:	4611      	mov	r1, r2
 80051c4:	602b      	str	r3, [r5, #0]
 80051c6:	f7fb ffb4 	bl	8001132 <_fstat>
 80051ca:	1c43      	adds	r3, r0, #1
 80051cc:	d102      	bne.n	80051d4 <_fstat_r+0x1c>
 80051ce:	682b      	ldr	r3, [r5, #0]
 80051d0:	b103      	cbz	r3, 80051d4 <_fstat_r+0x1c>
 80051d2:	6023      	str	r3, [r4, #0]
 80051d4:	bd38      	pop	{r3, r4, r5, pc}
 80051d6:	bf00      	nop
 80051d8:	20001600 	.word	0x20001600

080051dc <_isatty_r>:
 80051dc:	b538      	push	{r3, r4, r5, lr}
 80051de:	2300      	movs	r3, #0
 80051e0:	4d05      	ldr	r5, [pc, #20]	; (80051f8 <_isatty_r+0x1c>)
 80051e2:	4604      	mov	r4, r0
 80051e4:	4608      	mov	r0, r1
 80051e6:	602b      	str	r3, [r5, #0]
 80051e8:	f7fb ffb2 	bl	8001150 <_isatty>
 80051ec:	1c43      	adds	r3, r0, #1
 80051ee:	d102      	bne.n	80051f6 <_isatty_r+0x1a>
 80051f0:	682b      	ldr	r3, [r5, #0]
 80051f2:	b103      	cbz	r3, 80051f6 <_isatty_r+0x1a>
 80051f4:	6023      	str	r3, [r4, #0]
 80051f6:	bd38      	pop	{r3, r4, r5, pc}
 80051f8:	20001600 	.word	0x20001600

080051fc <_lseek_r>:
 80051fc:	b538      	push	{r3, r4, r5, lr}
 80051fe:	4604      	mov	r4, r0
 8005200:	4608      	mov	r0, r1
 8005202:	4611      	mov	r1, r2
 8005204:	2200      	movs	r2, #0
 8005206:	4d05      	ldr	r5, [pc, #20]	; (800521c <_lseek_r+0x20>)
 8005208:	602a      	str	r2, [r5, #0]
 800520a:	461a      	mov	r2, r3
 800520c:	f7fb ffaa 	bl	8001164 <_lseek>
 8005210:	1c43      	adds	r3, r0, #1
 8005212:	d102      	bne.n	800521a <_lseek_r+0x1e>
 8005214:	682b      	ldr	r3, [r5, #0]
 8005216:	b103      	cbz	r3, 800521a <_lseek_r+0x1e>
 8005218:	6023      	str	r3, [r4, #0]
 800521a:	bd38      	pop	{r3, r4, r5, pc}
 800521c:	20001600 	.word	0x20001600

08005220 <_malloc_usable_size_r>:
 8005220:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005224:	1f18      	subs	r0, r3, #4
 8005226:	2b00      	cmp	r3, #0
 8005228:	bfbc      	itt	lt
 800522a:	580b      	ldrlt	r3, [r1, r0]
 800522c:	18c0      	addlt	r0, r0, r3
 800522e:	4770      	bx	lr

08005230 <_read_r>:
 8005230:	b538      	push	{r3, r4, r5, lr}
 8005232:	4604      	mov	r4, r0
 8005234:	4608      	mov	r0, r1
 8005236:	4611      	mov	r1, r2
 8005238:	2200      	movs	r2, #0
 800523a:	4d05      	ldr	r5, [pc, #20]	; (8005250 <_read_r+0x20>)
 800523c:	602a      	str	r2, [r5, #0]
 800523e:	461a      	mov	r2, r3
 8005240:	f7fb ff33 	bl	80010aa <_read>
 8005244:	1c43      	adds	r3, r0, #1
 8005246:	d102      	bne.n	800524e <_read_r+0x1e>
 8005248:	682b      	ldr	r3, [r5, #0]
 800524a:	b103      	cbz	r3, 800524e <_read_r+0x1e>
 800524c:	6023      	str	r3, [r4, #0]
 800524e:	bd38      	pop	{r3, r4, r5, pc}
 8005250:	20001600 	.word	0x20001600

08005254 <_gettimeofday>:
 8005254:	2258      	movs	r2, #88	; 0x58
 8005256:	4b02      	ldr	r3, [pc, #8]	; (8005260 <_gettimeofday+0xc>)
 8005258:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800525c:	601a      	str	r2, [r3, #0]
 800525e:	4770      	bx	lr
 8005260:	20001600 	.word	0x20001600

08005264 <_init>:
 8005264:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005266:	bf00      	nop
 8005268:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800526a:	bc08      	pop	{r3}
 800526c:	469e      	mov	lr, r3
 800526e:	4770      	bx	lr

08005270 <_fini>:
 8005270:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005272:	bf00      	nop
 8005274:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005276:	bc08      	pop	{r3}
 8005278:	469e      	mov	lr, r3
 800527a:	4770      	bx	lr

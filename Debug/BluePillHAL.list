
BluePillHAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000051fc  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001ec  0800530c  0800530c  0001530c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080054f8  080054f8  00020154  2**0
                  CONTENTS
  4 .ARM          00000000  080054f8  080054f8  00020154  2**0
                  CONTENTS
  5 .preinit_array 00000000  080054f8  080054f8  00020154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080054f8  080054f8  000154f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080054fc  080054fc  000154fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000154  20000000  08005500  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000014e0  20000154  08005654  00020154  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20001634  08005654  00021634  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020154  2**0
                  CONTENTS, READONLY
 12 .debug_info   00012da9  00000000  00000000  0002017d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002e1b  00000000  00000000  00032f26  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001118  00000000  00000000  00035d48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000fd0  00000000  00000000  00036e60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019cc1  00000000  00000000  00037e30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00010ca4  00000000  00000000  00051af1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00093bde  00000000  00000000  00062795  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f6373  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005258  00000000  00000000  000f63c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         00000024  00000000  00000000  000fb620  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      0000004e  00000000  00000000  000fb644  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000154 	.word	0x20000154
 800012c:	00000000 	.word	0x00000000
 8000130:	080052f4 	.word	0x080052f4

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000158 	.word	0x20000158
 800014c:	080052f4 	.word	0x080052f4

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <vApplicationGetIdleTaskMemory>:
 8000160:	b480      	push	{r7}
 8000162:	b085      	sub	sp, #20
 8000164:	af00      	add	r7, sp, #0
 8000166:	60f8      	str	r0, [r7, #12]
 8000168:	60b9      	str	r1, [r7, #8]
 800016a:	607a      	str	r2, [r7, #4]
 800016c:	68fb      	ldr	r3, [r7, #12]
 800016e:	4a06      	ldr	r2, [pc, #24]	; (8000188 <vApplicationGetIdleTaskMemory+0x28>)
 8000170:	601a      	str	r2, [r3, #0]
 8000172:	68bb      	ldr	r3, [r7, #8]
 8000174:	4a05      	ldr	r2, [pc, #20]	; (800018c <vApplicationGetIdleTaskMemory+0x2c>)
 8000176:	601a      	str	r2, [r3, #0]
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	2280      	movs	r2, #128	; 0x80
 800017c:	601a      	str	r2, [r3, #0]
 800017e:	bf00      	nop
 8000180:	3714      	adds	r7, #20
 8000182:	46bd      	mov	sp, r7
 8000184:	bc80      	pop	{r7}
 8000186:	4770      	bx	lr
 8000188:	20000170 	.word	0x20000170
 800018c:	200001c4 	.word	0x200001c4

08000190 <SARA_Init>:
	HAL_UART_Receive(&huart1, msg, 60, 10)

}*/


void SARA_Init() {
 8000190:	b580      	push	{r7, lr}
 8000192:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARAate0, strlen(SARAate0), 50);
 8000194:	4833      	ldr	r0, [pc, #204]	; (8000264 <SARA_Init+0xd4>)
 8000196:	f7ff ffdb 	bl	8000150 <strlen>
 800019a:	4603      	mov	r3, r0
 800019c:	b29a      	uxth	r2, r3
 800019e:	2332      	movs	r3, #50	; 0x32
 80001a0:	4930      	ldr	r1, [pc, #192]	; (8000264 <SARA_Init+0xd4>)
 80001a2:	4831      	ldr	r0, [pc, #196]	; (8000268 <SARA_Init+0xd8>)
 80001a4:	f002 fa39 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001a8:	2364      	movs	r3, #100	; 0x64
 80001aa:	2280      	movs	r2, #128	; 0x80
 80001ac:	492f      	ldr	r1, [pc, #188]	; (800026c <SARA_Init+0xdc>)
 80001ae:	482e      	ldr	r0, [pc, #184]	; (8000268 <SARA_Init+0xd8>)
 80001b0:	f002 fac5 	bl	800273e <HAL_UART_Receive>
	osDelay(500);
 80001b4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001b8:	f002 fca2 	bl	8002b00 <osDelay>
	HAL_UART_Transmit(&huart1, SARAumnoprof, strlen(SARAumnoprof), 50);
 80001bc:	482c      	ldr	r0, [pc, #176]	; (8000270 <SARA_Init+0xe0>)
 80001be:	f7ff ffc7 	bl	8000150 <strlen>
 80001c2:	4603      	mov	r3, r0
 80001c4:	b29a      	uxth	r2, r3
 80001c6:	2332      	movs	r3, #50	; 0x32
 80001c8:	4929      	ldr	r1, [pc, #164]	; (8000270 <SARA_Init+0xe0>)
 80001ca:	4827      	ldr	r0, [pc, #156]	; (8000268 <SARA_Init+0xd8>)
 80001cc:	f002 fa25 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001d0:	2364      	movs	r3, #100	; 0x64
 80001d2:	2280      	movs	r2, #128	; 0x80
 80001d4:	4925      	ldr	r1, [pc, #148]	; (800026c <SARA_Init+0xdc>)
 80001d6:	4824      	ldr	r0, [pc, #144]	; (8000268 <SARA_Init+0xd8>)
 80001d8:	f002 fab1 	bl	800273e <HAL_UART_Receive>
	osDelay(500);
 80001dc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001e0:	f002 fc8e 	bl	8002b00 <osDelay>
	//HAL_UART_Transmit(&huart1, cereg, strlen(cereg), 10);
	//osDelay(250);
	HAL_UART_Transmit(&huart1, SARAcops, strlen(SARAcops), 50);
 80001e4:	4823      	ldr	r0, [pc, #140]	; (8000274 <SARA_Init+0xe4>)
 80001e6:	f7ff ffb3 	bl	8000150 <strlen>
 80001ea:	4603      	mov	r3, r0
 80001ec:	b29a      	uxth	r2, r3
 80001ee:	2332      	movs	r3, #50	; 0x32
 80001f0:	4920      	ldr	r1, [pc, #128]	; (8000274 <SARA_Init+0xe4>)
 80001f2:	481d      	ldr	r0, [pc, #116]	; (8000268 <SARA_Init+0xd8>)
 80001f4:	f002 fa11 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001f8:	2364      	movs	r3, #100	; 0x64
 80001fa:	2280      	movs	r2, #128	; 0x80
 80001fc:	491b      	ldr	r1, [pc, #108]	; (800026c <SARA_Init+0xdc>)
 80001fe:	481a      	ldr	r0, [pc, #104]	; (8000268 <SARA_Init+0xd8>)
 8000200:	f002 fa9d 	bl	800273e <HAL_UART_Receive>
	osDelay(500);
 8000204:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000208:	f002 fc7a 	bl	8002b00 <osDelay>
	HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 50);
 800020c:	481a      	ldr	r0, [pc, #104]	; (8000278 <SARA_Init+0xe8>)
 800020e:	f7ff ff9f 	bl	8000150 <strlen>
 8000212:	4603      	mov	r3, r0
 8000214:	b29a      	uxth	r2, r3
 8000216:	2332      	movs	r3, #50	; 0x32
 8000218:	4917      	ldr	r1, [pc, #92]	; (8000278 <SARA_Init+0xe8>)
 800021a:	4813      	ldr	r0, [pc, #76]	; (8000268 <SARA_Init+0xd8>)
 800021c:	f002 f9fd 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000220:	2364      	movs	r3, #100	; 0x64
 8000222:	2280      	movs	r2, #128	; 0x80
 8000224:	4911      	ldr	r1, [pc, #68]	; (800026c <SARA_Init+0xdc>)
 8000226:	4810      	ldr	r0, [pc, #64]	; (8000268 <SARA_Init+0xd8>)
 8000228:	f002 fa89 	bl	800273e <HAL_UART_Receive>

	HAL_UART_Transmit(&huart1, SARAate0, strlen(SARAate0), 50);
 800022c:	480d      	ldr	r0, [pc, #52]	; (8000264 <SARA_Init+0xd4>)
 800022e:	f7ff ff8f 	bl	8000150 <strlen>
 8000232:	4603      	mov	r3, r0
 8000234:	b29a      	uxth	r2, r3
 8000236:	2332      	movs	r3, #50	; 0x32
 8000238:	490a      	ldr	r1, [pc, #40]	; (8000264 <SARA_Init+0xd4>)
 800023a:	480b      	ldr	r0, [pc, #44]	; (8000268 <SARA_Init+0xd8>)
 800023c:	f002 f9ed 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000240:	2364      	movs	r3, #100	; 0x64
 8000242:	2280      	movs	r2, #128	; 0x80
 8000244:	4909      	ldr	r1, [pc, #36]	; (800026c <SARA_Init+0xdc>)
 8000246:	4808      	ldr	r0, [pc, #32]	; (8000268 <SARA_Init+0xd8>)
 8000248:	f002 fa79 	bl	800273e <HAL_UART_Receive>

	osDelay(500);
 800024c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000250:	f002 fc56 	bl	8002b00 <osDelay>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000254:	2364      	movs	r3, #100	; 0x64
 8000256:	2280      	movs	r2, #128	; 0x80
 8000258:	4904      	ldr	r1, [pc, #16]	; (800026c <SARA_Init+0xdc>)
 800025a:	4803      	ldr	r0, [pc, #12]	; (8000268 <SARA_Init+0xd8>)
 800025c:	f002 fa6f 	bl	800273e <HAL_UART_Receive>

}
 8000260:	bf00      	nop
 8000262:	bd80      	pop	{r7, pc}
 8000264:	20000004 	.word	0x20000004
 8000268:	200012bc 	.word	0x200012bc
 800026c:	200011ec 	.word	0x200011ec
 8000270:	2000000c 	.word	0x2000000c
 8000274:	20000020 	.word	0x20000020
 8000278:	20000030 	.word	0x20000030

0800027c <nemeus_Power_Cycle>:

void nemeus_Power_Cycle() {
 800027c:	b580      	push	{r7, lr}
 800027e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8000280:	2200      	movs	r2, #0
 8000282:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000286:	4832      	ldr	r0, [pc, #200]	; (8000350 <nemeus_Power_Cycle+0xd4>)
 8000288:	f001 fab4 	bl	80017f4 <HAL_GPIO_WritePin>
    osDelay(1500);
 800028c:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8000290:	f002 fc36 	bl	8002b00 <osDelay>
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000294:	2201      	movs	r2, #1
 8000296:	f44f 7180 	mov.w	r1, #256	; 0x100
 800029a:	482d      	ldr	r0, [pc, #180]	; (8000350 <nemeus_Power_Cycle+0xd4>)
 800029c:	f001 faaa 	bl	80017f4 <HAL_GPIO_WritePin>
	//osDelay(150);
    HAL_UART_Receive(&huart3, trash, 128, 150);
 80002a0:	2396      	movs	r3, #150	; 0x96
 80002a2:	2280      	movs	r2, #128	; 0x80
 80002a4:	492b      	ldr	r1, [pc, #172]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002a6:	482c      	ldr	r0, [pc, #176]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002a8:	f002 fa49 	bl	800273e <HAL_UART_Receive>

	HAL_UART_Transmit(&huart3, syncLora, strlen(syncLora), 10);
 80002ac:	482b      	ldr	r0, [pc, #172]	; (800035c <nemeus_Power_Cycle+0xe0>)
 80002ae:	f7ff ff4f 	bl	8000150 <strlen>
 80002b2:	4603      	mov	r3, r0
 80002b4:	b29a      	uxth	r2, r3
 80002b6:	230a      	movs	r3, #10
 80002b8:	4928      	ldr	r1, [pc, #160]	; (800035c <nemeus_Power_Cycle+0xe0>)
 80002ba:	4827      	ldr	r0, [pc, #156]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002bc:	f002 f9ad 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002c0:	2364      	movs	r3, #100	; 0x64
 80002c2:	2280      	movs	r2, #128	; 0x80
 80002c4:	4923      	ldr	r1, [pc, #140]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002c6:	4824      	ldr	r0, [pc, #144]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002c8:	f002 fa39 	bl	800273e <HAL_UART_Receive>
	osDelay(500);
 80002cc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80002d0:	f002 fc16 	bl	8002b00 <osDelay>

	HAL_UART_Transmit(&huart3, beginLora, strlen(beginLora), 10);
 80002d4:	4822      	ldr	r0, [pc, #136]	; (8000360 <nemeus_Power_Cycle+0xe4>)
 80002d6:	f7ff ff3b 	bl	8000150 <strlen>
 80002da:	4603      	mov	r3, r0
 80002dc:	b29a      	uxth	r2, r3
 80002de:	230a      	movs	r3, #10
 80002e0:	491f      	ldr	r1, [pc, #124]	; (8000360 <nemeus_Power_Cycle+0xe4>)
 80002e2:	481d      	ldr	r0, [pc, #116]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002e4:	f002 f999 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002e8:	2364      	movs	r3, #100	; 0x64
 80002ea:	2280      	movs	r2, #128	; 0x80
 80002ec:	4919      	ldr	r1, [pc, #100]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002ee:	481a      	ldr	r0, [pc, #104]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002f0:	f002 fa25 	bl	800273e <HAL_UART_Receive>
	//osDelay(1500);
	memset(trash, '\0', 128);
 80002f4:	2280      	movs	r2, #128	; 0x80
 80002f6:	2100      	movs	r1, #0
 80002f8:	4816      	ldr	r0, [pc, #88]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002fa:	f003 fda9 	bl	8003e50 <memset>
	//HAL_UART_Receive(&huart3, trash, 128, 4000);
	HAL_UART_Receive(&huart3, trash, 10, 40000);
 80002fe:	f649 4340 	movw	r3, #40000	; 0x9c40
 8000302:	220a      	movs	r2, #10
 8000304:	4913      	ldr	r1, [pc, #76]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000306:	4814      	ldr	r0, [pc, #80]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000308:	f002 fa19 	bl	800273e <HAL_UART_Receive>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800030c:	2364      	movs	r3, #100	; 0x64
 800030e:	2280      	movs	r2, #128	; 0x80
 8000310:	4910      	ldr	r1, [pc, #64]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000312:	4811      	ldr	r0, [pc, #68]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000314:	f002 fa13 	bl	800273e <HAL_UART_Receive>

	HAL_UART_Transmit(&huart3, beginSigfox, strlen(beginSigfox), 10);
 8000318:	4812      	ldr	r0, [pc, #72]	; (8000364 <nemeus_Power_Cycle+0xe8>)
 800031a:	f7ff ff19 	bl	8000150 <strlen>
 800031e:	4603      	mov	r3, r0
 8000320:	b29a      	uxth	r2, r3
 8000322:	230a      	movs	r3, #10
 8000324:	490f      	ldr	r1, [pc, #60]	; (8000364 <nemeus_Power_Cycle+0xe8>)
 8000326:	480c      	ldr	r0, [pc, #48]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000328:	f002 f977 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800032c:	2364      	movs	r3, #100	; 0x64
 800032e:	2280      	movs	r2, #128	; 0x80
 8000330:	4908      	ldr	r1, [pc, #32]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000332:	4809      	ldr	r0, [pc, #36]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000334:	f002 fa03 	bl	800273e <HAL_UART_Receive>
	osDelay(50);
 8000338:	2032      	movs	r0, #50	; 0x32
 800033a:	f002 fbe1 	bl	8002b00 <osDelay>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800033e:	2364      	movs	r3, #100	; 0x64
 8000340:	2280      	movs	r2, #128	; 0x80
 8000342:	4904      	ldr	r1, [pc, #16]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000344:	4804      	ldr	r0, [pc, #16]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000346:	f002 f9fa 	bl	800273e <HAL_UART_Receive>


}
 800034a:	bf00      	nop
 800034c:	bd80      	pop	{r7, pc}
 800034e:	bf00      	nop
 8000350:	40010800 	.word	0x40010800
 8000354:	200011ec 	.word	0x200011ec
 8000358:	200011a4 	.word	0x200011a4
 800035c:	2000008c 	.word	0x2000008c
 8000360:	20000098 	.word	0x20000098
 8000364:	200000bc 	.word	0x200000bc

08000368 <SARA_ChangeTech>:
	HAL_UART_Transmit(&huart1, cmd, strlen(cmd), 10);
	HAL_UART_Receive(&huart1, SARAresult, 128, 100);
}


void SARA_ChangeTech(uint8_t tech){ //tech should be 9 for NB
 8000368:	b580      	push	{r7, lr}
 800036a:	b088      	sub	sp, #32
 800036c:	af00      	add	r7, sp, #0
 800036e:	4603      	mov	r3, r0
 8000370:	71fb      	strb	r3, [r7, #7]
	uint8_t lpwanTechnology[12];
	if(tech == '7'){
 8000372:	79fb      	ldrb	r3, [r7, #7]
 8000374:	2b37      	cmp	r3, #55	; 0x37
 8000376:	d106      	bne.n	8000386 <SARA_ChangeTech+0x1e>
		strcpy(lpwanTechnology,SARAconnLTE);
 8000378:	f107 030c 	add.w	r3, r7, #12
 800037c:	493a      	ldr	r1, [pc, #232]	; (8000468 <SARA_ChangeTech+0x100>)
 800037e:	4618      	mov	r0, r3
 8000380:	f003 fe0b 	bl	8003f9a <strcpy>
 8000384:	e008      	b.n	8000398 <SARA_ChangeTech+0x30>
	}
	else if (tech == '9') {
 8000386:	79fb      	ldrb	r3, [r7, #7]
 8000388:	2b39      	cmp	r3, #57	; 0x39
 800038a:	d105      	bne.n	8000398 <SARA_ChangeTech+0x30>
		strcpy(lpwanTechnology,SARAconnNB);
 800038c:	f107 030c 	add.w	r3, r7, #12
 8000390:	4936      	ldr	r1, [pc, #216]	; (800046c <SARA_ChangeTech+0x104>)
 8000392:	4618      	mov	r0, r3
 8000394:	f003 fe01 	bl	8003f9a <strcpy>
	}
	HAL_UART_Transmit(&huart1, lpwanTechnology, strlen(lpwanTechnology), 50);
 8000398:	f107 030c 	add.w	r3, r7, #12
 800039c:	4618      	mov	r0, r3
 800039e:	f7ff fed7 	bl	8000150 <strlen>
 80003a2:	4603      	mov	r3, r0
 80003a4:	b29a      	uxth	r2, r3
 80003a6:	f107 010c 	add.w	r1, r7, #12
 80003aa:	2332      	movs	r3, #50	; 0x32
 80003ac:	4830      	ldr	r0, [pc, #192]	; (8000470 <SARA_ChangeTech+0x108>)
 80003ae:	f002 f934 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80003b2:	2364      	movs	r3, #100	; 0x64
 80003b4:	2280      	movs	r2, #128	; 0x80
 80003b6:	492f      	ldr	r1, [pc, #188]	; (8000474 <SARA_ChangeTech+0x10c>)
 80003b8:	482d      	ldr	r0, [pc, #180]	; (8000470 <SARA_ChangeTech+0x108>)
 80003ba:	f002 f9c0 	bl	800273e <HAL_UART_Receive>

	HAL_UART_Transmit(&huart1, SARAcfun15, strlen(SARAcfun15), 50);
 80003be:	482e      	ldr	r0, [pc, #184]	; (8000478 <SARA_ChangeTech+0x110>)
 80003c0:	f7ff fec6 	bl	8000150 <strlen>
 80003c4:	4603      	mov	r3, r0
 80003c6:	b29a      	uxth	r2, r3
 80003c8:	2332      	movs	r3, #50	; 0x32
 80003ca:	492b      	ldr	r1, [pc, #172]	; (8000478 <SARA_ChangeTech+0x110>)
 80003cc:	4828      	ldr	r0, [pc, #160]	; (8000470 <SARA_ChangeTech+0x108>)
 80003ce:	f002 f924 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80003d2:	2364      	movs	r3, #100	; 0x64
 80003d4:	2280      	movs	r2, #128	; 0x80
 80003d6:	4927      	ldr	r1, [pc, #156]	; (8000474 <SARA_ChangeTech+0x10c>)
 80003d8:	4825      	ldr	r0, [pc, #148]	; (8000470 <SARA_ChangeTech+0x108>)
 80003da:	f002 f9b0 	bl	800273e <HAL_UART_Receive>

	uint8_t curTech; //if -1 then dont do following

	// Wait for device to restart and
	osDelay(5000);
 80003de:	f241 3088 	movw	r0, #5000	; 0x1388
 80003e2:	f002 fb8d 	bl	8002b00 <osDelay>
	HAL_UART_Transmit(&huart1, SARAate0, strlen(SARAate0), 50);
 80003e6:	4825      	ldr	r0, [pc, #148]	; (800047c <SARA_ChangeTech+0x114>)
 80003e8:	f7ff feb2 	bl	8000150 <strlen>
 80003ec:	4603      	mov	r3, r0
 80003ee:	b29a      	uxth	r2, r3
 80003f0:	2332      	movs	r3, #50	; 0x32
 80003f2:	4922      	ldr	r1, [pc, #136]	; (800047c <SARA_ChangeTech+0x114>)
 80003f4:	481e      	ldr	r0, [pc, #120]	; (8000470 <SARA_ChangeTech+0x108>)
 80003f6:	f002 f910 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80003fa:	2364      	movs	r3, #100	; 0x64
 80003fc:	2280      	movs	r2, #128	; 0x80
 80003fe:	491d      	ldr	r1, [pc, #116]	; (8000474 <SARA_ChangeTech+0x10c>)
 8000400:	481b      	ldr	r0, [pc, #108]	; (8000470 <SARA_ChangeTech+0x108>)
 8000402:	f002 f99c 	bl	800273e <HAL_UART_Receive>
	if (tech == '9'){
 8000406:	79fb      	ldrb	r3, [r7, #7]
 8000408:	2b39      	cmp	r3, #57	; 0x39
 800040a:	d103      	bne.n	8000414 <SARA_ChangeTech+0xac>
		osDelay(3000);
 800040c:	f640 30b8 	movw	r0, #3000	; 0xbb8
 8000410:	f002 fb76 	bl	8002b00 <osDelay>
	}
	int i = 0;
 8000414:	2300      	movs	r3, #0
 8000416:	61fb      	str	r3, [r7, #28]
	int msgLength;
	do {
		if (i > 2){
 8000418:	69fb      	ldr	r3, [r7, #28]
 800041a:	2b02      	cmp	r3, #2
 800041c:	dd02      	ble.n	8000424 <SARA_ChangeTech+0xbc>
			__HAL_UART_FLUSH_DRREGISTER(&huart1);
 800041e:	4b14      	ldr	r3, [pc, #80]	; (8000470 <SARA_ChangeTech+0x108>)
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	685b      	ldr	r3, [r3, #4]
		}
		SARA_CheckTech();
 8000424:	f000 f830 	bl	8000488 <SARA_CheckTech>
		msgLength = strlen(SARAtech);
 8000428:	4815      	ldr	r0, [pc, #84]	; (8000480 <SARA_ChangeTech+0x118>)
 800042a:	f7ff fe91 	bl	8000150 <strlen>
 800042e:	4603      	mov	r3, r0
 8000430:	61bb      	str	r3, [r7, #24]
		getResultParameterURAT(3, SARAtech, msgLength);
 8000432:	69ba      	ldr	r2, [r7, #24]
 8000434:	4912      	ldr	r1, [pc, #72]	; (8000480 <SARA_ChangeTech+0x118>)
 8000436:	2003      	movs	r0, #3
 8000438:	f000 f84c 	bl	80004d4 <getResultParameterURAT>
		sendToESP(SARATechnology);
 800043c:	4811      	ldr	r0, [pc, #68]	; (8000484 <SARA_ChangeTech+0x11c>)
 800043e:	f000 fb95 	bl	8000b6c <sendToESP>
		//HAL_UART_Receive(&huart1, trash, 128, 100);
		//SARA_Get_Current_URAT(SARAtech);
		osDelay(1500);
 8000442:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8000446:	f002 fb5b 	bl	8002b00 <osDelay>
		i++;
 800044a:	69fb      	ldr	r3, [r7, #28]
 800044c:	3301      	adds	r3, #1
 800044e:	61fb      	str	r3, [r7, #28]
		//HAL_UART_Transmit(&huart1, lpwanTechnology, strlen(lpwanTechnology), 50);
		//HAL_UART_Receive(&huart1, trash, 128, 500);
		//sendToESP(SARATechnology);
	} while (SARATechnology[0] != tech && i < 5);
 8000450:	4b0c      	ldr	r3, [pc, #48]	; (8000484 <SARA_ChangeTech+0x11c>)
 8000452:	781b      	ldrb	r3, [r3, #0]
 8000454:	79fa      	ldrb	r2, [r7, #7]
 8000456:	429a      	cmp	r2, r3
 8000458:	d002      	beq.n	8000460 <SARA_ChangeTech+0xf8>
 800045a:	69fb      	ldr	r3, [r7, #28]
 800045c:	2b04      	cmp	r3, #4
 800045e:	dddb      	ble.n	8000418 <SARA_ChangeTech+0xb0>

}
 8000460:	bf00      	nop
 8000462:	3720      	adds	r7, #32
 8000464:	46bd      	mov	sp, r7
 8000466:	bd80      	pop	{r7, pc}
 8000468:	20000030 	.word	0x20000030
 800046c:	2000003c 	.word	0x2000003c
 8000470:	200012bc 	.word	0x200012bc
 8000474:	200011ec 	.word	0x200011ec
 8000478:	2000006c 	.word	0x2000006c
 800047c:	20000004 	.word	0x20000004
 8000480:	20001548 	.word	0x20001548
 8000484:	200012b8 	.word	0x200012b8

08000488 <SARA_CheckTech>:

void SARA_CheckTech(){
 8000488:	b580      	push	{r7, lr}
 800048a:	af00      	add	r7, sp, #0
	memset(SARAtech,'\0',50);
 800048c:	2232      	movs	r2, #50	; 0x32
 800048e:	2100      	movs	r1, #0
 8000490:	480d      	ldr	r0, [pc, #52]	; (80004c8 <SARA_CheckTech+0x40>)
 8000492:	f003 fcdd 	bl	8003e50 <memset>
	HAL_UART_Transmit(&huart1, SARAcopsCheck, strlen(SARAcopsCheck), 10);
 8000496:	480d      	ldr	r0, [pc, #52]	; (80004cc <SARA_CheckTech+0x44>)
 8000498:	f7ff fe5a 	bl	8000150 <strlen>
 800049c:	4603      	mov	r3, r0
 800049e:	b29a      	uxth	r2, r3
 80004a0:	230a      	movs	r3, #10
 80004a2:	490a      	ldr	r1, [pc, #40]	; (80004cc <SARA_CheckTech+0x44>)
 80004a4:	480a      	ldr	r0, [pc, #40]	; (80004d0 <SARA_CheckTech+0x48>)
 80004a6:	f002 f8b8 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, SARAtech, 50, 1500);
 80004aa:	f240 53dc 	movw	r3, #1500	; 0x5dc
 80004ae:	2232      	movs	r2, #50	; 0x32
 80004b0:	4905      	ldr	r1, [pc, #20]	; (80004c8 <SARA_CheckTech+0x40>)
 80004b2:	4807      	ldr	r0, [pc, #28]	; (80004d0 <SARA_CheckTech+0x48>)
 80004b4:	f002 f943 	bl	800273e <HAL_UART_Receive>
	sendToESP(SARAtech);
 80004b8:	4803      	ldr	r0, [pc, #12]	; (80004c8 <SARA_CheckTech+0x40>)
 80004ba:	f000 fb57 	bl	8000b6c <sendToESP>
	osDelay(150);
 80004be:	2096      	movs	r0, #150	; 0x96
 80004c0:	f002 fb1e 	bl	8002b00 <osDelay>

}
 80004c4:	bf00      	nop
 80004c6:	bd80      	pop	{r7, pc}
 80004c8:	20001548 	.word	0x20001548
 80004cc:	20000048 	.word	0x20000048
 80004d0:	200012bc 	.word	0x200012bc

080004d4 <getResultParameterURAT>:

void getResultParameterURAT(int nParam, uint8_t * msg, int msgLength){
 80004d4:	b580      	push	{r7, lr}
 80004d6:	b086      	sub	sp, #24
 80004d8:	af00      	add	r7, sp, #0
 80004da:	60f8      	str	r0, [r7, #12]
 80004dc:	60b9      	str	r1, [r7, #8]
 80004de:	607a      	str	r2, [r7, #4]
 80004e0:	4b1c      	ldr	r3, [pc, #112]	; (8000554 <getResultParameterURAT+0x80>)
 80004e2:	2200      	movs	r2, #0
 80004e4:	701a      	strb	r2, [r3, #0]
	memset(SARATechnology,'\0',1);
	int commaCnt = 0;
 80004e6:	2300      	movs	r3, #0
 80004e8:	617b      	str	r3, [r7, #20]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 80004ea:	2300      	movs	r3, #0
 80004ec:	613b      	str	r3, [r7, #16]
	//sendToESP(msg);
	while (msg[i] != '\0' && i < msgLength){
 80004ee:	e024      	b.n	800053a <getResultParameterURAT+0x66>
		osDelay(50);
 80004f0:	2032      	movs	r0, #50	; 0x32
 80004f2:	f002 fb05 	bl	8002b00 <osDelay>
		if(msg[i] == ',' && commaCnt == nParam-1){
 80004f6:	693b      	ldr	r3, [r7, #16]
 80004f8:	68ba      	ldr	r2, [r7, #8]
 80004fa:	4413      	add	r3, r2
 80004fc:	781b      	ldrb	r3, [r3, #0]
 80004fe:	2b2c      	cmp	r3, #44	; 0x2c
 8000500:	d10f      	bne.n	8000522 <getResultParameterURAT+0x4e>
 8000502:	68fb      	ldr	r3, [r7, #12]
 8000504:	3b01      	subs	r3, #1
 8000506:	697a      	ldr	r2, [r7, #20]
 8000508:	429a      	cmp	r2, r3
 800050a:	d10a      	bne.n	8000522 <getResultParameterURAT+0x4e>
 800050c:	4b11      	ldr	r3, [pc, #68]	; (8000554 <getResultParameterURAT+0x80>)
 800050e:	2200      	movs	r2, #0
 8000510:	701a      	strb	r2, [r3, #0]
			memset(SARATechnology,'\0',1);
			SARATechnology[0] = msg[i+1];
 8000512:	693b      	ldr	r3, [r7, #16]
 8000514:	3301      	adds	r3, #1
 8000516:	68ba      	ldr	r2, [r7, #8]
 8000518:	4413      	add	r3, r2
 800051a:	781a      	ldrb	r2, [r3, #0]
 800051c:	4b0d      	ldr	r3, [pc, #52]	; (8000554 <getResultParameterURAT+0x80>)
 800051e:	701a      	strb	r2, [r3, #0]
			return;
 8000520:	e015      	b.n	800054e <getResultParameterURAT+0x7a>
		} else if(msg[i] == ','){
 8000522:	693b      	ldr	r3, [r7, #16]
 8000524:	68ba      	ldr	r2, [r7, #8]
 8000526:	4413      	add	r3, r2
 8000528:	781b      	ldrb	r3, [r3, #0]
 800052a:	2b2c      	cmp	r3, #44	; 0x2c
 800052c:	d102      	bne.n	8000534 <getResultParameterURAT+0x60>
			commaCnt++;
 800052e:	697b      	ldr	r3, [r7, #20]
 8000530:	3301      	adds	r3, #1
 8000532:	617b      	str	r3, [r7, #20]
			//sendToESP(testing);
		}
		i++;
 8000534:	693b      	ldr	r3, [r7, #16]
 8000536:	3301      	adds	r3, #1
 8000538:	613b      	str	r3, [r7, #16]
	while (msg[i] != '\0' && i < msgLength){
 800053a:	693b      	ldr	r3, [r7, #16]
 800053c:	68ba      	ldr	r2, [r7, #8]
 800053e:	4413      	add	r3, r2
 8000540:	781b      	ldrb	r3, [r3, #0]
 8000542:	2b00      	cmp	r3, #0
 8000544:	d003      	beq.n	800054e <getResultParameterURAT+0x7a>
 8000546:	693a      	ldr	r2, [r7, #16]
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	429a      	cmp	r2, r3
 800054c:	dbd0      	blt.n	80004f0 <getResultParameterURAT+0x1c>
		//osDelay(400);
	}
}
 800054e:	3718      	adds	r7, #24
 8000550:	46bd      	mov	sp, r7
 8000552:	bd80      	pop	{r7, pc}
 8000554:	200012b8 	.word	0x200012b8

08000558 <getResultParameterCESQ>:


void getResultParameterCESQ(int nParam, uint8_t * msg){
 8000558:	b480      	push	{r7}
 800055a:	b087      	sub	sp, #28
 800055c:	af00      	add	r7, sp, #0
 800055e:	6078      	str	r0, [r7, #4]
 8000560:	6039      	str	r1, [r7, #0]
	int commaCnt = 0;
 8000562:	2300      	movs	r3, #0
 8000564:	617b      	str	r3, [r7, #20]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 8000566:	2300      	movs	r3, #0
 8000568:	613b      	str	r3, [r7, #16]
	int j = 1;
 800056a:	2301      	movs	r3, #1
 800056c:	60fb      	str	r3, [r7, #12]
	while (msg[i] != '\0'){
 800056e:	e03b      	b.n	80005e8 <getResultParameterCESQ+0x90>
		if(msg[i] == ',' && commaCnt == nParam-1){
 8000570:	693b      	ldr	r3, [r7, #16]
 8000572:	683a      	ldr	r2, [r7, #0]
 8000574:	4413      	add	r3, r2
 8000576:	781b      	ldrb	r3, [r3, #0]
 8000578:	2b2c      	cmp	r3, #44	; 0x2c
 800057a:	d129      	bne.n	80005d0 <getResultParameterCESQ+0x78>
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	3b01      	subs	r3, #1
 8000580:	697a      	ldr	r2, [r7, #20]
 8000582:	429a      	cmp	r2, r3
 8000584:	d124      	bne.n	80005d0 <getResultParameterCESQ+0x78>
			while (j <= 5 && msg[i+j] != '\r' && msg[i+j] != '\n'){
 8000586:	e00d      	b.n	80005a4 <getResultParameterCESQ+0x4c>
				SARARsrpRsrq[j-1] = msg[i+j];
 8000588:	693a      	ldr	r2, [r7, #16]
 800058a:	68fb      	ldr	r3, [r7, #12]
 800058c:	4413      	add	r3, r2
 800058e:	461a      	mov	r2, r3
 8000590:	683b      	ldr	r3, [r7, #0]
 8000592:	441a      	add	r2, r3
 8000594:	68fb      	ldr	r3, [r7, #12]
 8000596:	3b01      	subs	r3, #1
 8000598:	7811      	ldrb	r1, [r2, #0]
 800059a:	4a19      	ldr	r2, [pc, #100]	; (8000600 <getResultParameterCESQ+0xa8>)
 800059c:	54d1      	strb	r1, [r2, r3]
				j++;
 800059e:	68fb      	ldr	r3, [r7, #12]
 80005a0:	3301      	adds	r3, #1
 80005a2:	60fb      	str	r3, [r7, #12]
			while (j <= 5 && msg[i+j] != '\r' && msg[i+j] != '\n'){
 80005a4:	68fb      	ldr	r3, [r7, #12]
 80005a6:	2b05      	cmp	r3, #5
 80005a8:	dc25      	bgt.n	80005f6 <getResultParameterCESQ+0x9e>
 80005aa:	693a      	ldr	r2, [r7, #16]
 80005ac:	68fb      	ldr	r3, [r7, #12]
 80005ae:	4413      	add	r3, r2
 80005b0:	461a      	mov	r2, r3
 80005b2:	683b      	ldr	r3, [r7, #0]
 80005b4:	4413      	add	r3, r2
 80005b6:	781b      	ldrb	r3, [r3, #0]
 80005b8:	2b0d      	cmp	r3, #13
 80005ba:	d01c      	beq.n	80005f6 <getResultParameterCESQ+0x9e>
 80005bc:	693a      	ldr	r2, [r7, #16]
 80005be:	68fb      	ldr	r3, [r7, #12]
 80005c0:	4413      	add	r3, r2
 80005c2:	461a      	mov	r2, r3
 80005c4:	683b      	ldr	r3, [r7, #0]
 80005c6:	4413      	add	r3, r2
 80005c8:	781b      	ldrb	r3, [r3, #0]
 80005ca:	2b0a      	cmp	r3, #10
 80005cc:	d1dc      	bne.n	8000588 <getResultParameterCESQ+0x30>
			}
			return;
 80005ce:	e012      	b.n	80005f6 <getResultParameterCESQ+0x9e>
		} else if(msg[i] == ','){
 80005d0:	693b      	ldr	r3, [r7, #16]
 80005d2:	683a      	ldr	r2, [r7, #0]
 80005d4:	4413      	add	r3, r2
 80005d6:	781b      	ldrb	r3, [r3, #0]
 80005d8:	2b2c      	cmp	r3, #44	; 0x2c
 80005da:	d102      	bne.n	80005e2 <getResultParameterCESQ+0x8a>
			commaCnt++;
 80005dc:	697b      	ldr	r3, [r7, #20]
 80005de:	3301      	adds	r3, #1
 80005e0:	617b      	str	r3, [r7, #20]
			//sendToESP(testing);
		}
		i++;
 80005e2:	693b      	ldr	r3, [r7, #16]
 80005e4:	3301      	adds	r3, #1
 80005e6:	613b      	str	r3, [r7, #16]
	while (msg[i] != '\0'){
 80005e8:	693b      	ldr	r3, [r7, #16]
 80005ea:	683a      	ldr	r2, [r7, #0]
 80005ec:	4413      	add	r3, r2
 80005ee:	781b      	ldrb	r3, [r3, #0]
 80005f0:	2b00      	cmp	r3, #0
 80005f2:	d1bd      	bne.n	8000570 <getResultParameterCESQ+0x18>
 80005f4:	e000      	b.n	80005f8 <getResultParameterCESQ+0xa0>
			return;
 80005f6:	bf00      	nop
		//osDelay(400);
	}
}
 80005f8:	371c      	adds	r7, #28
 80005fa:	46bd      	mov	sp, r7
 80005fc:	bc80      	pop	{r7}
 80005fe:	4770      	bx	lr
 8000600:	200015cc 	.word	0x200015cc

08000604 <getCSQResult>:

void getCSQResult(uint8_t * msg){
 8000604:	b480      	push	{r7}
 8000606:	b085      	sub	sp, #20
 8000608:	af00      	add	r7, sp, #0
 800060a:	6078      	str	r0, [r7, #4]
	int i = 8;
 800060c:	2308      	movs	r3, #8
 800060e:	60fb      	str	r3, [r7, #12]
	int j = 0;
 8000610:	2300      	movs	r3, #0
 8000612:	60bb      	str	r3, [r7, #8]
	while (msg[i] != ',' && msg[i] != '\0' && msg[i] != '\r' && msg[i] != '\n' && j < 4){
 8000614:	e00e      	b.n	8000634 <getCSQResult+0x30>
		SARAcsqResult[j] = msg[i];
 8000616:	68fb      	ldr	r3, [r7, #12]
 8000618:	687a      	ldr	r2, [r7, #4]
 800061a:	4413      	add	r3, r2
 800061c:	7819      	ldrb	r1, [r3, #0]
 800061e:	4a15      	ldr	r2, [pc, #84]	; (8000674 <getCSQResult+0x70>)
 8000620:	68bb      	ldr	r3, [r7, #8]
 8000622:	4413      	add	r3, r2
 8000624:	460a      	mov	r2, r1
 8000626:	701a      	strb	r2, [r3, #0]
		i++;
 8000628:	68fb      	ldr	r3, [r7, #12]
 800062a:	3301      	adds	r3, #1
 800062c:	60fb      	str	r3, [r7, #12]
		j++;
 800062e:	68bb      	ldr	r3, [r7, #8]
 8000630:	3301      	adds	r3, #1
 8000632:	60bb      	str	r3, [r7, #8]
	while (msg[i] != ',' && msg[i] != '\0' && msg[i] != '\r' && msg[i] != '\n' && j < 4){
 8000634:	68fb      	ldr	r3, [r7, #12]
 8000636:	687a      	ldr	r2, [r7, #4]
 8000638:	4413      	add	r3, r2
 800063a:	781b      	ldrb	r3, [r3, #0]
 800063c:	2b2c      	cmp	r3, #44	; 0x2c
 800063e:	d014      	beq.n	800066a <getCSQResult+0x66>
 8000640:	68fb      	ldr	r3, [r7, #12]
 8000642:	687a      	ldr	r2, [r7, #4]
 8000644:	4413      	add	r3, r2
 8000646:	781b      	ldrb	r3, [r3, #0]
 8000648:	2b00      	cmp	r3, #0
 800064a:	d00e      	beq.n	800066a <getCSQResult+0x66>
 800064c:	68fb      	ldr	r3, [r7, #12]
 800064e:	687a      	ldr	r2, [r7, #4]
 8000650:	4413      	add	r3, r2
 8000652:	781b      	ldrb	r3, [r3, #0]
 8000654:	2b0d      	cmp	r3, #13
 8000656:	d008      	beq.n	800066a <getCSQResult+0x66>
 8000658:	68fb      	ldr	r3, [r7, #12]
 800065a:	687a      	ldr	r2, [r7, #4]
 800065c:	4413      	add	r3, r2
 800065e:	781b      	ldrb	r3, [r3, #0]
 8000660:	2b0a      	cmp	r3, #10
 8000662:	d002      	beq.n	800066a <getCSQResult+0x66>
 8000664:	68bb      	ldr	r3, [r7, #8]
 8000666:	2b03      	cmp	r3, #3
 8000668:	ddd5      	ble.n	8000616 <getCSQResult+0x12>
	}
}
 800066a:	bf00      	nop
 800066c:	3714      	adds	r7, #20
 800066e:	46bd      	mov	sp, r7
 8000670:	bc80      	pop	{r7}
 8000672:	4770      	bx	lr
 8000674:	20001448 	.word	0x20001448

08000678 <getGPSCoordinates>:

void getGPSCoordinates(){
 8000678:	b580      	push	{r7, lr}
 800067a:	af00      	add	r7, sp, #0
	//memset(currentGPSCoords,'\0',80);
	HAL_UART_Receive(&huart1, trash, 128, 200);
 800067c:	23c8      	movs	r3, #200	; 0xc8
 800067e:	2280      	movs	r2, #128	; 0x80
 8000680:	491f      	ldr	r1, [pc, #124]	; (8000700 <getGPSCoordinates+0x88>)
 8000682:	4820      	ldr	r0, [pc, #128]	; (8000704 <getGPSCoordinates+0x8c>)
 8000684:	f002 f85b 	bl	800273e <HAL_UART_Receive>
    HAL_UART_Transmit(&huart1, getGPSCoordsCommand, strlen(getGPSCoordsCommand), 10);
 8000688:	481f      	ldr	r0, [pc, #124]	; (8000708 <getGPSCoordinates+0x90>)
 800068a:	f7ff fd61 	bl	8000150 <strlen>
 800068e:	4603      	mov	r3, r0
 8000690:	b29a      	uxth	r2, r3
 8000692:	230a      	movs	r3, #10
 8000694:	491c      	ldr	r1, [pc, #112]	; (8000708 <getGPSCoordinates+0x90>)
 8000696:	481b      	ldr	r0, [pc, #108]	; (8000704 <getGPSCoordinates+0x8c>)
 8000698:	f001 ffbf 	bl	800261a <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 1500);
 800069c:	f240 53dc 	movw	r3, #1500	; 0x5dc
 80006a0:	2250      	movs	r2, #80	; 0x50
 80006a2:	491a      	ldr	r1, [pc, #104]	; (800070c <getGPSCoordinates+0x94>)
 80006a4:	4817      	ldr	r0, [pc, #92]	; (8000704 <getGPSCoordinates+0x8c>)
 80006a6:	f002 f84a 	bl	800273e <HAL_UART_Receive>

    if (strlen(currentGPSCoords) < 5){ //arbitrary number, should be tweaked.
 80006aa:	4818      	ldr	r0, [pc, #96]	; (800070c <getGPSCoordinates+0x94>)
 80006ac:	f7ff fd50 	bl	8000150 <strlen>
 80006b0:	4603      	mov	r3, r0
 80006b2:	2b04      	cmp	r3, #4
 80006b4:	d822      	bhi.n	80006fc <getGPSCoordinates+0x84>
    	sendToESP(testing);
 80006b6:	4816      	ldr	r0, [pc, #88]	; (8000710 <getGPSCoordinates+0x98>)
 80006b8:	f000 fa58 	bl	8000b6c <sendToESP>
    	memset(currentGPSCoords,'\0',80);
 80006bc:	2250      	movs	r2, #80	; 0x50
 80006be:	2100      	movs	r1, #0
 80006c0:	4812      	ldr	r0, [pc, #72]	; (800070c <getGPSCoordinates+0x94>)
 80006c2:	f003 fbc5 	bl	8003e50 <memset>
    	osDelay(400);
 80006c6:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80006ca:	f002 fa19 	bl	8002b00 <osDelay>
    	HAL_UART_Receive(&huart1, trash, 128, 200);
 80006ce:	23c8      	movs	r3, #200	; 0xc8
 80006d0:	2280      	movs	r2, #128	; 0x80
 80006d2:	490b      	ldr	r1, [pc, #44]	; (8000700 <getGPSCoordinates+0x88>)
 80006d4:	480b      	ldr	r0, [pc, #44]	; (8000704 <getGPSCoordinates+0x8c>)
 80006d6:	f002 f832 	bl	800273e <HAL_UART_Receive>
        HAL_UART_Transmit(&huart1, getGPSCoordsCommand, strlen(getGPSCoordsCommand), 10);
 80006da:	480b      	ldr	r0, [pc, #44]	; (8000708 <getGPSCoordinates+0x90>)
 80006dc:	f7ff fd38 	bl	8000150 <strlen>
 80006e0:	4603      	mov	r3, r0
 80006e2:	b29a      	uxth	r2, r3
 80006e4:	230a      	movs	r3, #10
 80006e6:	4908      	ldr	r1, [pc, #32]	; (8000708 <getGPSCoordinates+0x90>)
 80006e8:	4806      	ldr	r0, [pc, #24]	; (8000704 <getGPSCoordinates+0x8c>)
 80006ea:	f001 ff96 	bl	800261a <HAL_UART_Transmit>
        HAL_UART_Receive(&huart1, currentGPSCoords, 80, 1500);
 80006ee:	f240 53dc 	movw	r3, #1500	; 0x5dc
 80006f2:	2250      	movs	r2, #80	; 0x50
 80006f4:	4905      	ldr	r1, [pc, #20]	; (800070c <getGPSCoordinates+0x94>)
 80006f6:	4803      	ldr	r0, [pc, #12]	; (8000704 <getGPSCoordinates+0x8c>)
 80006f8:	f002 f821 	bl	800273e <HAL_UART_Receive>
    }
}
 80006fc:	bf00      	nop
 80006fe:	bd80      	pop	{r7, pc}
 8000700:	200011ec 	.word	0x200011ec
 8000704:	200012bc 	.word	0x200012bc
 8000708:	200000c8 	.word	0x200000c8
 800070c:	2000157c 	.word	0x2000157c
 8000710:	20000000 	.word	0x20000000

08000714 <prepareSaraMeasurement>:

void prepareSaraMeasurement(int technology){
 8000714:	b580      	push	{r7, lr}
 8000716:	b082      	sub	sp, #8
 8000718:	af00      	add	r7, sp, #0
 800071a:	6078      	str	r0, [r7, #4]
	memset(SaraMeasurements,'\0',128);
 800071c:	2280      	movs	r2, #128	; 0x80
 800071e:	2100      	movs	r1, #0
 8000720:	4822      	ldr	r0, [pc, #136]	; (80007ac <prepareSaraMeasurement+0x98>)
 8000722:	f003 fb95 	bl	8003e50 <memset>
	if (technology == SARA_LTEM){
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	2b07      	cmp	r3, #7
 800072a:	d103      	bne.n	8000734 <prepareSaraMeasurement+0x20>
		strcpy(SaraMeasurements,LTEMTechName);
 800072c:	4920      	ldr	r1, [pc, #128]	; (80007b0 <prepareSaraMeasurement+0x9c>)
 800072e:	481f      	ldr	r0, [pc, #124]	; (80007ac <prepareSaraMeasurement+0x98>)
 8000730:	f003 fc33 	bl	8003f9a <strcpy>
	}
	if (technology == SARA_NBIOT){
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	2b08      	cmp	r3, #8
 8000738:	d103      	bne.n	8000742 <prepareSaraMeasurement+0x2e>
		strcpy(SaraMeasurements,NBIoTTechName);
 800073a:	491e      	ldr	r1, [pc, #120]	; (80007b4 <prepareSaraMeasurement+0xa0>)
 800073c:	481b      	ldr	r0, [pc, #108]	; (80007ac <prepareSaraMeasurement+0x98>)
 800073e:	f003 fc2c 	bl	8003f9a <strcpy>
	}

	strcat(SaraMeasurements,currentGPSCoords);
 8000742:	491d      	ldr	r1, [pc, #116]	; (80007b8 <prepareSaraMeasurement+0xa4>)
 8000744:	4819      	ldr	r0, [pc, #100]	; (80007ac <prepareSaraMeasurement+0x98>)
 8000746:	f003 fc19 	bl	8003f7c <strcat>
	strcat(SaraMeasurements,SARARsrpRsrq);
 800074a:	491c      	ldr	r1, [pc, #112]	; (80007bc <prepareSaraMeasurement+0xa8>)
 800074c:	4817      	ldr	r0, [pc, #92]	; (80007ac <prepareSaraMeasurement+0x98>)
 800074e:	f003 fc15 	bl	8003f7c <strcat>
	strcat(SaraMeasurements,",");
 8000752:	4816      	ldr	r0, [pc, #88]	; (80007ac <prepareSaraMeasurement+0x98>)
 8000754:	f7ff fcfc 	bl	8000150 <strlen>
 8000758:	4603      	mov	r3, r0
 800075a:	461a      	mov	r2, r3
 800075c:	4b13      	ldr	r3, [pc, #76]	; (80007ac <prepareSaraMeasurement+0x98>)
 800075e:	4413      	add	r3, r2
 8000760:	4917      	ldr	r1, [pc, #92]	; (80007c0 <prepareSaraMeasurement+0xac>)
 8000762:	461a      	mov	r2, r3
 8000764:	460b      	mov	r3, r1
 8000766:	881b      	ldrh	r3, [r3, #0]
 8000768:	8013      	strh	r3, [r2, #0]
	strcat(SaraMeasurements,SARAcsqResult);
 800076a:	4916      	ldr	r1, [pc, #88]	; (80007c4 <prepareSaraMeasurement+0xb0>)
 800076c:	480f      	ldr	r0, [pc, #60]	; (80007ac <prepareSaraMeasurement+0x98>)
 800076e:	f003 fc05 	bl	8003f7c <strcat>

	memset(currentGPSCoords,'\0',80);
 8000772:	2250      	movs	r2, #80	; 0x50
 8000774:	2100      	movs	r1, #0
 8000776:	4810      	ldr	r0, [pc, #64]	; (80007b8 <prepareSaraMeasurement+0xa4>)
 8000778:	f003 fb6a 	bl	8003e50 <memset>
	memset(SARARsrpRsrq,'\0',6);
 800077c:	2206      	movs	r2, #6
 800077e:	2100      	movs	r1, #0
 8000780:	480e      	ldr	r0, [pc, #56]	; (80007bc <prepareSaraMeasurement+0xa8>)
 8000782:	f003 fb65 	bl	8003e50 <memset>
	memset(SARAcsqResult,'\0',4);
 8000786:	2204      	movs	r2, #4
 8000788:	2100      	movs	r1, #0
 800078a:	480e      	ldr	r0, [pc, #56]	; (80007c4 <prepareSaraMeasurement+0xb0>)
 800078c:	f003 fb60 	bl	8003e50 <memset>

	memset(saraCESQmessage,'\0',70);
 8000790:	2246      	movs	r2, #70	; 0x46
 8000792:	2100      	movs	r1, #0
 8000794:	480c      	ldr	r0, [pc, #48]	; (80007c8 <prepareSaraMeasurement+0xb4>)
 8000796:	f003 fb5b 	bl	8003e50 <memset>
	memset(saraCSQmessage,'\0',50);
 800079a:	2232      	movs	r2, #50	; 0x32
 800079c:	2100      	movs	r1, #0
 800079e:	480b      	ldr	r0, [pc, #44]	; (80007cc <prepareSaraMeasurement+0xb8>)
 80007a0:	f003 fb56 	bl	8003e50 <memset>
}
 80007a4:	bf00      	nop
 80007a6:	3708      	adds	r7, #8
 80007a8:	46bd      	mov	sp, r7
 80007aa:	bd80      	pop	{r7, pc}
 80007ac:	20001300 	.word	0x20001300
 80007b0:	2000007c 	.word	0x2000007c
 80007b4:	20000084 	.word	0x20000084
 80007b8:	2000157c 	.word	0x2000157c
 80007bc:	200015cc 	.word	0x200015cc
 80007c0:	08005318 	.word	0x08005318
 80007c4:	20001448 	.word	0x20001448
 80007c8:	20001380 	.word	0x20001380
 80007cc:	20001514 	.word	0x20001514

080007d0 <NEMEUS_Extract_Lora_Measurements>:

void NEMEUS_Extract_Lora_Measurements(uint8_t * cmd){
 80007d0:	b480      	push	{r7}
 80007d2:	b085      	sub	sp, #20
 80007d4:	af00      	add	r7, sp, #0
 80007d6:	6078      	str	r0, [r7, #4]
	int i = 8; // start after '+MAC: ' also contains 2 more of some ascii stuff???
 80007d8:	2308      	movs	r3, #8
 80007da:	60fb      	str	r3, [r7, #12]
	int j = 0;
 80007dc:	2300      	movs	r3, #0
 80007de:	60bb      	str	r3, [r7, #8]
	//while(i < strlen(cmd) && cmd[i] != '\n' && cmd[i] != '\0'){
	while(i < 69 && cmd[i] != '\n' && cmd[i] != '\0' && cmd[i] != '\r'){
 80007e0:	e00e      	b.n	8000800 <NEMEUS_Extract_Lora_Measurements+0x30>
		currentLoraSignalQuality[j] = cmd[i];
 80007e2:	68fb      	ldr	r3, [r7, #12]
 80007e4:	687a      	ldr	r2, [r7, #4]
 80007e6:	4413      	add	r3, r2
 80007e8:	7819      	ldrb	r1, [r3, #0]
 80007ea:	4a12      	ldr	r2, [pc, #72]	; (8000834 <NEMEUS_Extract_Lora_Measurements+0x64>)
 80007ec:	68bb      	ldr	r3, [r7, #8]
 80007ee:	4413      	add	r3, r2
 80007f0:	460a      	mov	r2, r1
 80007f2:	701a      	strb	r2, [r3, #0]
		i++;
 80007f4:	68fb      	ldr	r3, [r7, #12]
 80007f6:	3301      	adds	r3, #1
 80007f8:	60fb      	str	r3, [r7, #12]
		j++;
 80007fa:	68bb      	ldr	r3, [r7, #8]
 80007fc:	3301      	adds	r3, #1
 80007fe:	60bb      	str	r3, [r7, #8]
	while(i < 69 && cmd[i] != '\n' && cmd[i] != '\0' && cmd[i] != '\r'){
 8000800:	68fb      	ldr	r3, [r7, #12]
 8000802:	2b44      	cmp	r3, #68	; 0x44
 8000804:	dc11      	bgt.n	800082a <NEMEUS_Extract_Lora_Measurements+0x5a>
 8000806:	68fb      	ldr	r3, [r7, #12]
 8000808:	687a      	ldr	r2, [r7, #4]
 800080a:	4413      	add	r3, r2
 800080c:	781b      	ldrb	r3, [r3, #0]
 800080e:	2b0a      	cmp	r3, #10
 8000810:	d00b      	beq.n	800082a <NEMEUS_Extract_Lora_Measurements+0x5a>
 8000812:	68fb      	ldr	r3, [r7, #12]
 8000814:	687a      	ldr	r2, [r7, #4]
 8000816:	4413      	add	r3, r2
 8000818:	781b      	ldrb	r3, [r3, #0]
 800081a:	2b00      	cmp	r3, #0
 800081c:	d005      	beq.n	800082a <NEMEUS_Extract_Lora_Measurements+0x5a>
 800081e:	68fb      	ldr	r3, [r7, #12]
 8000820:	687a      	ldr	r2, [r7, #4]
 8000822:	4413      	add	r3, r2
 8000824:	781b      	ldrb	r3, [r3, #0]
 8000826:	2b0d      	cmp	r3, #13
 8000828:	d1db      	bne.n	80007e2 <NEMEUS_Extract_Lora_Measurements+0x12>
	}
	//sendToESP()
	//currentLoraSignalQuality[j] = '\0';

}
 800082a:	bf00      	nop
 800082c:	3714      	adds	r7, #20
 800082e:	46bd      	mov	sp, r7
 8000830:	bc80      	pop	{r7}
 8000832:	4770      	bx	lr
 8000834:	20001270 	.word	0x20001270

08000838 <NEMEUS_Prepare_Lora_Measurements>:

void NEMEUS_Prepare_Lora_Measurements(){
 8000838:	b580      	push	{r7, lr}
 800083a:	af00      	add	r7, sp, #0

	strcpy(loraMeasurements,loraTechName);
 800083c:	4909      	ldr	r1, [pc, #36]	; (8000864 <NEMEUS_Prepare_Lora_Measurements+0x2c>)
 800083e:	480a      	ldr	r0, [pc, #40]	; (8000868 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 8000840:	f003 fbab 	bl	8003f9a <strcpy>
	strcat(loraMeasurements,currentGPSCoords);
 8000844:	4909      	ldr	r1, [pc, #36]	; (800086c <NEMEUS_Prepare_Lora_Measurements+0x34>)
 8000846:	4808      	ldr	r0, [pc, #32]	; (8000868 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 8000848:	f003 fb98 	bl	8003f7c <strcat>
	strcat(loraMeasurements,currentLoraSignalQuality);
 800084c:	4908      	ldr	r1, [pc, #32]	; (8000870 <NEMEUS_Prepare_Lora_Measurements+0x38>)
 800084e:	4806      	ldr	r0, [pc, #24]	; (8000868 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 8000850:	f003 fb94 	bl	8003f7c <strcat>
	HAL_UART_Transmit(&huart2, endDelim, 1, 50);
	osDelay(50);
	*/


	memset(currentGPSCoords,'\0',80);
 8000854:	2250      	movs	r2, #80	; 0x50
 8000856:	2100      	movs	r1, #0
 8000858:	4804      	ldr	r0, [pc, #16]	; (800086c <NEMEUS_Prepare_Lora_Measurements+0x34>)
 800085a:	f003 faf9 	bl	8003e50 <memset>
}
 800085e:	bf00      	nop
 8000860:	bd80      	pop	{r7, pc}
 8000862:	bf00      	nop
 8000864:	200000d0 	.word	0x200000d0
 8000868:	200013c8 	.word	0x200013c8
 800086c:	2000157c 	.word	0x2000157c
 8000870:	20001270 	.word	0x20001270

08000874 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000874:	b5b0      	push	{r4, r5, r7, lr}
 8000876:	b08a      	sub	sp, #40	; 0x28
 8000878:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800087a:	f000 fd25 	bl	80012c8 <HAL_Init>

  /* USER CODE BEGIN Init */

  srand(time(0));
 800087e:	2000      	movs	r0, #0
 8000880:	f003 fb94 	bl	8003fac <time>
 8000884:	4603      	mov	r3, r0
 8000886:	4618      	mov	r0, r3
 8000888:	f003 faea 	bl	8003e60 <srand>
  int x = rand();
 800088c:	f003 fb16 	bl	8003ebc <rand>
 8000890:	6278      	str	r0, [r7, #36]	; 0x24
  int y = rand();
 8000892:	f003 fb13 	bl	8003ebc <rand>
 8000896:	6238      	str	r0, [r7, #32]
  sprintf(randSeq, "%X", x%16);
 8000898:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800089a:	425a      	negs	r2, r3
 800089c:	f003 030f 	and.w	r3, r3, #15
 80008a0:	f002 020f 	and.w	r2, r2, #15
 80008a4:	bf58      	it	pl
 80008a6:	4253      	negpl	r3, r2
 80008a8:	461a      	mov	r2, r3
 80008aa:	491c      	ldr	r1, [pc, #112]	; (800091c <main+0xa8>)
 80008ac:	481c      	ldr	r0, [pc, #112]	; (8000920 <main+0xac>)
 80008ae:	f003 fb45 	bl	8003f3c <siprintf>
  sprintf(stry, "%X", y%16);
 80008b2:	6a3b      	ldr	r3, [r7, #32]
 80008b4:	425a      	negs	r2, r3
 80008b6:	f003 030f 	and.w	r3, r3, #15
 80008ba:	f002 020f 	and.w	r2, r2, #15
 80008be:	bf58      	it	pl
 80008c0:	4253      	negpl	r3, r2
 80008c2:	461a      	mov	r2, r3
 80008c4:	4915      	ldr	r1, [pc, #84]	; (800091c <main+0xa8>)
 80008c6:	4817      	ldr	r0, [pc, #92]	; (8000924 <main+0xb0>)
 80008c8:	f003 fb38 	bl	8003f3c <siprintf>
  strcat(randSeq, stry);
 80008cc:	4915      	ldr	r1, [pc, #84]	; (8000924 <main+0xb0>)
 80008ce:	4814      	ldr	r0, [pc, #80]	; (8000920 <main+0xac>)
 80008d0:	f003 fb54 	bl	8003f7c <strcat>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80008d4:	f000 f82e 	bl	8000934 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80008d8:	f000 f8e6 	bl	8000aa8 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 80008dc:	f000 f866 	bl	80009ac <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 80008e0:	f000 f88e 	bl	8000a00 <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 80008e4:	f000 f8b6 	bl	8000a54 <MX_USART3_UART_Init>
  /* USER CODE BEGIN 2 */

  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 80008e8:	2201      	movs	r2, #1
 80008ea:	f44f 7180 	mov.w	r1, #256	; 0x100
 80008ee:	480e      	ldr	r0, [pc, #56]	; (8000928 <main+0xb4>)
 80008f0:	f000 ff80 	bl	80017f4 <HAL_GPIO_WritePin>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 80008f4:	4b0d      	ldr	r3, [pc, #52]	; (800092c <main+0xb8>)
 80008f6:	1d3c      	adds	r4, r7, #4
 80008f8:	461d      	mov	r5, r3
 80008fa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80008fc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80008fe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000902:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8000906:	1d3b      	adds	r3, r7, #4
 8000908:	2100      	movs	r1, #0
 800090a:	4618      	mov	r0, r3
 800090c:	f002 f8ac 	bl	8002a68 <osThreadCreate>
 8000910:	4603      	mov	r3, r0
 8000912:	4a07      	ldr	r2, [pc, #28]	; (8000930 <main+0xbc>)
 8000914:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 8000916:	f002 f8a0 	bl	8002a5a <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800091a:	e7fe      	b.n	800091a <main+0xa6>
 800091c:	0800531c 	.word	0x0800531c
 8000920:	200015d4 	.word	0x200015d4
 8000924:	20001450 	.word	0x20001450
 8000928:	40010800 	.word	0x40010800
 800092c:	08005320 	.word	0x08005320
 8000930:	200011a0 	.word	0x200011a0

08000934 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000934:	b580      	push	{r7, lr}
 8000936:	b090      	sub	sp, #64	; 0x40
 8000938:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800093a:	f107 0318 	add.w	r3, r7, #24
 800093e:	2228      	movs	r2, #40	; 0x28
 8000940:	2100      	movs	r1, #0
 8000942:	4618      	mov	r0, r3
 8000944:	f003 fa84 	bl	8003e50 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000948:	1d3b      	adds	r3, r7, #4
 800094a:	2200      	movs	r2, #0
 800094c:	601a      	str	r2, [r3, #0]
 800094e:	605a      	str	r2, [r3, #4]
 8000950:	609a      	str	r2, [r3, #8]
 8000952:	60da      	str	r2, [r3, #12]
 8000954:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000956:	2302      	movs	r3, #2
 8000958:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800095a:	2301      	movs	r3, #1
 800095c:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800095e:	2310      	movs	r3, #16
 8000960:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000962:	2300      	movs	r3, #0
 8000964:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000966:	f107 0318 	add.w	r3, r7, #24
 800096a:	4618      	mov	r0, r3
 800096c:	f000 ff74 	bl	8001858 <HAL_RCC_OscConfig>
 8000970:	4603      	mov	r3, r0
 8000972:	2b00      	cmp	r3, #0
 8000974:	d001      	beq.n	800097a <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000976:	f000 fa47 	bl	8000e08 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800097a:	230f      	movs	r3, #15
 800097c:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800097e:	2300      	movs	r3, #0
 8000980:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000982:	2300      	movs	r3, #0
 8000984:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000986:	2300      	movs	r3, #0
 8000988:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800098a:	2300      	movs	r3, #0
 800098c:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800098e:	1d3b      	adds	r3, r7, #4
 8000990:	2100      	movs	r1, #0
 8000992:	4618      	mov	r0, r3
 8000994:	f001 f9e0 	bl	8001d58 <HAL_RCC_ClockConfig>
 8000998:	4603      	mov	r3, r0
 800099a:	2b00      	cmp	r3, #0
 800099c:	d001      	beq.n	80009a2 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 800099e:	f000 fa33 	bl	8000e08 <Error_Handler>
  }
}
 80009a2:	bf00      	nop
 80009a4:	3740      	adds	r7, #64	; 0x40
 80009a6:	46bd      	mov	sp, r7
 80009a8:	bd80      	pop	{r7, pc}
	...

080009ac <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80009ac:	b580      	push	{r7, lr}
 80009ae:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80009b0:	4b11      	ldr	r3, [pc, #68]	; (80009f8 <MX_USART1_UART_Init+0x4c>)
 80009b2:	4a12      	ldr	r2, [pc, #72]	; (80009fc <MX_USART1_UART_Init+0x50>)
 80009b4:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 57600;
 80009b6:	4b10      	ldr	r3, [pc, #64]	; (80009f8 <MX_USART1_UART_Init+0x4c>)
 80009b8:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 80009bc:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80009be:	4b0e      	ldr	r3, [pc, #56]	; (80009f8 <MX_USART1_UART_Init+0x4c>)
 80009c0:	2200      	movs	r2, #0
 80009c2:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80009c4:	4b0c      	ldr	r3, [pc, #48]	; (80009f8 <MX_USART1_UART_Init+0x4c>)
 80009c6:	2200      	movs	r2, #0
 80009c8:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80009ca:	4b0b      	ldr	r3, [pc, #44]	; (80009f8 <MX_USART1_UART_Init+0x4c>)
 80009cc:	2200      	movs	r2, #0
 80009ce:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80009d0:	4b09      	ldr	r3, [pc, #36]	; (80009f8 <MX_USART1_UART_Init+0x4c>)
 80009d2:	220c      	movs	r2, #12
 80009d4:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80009d6:	4b08      	ldr	r3, [pc, #32]	; (80009f8 <MX_USART1_UART_Init+0x4c>)
 80009d8:	2200      	movs	r2, #0
 80009da:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80009dc:	4b06      	ldr	r3, [pc, #24]	; (80009f8 <MX_USART1_UART_Init+0x4c>)
 80009de:	2200      	movs	r2, #0
 80009e0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80009e2:	4805      	ldr	r0, [pc, #20]	; (80009f8 <MX_USART1_UART_Init+0x4c>)
 80009e4:	f001 fdcc 	bl	8002580 <HAL_UART_Init>
 80009e8:	4603      	mov	r3, r0
 80009ea:	2b00      	cmp	r3, #0
 80009ec:	d001      	beq.n	80009f2 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80009ee:	f000 fa0b 	bl	8000e08 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80009f2:	bf00      	nop
 80009f4:	bd80      	pop	{r7, pc}
 80009f6:	bf00      	nop
 80009f8:	200012bc 	.word	0x200012bc
 80009fc:	40013800 	.word	0x40013800

08000a00 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000a00:	b580      	push	{r7, lr}
 8000a02:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000a04:	4b11      	ldr	r3, [pc, #68]	; (8000a4c <MX_USART2_UART_Init+0x4c>)
 8000a06:	4a12      	ldr	r2, [pc, #72]	; (8000a50 <MX_USART2_UART_Init+0x50>)
 8000a08:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 57600;
 8000a0a:	4b10      	ldr	r3, [pc, #64]	; (8000a4c <MX_USART2_UART_Init+0x4c>)
 8000a0c:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 8000a10:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000a12:	4b0e      	ldr	r3, [pc, #56]	; (8000a4c <MX_USART2_UART_Init+0x4c>)
 8000a14:	2200      	movs	r2, #0
 8000a16:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000a18:	4b0c      	ldr	r3, [pc, #48]	; (8000a4c <MX_USART2_UART_Init+0x4c>)
 8000a1a:	2200      	movs	r2, #0
 8000a1c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000a1e:	4b0b      	ldr	r3, [pc, #44]	; (8000a4c <MX_USART2_UART_Init+0x4c>)
 8000a20:	2200      	movs	r2, #0
 8000a22:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000a24:	4b09      	ldr	r3, [pc, #36]	; (8000a4c <MX_USART2_UART_Init+0x4c>)
 8000a26:	220c      	movs	r2, #12
 8000a28:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000a2a:	4b08      	ldr	r3, [pc, #32]	; (8000a4c <MX_USART2_UART_Init+0x4c>)
 8000a2c:	2200      	movs	r2, #0
 8000a2e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000a30:	4b06      	ldr	r3, [pc, #24]	; (8000a4c <MX_USART2_UART_Init+0x4c>)
 8000a32:	2200      	movs	r2, #0
 8000a34:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000a36:	4805      	ldr	r0, [pc, #20]	; (8000a4c <MX_USART2_UART_Init+0x4c>)
 8000a38:	f001 fda2 	bl	8002580 <HAL_UART_Init>
 8000a3c:	4603      	mov	r3, r0
 8000a3e:	2b00      	cmp	r3, #0
 8000a40:	d001      	beq.n	8000a46 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000a42:	f000 f9e1 	bl	8000e08 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000a46:	bf00      	nop
 8000a48:	bd80      	pop	{r7, pc}
 8000a4a:	bf00      	nop
 8000a4c:	200014d4 	.word	0x200014d4
 8000a50:	40004400 	.word	0x40004400

08000a54 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8000a54:	b580      	push	{r7, lr}
 8000a56:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8000a58:	4b11      	ldr	r3, [pc, #68]	; (8000aa0 <MX_USART3_UART_Init+0x4c>)
 8000a5a:	4a12      	ldr	r2, [pc, #72]	; (8000aa4 <MX_USART3_UART_Init+0x50>)
 8000a5c:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 38400;
 8000a5e:	4b10      	ldr	r3, [pc, #64]	; (8000aa0 <MX_USART3_UART_Init+0x4c>)
 8000a60:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 8000a64:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8000a66:	4b0e      	ldr	r3, [pc, #56]	; (8000aa0 <MX_USART3_UART_Init+0x4c>)
 8000a68:	2200      	movs	r2, #0
 8000a6a:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8000a6c:	4b0c      	ldr	r3, [pc, #48]	; (8000aa0 <MX_USART3_UART_Init+0x4c>)
 8000a6e:	2200      	movs	r2, #0
 8000a70:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8000a72:	4b0b      	ldr	r3, [pc, #44]	; (8000aa0 <MX_USART3_UART_Init+0x4c>)
 8000a74:	2200      	movs	r2, #0
 8000a76:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8000a78:	4b09      	ldr	r3, [pc, #36]	; (8000aa0 <MX_USART3_UART_Init+0x4c>)
 8000a7a:	220c      	movs	r2, #12
 8000a7c:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000a7e:	4b08      	ldr	r3, [pc, #32]	; (8000aa0 <MX_USART3_UART_Init+0x4c>)
 8000a80:	2200      	movs	r2, #0
 8000a82:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8000a84:	4b06      	ldr	r3, [pc, #24]	; (8000aa0 <MX_USART3_UART_Init+0x4c>)
 8000a86:	2200      	movs	r2, #0
 8000a88:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8000a8a:	4805      	ldr	r0, [pc, #20]	; (8000aa0 <MX_USART3_UART_Init+0x4c>)
 8000a8c:	f001 fd78 	bl	8002580 <HAL_UART_Init>
 8000a90:	4603      	mov	r3, r0
 8000a92:	2b00      	cmp	r3, #0
 8000a94:	d001      	beq.n	8000a9a <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8000a96:	f000 f9b7 	bl	8000e08 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8000a9a:	bf00      	nop
 8000a9c:	bd80      	pop	{r7, pc}
 8000a9e:	bf00      	nop
 8000aa0:	200011a4 	.word	0x200011a4
 8000aa4:	40004800 	.word	0x40004800

08000aa8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000aa8:	b580      	push	{r7, lr}
 8000aaa:	b088      	sub	sp, #32
 8000aac:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000aae:	f107 0310 	add.w	r3, r7, #16
 8000ab2:	2200      	movs	r2, #0
 8000ab4:	601a      	str	r2, [r3, #0]
 8000ab6:	605a      	str	r2, [r3, #4]
 8000ab8:	609a      	str	r2, [r3, #8]
 8000aba:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000abc:	4b28      	ldr	r3, [pc, #160]	; (8000b60 <MX_GPIO_Init+0xb8>)
 8000abe:	699b      	ldr	r3, [r3, #24]
 8000ac0:	4a27      	ldr	r2, [pc, #156]	; (8000b60 <MX_GPIO_Init+0xb8>)
 8000ac2:	f043 0310 	orr.w	r3, r3, #16
 8000ac6:	6193      	str	r3, [r2, #24]
 8000ac8:	4b25      	ldr	r3, [pc, #148]	; (8000b60 <MX_GPIO_Init+0xb8>)
 8000aca:	699b      	ldr	r3, [r3, #24]
 8000acc:	f003 0310 	and.w	r3, r3, #16
 8000ad0:	60fb      	str	r3, [r7, #12]
 8000ad2:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ad4:	4b22      	ldr	r3, [pc, #136]	; (8000b60 <MX_GPIO_Init+0xb8>)
 8000ad6:	699b      	ldr	r3, [r3, #24]
 8000ad8:	4a21      	ldr	r2, [pc, #132]	; (8000b60 <MX_GPIO_Init+0xb8>)
 8000ada:	f043 0304 	orr.w	r3, r3, #4
 8000ade:	6193      	str	r3, [r2, #24]
 8000ae0:	4b1f      	ldr	r3, [pc, #124]	; (8000b60 <MX_GPIO_Init+0xb8>)
 8000ae2:	699b      	ldr	r3, [r3, #24]
 8000ae4:	f003 0304 	and.w	r3, r3, #4
 8000ae8:	60bb      	str	r3, [r7, #8]
 8000aea:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000aec:	4b1c      	ldr	r3, [pc, #112]	; (8000b60 <MX_GPIO_Init+0xb8>)
 8000aee:	699b      	ldr	r3, [r3, #24]
 8000af0:	4a1b      	ldr	r2, [pc, #108]	; (8000b60 <MX_GPIO_Init+0xb8>)
 8000af2:	f043 0308 	orr.w	r3, r3, #8
 8000af6:	6193      	str	r3, [r2, #24]
 8000af8:	4b19      	ldr	r3, [pc, #100]	; (8000b60 <MX_GPIO_Init+0xb8>)
 8000afa:	699b      	ldr	r3, [r3, #24]
 8000afc:	f003 0308 	and.w	r3, r3, #8
 8000b00:	607b      	str	r3, [r7, #4]
 8000b02:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8000b04:	2200      	movs	r2, #0
 8000b06:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000b0a:	4816      	ldr	r0, [pc, #88]	; (8000b64 <MX_GPIO_Init+0xbc>)
 8000b0c:	f000 fe72 	bl	80017f4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8000b10:	2200      	movs	r2, #0
 8000b12:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000b16:	4814      	ldr	r0, [pc, #80]	; (8000b68 <MX_GPIO_Init+0xc0>)
 8000b18:	f000 fe6c 	bl	80017f4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000b1c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000b20:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b22:	2301      	movs	r3, #1
 8000b24:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b26:	2300      	movs	r3, #0
 8000b28:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b2a:	2302      	movs	r3, #2
 8000b2c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000b2e:	f107 0310 	add.w	r3, r7, #16
 8000b32:	4619      	mov	r1, r3
 8000b34:	480b      	ldr	r0, [pc, #44]	; (8000b64 <MX_GPIO_Init+0xbc>)
 8000b36:	f000 fcd9 	bl	80014ec <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000b3a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000b3e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b40:	2301      	movs	r3, #1
 8000b42:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b44:	2300      	movs	r3, #0
 8000b46:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b48:	2302      	movs	r3, #2
 8000b4a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b4c:	f107 0310 	add.w	r3, r7, #16
 8000b50:	4619      	mov	r1, r3
 8000b52:	4805      	ldr	r0, [pc, #20]	; (8000b68 <MX_GPIO_Init+0xc0>)
 8000b54:	f000 fcca 	bl	80014ec <HAL_GPIO_Init>

}
 8000b58:	bf00      	nop
 8000b5a:	3720      	adds	r7, #32
 8000b5c:	46bd      	mov	sp, r7
 8000b5e:	bd80      	pop	{r7, pc}
 8000b60:	40021000 	.word	0x40021000
 8000b64:	40011000 	.word	0x40011000
 8000b68:	40010800 	.word	0x40010800

08000b6c <sendToESP>:

/* USER CODE BEGIN 4 */

void sendToESP(uint8_t * msg) {
 8000b6c:	b580      	push	{r7, lr}
 8000b6e:	b082      	sub	sp, #8
 8000b70:	af00      	add	r7, sp, #0
 8000b72:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart2, beginDelim, 1, 50);
 8000b74:	2332      	movs	r3, #50	; 0x32
 8000b76:	2201      	movs	r2, #1
 8000b78:	490b      	ldr	r1, [pc, #44]	; (8000ba8 <sendToESP+0x3c>)
 8000b7a:	480c      	ldr	r0, [pc, #48]	; (8000bac <sendToESP+0x40>)
 8000b7c:	f001 fd4d 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, msg, strlen(msg), 50);
 8000b80:	6878      	ldr	r0, [r7, #4]
 8000b82:	f7ff fae5 	bl	8000150 <strlen>
 8000b86:	4603      	mov	r3, r0
 8000b88:	b29a      	uxth	r2, r3
 8000b8a:	2332      	movs	r3, #50	; 0x32
 8000b8c:	6879      	ldr	r1, [r7, #4]
 8000b8e:	4807      	ldr	r0, [pc, #28]	; (8000bac <sendToESP+0x40>)
 8000b90:	f001 fd43 	bl	800261a <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, endDelim, 1, 50);
 8000b94:	2332      	movs	r3, #50	; 0x32
 8000b96:	2201      	movs	r2, #1
 8000b98:	4905      	ldr	r1, [pc, #20]	; (8000bb0 <sendToESP+0x44>)
 8000b9a:	4804      	ldr	r0, [pc, #16]	; (8000bac <sendToESP+0x40>)
 8000b9c:	f001 fd3d 	bl	800261a <HAL_UART_Transmit>
}
 8000ba0:	bf00      	nop
 8000ba2:	3708      	adds	r7, #8
 8000ba4:	46bd      	mov	sp, r7
 8000ba6:	bd80      	pop	{r7, pc}
 8000ba8:	200000d8 	.word	0x200000d8
 8000bac:	200014d4 	.word	0x200014d4
 8000bb0:	200000dc 	.word	0x200000dc

08000bb4 <collectAndTransmitSARAMeasurement>:
	return 0;
}
*/


void collectAndTransmitSARAMeasurement(int sara_technology){
 8000bb4:	b580      	push	{r7, lr}
 8000bb6:	b082      	sub	sp, #8
 8000bb8:	af00      	add	r7, sp, #0
 8000bba:	6078      	str	r0, [r7, #4]

	//if (verifySaraTechnology(sara_technology) == 0){
	//	sendToESP("ERROR: unexpected URAT value");
	//}

    if (sara_technology == SARA_LTEM){
 8000bbc:	687b      	ldr	r3, [r7, #4]
 8000bbe:	2b07      	cmp	r3, #7
 8000bc0:	d103      	bne.n	8000bca <collectAndTransmitSARAMeasurement+0x16>
    	SARA_ChangeTech('7');
 8000bc2:	2037      	movs	r0, #55	; 0x37
 8000bc4:	f7ff fbd0 	bl	8000368 <SARA_ChangeTech>
 8000bc8:	e005      	b.n	8000bd6 <collectAndTransmitSARAMeasurement+0x22>
    }
    else if (sara_technology == SARA_NBIOT){
 8000bca:	687b      	ldr	r3, [r7, #4]
 8000bcc:	2b08      	cmp	r3, #8
 8000bce:	d102      	bne.n	8000bd6 <collectAndTransmitSARAMeasurement+0x22>
    	SARA_ChangeTech('9');
 8000bd0:	2039      	movs	r0, #57	; 0x39
 8000bd2:	f7ff fbc9 	bl	8000368 <SARA_ChangeTech>
    }

    HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 8000bd6:	481b      	ldr	r0, [pc, #108]	; (8000c44 <collectAndTransmitSARAMeasurement+0x90>)
 8000bd8:	f7ff faba 	bl	8000150 <strlen>
 8000bdc:	4603      	mov	r3, r0
 8000bde:	b29a      	uxth	r2, r3
 8000be0:	2332      	movs	r3, #50	; 0x32
 8000be2:	4918      	ldr	r1, [pc, #96]	; (8000c44 <collectAndTransmitSARAMeasurement+0x90>)
 8000be4:	4818      	ldr	r0, [pc, #96]	; (8000c48 <collectAndTransmitSARAMeasurement+0x94>)
 8000be6:	f001 fd18 	bl	800261a <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCESQmessage, 70, 150);
 8000bea:	2396      	movs	r3, #150	; 0x96
 8000bec:	2246      	movs	r2, #70	; 0x46
 8000bee:	4917      	ldr	r1, [pc, #92]	; (8000c4c <collectAndTransmitSARAMeasurement+0x98>)
 8000bf0:	4815      	ldr	r0, [pc, #84]	; (8000c48 <collectAndTransmitSARAMeasurement+0x94>)
 8000bf2:	f001 fda4 	bl	800273e <HAL_UART_Receive>
    getResultParameterCESQ(4, saraCESQmessage);
 8000bf6:	4915      	ldr	r1, [pc, #84]	; (8000c4c <collectAndTransmitSARAMeasurement+0x98>)
 8000bf8:	2004      	movs	r0, #4
 8000bfa:	f7ff fcad 	bl	8000558 <getResultParameterCESQ>

    HAL_UART_Transmit(&huart1, SARAcsq, strlen(SARAcsq), 50);
 8000bfe:	4814      	ldr	r0, [pc, #80]	; (8000c50 <collectAndTransmitSARAMeasurement+0x9c>)
 8000c00:	f7ff faa6 	bl	8000150 <strlen>
 8000c04:	4603      	mov	r3, r0
 8000c06:	b29a      	uxth	r2, r3
 8000c08:	2332      	movs	r3, #50	; 0x32
 8000c0a:	4911      	ldr	r1, [pc, #68]	; (8000c50 <collectAndTransmitSARAMeasurement+0x9c>)
 8000c0c:	480e      	ldr	r0, [pc, #56]	; (8000c48 <collectAndTransmitSARAMeasurement+0x94>)
 8000c0e:	f001 fd04 	bl	800261a <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCSQmessage, 50, 150);
 8000c12:	2396      	movs	r3, #150	; 0x96
 8000c14:	2232      	movs	r2, #50	; 0x32
 8000c16:	490f      	ldr	r1, [pc, #60]	; (8000c54 <collectAndTransmitSARAMeasurement+0xa0>)
 8000c18:	480b      	ldr	r0, [pc, #44]	; (8000c48 <collectAndTransmitSARAMeasurement+0x94>)
 8000c1a:	f001 fd90 	bl	800273e <HAL_UART_Receive>

    getCSQResult(saraCSQmessage);
 8000c1e:	480d      	ldr	r0, [pc, #52]	; (8000c54 <collectAndTransmitSARAMeasurement+0xa0>)
 8000c20:	f7ff fcf0 	bl	8000604 <getCSQResult>

    osDelay(500);
 8000c24:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000c28:	f001 ff6a 	bl	8002b00 <osDelay>

    getGPSCoordinates();
 8000c2c:	f7ff fd24 	bl	8000678 <getGPSCoordinates>
    prepareSaraMeasurement(sara_technology);
 8000c30:	6878      	ldr	r0, [r7, #4]
 8000c32:	f7ff fd6f 	bl	8000714 <prepareSaraMeasurement>
    sendToESP(SaraMeasurements);
 8000c36:	4808      	ldr	r0, [pc, #32]	; (8000c58 <collectAndTransmitSARAMeasurement+0xa4>)
 8000c38:	f7ff ff98 	bl	8000b6c <sendToESP>
}
 8000c3c:	bf00      	nop
 8000c3e:	3708      	adds	r7, #8
 8000c40:	46bd      	mov	sp, r7
 8000c42:	bd80      	pop	{r7, pc}
 8000c44:	20000060 	.word	0x20000060
 8000c48:	200012bc 	.word	0x200012bc
 8000c4c:	20001380 	.word	0x20001380
 8000c50:	20000054 	.word	0x20000054
 8000c54:	20001514 	.word	0x20001514
 8000c58:	20001300 	.word	0x20001300

08000c5c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 8000c5c:	b590      	push	{r4, r7, lr}
 8000c5e:	b0bf      	sub	sp, #252	; 0xfc
 8000c60:	af00      	add	r7, sp, #0
 8000c62:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */

  uint8_t test[] = "AT+COPS?\r\n";
 8000c64:	4a50      	ldr	r2, [pc, #320]	; (8000da8 <StartDefaultTask+0x14c>)
 8000c66:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8000c6a:	ca07      	ldmia	r2, {r0, r1, r2}
 8000c6c:	c303      	stmia	r3!, {r0, r1}
 8000c6e:	801a      	strh	r2, [r3, #0]
 8000c70:	3302      	adds	r3, #2
 8000c72:	0c12      	lsrs	r2, r2, #16
 8000c74:	701a      	strb	r2, [r3, #0]
  uint8_t test2[] = "AT+MAC=ON\r\n";
 8000c76:	4a4d      	ldr	r2, [pc, #308]	; (8000dac <StartDefaultTask+0x150>)
 8000c78:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 8000c7c:	ca07      	ldmia	r2, {r0, r1, r2}
 8000c7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  uint8_t debugTest[] = "AT+DEBUG=ME?";
 8000c82:	4b4b      	ldr	r3, [pc, #300]	; (8000db0 <StartDefaultTask+0x154>)
 8000c84:	f107 04d0 	add.w	r4, r7, #208	; 0xd0
 8000c88:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000c8a:	c407      	stmia	r4!, {r0, r1, r2}
 8000c8c:	7023      	strb	r3, [r4, #0]
  uint8_t loopDone[] = "Loop done\r\n";
 8000c8e:	4a49      	ldr	r2, [pc, #292]	; (8000db4 <StartDefaultTask+0x158>)
 8000c90:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8000c94:	ca07      	ldmia	r2, {r0, r1, r2}
 8000c96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  sendToESP(debugTest);
 8000c9a:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 8000c9e:	4618      	mov	r0, r3
 8000ca0:	f7ff ff64 	bl	8000b6c <sendToESP>
  osDelay(4500);
 8000ca4:	f241 1094 	movw	r0, #4500	; 0x1194
 8000ca8:	f001 ff2a 	bl	8002b00 <osDelay>
  SARA_Init();
 8000cac:	f7ff fa70 	bl	8000190 <SARA_Init>
  nemeus_Power_Cycle();
 8000cb0:	f7ff fae4 	bl	800027c <nemeus_Power_Cycle>

  //uint8_t sigfoxSend[23] = "AT+SF=SNDBIN,";
  uint8_t sigfoxSend[30];
  uint8_t sigfoxEnd[] = ",0\r\n";
 8000cb4:	4a40      	ldr	r2, [pc, #256]	; (8000db8 <StartDefaultTask+0x15c>)
 8000cb6:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8000cba:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000cbe:	6018      	str	r0, [r3, #0]
 8000cc0:	3304      	adds	r3, #4
 8000cc2:	7019      	strb	r1, [r3, #0]
  uint8_t SigFoxMessage[69];
  //uint8_t saraMSG[69];

  for(;;)
  {
    osDelay(1000);
 8000cc4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000cc8:	f001 ff1a 	bl	8002b00 <osDelay>
    //sendToESP(test);
    HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 8000ccc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000cd0:	483a      	ldr	r0, [pc, #232]	; (8000dbc <StartDefaultTask+0x160>)
 8000cd2:	f000 fda7 	bl	8001824 <HAL_GPIO_TogglePin>
*/
    //sendToESP(SARARsrpRsrq);



    collectAndTransmitSARAMeasurement(SARA_LTEM);
 8000cd6:	2007      	movs	r0, #7
 8000cd8:	f7ff ff6c 	bl	8000bb4 <collectAndTransmitSARAMeasurement>
    osDelay(1000);
 8000cdc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000ce0:	f001 ff0e 	bl	8002b00 <osDelay>

    collectAndTransmitSARAMeasurement(SARA_NBIOT);
 8000ce4:	2008      	movs	r0, #8
 8000ce6:	f7ff ff65 	bl	8000bb4 <collectAndTransmitSARAMeasurement>
    osDelay(500);
 8000cea:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000cee:	f001 ff07 	bl	8002b00 <osDelay>


// **** NEMEUS STUFF ****
// **********************

    HAL_UART_Transmit(&huart3, getLoraLCR, strlen(getLoraLCR), 50);
 8000cf2:	4833      	ldr	r0, [pc, #204]	; (8000dc0 <StartDefaultTask+0x164>)
 8000cf4:	f7ff fa2c 	bl	8000150 <strlen>
 8000cf8:	4603      	mov	r3, r0
 8000cfa:	b29a      	uxth	r2, r3
 8000cfc:	2332      	movs	r3, #50	; 0x32
 8000cfe:	4930      	ldr	r1, [pc, #192]	; (8000dc0 <StartDefaultTask+0x164>)
 8000d00:	4830      	ldr	r0, [pc, #192]	; (8000dc4 <StartDefaultTask+0x168>)
 8000d02:	f001 fc8a 	bl	800261a <HAL_UART_Transmit>
    HAL_UART_Receive(&huart3, LoRaMessage, 69, 10000);
 8000d06:	f107 0154 	add.w	r1, r7, #84	; 0x54
 8000d0a:	f242 7310 	movw	r3, #10000	; 0x2710
 8000d0e:	2245      	movs	r2, #69	; 0x45
 8000d10:	482c      	ldr	r0, [pc, #176]	; (8000dc4 <StartDefaultTask+0x168>)
 8000d12:	f001 fd14 	bl	800273e <HAL_UART_Receive>
    NEMEUS_Extract_Lora_Measurements(LoRaMessage);
 8000d16:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8000d1a:	4618      	mov	r0, r3
 8000d1c:	f7ff fd58 	bl	80007d0 <NEMEUS_Extract_Lora_Measurements>
    // Get Coords:
    /*
    HAL_UART_Transmit(&huart1, getGPSCoords, strlen(getGPSCoords), 50);
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
	*/
    getGPSCoordinates();
 8000d20:	f7ff fcaa 	bl	8000678 <getGPSCoordinates>
    //sendToESP(currentGPSCoords);
    osDelay(500);
 8000d24:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000d28:	f001 feea 	bl	8002b00 <osDelay>


    NEMEUS_Prepare_Lora_Measurements();
 8000d2c:	f7ff fd84 	bl	8000838 <NEMEUS_Prepare_Lora_Measurements>

    sendToESP(loraMeasurements);
 8000d30:	4825      	ldr	r0, [pc, #148]	; (8000dc8 <StartDefaultTask+0x16c>)
 8000d32:	f7ff ff1b 	bl	8000b6c <sendToESP>
    sendToESP(currentGPSCoords);
*/

	// BARE SÅ TTL OUTPUT ER LIDT PÆNERE!!!!
	//HAL_UART_Transmit(&huart2, loopDone, strlen(loopDone), 50);
    HAL_UART_Transmit(&huart2, crlf, strlen(crlf), 50);
 8000d36:	2332      	movs	r3, #50	; 0x32
 8000d38:	2202      	movs	r2, #2
 8000d3a:	4924      	ldr	r1, [pc, #144]	; (8000dcc <StartDefaultTask+0x170>)
 8000d3c:	4824      	ldr	r0, [pc, #144]	; (8000dd0 <StartDefaultTask+0x174>)
 8000d3e:	f001 fc6c 	bl	800261a <HAL_UART_Transmit>

    //osDelay(1000);
    //nemeus_Power_Cycle();

	osDelay(50);
 8000d42:	2032      	movs	r0, #50	; 0x32
 8000d44:	f001 fedc 	bl	8002b00 <osDelay>
    //memset(saraMSG,'\0', 69);
	memset(SigFoxMessage, '\0', 69);
 8000d48:	f107 030c 	add.w	r3, r7, #12
 8000d4c:	2245      	movs	r2, #69	; 0x45
 8000d4e:	2100      	movs	r1, #0
 8000d50:	4618      	mov	r0, r3
 8000d52:	f003 f87d 	bl	8003e50 <memset>
	memset(LoRaMessage, '\0', 69);
 8000d56:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8000d5a:	2245      	movs	r2, #69	; 0x45
 8000d5c:	2100      	movs	r1, #0
 8000d5e:	4618      	mov	r0, r3
 8000d60:	f003 f876 	bl	8003e50 <memset>
	memset(currentGPSCoords,'\0',80);
 8000d64:	2250      	movs	r2, #80	; 0x50
 8000d66:	2100      	movs	r1, #0
 8000d68:	481a      	ldr	r0, [pc, #104]	; (8000dd4 <StartDefaultTask+0x178>)
 8000d6a:	f003 f871 	bl	8003e50 <memset>
	memset(currentLoraSignalQuality,'\0',69);
 8000d6e:	2245      	movs	r2, #69	; 0x45
 8000d70:	2100      	movs	r1, #0
 8000d72:	4819      	ldr	r0, [pc, #100]	; (8000dd8 <StartDefaultTask+0x17c>)
 8000d74:	f003 f86c 	bl	8003e50 <memset>
	memset(loraMeasurements,'\0',128);
 8000d78:	2280      	movs	r2, #128	; 0x80
 8000d7a:	2100      	movs	r1, #0
 8000d7c:	4812      	ldr	r0, [pc, #72]	; (8000dc8 <StartDefaultTask+0x16c>)
 8000d7e:	f003 f867 	bl	8003e50 <memset>
	memset(sigfoxMeasurements,'\0',128);
 8000d82:	2280      	movs	r2, #128	; 0x80
 8000d84:	2100      	movs	r1, #0
 8000d86:	4815      	ldr	r0, [pc, #84]	; (8000ddc <StartDefaultTask+0x180>)
 8000d88:	f003 f862 	bl	8003e50 <memset>
	memset(sigfoxSend,'\0',30);
 8000d8c:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8000d90:	221e      	movs	r2, #30
 8000d92:	2100      	movs	r1, #0
 8000d94:	4618      	mov	r0, r3
 8000d96:	f003 f85b 	bl	8003e50 <memset>
	sigFoxSeq++;
 8000d9a:	4b11      	ldr	r3, [pc, #68]	; (8000de0 <StartDefaultTask+0x184>)
 8000d9c:	681b      	ldr	r3, [r3, #0]
 8000d9e:	3301      	adds	r3, #1
 8000da0:	4a0f      	ldr	r2, [pc, #60]	; (8000de0 <StartDefaultTask+0x184>)
 8000da2:	6013      	str	r3, [r2, #0]
  {
 8000da4:	e78e      	b.n	8000cc4 <StartDefaultTask+0x68>
 8000da6:	bf00      	nop
 8000da8:	0800533c 	.word	0x0800533c
 8000dac:	08005348 	.word	0x08005348
 8000db0:	08005354 	.word	0x08005354
 8000db4:	08005364 	.word	0x08005364
 8000db8:	08005370 	.word	0x08005370
 8000dbc:	40011000 	.word	0x40011000
 8000dc0:	200000ac 	.word	0x200000ac
 8000dc4:	200011a4 	.word	0x200011a4
 8000dc8:	200013c8 	.word	0x200013c8
 8000dcc:	08005390 	.word	0x08005390
 8000dd0:	200014d4 	.word	0x200014d4
 8000dd4:	2000157c 	.word	0x2000157c
 8000dd8:	20001270 	.word	0x20001270
 8000ddc:	20001454 	.word	0x20001454
 8000de0:	200003c4 	.word	0x200003c4

08000de4 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000de4:	b580      	push	{r7, lr}
 8000de6:	b082      	sub	sp, #8
 8000de8:	af00      	add	r7, sp, #0
 8000dea:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8000dec:	687b      	ldr	r3, [r7, #4]
 8000dee:	681b      	ldr	r3, [r3, #0]
 8000df0:	4a04      	ldr	r2, [pc, #16]	; (8000e04 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000df2:	4293      	cmp	r3, r2
 8000df4:	d101      	bne.n	8000dfa <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000df6:	f000 fa7d 	bl	80012f4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000dfa:	bf00      	nop
 8000dfc:	3708      	adds	r7, #8
 8000dfe:	46bd      	mov	sp, r7
 8000e00:	bd80      	pop	{r7, pc}
 8000e02:	bf00      	nop
 8000e04:	40012c00 	.word	0x40012c00

08000e08 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000e08:	b480      	push	{r7}
 8000e0a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e0c:	b672      	cpsid	i
}
 8000e0e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000e10:	e7fe      	b.n	8000e10 <Error_Handler+0x8>
	...

08000e14 <HAL_MspInit>:
 8000e14:	b580      	push	{r7, lr}
 8000e16:	b084      	sub	sp, #16
 8000e18:	af00      	add	r7, sp, #0
 8000e1a:	4b18      	ldr	r3, [pc, #96]	; (8000e7c <HAL_MspInit+0x68>)
 8000e1c:	699b      	ldr	r3, [r3, #24]
 8000e1e:	4a17      	ldr	r2, [pc, #92]	; (8000e7c <HAL_MspInit+0x68>)
 8000e20:	f043 0301 	orr.w	r3, r3, #1
 8000e24:	6193      	str	r3, [r2, #24]
 8000e26:	4b15      	ldr	r3, [pc, #84]	; (8000e7c <HAL_MspInit+0x68>)
 8000e28:	699b      	ldr	r3, [r3, #24]
 8000e2a:	f003 0301 	and.w	r3, r3, #1
 8000e2e:	60bb      	str	r3, [r7, #8]
 8000e30:	68bb      	ldr	r3, [r7, #8]
 8000e32:	4b12      	ldr	r3, [pc, #72]	; (8000e7c <HAL_MspInit+0x68>)
 8000e34:	69db      	ldr	r3, [r3, #28]
 8000e36:	4a11      	ldr	r2, [pc, #68]	; (8000e7c <HAL_MspInit+0x68>)
 8000e38:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000e3c:	61d3      	str	r3, [r2, #28]
 8000e3e:	4b0f      	ldr	r3, [pc, #60]	; (8000e7c <HAL_MspInit+0x68>)
 8000e40:	69db      	ldr	r3, [r3, #28]
 8000e42:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000e46:	607b      	str	r3, [r7, #4]
 8000e48:	687b      	ldr	r3, [r7, #4]
 8000e4a:	2200      	movs	r2, #0
 8000e4c:	210f      	movs	r1, #15
 8000e4e:	f06f 0001 	mvn.w	r0, #1
 8000e52:	f000 fb20 	bl	8001496 <HAL_NVIC_SetPriority>
 8000e56:	4b0a      	ldr	r3, [pc, #40]	; (8000e80 <HAL_MspInit+0x6c>)
 8000e58:	685b      	ldr	r3, [r3, #4]
 8000e5a:	60fb      	str	r3, [r7, #12]
 8000e5c:	68fb      	ldr	r3, [r7, #12]
 8000e5e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000e62:	60fb      	str	r3, [r7, #12]
 8000e64:	68fb      	ldr	r3, [r7, #12]
 8000e66:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000e6a:	60fb      	str	r3, [r7, #12]
 8000e6c:	4a04      	ldr	r2, [pc, #16]	; (8000e80 <HAL_MspInit+0x6c>)
 8000e6e:	68fb      	ldr	r3, [r7, #12]
 8000e70:	6053      	str	r3, [r2, #4]
 8000e72:	bf00      	nop
 8000e74:	3710      	adds	r7, #16
 8000e76:	46bd      	mov	sp, r7
 8000e78:	bd80      	pop	{r7, pc}
 8000e7a:	bf00      	nop
 8000e7c:	40021000 	.word	0x40021000
 8000e80:	40010000 	.word	0x40010000

08000e84 <HAL_UART_MspInit>:
 8000e84:	b580      	push	{r7, lr}
 8000e86:	b08c      	sub	sp, #48	; 0x30
 8000e88:	af00      	add	r7, sp, #0
 8000e8a:	6078      	str	r0, [r7, #4]
 8000e8c:	f107 0320 	add.w	r3, r7, #32
 8000e90:	2200      	movs	r2, #0
 8000e92:	601a      	str	r2, [r3, #0]
 8000e94:	605a      	str	r2, [r3, #4]
 8000e96:	609a      	str	r2, [r3, #8]
 8000e98:	60da      	str	r2, [r3, #12]
 8000e9a:	687b      	ldr	r3, [r7, #4]
 8000e9c:	681b      	ldr	r3, [r3, #0]
 8000e9e:	4a53      	ldr	r2, [pc, #332]	; (8000fec <HAL_UART_MspInit+0x168>)
 8000ea0:	4293      	cmp	r3, r2
 8000ea2:	d132      	bne.n	8000f0a <HAL_UART_MspInit+0x86>
 8000ea4:	4b52      	ldr	r3, [pc, #328]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000ea6:	699b      	ldr	r3, [r3, #24]
 8000ea8:	4a51      	ldr	r2, [pc, #324]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000eaa:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000eae:	6193      	str	r3, [r2, #24]
 8000eb0:	4b4f      	ldr	r3, [pc, #316]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000eb2:	699b      	ldr	r3, [r3, #24]
 8000eb4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000eb8:	61fb      	str	r3, [r7, #28]
 8000eba:	69fb      	ldr	r3, [r7, #28]
 8000ebc:	4b4c      	ldr	r3, [pc, #304]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000ebe:	699b      	ldr	r3, [r3, #24]
 8000ec0:	4a4b      	ldr	r2, [pc, #300]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000ec2:	f043 0304 	orr.w	r3, r3, #4
 8000ec6:	6193      	str	r3, [r2, #24]
 8000ec8:	4b49      	ldr	r3, [pc, #292]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000eca:	699b      	ldr	r3, [r3, #24]
 8000ecc:	f003 0304 	and.w	r3, r3, #4
 8000ed0:	61bb      	str	r3, [r7, #24]
 8000ed2:	69bb      	ldr	r3, [r7, #24]
 8000ed4:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000ed8:	623b      	str	r3, [r7, #32]
 8000eda:	2302      	movs	r3, #2
 8000edc:	627b      	str	r3, [r7, #36]	; 0x24
 8000ede:	2303      	movs	r3, #3
 8000ee0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000ee2:	f107 0320 	add.w	r3, r7, #32
 8000ee6:	4619      	mov	r1, r3
 8000ee8:	4842      	ldr	r0, [pc, #264]	; (8000ff4 <HAL_UART_MspInit+0x170>)
 8000eea:	f000 faff 	bl	80014ec <HAL_GPIO_Init>
 8000eee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ef2:	623b      	str	r3, [r7, #32]
 8000ef4:	2300      	movs	r3, #0
 8000ef6:	627b      	str	r3, [r7, #36]	; 0x24
 8000ef8:	2300      	movs	r3, #0
 8000efa:	62bb      	str	r3, [r7, #40]	; 0x28
 8000efc:	f107 0320 	add.w	r3, r7, #32
 8000f00:	4619      	mov	r1, r3
 8000f02:	483c      	ldr	r0, [pc, #240]	; (8000ff4 <HAL_UART_MspInit+0x170>)
 8000f04:	f000 faf2 	bl	80014ec <HAL_GPIO_Init>
 8000f08:	e06c      	b.n	8000fe4 <HAL_UART_MspInit+0x160>
 8000f0a:	687b      	ldr	r3, [r7, #4]
 8000f0c:	681b      	ldr	r3, [r3, #0]
 8000f0e:	4a3a      	ldr	r2, [pc, #232]	; (8000ff8 <HAL_UART_MspInit+0x174>)
 8000f10:	4293      	cmp	r3, r2
 8000f12:	d130      	bne.n	8000f76 <HAL_UART_MspInit+0xf2>
 8000f14:	4b36      	ldr	r3, [pc, #216]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f16:	69db      	ldr	r3, [r3, #28]
 8000f18:	4a35      	ldr	r2, [pc, #212]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f1a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000f1e:	61d3      	str	r3, [r2, #28]
 8000f20:	4b33      	ldr	r3, [pc, #204]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f22:	69db      	ldr	r3, [r3, #28]
 8000f24:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000f28:	617b      	str	r3, [r7, #20]
 8000f2a:	697b      	ldr	r3, [r7, #20]
 8000f2c:	4b30      	ldr	r3, [pc, #192]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f2e:	699b      	ldr	r3, [r3, #24]
 8000f30:	4a2f      	ldr	r2, [pc, #188]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f32:	f043 0304 	orr.w	r3, r3, #4
 8000f36:	6193      	str	r3, [r2, #24]
 8000f38:	4b2d      	ldr	r3, [pc, #180]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f3a:	699b      	ldr	r3, [r3, #24]
 8000f3c:	f003 0304 	and.w	r3, r3, #4
 8000f40:	613b      	str	r3, [r7, #16]
 8000f42:	693b      	ldr	r3, [r7, #16]
 8000f44:	2304      	movs	r3, #4
 8000f46:	623b      	str	r3, [r7, #32]
 8000f48:	2302      	movs	r3, #2
 8000f4a:	627b      	str	r3, [r7, #36]	; 0x24
 8000f4c:	2303      	movs	r3, #3
 8000f4e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000f50:	f107 0320 	add.w	r3, r7, #32
 8000f54:	4619      	mov	r1, r3
 8000f56:	4827      	ldr	r0, [pc, #156]	; (8000ff4 <HAL_UART_MspInit+0x170>)
 8000f58:	f000 fac8 	bl	80014ec <HAL_GPIO_Init>
 8000f5c:	2308      	movs	r3, #8
 8000f5e:	623b      	str	r3, [r7, #32]
 8000f60:	2300      	movs	r3, #0
 8000f62:	627b      	str	r3, [r7, #36]	; 0x24
 8000f64:	2300      	movs	r3, #0
 8000f66:	62bb      	str	r3, [r7, #40]	; 0x28
 8000f68:	f107 0320 	add.w	r3, r7, #32
 8000f6c:	4619      	mov	r1, r3
 8000f6e:	4821      	ldr	r0, [pc, #132]	; (8000ff4 <HAL_UART_MspInit+0x170>)
 8000f70:	f000 fabc 	bl	80014ec <HAL_GPIO_Init>
 8000f74:	e036      	b.n	8000fe4 <HAL_UART_MspInit+0x160>
 8000f76:	687b      	ldr	r3, [r7, #4]
 8000f78:	681b      	ldr	r3, [r3, #0]
 8000f7a:	4a20      	ldr	r2, [pc, #128]	; (8000ffc <HAL_UART_MspInit+0x178>)
 8000f7c:	4293      	cmp	r3, r2
 8000f7e:	d131      	bne.n	8000fe4 <HAL_UART_MspInit+0x160>
 8000f80:	4b1b      	ldr	r3, [pc, #108]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f82:	69db      	ldr	r3, [r3, #28]
 8000f84:	4a1a      	ldr	r2, [pc, #104]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f86:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000f8a:	61d3      	str	r3, [r2, #28]
 8000f8c:	4b18      	ldr	r3, [pc, #96]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f8e:	69db      	ldr	r3, [r3, #28]
 8000f90:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8000f94:	60fb      	str	r3, [r7, #12]
 8000f96:	68fb      	ldr	r3, [r7, #12]
 8000f98:	4b15      	ldr	r3, [pc, #84]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f9a:	699b      	ldr	r3, [r3, #24]
 8000f9c:	4a14      	ldr	r2, [pc, #80]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000f9e:	f043 0308 	orr.w	r3, r3, #8
 8000fa2:	6193      	str	r3, [r2, #24]
 8000fa4:	4b12      	ldr	r3, [pc, #72]	; (8000ff0 <HAL_UART_MspInit+0x16c>)
 8000fa6:	699b      	ldr	r3, [r3, #24]
 8000fa8:	f003 0308 	and.w	r3, r3, #8
 8000fac:	60bb      	str	r3, [r7, #8]
 8000fae:	68bb      	ldr	r3, [r7, #8]
 8000fb0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000fb4:	623b      	str	r3, [r7, #32]
 8000fb6:	2302      	movs	r3, #2
 8000fb8:	627b      	str	r3, [r7, #36]	; 0x24
 8000fba:	2303      	movs	r3, #3
 8000fbc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000fbe:	f107 0320 	add.w	r3, r7, #32
 8000fc2:	4619      	mov	r1, r3
 8000fc4:	480e      	ldr	r0, [pc, #56]	; (8001000 <HAL_UART_MspInit+0x17c>)
 8000fc6:	f000 fa91 	bl	80014ec <HAL_GPIO_Init>
 8000fca:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000fce:	623b      	str	r3, [r7, #32]
 8000fd0:	2300      	movs	r3, #0
 8000fd2:	627b      	str	r3, [r7, #36]	; 0x24
 8000fd4:	2300      	movs	r3, #0
 8000fd6:	62bb      	str	r3, [r7, #40]	; 0x28
 8000fd8:	f107 0320 	add.w	r3, r7, #32
 8000fdc:	4619      	mov	r1, r3
 8000fde:	4808      	ldr	r0, [pc, #32]	; (8001000 <HAL_UART_MspInit+0x17c>)
 8000fe0:	f000 fa84 	bl	80014ec <HAL_GPIO_Init>
 8000fe4:	bf00      	nop
 8000fe6:	3730      	adds	r7, #48	; 0x30
 8000fe8:	46bd      	mov	sp, r7
 8000fea:	bd80      	pop	{r7, pc}
 8000fec:	40013800 	.word	0x40013800
 8000ff0:	40021000 	.word	0x40021000
 8000ff4:	40010800 	.word	0x40010800
 8000ff8:	40004400 	.word	0x40004400
 8000ffc:	40004800 	.word	0x40004800
 8001000:	40010c00 	.word	0x40010c00

08001004 <HAL_InitTick>:
 8001004:	b580      	push	{r7, lr}
 8001006:	b08c      	sub	sp, #48	; 0x30
 8001008:	af00      	add	r7, sp, #0
 800100a:	6078      	str	r0, [r7, #4]
 800100c:	2300      	movs	r3, #0
 800100e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001010:	2300      	movs	r3, #0
 8001012:	62bb      	str	r3, [r7, #40]	; 0x28
 8001014:	2200      	movs	r2, #0
 8001016:	6879      	ldr	r1, [r7, #4]
 8001018:	2019      	movs	r0, #25
 800101a:	f000 fa3c 	bl	8001496 <HAL_NVIC_SetPriority>
 800101e:	2019      	movs	r0, #25
 8001020:	f000 fa55 	bl	80014ce <HAL_NVIC_EnableIRQ>
 8001024:	4b1e      	ldr	r3, [pc, #120]	; (80010a0 <HAL_InitTick+0x9c>)
 8001026:	699b      	ldr	r3, [r3, #24]
 8001028:	4a1d      	ldr	r2, [pc, #116]	; (80010a0 <HAL_InitTick+0x9c>)
 800102a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800102e:	6193      	str	r3, [r2, #24]
 8001030:	4b1b      	ldr	r3, [pc, #108]	; (80010a0 <HAL_InitTick+0x9c>)
 8001032:	699b      	ldr	r3, [r3, #24]
 8001034:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8001038:	60fb      	str	r3, [r7, #12]
 800103a:	68fb      	ldr	r3, [r7, #12]
 800103c:	f107 0210 	add.w	r2, r7, #16
 8001040:	f107 0314 	add.w	r3, r7, #20
 8001044:	4611      	mov	r1, r2
 8001046:	4618      	mov	r0, r3
 8001048:	f001 f802 	bl	8002050 <HAL_RCC_GetClockConfig>
 800104c:	f000 ffec 	bl	8002028 <HAL_RCC_GetPCLK2Freq>
 8001050:	62f8      	str	r0, [r7, #44]	; 0x2c
 8001052:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001054:	4a13      	ldr	r2, [pc, #76]	; (80010a4 <HAL_InitTick+0xa0>)
 8001056:	fba2 2303 	umull	r2, r3, r2, r3
 800105a:	0c9b      	lsrs	r3, r3, #18
 800105c:	3b01      	subs	r3, #1
 800105e:	62bb      	str	r3, [r7, #40]	; 0x28
 8001060:	4b11      	ldr	r3, [pc, #68]	; (80010a8 <HAL_InitTick+0xa4>)
 8001062:	4a12      	ldr	r2, [pc, #72]	; (80010ac <HAL_InitTick+0xa8>)
 8001064:	601a      	str	r2, [r3, #0]
 8001066:	4b10      	ldr	r3, [pc, #64]	; (80010a8 <HAL_InitTick+0xa4>)
 8001068:	f240 32e7 	movw	r2, #999	; 0x3e7
 800106c:	60da      	str	r2, [r3, #12]
 800106e:	4a0e      	ldr	r2, [pc, #56]	; (80010a8 <HAL_InitTick+0xa4>)
 8001070:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001072:	6053      	str	r3, [r2, #4]
 8001074:	4b0c      	ldr	r3, [pc, #48]	; (80010a8 <HAL_InitTick+0xa4>)
 8001076:	2200      	movs	r2, #0
 8001078:	611a      	str	r2, [r3, #16]
 800107a:	4b0b      	ldr	r3, [pc, #44]	; (80010a8 <HAL_InitTick+0xa4>)
 800107c:	2200      	movs	r2, #0
 800107e:	609a      	str	r2, [r3, #8]
 8001080:	4809      	ldr	r0, [pc, #36]	; (80010a8 <HAL_InitTick+0xa4>)
 8001082:	f001 f833 	bl	80020ec <HAL_TIM_Base_Init>
 8001086:	4603      	mov	r3, r0
 8001088:	2b00      	cmp	r3, #0
 800108a:	d104      	bne.n	8001096 <HAL_InitTick+0x92>
 800108c:	4806      	ldr	r0, [pc, #24]	; (80010a8 <HAL_InitTick+0xa4>)
 800108e:	f001 f885 	bl	800219c <HAL_TIM_Base_Start_IT>
 8001092:	4603      	mov	r3, r0
 8001094:	e000      	b.n	8001098 <HAL_InitTick+0x94>
 8001096:	2301      	movs	r3, #1
 8001098:	4618      	mov	r0, r3
 800109a:	3730      	adds	r7, #48	; 0x30
 800109c:	46bd      	mov	sp, r7
 800109e:	bd80      	pop	{r7, pc}
 80010a0:	40021000 	.word	0x40021000
 80010a4:	431bde83 	.word	0x431bde83
 80010a8:	200015d8 	.word	0x200015d8
 80010ac:	40012c00 	.word	0x40012c00

080010b0 <NMI_Handler>:
 80010b0:	b480      	push	{r7}
 80010b2:	af00      	add	r7, sp, #0
 80010b4:	e7fe      	b.n	80010b4 <NMI_Handler+0x4>

080010b6 <HardFault_Handler>:
 80010b6:	b480      	push	{r7}
 80010b8:	af00      	add	r7, sp, #0
 80010ba:	e7fe      	b.n	80010ba <HardFault_Handler+0x4>

080010bc <MemManage_Handler>:
 80010bc:	b480      	push	{r7}
 80010be:	af00      	add	r7, sp, #0
 80010c0:	e7fe      	b.n	80010c0 <MemManage_Handler+0x4>

080010c2 <BusFault_Handler>:
 80010c2:	b480      	push	{r7}
 80010c4:	af00      	add	r7, sp, #0
 80010c6:	e7fe      	b.n	80010c6 <BusFault_Handler+0x4>

080010c8 <UsageFault_Handler>:
 80010c8:	b480      	push	{r7}
 80010ca:	af00      	add	r7, sp, #0
 80010cc:	e7fe      	b.n	80010cc <UsageFault_Handler+0x4>

080010ce <DebugMon_Handler>:
 80010ce:	b480      	push	{r7}
 80010d0:	af00      	add	r7, sp, #0
 80010d2:	bf00      	nop
 80010d4:	46bd      	mov	sp, r7
 80010d6:	bc80      	pop	{r7}
 80010d8:	4770      	bx	lr
	...

080010dc <TIM1_UP_IRQHandler>:
 80010dc:	b580      	push	{r7, lr}
 80010de:	af00      	add	r7, sp, #0
 80010e0:	4802      	ldr	r0, [pc, #8]	; (80010ec <TIM1_UP_IRQHandler+0x10>)
 80010e2:	f001 f8ad 	bl	8002240 <HAL_TIM_IRQHandler>
 80010e6:	bf00      	nop
 80010e8:	bd80      	pop	{r7, pc}
 80010ea:	bf00      	nop
 80010ec:	200015d8 	.word	0x200015d8

080010f0 <_getpid>:
 80010f0:	b480      	push	{r7}
 80010f2:	af00      	add	r7, sp, #0
 80010f4:	2301      	movs	r3, #1
 80010f6:	4618      	mov	r0, r3
 80010f8:	46bd      	mov	sp, r7
 80010fa:	bc80      	pop	{r7}
 80010fc:	4770      	bx	lr

080010fe <_kill>:
 80010fe:	b580      	push	{r7, lr}
 8001100:	b082      	sub	sp, #8
 8001102:	af00      	add	r7, sp, #0
 8001104:	6078      	str	r0, [r7, #4]
 8001106:	6039      	str	r1, [r7, #0]
 8001108:	f002 fe6a 	bl	8003de0 <__errno>
 800110c:	4603      	mov	r3, r0
 800110e:	2216      	movs	r2, #22
 8001110:	601a      	str	r2, [r3, #0]
 8001112:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001116:	4618      	mov	r0, r3
 8001118:	3708      	adds	r7, #8
 800111a:	46bd      	mov	sp, r7
 800111c:	bd80      	pop	{r7, pc}

0800111e <_exit>:
 800111e:	b580      	push	{r7, lr}
 8001120:	b082      	sub	sp, #8
 8001122:	af00      	add	r7, sp, #0
 8001124:	6078      	str	r0, [r7, #4]
 8001126:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800112a:	6878      	ldr	r0, [r7, #4]
 800112c:	f7ff ffe7 	bl	80010fe <_kill>
 8001130:	e7fe      	b.n	8001130 <_exit+0x12>

08001132 <_read>:
 8001132:	b580      	push	{r7, lr}
 8001134:	b086      	sub	sp, #24
 8001136:	af00      	add	r7, sp, #0
 8001138:	60f8      	str	r0, [r7, #12]
 800113a:	60b9      	str	r1, [r7, #8]
 800113c:	607a      	str	r2, [r7, #4]
 800113e:	2300      	movs	r3, #0
 8001140:	617b      	str	r3, [r7, #20]
 8001142:	e00a      	b.n	800115a <_read+0x28>
 8001144:	f3af 8000 	nop.w
 8001148:	4601      	mov	r1, r0
 800114a:	68bb      	ldr	r3, [r7, #8]
 800114c:	1c5a      	adds	r2, r3, #1
 800114e:	60ba      	str	r2, [r7, #8]
 8001150:	b2ca      	uxtb	r2, r1
 8001152:	701a      	strb	r2, [r3, #0]
 8001154:	697b      	ldr	r3, [r7, #20]
 8001156:	3301      	adds	r3, #1
 8001158:	617b      	str	r3, [r7, #20]
 800115a:	697a      	ldr	r2, [r7, #20]
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	429a      	cmp	r2, r3
 8001160:	dbf0      	blt.n	8001144 <_read+0x12>
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	4618      	mov	r0, r3
 8001166:	3718      	adds	r7, #24
 8001168:	46bd      	mov	sp, r7
 800116a:	bd80      	pop	{r7, pc}

0800116c <_write>:
 800116c:	b580      	push	{r7, lr}
 800116e:	b086      	sub	sp, #24
 8001170:	af00      	add	r7, sp, #0
 8001172:	60f8      	str	r0, [r7, #12]
 8001174:	60b9      	str	r1, [r7, #8]
 8001176:	607a      	str	r2, [r7, #4]
 8001178:	2300      	movs	r3, #0
 800117a:	617b      	str	r3, [r7, #20]
 800117c:	e009      	b.n	8001192 <_write+0x26>
 800117e:	68bb      	ldr	r3, [r7, #8]
 8001180:	1c5a      	adds	r2, r3, #1
 8001182:	60ba      	str	r2, [r7, #8]
 8001184:	781b      	ldrb	r3, [r3, #0]
 8001186:	4618      	mov	r0, r3
 8001188:	f3af 8000 	nop.w
 800118c:	697b      	ldr	r3, [r7, #20]
 800118e:	3301      	adds	r3, #1
 8001190:	617b      	str	r3, [r7, #20]
 8001192:	697a      	ldr	r2, [r7, #20]
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	429a      	cmp	r2, r3
 8001198:	dbf1      	blt.n	800117e <_write+0x12>
 800119a:	687b      	ldr	r3, [r7, #4]
 800119c:	4618      	mov	r0, r3
 800119e:	3718      	adds	r7, #24
 80011a0:	46bd      	mov	sp, r7
 80011a2:	bd80      	pop	{r7, pc}

080011a4 <_close>:
 80011a4:	b480      	push	{r7}
 80011a6:	b083      	sub	sp, #12
 80011a8:	af00      	add	r7, sp, #0
 80011aa:	6078      	str	r0, [r7, #4]
 80011ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80011b0:	4618      	mov	r0, r3
 80011b2:	370c      	adds	r7, #12
 80011b4:	46bd      	mov	sp, r7
 80011b6:	bc80      	pop	{r7}
 80011b8:	4770      	bx	lr

080011ba <_fstat>:
 80011ba:	b480      	push	{r7}
 80011bc:	b083      	sub	sp, #12
 80011be:	af00      	add	r7, sp, #0
 80011c0:	6078      	str	r0, [r7, #4]
 80011c2:	6039      	str	r1, [r7, #0]
 80011c4:	683b      	ldr	r3, [r7, #0]
 80011c6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80011ca:	605a      	str	r2, [r3, #4]
 80011cc:	2300      	movs	r3, #0
 80011ce:	4618      	mov	r0, r3
 80011d0:	370c      	adds	r7, #12
 80011d2:	46bd      	mov	sp, r7
 80011d4:	bc80      	pop	{r7}
 80011d6:	4770      	bx	lr

080011d8 <_isatty>:
 80011d8:	b480      	push	{r7}
 80011da:	b083      	sub	sp, #12
 80011dc:	af00      	add	r7, sp, #0
 80011de:	6078      	str	r0, [r7, #4]
 80011e0:	2301      	movs	r3, #1
 80011e2:	4618      	mov	r0, r3
 80011e4:	370c      	adds	r7, #12
 80011e6:	46bd      	mov	sp, r7
 80011e8:	bc80      	pop	{r7}
 80011ea:	4770      	bx	lr

080011ec <_lseek>:
 80011ec:	b480      	push	{r7}
 80011ee:	b085      	sub	sp, #20
 80011f0:	af00      	add	r7, sp, #0
 80011f2:	60f8      	str	r0, [r7, #12]
 80011f4:	60b9      	str	r1, [r7, #8]
 80011f6:	607a      	str	r2, [r7, #4]
 80011f8:	2300      	movs	r3, #0
 80011fa:	4618      	mov	r0, r3
 80011fc:	3714      	adds	r7, #20
 80011fe:	46bd      	mov	sp, r7
 8001200:	bc80      	pop	{r7}
 8001202:	4770      	bx	lr

08001204 <_sbrk>:
 8001204:	b580      	push	{r7, lr}
 8001206:	b086      	sub	sp, #24
 8001208:	af00      	add	r7, sp, #0
 800120a:	6078      	str	r0, [r7, #4]
 800120c:	4a14      	ldr	r2, [pc, #80]	; (8001260 <_sbrk+0x5c>)
 800120e:	4b15      	ldr	r3, [pc, #84]	; (8001264 <_sbrk+0x60>)
 8001210:	1ad3      	subs	r3, r2, r3
 8001212:	617b      	str	r3, [r7, #20]
 8001214:	697b      	ldr	r3, [r7, #20]
 8001216:	613b      	str	r3, [r7, #16]
 8001218:	4b13      	ldr	r3, [pc, #76]	; (8001268 <_sbrk+0x64>)
 800121a:	681b      	ldr	r3, [r3, #0]
 800121c:	2b00      	cmp	r3, #0
 800121e:	d102      	bne.n	8001226 <_sbrk+0x22>
 8001220:	4b11      	ldr	r3, [pc, #68]	; (8001268 <_sbrk+0x64>)
 8001222:	4a12      	ldr	r2, [pc, #72]	; (800126c <_sbrk+0x68>)
 8001224:	601a      	str	r2, [r3, #0]
 8001226:	4b10      	ldr	r3, [pc, #64]	; (8001268 <_sbrk+0x64>)
 8001228:	681a      	ldr	r2, [r3, #0]
 800122a:	687b      	ldr	r3, [r7, #4]
 800122c:	4413      	add	r3, r2
 800122e:	693a      	ldr	r2, [r7, #16]
 8001230:	429a      	cmp	r2, r3
 8001232:	d207      	bcs.n	8001244 <_sbrk+0x40>
 8001234:	f002 fdd4 	bl	8003de0 <__errno>
 8001238:	4603      	mov	r3, r0
 800123a:	220c      	movs	r2, #12
 800123c:	601a      	str	r2, [r3, #0]
 800123e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001242:	e009      	b.n	8001258 <_sbrk+0x54>
 8001244:	4b08      	ldr	r3, [pc, #32]	; (8001268 <_sbrk+0x64>)
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	60fb      	str	r3, [r7, #12]
 800124a:	4b07      	ldr	r3, [pc, #28]	; (8001268 <_sbrk+0x64>)
 800124c:	681a      	ldr	r2, [r3, #0]
 800124e:	687b      	ldr	r3, [r7, #4]
 8001250:	4413      	add	r3, r2
 8001252:	4a05      	ldr	r2, [pc, #20]	; (8001268 <_sbrk+0x64>)
 8001254:	6013      	str	r3, [r2, #0]
 8001256:	68fb      	ldr	r3, [r7, #12]
 8001258:	4618      	mov	r0, r3
 800125a:	3718      	adds	r7, #24
 800125c:	46bd      	mov	sp, r7
 800125e:	bd80      	pop	{r7, pc}
 8001260:	20005000 	.word	0x20005000
 8001264:	00000400 	.word	0x00000400
 8001268:	200003c8 	.word	0x200003c8
 800126c:	20001638 	.word	0x20001638

08001270 <SystemInit>:
 8001270:	b480      	push	{r7}
 8001272:	af00      	add	r7, sp, #0
 8001274:	bf00      	nop
 8001276:	46bd      	mov	sp, r7
 8001278:	bc80      	pop	{r7}
 800127a:	4770      	bx	lr

0800127c <Reset_Handler>:
 800127c:	2100      	movs	r1, #0
 800127e:	e003      	b.n	8001288 <LoopCopyDataInit>

08001280 <CopyDataInit>:
 8001280:	4b0b      	ldr	r3, [pc, #44]	; (80012b0 <LoopFillZerobss+0x14>)
 8001282:	585b      	ldr	r3, [r3, r1]
 8001284:	5043      	str	r3, [r0, r1]
 8001286:	3104      	adds	r1, #4

08001288 <LoopCopyDataInit>:
 8001288:	480a      	ldr	r0, [pc, #40]	; (80012b4 <LoopFillZerobss+0x18>)
 800128a:	4b0b      	ldr	r3, [pc, #44]	; (80012b8 <LoopFillZerobss+0x1c>)
 800128c:	1842      	adds	r2, r0, r1
 800128e:	429a      	cmp	r2, r3
 8001290:	d3f6      	bcc.n	8001280 <CopyDataInit>
 8001292:	4a0a      	ldr	r2, [pc, #40]	; (80012bc <LoopFillZerobss+0x20>)
 8001294:	e002      	b.n	800129c <LoopFillZerobss>

08001296 <FillZerobss>:
 8001296:	2300      	movs	r3, #0
 8001298:	f842 3b04 	str.w	r3, [r2], #4

0800129c <LoopFillZerobss>:
 800129c:	4b08      	ldr	r3, [pc, #32]	; (80012c0 <LoopFillZerobss+0x24>)
 800129e:	429a      	cmp	r2, r3
 80012a0:	d3f9      	bcc.n	8001296 <FillZerobss>
 80012a2:	f7ff ffe5 	bl	8001270 <SystemInit>
 80012a6:	f002 fda1 	bl	8003dec <__libc_init_array>
 80012aa:	f7ff fae3 	bl	8000874 <main>
 80012ae:	4770      	bx	lr
 80012b0:	08005500 	.word	0x08005500
 80012b4:	20000000 	.word	0x20000000
 80012b8:	20000154 	.word	0x20000154
 80012bc:	20000154 	.word	0x20000154
 80012c0:	20001634 	.word	0x20001634

080012c4 <ADC1_2_IRQHandler>:
 80012c4:	e7fe      	b.n	80012c4 <ADC1_2_IRQHandler>
	...

080012c8 <HAL_Init>:
 80012c8:	b580      	push	{r7, lr}
 80012ca:	af00      	add	r7, sp, #0
 80012cc:	4b08      	ldr	r3, [pc, #32]	; (80012f0 <HAL_Init+0x28>)
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	4a07      	ldr	r2, [pc, #28]	; (80012f0 <HAL_Init+0x28>)
 80012d2:	f043 0310 	orr.w	r3, r3, #16
 80012d6:	6013      	str	r3, [r2, #0]
 80012d8:	2003      	movs	r0, #3
 80012da:	f000 f8d1 	bl	8001480 <HAL_NVIC_SetPriorityGrouping>
 80012de:	2000      	movs	r0, #0
 80012e0:	f7ff fe90 	bl	8001004 <HAL_InitTick>
 80012e4:	f7ff fd96 	bl	8000e14 <HAL_MspInit>
 80012e8:	2300      	movs	r3, #0
 80012ea:	4618      	mov	r0, r3
 80012ec:	bd80      	pop	{r7, pc}
 80012ee:	bf00      	nop
 80012f0:	40022000 	.word	0x40022000

080012f4 <HAL_IncTick>:
 80012f4:	b480      	push	{r7}
 80012f6:	af00      	add	r7, sp, #0
 80012f8:	4b05      	ldr	r3, [pc, #20]	; (8001310 <HAL_IncTick+0x1c>)
 80012fa:	781b      	ldrb	r3, [r3, #0]
 80012fc:	461a      	mov	r2, r3
 80012fe:	4b05      	ldr	r3, [pc, #20]	; (8001314 <HAL_IncTick+0x20>)
 8001300:	681b      	ldr	r3, [r3, #0]
 8001302:	4413      	add	r3, r2
 8001304:	4a03      	ldr	r2, [pc, #12]	; (8001314 <HAL_IncTick+0x20>)
 8001306:	6013      	str	r3, [r2, #0]
 8001308:	bf00      	nop
 800130a:	46bd      	mov	sp, r7
 800130c:	bc80      	pop	{r7}
 800130e:	4770      	bx	lr
 8001310:	200000e8 	.word	0x200000e8
 8001314:	20001620 	.word	0x20001620

08001318 <HAL_GetTick>:
 8001318:	b480      	push	{r7}
 800131a:	af00      	add	r7, sp, #0
 800131c:	4b02      	ldr	r3, [pc, #8]	; (8001328 <HAL_GetTick+0x10>)
 800131e:	681b      	ldr	r3, [r3, #0]
 8001320:	4618      	mov	r0, r3
 8001322:	46bd      	mov	sp, r7
 8001324:	bc80      	pop	{r7}
 8001326:	4770      	bx	lr
 8001328:	20001620 	.word	0x20001620

0800132c <__NVIC_SetPriorityGrouping>:
 800132c:	b480      	push	{r7}
 800132e:	b085      	sub	sp, #20
 8001330:	af00      	add	r7, sp, #0
 8001332:	6078      	str	r0, [r7, #4]
 8001334:	687b      	ldr	r3, [r7, #4]
 8001336:	f003 0307 	and.w	r3, r3, #7
 800133a:	60fb      	str	r3, [r7, #12]
 800133c:	4b0c      	ldr	r3, [pc, #48]	; (8001370 <__NVIC_SetPriorityGrouping+0x44>)
 800133e:	68db      	ldr	r3, [r3, #12]
 8001340:	60bb      	str	r3, [r7, #8]
 8001342:	68ba      	ldr	r2, [r7, #8]
 8001344:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001348:	4013      	ands	r3, r2
 800134a:	60bb      	str	r3, [r7, #8]
 800134c:	68fb      	ldr	r3, [r7, #12]
 800134e:	021a      	lsls	r2, r3, #8
 8001350:	68bb      	ldr	r3, [r7, #8]
 8001352:	4313      	orrs	r3, r2
 8001354:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001358:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800135c:	60bb      	str	r3, [r7, #8]
 800135e:	4a04      	ldr	r2, [pc, #16]	; (8001370 <__NVIC_SetPriorityGrouping+0x44>)
 8001360:	68bb      	ldr	r3, [r7, #8]
 8001362:	60d3      	str	r3, [r2, #12]
 8001364:	bf00      	nop
 8001366:	3714      	adds	r7, #20
 8001368:	46bd      	mov	sp, r7
 800136a:	bc80      	pop	{r7}
 800136c:	4770      	bx	lr
 800136e:	bf00      	nop
 8001370:	e000ed00 	.word	0xe000ed00

08001374 <__NVIC_GetPriorityGrouping>:
 8001374:	b480      	push	{r7}
 8001376:	af00      	add	r7, sp, #0
 8001378:	4b04      	ldr	r3, [pc, #16]	; (800138c <__NVIC_GetPriorityGrouping+0x18>)
 800137a:	68db      	ldr	r3, [r3, #12]
 800137c:	0a1b      	lsrs	r3, r3, #8
 800137e:	f003 0307 	and.w	r3, r3, #7
 8001382:	4618      	mov	r0, r3
 8001384:	46bd      	mov	sp, r7
 8001386:	bc80      	pop	{r7}
 8001388:	4770      	bx	lr
 800138a:	bf00      	nop
 800138c:	e000ed00 	.word	0xe000ed00

08001390 <__NVIC_EnableIRQ>:
 8001390:	b480      	push	{r7}
 8001392:	b083      	sub	sp, #12
 8001394:	af00      	add	r7, sp, #0
 8001396:	4603      	mov	r3, r0
 8001398:	71fb      	strb	r3, [r7, #7]
 800139a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800139e:	2b00      	cmp	r3, #0
 80013a0:	db0b      	blt.n	80013ba <__NVIC_EnableIRQ+0x2a>
 80013a2:	79fb      	ldrb	r3, [r7, #7]
 80013a4:	f003 021f 	and.w	r2, r3, #31
 80013a8:	4906      	ldr	r1, [pc, #24]	; (80013c4 <__NVIC_EnableIRQ+0x34>)
 80013aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013ae:	095b      	lsrs	r3, r3, #5
 80013b0:	2001      	movs	r0, #1
 80013b2:	fa00 f202 	lsl.w	r2, r0, r2
 80013b6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80013ba:	bf00      	nop
 80013bc:	370c      	adds	r7, #12
 80013be:	46bd      	mov	sp, r7
 80013c0:	bc80      	pop	{r7}
 80013c2:	4770      	bx	lr
 80013c4:	e000e100 	.word	0xe000e100

080013c8 <__NVIC_SetPriority>:
 80013c8:	b480      	push	{r7}
 80013ca:	b083      	sub	sp, #12
 80013cc:	af00      	add	r7, sp, #0
 80013ce:	4603      	mov	r3, r0
 80013d0:	6039      	str	r1, [r7, #0]
 80013d2:	71fb      	strb	r3, [r7, #7]
 80013d4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013d8:	2b00      	cmp	r3, #0
 80013da:	db0a      	blt.n	80013f2 <__NVIC_SetPriority+0x2a>
 80013dc:	683b      	ldr	r3, [r7, #0]
 80013de:	b2da      	uxtb	r2, r3
 80013e0:	490c      	ldr	r1, [pc, #48]	; (8001414 <__NVIC_SetPriority+0x4c>)
 80013e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013e6:	0112      	lsls	r2, r2, #4
 80013e8:	b2d2      	uxtb	r2, r2
 80013ea:	440b      	add	r3, r1
 80013ec:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80013f0:	e00a      	b.n	8001408 <__NVIC_SetPriority+0x40>
 80013f2:	683b      	ldr	r3, [r7, #0]
 80013f4:	b2da      	uxtb	r2, r3
 80013f6:	4908      	ldr	r1, [pc, #32]	; (8001418 <__NVIC_SetPriority+0x50>)
 80013f8:	79fb      	ldrb	r3, [r7, #7]
 80013fa:	f003 030f 	and.w	r3, r3, #15
 80013fe:	3b04      	subs	r3, #4
 8001400:	0112      	lsls	r2, r2, #4
 8001402:	b2d2      	uxtb	r2, r2
 8001404:	440b      	add	r3, r1
 8001406:	761a      	strb	r2, [r3, #24]
 8001408:	bf00      	nop
 800140a:	370c      	adds	r7, #12
 800140c:	46bd      	mov	sp, r7
 800140e:	bc80      	pop	{r7}
 8001410:	4770      	bx	lr
 8001412:	bf00      	nop
 8001414:	e000e100 	.word	0xe000e100
 8001418:	e000ed00 	.word	0xe000ed00

0800141c <NVIC_EncodePriority>:
 800141c:	b480      	push	{r7}
 800141e:	b089      	sub	sp, #36	; 0x24
 8001420:	af00      	add	r7, sp, #0
 8001422:	60f8      	str	r0, [r7, #12]
 8001424:	60b9      	str	r1, [r7, #8]
 8001426:	607a      	str	r2, [r7, #4]
 8001428:	68fb      	ldr	r3, [r7, #12]
 800142a:	f003 0307 	and.w	r3, r3, #7
 800142e:	61fb      	str	r3, [r7, #28]
 8001430:	69fb      	ldr	r3, [r7, #28]
 8001432:	f1c3 0307 	rsb	r3, r3, #7
 8001436:	2b04      	cmp	r3, #4
 8001438:	bf28      	it	cs
 800143a:	2304      	movcs	r3, #4
 800143c:	61bb      	str	r3, [r7, #24]
 800143e:	69fb      	ldr	r3, [r7, #28]
 8001440:	3304      	adds	r3, #4
 8001442:	2b06      	cmp	r3, #6
 8001444:	d902      	bls.n	800144c <NVIC_EncodePriority+0x30>
 8001446:	69fb      	ldr	r3, [r7, #28]
 8001448:	3b03      	subs	r3, #3
 800144a:	e000      	b.n	800144e <NVIC_EncodePriority+0x32>
 800144c:	2300      	movs	r3, #0
 800144e:	617b      	str	r3, [r7, #20]
 8001450:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001454:	69bb      	ldr	r3, [r7, #24]
 8001456:	fa02 f303 	lsl.w	r3, r2, r3
 800145a:	43da      	mvns	r2, r3
 800145c:	68bb      	ldr	r3, [r7, #8]
 800145e:	401a      	ands	r2, r3
 8001460:	697b      	ldr	r3, [r7, #20]
 8001462:	409a      	lsls	r2, r3
 8001464:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001468:	697b      	ldr	r3, [r7, #20]
 800146a:	fa01 f303 	lsl.w	r3, r1, r3
 800146e:	43d9      	mvns	r1, r3
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	400b      	ands	r3, r1
 8001474:	4313      	orrs	r3, r2
 8001476:	4618      	mov	r0, r3
 8001478:	3724      	adds	r7, #36	; 0x24
 800147a:	46bd      	mov	sp, r7
 800147c:	bc80      	pop	{r7}
 800147e:	4770      	bx	lr

08001480 <HAL_NVIC_SetPriorityGrouping>:
 8001480:	b580      	push	{r7, lr}
 8001482:	b082      	sub	sp, #8
 8001484:	af00      	add	r7, sp, #0
 8001486:	6078      	str	r0, [r7, #4]
 8001488:	6878      	ldr	r0, [r7, #4]
 800148a:	f7ff ff4f 	bl	800132c <__NVIC_SetPriorityGrouping>
 800148e:	bf00      	nop
 8001490:	3708      	adds	r7, #8
 8001492:	46bd      	mov	sp, r7
 8001494:	bd80      	pop	{r7, pc}

08001496 <HAL_NVIC_SetPriority>:
 8001496:	b580      	push	{r7, lr}
 8001498:	b086      	sub	sp, #24
 800149a:	af00      	add	r7, sp, #0
 800149c:	4603      	mov	r3, r0
 800149e:	60b9      	str	r1, [r7, #8]
 80014a0:	607a      	str	r2, [r7, #4]
 80014a2:	73fb      	strb	r3, [r7, #15]
 80014a4:	2300      	movs	r3, #0
 80014a6:	617b      	str	r3, [r7, #20]
 80014a8:	f7ff ff64 	bl	8001374 <__NVIC_GetPriorityGrouping>
 80014ac:	6178      	str	r0, [r7, #20]
 80014ae:	687a      	ldr	r2, [r7, #4]
 80014b0:	68b9      	ldr	r1, [r7, #8]
 80014b2:	6978      	ldr	r0, [r7, #20]
 80014b4:	f7ff ffb2 	bl	800141c <NVIC_EncodePriority>
 80014b8:	4602      	mov	r2, r0
 80014ba:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80014be:	4611      	mov	r1, r2
 80014c0:	4618      	mov	r0, r3
 80014c2:	f7ff ff81 	bl	80013c8 <__NVIC_SetPriority>
 80014c6:	bf00      	nop
 80014c8:	3718      	adds	r7, #24
 80014ca:	46bd      	mov	sp, r7
 80014cc:	bd80      	pop	{r7, pc}

080014ce <HAL_NVIC_EnableIRQ>:
 80014ce:	b580      	push	{r7, lr}
 80014d0:	b082      	sub	sp, #8
 80014d2:	af00      	add	r7, sp, #0
 80014d4:	4603      	mov	r3, r0
 80014d6:	71fb      	strb	r3, [r7, #7]
 80014d8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014dc:	4618      	mov	r0, r3
 80014de:	f7ff ff57 	bl	8001390 <__NVIC_EnableIRQ>
 80014e2:	bf00      	nop
 80014e4:	3708      	adds	r7, #8
 80014e6:	46bd      	mov	sp, r7
 80014e8:	bd80      	pop	{r7, pc}
	...

080014ec <HAL_GPIO_Init>:
 80014ec:	b480      	push	{r7}
 80014ee:	b08b      	sub	sp, #44	; 0x2c
 80014f0:	af00      	add	r7, sp, #0
 80014f2:	6078      	str	r0, [r7, #4]
 80014f4:	6039      	str	r1, [r7, #0]
 80014f6:	2300      	movs	r3, #0
 80014f8:	627b      	str	r3, [r7, #36]	; 0x24
 80014fa:	2300      	movs	r3, #0
 80014fc:	623b      	str	r3, [r7, #32]
 80014fe:	e169      	b.n	80017d4 <HAL_GPIO_Init+0x2e8>
 8001500:	2201      	movs	r2, #1
 8001502:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001504:	fa02 f303 	lsl.w	r3, r2, r3
 8001508:	61fb      	str	r3, [r7, #28]
 800150a:	683b      	ldr	r3, [r7, #0]
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	69fa      	ldr	r2, [r7, #28]
 8001510:	4013      	ands	r3, r2
 8001512:	61bb      	str	r3, [r7, #24]
 8001514:	69ba      	ldr	r2, [r7, #24]
 8001516:	69fb      	ldr	r3, [r7, #28]
 8001518:	429a      	cmp	r2, r3
 800151a:	f040 8158 	bne.w	80017ce <HAL_GPIO_Init+0x2e2>
 800151e:	683b      	ldr	r3, [r7, #0]
 8001520:	685b      	ldr	r3, [r3, #4]
 8001522:	4a9a      	ldr	r2, [pc, #616]	; (800178c <HAL_GPIO_Init+0x2a0>)
 8001524:	4293      	cmp	r3, r2
 8001526:	d05e      	beq.n	80015e6 <HAL_GPIO_Init+0xfa>
 8001528:	4a98      	ldr	r2, [pc, #608]	; (800178c <HAL_GPIO_Init+0x2a0>)
 800152a:	4293      	cmp	r3, r2
 800152c:	d875      	bhi.n	800161a <HAL_GPIO_Init+0x12e>
 800152e:	4a98      	ldr	r2, [pc, #608]	; (8001790 <HAL_GPIO_Init+0x2a4>)
 8001530:	4293      	cmp	r3, r2
 8001532:	d058      	beq.n	80015e6 <HAL_GPIO_Init+0xfa>
 8001534:	4a96      	ldr	r2, [pc, #600]	; (8001790 <HAL_GPIO_Init+0x2a4>)
 8001536:	4293      	cmp	r3, r2
 8001538:	d86f      	bhi.n	800161a <HAL_GPIO_Init+0x12e>
 800153a:	4a96      	ldr	r2, [pc, #600]	; (8001794 <HAL_GPIO_Init+0x2a8>)
 800153c:	4293      	cmp	r3, r2
 800153e:	d052      	beq.n	80015e6 <HAL_GPIO_Init+0xfa>
 8001540:	4a94      	ldr	r2, [pc, #592]	; (8001794 <HAL_GPIO_Init+0x2a8>)
 8001542:	4293      	cmp	r3, r2
 8001544:	d869      	bhi.n	800161a <HAL_GPIO_Init+0x12e>
 8001546:	4a94      	ldr	r2, [pc, #592]	; (8001798 <HAL_GPIO_Init+0x2ac>)
 8001548:	4293      	cmp	r3, r2
 800154a:	d04c      	beq.n	80015e6 <HAL_GPIO_Init+0xfa>
 800154c:	4a92      	ldr	r2, [pc, #584]	; (8001798 <HAL_GPIO_Init+0x2ac>)
 800154e:	4293      	cmp	r3, r2
 8001550:	d863      	bhi.n	800161a <HAL_GPIO_Init+0x12e>
 8001552:	4a92      	ldr	r2, [pc, #584]	; (800179c <HAL_GPIO_Init+0x2b0>)
 8001554:	4293      	cmp	r3, r2
 8001556:	d046      	beq.n	80015e6 <HAL_GPIO_Init+0xfa>
 8001558:	4a90      	ldr	r2, [pc, #576]	; (800179c <HAL_GPIO_Init+0x2b0>)
 800155a:	4293      	cmp	r3, r2
 800155c:	d85d      	bhi.n	800161a <HAL_GPIO_Init+0x12e>
 800155e:	2b12      	cmp	r3, #18
 8001560:	d82a      	bhi.n	80015b8 <HAL_GPIO_Init+0xcc>
 8001562:	2b12      	cmp	r3, #18
 8001564:	d859      	bhi.n	800161a <HAL_GPIO_Init+0x12e>
 8001566:	a201      	add	r2, pc, #4	; (adr r2, 800156c <HAL_GPIO_Init+0x80>)
 8001568:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800156c:	080015e7 	.word	0x080015e7
 8001570:	080015c1 	.word	0x080015c1
 8001574:	080015d3 	.word	0x080015d3
 8001578:	08001615 	.word	0x08001615
 800157c:	0800161b 	.word	0x0800161b
 8001580:	0800161b 	.word	0x0800161b
 8001584:	0800161b 	.word	0x0800161b
 8001588:	0800161b 	.word	0x0800161b
 800158c:	0800161b 	.word	0x0800161b
 8001590:	0800161b 	.word	0x0800161b
 8001594:	0800161b 	.word	0x0800161b
 8001598:	0800161b 	.word	0x0800161b
 800159c:	0800161b 	.word	0x0800161b
 80015a0:	0800161b 	.word	0x0800161b
 80015a4:	0800161b 	.word	0x0800161b
 80015a8:	0800161b 	.word	0x0800161b
 80015ac:	0800161b 	.word	0x0800161b
 80015b0:	080015c9 	.word	0x080015c9
 80015b4:	080015dd 	.word	0x080015dd
 80015b8:	4a79      	ldr	r2, [pc, #484]	; (80017a0 <HAL_GPIO_Init+0x2b4>)
 80015ba:	4293      	cmp	r3, r2
 80015bc:	d013      	beq.n	80015e6 <HAL_GPIO_Init+0xfa>
 80015be:	e02c      	b.n	800161a <HAL_GPIO_Init+0x12e>
 80015c0:	683b      	ldr	r3, [r7, #0]
 80015c2:	68db      	ldr	r3, [r3, #12]
 80015c4:	623b      	str	r3, [r7, #32]
 80015c6:	e029      	b.n	800161c <HAL_GPIO_Init+0x130>
 80015c8:	683b      	ldr	r3, [r7, #0]
 80015ca:	68db      	ldr	r3, [r3, #12]
 80015cc:	3304      	adds	r3, #4
 80015ce:	623b      	str	r3, [r7, #32]
 80015d0:	e024      	b.n	800161c <HAL_GPIO_Init+0x130>
 80015d2:	683b      	ldr	r3, [r7, #0]
 80015d4:	68db      	ldr	r3, [r3, #12]
 80015d6:	3308      	adds	r3, #8
 80015d8:	623b      	str	r3, [r7, #32]
 80015da:	e01f      	b.n	800161c <HAL_GPIO_Init+0x130>
 80015dc:	683b      	ldr	r3, [r7, #0]
 80015de:	68db      	ldr	r3, [r3, #12]
 80015e0:	330c      	adds	r3, #12
 80015e2:	623b      	str	r3, [r7, #32]
 80015e4:	e01a      	b.n	800161c <HAL_GPIO_Init+0x130>
 80015e6:	683b      	ldr	r3, [r7, #0]
 80015e8:	689b      	ldr	r3, [r3, #8]
 80015ea:	2b00      	cmp	r3, #0
 80015ec:	d102      	bne.n	80015f4 <HAL_GPIO_Init+0x108>
 80015ee:	2304      	movs	r3, #4
 80015f0:	623b      	str	r3, [r7, #32]
 80015f2:	e013      	b.n	800161c <HAL_GPIO_Init+0x130>
 80015f4:	683b      	ldr	r3, [r7, #0]
 80015f6:	689b      	ldr	r3, [r3, #8]
 80015f8:	2b01      	cmp	r3, #1
 80015fa:	d105      	bne.n	8001608 <HAL_GPIO_Init+0x11c>
 80015fc:	2308      	movs	r3, #8
 80015fe:	623b      	str	r3, [r7, #32]
 8001600:	687b      	ldr	r3, [r7, #4]
 8001602:	69fa      	ldr	r2, [r7, #28]
 8001604:	611a      	str	r2, [r3, #16]
 8001606:	e009      	b.n	800161c <HAL_GPIO_Init+0x130>
 8001608:	2308      	movs	r3, #8
 800160a:	623b      	str	r3, [r7, #32]
 800160c:	687b      	ldr	r3, [r7, #4]
 800160e:	69fa      	ldr	r2, [r7, #28]
 8001610:	615a      	str	r2, [r3, #20]
 8001612:	e003      	b.n	800161c <HAL_GPIO_Init+0x130>
 8001614:	2300      	movs	r3, #0
 8001616:	623b      	str	r3, [r7, #32]
 8001618:	e000      	b.n	800161c <HAL_GPIO_Init+0x130>
 800161a:	bf00      	nop
 800161c:	69bb      	ldr	r3, [r7, #24]
 800161e:	2bff      	cmp	r3, #255	; 0xff
 8001620:	d801      	bhi.n	8001626 <HAL_GPIO_Init+0x13a>
 8001622:	687b      	ldr	r3, [r7, #4]
 8001624:	e001      	b.n	800162a <HAL_GPIO_Init+0x13e>
 8001626:	687b      	ldr	r3, [r7, #4]
 8001628:	3304      	adds	r3, #4
 800162a:	617b      	str	r3, [r7, #20]
 800162c:	69bb      	ldr	r3, [r7, #24]
 800162e:	2bff      	cmp	r3, #255	; 0xff
 8001630:	d802      	bhi.n	8001638 <HAL_GPIO_Init+0x14c>
 8001632:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001634:	009b      	lsls	r3, r3, #2
 8001636:	e002      	b.n	800163e <HAL_GPIO_Init+0x152>
 8001638:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800163a:	3b08      	subs	r3, #8
 800163c:	009b      	lsls	r3, r3, #2
 800163e:	613b      	str	r3, [r7, #16]
 8001640:	697b      	ldr	r3, [r7, #20]
 8001642:	681a      	ldr	r2, [r3, #0]
 8001644:	210f      	movs	r1, #15
 8001646:	693b      	ldr	r3, [r7, #16]
 8001648:	fa01 f303 	lsl.w	r3, r1, r3
 800164c:	43db      	mvns	r3, r3
 800164e:	401a      	ands	r2, r3
 8001650:	6a39      	ldr	r1, [r7, #32]
 8001652:	693b      	ldr	r3, [r7, #16]
 8001654:	fa01 f303 	lsl.w	r3, r1, r3
 8001658:	431a      	orrs	r2, r3
 800165a:	697b      	ldr	r3, [r7, #20]
 800165c:	601a      	str	r2, [r3, #0]
 800165e:	683b      	ldr	r3, [r7, #0]
 8001660:	685b      	ldr	r3, [r3, #4]
 8001662:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001666:	2b00      	cmp	r3, #0
 8001668:	f000 80b1 	beq.w	80017ce <HAL_GPIO_Init+0x2e2>
 800166c:	4b4d      	ldr	r3, [pc, #308]	; (80017a4 <HAL_GPIO_Init+0x2b8>)
 800166e:	699b      	ldr	r3, [r3, #24]
 8001670:	4a4c      	ldr	r2, [pc, #304]	; (80017a4 <HAL_GPIO_Init+0x2b8>)
 8001672:	f043 0301 	orr.w	r3, r3, #1
 8001676:	6193      	str	r3, [r2, #24]
 8001678:	4b4a      	ldr	r3, [pc, #296]	; (80017a4 <HAL_GPIO_Init+0x2b8>)
 800167a:	699b      	ldr	r3, [r3, #24]
 800167c:	f003 0301 	and.w	r3, r3, #1
 8001680:	60bb      	str	r3, [r7, #8]
 8001682:	68bb      	ldr	r3, [r7, #8]
 8001684:	4a48      	ldr	r2, [pc, #288]	; (80017a8 <HAL_GPIO_Init+0x2bc>)
 8001686:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001688:	089b      	lsrs	r3, r3, #2
 800168a:	3302      	adds	r3, #2
 800168c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001690:	60fb      	str	r3, [r7, #12]
 8001692:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001694:	f003 0303 	and.w	r3, r3, #3
 8001698:	009b      	lsls	r3, r3, #2
 800169a:	220f      	movs	r2, #15
 800169c:	fa02 f303 	lsl.w	r3, r2, r3
 80016a0:	43db      	mvns	r3, r3
 80016a2:	68fa      	ldr	r2, [r7, #12]
 80016a4:	4013      	ands	r3, r2
 80016a6:	60fb      	str	r3, [r7, #12]
 80016a8:	687b      	ldr	r3, [r7, #4]
 80016aa:	4a40      	ldr	r2, [pc, #256]	; (80017ac <HAL_GPIO_Init+0x2c0>)
 80016ac:	4293      	cmp	r3, r2
 80016ae:	d013      	beq.n	80016d8 <HAL_GPIO_Init+0x1ec>
 80016b0:	687b      	ldr	r3, [r7, #4]
 80016b2:	4a3f      	ldr	r2, [pc, #252]	; (80017b0 <HAL_GPIO_Init+0x2c4>)
 80016b4:	4293      	cmp	r3, r2
 80016b6:	d00d      	beq.n	80016d4 <HAL_GPIO_Init+0x1e8>
 80016b8:	687b      	ldr	r3, [r7, #4]
 80016ba:	4a3e      	ldr	r2, [pc, #248]	; (80017b4 <HAL_GPIO_Init+0x2c8>)
 80016bc:	4293      	cmp	r3, r2
 80016be:	d007      	beq.n	80016d0 <HAL_GPIO_Init+0x1e4>
 80016c0:	687b      	ldr	r3, [r7, #4]
 80016c2:	4a3d      	ldr	r2, [pc, #244]	; (80017b8 <HAL_GPIO_Init+0x2cc>)
 80016c4:	4293      	cmp	r3, r2
 80016c6:	d101      	bne.n	80016cc <HAL_GPIO_Init+0x1e0>
 80016c8:	2303      	movs	r3, #3
 80016ca:	e006      	b.n	80016da <HAL_GPIO_Init+0x1ee>
 80016cc:	2304      	movs	r3, #4
 80016ce:	e004      	b.n	80016da <HAL_GPIO_Init+0x1ee>
 80016d0:	2302      	movs	r3, #2
 80016d2:	e002      	b.n	80016da <HAL_GPIO_Init+0x1ee>
 80016d4:	2301      	movs	r3, #1
 80016d6:	e000      	b.n	80016da <HAL_GPIO_Init+0x1ee>
 80016d8:	2300      	movs	r3, #0
 80016da:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80016dc:	f002 0203 	and.w	r2, r2, #3
 80016e0:	0092      	lsls	r2, r2, #2
 80016e2:	4093      	lsls	r3, r2
 80016e4:	68fa      	ldr	r2, [r7, #12]
 80016e6:	4313      	orrs	r3, r2
 80016e8:	60fb      	str	r3, [r7, #12]
 80016ea:	492f      	ldr	r1, [pc, #188]	; (80017a8 <HAL_GPIO_Init+0x2bc>)
 80016ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016ee:	089b      	lsrs	r3, r3, #2
 80016f0:	3302      	adds	r3, #2
 80016f2:	68fa      	ldr	r2, [r7, #12]
 80016f4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80016f8:	683b      	ldr	r3, [r7, #0]
 80016fa:	685b      	ldr	r3, [r3, #4]
 80016fc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001700:	2b00      	cmp	r3, #0
 8001702:	d006      	beq.n	8001712 <HAL_GPIO_Init+0x226>
 8001704:	4b2d      	ldr	r3, [pc, #180]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 8001706:	681a      	ldr	r2, [r3, #0]
 8001708:	492c      	ldr	r1, [pc, #176]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 800170a:	69bb      	ldr	r3, [r7, #24]
 800170c:	4313      	orrs	r3, r2
 800170e:	600b      	str	r3, [r1, #0]
 8001710:	e006      	b.n	8001720 <HAL_GPIO_Init+0x234>
 8001712:	4b2a      	ldr	r3, [pc, #168]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 8001714:	681a      	ldr	r2, [r3, #0]
 8001716:	69bb      	ldr	r3, [r7, #24]
 8001718:	43db      	mvns	r3, r3
 800171a:	4928      	ldr	r1, [pc, #160]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 800171c:	4013      	ands	r3, r2
 800171e:	600b      	str	r3, [r1, #0]
 8001720:	683b      	ldr	r3, [r7, #0]
 8001722:	685b      	ldr	r3, [r3, #4]
 8001724:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001728:	2b00      	cmp	r3, #0
 800172a:	d006      	beq.n	800173a <HAL_GPIO_Init+0x24e>
 800172c:	4b23      	ldr	r3, [pc, #140]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 800172e:	685a      	ldr	r2, [r3, #4]
 8001730:	4922      	ldr	r1, [pc, #136]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 8001732:	69bb      	ldr	r3, [r7, #24]
 8001734:	4313      	orrs	r3, r2
 8001736:	604b      	str	r3, [r1, #4]
 8001738:	e006      	b.n	8001748 <HAL_GPIO_Init+0x25c>
 800173a:	4b20      	ldr	r3, [pc, #128]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 800173c:	685a      	ldr	r2, [r3, #4]
 800173e:	69bb      	ldr	r3, [r7, #24]
 8001740:	43db      	mvns	r3, r3
 8001742:	491e      	ldr	r1, [pc, #120]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 8001744:	4013      	ands	r3, r2
 8001746:	604b      	str	r3, [r1, #4]
 8001748:	683b      	ldr	r3, [r7, #0]
 800174a:	685b      	ldr	r3, [r3, #4]
 800174c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001750:	2b00      	cmp	r3, #0
 8001752:	d006      	beq.n	8001762 <HAL_GPIO_Init+0x276>
 8001754:	4b19      	ldr	r3, [pc, #100]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 8001756:	689a      	ldr	r2, [r3, #8]
 8001758:	4918      	ldr	r1, [pc, #96]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 800175a:	69bb      	ldr	r3, [r7, #24]
 800175c:	4313      	orrs	r3, r2
 800175e:	608b      	str	r3, [r1, #8]
 8001760:	e006      	b.n	8001770 <HAL_GPIO_Init+0x284>
 8001762:	4b16      	ldr	r3, [pc, #88]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 8001764:	689a      	ldr	r2, [r3, #8]
 8001766:	69bb      	ldr	r3, [r7, #24]
 8001768:	43db      	mvns	r3, r3
 800176a:	4914      	ldr	r1, [pc, #80]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 800176c:	4013      	ands	r3, r2
 800176e:	608b      	str	r3, [r1, #8]
 8001770:	683b      	ldr	r3, [r7, #0]
 8001772:	685b      	ldr	r3, [r3, #4]
 8001774:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001778:	2b00      	cmp	r3, #0
 800177a:	d021      	beq.n	80017c0 <HAL_GPIO_Init+0x2d4>
 800177c:	4b0f      	ldr	r3, [pc, #60]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 800177e:	68da      	ldr	r2, [r3, #12]
 8001780:	490e      	ldr	r1, [pc, #56]	; (80017bc <HAL_GPIO_Init+0x2d0>)
 8001782:	69bb      	ldr	r3, [r7, #24]
 8001784:	4313      	orrs	r3, r2
 8001786:	60cb      	str	r3, [r1, #12]
 8001788:	e021      	b.n	80017ce <HAL_GPIO_Init+0x2e2>
 800178a:	bf00      	nop
 800178c:	10320000 	.word	0x10320000
 8001790:	10310000 	.word	0x10310000
 8001794:	10220000 	.word	0x10220000
 8001798:	10210000 	.word	0x10210000
 800179c:	10120000 	.word	0x10120000
 80017a0:	10110000 	.word	0x10110000
 80017a4:	40021000 	.word	0x40021000
 80017a8:	40010000 	.word	0x40010000
 80017ac:	40010800 	.word	0x40010800
 80017b0:	40010c00 	.word	0x40010c00
 80017b4:	40011000 	.word	0x40011000
 80017b8:	40011400 	.word	0x40011400
 80017bc:	40010400 	.word	0x40010400
 80017c0:	4b0b      	ldr	r3, [pc, #44]	; (80017f0 <HAL_GPIO_Init+0x304>)
 80017c2:	68da      	ldr	r2, [r3, #12]
 80017c4:	69bb      	ldr	r3, [r7, #24]
 80017c6:	43db      	mvns	r3, r3
 80017c8:	4909      	ldr	r1, [pc, #36]	; (80017f0 <HAL_GPIO_Init+0x304>)
 80017ca:	4013      	ands	r3, r2
 80017cc:	60cb      	str	r3, [r1, #12]
 80017ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017d0:	3301      	adds	r3, #1
 80017d2:	627b      	str	r3, [r7, #36]	; 0x24
 80017d4:	683b      	ldr	r3, [r7, #0]
 80017d6:	681a      	ldr	r2, [r3, #0]
 80017d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017da:	fa22 f303 	lsr.w	r3, r2, r3
 80017de:	2b00      	cmp	r3, #0
 80017e0:	f47f ae8e 	bne.w	8001500 <HAL_GPIO_Init+0x14>
 80017e4:	bf00      	nop
 80017e6:	bf00      	nop
 80017e8:	372c      	adds	r7, #44	; 0x2c
 80017ea:	46bd      	mov	sp, r7
 80017ec:	bc80      	pop	{r7}
 80017ee:	4770      	bx	lr
 80017f0:	40010400 	.word	0x40010400

080017f4 <HAL_GPIO_WritePin>:
 80017f4:	b480      	push	{r7}
 80017f6:	b083      	sub	sp, #12
 80017f8:	af00      	add	r7, sp, #0
 80017fa:	6078      	str	r0, [r7, #4]
 80017fc:	460b      	mov	r3, r1
 80017fe:	807b      	strh	r3, [r7, #2]
 8001800:	4613      	mov	r3, r2
 8001802:	707b      	strb	r3, [r7, #1]
 8001804:	787b      	ldrb	r3, [r7, #1]
 8001806:	2b00      	cmp	r3, #0
 8001808:	d003      	beq.n	8001812 <HAL_GPIO_WritePin+0x1e>
 800180a:	887a      	ldrh	r2, [r7, #2]
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	611a      	str	r2, [r3, #16]
 8001810:	e003      	b.n	800181a <HAL_GPIO_WritePin+0x26>
 8001812:	887b      	ldrh	r3, [r7, #2]
 8001814:	041a      	lsls	r2, r3, #16
 8001816:	687b      	ldr	r3, [r7, #4]
 8001818:	611a      	str	r2, [r3, #16]
 800181a:	bf00      	nop
 800181c:	370c      	adds	r7, #12
 800181e:	46bd      	mov	sp, r7
 8001820:	bc80      	pop	{r7}
 8001822:	4770      	bx	lr

08001824 <HAL_GPIO_TogglePin>:
 8001824:	b480      	push	{r7}
 8001826:	b085      	sub	sp, #20
 8001828:	af00      	add	r7, sp, #0
 800182a:	6078      	str	r0, [r7, #4]
 800182c:	460b      	mov	r3, r1
 800182e:	807b      	strh	r3, [r7, #2]
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	68db      	ldr	r3, [r3, #12]
 8001834:	60fb      	str	r3, [r7, #12]
 8001836:	887a      	ldrh	r2, [r7, #2]
 8001838:	68fb      	ldr	r3, [r7, #12]
 800183a:	4013      	ands	r3, r2
 800183c:	041a      	lsls	r2, r3, #16
 800183e:	68fb      	ldr	r3, [r7, #12]
 8001840:	43d9      	mvns	r1, r3
 8001842:	887b      	ldrh	r3, [r7, #2]
 8001844:	400b      	ands	r3, r1
 8001846:	431a      	orrs	r2, r3
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	611a      	str	r2, [r3, #16]
 800184c:	bf00      	nop
 800184e:	3714      	adds	r7, #20
 8001850:	46bd      	mov	sp, r7
 8001852:	bc80      	pop	{r7}
 8001854:	4770      	bx	lr
	...

08001858 <HAL_RCC_OscConfig>:
 8001858:	b580      	push	{r7, lr}
 800185a:	b086      	sub	sp, #24
 800185c:	af00      	add	r7, sp, #0
 800185e:	6078      	str	r0, [r7, #4]
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	2b00      	cmp	r3, #0
 8001864:	d101      	bne.n	800186a <HAL_RCC_OscConfig+0x12>
 8001866:	2301      	movs	r3, #1
 8001868:	e26c      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 800186a:	687b      	ldr	r3, [r7, #4]
 800186c:	681b      	ldr	r3, [r3, #0]
 800186e:	f003 0301 	and.w	r3, r3, #1
 8001872:	2b00      	cmp	r3, #0
 8001874:	f000 8087 	beq.w	8001986 <HAL_RCC_OscConfig+0x12e>
 8001878:	4b92      	ldr	r3, [pc, #584]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 800187a:	685b      	ldr	r3, [r3, #4]
 800187c:	f003 030c 	and.w	r3, r3, #12
 8001880:	2b04      	cmp	r3, #4
 8001882:	d00c      	beq.n	800189e <HAL_RCC_OscConfig+0x46>
 8001884:	4b8f      	ldr	r3, [pc, #572]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001886:	685b      	ldr	r3, [r3, #4]
 8001888:	f003 030c 	and.w	r3, r3, #12
 800188c:	2b08      	cmp	r3, #8
 800188e:	d112      	bne.n	80018b6 <HAL_RCC_OscConfig+0x5e>
 8001890:	4b8c      	ldr	r3, [pc, #560]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001892:	685b      	ldr	r3, [r3, #4]
 8001894:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001898:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800189c:	d10b      	bne.n	80018b6 <HAL_RCC_OscConfig+0x5e>
 800189e:	4b89      	ldr	r3, [pc, #548]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80018a6:	2b00      	cmp	r3, #0
 80018a8:	d06c      	beq.n	8001984 <HAL_RCC_OscConfig+0x12c>
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	685b      	ldr	r3, [r3, #4]
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	d168      	bne.n	8001984 <HAL_RCC_OscConfig+0x12c>
 80018b2:	2301      	movs	r3, #1
 80018b4:	e246      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	685b      	ldr	r3, [r3, #4]
 80018ba:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80018be:	d106      	bne.n	80018ce <HAL_RCC_OscConfig+0x76>
 80018c0:	4b80      	ldr	r3, [pc, #512]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80018c2:	681b      	ldr	r3, [r3, #0]
 80018c4:	4a7f      	ldr	r2, [pc, #508]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80018c6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80018ca:	6013      	str	r3, [r2, #0]
 80018cc:	e02e      	b.n	800192c <HAL_RCC_OscConfig+0xd4>
 80018ce:	687b      	ldr	r3, [r7, #4]
 80018d0:	685b      	ldr	r3, [r3, #4]
 80018d2:	2b00      	cmp	r3, #0
 80018d4:	d10c      	bne.n	80018f0 <HAL_RCC_OscConfig+0x98>
 80018d6:	4b7b      	ldr	r3, [pc, #492]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80018d8:	681b      	ldr	r3, [r3, #0]
 80018da:	4a7a      	ldr	r2, [pc, #488]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80018dc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80018e0:	6013      	str	r3, [r2, #0]
 80018e2:	4b78      	ldr	r3, [pc, #480]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80018e4:	681b      	ldr	r3, [r3, #0]
 80018e6:	4a77      	ldr	r2, [pc, #476]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80018e8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018ec:	6013      	str	r3, [r2, #0]
 80018ee:	e01d      	b.n	800192c <HAL_RCC_OscConfig+0xd4>
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	685b      	ldr	r3, [r3, #4]
 80018f4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80018f8:	d10c      	bne.n	8001914 <HAL_RCC_OscConfig+0xbc>
 80018fa:	4b72      	ldr	r3, [pc, #456]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80018fc:	681b      	ldr	r3, [r3, #0]
 80018fe:	4a71      	ldr	r2, [pc, #452]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001900:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001904:	6013      	str	r3, [r2, #0]
 8001906:	4b6f      	ldr	r3, [pc, #444]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001908:	681b      	ldr	r3, [r3, #0]
 800190a:	4a6e      	ldr	r2, [pc, #440]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 800190c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001910:	6013      	str	r3, [r2, #0]
 8001912:	e00b      	b.n	800192c <HAL_RCC_OscConfig+0xd4>
 8001914:	4b6b      	ldr	r3, [pc, #428]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	4a6a      	ldr	r2, [pc, #424]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 800191a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800191e:	6013      	str	r3, [r2, #0]
 8001920:	4b68      	ldr	r3, [pc, #416]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001922:	681b      	ldr	r3, [r3, #0]
 8001924:	4a67      	ldr	r2, [pc, #412]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001926:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800192a:	6013      	str	r3, [r2, #0]
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	685b      	ldr	r3, [r3, #4]
 8001930:	2b00      	cmp	r3, #0
 8001932:	d013      	beq.n	800195c <HAL_RCC_OscConfig+0x104>
 8001934:	f7ff fcf0 	bl	8001318 <HAL_GetTick>
 8001938:	6138      	str	r0, [r7, #16]
 800193a:	e008      	b.n	800194e <HAL_RCC_OscConfig+0xf6>
 800193c:	f7ff fcec 	bl	8001318 <HAL_GetTick>
 8001940:	4602      	mov	r2, r0
 8001942:	693b      	ldr	r3, [r7, #16]
 8001944:	1ad3      	subs	r3, r2, r3
 8001946:	2b64      	cmp	r3, #100	; 0x64
 8001948:	d901      	bls.n	800194e <HAL_RCC_OscConfig+0xf6>
 800194a:	2303      	movs	r3, #3
 800194c:	e1fa      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 800194e:	4b5d      	ldr	r3, [pc, #372]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001956:	2b00      	cmp	r3, #0
 8001958:	d0f0      	beq.n	800193c <HAL_RCC_OscConfig+0xe4>
 800195a:	e014      	b.n	8001986 <HAL_RCC_OscConfig+0x12e>
 800195c:	f7ff fcdc 	bl	8001318 <HAL_GetTick>
 8001960:	6138      	str	r0, [r7, #16]
 8001962:	e008      	b.n	8001976 <HAL_RCC_OscConfig+0x11e>
 8001964:	f7ff fcd8 	bl	8001318 <HAL_GetTick>
 8001968:	4602      	mov	r2, r0
 800196a:	693b      	ldr	r3, [r7, #16]
 800196c:	1ad3      	subs	r3, r2, r3
 800196e:	2b64      	cmp	r3, #100	; 0x64
 8001970:	d901      	bls.n	8001976 <HAL_RCC_OscConfig+0x11e>
 8001972:	2303      	movs	r3, #3
 8001974:	e1e6      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001976:	4b53      	ldr	r3, [pc, #332]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001978:	681b      	ldr	r3, [r3, #0]
 800197a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800197e:	2b00      	cmp	r3, #0
 8001980:	d1f0      	bne.n	8001964 <HAL_RCC_OscConfig+0x10c>
 8001982:	e000      	b.n	8001986 <HAL_RCC_OscConfig+0x12e>
 8001984:	bf00      	nop
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	f003 0302 	and.w	r3, r3, #2
 800198e:	2b00      	cmp	r3, #0
 8001990:	d063      	beq.n	8001a5a <HAL_RCC_OscConfig+0x202>
 8001992:	4b4c      	ldr	r3, [pc, #304]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001994:	685b      	ldr	r3, [r3, #4]
 8001996:	f003 030c 	and.w	r3, r3, #12
 800199a:	2b00      	cmp	r3, #0
 800199c:	d00b      	beq.n	80019b6 <HAL_RCC_OscConfig+0x15e>
 800199e:	4b49      	ldr	r3, [pc, #292]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80019a0:	685b      	ldr	r3, [r3, #4]
 80019a2:	f003 030c 	and.w	r3, r3, #12
 80019a6:	2b08      	cmp	r3, #8
 80019a8:	d11c      	bne.n	80019e4 <HAL_RCC_OscConfig+0x18c>
 80019aa:	4b46      	ldr	r3, [pc, #280]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80019ac:	685b      	ldr	r3, [r3, #4]
 80019ae:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80019b2:	2b00      	cmp	r3, #0
 80019b4:	d116      	bne.n	80019e4 <HAL_RCC_OscConfig+0x18c>
 80019b6:	4b43      	ldr	r3, [pc, #268]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80019b8:	681b      	ldr	r3, [r3, #0]
 80019ba:	f003 0302 	and.w	r3, r3, #2
 80019be:	2b00      	cmp	r3, #0
 80019c0:	d005      	beq.n	80019ce <HAL_RCC_OscConfig+0x176>
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	691b      	ldr	r3, [r3, #16]
 80019c6:	2b01      	cmp	r3, #1
 80019c8:	d001      	beq.n	80019ce <HAL_RCC_OscConfig+0x176>
 80019ca:	2301      	movs	r3, #1
 80019cc:	e1ba      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 80019ce:	4b3d      	ldr	r3, [pc, #244]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	695b      	ldr	r3, [r3, #20]
 80019da:	00db      	lsls	r3, r3, #3
 80019dc:	4939      	ldr	r1, [pc, #228]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 80019de:	4313      	orrs	r3, r2
 80019e0:	600b      	str	r3, [r1, #0]
 80019e2:	e03a      	b.n	8001a5a <HAL_RCC_OscConfig+0x202>
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	691b      	ldr	r3, [r3, #16]
 80019e8:	2b00      	cmp	r3, #0
 80019ea:	d020      	beq.n	8001a2e <HAL_RCC_OscConfig+0x1d6>
 80019ec:	4b36      	ldr	r3, [pc, #216]	; (8001ac8 <HAL_RCC_OscConfig+0x270>)
 80019ee:	2201      	movs	r2, #1
 80019f0:	601a      	str	r2, [r3, #0]
 80019f2:	f7ff fc91 	bl	8001318 <HAL_GetTick>
 80019f6:	6138      	str	r0, [r7, #16]
 80019f8:	e008      	b.n	8001a0c <HAL_RCC_OscConfig+0x1b4>
 80019fa:	f7ff fc8d 	bl	8001318 <HAL_GetTick>
 80019fe:	4602      	mov	r2, r0
 8001a00:	693b      	ldr	r3, [r7, #16]
 8001a02:	1ad3      	subs	r3, r2, r3
 8001a04:	2b02      	cmp	r3, #2
 8001a06:	d901      	bls.n	8001a0c <HAL_RCC_OscConfig+0x1b4>
 8001a08:	2303      	movs	r3, #3
 8001a0a:	e19b      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001a0c:	4b2d      	ldr	r3, [pc, #180]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	f003 0302 	and.w	r3, r3, #2
 8001a14:	2b00      	cmp	r3, #0
 8001a16:	d0f0      	beq.n	80019fa <HAL_RCC_OscConfig+0x1a2>
 8001a18:	4b2a      	ldr	r3, [pc, #168]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001a1a:	681b      	ldr	r3, [r3, #0]
 8001a1c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001a20:	687b      	ldr	r3, [r7, #4]
 8001a22:	695b      	ldr	r3, [r3, #20]
 8001a24:	00db      	lsls	r3, r3, #3
 8001a26:	4927      	ldr	r1, [pc, #156]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001a28:	4313      	orrs	r3, r2
 8001a2a:	600b      	str	r3, [r1, #0]
 8001a2c:	e015      	b.n	8001a5a <HAL_RCC_OscConfig+0x202>
 8001a2e:	4b26      	ldr	r3, [pc, #152]	; (8001ac8 <HAL_RCC_OscConfig+0x270>)
 8001a30:	2200      	movs	r2, #0
 8001a32:	601a      	str	r2, [r3, #0]
 8001a34:	f7ff fc70 	bl	8001318 <HAL_GetTick>
 8001a38:	6138      	str	r0, [r7, #16]
 8001a3a:	e008      	b.n	8001a4e <HAL_RCC_OscConfig+0x1f6>
 8001a3c:	f7ff fc6c 	bl	8001318 <HAL_GetTick>
 8001a40:	4602      	mov	r2, r0
 8001a42:	693b      	ldr	r3, [r7, #16]
 8001a44:	1ad3      	subs	r3, r2, r3
 8001a46:	2b02      	cmp	r3, #2
 8001a48:	d901      	bls.n	8001a4e <HAL_RCC_OscConfig+0x1f6>
 8001a4a:	2303      	movs	r3, #3
 8001a4c:	e17a      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001a4e:	4b1d      	ldr	r3, [pc, #116]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	f003 0302 	and.w	r3, r3, #2
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	d1f0      	bne.n	8001a3c <HAL_RCC_OscConfig+0x1e4>
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	681b      	ldr	r3, [r3, #0]
 8001a5e:	f003 0308 	and.w	r3, r3, #8
 8001a62:	2b00      	cmp	r3, #0
 8001a64:	d03a      	beq.n	8001adc <HAL_RCC_OscConfig+0x284>
 8001a66:	687b      	ldr	r3, [r7, #4]
 8001a68:	699b      	ldr	r3, [r3, #24]
 8001a6a:	2b00      	cmp	r3, #0
 8001a6c:	d019      	beq.n	8001aa2 <HAL_RCC_OscConfig+0x24a>
 8001a6e:	4b17      	ldr	r3, [pc, #92]	; (8001acc <HAL_RCC_OscConfig+0x274>)
 8001a70:	2201      	movs	r2, #1
 8001a72:	601a      	str	r2, [r3, #0]
 8001a74:	f7ff fc50 	bl	8001318 <HAL_GetTick>
 8001a78:	6138      	str	r0, [r7, #16]
 8001a7a:	e008      	b.n	8001a8e <HAL_RCC_OscConfig+0x236>
 8001a7c:	f7ff fc4c 	bl	8001318 <HAL_GetTick>
 8001a80:	4602      	mov	r2, r0
 8001a82:	693b      	ldr	r3, [r7, #16]
 8001a84:	1ad3      	subs	r3, r2, r3
 8001a86:	2b02      	cmp	r3, #2
 8001a88:	d901      	bls.n	8001a8e <HAL_RCC_OscConfig+0x236>
 8001a8a:	2303      	movs	r3, #3
 8001a8c:	e15a      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001a8e:	4b0d      	ldr	r3, [pc, #52]	; (8001ac4 <HAL_RCC_OscConfig+0x26c>)
 8001a90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a92:	f003 0302 	and.w	r3, r3, #2
 8001a96:	2b00      	cmp	r3, #0
 8001a98:	d0f0      	beq.n	8001a7c <HAL_RCC_OscConfig+0x224>
 8001a9a:	2001      	movs	r0, #1
 8001a9c:	f000 fb08 	bl	80020b0 <RCC_Delay>
 8001aa0:	e01c      	b.n	8001adc <HAL_RCC_OscConfig+0x284>
 8001aa2:	4b0a      	ldr	r3, [pc, #40]	; (8001acc <HAL_RCC_OscConfig+0x274>)
 8001aa4:	2200      	movs	r2, #0
 8001aa6:	601a      	str	r2, [r3, #0]
 8001aa8:	f7ff fc36 	bl	8001318 <HAL_GetTick>
 8001aac:	6138      	str	r0, [r7, #16]
 8001aae:	e00f      	b.n	8001ad0 <HAL_RCC_OscConfig+0x278>
 8001ab0:	f7ff fc32 	bl	8001318 <HAL_GetTick>
 8001ab4:	4602      	mov	r2, r0
 8001ab6:	693b      	ldr	r3, [r7, #16]
 8001ab8:	1ad3      	subs	r3, r2, r3
 8001aba:	2b02      	cmp	r3, #2
 8001abc:	d908      	bls.n	8001ad0 <HAL_RCC_OscConfig+0x278>
 8001abe:	2303      	movs	r3, #3
 8001ac0:	e140      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001ac2:	bf00      	nop
 8001ac4:	40021000 	.word	0x40021000
 8001ac8:	42420000 	.word	0x42420000
 8001acc:	42420480 	.word	0x42420480
 8001ad0:	4b9e      	ldr	r3, [pc, #632]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001ad2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ad4:	f003 0302 	and.w	r3, r3, #2
 8001ad8:	2b00      	cmp	r3, #0
 8001ada:	d1e9      	bne.n	8001ab0 <HAL_RCC_OscConfig+0x258>
 8001adc:	687b      	ldr	r3, [r7, #4]
 8001ade:	681b      	ldr	r3, [r3, #0]
 8001ae0:	f003 0304 	and.w	r3, r3, #4
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	f000 80a6 	beq.w	8001c36 <HAL_RCC_OscConfig+0x3de>
 8001aea:	2300      	movs	r3, #0
 8001aec:	75fb      	strb	r3, [r7, #23]
 8001aee:	4b97      	ldr	r3, [pc, #604]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001af0:	69db      	ldr	r3, [r3, #28]
 8001af2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001af6:	2b00      	cmp	r3, #0
 8001af8:	d10d      	bne.n	8001b16 <HAL_RCC_OscConfig+0x2be>
 8001afa:	4b94      	ldr	r3, [pc, #592]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001afc:	69db      	ldr	r3, [r3, #28]
 8001afe:	4a93      	ldr	r2, [pc, #588]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001b00:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001b04:	61d3      	str	r3, [r2, #28]
 8001b06:	4b91      	ldr	r3, [pc, #580]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001b08:	69db      	ldr	r3, [r3, #28]
 8001b0a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b0e:	60bb      	str	r3, [r7, #8]
 8001b10:	68bb      	ldr	r3, [r7, #8]
 8001b12:	2301      	movs	r3, #1
 8001b14:	75fb      	strb	r3, [r7, #23]
 8001b16:	4b8e      	ldr	r3, [pc, #568]	; (8001d50 <HAL_RCC_OscConfig+0x4f8>)
 8001b18:	681b      	ldr	r3, [r3, #0]
 8001b1a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b1e:	2b00      	cmp	r3, #0
 8001b20:	d118      	bne.n	8001b54 <HAL_RCC_OscConfig+0x2fc>
 8001b22:	4b8b      	ldr	r3, [pc, #556]	; (8001d50 <HAL_RCC_OscConfig+0x4f8>)
 8001b24:	681b      	ldr	r3, [r3, #0]
 8001b26:	4a8a      	ldr	r2, [pc, #552]	; (8001d50 <HAL_RCC_OscConfig+0x4f8>)
 8001b28:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001b2c:	6013      	str	r3, [r2, #0]
 8001b2e:	f7ff fbf3 	bl	8001318 <HAL_GetTick>
 8001b32:	6138      	str	r0, [r7, #16]
 8001b34:	e008      	b.n	8001b48 <HAL_RCC_OscConfig+0x2f0>
 8001b36:	f7ff fbef 	bl	8001318 <HAL_GetTick>
 8001b3a:	4602      	mov	r2, r0
 8001b3c:	693b      	ldr	r3, [r7, #16]
 8001b3e:	1ad3      	subs	r3, r2, r3
 8001b40:	2b64      	cmp	r3, #100	; 0x64
 8001b42:	d901      	bls.n	8001b48 <HAL_RCC_OscConfig+0x2f0>
 8001b44:	2303      	movs	r3, #3
 8001b46:	e0fd      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001b48:	4b81      	ldr	r3, [pc, #516]	; (8001d50 <HAL_RCC_OscConfig+0x4f8>)
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b50:	2b00      	cmp	r3, #0
 8001b52:	d0f0      	beq.n	8001b36 <HAL_RCC_OscConfig+0x2de>
 8001b54:	687b      	ldr	r3, [r7, #4]
 8001b56:	68db      	ldr	r3, [r3, #12]
 8001b58:	2b01      	cmp	r3, #1
 8001b5a:	d106      	bne.n	8001b6a <HAL_RCC_OscConfig+0x312>
 8001b5c:	4b7b      	ldr	r3, [pc, #492]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001b5e:	6a1b      	ldr	r3, [r3, #32]
 8001b60:	4a7a      	ldr	r2, [pc, #488]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001b62:	f043 0301 	orr.w	r3, r3, #1
 8001b66:	6213      	str	r3, [r2, #32]
 8001b68:	e02d      	b.n	8001bc6 <HAL_RCC_OscConfig+0x36e>
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	68db      	ldr	r3, [r3, #12]
 8001b6e:	2b00      	cmp	r3, #0
 8001b70:	d10c      	bne.n	8001b8c <HAL_RCC_OscConfig+0x334>
 8001b72:	4b76      	ldr	r3, [pc, #472]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001b74:	6a1b      	ldr	r3, [r3, #32]
 8001b76:	4a75      	ldr	r2, [pc, #468]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001b78:	f023 0301 	bic.w	r3, r3, #1
 8001b7c:	6213      	str	r3, [r2, #32]
 8001b7e:	4b73      	ldr	r3, [pc, #460]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001b80:	6a1b      	ldr	r3, [r3, #32]
 8001b82:	4a72      	ldr	r2, [pc, #456]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001b84:	f023 0304 	bic.w	r3, r3, #4
 8001b88:	6213      	str	r3, [r2, #32]
 8001b8a:	e01c      	b.n	8001bc6 <HAL_RCC_OscConfig+0x36e>
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	68db      	ldr	r3, [r3, #12]
 8001b90:	2b05      	cmp	r3, #5
 8001b92:	d10c      	bne.n	8001bae <HAL_RCC_OscConfig+0x356>
 8001b94:	4b6d      	ldr	r3, [pc, #436]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001b96:	6a1b      	ldr	r3, [r3, #32]
 8001b98:	4a6c      	ldr	r2, [pc, #432]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001b9a:	f043 0304 	orr.w	r3, r3, #4
 8001b9e:	6213      	str	r3, [r2, #32]
 8001ba0:	4b6a      	ldr	r3, [pc, #424]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001ba2:	6a1b      	ldr	r3, [r3, #32]
 8001ba4:	4a69      	ldr	r2, [pc, #420]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001ba6:	f043 0301 	orr.w	r3, r3, #1
 8001baa:	6213      	str	r3, [r2, #32]
 8001bac:	e00b      	b.n	8001bc6 <HAL_RCC_OscConfig+0x36e>
 8001bae:	4b67      	ldr	r3, [pc, #412]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001bb0:	6a1b      	ldr	r3, [r3, #32]
 8001bb2:	4a66      	ldr	r2, [pc, #408]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001bb4:	f023 0301 	bic.w	r3, r3, #1
 8001bb8:	6213      	str	r3, [r2, #32]
 8001bba:	4b64      	ldr	r3, [pc, #400]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001bbc:	6a1b      	ldr	r3, [r3, #32]
 8001bbe:	4a63      	ldr	r2, [pc, #396]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001bc0:	f023 0304 	bic.w	r3, r3, #4
 8001bc4:	6213      	str	r3, [r2, #32]
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	68db      	ldr	r3, [r3, #12]
 8001bca:	2b00      	cmp	r3, #0
 8001bcc:	d015      	beq.n	8001bfa <HAL_RCC_OscConfig+0x3a2>
 8001bce:	f7ff fba3 	bl	8001318 <HAL_GetTick>
 8001bd2:	6138      	str	r0, [r7, #16]
 8001bd4:	e00a      	b.n	8001bec <HAL_RCC_OscConfig+0x394>
 8001bd6:	f7ff fb9f 	bl	8001318 <HAL_GetTick>
 8001bda:	4602      	mov	r2, r0
 8001bdc:	693b      	ldr	r3, [r7, #16]
 8001bde:	1ad3      	subs	r3, r2, r3
 8001be0:	f241 3288 	movw	r2, #5000	; 0x1388
 8001be4:	4293      	cmp	r3, r2
 8001be6:	d901      	bls.n	8001bec <HAL_RCC_OscConfig+0x394>
 8001be8:	2303      	movs	r3, #3
 8001bea:	e0ab      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001bec:	4b57      	ldr	r3, [pc, #348]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001bee:	6a1b      	ldr	r3, [r3, #32]
 8001bf0:	f003 0302 	and.w	r3, r3, #2
 8001bf4:	2b00      	cmp	r3, #0
 8001bf6:	d0ee      	beq.n	8001bd6 <HAL_RCC_OscConfig+0x37e>
 8001bf8:	e014      	b.n	8001c24 <HAL_RCC_OscConfig+0x3cc>
 8001bfa:	f7ff fb8d 	bl	8001318 <HAL_GetTick>
 8001bfe:	6138      	str	r0, [r7, #16]
 8001c00:	e00a      	b.n	8001c18 <HAL_RCC_OscConfig+0x3c0>
 8001c02:	f7ff fb89 	bl	8001318 <HAL_GetTick>
 8001c06:	4602      	mov	r2, r0
 8001c08:	693b      	ldr	r3, [r7, #16]
 8001c0a:	1ad3      	subs	r3, r2, r3
 8001c0c:	f241 3288 	movw	r2, #5000	; 0x1388
 8001c10:	4293      	cmp	r3, r2
 8001c12:	d901      	bls.n	8001c18 <HAL_RCC_OscConfig+0x3c0>
 8001c14:	2303      	movs	r3, #3
 8001c16:	e095      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001c18:	4b4c      	ldr	r3, [pc, #304]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001c1a:	6a1b      	ldr	r3, [r3, #32]
 8001c1c:	f003 0302 	and.w	r3, r3, #2
 8001c20:	2b00      	cmp	r3, #0
 8001c22:	d1ee      	bne.n	8001c02 <HAL_RCC_OscConfig+0x3aa>
 8001c24:	7dfb      	ldrb	r3, [r7, #23]
 8001c26:	2b01      	cmp	r3, #1
 8001c28:	d105      	bne.n	8001c36 <HAL_RCC_OscConfig+0x3de>
 8001c2a:	4b48      	ldr	r3, [pc, #288]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001c2c:	69db      	ldr	r3, [r3, #28]
 8001c2e:	4a47      	ldr	r2, [pc, #284]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001c30:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001c34:	61d3      	str	r3, [r2, #28]
 8001c36:	687b      	ldr	r3, [r7, #4]
 8001c38:	69db      	ldr	r3, [r3, #28]
 8001c3a:	2b00      	cmp	r3, #0
 8001c3c:	f000 8081 	beq.w	8001d42 <HAL_RCC_OscConfig+0x4ea>
 8001c40:	4b42      	ldr	r3, [pc, #264]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001c42:	685b      	ldr	r3, [r3, #4]
 8001c44:	f003 030c 	and.w	r3, r3, #12
 8001c48:	2b08      	cmp	r3, #8
 8001c4a:	d061      	beq.n	8001d10 <HAL_RCC_OscConfig+0x4b8>
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	69db      	ldr	r3, [r3, #28]
 8001c50:	2b02      	cmp	r3, #2
 8001c52:	d146      	bne.n	8001ce2 <HAL_RCC_OscConfig+0x48a>
 8001c54:	4b3f      	ldr	r3, [pc, #252]	; (8001d54 <HAL_RCC_OscConfig+0x4fc>)
 8001c56:	2200      	movs	r2, #0
 8001c58:	601a      	str	r2, [r3, #0]
 8001c5a:	f7ff fb5d 	bl	8001318 <HAL_GetTick>
 8001c5e:	6138      	str	r0, [r7, #16]
 8001c60:	e008      	b.n	8001c74 <HAL_RCC_OscConfig+0x41c>
 8001c62:	f7ff fb59 	bl	8001318 <HAL_GetTick>
 8001c66:	4602      	mov	r2, r0
 8001c68:	693b      	ldr	r3, [r7, #16]
 8001c6a:	1ad3      	subs	r3, r2, r3
 8001c6c:	2b02      	cmp	r3, #2
 8001c6e:	d901      	bls.n	8001c74 <HAL_RCC_OscConfig+0x41c>
 8001c70:	2303      	movs	r3, #3
 8001c72:	e067      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001c74:	4b35      	ldr	r3, [pc, #212]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c7c:	2b00      	cmp	r3, #0
 8001c7e:	d1f0      	bne.n	8001c62 <HAL_RCC_OscConfig+0x40a>
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	6a1b      	ldr	r3, [r3, #32]
 8001c84:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001c88:	d108      	bne.n	8001c9c <HAL_RCC_OscConfig+0x444>
 8001c8a:	4b30      	ldr	r3, [pc, #192]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001c8c:	685b      	ldr	r3, [r3, #4]
 8001c8e:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001c92:	687b      	ldr	r3, [r7, #4]
 8001c94:	689b      	ldr	r3, [r3, #8]
 8001c96:	492d      	ldr	r1, [pc, #180]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001c98:	4313      	orrs	r3, r2
 8001c9a:	604b      	str	r3, [r1, #4]
 8001c9c:	4b2b      	ldr	r3, [pc, #172]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001c9e:	685b      	ldr	r3, [r3, #4]
 8001ca0:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	6a19      	ldr	r1, [r3, #32]
 8001ca8:	687b      	ldr	r3, [r7, #4]
 8001caa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cac:	430b      	orrs	r3, r1
 8001cae:	4927      	ldr	r1, [pc, #156]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001cb0:	4313      	orrs	r3, r2
 8001cb2:	604b      	str	r3, [r1, #4]
 8001cb4:	4b27      	ldr	r3, [pc, #156]	; (8001d54 <HAL_RCC_OscConfig+0x4fc>)
 8001cb6:	2201      	movs	r2, #1
 8001cb8:	601a      	str	r2, [r3, #0]
 8001cba:	f7ff fb2d 	bl	8001318 <HAL_GetTick>
 8001cbe:	6138      	str	r0, [r7, #16]
 8001cc0:	e008      	b.n	8001cd4 <HAL_RCC_OscConfig+0x47c>
 8001cc2:	f7ff fb29 	bl	8001318 <HAL_GetTick>
 8001cc6:	4602      	mov	r2, r0
 8001cc8:	693b      	ldr	r3, [r7, #16]
 8001cca:	1ad3      	subs	r3, r2, r3
 8001ccc:	2b02      	cmp	r3, #2
 8001cce:	d901      	bls.n	8001cd4 <HAL_RCC_OscConfig+0x47c>
 8001cd0:	2303      	movs	r3, #3
 8001cd2:	e037      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001cd4:	4b1d      	ldr	r3, [pc, #116]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	d0f0      	beq.n	8001cc2 <HAL_RCC_OscConfig+0x46a>
 8001ce0:	e02f      	b.n	8001d42 <HAL_RCC_OscConfig+0x4ea>
 8001ce2:	4b1c      	ldr	r3, [pc, #112]	; (8001d54 <HAL_RCC_OscConfig+0x4fc>)
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	601a      	str	r2, [r3, #0]
 8001ce8:	f7ff fb16 	bl	8001318 <HAL_GetTick>
 8001cec:	6138      	str	r0, [r7, #16]
 8001cee:	e008      	b.n	8001d02 <HAL_RCC_OscConfig+0x4aa>
 8001cf0:	f7ff fb12 	bl	8001318 <HAL_GetTick>
 8001cf4:	4602      	mov	r2, r0
 8001cf6:	693b      	ldr	r3, [r7, #16]
 8001cf8:	1ad3      	subs	r3, r2, r3
 8001cfa:	2b02      	cmp	r3, #2
 8001cfc:	d901      	bls.n	8001d02 <HAL_RCC_OscConfig+0x4aa>
 8001cfe:	2303      	movs	r3, #3
 8001d00:	e020      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001d02:	4b12      	ldr	r3, [pc, #72]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d0a:	2b00      	cmp	r3, #0
 8001d0c:	d1f0      	bne.n	8001cf0 <HAL_RCC_OscConfig+0x498>
 8001d0e:	e018      	b.n	8001d42 <HAL_RCC_OscConfig+0x4ea>
 8001d10:	687b      	ldr	r3, [r7, #4]
 8001d12:	69db      	ldr	r3, [r3, #28]
 8001d14:	2b01      	cmp	r3, #1
 8001d16:	d101      	bne.n	8001d1c <HAL_RCC_OscConfig+0x4c4>
 8001d18:	2301      	movs	r3, #1
 8001d1a:	e013      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001d1c:	4b0b      	ldr	r3, [pc, #44]	; (8001d4c <HAL_RCC_OscConfig+0x4f4>)
 8001d1e:	685b      	ldr	r3, [r3, #4]
 8001d20:	60fb      	str	r3, [r7, #12]
 8001d22:	68fb      	ldr	r3, [r7, #12]
 8001d24:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	6a1b      	ldr	r3, [r3, #32]
 8001d2c:	429a      	cmp	r2, r3
 8001d2e:	d106      	bne.n	8001d3e <HAL_RCC_OscConfig+0x4e6>
 8001d30:	68fb      	ldr	r3, [r7, #12]
 8001d32:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d3a:	429a      	cmp	r2, r3
 8001d3c:	d001      	beq.n	8001d42 <HAL_RCC_OscConfig+0x4ea>
 8001d3e:	2301      	movs	r3, #1
 8001d40:	e000      	b.n	8001d44 <HAL_RCC_OscConfig+0x4ec>
 8001d42:	2300      	movs	r3, #0
 8001d44:	4618      	mov	r0, r3
 8001d46:	3718      	adds	r7, #24
 8001d48:	46bd      	mov	sp, r7
 8001d4a:	bd80      	pop	{r7, pc}
 8001d4c:	40021000 	.word	0x40021000
 8001d50:	40007000 	.word	0x40007000
 8001d54:	42420060 	.word	0x42420060

08001d58 <HAL_RCC_ClockConfig>:
 8001d58:	b580      	push	{r7, lr}
 8001d5a:	b084      	sub	sp, #16
 8001d5c:	af00      	add	r7, sp, #0
 8001d5e:	6078      	str	r0, [r7, #4]
 8001d60:	6039      	str	r1, [r7, #0]
 8001d62:	687b      	ldr	r3, [r7, #4]
 8001d64:	2b00      	cmp	r3, #0
 8001d66:	d101      	bne.n	8001d6c <HAL_RCC_ClockConfig+0x14>
 8001d68:	2301      	movs	r3, #1
 8001d6a:	e0d0      	b.n	8001f0e <HAL_RCC_ClockConfig+0x1b6>
 8001d6c:	4b6a      	ldr	r3, [pc, #424]	; (8001f18 <HAL_RCC_ClockConfig+0x1c0>)
 8001d6e:	681b      	ldr	r3, [r3, #0]
 8001d70:	f003 0307 	and.w	r3, r3, #7
 8001d74:	683a      	ldr	r2, [r7, #0]
 8001d76:	429a      	cmp	r2, r3
 8001d78:	d910      	bls.n	8001d9c <HAL_RCC_ClockConfig+0x44>
 8001d7a:	4b67      	ldr	r3, [pc, #412]	; (8001f18 <HAL_RCC_ClockConfig+0x1c0>)
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	f023 0207 	bic.w	r2, r3, #7
 8001d82:	4965      	ldr	r1, [pc, #404]	; (8001f18 <HAL_RCC_ClockConfig+0x1c0>)
 8001d84:	683b      	ldr	r3, [r7, #0]
 8001d86:	4313      	orrs	r3, r2
 8001d88:	600b      	str	r3, [r1, #0]
 8001d8a:	4b63      	ldr	r3, [pc, #396]	; (8001f18 <HAL_RCC_ClockConfig+0x1c0>)
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	f003 0307 	and.w	r3, r3, #7
 8001d92:	683a      	ldr	r2, [r7, #0]
 8001d94:	429a      	cmp	r2, r3
 8001d96:	d001      	beq.n	8001d9c <HAL_RCC_ClockConfig+0x44>
 8001d98:	2301      	movs	r3, #1
 8001d9a:	e0b8      	b.n	8001f0e <HAL_RCC_ClockConfig+0x1b6>
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	681b      	ldr	r3, [r3, #0]
 8001da0:	f003 0302 	and.w	r3, r3, #2
 8001da4:	2b00      	cmp	r3, #0
 8001da6:	d020      	beq.n	8001dea <HAL_RCC_ClockConfig+0x92>
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	681b      	ldr	r3, [r3, #0]
 8001dac:	f003 0304 	and.w	r3, r3, #4
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	d005      	beq.n	8001dc0 <HAL_RCC_ClockConfig+0x68>
 8001db4:	4b59      	ldr	r3, [pc, #356]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001db6:	685b      	ldr	r3, [r3, #4]
 8001db8:	4a58      	ldr	r2, [pc, #352]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001dba:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001dbe:	6053      	str	r3, [r2, #4]
 8001dc0:	687b      	ldr	r3, [r7, #4]
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	f003 0308 	and.w	r3, r3, #8
 8001dc8:	2b00      	cmp	r3, #0
 8001dca:	d005      	beq.n	8001dd8 <HAL_RCC_ClockConfig+0x80>
 8001dcc:	4b53      	ldr	r3, [pc, #332]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001dce:	685b      	ldr	r3, [r3, #4]
 8001dd0:	4a52      	ldr	r2, [pc, #328]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001dd2:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001dd6:	6053      	str	r3, [r2, #4]
 8001dd8:	4b50      	ldr	r3, [pc, #320]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001dda:	685b      	ldr	r3, [r3, #4]
 8001ddc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	689b      	ldr	r3, [r3, #8]
 8001de4:	494d      	ldr	r1, [pc, #308]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001de6:	4313      	orrs	r3, r2
 8001de8:	604b      	str	r3, [r1, #4]
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	681b      	ldr	r3, [r3, #0]
 8001dee:	f003 0301 	and.w	r3, r3, #1
 8001df2:	2b00      	cmp	r3, #0
 8001df4:	d040      	beq.n	8001e78 <HAL_RCC_ClockConfig+0x120>
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	685b      	ldr	r3, [r3, #4]
 8001dfa:	2b01      	cmp	r3, #1
 8001dfc:	d107      	bne.n	8001e0e <HAL_RCC_ClockConfig+0xb6>
 8001dfe:	4b47      	ldr	r3, [pc, #284]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e06:	2b00      	cmp	r3, #0
 8001e08:	d115      	bne.n	8001e36 <HAL_RCC_ClockConfig+0xde>
 8001e0a:	2301      	movs	r3, #1
 8001e0c:	e07f      	b.n	8001f0e <HAL_RCC_ClockConfig+0x1b6>
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	685b      	ldr	r3, [r3, #4]
 8001e12:	2b02      	cmp	r3, #2
 8001e14:	d107      	bne.n	8001e26 <HAL_RCC_ClockConfig+0xce>
 8001e16:	4b41      	ldr	r3, [pc, #260]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001e1e:	2b00      	cmp	r3, #0
 8001e20:	d109      	bne.n	8001e36 <HAL_RCC_ClockConfig+0xde>
 8001e22:	2301      	movs	r3, #1
 8001e24:	e073      	b.n	8001f0e <HAL_RCC_ClockConfig+0x1b6>
 8001e26:	4b3d      	ldr	r3, [pc, #244]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001e28:	681b      	ldr	r3, [r3, #0]
 8001e2a:	f003 0302 	and.w	r3, r3, #2
 8001e2e:	2b00      	cmp	r3, #0
 8001e30:	d101      	bne.n	8001e36 <HAL_RCC_ClockConfig+0xde>
 8001e32:	2301      	movs	r3, #1
 8001e34:	e06b      	b.n	8001f0e <HAL_RCC_ClockConfig+0x1b6>
 8001e36:	4b39      	ldr	r3, [pc, #228]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001e38:	685b      	ldr	r3, [r3, #4]
 8001e3a:	f023 0203 	bic.w	r2, r3, #3
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	685b      	ldr	r3, [r3, #4]
 8001e42:	4936      	ldr	r1, [pc, #216]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001e44:	4313      	orrs	r3, r2
 8001e46:	604b      	str	r3, [r1, #4]
 8001e48:	f7ff fa66 	bl	8001318 <HAL_GetTick>
 8001e4c:	60f8      	str	r0, [r7, #12]
 8001e4e:	e00a      	b.n	8001e66 <HAL_RCC_ClockConfig+0x10e>
 8001e50:	f7ff fa62 	bl	8001318 <HAL_GetTick>
 8001e54:	4602      	mov	r2, r0
 8001e56:	68fb      	ldr	r3, [r7, #12]
 8001e58:	1ad3      	subs	r3, r2, r3
 8001e5a:	f241 3288 	movw	r2, #5000	; 0x1388
 8001e5e:	4293      	cmp	r3, r2
 8001e60:	d901      	bls.n	8001e66 <HAL_RCC_ClockConfig+0x10e>
 8001e62:	2303      	movs	r3, #3
 8001e64:	e053      	b.n	8001f0e <HAL_RCC_ClockConfig+0x1b6>
 8001e66:	4b2d      	ldr	r3, [pc, #180]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001e68:	685b      	ldr	r3, [r3, #4]
 8001e6a:	f003 020c 	and.w	r2, r3, #12
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	685b      	ldr	r3, [r3, #4]
 8001e72:	009b      	lsls	r3, r3, #2
 8001e74:	429a      	cmp	r2, r3
 8001e76:	d1eb      	bne.n	8001e50 <HAL_RCC_ClockConfig+0xf8>
 8001e78:	4b27      	ldr	r3, [pc, #156]	; (8001f18 <HAL_RCC_ClockConfig+0x1c0>)
 8001e7a:	681b      	ldr	r3, [r3, #0]
 8001e7c:	f003 0307 	and.w	r3, r3, #7
 8001e80:	683a      	ldr	r2, [r7, #0]
 8001e82:	429a      	cmp	r2, r3
 8001e84:	d210      	bcs.n	8001ea8 <HAL_RCC_ClockConfig+0x150>
 8001e86:	4b24      	ldr	r3, [pc, #144]	; (8001f18 <HAL_RCC_ClockConfig+0x1c0>)
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	f023 0207 	bic.w	r2, r3, #7
 8001e8e:	4922      	ldr	r1, [pc, #136]	; (8001f18 <HAL_RCC_ClockConfig+0x1c0>)
 8001e90:	683b      	ldr	r3, [r7, #0]
 8001e92:	4313      	orrs	r3, r2
 8001e94:	600b      	str	r3, [r1, #0]
 8001e96:	4b20      	ldr	r3, [pc, #128]	; (8001f18 <HAL_RCC_ClockConfig+0x1c0>)
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	f003 0307 	and.w	r3, r3, #7
 8001e9e:	683a      	ldr	r2, [r7, #0]
 8001ea0:	429a      	cmp	r2, r3
 8001ea2:	d001      	beq.n	8001ea8 <HAL_RCC_ClockConfig+0x150>
 8001ea4:	2301      	movs	r3, #1
 8001ea6:	e032      	b.n	8001f0e <HAL_RCC_ClockConfig+0x1b6>
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	f003 0304 	and.w	r3, r3, #4
 8001eb0:	2b00      	cmp	r3, #0
 8001eb2:	d008      	beq.n	8001ec6 <HAL_RCC_ClockConfig+0x16e>
 8001eb4:	4b19      	ldr	r3, [pc, #100]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001eb6:	685b      	ldr	r3, [r3, #4]
 8001eb8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	68db      	ldr	r3, [r3, #12]
 8001ec0:	4916      	ldr	r1, [pc, #88]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001ec2:	4313      	orrs	r3, r2
 8001ec4:	604b      	str	r3, [r1, #4]
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	681b      	ldr	r3, [r3, #0]
 8001eca:	f003 0308 	and.w	r3, r3, #8
 8001ece:	2b00      	cmp	r3, #0
 8001ed0:	d009      	beq.n	8001ee6 <HAL_RCC_ClockConfig+0x18e>
 8001ed2:	4b12      	ldr	r3, [pc, #72]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001ed4:	685b      	ldr	r3, [r3, #4]
 8001ed6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	691b      	ldr	r3, [r3, #16]
 8001ede:	00db      	lsls	r3, r3, #3
 8001ee0:	490e      	ldr	r1, [pc, #56]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001ee2:	4313      	orrs	r3, r2
 8001ee4:	604b      	str	r3, [r1, #4]
 8001ee6:	f000 f821 	bl	8001f2c <HAL_RCC_GetSysClockFreq>
 8001eea:	4602      	mov	r2, r0
 8001eec:	4b0b      	ldr	r3, [pc, #44]	; (8001f1c <HAL_RCC_ClockConfig+0x1c4>)
 8001eee:	685b      	ldr	r3, [r3, #4]
 8001ef0:	091b      	lsrs	r3, r3, #4
 8001ef2:	f003 030f 	and.w	r3, r3, #15
 8001ef6:	490a      	ldr	r1, [pc, #40]	; (8001f20 <HAL_RCC_ClockConfig+0x1c8>)
 8001ef8:	5ccb      	ldrb	r3, [r1, r3]
 8001efa:	fa22 f303 	lsr.w	r3, r2, r3
 8001efe:	4a09      	ldr	r2, [pc, #36]	; (8001f24 <HAL_RCC_ClockConfig+0x1cc>)
 8001f00:	6013      	str	r3, [r2, #0]
 8001f02:	4b09      	ldr	r3, [pc, #36]	; (8001f28 <HAL_RCC_ClockConfig+0x1d0>)
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	4618      	mov	r0, r3
 8001f08:	f7ff f87c 	bl	8001004 <HAL_InitTick>
 8001f0c:	2300      	movs	r3, #0
 8001f0e:	4618      	mov	r0, r3
 8001f10:	3710      	adds	r7, #16
 8001f12:	46bd      	mov	sp, r7
 8001f14:	bd80      	pop	{r7, pc}
 8001f16:	bf00      	nop
 8001f18:	40022000 	.word	0x40022000
 8001f1c:	40021000 	.word	0x40021000
 8001f20:	08005394 	.word	0x08005394
 8001f24:	200000e0 	.word	0x200000e0
 8001f28:	200000e4 	.word	0x200000e4

08001f2c <HAL_RCC_GetSysClockFreq>:
 8001f2c:	b490      	push	{r4, r7}
 8001f2e:	b08a      	sub	sp, #40	; 0x28
 8001f30:	af00      	add	r7, sp, #0
 8001f32:	4b2a      	ldr	r3, [pc, #168]	; (8001fdc <HAL_RCC_GetSysClockFreq+0xb0>)
 8001f34:	1d3c      	adds	r4, r7, #4
 8001f36:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001f38:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001f3c:	f240 2301 	movw	r3, #513	; 0x201
 8001f40:	803b      	strh	r3, [r7, #0]
 8001f42:	2300      	movs	r3, #0
 8001f44:	61fb      	str	r3, [r7, #28]
 8001f46:	2300      	movs	r3, #0
 8001f48:	61bb      	str	r3, [r7, #24]
 8001f4a:	2300      	movs	r3, #0
 8001f4c:	627b      	str	r3, [r7, #36]	; 0x24
 8001f4e:	2300      	movs	r3, #0
 8001f50:	617b      	str	r3, [r7, #20]
 8001f52:	2300      	movs	r3, #0
 8001f54:	623b      	str	r3, [r7, #32]
 8001f56:	4b22      	ldr	r3, [pc, #136]	; (8001fe0 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001f58:	685b      	ldr	r3, [r3, #4]
 8001f5a:	61fb      	str	r3, [r7, #28]
 8001f5c:	69fb      	ldr	r3, [r7, #28]
 8001f5e:	f003 030c 	and.w	r3, r3, #12
 8001f62:	2b04      	cmp	r3, #4
 8001f64:	d002      	beq.n	8001f6c <HAL_RCC_GetSysClockFreq+0x40>
 8001f66:	2b08      	cmp	r3, #8
 8001f68:	d003      	beq.n	8001f72 <HAL_RCC_GetSysClockFreq+0x46>
 8001f6a:	e02d      	b.n	8001fc8 <HAL_RCC_GetSysClockFreq+0x9c>
 8001f6c:	4b1d      	ldr	r3, [pc, #116]	; (8001fe4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001f6e:	623b      	str	r3, [r7, #32]
 8001f70:	e02d      	b.n	8001fce <HAL_RCC_GetSysClockFreq+0xa2>
 8001f72:	69fb      	ldr	r3, [r7, #28]
 8001f74:	0c9b      	lsrs	r3, r3, #18
 8001f76:	f003 030f 	and.w	r3, r3, #15
 8001f7a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001f7e:	4413      	add	r3, r2
 8001f80:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001f84:	617b      	str	r3, [r7, #20]
 8001f86:	69fb      	ldr	r3, [r7, #28]
 8001f88:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001f8c:	2b00      	cmp	r3, #0
 8001f8e:	d013      	beq.n	8001fb8 <HAL_RCC_GetSysClockFreq+0x8c>
 8001f90:	4b13      	ldr	r3, [pc, #76]	; (8001fe0 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001f92:	685b      	ldr	r3, [r3, #4]
 8001f94:	0c5b      	lsrs	r3, r3, #17
 8001f96:	f003 0301 	and.w	r3, r3, #1
 8001f9a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001f9e:	4413      	add	r3, r2
 8001fa0:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001fa4:	61bb      	str	r3, [r7, #24]
 8001fa6:	697b      	ldr	r3, [r7, #20]
 8001fa8:	4a0e      	ldr	r2, [pc, #56]	; (8001fe4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001faa:	fb02 f203 	mul.w	r2, r2, r3
 8001fae:	69bb      	ldr	r3, [r7, #24]
 8001fb0:	fbb2 f3f3 	udiv	r3, r2, r3
 8001fb4:	627b      	str	r3, [r7, #36]	; 0x24
 8001fb6:	e004      	b.n	8001fc2 <HAL_RCC_GetSysClockFreq+0x96>
 8001fb8:	697b      	ldr	r3, [r7, #20]
 8001fba:	4a0b      	ldr	r2, [pc, #44]	; (8001fe8 <HAL_RCC_GetSysClockFreq+0xbc>)
 8001fbc:	fb02 f303 	mul.w	r3, r2, r3
 8001fc0:	627b      	str	r3, [r7, #36]	; 0x24
 8001fc2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fc4:	623b      	str	r3, [r7, #32]
 8001fc6:	e002      	b.n	8001fce <HAL_RCC_GetSysClockFreq+0xa2>
 8001fc8:	4b06      	ldr	r3, [pc, #24]	; (8001fe4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001fca:	623b      	str	r3, [r7, #32]
 8001fcc:	bf00      	nop
 8001fce:	6a3b      	ldr	r3, [r7, #32]
 8001fd0:	4618      	mov	r0, r3
 8001fd2:	3728      	adds	r7, #40	; 0x28
 8001fd4:	46bd      	mov	sp, r7
 8001fd6:	bc90      	pop	{r4, r7}
 8001fd8:	4770      	bx	lr
 8001fda:	bf00      	nop
 8001fdc:	08005378 	.word	0x08005378
 8001fe0:	40021000 	.word	0x40021000
 8001fe4:	007a1200 	.word	0x007a1200
 8001fe8:	003d0900 	.word	0x003d0900

08001fec <HAL_RCC_GetHCLKFreq>:
 8001fec:	b480      	push	{r7}
 8001fee:	af00      	add	r7, sp, #0
 8001ff0:	4b02      	ldr	r3, [pc, #8]	; (8001ffc <HAL_RCC_GetHCLKFreq+0x10>)
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	4618      	mov	r0, r3
 8001ff6:	46bd      	mov	sp, r7
 8001ff8:	bc80      	pop	{r7}
 8001ffa:	4770      	bx	lr
 8001ffc:	200000e0 	.word	0x200000e0

08002000 <HAL_RCC_GetPCLK1Freq>:
 8002000:	b580      	push	{r7, lr}
 8002002:	af00      	add	r7, sp, #0
 8002004:	f7ff fff2 	bl	8001fec <HAL_RCC_GetHCLKFreq>
 8002008:	4602      	mov	r2, r0
 800200a:	4b05      	ldr	r3, [pc, #20]	; (8002020 <HAL_RCC_GetPCLK1Freq+0x20>)
 800200c:	685b      	ldr	r3, [r3, #4]
 800200e:	0a1b      	lsrs	r3, r3, #8
 8002010:	f003 0307 	and.w	r3, r3, #7
 8002014:	4903      	ldr	r1, [pc, #12]	; (8002024 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002016:	5ccb      	ldrb	r3, [r1, r3]
 8002018:	fa22 f303 	lsr.w	r3, r2, r3
 800201c:	4618      	mov	r0, r3
 800201e:	bd80      	pop	{r7, pc}
 8002020:	40021000 	.word	0x40021000
 8002024:	080053a4 	.word	0x080053a4

08002028 <HAL_RCC_GetPCLK2Freq>:
 8002028:	b580      	push	{r7, lr}
 800202a:	af00      	add	r7, sp, #0
 800202c:	f7ff ffde 	bl	8001fec <HAL_RCC_GetHCLKFreq>
 8002030:	4602      	mov	r2, r0
 8002032:	4b05      	ldr	r3, [pc, #20]	; (8002048 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002034:	685b      	ldr	r3, [r3, #4]
 8002036:	0adb      	lsrs	r3, r3, #11
 8002038:	f003 0307 	and.w	r3, r3, #7
 800203c:	4903      	ldr	r1, [pc, #12]	; (800204c <HAL_RCC_GetPCLK2Freq+0x24>)
 800203e:	5ccb      	ldrb	r3, [r1, r3]
 8002040:	fa22 f303 	lsr.w	r3, r2, r3
 8002044:	4618      	mov	r0, r3
 8002046:	bd80      	pop	{r7, pc}
 8002048:	40021000 	.word	0x40021000
 800204c:	080053a4 	.word	0x080053a4

08002050 <HAL_RCC_GetClockConfig>:
 8002050:	b480      	push	{r7}
 8002052:	b083      	sub	sp, #12
 8002054:	af00      	add	r7, sp, #0
 8002056:	6078      	str	r0, [r7, #4]
 8002058:	6039      	str	r1, [r7, #0]
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	220f      	movs	r2, #15
 800205e:	601a      	str	r2, [r3, #0]
 8002060:	4b11      	ldr	r3, [pc, #68]	; (80020a8 <HAL_RCC_GetClockConfig+0x58>)
 8002062:	685b      	ldr	r3, [r3, #4]
 8002064:	f003 0203 	and.w	r2, r3, #3
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	605a      	str	r2, [r3, #4]
 800206c:	4b0e      	ldr	r3, [pc, #56]	; (80020a8 <HAL_RCC_GetClockConfig+0x58>)
 800206e:	685b      	ldr	r3, [r3, #4]
 8002070:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	609a      	str	r2, [r3, #8]
 8002078:	4b0b      	ldr	r3, [pc, #44]	; (80020a8 <HAL_RCC_GetClockConfig+0x58>)
 800207a:	685b      	ldr	r3, [r3, #4]
 800207c:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	60da      	str	r2, [r3, #12]
 8002084:	4b08      	ldr	r3, [pc, #32]	; (80020a8 <HAL_RCC_GetClockConfig+0x58>)
 8002086:	685b      	ldr	r3, [r3, #4]
 8002088:	08db      	lsrs	r3, r3, #3
 800208a:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	611a      	str	r2, [r3, #16]
 8002092:	4b06      	ldr	r3, [pc, #24]	; (80020ac <HAL_RCC_GetClockConfig+0x5c>)
 8002094:	681b      	ldr	r3, [r3, #0]
 8002096:	f003 0207 	and.w	r2, r3, #7
 800209a:	683b      	ldr	r3, [r7, #0]
 800209c:	601a      	str	r2, [r3, #0]
 800209e:	bf00      	nop
 80020a0:	370c      	adds	r7, #12
 80020a2:	46bd      	mov	sp, r7
 80020a4:	bc80      	pop	{r7}
 80020a6:	4770      	bx	lr
 80020a8:	40021000 	.word	0x40021000
 80020ac:	40022000 	.word	0x40022000

080020b0 <RCC_Delay>:
 80020b0:	b480      	push	{r7}
 80020b2:	b085      	sub	sp, #20
 80020b4:	af00      	add	r7, sp, #0
 80020b6:	6078      	str	r0, [r7, #4]
 80020b8:	4b0a      	ldr	r3, [pc, #40]	; (80020e4 <RCC_Delay+0x34>)
 80020ba:	681b      	ldr	r3, [r3, #0]
 80020bc:	4a0a      	ldr	r2, [pc, #40]	; (80020e8 <RCC_Delay+0x38>)
 80020be:	fba2 2303 	umull	r2, r3, r2, r3
 80020c2:	0a5b      	lsrs	r3, r3, #9
 80020c4:	687a      	ldr	r2, [r7, #4]
 80020c6:	fb02 f303 	mul.w	r3, r2, r3
 80020ca:	60fb      	str	r3, [r7, #12]
 80020cc:	bf00      	nop
 80020ce:	68fb      	ldr	r3, [r7, #12]
 80020d0:	1e5a      	subs	r2, r3, #1
 80020d2:	60fa      	str	r2, [r7, #12]
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	d1f9      	bne.n	80020cc <RCC_Delay+0x1c>
 80020d8:	bf00      	nop
 80020da:	bf00      	nop
 80020dc:	3714      	adds	r7, #20
 80020de:	46bd      	mov	sp, r7
 80020e0:	bc80      	pop	{r7}
 80020e2:	4770      	bx	lr
 80020e4:	200000e0 	.word	0x200000e0
 80020e8:	10624dd3 	.word	0x10624dd3

080020ec <HAL_TIM_Base_Init>:
 80020ec:	b580      	push	{r7, lr}
 80020ee:	b082      	sub	sp, #8
 80020f0:	af00      	add	r7, sp, #0
 80020f2:	6078      	str	r0, [r7, #4]
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	2b00      	cmp	r3, #0
 80020f8:	d101      	bne.n	80020fe <HAL_TIM_Base_Init+0x12>
 80020fa:	2301      	movs	r3, #1
 80020fc:	e041      	b.n	8002182 <HAL_TIM_Base_Init+0x96>
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002104:	b2db      	uxtb	r3, r3
 8002106:	2b00      	cmp	r3, #0
 8002108:	d106      	bne.n	8002118 <HAL_TIM_Base_Init+0x2c>
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	2200      	movs	r2, #0
 800210e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002112:	6878      	ldr	r0, [r7, #4]
 8002114:	f000 f839 	bl	800218a <HAL_TIM_Base_MspInit>
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	2202      	movs	r2, #2
 800211c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002120:	687b      	ldr	r3, [r7, #4]
 8002122:	681a      	ldr	r2, [r3, #0]
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	3304      	adds	r3, #4
 8002128:	4619      	mov	r1, r3
 800212a:	4610      	mov	r0, r2
 800212c:	f000 f9b4 	bl	8002498 <TIM_Base_SetConfig>
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	2201      	movs	r2, #1
 8002134:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	2201      	movs	r2, #1
 800213c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	2201      	movs	r2, #1
 8002144:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	2201      	movs	r2, #1
 800214c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	2201      	movs	r2, #1
 8002154:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	2201      	movs	r2, #1
 800215c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002160:	687b      	ldr	r3, [r7, #4]
 8002162:	2201      	movs	r2, #1
 8002164:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	2201      	movs	r2, #1
 800216c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	2201      	movs	r2, #1
 8002174:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	2201      	movs	r2, #1
 800217c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002180:	2300      	movs	r3, #0
 8002182:	4618      	mov	r0, r3
 8002184:	3708      	adds	r7, #8
 8002186:	46bd      	mov	sp, r7
 8002188:	bd80      	pop	{r7, pc}

0800218a <HAL_TIM_Base_MspInit>:
 800218a:	b480      	push	{r7}
 800218c:	b083      	sub	sp, #12
 800218e:	af00      	add	r7, sp, #0
 8002190:	6078      	str	r0, [r7, #4]
 8002192:	bf00      	nop
 8002194:	370c      	adds	r7, #12
 8002196:	46bd      	mov	sp, r7
 8002198:	bc80      	pop	{r7}
 800219a:	4770      	bx	lr

0800219c <HAL_TIM_Base_Start_IT>:
 800219c:	b480      	push	{r7}
 800219e:	b085      	sub	sp, #20
 80021a0:	af00      	add	r7, sp, #0
 80021a2:	6078      	str	r0, [r7, #4]
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80021aa:	b2db      	uxtb	r3, r3
 80021ac:	2b01      	cmp	r3, #1
 80021ae:	d001      	beq.n	80021b4 <HAL_TIM_Base_Start_IT+0x18>
 80021b0:	2301      	movs	r3, #1
 80021b2:	e03a      	b.n	800222a <HAL_TIM_Base_Start_IT+0x8e>
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	2202      	movs	r2, #2
 80021b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	68da      	ldr	r2, [r3, #12]
 80021c2:	687b      	ldr	r3, [r7, #4]
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	f042 0201 	orr.w	r2, r2, #1
 80021ca:	60da      	str	r2, [r3, #12]
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	4a18      	ldr	r2, [pc, #96]	; (8002234 <HAL_TIM_Base_Start_IT+0x98>)
 80021d2:	4293      	cmp	r3, r2
 80021d4:	d00e      	beq.n	80021f4 <HAL_TIM_Base_Start_IT+0x58>
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80021de:	d009      	beq.n	80021f4 <HAL_TIM_Base_Start_IT+0x58>
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	4a14      	ldr	r2, [pc, #80]	; (8002238 <HAL_TIM_Base_Start_IT+0x9c>)
 80021e6:	4293      	cmp	r3, r2
 80021e8:	d004      	beq.n	80021f4 <HAL_TIM_Base_Start_IT+0x58>
 80021ea:	687b      	ldr	r3, [r7, #4]
 80021ec:	681b      	ldr	r3, [r3, #0]
 80021ee:	4a13      	ldr	r2, [pc, #76]	; (800223c <HAL_TIM_Base_Start_IT+0xa0>)
 80021f0:	4293      	cmp	r3, r2
 80021f2:	d111      	bne.n	8002218 <HAL_TIM_Base_Start_IT+0x7c>
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	689b      	ldr	r3, [r3, #8]
 80021fa:	f003 0307 	and.w	r3, r3, #7
 80021fe:	60fb      	str	r3, [r7, #12]
 8002200:	68fb      	ldr	r3, [r7, #12]
 8002202:	2b06      	cmp	r3, #6
 8002204:	d010      	beq.n	8002228 <HAL_TIM_Base_Start_IT+0x8c>
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	681b      	ldr	r3, [r3, #0]
 800220a:	681a      	ldr	r2, [r3, #0]
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	681b      	ldr	r3, [r3, #0]
 8002210:	f042 0201 	orr.w	r2, r2, #1
 8002214:	601a      	str	r2, [r3, #0]
 8002216:	e007      	b.n	8002228 <HAL_TIM_Base_Start_IT+0x8c>
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	681b      	ldr	r3, [r3, #0]
 800221c:	681a      	ldr	r2, [r3, #0]
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	f042 0201 	orr.w	r2, r2, #1
 8002226:	601a      	str	r2, [r3, #0]
 8002228:	2300      	movs	r3, #0
 800222a:	4618      	mov	r0, r3
 800222c:	3714      	adds	r7, #20
 800222e:	46bd      	mov	sp, r7
 8002230:	bc80      	pop	{r7}
 8002232:	4770      	bx	lr
 8002234:	40012c00 	.word	0x40012c00
 8002238:	40000400 	.word	0x40000400
 800223c:	40000800 	.word	0x40000800

08002240 <HAL_TIM_IRQHandler>:
 8002240:	b580      	push	{r7, lr}
 8002242:	b082      	sub	sp, #8
 8002244:	af00      	add	r7, sp, #0
 8002246:	6078      	str	r0, [r7, #4]
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	681b      	ldr	r3, [r3, #0]
 800224c:	691b      	ldr	r3, [r3, #16]
 800224e:	f003 0302 	and.w	r3, r3, #2
 8002252:	2b02      	cmp	r3, #2
 8002254:	d122      	bne.n	800229c <HAL_TIM_IRQHandler+0x5c>
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	681b      	ldr	r3, [r3, #0]
 800225a:	68db      	ldr	r3, [r3, #12]
 800225c:	f003 0302 	and.w	r3, r3, #2
 8002260:	2b02      	cmp	r3, #2
 8002262:	d11b      	bne.n	800229c <HAL_TIM_IRQHandler+0x5c>
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	f06f 0202 	mvn.w	r2, #2
 800226c:	611a      	str	r2, [r3, #16]
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	2201      	movs	r2, #1
 8002272:	771a      	strb	r2, [r3, #28]
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	699b      	ldr	r3, [r3, #24]
 800227a:	f003 0303 	and.w	r3, r3, #3
 800227e:	2b00      	cmp	r3, #0
 8002280:	d003      	beq.n	800228a <HAL_TIM_IRQHandler+0x4a>
 8002282:	6878      	ldr	r0, [r7, #4]
 8002284:	f000 f8ed 	bl	8002462 <HAL_TIM_IC_CaptureCallback>
 8002288:	e005      	b.n	8002296 <HAL_TIM_IRQHandler+0x56>
 800228a:	6878      	ldr	r0, [r7, #4]
 800228c:	f000 f8e0 	bl	8002450 <HAL_TIM_OC_DelayElapsedCallback>
 8002290:	6878      	ldr	r0, [r7, #4]
 8002292:	f000 f8ef 	bl	8002474 <HAL_TIM_PWM_PulseFinishedCallback>
 8002296:	687b      	ldr	r3, [r7, #4]
 8002298:	2200      	movs	r2, #0
 800229a:	771a      	strb	r2, [r3, #28]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	691b      	ldr	r3, [r3, #16]
 80022a2:	f003 0304 	and.w	r3, r3, #4
 80022a6:	2b04      	cmp	r3, #4
 80022a8:	d122      	bne.n	80022f0 <HAL_TIM_IRQHandler+0xb0>
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	68db      	ldr	r3, [r3, #12]
 80022b0:	f003 0304 	and.w	r3, r3, #4
 80022b4:	2b04      	cmp	r3, #4
 80022b6:	d11b      	bne.n	80022f0 <HAL_TIM_IRQHandler+0xb0>
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	f06f 0204 	mvn.w	r2, #4
 80022c0:	611a      	str	r2, [r3, #16]
 80022c2:	687b      	ldr	r3, [r7, #4]
 80022c4:	2202      	movs	r2, #2
 80022c6:	771a      	strb	r2, [r3, #28]
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	699b      	ldr	r3, [r3, #24]
 80022ce:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	d003      	beq.n	80022de <HAL_TIM_IRQHandler+0x9e>
 80022d6:	6878      	ldr	r0, [r7, #4]
 80022d8:	f000 f8c3 	bl	8002462 <HAL_TIM_IC_CaptureCallback>
 80022dc:	e005      	b.n	80022ea <HAL_TIM_IRQHandler+0xaa>
 80022de:	6878      	ldr	r0, [r7, #4]
 80022e0:	f000 f8b6 	bl	8002450 <HAL_TIM_OC_DelayElapsedCallback>
 80022e4:	6878      	ldr	r0, [r7, #4]
 80022e6:	f000 f8c5 	bl	8002474 <HAL_TIM_PWM_PulseFinishedCallback>
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	2200      	movs	r2, #0
 80022ee:	771a      	strb	r2, [r3, #28]
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	691b      	ldr	r3, [r3, #16]
 80022f6:	f003 0308 	and.w	r3, r3, #8
 80022fa:	2b08      	cmp	r3, #8
 80022fc:	d122      	bne.n	8002344 <HAL_TIM_IRQHandler+0x104>
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	68db      	ldr	r3, [r3, #12]
 8002304:	f003 0308 	and.w	r3, r3, #8
 8002308:	2b08      	cmp	r3, #8
 800230a:	d11b      	bne.n	8002344 <HAL_TIM_IRQHandler+0x104>
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	f06f 0208 	mvn.w	r2, #8
 8002314:	611a      	str	r2, [r3, #16]
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	2204      	movs	r2, #4
 800231a:	771a      	strb	r2, [r3, #28]
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	681b      	ldr	r3, [r3, #0]
 8002320:	69db      	ldr	r3, [r3, #28]
 8002322:	f003 0303 	and.w	r3, r3, #3
 8002326:	2b00      	cmp	r3, #0
 8002328:	d003      	beq.n	8002332 <HAL_TIM_IRQHandler+0xf2>
 800232a:	6878      	ldr	r0, [r7, #4]
 800232c:	f000 f899 	bl	8002462 <HAL_TIM_IC_CaptureCallback>
 8002330:	e005      	b.n	800233e <HAL_TIM_IRQHandler+0xfe>
 8002332:	6878      	ldr	r0, [r7, #4]
 8002334:	f000 f88c 	bl	8002450 <HAL_TIM_OC_DelayElapsedCallback>
 8002338:	6878      	ldr	r0, [r7, #4]
 800233a:	f000 f89b 	bl	8002474 <HAL_TIM_PWM_PulseFinishedCallback>
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	2200      	movs	r2, #0
 8002342:	771a      	strb	r2, [r3, #28]
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	691b      	ldr	r3, [r3, #16]
 800234a:	f003 0310 	and.w	r3, r3, #16
 800234e:	2b10      	cmp	r3, #16
 8002350:	d122      	bne.n	8002398 <HAL_TIM_IRQHandler+0x158>
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	68db      	ldr	r3, [r3, #12]
 8002358:	f003 0310 	and.w	r3, r3, #16
 800235c:	2b10      	cmp	r3, #16
 800235e:	d11b      	bne.n	8002398 <HAL_TIM_IRQHandler+0x158>
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	f06f 0210 	mvn.w	r2, #16
 8002368:	611a      	str	r2, [r3, #16]
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	2208      	movs	r2, #8
 800236e:	771a      	strb	r2, [r3, #28]
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	681b      	ldr	r3, [r3, #0]
 8002374:	69db      	ldr	r3, [r3, #28]
 8002376:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800237a:	2b00      	cmp	r3, #0
 800237c:	d003      	beq.n	8002386 <HAL_TIM_IRQHandler+0x146>
 800237e:	6878      	ldr	r0, [r7, #4]
 8002380:	f000 f86f 	bl	8002462 <HAL_TIM_IC_CaptureCallback>
 8002384:	e005      	b.n	8002392 <HAL_TIM_IRQHandler+0x152>
 8002386:	6878      	ldr	r0, [r7, #4]
 8002388:	f000 f862 	bl	8002450 <HAL_TIM_OC_DelayElapsedCallback>
 800238c:	6878      	ldr	r0, [r7, #4]
 800238e:	f000 f871 	bl	8002474 <HAL_TIM_PWM_PulseFinishedCallback>
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	2200      	movs	r2, #0
 8002396:	771a      	strb	r2, [r3, #28]
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	681b      	ldr	r3, [r3, #0]
 800239c:	691b      	ldr	r3, [r3, #16]
 800239e:	f003 0301 	and.w	r3, r3, #1
 80023a2:	2b01      	cmp	r3, #1
 80023a4:	d10e      	bne.n	80023c4 <HAL_TIM_IRQHandler+0x184>
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	681b      	ldr	r3, [r3, #0]
 80023aa:	68db      	ldr	r3, [r3, #12]
 80023ac:	f003 0301 	and.w	r3, r3, #1
 80023b0:	2b01      	cmp	r3, #1
 80023b2:	d107      	bne.n	80023c4 <HAL_TIM_IRQHandler+0x184>
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	681b      	ldr	r3, [r3, #0]
 80023b8:	f06f 0201 	mvn.w	r2, #1
 80023bc:	611a      	str	r2, [r3, #16]
 80023be:	6878      	ldr	r0, [r7, #4]
 80023c0:	f7fe fd10 	bl	8000de4 <HAL_TIM_PeriodElapsedCallback>
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	681b      	ldr	r3, [r3, #0]
 80023c8:	691b      	ldr	r3, [r3, #16]
 80023ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80023ce:	2b80      	cmp	r3, #128	; 0x80
 80023d0:	d10e      	bne.n	80023f0 <HAL_TIM_IRQHandler+0x1b0>
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	68db      	ldr	r3, [r3, #12]
 80023d8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80023dc:	2b80      	cmp	r3, #128	; 0x80
 80023de:	d107      	bne.n	80023f0 <HAL_TIM_IRQHandler+0x1b0>
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	681b      	ldr	r3, [r3, #0]
 80023e4:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80023e8:	611a      	str	r2, [r3, #16]
 80023ea:	6878      	ldr	r0, [r7, #4]
 80023ec:	f000 f8bf 	bl	800256e <HAL_TIMEx_BreakCallback>
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	691b      	ldr	r3, [r3, #16]
 80023f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80023fa:	2b40      	cmp	r3, #64	; 0x40
 80023fc:	d10e      	bne.n	800241c <HAL_TIM_IRQHandler+0x1dc>
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	68db      	ldr	r3, [r3, #12]
 8002404:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002408:	2b40      	cmp	r3, #64	; 0x40
 800240a:	d107      	bne.n	800241c <HAL_TIM_IRQHandler+0x1dc>
 800240c:	687b      	ldr	r3, [r7, #4]
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002414:	611a      	str	r2, [r3, #16]
 8002416:	6878      	ldr	r0, [r7, #4]
 8002418:	f000 f835 	bl	8002486 <HAL_TIM_TriggerCallback>
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	691b      	ldr	r3, [r3, #16]
 8002422:	f003 0320 	and.w	r3, r3, #32
 8002426:	2b20      	cmp	r3, #32
 8002428:	d10e      	bne.n	8002448 <HAL_TIM_IRQHandler+0x208>
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	68db      	ldr	r3, [r3, #12]
 8002430:	f003 0320 	and.w	r3, r3, #32
 8002434:	2b20      	cmp	r3, #32
 8002436:	d107      	bne.n	8002448 <HAL_TIM_IRQHandler+0x208>
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	f06f 0220 	mvn.w	r2, #32
 8002440:	611a      	str	r2, [r3, #16]
 8002442:	6878      	ldr	r0, [r7, #4]
 8002444:	f000 f88a 	bl	800255c <HAL_TIMEx_CommutCallback>
 8002448:	bf00      	nop
 800244a:	3708      	adds	r7, #8
 800244c:	46bd      	mov	sp, r7
 800244e:	bd80      	pop	{r7, pc}

08002450 <HAL_TIM_OC_DelayElapsedCallback>:
 8002450:	b480      	push	{r7}
 8002452:	b083      	sub	sp, #12
 8002454:	af00      	add	r7, sp, #0
 8002456:	6078      	str	r0, [r7, #4]
 8002458:	bf00      	nop
 800245a:	370c      	adds	r7, #12
 800245c:	46bd      	mov	sp, r7
 800245e:	bc80      	pop	{r7}
 8002460:	4770      	bx	lr

08002462 <HAL_TIM_IC_CaptureCallback>:
 8002462:	b480      	push	{r7}
 8002464:	b083      	sub	sp, #12
 8002466:	af00      	add	r7, sp, #0
 8002468:	6078      	str	r0, [r7, #4]
 800246a:	bf00      	nop
 800246c:	370c      	adds	r7, #12
 800246e:	46bd      	mov	sp, r7
 8002470:	bc80      	pop	{r7}
 8002472:	4770      	bx	lr

08002474 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002474:	b480      	push	{r7}
 8002476:	b083      	sub	sp, #12
 8002478:	af00      	add	r7, sp, #0
 800247a:	6078      	str	r0, [r7, #4]
 800247c:	bf00      	nop
 800247e:	370c      	adds	r7, #12
 8002480:	46bd      	mov	sp, r7
 8002482:	bc80      	pop	{r7}
 8002484:	4770      	bx	lr

08002486 <HAL_TIM_TriggerCallback>:
 8002486:	b480      	push	{r7}
 8002488:	b083      	sub	sp, #12
 800248a:	af00      	add	r7, sp, #0
 800248c:	6078      	str	r0, [r7, #4]
 800248e:	bf00      	nop
 8002490:	370c      	adds	r7, #12
 8002492:	46bd      	mov	sp, r7
 8002494:	bc80      	pop	{r7}
 8002496:	4770      	bx	lr

08002498 <TIM_Base_SetConfig>:
 8002498:	b480      	push	{r7}
 800249a:	b085      	sub	sp, #20
 800249c:	af00      	add	r7, sp, #0
 800249e:	6078      	str	r0, [r7, #4]
 80024a0:	6039      	str	r1, [r7, #0]
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	681b      	ldr	r3, [r3, #0]
 80024a6:	60fb      	str	r3, [r7, #12]
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	4a29      	ldr	r2, [pc, #164]	; (8002550 <TIM_Base_SetConfig+0xb8>)
 80024ac:	4293      	cmp	r3, r2
 80024ae:	d00b      	beq.n	80024c8 <TIM_Base_SetConfig+0x30>
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80024b6:	d007      	beq.n	80024c8 <TIM_Base_SetConfig+0x30>
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	4a26      	ldr	r2, [pc, #152]	; (8002554 <TIM_Base_SetConfig+0xbc>)
 80024bc:	4293      	cmp	r3, r2
 80024be:	d003      	beq.n	80024c8 <TIM_Base_SetConfig+0x30>
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	4a25      	ldr	r2, [pc, #148]	; (8002558 <TIM_Base_SetConfig+0xc0>)
 80024c4:	4293      	cmp	r3, r2
 80024c6:	d108      	bne.n	80024da <TIM_Base_SetConfig+0x42>
 80024c8:	68fb      	ldr	r3, [r7, #12]
 80024ca:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80024ce:	60fb      	str	r3, [r7, #12]
 80024d0:	683b      	ldr	r3, [r7, #0]
 80024d2:	685b      	ldr	r3, [r3, #4]
 80024d4:	68fa      	ldr	r2, [r7, #12]
 80024d6:	4313      	orrs	r3, r2
 80024d8:	60fb      	str	r3, [r7, #12]
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	4a1c      	ldr	r2, [pc, #112]	; (8002550 <TIM_Base_SetConfig+0xb8>)
 80024de:	4293      	cmp	r3, r2
 80024e0:	d00b      	beq.n	80024fa <TIM_Base_SetConfig+0x62>
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80024e8:	d007      	beq.n	80024fa <TIM_Base_SetConfig+0x62>
 80024ea:	687b      	ldr	r3, [r7, #4]
 80024ec:	4a19      	ldr	r2, [pc, #100]	; (8002554 <TIM_Base_SetConfig+0xbc>)
 80024ee:	4293      	cmp	r3, r2
 80024f0:	d003      	beq.n	80024fa <TIM_Base_SetConfig+0x62>
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	4a18      	ldr	r2, [pc, #96]	; (8002558 <TIM_Base_SetConfig+0xc0>)
 80024f6:	4293      	cmp	r3, r2
 80024f8:	d108      	bne.n	800250c <TIM_Base_SetConfig+0x74>
 80024fa:	68fb      	ldr	r3, [r7, #12]
 80024fc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002500:	60fb      	str	r3, [r7, #12]
 8002502:	683b      	ldr	r3, [r7, #0]
 8002504:	68db      	ldr	r3, [r3, #12]
 8002506:	68fa      	ldr	r2, [r7, #12]
 8002508:	4313      	orrs	r3, r2
 800250a:	60fb      	str	r3, [r7, #12]
 800250c:	68fb      	ldr	r3, [r7, #12]
 800250e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002512:	683b      	ldr	r3, [r7, #0]
 8002514:	695b      	ldr	r3, [r3, #20]
 8002516:	4313      	orrs	r3, r2
 8002518:	60fb      	str	r3, [r7, #12]
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	68fa      	ldr	r2, [r7, #12]
 800251e:	601a      	str	r2, [r3, #0]
 8002520:	683b      	ldr	r3, [r7, #0]
 8002522:	689a      	ldr	r2, [r3, #8]
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	62da      	str	r2, [r3, #44]	; 0x2c
 8002528:	683b      	ldr	r3, [r7, #0]
 800252a:	681a      	ldr	r2, [r3, #0]
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	629a      	str	r2, [r3, #40]	; 0x28
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	4a07      	ldr	r2, [pc, #28]	; (8002550 <TIM_Base_SetConfig+0xb8>)
 8002534:	4293      	cmp	r3, r2
 8002536:	d103      	bne.n	8002540 <TIM_Base_SetConfig+0xa8>
 8002538:	683b      	ldr	r3, [r7, #0]
 800253a:	691a      	ldr	r2, [r3, #16]
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	631a      	str	r2, [r3, #48]	; 0x30
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	2201      	movs	r2, #1
 8002544:	615a      	str	r2, [r3, #20]
 8002546:	bf00      	nop
 8002548:	3714      	adds	r7, #20
 800254a:	46bd      	mov	sp, r7
 800254c:	bc80      	pop	{r7}
 800254e:	4770      	bx	lr
 8002550:	40012c00 	.word	0x40012c00
 8002554:	40000400 	.word	0x40000400
 8002558:	40000800 	.word	0x40000800

0800255c <HAL_TIMEx_CommutCallback>:
 800255c:	b480      	push	{r7}
 800255e:	b083      	sub	sp, #12
 8002560:	af00      	add	r7, sp, #0
 8002562:	6078      	str	r0, [r7, #4]
 8002564:	bf00      	nop
 8002566:	370c      	adds	r7, #12
 8002568:	46bd      	mov	sp, r7
 800256a:	bc80      	pop	{r7}
 800256c:	4770      	bx	lr

0800256e <HAL_TIMEx_BreakCallback>:
 800256e:	b480      	push	{r7}
 8002570:	b083      	sub	sp, #12
 8002572:	af00      	add	r7, sp, #0
 8002574:	6078      	str	r0, [r7, #4]
 8002576:	bf00      	nop
 8002578:	370c      	adds	r7, #12
 800257a:	46bd      	mov	sp, r7
 800257c:	bc80      	pop	{r7}
 800257e:	4770      	bx	lr

08002580 <HAL_UART_Init>:
 8002580:	b580      	push	{r7, lr}
 8002582:	b082      	sub	sp, #8
 8002584:	af00      	add	r7, sp, #0
 8002586:	6078      	str	r0, [r7, #4]
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	2b00      	cmp	r3, #0
 800258c:	d101      	bne.n	8002592 <HAL_UART_Init+0x12>
 800258e:	2301      	movs	r3, #1
 8002590:	e03f      	b.n	8002612 <HAL_UART_Init+0x92>
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8002598:	b2db      	uxtb	r3, r3
 800259a:	2b00      	cmp	r3, #0
 800259c:	d106      	bne.n	80025ac <HAL_UART_Init+0x2c>
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	2200      	movs	r2, #0
 80025a2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80025a6:	6878      	ldr	r0, [r7, #4]
 80025a8:	f7fe fc6c 	bl	8000e84 <HAL_UART_MspInit>
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	2224      	movs	r2, #36	; 0x24
 80025b0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	681b      	ldr	r3, [r3, #0]
 80025b8:	68da      	ldr	r2, [r3, #12]
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	681b      	ldr	r3, [r3, #0]
 80025be:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80025c2:	60da      	str	r2, [r3, #12]
 80025c4:	6878      	ldr	r0, [r7, #4]
 80025c6:	f000 f9a3 	bl	8002910 <UART_SetConfig>
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	691a      	ldr	r2, [r3, #16]
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80025d8:	611a      	str	r2, [r3, #16]
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	695a      	ldr	r2, [r3, #20]
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80025e8:	615a      	str	r2, [r3, #20]
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	681b      	ldr	r3, [r3, #0]
 80025ee:	68da      	ldr	r2, [r3, #12]
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80025f8:	60da      	str	r2, [r3, #12]
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	2200      	movs	r2, #0
 80025fe:	63da      	str	r2, [r3, #60]	; 0x3c
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	2220      	movs	r2, #32
 8002604:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	2220      	movs	r2, #32
 800260c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002610:	2300      	movs	r3, #0
 8002612:	4618      	mov	r0, r3
 8002614:	3708      	adds	r7, #8
 8002616:	46bd      	mov	sp, r7
 8002618:	bd80      	pop	{r7, pc}

0800261a <HAL_UART_Transmit>:
 800261a:	b580      	push	{r7, lr}
 800261c:	b08a      	sub	sp, #40	; 0x28
 800261e:	af02      	add	r7, sp, #8
 8002620:	60f8      	str	r0, [r7, #12]
 8002622:	60b9      	str	r1, [r7, #8]
 8002624:	603b      	str	r3, [r7, #0]
 8002626:	4613      	mov	r3, r2
 8002628:	80fb      	strh	r3, [r7, #6]
 800262a:	2300      	movs	r3, #0
 800262c:	617b      	str	r3, [r7, #20]
 800262e:	68fb      	ldr	r3, [r7, #12]
 8002630:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8002634:	b2db      	uxtb	r3, r3
 8002636:	2b20      	cmp	r3, #32
 8002638:	d17c      	bne.n	8002734 <HAL_UART_Transmit+0x11a>
 800263a:	68bb      	ldr	r3, [r7, #8]
 800263c:	2b00      	cmp	r3, #0
 800263e:	d002      	beq.n	8002646 <HAL_UART_Transmit+0x2c>
 8002640:	88fb      	ldrh	r3, [r7, #6]
 8002642:	2b00      	cmp	r3, #0
 8002644:	d101      	bne.n	800264a <HAL_UART_Transmit+0x30>
 8002646:	2301      	movs	r3, #1
 8002648:	e075      	b.n	8002736 <HAL_UART_Transmit+0x11c>
 800264a:	68fb      	ldr	r3, [r7, #12]
 800264c:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002650:	2b01      	cmp	r3, #1
 8002652:	d101      	bne.n	8002658 <HAL_UART_Transmit+0x3e>
 8002654:	2302      	movs	r3, #2
 8002656:	e06e      	b.n	8002736 <HAL_UART_Transmit+0x11c>
 8002658:	68fb      	ldr	r3, [r7, #12]
 800265a:	2201      	movs	r2, #1
 800265c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002660:	68fb      	ldr	r3, [r7, #12]
 8002662:	2200      	movs	r2, #0
 8002664:	63da      	str	r2, [r3, #60]	; 0x3c
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	2221      	movs	r2, #33	; 0x21
 800266a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800266e:	f7fe fe53 	bl	8001318 <HAL_GetTick>
 8002672:	6178      	str	r0, [r7, #20]
 8002674:	68fb      	ldr	r3, [r7, #12]
 8002676:	88fa      	ldrh	r2, [r7, #6]
 8002678:	849a      	strh	r2, [r3, #36]	; 0x24
 800267a:	68fb      	ldr	r3, [r7, #12]
 800267c:	88fa      	ldrh	r2, [r7, #6]
 800267e:	84da      	strh	r2, [r3, #38]	; 0x26
 8002680:	68fb      	ldr	r3, [r7, #12]
 8002682:	689b      	ldr	r3, [r3, #8]
 8002684:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002688:	d108      	bne.n	800269c <HAL_UART_Transmit+0x82>
 800268a:	68fb      	ldr	r3, [r7, #12]
 800268c:	691b      	ldr	r3, [r3, #16]
 800268e:	2b00      	cmp	r3, #0
 8002690:	d104      	bne.n	800269c <HAL_UART_Transmit+0x82>
 8002692:	2300      	movs	r3, #0
 8002694:	61fb      	str	r3, [r7, #28]
 8002696:	68bb      	ldr	r3, [r7, #8]
 8002698:	61bb      	str	r3, [r7, #24]
 800269a:	e003      	b.n	80026a4 <HAL_UART_Transmit+0x8a>
 800269c:	68bb      	ldr	r3, [r7, #8]
 800269e:	61fb      	str	r3, [r7, #28]
 80026a0:	2300      	movs	r3, #0
 80026a2:	61bb      	str	r3, [r7, #24]
 80026a4:	68fb      	ldr	r3, [r7, #12]
 80026a6:	2200      	movs	r2, #0
 80026a8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80026ac:	e02a      	b.n	8002704 <HAL_UART_Transmit+0xea>
 80026ae:	683b      	ldr	r3, [r7, #0]
 80026b0:	9300      	str	r3, [sp, #0]
 80026b2:	697b      	ldr	r3, [r7, #20]
 80026b4:	2200      	movs	r2, #0
 80026b6:	2180      	movs	r1, #128	; 0x80
 80026b8:	68f8      	ldr	r0, [r7, #12]
 80026ba:	f000 f8df 	bl	800287c <UART_WaitOnFlagUntilTimeout>
 80026be:	4603      	mov	r3, r0
 80026c0:	2b00      	cmp	r3, #0
 80026c2:	d001      	beq.n	80026c8 <HAL_UART_Transmit+0xae>
 80026c4:	2303      	movs	r3, #3
 80026c6:	e036      	b.n	8002736 <HAL_UART_Transmit+0x11c>
 80026c8:	69fb      	ldr	r3, [r7, #28]
 80026ca:	2b00      	cmp	r3, #0
 80026cc:	d10b      	bne.n	80026e6 <HAL_UART_Transmit+0xcc>
 80026ce:	69bb      	ldr	r3, [r7, #24]
 80026d0:	881b      	ldrh	r3, [r3, #0]
 80026d2:	461a      	mov	r2, r3
 80026d4:	68fb      	ldr	r3, [r7, #12]
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80026dc:	605a      	str	r2, [r3, #4]
 80026de:	69bb      	ldr	r3, [r7, #24]
 80026e0:	3302      	adds	r3, #2
 80026e2:	61bb      	str	r3, [r7, #24]
 80026e4:	e007      	b.n	80026f6 <HAL_UART_Transmit+0xdc>
 80026e6:	69fb      	ldr	r3, [r7, #28]
 80026e8:	781a      	ldrb	r2, [r3, #0]
 80026ea:	68fb      	ldr	r3, [r7, #12]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	605a      	str	r2, [r3, #4]
 80026f0:	69fb      	ldr	r3, [r7, #28]
 80026f2:	3301      	adds	r3, #1
 80026f4:	61fb      	str	r3, [r7, #28]
 80026f6:	68fb      	ldr	r3, [r7, #12]
 80026f8:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80026fa:	b29b      	uxth	r3, r3
 80026fc:	3b01      	subs	r3, #1
 80026fe:	b29a      	uxth	r2, r3
 8002700:	68fb      	ldr	r3, [r7, #12]
 8002702:	84da      	strh	r2, [r3, #38]	; 0x26
 8002704:	68fb      	ldr	r3, [r7, #12]
 8002706:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002708:	b29b      	uxth	r3, r3
 800270a:	2b00      	cmp	r3, #0
 800270c:	d1cf      	bne.n	80026ae <HAL_UART_Transmit+0x94>
 800270e:	683b      	ldr	r3, [r7, #0]
 8002710:	9300      	str	r3, [sp, #0]
 8002712:	697b      	ldr	r3, [r7, #20]
 8002714:	2200      	movs	r2, #0
 8002716:	2140      	movs	r1, #64	; 0x40
 8002718:	68f8      	ldr	r0, [r7, #12]
 800271a:	f000 f8af 	bl	800287c <UART_WaitOnFlagUntilTimeout>
 800271e:	4603      	mov	r3, r0
 8002720:	2b00      	cmp	r3, #0
 8002722:	d001      	beq.n	8002728 <HAL_UART_Transmit+0x10e>
 8002724:	2303      	movs	r3, #3
 8002726:	e006      	b.n	8002736 <HAL_UART_Transmit+0x11c>
 8002728:	68fb      	ldr	r3, [r7, #12]
 800272a:	2220      	movs	r2, #32
 800272c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002730:	2300      	movs	r3, #0
 8002732:	e000      	b.n	8002736 <HAL_UART_Transmit+0x11c>
 8002734:	2302      	movs	r3, #2
 8002736:	4618      	mov	r0, r3
 8002738:	3720      	adds	r7, #32
 800273a:	46bd      	mov	sp, r7
 800273c:	bd80      	pop	{r7, pc}

0800273e <HAL_UART_Receive>:
 800273e:	b580      	push	{r7, lr}
 8002740:	b08a      	sub	sp, #40	; 0x28
 8002742:	af02      	add	r7, sp, #8
 8002744:	60f8      	str	r0, [r7, #12]
 8002746:	60b9      	str	r1, [r7, #8]
 8002748:	603b      	str	r3, [r7, #0]
 800274a:	4613      	mov	r3, r2
 800274c:	80fb      	strh	r3, [r7, #6]
 800274e:	2300      	movs	r3, #0
 8002750:	617b      	str	r3, [r7, #20]
 8002752:	68fb      	ldr	r3, [r7, #12]
 8002754:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8002758:	b2db      	uxtb	r3, r3
 800275a:	2b20      	cmp	r3, #32
 800275c:	f040 8089 	bne.w	8002872 <HAL_UART_Receive+0x134>
 8002760:	68bb      	ldr	r3, [r7, #8]
 8002762:	2b00      	cmp	r3, #0
 8002764:	d002      	beq.n	800276c <HAL_UART_Receive+0x2e>
 8002766:	88fb      	ldrh	r3, [r7, #6]
 8002768:	2b00      	cmp	r3, #0
 800276a:	d101      	bne.n	8002770 <HAL_UART_Receive+0x32>
 800276c:	2301      	movs	r3, #1
 800276e:	e081      	b.n	8002874 <HAL_UART_Receive+0x136>
 8002770:	68fb      	ldr	r3, [r7, #12]
 8002772:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002776:	2b01      	cmp	r3, #1
 8002778:	d101      	bne.n	800277e <HAL_UART_Receive+0x40>
 800277a:	2302      	movs	r3, #2
 800277c:	e07a      	b.n	8002874 <HAL_UART_Receive+0x136>
 800277e:	68fb      	ldr	r3, [r7, #12]
 8002780:	2201      	movs	r2, #1
 8002782:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002786:	68fb      	ldr	r3, [r7, #12]
 8002788:	2200      	movs	r2, #0
 800278a:	63da      	str	r2, [r3, #60]	; 0x3c
 800278c:	68fb      	ldr	r3, [r7, #12]
 800278e:	2222      	movs	r2, #34	; 0x22
 8002790:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002794:	f7fe fdc0 	bl	8001318 <HAL_GetTick>
 8002798:	6178      	str	r0, [r7, #20]
 800279a:	68fb      	ldr	r3, [r7, #12]
 800279c:	88fa      	ldrh	r2, [r7, #6]
 800279e:	859a      	strh	r2, [r3, #44]	; 0x2c
 80027a0:	68fb      	ldr	r3, [r7, #12]
 80027a2:	88fa      	ldrh	r2, [r7, #6]
 80027a4:	85da      	strh	r2, [r3, #46]	; 0x2e
 80027a6:	68fb      	ldr	r3, [r7, #12]
 80027a8:	689b      	ldr	r3, [r3, #8]
 80027aa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80027ae:	d108      	bne.n	80027c2 <HAL_UART_Receive+0x84>
 80027b0:	68fb      	ldr	r3, [r7, #12]
 80027b2:	691b      	ldr	r3, [r3, #16]
 80027b4:	2b00      	cmp	r3, #0
 80027b6:	d104      	bne.n	80027c2 <HAL_UART_Receive+0x84>
 80027b8:	2300      	movs	r3, #0
 80027ba:	61fb      	str	r3, [r7, #28]
 80027bc:	68bb      	ldr	r3, [r7, #8]
 80027be:	61bb      	str	r3, [r7, #24]
 80027c0:	e003      	b.n	80027ca <HAL_UART_Receive+0x8c>
 80027c2:	68bb      	ldr	r3, [r7, #8]
 80027c4:	61fb      	str	r3, [r7, #28]
 80027c6:	2300      	movs	r3, #0
 80027c8:	61bb      	str	r3, [r7, #24]
 80027ca:	68fb      	ldr	r3, [r7, #12]
 80027cc:	2200      	movs	r2, #0
 80027ce:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80027d2:	e043      	b.n	800285c <HAL_UART_Receive+0x11e>
 80027d4:	683b      	ldr	r3, [r7, #0]
 80027d6:	9300      	str	r3, [sp, #0]
 80027d8:	697b      	ldr	r3, [r7, #20]
 80027da:	2200      	movs	r2, #0
 80027dc:	2120      	movs	r1, #32
 80027de:	68f8      	ldr	r0, [r7, #12]
 80027e0:	f000 f84c 	bl	800287c <UART_WaitOnFlagUntilTimeout>
 80027e4:	4603      	mov	r3, r0
 80027e6:	2b00      	cmp	r3, #0
 80027e8:	d001      	beq.n	80027ee <HAL_UART_Receive+0xb0>
 80027ea:	2303      	movs	r3, #3
 80027ec:	e042      	b.n	8002874 <HAL_UART_Receive+0x136>
 80027ee:	69fb      	ldr	r3, [r7, #28]
 80027f0:	2b00      	cmp	r3, #0
 80027f2:	d10c      	bne.n	800280e <HAL_UART_Receive+0xd0>
 80027f4:	68fb      	ldr	r3, [r7, #12]
 80027f6:	681b      	ldr	r3, [r3, #0]
 80027f8:	685b      	ldr	r3, [r3, #4]
 80027fa:	b29b      	uxth	r3, r3
 80027fc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002800:	b29a      	uxth	r2, r3
 8002802:	69bb      	ldr	r3, [r7, #24]
 8002804:	801a      	strh	r2, [r3, #0]
 8002806:	69bb      	ldr	r3, [r7, #24]
 8002808:	3302      	adds	r3, #2
 800280a:	61bb      	str	r3, [r7, #24]
 800280c:	e01f      	b.n	800284e <HAL_UART_Receive+0x110>
 800280e:	68fb      	ldr	r3, [r7, #12]
 8002810:	689b      	ldr	r3, [r3, #8]
 8002812:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002816:	d007      	beq.n	8002828 <HAL_UART_Receive+0xea>
 8002818:	68fb      	ldr	r3, [r7, #12]
 800281a:	689b      	ldr	r3, [r3, #8]
 800281c:	2b00      	cmp	r3, #0
 800281e:	d10a      	bne.n	8002836 <HAL_UART_Receive+0xf8>
 8002820:	68fb      	ldr	r3, [r7, #12]
 8002822:	691b      	ldr	r3, [r3, #16]
 8002824:	2b00      	cmp	r3, #0
 8002826:	d106      	bne.n	8002836 <HAL_UART_Receive+0xf8>
 8002828:	68fb      	ldr	r3, [r7, #12]
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	685b      	ldr	r3, [r3, #4]
 800282e:	b2da      	uxtb	r2, r3
 8002830:	69fb      	ldr	r3, [r7, #28]
 8002832:	701a      	strb	r2, [r3, #0]
 8002834:	e008      	b.n	8002848 <HAL_UART_Receive+0x10a>
 8002836:	68fb      	ldr	r3, [r7, #12]
 8002838:	681b      	ldr	r3, [r3, #0]
 800283a:	685b      	ldr	r3, [r3, #4]
 800283c:	b2db      	uxtb	r3, r3
 800283e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002842:	b2da      	uxtb	r2, r3
 8002844:	69fb      	ldr	r3, [r7, #28]
 8002846:	701a      	strb	r2, [r3, #0]
 8002848:	69fb      	ldr	r3, [r7, #28]
 800284a:	3301      	adds	r3, #1
 800284c:	61fb      	str	r3, [r7, #28]
 800284e:	68fb      	ldr	r3, [r7, #12]
 8002850:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002852:	b29b      	uxth	r3, r3
 8002854:	3b01      	subs	r3, #1
 8002856:	b29a      	uxth	r2, r3
 8002858:	68fb      	ldr	r3, [r7, #12]
 800285a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800285c:	68fb      	ldr	r3, [r7, #12]
 800285e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002860:	b29b      	uxth	r3, r3
 8002862:	2b00      	cmp	r3, #0
 8002864:	d1b6      	bne.n	80027d4 <HAL_UART_Receive+0x96>
 8002866:	68fb      	ldr	r3, [r7, #12]
 8002868:	2220      	movs	r2, #32
 800286a:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 800286e:	2300      	movs	r3, #0
 8002870:	e000      	b.n	8002874 <HAL_UART_Receive+0x136>
 8002872:	2302      	movs	r3, #2
 8002874:	4618      	mov	r0, r3
 8002876:	3720      	adds	r7, #32
 8002878:	46bd      	mov	sp, r7
 800287a:	bd80      	pop	{r7, pc}

0800287c <UART_WaitOnFlagUntilTimeout>:
 800287c:	b580      	push	{r7, lr}
 800287e:	b084      	sub	sp, #16
 8002880:	af00      	add	r7, sp, #0
 8002882:	60f8      	str	r0, [r7, #12]
 8002884:	60b9      	str	r1, [r7, #8]
 8002886:	603b      	str	r3, [r7, #0]
 8002888:	4613      	mov	r3, r2
 800288a:	71fb      	strb	r3, [r7, #7]
 800288c:	e02c      	b.n	80028e8 <UART_WaitOnFlagUntilTimeout+0x6c>
 800288e:	69bb      	ldr	r3, [r7, #24]
 8002890:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002894:	d028      	beq.n	80028e8 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002896:	69bb      	ldr	r3, [r7, #24]
 8002898:	2b00      	cmp	r3, #0
 800289a:	d007      	beq.n	80028ac <UART_WaitOnFlagUntilTimeout+0x30>
 800289c:	f7fe fd3c 	bl	8001318 <HAL_GetTick>
 80028a0:	4602      	mov	r2, r0
 80028a2:	683b      	ldr	r3, [r7, #0]
 80028a4:	1ad3      	subs	r3, r2, r3
 80028a6:	69ba      	ldr	r2, [r7, #24]
 80028a8:	429a      	cmp	r2, r3
 80028aa:	d21d      	bcs.n	80028e8 <UART_WaitOnFlagUntilTimeout+0x6c>
 80028ac:	68fb      	ldr	r3, [r7, #12]
 80028ae:	681b      	ldr	r3, [r3, #0]
 80028b0:	68da      	ldr	r2, [r3, #12]
 80028b2:	68fb      	ldr	r3, [r7, #12]
 80028b4:	681b      	ldr	r3, [r3, #0]
 80028b6:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80028ba:	60da      	str	r2, [r3, #12]
 80028bc:	68fb      	ldr	r3, [r7, #12]
 80028be:	681b      	ldr	r3, [r3, #0]
 80028c0:	695a      	ldr	r2, [r3, #20]
 80028c2:	68fb      	ldr	r3, [r7, #12]
 80028c4:	681b      	ldr	r3, [r3, #0]
 80028c6:	f022 0201 	bic.w	r2, r2, #1
 80028ca:	615a      	str	r2, [r3, #20]
 80028cc:	68fb      	ldr	r3, [r7, #12]
 80028ce:	2220      	movs	r2, #32
 80028d0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80028d4:	68fb      	ldr	r3, [r7, #12]
 80028d6:	2220      	movs	r2, #32
 80028d8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80028dc:	68fb      	ldr	r3, [r7, #12]
 80028de:	2200      	movs	r2, #0
 80028e0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80028e4:	2303      	movs	r3, #3
 80028e6:	e00f      	b.n	8002908 <UART_WaitOnFlagUntilTimeout+0x8c>
 80028e8:	68fb      	ldr	r3, [r7, #12]
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	681a      	ldr	r2, [r3, #0]
 80028ee:	68bb      	ldr	r3, [r7, #8]
 80028f0:	4013      	ands	r3, r2
 80028f2:	68ba      	ldr	r2, [r7, #8]
 80028f4:	429a      	cmp	r2, r3
 80028f6:	bf0c      	ite	eq
 80028f8:	2301      	moveq	r3, #1
 80028fa:	2300      	movne	r3, #0
 80028fc:	b2db      	uxtb	r3, r3
 80028fe:	461a      	mov	r2, r3
 8002900:	79fb      	ldrb	r3, [r7, #7]
 8002902:	429a      	cmp	r2, r3
 8002904:	d0c3      	beq.n	800288e <UART_WaitOnFlagUntilTimeout+0x12>
 8002906:	2300      	movs	r3, #0
 8002908:	4618      	mov	r0, r3
 800290a:	3710      	adds	r7, #16
 800290c:	46bd      	mov	sp, r7
 800290e:	bd80      	pop	{r7, pc}

08002910 <UART_SetConfig>:
 8002910:	b580      	push	{r7, lr}
 8002912:	b084      	sub	sp, #16
 8002914:	af00      	add	r7, sp, #0
 8002916:	6078      	str	r0, [r7, #4]
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	681b      	ldr	r3, [r3, #0]
 800291c:	691b      	ldr	r3, [r3, #16]
 800291e:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8002922:	687b      	ldr	r3, [r7, #4]
 8002924:	68da      	ldr	r2, [r3, #12]
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	430a      	orrs	r2, r1
 800292c:	611a      	str	r2, [r3, #16]
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	689a      	ldr	r2, [r3, #8]
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	691b      	ldr	r3, [r3, #16]
 8002936:	431a      	orrs	r2, r3
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	695b      	ldr	r3, [r3, #20]
 800293c:	4313      	orrs	r3, r2
 800293e:	60bb      	str	r3, [r7, #8]
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	68db      	ldr	r3, [r3, #12]
 8002946:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800294a:	f023 030c 	bic.w	r3, r3, #12
 800294e:	687a      	ldr	r2, [r7, #4]
 8002950:	6812      	ldr	r2, [r2, #0]
 8002952:	68b9      	ldr	r1, [r7, #8]
 8002954:	430b      	orrs	r3, r1
 8002956:	60d3      	str	r3, [r2, #12]
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	681b      	ldr	r3, [r3, #0]
 800295c:	695b      	ldr	r3, [r3, #20]
 800295e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	699a      	ldr	r2, [r3, #24]
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	430a      	orrs	r2, r1
 800296c:	615a      	str	r2, [r3, #20]
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	681b      	ldr	r3, [r3, #0]
 8002972:	4a2c      	ldr	r2, [pc, #176]	; (8002a24 <UART_SetConfig+0x114>)
 8002974:	4293      	cmp	r3, r2
 8002976:	d103      	bne.n	8002980 <UART_SetConfig+0x70>
 8002978:	f7ff fb56 	bl	8002028 <HAL_RCC_GetPCLK2Freq>
 800297c:	60f8      	str	r0, [r7, #12]
 800297e:	e002      	b.n	8002986 <UART_SetConfig+0x76>
 8002980:	f7ff fb3e 	bl	8002000 <HAL_RCC_GetPCLK1Freq>
 8002984:	60f8      	str	r0, [r7, #12]
 8002986:	68fa      	ldr	r2, [r7, #12]
 8002988:	4613      	mov	r3, r2
 800298a:	009b      	lsls	r3, r3, #2
 800298c:	4413      	add	r3, r2
 800298e:	009a      	lsls	r2, r3, #2
 8002990:	441a      	add	r2, r3
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	685b      	ldr	r3, [r3, #4]
 8002996:	009b      	lsls	r3, r3, #2
 8002998:	fbb2 f3f3 	udiv	r3, r2, r3
 800299c:	4a22      	ldr	r2, [pc, #136]	; (8002a28 <UART_SetConfig+0x118>)
 800299e:	fba2 2303 	umull	r2, r3, r2, r3
 80029a2:	095b      	lsrs	r3, r3, #5
 80029a4:	0119      	lsls	r1, r3, #4
 80029a6:	68fa      	ldr	r2, [r7, #12]
 80029a8:	4613      	mov	r3, r2
 80029aa:	009b      	lsls	r3, r3, #2
 80029ac:	4413      	add	r3, r2
 80029ae:	009a      	lsls	r2, r3, #2
 80029b0:	441a      	add	r2, r3
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	685b      	ldr	r3, [r3, #4]
 80029b6:	009b      	lsls	r3, r3, #2
 80029b8:	fbb2 f2f3 	udiv	r2, r2, r3
 80029bc:	4b1a      	ldr	r3, [pc, #104]	; (8002a28 <UART_SetConfig+0x118>)
 80029be:	fba3 0302 	umull	r0, r3, r3, r2
 80029c2:	095b      	lsrs	r3, r3, #5
 80029c4:	2064      	movs	r0, #100	; 0x64
 80029c6:	fb00 f303 	mul.w	r3, r0, r3
 80029ca:	1ad3      	subs	r3, r2, r3
 80029cc:	011b      	lsls	r3, r3, #4
 80029ce:	3332      	adds	r3, #50	; 0x32
 80029d0:	4a15      	ldr	r2, [pc, #84]	; (8002a28 <UART_SetConfig+0x118>)
 80029d2:	fba2 2303 	umull	r2, r3, r2, r3
 80029d6:	095b      	lsrs	r3, r3, #5
 80029d8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80029dc:	4419      	add	r1, r3
 80029de:	68fa      	ldr	r2, [r7, #12]
 80029e0:	4613      	mov	r3, r2
 80029e2:	009b      	lsls	r3, r3, #2
 80029e4:	4413      	add	r3, r2
 80029e6:	009a      	lsls	r2, r3, #2
 80029e8:	441a      	add	r2, r3
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	685b      	ldr	r3, [r3, #4]
 80029ee:	009b      	lsls	r3, r3, #2
 80029f0:	fbb2 f2f3 	udiv	r2, r2, r3
 80029f4:	4b0c      	ldr	r3, [pc, #48]	; (8002a28 <UART_SetConfig+0x118>)
 80029f6:	fba3 0302 	umull	r0, r3, r3, r2
 80029fa:	095b      	lsrs	r3, r3, #5
 80029fc:	2064      	movs	r0, #100	; 0x64
 80029fe:	fb00 f303 	mul.w	r3, r0, r3
 8002a02:	1ad3      	subs	r3, r2, r3
 8002a04:	011b      	lsls	r3, r3, #4
 8002a06:	3332      	adds	r3, #50	; 0x32
 8002a08:	4a07      	ldr	r2, [pc, #28]	; (8002a28 <UART_SetConfig+0x118>)
 8002a0a:	fba2 2303 	umull	r2, r3, r2, r3
 8002a0e:	095b      	lsrs	r3, r3, #5
 8002a10:	f003 020f 	and.w	r2, r3, #15
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	440a      	add	r2, r1
 8002a1a:	609a      	str	r2, [r3, #8]
 8002a1c:	bf00      	nop
 8002a1e:	3710      	adds	r7, #16
 8002a20:	46bd      	mov	sp, r7
 8002a22:	bd80      	pop	{r7, pc}
 8002a24:	40013800 	.word	0x40013800
 8002a28:	51eb851f 	.word	0x51eb851f

08002a2c <makeFreeRtosPriority>:
 8002a2c:	b480      	push	{r7}
 8002a2e:	b085      	sub	sp, #20
 8002a30:	af00      	add	r7, sp, #0
 8002a32:	4603      	mov	r3, r0
 8002a34:	80fb      	strh	r3, [r7, #6]
 8002a36:	2300      	movs	r3, #0
 8002a38:	60fb      	str	r3, [r7, #12]
 8002a3a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002a3e:	2b84      	cmp	r3, #132	; 0x84
 8002a40:	d005      	beq.n	8002a4e <makeFreeRtosPriority+0x22>
 8002a42:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8002a46:	68fb      	ldr	r3, [r7, #12]
 8002a48:	4413      	add	r3, r2
 8002a4a:	3303      	adds	r3, #3
 8002a4c:	60fb      	str	r3, [r7, #12]
 8002a4e:	68fb      	ldr	r3, [r7, #12]
 8002a50:	4618      	mov	r0, r3
 8002a52:	3714      	adds	r7, #20
 8002a54:	46bd      	mov	sp, r7
 8002a56:	bc80      	pop	{r7}
 8002a58:	4770      	bx	lr

08002a5a <osKernelStart>:
 8002a5a:	b580      	push	{r7, lr}
 8002a5c:	af00      	add	r7, sp, #0
 8002a5e:	f000 fad1 	bl	8003004 <vTaskStartScheduler>
 8002a62:	2300      	movs	r3, #0
 8002a64:	4618      	mov	r0, r3
 8002a66:	bd80      	pop	{r7, pc}

08002a68 <osThreadCreate>:
 8002a68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a6a:	b089      	sub	sp, #36	; 0x24
 8002a6c:	af04      	add	r7, sp, #16
 8002a6e:	6078      	str	r0, [r7, #4]
 8002a70:	6039      	str	r1, [r7, #0]
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	695b      	ldr	r3, [r3, #20]
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d020      	beq.n	8002abc <osThreadCreate+0x54>
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	699b      	ldr	r3, [r3, #24]
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	d01c      	beq.n	8002abc <osThreadCreate+0x54>
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	685c      	ldr	r4, [r3, #4]
 8002a86:	687b      	ldr	r3, [r7, #4]
 8002a88:	681d      	ldr	r5, [r3, #0]
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	691e      	ldr	r6, [r3, #16]
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002a94:	4618      	mov	r0, r3
 8002a96:	f7ff ffc9 	bl	8002a2c <makeFreeRtosPriority>
 8002a9a:	4601      	mov	r1, r0
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	695b      	ldr	r3, [r3, #20]
 8002aa0:	687a      	ldr	r2, [r7, #4]
 8002aa2:	6992      	ldr	r2, [r2, #24]
 8002aa4:	9202      	str	r2, [sp, #8]
 8002aa6:	9301      	str	r3, [sp, #4]
 8002aa8:	9100      	str	r1, [sp, #0]
 8002aaa:	683b      	ldr	r3, [r7, #0]
 8002aac:	4632      	mov	r2, r6
 8002aae:	4629      	mov	r1, r5
 8002ab0:	4620      	mov	r0, r4
 8002ab2:	f000 f8e8 	bl	8002c86 <xTaskCreateStatic>
 8002ab6:	4603      	mov	r3, r0
 8002ab8:	60fb      	str	r3, [r7, #12]
 8002aba:	e01c      	b.n	8002af6 <osThreadCreate+0x8e>
 8002abc:	687b      	ldr	r3, [r7, #4]
 8002abe:	685c      	ldr	r4, [r3, #4]
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	681d      	ldr	r5, [r3, #0]
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	691b      	ldr	r3, [r3, #16]
 8002ac8:	b29e      	uxth	r6, r3
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002ad0:	4618      	mov	r0, r3
 8002ad2:	f7ff ffab 	bl	8002a2c <makeFreeRtosPriority>
 8002ad6:	4602      	mov	r2, r0
 8002ad8:	f107 030c 	add.w	r3, r7, #12
 8002adc:	9301      	str	r3, [sp, #4]
 8002ade:	9200      	str	r2, [sp, #0]
 8002ae0:	683b      	ldr	r3, [r7, #0]
 8002ae2:	4632      	mov	r2, r6
 8002ae4:	4629      	mov	r1, r5
 8002ae6:	4620      	mov	r0, r4
 8002ae8:	f000 f929 	bl	8002d3e <xTaskCreate>
 8002aec:	4603      	mov	r3, r0
 8002aee:	2b01      	cmp	r3, #1
 8002af0:	d001      	beq.n	8002af6 <osThreadCreate+0x8e>
 8002af2:	2300      	movs	r3, #0
 8002af4:	e000      	b.n	8002af8 <osThreadCreate+0x90>
 8002af6:	68fb      	ldr	r3, [r7, #12]
 8002af8:	4618      	mov	r0, r3
 8002afa:	3714      	adds	r7, #20
 8002afc:	46bd      	mov	sp, r7
 8002afe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002b00 <osDelay>:
 8002b00:	b580      	push	{r7, lr}
 8002b02:	b084      	sub	sp, #16
 8002b04:	af00      	add	r7, sp, #0
 8002b06:	6078      	str	r0, [r7, #4]
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	60fb      	str	r3, [r7, #12]
 8002b0c:	68fb      	ldr	r3, [r7, #12]
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	d001      	beq.n	8002b16 <osDelay+0x16>
 8002b12:	68fb      	ldr	r3, [r7, #12]
 8002b14:	e000      	b.n	8002b18 <osDelay+0x18>
 8002b16:	2301      	movs	r3, #1
 8002b18:	4618      	mov	r0, r3
 8002b1a:	f000 fa3f 	bl	8002f9c <vTaskDelay>
 8002b1e:	2300      	movs	r3, #0
 8002b20:	4618      	mov	r0, r3
 8002b22:	3710      	adds	r7, #16
 8002b24:	46bd      	mov	sp, r7
 8002b26:	bd80      	pop	{r7, pc}

08002b28 <vListInitialise>:
 8002b28:	b480      	push	{r7}
 8002b2a:	b083      	sub	sp, #12
 8002b2c:	af00      	add	r7, sp, #0
 8002b2e:	6078      	str	r0, [r7, #4]
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	f103 0208 	add.w	r2, r3, #8
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	605a      	str	r2, [r3, #4]
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002b40:	609a      	str	r2, [r3, #8]
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	f103 0208 	add.w	r2, r3, #8
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	60da      	str	r2, [r3, #12]
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	f103 0208 	add.w	r2, r3, #8
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	611a      	str	r2, [r3, #16]
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	2200      	movs	r2, #0
 8002b5a:	601a      	str	r2, [r3, #0]
 8002b5c:	bf00      	nop
 8002b5e:	370c      	adds	r7, #12
 8002b60:	46bd      	mov	sp, r7
 8002b62:	bc80      	pop	{r7}
 8002b64:	4770      	bx	lr

08002b66 <vListInitialiseItem>:
 8002b66:	b480      	push	{r7}
 8002b68:	b083      	sub	sp, #12
 8002b6a:	af00      	add	r7, sp, #0
 8002b6c:	6078      	str	r0, [r7, #4]
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	2200      	movs	r2, #0
 8002b72:	611a      	str	r2, [r3, #16]
 8002b74:	bf00      	nop
 8002b76:	370c      	adds	r7, #12
 8002b78:	46bd      	mov	sp, r7
 8002b7a:	bc80      	pop	{r7}
 8002b7c:	4770      	bx	lr

08002b7e <vListInsertEnd>:
 8002b7e:	b480      	push	{r7}
 8002b80:	b085      	sub	sp, #20
 8002b82:	af00      	add	r7, sp, #0
 8002b84:	6078      	str	r0, [r7, #4]
 8002b86:	6039      	str	r1, [r7, #0]
 8002b88:	687b      	ldr	r3, [r7, #4]
 8002b8a:	685b      	ldr	r3, [r3, #4]
 8002b8c:	60fb      	str	r3, [r7, #12]
 8002b8e:	683b      	ldr	r3, [r7, #0]
 8002b90:	68fa      	ldr	r2, [r7, #12]
 8002b92:	605a      	str	r2, [r3, #4]
 8002b94:	68fb      	ldr	r3, [r7, #12]
 8002b96:	689a      	ldr	r2, [r3, #8]
 8002b98:	683b      	ldr	r3, [r7, #0]
 8002b9a:	609a      	str	r2, [r3, #8]
 8002b9c:	68fb      	ldr	r3, [r7, #12]
 8002b9e:	689b      	ldr	r3, [r3, #8]
 8002ba0:	683a      	ldr	r2, [r7, #0]
 8002ba2:	605a      	str	r2, [r3, #4]
 8002ba4:	68fb      	ldr	r3, [r7, #12]
 8002ba6:	683a      	ldr	r2, [r7, #0]
 8002ba8:	609a      	str	r2, [r3, #8]
 8002baa:	683b      	ldr	r3, [r7, #0]
 8002bac:	687a      	ldr	r2, [r7, #4]
 8002bae:	611a      	str	r2, [r3, #16]
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	1c5a      	adds	r2, r3, #1
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	601a      	str	r2, [r3, #0]
 8002bba:	bf00      	nop
 8002bbc:	3714      	adds	r7, #20
 8002bbe:	46bd      	mov	sp, r7
 8002bc0:	bc80      	pop	{r7}
 8002bc2:	4770      	bx	lr

08002bc4 <vListInsert>:
 8002bc4:	b480      	push	{r7}
 8002bc6:	b085      	sub	sp, #20
 8002bc8:	af00      	add	r7, sp, #0
 8002bca:	6078      	str	r0, [r7, #4]
 8002bcc:	6039      	str	r1, [r7, #0]
 8002bce:	683b      	ldr	r3, [r7, #0]
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	60bb      	str	r3, [r7, #8]
 8002bd4:	68bb      	ldr	r3, [r7, #8]
 8002bd6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002bda:	d103      	bne.n	8002be4 <vListInsert+0x20>
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	691b      	ldr	r3, [r3, #16]
 8002be0:	60fb      	str	r3, [r7, #12]
 8002be2:	e00c      	b.n	8002bfe <vListInsert+0x3a>
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	3308      	adds	r3, #8
 8002be8:	60fb      	str	r3, [r7, #12]
 8002bea:	e002      	b.n	8002bf2 <vListInsert+0x2e>
 8002bec:	68fb      	ldr	r3, [r7, #12]
 8002bee:	685b      	ldr	r3, [r3, #4]
 8002bf0:	60fb      	str	r3, [r7, #12]
 8002bf2:	68fb      	ldr	r3, [r7, #12]
 8002bf4:	685b      	ldr	r3, [r3, #4]
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	68ba      	ldr	r2, [r7, #8]
 8002bfa:	429a      	cmp	r2, r3
 8002bfc:	d2f6      	bcs.n	8002bec <vListInsert+0x28>
 8002bfe:	68fb      	ldr	r3, [r7, #12]
 8002c00:	685a      	ldr	r2, [r3, #4]
 8002c02:	683b      	ldr	r3, [r7, #0]
 8002c04:	605a      	str	r2, [r3, #4]
 8002c06:	683b      	ldr	r3, [r7, #0]
 8002c08:	685b      	ldr	r3, [r3, #4]
 8002c0a:	683a      	ldr	r2, [r7, #0]
 8002c0c:	609a      	str	r2, [r3, #8]
 8002c0e:	683b      	ldr	r3, [r7, #0]
 8002c10:	68fa      	ldr	r2, [r7, #12]
 8002c12:	609a      	str	r2, [r3, #8]
 8002c14:	68fb      	ldr	r3, [r7, #12]
 8002c16:	683a      	ldr	r2, [r7, #0]
 8002c18:	605a      	str	r2, [r3, #4]
 8002c1a:	683b      	ldr	r3, [r7, #0]
 8002c1c:	687a      	ldr	r2, [r7, #4]
 8002c1e:	611a      	str	r2, [r3, #16]
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	1c5a      	adds	r2, r3, #1
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	601a      	str	r2, [r3, #0]
 8002c2a:	bf00      	nop
 8002c2c:	3714      	adds	r7, #20
 8002c2e:	46bd      	mov	sp, r7
 8002c30:	bc80      	pop	{r7}
 8002c32:	4770      	bx	lr

08002c34 <uxListRemove>:
 8002c34:	b480      	push	{r7}
 8002c36:	b085      	sub	sp, #20
 8002c38:	af00      	add	r7, sp, #0
 8002c3a:	6078      	str	r0, [r7, #4]
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	691b      	ldr	r3, [r3, #16]
 8002c40:	60fb      	str	r3, [r7, #12]
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	685b      	ldr	r3, [r3, #4]
 8002c46:	687a      	ldr	r2, [r7, #4]
 8002c48:	6892      	ldr	r2, [r2, #8]
 8002c4a:	609a      	str	r2, [r3, #8]
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	689b      	ldr	r3, [r3, #8]
 8002c50:	687a      	ldr	r2, [r7, #4]
 8002c52:	6852      	ldr	r2, [r2, #4]
 8002c54:	605a      	str	r2, [r3, #4]
 8002c56:	68fb      	ldr	r3, [r7, #12]
 8002c58:	685b      	ldr	r3, [r3, #4]
 8002c5a:	687a      	ldr	r2, [r7, #4]
 8002c5c:	429a      	cmp	r2, r3
 8002c5e:	d103      	bne.n	8002c68 <uxListRemove+0x34>
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	689a      	ldr	r2, [r3, #8]
 8002c64:	68fb      	ldr	r3, [r7, #12]
 8002c66:	605a      	str	r2, [r3, #4]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	2200      	movs	r2, #0
 8002c6c:	611a      	str	r2, [r3, #16]
 8002c6e:	68fb      	ldr	r3, [r7, #12]
 8002c70:	681b      	ldr	r3, [r3, #0]
 8002c72:	1e5a      	subs	r2, r3, #1
 8002c74:	68fb      	ldr	r3, [r7, #12]
 8002c76:	601a      	str	r2, [r3, #0]
 8002c78:	68fb      	ldr	r3, [r7, #12]
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	4618      	mov	r0, r3
 8002c7e:	3714      	adds	r7, #20
 8002c80:	46bd      	mov	sp, r7
 8002c82:	bc80      	pop	{r7}
 8002c84:	4770      	bx	lr

08002c86 <xTaskCreateStatic>:
 8002c86:	b580      	push	{r7, lr}
 8002c88:	b08e      	sub	sp, #56	; 0x38
 8002c8a:	af04      	add	r7, sp, #16
 8002c8c:	60f8      	str	r0, [r7, #12]
 8002c8e:	60b9      	str	r1, [r7, #8]
 8002c90:	607a      	str	r2, [r7, #4]
 8002c92:	603b      	str	r3, [r7, #0]
 8002c94:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002c96:	2b00      	cmp	r3, #0
 8002c98:	d10a      	bne.n	8002cb0 <xTaskCreateStatic+0x2a>
 8002c9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c9e:	f383 8811 	msr	BASEPRI, r3
 8002ca2:	f3bf 8f6f 	isb	sy
 8002ca6:	f3bf 8f4f 	dsb	sy
 8002caa:	623b      	str	r3, [r7, #32]
 8002cac:	bf00      	nop
 8002cae:	e7fe      	b.n	8002cae <xTaskCreateStatic+0x28>
 8002cb0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002cb2:	2b00      	cmp	r3, #0
 8002cb4:	d10a      	bne.n	8002ccc <xTaskCreateStatic+0x46>
 8002cb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002cba:	f383 8811 	msr	BASEPRI, r3
 8002cbe:	f3bf 8f6f 	isb	sy
 8002cc2:	f3bf 8f4f 	dsb	sy
 8002cc6:	61fb      	str	r3, [r7, #28]
 8002cc8:	bf00      	nop
 8002cca:	e7fe      	b.n	8002cca <xTaskCreateStatic+0x44>
 8002ccc:	2354      	movs	r3, #84	; 0x54
 8002cce:	613b      	str	r3, [r7, #16]
 8002cd0:	693b      	ldr	r3, [r7, #16]
 8002cd2:	2b54      	cmp	r3, #84	; 0x54
 8002cd4:	d00a      	beq.n	8002cec <xTaskCreateStatic+0x66>
 8002cd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002cda:	f383 8811 	msr	BASEPRI, r3
 8002cde:	f3bf 8f6f 	isb	sy
 8002ce2:	f3bf 8f4f 	dsb	sy
 8002ce6:	61bb      	str	r3, [r7, #24]
 8002ce8:	bf00      	nop
 8002cea:	e7fe      	b.n	8002cea <xTaskCreateStatic+0x64>
 8002cec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d01e      	beq.n	8002d30 <xTaskCreateStatic+0xaa>
 8002cf2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002cf4:	2b00      	cmp	r3, #0
 8002cf6:	d01b      	beq.n	8002d30 <xTaskCreateStatic+0xaa>
 8002cf8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002cfa:	627b      	str	r3, [r7, #36]	; 0x24
 8002cfc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002cfe:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002d00:	631a      	str	r2, [r3, #48]	; 0x30
 8002d02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002d04:	2202      	movs	r2, #2
 8002d06:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002d0a:	2300      	movs	r3, #0
 8002d0c:	9303      	str	r3, [sp, #12]
 8002d0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002d10:	9302      	str	r3, [sp, #8]
 8002d12:	f107 0314 	add.w	r3, r7, #20
 8002d16:	9301      	str	r3, [sp, #4]
 8002d18:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d1a:	9300      	str	r3, [sp, #0]
 8002d1c:	683b      	ldr	r3, [r7, #0]
 8002d1e:	687a      	ldr	r2, [r7, #4]
 8002d20:	68b9      	ldr	r1, [r7, #8]
 8002d22:	68f8      	ldr	r0, [r7, #12]
 8002d24:	f000 f850 	bl	8002dc8 <prvInitialiseNewTask>
 8002d28:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002d2a:	f000 f8cd 	bl	8002ec8 <prvAddNewTaskToReadyList>
 8002d2e:	e001      	b.n	8002d34 <xTaskCreateStatic+0xae>
 8002d30:	2300      	movs	r3, #0
 8002d32:	617b      	str	r3, [r7, #20]
 8002d34:	697b      	ldr	r3, [r7, #20]
 8002d36:	4618      	mov	r0, r3
 8002d38:	3728      	adds	r7, #40	; 0x28
 8002d3a:	46bd      	mov	sp, r7
 8002d3c:	bd80      	pop	{r7, pc}

08002d3e <xTaskCreate>:
 8002d3e:	b580      	push	{r7, lr}
 8002d40:	b08c      	sub	sp, #48	; 0x30
 8002d42:	af04      	add	r7, sp, #16
 8002d44:	60f8      	str	r0, [r7, #12]
 8002d46:	60b9      	str	r1, [r7, #8]
 8002d48:	603b      	str	r3, [r7, #0]
 8002d4a:	4613      	mov	r3, r2
 8002d4c:	80fb      	strh	r3, [r7, #6]
 8002d4e:	88fb      	ldrh	r3, [r7, #6]
 8002d50:	009b      	lsls	r3, r3, #2
 8002d52:	4618      	mov	r0, r3
 8002d54:	f000 fe6c 	bl	8003a30 <pvPortMalloc>
 8002d58:	6178      	str	r0, [r7, #20]
 8002d5a:	697b      	ldr	r3, [r7, #20]
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d00e      	beq.n	8002d7e <xTaskCreate+0x40>
 8002d60:	2054      	movs	r0, #84	; 0x54
 8002d62:	f000 fe65 	bl	8003a30 <pvPortMalloc>
 8002d66:	61f8      	str	r0, [r7, #28]
 8002d68:	69fb      	ldr	r3, [r7, #28]
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d003      	beq.n	8002d76 <xTaskCreate+0x38>
 8002d6e:	69fb      	ldr	r3, [r7, #28]
 8002d70:	697a      	ldr	r2, [r7, #20]
 8002d72:	631a      	str	r2, [r3, #48]	; 0x30
 8002d74:	e005      	b.n	8002d82 <xTaskCreate+0x44>
 8002d76:	6978      	ldr	r0, [r7, #20]
 8002d78:	f000 ff1e 	bl	8003bb8 <vPortFree>
 8002d7c:	e001      	b.n	8002d82 <xTaskCreate+0x44>
 8002d7e:	2300      	movs	r3, #0
 8002d80:	61fb      	str	r3, [r7, #28]
 8002d82:	69fb      	ldr	r3, [r7, #28]
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d017      	beq.n	8002db8 <xTaskCreate+0x7a>
 8002d88:	69fb      	ldr	r3, [r7, #28]
 8002d8a:	2200      	movs	r2, #0
 8002d8c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002d90:	88fa      	ldrh	r2, [r7, #6]
 8002d92:	2300      	movs	r3, #0
 8002d94:	9303      	str	r3, [sp, #12]
 8002d96:	69fb      	ldr	r3, [r7, #28]
 8002d98:	9302      	str	r3, [sp, #8]
 8002d9a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002d9c:	9301      	str	r3, [sp, #4]
 8002d9e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002da0:	9300      	str	r3, [sp, #0]
 8002da2:	683b      	ldr	r3, [r7, #0]
 8002da4:	68b9      	ldr	r1, [r7, #8]
 8002da6:	68f8      	ldr	r0, [r7, #12]
 8002da8:	f000 f80e 	bl	8002dc8 <prvInitialiseNewTask>
 8002dac:	69f8      	ldr	r0, [r7, #28]
 8002dae:	f000 f88b 	bl	8002ec8 <prvAddNewTaskToReadyList>
 8002db2:	2301      	movs	r3, #1
 8002db4:	61bb      	str	r3, [r7, #24]
 8002db6:	e002      	b.n	8002dbe <xTaskCreate+0x80>
 8002db8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002dbc:	61bb      	str	r3, [r7, #24]
 8002dbe:	69bb      	ldr	r3, [r7, #24]
 8002dc0:	4618      	mov	r0, r3
 8002dc2:	3720      	adds	r7, #32
 8002dc4:	46bd      	mov	sp, r7
 8002dc6:	bd80      	pop	{r7, pc}

08002dc8 <prvInitialiseNewTask>:
 8002dc8:	b580      	push	{r7, lr}
 8002dca:	b088      	sub	sp, #32
 8002dcc:	af00      	add	r7, sp, #0
 8002dce:	60f8      	str	r0, [r7, #12]
 8002dd0:	60b9      	str	r1, [r7, #8]
 8002dd2:	607a      	str	r2, [r7, #4]
 8002dd4:	603b      	str	r3, [r7, #0]
 8002dd6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8002de0:	3b01      	subs	r3, #1
 8002de2:	009b      	lsls	r3, r3, #2
 8002de4:	4413      	add	r3, r2
 8002de6:	61bb      	str	r3, [r7, #24]
 8002de8:	69bb      	ldr	r3, [r7, #24]
 8002dea:	f023 0307 	bic.w	r3, r3, #7
 8002dee:	61bb      	str	r3, [r7, #24]
 8002df0:	69bb      	ldr	r3, [r7, #24]
 8002df2:	f003 0307 	and.w	r3, r3, #7
 8002df6:	2b00      	cmp	r3, #0
 8002df8:	d00a      	beq.n	8002e10 <prvInitialiseNewTask+0x48>
 8002dfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002dfe:	f383 8811 	msr	BASEPRI, r3
 8002e02:	f3bf 8f6f 	isb	sy
 8002e06:	f3bf 8f4f 	dsb	sy
 8002e0a:	617b      	str	r3, [r7, #20]
 8002e0c:	bf00      	nop
 8002e0e:	e7fe      	b.n	8002e0e <prvInitialiseNewTask+0x46>
 8002e10:	2300      	movs	r3, #0
 8002e12:	61fb      	str	r3, [r7, #28]
 8002e14:	e012      	b.n	8002e3c <prvInitialiseNewTask+0x74>
 8002e16:	68ba      	ldr	r2, [r7, #8]
 8002e18:	69fb      	ldr	r3, [r7, #28]
 8002e1a:	4413      	add	r3, r2
 8002e1c:	7819      	ldrb	r1, [r3, #0]
 8002e1e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002e20:	69fb      	ldr	r3, [r7, #28]
 8002e22:	4413      	add	r3, r2
 8002e24:	3334      	adds	r3, #52	; 0x34
 8002e26:	460a      	mov	r2, r1
 8002e28:	701a      	strb	r2, [r3, #0]
 8002e2a:	68ba      	ldr	r2, [r7, #8]
 8002e2c:	69fb      	ldr	r3, [r7, #28]
 8002e2e:	4413      	add	r3, r2
 8002e30:	781b      	ldrb	r3, [r3, #0]
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	d006      	beq.n	8002e44 <prvInitialiseNewTask+0x7c>
 8002e36:	69fb      	ldr	r3, [r7, #28]
 8002e38:	3301      	adds	r3, #1
 8002e3a:	61fb      	str	r3, [r7, #28]
 8002e3c:	69fb      	ldr	r3, [r7, #28]
 8002e3e:	2b0f      	cmp	r3, #15
 8002e40:	d9e9      	bls.n	8002e16 <prvInitialiseNewTask+0x4e>
 8002e42:	e000      	b.n	8002e46 <prvInitialiseNewTask+0x7e>
 8002e44:	bf00      	nop
 8002e46:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e48:	2200      	movs	r2, #0
 8002e4a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002e4e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002e50:	2b06      	cmp	r3, #6
 8002e52:	d901      	bls.n	8002e58 <prvInitialiseNewTask+0x90>
 8002e54:	2306      	movs	r3, #6
 8002e56:	62bb      	str	r3, [r7, #40]	; 0x28
 8002e58:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e5a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002e5c:	62da      	str	r2, [r3, #44]	; 0x2c
 8002e5e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e60:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002e62:	645a      	str	r2, [r3, #68]	; 0x44
 8002e64:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e66:	2200      	movs	r2, #0
 8002e68:	649a      	str	r2, [r3, #72]	; 0x48
 8002e6a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e6c:	3304      	adds	r3, #4
 8002e6e:	4618      	mov	r0, r3
 8002e70:	f7ff fe79 	bl	8002b66 <vListInitialiseItem>
 8002e74:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e76:	3318      	adds	r3, #24
 8002e78:	4618      	mov	r0, r3
 8002e7a:	f7ff fe74 	bl	8002b66 <vListInitialiseItem>
 8002e7e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e80:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002e82:	611a      	str	r2, [r3, #16]
 8002e84:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002e86:	f1c3 0207 	rsb	r2, r3, #7
 8002e8a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e8c:	619a      	str	r2, [r3, #24]
 8002e8e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e90:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002e92:	625a      	str	r2, [r3, #36]	; 0x24
 8002e94:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e96:	2200      	movs	r2, #0
 8002e98:	64da      	str	r2, [r3, #76]	; 0x4c
 8002e9a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e9c:	2200      	movs	r2, #0
 8002e9e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002ea2:	683a      	ldr	r2, [r7, #0]
 8002ea4:	68f9      	ldr	r1, [r7, #12]
 8002ea6:	69b8      	ldr	r0, [r7, #24]
 8002ea8:	f000 fc0e 	bl	80036c8 <pxPortInitialiseStack>
 8002eac:	4602      	mov	r2, r0
 8002eae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002eb0:	601a      	str	r2, [r3, #0]
 8002eb2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002eb4:	2b00      	cmp	r3, #0
 8002eb6:	d002      	beq.n	8002ebe <prvInitialiseNewTask+0xf6>
 8002eb8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002eba:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002ebc:	601a      	str	r2, [r3, #0]
 8002ebe:	bf00      	nop
 8002ec0:	3720      	adds	r7, #32
 8002ec2:	46bd      	mov	sp, r7
 8002ec4:	bd80      	pop	{r7, pc}
	...

08002ec8 <prvAddNewTaskToReadyList>:
 8002ec8:	b580      	push	{r7, lr}
 8002eca:	b082      	sub	sp, #8
 8002ecc:	af00      	add	r7, sp, #0
 8002ece:	6078      	str	r0, [r7, #4]
 8002ed0:	f000 fcec 	bl	80038ac <vPortEnterCritical>
 8002ed4:	4b2a      	ldr	r3, [pc, #168]	; (8002f80 <prvAddNewTaskToReadyList+0xb8>)
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	3301      	adds	r3, #1
 8002eda:	4a29      	ldr	r2, [pc, #164]	; (8002f80 <prvAddNewTaskToReadyList+0xb8>)
 8002edc:	6013      	str	r3, [r2, #0]
 8002ede:	4b29      	ldr	r3, [pc, #164]	; (8002f84 <prvAddNewTaskToReadyList+0xbc>)
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	d109      	bne.n	8002efa <prvAddNewTaskToReadyList+0x32>
 8002ee6:	4a27      	ldr	r2, [pc, #156]	; (8002f84 <prvAddNewTaskToReadyList+0xbc>)
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	6013      	str	r3, [r2, #0]
 8002eec:	4b24      	ldr	r3, [pc, #144]	; (8002f80 <prvAddNewTaskToReadyList+0xb8>)
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	2b01      	cmp	r3, #1
 8002ef2:	d110      	bne.n	8002f16 <prvAddNewTaskToReadyList+0x4e>
 8002ef4:	f000 fac0 	bl	8003478 <prvInitialiseTaskLists>
 8002ef8:	e00d      	b.n	8002f16 <prvAddNewTaskToReadyList+0x4e>
 8002efa:	4b23      	ldr	r3, [pc, #140]	; (8002f88 <prvAddNewTaskToReadyList+0xc0>)
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	2b00      	cmp	r3, #0
 8002f00:	d109      	bne.n	8002f16 <prvAddNewTaskToReadyList+0x4e>
 8002f02:	4b20      	ldr	r3, [pc, #128]	; (8002f84 <prvAddNewTaskToReadyList+0xbc>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002f0c:	429a      	cmp	r2, r3
 8002f0e:	d802      	bhi.n	8002f16 <prvAddNewTaskToReadyList+0x4e>
 8002f10:	4a1c      	ldr	r2, [pc, #112]	; (8002f84 <prvAddNewTaskToReadyList+0xbc>)
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	6013      	str	r3, [r2, #0]
 8002f16:	4b1d      	ldr	r3, [pc, #116]	; (8002f8c <prvAddNewTaskToReadyList+0xc4>)
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	3301      	adds	r3, #1
 8002f1c:	4a1b      	ldr	r2, [pc, #108]	; (8002f8c <prvAddNewTaskToReadyList+0xc4>)
 8002f1e:	6013      	str	r3, [r2, #0]
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002f24:	2201      	movs	r2, #1
 8002f26:	409a      	lsls	r2, r3
 8002f28:	4b19      	ldr	r3, [pc, #100]	; (8002f90 <prvAddNewTaskToReadyList+0xc8>)
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	4313      	orrs	r3, r2
 8002f2e:	4a18      	ldr	r2, [pc, #96]	; (8002f90 <prvAddNewTaskToReadyList+0xc8>)
 8002f30:	6013      	str	r3, [r2, #0]
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002f36:	4613      	mov	r3, r2
 8002f38:	009b      	lsls	r3, r3, #2
 8002f3a:	4413      	add	r3, r2
 8002f3c:	009b      	lsls	r3, r3, #2
 8002f3e:	4a15      	ldr	r2, [pc, #84]	; (8002f94 <prvAddNewTaskToReadyList+0xcc>)
 8002f40:	441a      	add	r2, r3
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	3304      	adds	r3, #4
 8002f46:	4619      	mov	r1, r3
 8002f48:	4610      	mov	r0, r2
 8002f4a:	f7ff fe18 	bl	8002b7e <vListInsertEnd>
 8002f4e:	f000 fcdd 	bl	800390c <vPortExitCritical>
 8002f52:	4b0d      	ldr	r3, [pc, #52]	; (8002f88 <prvAddNewTaskToReadyList+0xc0>)
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d00e      	beq.n	8002f78 <prvAddNewTaskToReadyList+0xb0>
 8002f5a:	4b0a      	ldr	r3, [pc, #40]	; (8002f84 <prvAddNewTaskToReadyList+0xbc>)
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002f64:	429a      	cmp	r2, r3
 8002f66:	d207      	bcs.n	8002f78 <prvAddNewTaskToReadyList+0xb0>
 8002f68:	4b0b      	ldr	r3, [pc, #44]	; (8002f98 <prvAddNewTaskToReadyList+0xd0>)
 8002f6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002f6e:	601a      	str	r2, [r3, #0]
 8002f70:	f3bf 8f4f 	dsb	sy
 8002f74:	f3bf 8f6f 	isb	sy
 8002f78:	bf00      	nop
 8002f7a:	3708      	adds	r7, #8
 8002f7c:	46bd      	mov	sp, r7
 8002f7e:	bd80      	pop	{r7, pc}
 8002f80:	200004cc 	.word	0x200004cc
 8002f84:	200003cc 	.word	0x200003cc
 8002f88:	200004d8 	.word	0x200004d8
 8002f8c:	200004e8 	.word	0x200004e8
 8002f90:	200004d4 	.word	0x200004d4
 8002f94:	200003d0 	.word	0x200003d0
 8002f98:	e000ed04 	.word	0xe000ed04

08002f9c <vTaskDelay>:
 8002f9c:	b580      	push	{r7, lr}
 8002f9e:	b084      	sub	sp, #16
 8002fa0:	af00      	add	r7, sp, #0
 8002fa2:	6078      	str	r0, [r7, #4]
 8002fa4:	2300      	movs	r3, #0
 8002fa6:	60fb      	str	r3, [r7, #12]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	d017      	beq.n	8002fde <vTaskDelay+0x42>
 8002fae:	4b13      	ldr	r3, [pc, #76]	; (8002ffc <vTaskDelay+0x60>)
 8002fb0:	681b      	ldr	r3, [r3, #0]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d00a      	beq.n	8002fcc <vTaskDelay+0x30>
 8002fb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002fba:	f383 8811 	msr	BASEPRI, r3
 8002fbe:	f3bf 8f6f 	isb	sy
 8002fc2:	f3bf 8f4f 	dsb	sy
 8002fc6:	60bb      	str	r3, [r7, #8]
 8002fc8:	bf00      	nop
 8002fca:	e7fe      	b.n	8002fca <vTaskDelay+0x2e>
 8002fcc:	f000 f87a 	bl	80030c4 <vTaskSuspendAll>
 8002fd0:	2100      	movs	r1, #0
 8002fd2:	6878      	ldr	r0, [r7, #4]
 8002fd4:	f000 fb12 	bl	80035fc <prvAddCurrentTaskToDelayedList>
 8002fd8:	f000 f882 	bl	80030e0 <xTaskResumeAll>
 8002fdc:	60f8      	str	r0, [r7, #12]
 8002fde:	68fb      	ldr	r3, [r7, #12]
 8002fe0:	2b00      	cmp	r3, #0
 8002fe2:	d107      	bne.n	8002ff4 <vTaskDelay+0x58>
 8002fe4:	4b06      	ldr	r3, [pc, #24]	; (8003000 <vTaskDelay+0x64>)
 8002fe6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002fea:	601a      	str	r2, [r3, #0]
 8002fec:	f3bf 8f4f 	dsb	sy
 8002ff0:	f3bf 8f6f 	isb	sy
 8002ff4:	bf00      	nop
 8002ff6:	3710      	adds	r7, #16
 8002ff8:	46bd      	mov	sp, r7
 8002ffa:	bd80      	pop	{r7, pc}
 8002ffc:	200004f4 	.word	0x200004f4
 8003000:	e000ed04 	.word	0xe000ed04

08003004 <vTaskStartScheduler>:
 8003004:	b580      	push	{r7, lr}
 8003006:	b08a      	sub	sp, #40	; 0x28
 8003008:	af04      	add	r7, sp, #16
 800300a:	2300      	movs	r3, #0
 800300c:	60bb      	str	r3, [r7, #8]
 800300e:	2300      	movs	r3, #0
 8003010:	607b      	str	r3, [r7, #4]
 8003012:	463a      	mov	r2, r7
 8003014:	1d39      	adds	r1, r7, #4
 8003016:	f107 0308 	add.w	r3, r7, #8
 800301a:	4618      	mov	r0, r3
 800301c:	f7fd f8a0 	bl	8000160 <vApplicationGetIdleTaskMemory>
 8003020:	6839      	ldr	r1, [r7, #0]
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	68ba      	ldr	r2, [r7, #8]
 8003026:	9202      	str	r2, [sp, #8]
 8003028:	9301      	str	r3, [sp, #4]
 800302a:	2300      	movs	r3, #0
 800302c:	9300      	str	r3, [sp, #0]
 800302e:	2300      	movs	r3, #0
 8003030:	460a      	mov	r2, r1
 8003032:	491e      	ldr	r1, [pc, #120]	; (80030ac <vTaskStartScheduler+0xa8>)
 8003034:	481e      	ldr	r0, [pc, #120]	; (80030b0 <vTaskStartScheduler+0xac>)
 8003036:	f7ff fe26 	bl	8002c86 <xTaskCreateStatic>
 800303a:	4603      	mov	r3, r0
 800303c:	4a1d      	ldr	r2, [pc, #116]	; (80030b4 <vTaskStartScheduler+0xb0>)
 800303e:	6013      	str	r3, [r2, #0]
 8003040:	4b1c      	ldr	r3, [pc, #112]	; (80030b4 <vTaskStartScheduler+0xb0>)
 8003042:	681b      	ldr	r3, [r3, #0]
 8003044:	2b00      	cmp	r3, #0
 8003046:	d002      	beq.n	800304e <vTaskStartScheduler+0x4a>
 8003048:	2301      	movs	r3, #1
 800304a:	617b      	str	r3, [r7, #20]
 800304c:	e001      	b.n	8003052 <vTaskStartScheduler+0x4e>
 800304e:	2300      	movs	r3, #0
 8003050:	617b      	str	r3, [r7, #20]
 8003052:	697b      	ldr	r3, [r7, #20]
 8003054:	2b01      	cmp	r3, #1
 8003056:	d116      	bne.n	8003086 <vTaskStartScheduler+0x82>
 8003058:	f04f 0350 	mov.w	r3, #80	; 0x50
 800305c:	f383 8811 	msr	BASEPRI, r3
 8003060:	f3bf 8f6f 	isb	sy
 8003064:	f3bf 8f4f 	dsb	sy
 8003068:	613b      	str	r3, [r7, #16]
 800306a:	bf00      	nop
 800306c:	4b12      	ldr	r3, [pc, #72]	; (80030b8 <vTaskStartScheduler+0xb4>)
 800306e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003072:	601a      	str	r2, [r3, #0]
 8003074:	4b11      	ldr	r3, [pc, #68]	; (80030bc <vTaskStartScheduler+0xb8>)
 8003076:	2201      	movs	r2, #1
 8003078:	601a      	str	r2, [r3, #0]
 800307a:	4b11      	ldr	r3, [pc, #68]	; (80030c0 <vTaskStartScheduler+0xbc>)
 800307c:	2200      	movs	r2, #0
 800307e:	601a      	str	r2, [r3, #0]
 8003080:	f000 fba2 	bl	80037c8 <xPortStartScheduler>
 8003084:	e00e      	b.n	80030a4 <vTaskStartScheduler+0xa0>
 8003086:	697b      	ldr	r3, [r7, #20]
 8003088:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800308c:	d10a      	bne.n	80030a4 <vTaskStartScheduler+0xa0>
 800308e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003092:	f383 8811 	msr	BASEPRI, r3
 8003096:	f3bf 8f6f 	isb	sy
 800309a:	f3bf 8f4f 	dsb	sy
 800309e:	60fb      	str	r3, [r7, #12]
 80030a0:	bf00      	nop
 80030a2:	e7fe      	b.n	80030a2 <vTaskStartScheduler+0x9e>
 80030a4:	bf00      	nop
 80030a6:	3718      	adds	r7, #24
 80030a8:	46bd      	mov	sp, r7
 80030aa:	bd80      	pop	{r7, pc}
 80030ac:	08005388 	.word	0x08005388
 80030b0:	08003449 	.word	0x08003449
 80030b4:	200004f0 	.word	0x200004f0
 80030b8:	200004ec 	.word	0x200004ec
 80030bc:	200004d8 	.word	0x200004d8
 80030c0:	200004d0 	.word	0x200004d0

080030c4 <vTaskSuspendAll>:
 80030c4:	b480      	push	{r7}
 80030c6:	af00      	add	r7, sp, #0
 80030c8:	4b04      	ldr	r3, [pc, #16]	; (80030dc <vTaskSuspendAll+0x18>)
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	3301      	adds	r3, #1
 80030ce:	4a03      	ldr	r2, [pc, #12]	; (80030dc <vTaskSuspendAll+0x18>)
 80030d0:	6013      	str	r3, [r2, #0]
 80030d2:	bf00      	nop
 80030d4:	46bd      	mov	sp, r7
 80030d6:	bc80      	pop	{r7}
 80030d8:	4770      	bx	lr
 80030da:	bf00      	nop
 80030dc:	200004f4 	.word	0x200004f4

080030e0 <xTaskResumeAll>:
 80030e0:	b580      	push	{r7, lr}
 80030e2:	b084      	sub	sp, #16
 80030e4:	af00      	add	r7, sp, #0
 80030e6:	2300      	movs	r3, #0
 80030e8:	60fb      	str	r3, [r7, #12]
 80030ea:	2300      	movs	r3, #0
 80030ec:	60bb      	str	r3, [r7, #8]
 80030ee:	4b41      	ldr	r3, [pc, #260]	; (80031f4 <xTaskResumeAll+0x114>)
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	2b00      	cmp	r3, #0
 80030f4:	d10a      	bne.n	800310c <xTaskResumeAll+0x2c>
 80030f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80030fa:	f383 8811 	msr	BASEPRI, r3
 80030fe:	f3bf 8f6f 	isb	sy
 8003102:	f3bf 8f4f 	dsb	sy
 8003106:	603b      	str	r3, [r7, #0]
 8003108:	bf00      	nop
 800310a:	e7fe      	b.n	800310a <xTaskResumeAll+0x2a>
 800310c:	f000 fbce 	bl	80038ac <vPortEnterCritical>
 8003110:	4b38      	ldr	r3, [pc, #224]	; (80031f4 <xTaskResumeAll+0x114>)
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	3b01      	subs	r3, #1
 8003116:	4a37      	ldr	r2, [pc, #220]	; (80031f4 <xTaskResumeAll+0x114>)
 8003118:	6013      	str	r3, [r2, #0]
 800311a:	4b36      	ldr	r3, [pc, #216]	; (80031f4 <xTaskResumeAll+0x114>)
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	2b00      	cmp	r3, #0
 8003120:	d161      	bne.n	80031e6 <xTaskResumeAll+0x106>
 8003122:	4b35      	ldr	r3, [pc, #212]	; (80031f8 <xTaskResumeAll+0x118>)
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	2b00      	cmp	r3, #0
 8003128:	d05d      	beq.n	80031e6 <xTaskResumeAll+0x106>
 800312a:	e02e      	b.n	800318a <xTaskResumeAll+0xaa>
 800312c:	4b33      	ldr	r3, [pc, #204]	; (80031fc <xTaskResumeAll+0x11c>)
 800312e:	68db      	ldr	r3, [r3, #12]
 8003130:	68db      	ldr	r3, [r3, #12]
 8003132:	60fb      	str	r3, [r7, #12]
 8003134:	68fb      	ldr	r3, [r7, #12]
 8003136:	3318      	adds	r3, #24
 8003138:	4618      	mov	r0, r3
 800313a:	f7ff fd7b 	bl	8002c34 <uxListRemove>
 800313e:	68fb      	ldr	r3, [r7, #12]
 8003140:	3304      	adds	r3, #4
 8003142:	4618      	mov	r0, r3
 8003144:	f7ff fd76 	bl	8002c34 <uxListRemove>
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800314c:	2201      	movs	r2, #1
 800314e:	409a      	lsls	r2, r3
 8003150:	4b2b      	ldr	r3, [pc, #172]	; (8003200 <xTaskResumeAll+0x120>)
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	4313      	orrs	r3, r2
 8003156:	4a2a      	ldr	r2, [pc, #168]	; (8003200 <xTaskResumeAll+0x120>)
 8003158:	6013      	str	r3, [r2, #0]
 800315a:	68fb      	ldr	r3, [r7, #12]
 800315c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800315e:	4613      	mov	r3, r2
 8003160:	009b      	lsls	r3, r3, #2
 8003162:	4413      	add	r3, r2
 8003164:	009b      	lsls	r3, r3, #2
 8003166:	4a27      	ldr	r2, [pc, #156]	; (8003204 <xTaskResumeAll+0x124>)
 8003168:	441a      	add	r2, r3
 800316a:	68fb      	ldr	r3, [r7, #12]
 800316c:	3304      	adds	r3, #4
 800316e:	4619      	mov	r1, r3
 8003170:	4610      	mov	r0, r2
 8003172:	f7ff fd04 	bl	8002b7e <vListInsertEnd>
 8003176:	68fb      	ldr	r3, [r7, #12]
 8003178:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800317a:	4b23      	ldr	r3, [pc, #140]	; (8003208 <xTaskResumeAll+0x128>)
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003180:	429a      	cmp	r2, r3
 8003182:	d302      	bcc.n	800318a <xTaskResumeAll+0xaa>
 8003184:	4b21      	ldr	r3, [pc, #132]	; (800320c <xTaskResumeAll+0x12c>)
 8003186:	2201      	movs	r2, #1
 8003188:	601a      	str	r2, [r3, #0]
 800318a:	4b1c      	ldr	r3, [pc, #112]	; (80031fc <xTaskResumeAll+0x11c>)
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	2b00      	cmp	r3, #0
 8003190:	d1cc      	bne.n	800312c <xTaskResumeAll+0x4c>
 8003192:	68fb      	ldr	r3, [r7, #12]
 8003194:	2b00      	cmp	r3, #0
 8003196:	d001      	beq.n	800319c <xTaskResumeAll+0xbc>
 8003198:	f000 fa0c 	bl	80035b4 <prvResetNextTaskUnblockTime>
 800319c:	4b1c      	ldr	r3, [pc, #112]	; (8003210 <xTaskResumeAll+0x130>)
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	607b      	str	r3, [r7, #4]
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	2b00      	cmp	r3, #0
 80031a6:	d010      	beq.n	80031ca <xTaskResumeAll+0xea>
 80031a8:	f000 f836 	bl	8003218 <xTaskIncrementTick>
 80031ac:	4603      	mov	r3, r0
 80031ae:	2b00      	cmp	r3, #0
 80031b0:	d002      	beq.n	80031b8 <xTaskResumeAll+0xd8>
 80031b2:	4b16      	ldr	r3, [pc, #88]	; (800320c <xTaskResumeAll+0x12c>)
 80031b4:	2201      	movs	r2, #1
 80031b6:	601a      	str	r2, [r3, #0]
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	3b01      	subs	r3, #1
 80031bc:	607b      	str	r3, [r7, #4]
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	2b00      	cmp	r3, #0
 80031c2:	d1f1      	bne.n	80031a8 <xTaskResumeAll+0xc8>
 80031c4:	4b12      	ldr	r3, [pc, #72]	; (8003210 <xTaskResumeAll+0x130>)
 80031c6:	2200      	movs	r2, #0
 80031c8:	601a      	str	r2, [r3, #0]
 80031ca:	4b10      	ldr	r3, [pc, #64]	; (800320c <xTaskResumeAll+0x12c>)
 80031cc:	681b      	ldr	r3, [r3, #0]
 80031ce:	2b00      	cmp	r3, #0
 80031d0:	d009      	beq.n	80031e6 <xTaskResumeAll+0x106>
 80031d2:	2301      	movs	r3, #1
 80031d4:	60bb      	str	r3, [r7, #8]
 80031d6:	4b0f      	ldr	r3, [pc, #60]	; (8003214 <xTaskResumeAll+0x134>)
 80031d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80031dc:	601a      	str	r2, [r3, #0]
 80031de:	f3bf 8f4f 	dsb	sy
 80031e2:	f3bf 8f6f 	isb	sy
 80031e6:	f000 fb91 	bl	800390c <vPortExitCritical>
 80031ea:	68bb      	ldr	r3, [r7, #8]
 80031ec:	4618      	mov	r0, r3
 80031ee:	3710      	adds	r7, #16
 80031f0:	46bd      	mov	sp, r7
 80031f2:	bd80      	pop	{r7, pc}
 80031f4:	200004f4 	.word	0x200004f4
 80031f8:	200004cc 	.word	0x200004cc
 80031fc:	2000048c 	.word	0x2000048c
 8003200:	200004d4 	.word	0x200004d4
 8003204:	200003d0 	.word	0x200003d0
 8003208:	200003cc 	.word	0x200003cc
 800320c:	200004e0 	.word	0x200004e0
 8003210:	200004dc 	.word	0x200004dc
 8003214:	e000ed04 	.word	0xe000ed04

08003218 <xTaskIncrementTick>:
 8003218:	b580      	push	{r7, lr}
 800321a:	b086      	sub	sp, #24
 800321c:	af00      	add	r7, sp, #0
 800321e:	2300      	movs	r3, #0
 8003220:	617b      	str	r3, [r7, #20]
 8003222:	4b51      	ldr	r3, [pc, #324]	; (8003368 <xTaskIncrementTick+0x150>)
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	2b00      	cmp	r3, #0
 8003228:	f040 808d 	bne.w	8003346 <xTaskIncrementTick+0x12e>
 800322c:	4b4f      	ldr	r3, [pc, #316]	; (800336c <xTaskIncrementTick+0x154>)
 800322e:	681b      	ldr	r3, [r3, #0]
 8003230:	3301      	adds	r3, #1
 8003232:	613b      	str	r3, [r7, #16]
 8003234:	4a4d      	ldr	r2, [pc, #308]	; (800336c <xTaskIncrementTick+0x154>)
 8003236:	693b      	ldr	r3, [r7, #16]
 8003238:	6013      	str	r3, [r2, #0]
 800323a:	693b      	ldr	r3, [r7, #16]
 800323c:	2b00      	cmp	r3, #0
 800323e:	d120      	bne.n	8003282 <xTaskIncrementTick+0x6a>
 8003240:	4b4b      	ldr	r3, [pc, #300]	; (8003370 <xTaskIncrementTick+0x158>)
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	681b      	ldr	r3, [r3, #0]
 8003246:	2b00      	cmp	r3, #0
 8003248:	d00a      	beq.n	8003260 <xTaskIncrementTick+0x48>
 800324a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800324e:	f383 8811 	msr	BASEPRI, r3
 8003252:	f3bf 8f6f 	isb	sy
 8003256:	f3bf 8f4f 	dsb	sy
 800325a:	603b      	str	r3, [r7, #0]
 800325c:	bf00      	nop
 800325e:	e7fe      	b.n	800325e <xTaskIncrementTick+0x46>
 8003260:	4b43      	ldr	r3, [pc, #268]	; (8003370 <xTaskIncrementTick+0x158>)
 8003262:	681b      	ldr	r3, [r3, #0]
 8003264:	60fb      	str	r3, [r7, #12]
 8003266:	4b43      	ldr	r3, [pc, #268]	; (8003374 <xTaskIncrementTick+0x15c>)
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	4a41      	ldr	r2, [pc, #260]	; (8003370 <xTaskIncrementTick+0x158>)
 800326c:	6013      	str	r3, [r2, #0]
 800326e:	4a41      	ldr	r2, [pc, #260]	; (8003374 <xTaskIncrementTick+0x15c>)
 8003270:	68fb      	ldr	r3, [r7, #12]
 8003272:	6013      	str	r3, [r2, #0]
 8003274:	4b40      	ldr	r3, [pc, #256]	; (8003378 <xTaskIncrementTick+0x160>)
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	3301      	adds	r3, #1
 800327a:	4a3f      	ldr	r2, [pc, #252]	; (8003378 <xTaskIncrementTick+0x160>)
 800327c:	6013      	str	r3, [r2, #0]
 800327e:	f000 f999 	bl	80035b4 <prvResetNextTaskUnblockTime>
 8003282:	4b3e      	ldr	r3, [pc, #248]	; (800337c <xTaskIncrementTick+0x164>)
 8003284:	681b      	ldr	r3, [r3, #0]
 8003286:	693a      	ldr	r2, [r7, #16]
 8003288:	429a      	cmp	r2, r3
 800328a:	d34d      	bcc.n	8003328 <xTaskIncrementTick+0x110>
 800328c:	4b38      	ldr	r3, [pc, #224]	; (8003370 <xTaskIncrementTick+0x158>)
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	681b      	ldr	r3, [r3, #0]
 8003292:	2b00      	cmp	r3, #0
 8003294:	d101      	bne.n	800329a <xTaskIncrementTick+0x82>
 8003296:	2301      	movs	r3, #1
 8003298:	e000      	b.n	800329c <xTaskIncrementTick+0x84>
 800329a:	2300      	movs	r3, #0
 800329c:	2b00      	cmp	r3, #0
 800329e:	d004      	beq.n	80032aa <xTaskIncrementTick+0x92>
 80032a0:	4b36      	ldr	r3, [pc, #216]	; (800337c <xTaskIncrementTick+0x164>)
 80032a2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80032a6:	601a      	str	r2, [r3, #0]
 80032a8:	e03e      	b.n	8003328 <xTaskIncrementTick+0x110>
 80032aa:	4b31      	ldr	r3, [pc, #196]	; (8003370 <xTaskIncrementTick+0x158>)
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	68db      	ldr	r3, [r3, #12]
 80032b0:	68db      	ldr	r3, [r3, #12]
 80032b2:	60bb      	str	r3, [r7, #8]
 80032b4:	68bb      	ldr	r3, [r7, #8]
 80032b6:	685b      	ldr	r3, [r3, #4]
 80032b8:	607b      	str	r3, [r7, #4]
 80032ba:	693a      	ldr	r2, [r7, #16]
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	429a      	cmp	r2, r3
 80032c0:	d203      	bcs.n	80032ca <xTaskIncrementTick+0xb2>
 80032c2:	4a2e      	ldr	r2, [pc, #184]	; (800337c <xTaskIncrementTick+0x164>)
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	6013      	str	r3, [r2, #0]
 80032c8:	e02e      	b.n	8003328 <xTaskIncrementTick+0x110>
 80032ca:	68bb      	ldr	r3, [r7, #8]
 80032cc:	3304      	adds	r3, #4
 80032ce:	4618      	mov	r0, r3
 80032d0:	f7ff fcb0 	bl	8002c34 <uxListRemove>
 80032d4:	68bb      	ldr	r3, [r7, #8]
 80032d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80032d8:	2b00      	cmp	r3, #0
 80032da:	d004      	beq.n	80032e6 <xTaskIncrementTick+0xce>
 80032dc:	68bb      	ldr	r3, [r7, #8]
 80032de:	3318      	adds	r3, #24
 80032e0:	4618      	mov	r0, r3
 80032e2:	f7ff fca7 	bl	8002c34 <uxListRemove>
 80032e6:	68bb      	ldr	r3, [r7, #8]
 80032e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80032ea:	2201      	movs	r2, #1
 80032ec:	409a      	lsls	r2, r3
 80032ee:	4b24      	ldr	r3, [pc, #144]	; (8003380 <xTaskIncrementTick+0x168>)
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	4313      	orrs	r3, r2
 80032f4:	4a22      	ldr	r2, [pc, #136]	; (8003380 <xTaskIncrementTick+0x168>)
 80032f6:	6013      	str	r3, [r2, #0]
 80032f8:	68bb      	ldr	r3, [r7, #8]
 80032fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80032fc:	4613      	mov	r3, r2
 80032fe:	009b      	lsls	r3, r3, #2
 8003300:	4413      	add	r3, r2
 8003302:	009b      	lsls	r3, r3, #2
 8003304:	4a1f      	ldr	r2, [pc, #124]	; (8003384 <xTaskIncrementTick+0x16c>)
 8003306:	441a      	add	r2, r3
 8003308:	68bb      	ldr	r3, [r7, #8]
 800330a:	3304      	adds	r3, #4
 800330c:	4619      	mov	r1, r3
 800330e:	4610      	mov	r0, r2
 8003310:	f7ff fc35 	bl	8002b7e <vListInsertEnd>
 8003314:	68bb      	ldr	r3, [r7, #8]
 8003316:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003318:	4b1b      	ldr	r3, [pc, #108]	; (8003388 <xTaskIncrementTick+0x170>)
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800331e:	429a      	cmp	r2, r3
 8003320:	d3b4      	bcc.n	800328c <xTaskIncrementTick+0x74>
 8003322:	2301      	movs	r3, #1
 8003324:	617b      	str	r3, [r7, #20]
 8003326:	e7b1      	b.n	800328c <xTaskIncrementTick+0x74>
 8003328:	4b17      	ldr	r3, [pc, #92]	; (8003388 <xTaskIncrementTick+0x170>)
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800332e:	4915      	ldr	r1, [pc, #84]	; (8003384 <xTaskIncrementTick+0x16c>)
 8003330:	4613      	mov	r3, r2
 8003332:	009b      	lsls	r3, r3, #2
 8003334:	4413      	add	r3, r2
 8003336:	009b      	lsls	r3, r3, #2
 8003338:	440b      	add	r3, r1
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	2b01      	cmp	r3, #1
 800333e:	d907      	bls.n	8003350 <xTaskIncrementTick+0x138>
 8003340:	2301      	movs	r3, #1
 8003342:	617b      	str	r3, [r7, #20]
 8003344:	e004      	b.n	8003350 <xTaskIncrementTick+0x138>
 8003346:	4b11      	ldr	r3, [pc, #68]	; (800338c <xTaskIncrementTick+0x174>)
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	3301      	adds	r3, #1
 800334c:	4a0f      	ldr	r2, [pc, #60]	; (800338c <xTaskIncrementTick+0x174>)
 800334e:	6013      	str	r3, [r2, #0]
 8003350:	4b0f      	ldr	r3, [pc, #60]	; (8003390 <xTaskIncrementTick+0x178>)
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	2b00      	cmp	r3, #0
 8003356:	d001      	beq.n	800335c <xTaskIncrementTick+0x144>
 8003358:	2301      	movs	r3, #1
 800335a:	617b      	str	r3, [r7, #20]
 800335c:	697b      	ldr	r3, [r7, #20]
 800335e:	4618      	mov	r0, r3
 8003360:	3718      	adds	r7, #24
 8003362:	46bd      	mov	sp, r7
 8003364:	bd80      	pop	{r7, pc}
 8003366:	bf00      	nop
 8003368:	200004f4 	.word	0x200004f4
 800336c:	200004d0 	.word	0x200004d0
 8003370:	20000484 	.word	0x20000484
 8003374:	20000488 	.word	0x20000488
 8003378:	200004e4 	.word	0x200004e4
 800337c:	200004ec 	.word	0x200004ec
 8003380:	200004d4 	.word	0x200004d4
 8003384:	200003d0 	.word	0x200003d0
 8003388:	200003cc 	.word	0x200003cc
 800338c:	200004dc 	.word	0x200004dc
 8003390:	200004e0 	.word	0x200004e0

08003394 <vTaskSwitchContext>:
 8003394:	b480      	push	{r7}
 8003396:	b087      	sub	sp, #28
 8003398:	af00      	add	r7, sp, #0
 800339a:	4b26      	ldr	r3, [pc, #152]	; (8003434 <vTaskSwitchContext+0xa0>)
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	2b00      	cmp	r3, #0
 80033a0:	d003      	beq.n	80033aa <vTaskSwitchContext+0x16>
 80033a2:	4b25      	ldr	r3, [pc, #148]	; (8003438 <vTaskSwitchContext+0xa4>)
 80033a4:	2201      	movs	r2, #1
 80033a6:	601a      	str	r2, [r3, #0]
 80033a8:	e03f      	b.n	800342a <vTaskSwitchContext+0x96>
 80033aa:	4b23      	ldr	r3, [pc, #140]	; (8003438 <vTaskSwitchContext+0xa4>)
 80033ac:	2200      	movs	r2, #0
 80033ae:	601a      	str	r2, [r3, #0]
 80033b0:	4b22      	ldr	r3, [pc, #136]	; (800343c <vTaskSwitchContext+0xa8>)
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	60fb      	str	r3, [r7, #12]
 80033b6:	68fb      	ldr	r3, [r7, #12]
 80033b8:	fab3 f383 	clz	r3, r3
 80033bc:	72fb      	strb	r3, [r7, #11]
 80033be:	7afb      	ldrb	r3, [r7, #11]
 80033c0:	f1c3 031f 	rsb	r3, r3, #31
 80033c4:	617b      	str	r3, [r7, #20]
 80033c6:	491e      	ldr	r1, [pc, #120]	; (8003440 <vTaskSwitchContext+0xac>)
 80033c8:	697a      	ldr	r2, [r7, #20]
 80033ca:	4613      	mov	r3, r2
 80033cc:	009b      	lsls	r3, r3, #2
 80033ce:	4413      	add	r3, r2
 80033d0:	009b      	lsls	r3, r3, #2
 80033d2:	440b      	add	r3, r1
 80033d4:	681b      	ldr	r3, [r3, #0]
 80033d6:	2b00      	cmp	r3, #0
 80033d8:	d10a      	bne.n	80033f0 <vTaskSwitchContext+0x5c>
 80033da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80033de:	f383 8811 	msr	BASEPRI, r3
 80033e2:	f3bf 8f6f 	isb	sy
 80033e6:	f3bf 8f4f 	dsb	sy
 80033ea:	607b      	str	r3, [r7, #4]
 80033ec:	bf00      	nop
 80033ee:	e7fe      	b.n	80033ee <vTaskSwitchContext+0x5a>
 80033f0:	697a      	ldr	r2, [r7, #20]
 80033f2:	4613      	mov	r3, r2
 80033f4:	009b      	lsls	r3, r3, #2
 80033f6:	4413      	add	r3, r2
 80033f8:	009b      	lsls	r3, r3, #2
 80033fa:	4a11      	ldr	r2, [pc, #68]	; (8003440 <vTaskSwitchContext+0xac>)
 80033fc:	4413      	add	r3, r2
 80033fe:	613b      	str	r3, [r7, #16]
 8003400:	693b      	ldr	r3, [r7, #16]
 8003402:	685b      	ldr	r3, [r3, #4]
 8003404:	685a      	ldr	r2, [r3, #4]
 8003406:	693b      	ldr	r3, [r7, #16]
 8003408:	605a      	str	r2, [r3, #4]
 800340a:	693b      	ldr	r3, [r7, #16]
 800340c:	685a      	ldr	r2, [r3, #4]
 800340e:	693b      	ldr	r3, [r7, #16]
 8003410:	3308      	adds	r3, #8
 8003412:	429a      	cmp	r2, r3
 8003414:	d104      	bne.n	8003420 <vTaskSwitchContext+0x8c>
 8003416:	693b      	ldr	r3, [r7, #16]
 8003418:	685b      	ldr	r3, [r3, #4]
 800341a:	685a      	ldr	r2, [r3, #4]
 800341c:	693b      	ldr	r3, [r7, #16]
 800341e:	605a      	str	r2, [r3, #4]
 8003420:	693b      	ldr	r3, [r7, #16]
 8003422:	685b      	ldr	r3, [r3, #4]
 8003424:	68db      	ldr	r3, [r3, #12]
 8003426:	4a07      	ldr	r2, [pc, #28]	; (8003444 <vTaskSwitchContext+0xb0>)
 8003428:	6013      	str	r3, [r2, #0]
 800342a:	bf00      	nop
 800342c:	371c      	adds	r7, #28
 800342e:	46bd      	mov	sp, r7
 8003430:	bc80      	pop	{r7}
 8003432:	4770      	bx	lr
 8003434:	200004f4 	.word	0x200004f4
 8003438:	200004e0 	.word	0x200004e0
 800343c:	200004d4 	.word	0x200004d4
 8003440:	200003d0 	.word	0x200003d0
 8003444:	200003cc 	.word	0x200003cc

08003448 <prvIdleTask>:
 8003448:	b580      	push	{r7, lr}
 800344a:	b082      	sub	sp, #8
 800344c:	af00      	add	r7, sp, #0
 800344e:	6078      	str	r0, [r7, #4]
 8003450:	f000 f852 	bl	80034f8 <prvCheckTasksWaitingTermination>
 8003454:	4b06      	ldr	r3, [pc, #24]	; (8003470 <prvIdleTask+0x28>)
 8003456:	681b      	ldr	r3, [r3, #0]
 8003458:	2b01      	cmp	r3, #1
 800345a:	d9f9      	bls.n	8003450 <prvIdleTask+0x8>
 800345c:	4b05      	ldr	r3, [pc, #20]	; (8003474 <prvIdleTask+0x2c>)
 800345e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003462:	601a      	str	r2, [r3, #0]
 8003464:	f3bf 8f4f 	dsb	sy
 8003468:	f3bf 8f6f 	isb	sy
 800346c:	e7f0      	b.n	8003450 <prvIdleTask+0x8>
 800346e:	bf00      	nop
 8003470:	200003d0 	.word	0x200003d0
 8003474:	e000ed04 	.word	0xe000ed04

08003478 <prvInitialiseTaskLists>:
 8003478:	b580      	push	{r7, lr}
 800347a:	b082      	sub	sp, #8
 800347c:	af00      	add	r7, sp, #0
 800347e:	2300      	movs	r3, #0
 8003480:	607b      	str	r3, [r7, #4]
 8003482:	e00c      	b.n	800349e <prvInitialiseTaskLists+0x26>
 8003484:	687a      	ldr	r2, [r7, #4]
 8003486:	4613      	mov	r3, r2
 8003488:	009b      	lsls	r3, r3, #2
 800348a:	4413      	add	r3, r2
 800348c:	009b      	lsls	r3, r3, #2
 800348e:	4a12      	ldr	r2, [pc, #72]	; (80034d8 <prvInitialiseTaskLists+0x60>)
 8003490:	4413      	add	r3, r2
 8003492:	4618      	mov	r0, r3
 8003494:	f7ff fb48 	bl	8002b28 <vListInitialise>
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	3301      	adds	r3, #1
 800349c:	607b      	str	r3, [r7, #4]
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	2b06      	cmp	r3, #6
 80034a2:	d9ef      	bls.n	8003484 <prvInitialiseTaskLists+0xc>
 80034a4:	480d      	ldr	r0, [pc, #52]	; (80034dc <prvInitialiseTaskLists+0x64>)
 80034a6:	f7ff fb3f 	bl	8002b28 <vListInitialise>
 80034aa:	480d      	ldr	r0, [pc, #52]	; (80034e0 <prvInitialiseTaskLists+0x68>)
 80034ac:	f7ff fb3c 	bl	8002b28 <vListInitialise>
 80034b0:	480c      	ldr	r0, [pc, #48]	; (80034e4 <prvInitialiseTaskLists+0x6c>)
 80034b2:	f7ff fb39 	bl	8002b28 <vListInitialise>
 80034b6:	480c      	ldr	r0, [pc, #48]	; (80034e8 <prvInitialiseTaskLists+0x70>)
 80034b8:	f7ff fb36 	bl	8002b28 <vListInitialise>
 80034bc:	480b      	ldr	r0, [pc, #44]	; (80034ec <prvInitialiseTaskLists+0x74>)
 80034be:	f7ff fb33 	bl	8002b28 <vListInitialise>
 80034c2:	4b0b      	ldr	r3, [pc, #44]	; (80034f0 <prvInitialiseTaskLists+0x78>)
 80034c4:	4a05      	ldr	r2, [pc, #20]	; (80034dc <prvInitialiseTaskLists+0x64>)
 80034c6:	601a      	str	r2, [r3, #0]
 80034c8:	4b0a      	ldr	r3, [pc, #40]	; (80034f4 <prvInitialiseTaskLists+0x7c>)
 80034ca:	4a05      	ldr	r2, [pc, #20]	; (80034e0 <prvInitialiseTaskLists+0x68>)
 80034cc:	601a      	str	r2, [r3, #0]
 80034ce:	bf00      	nop
 80034d0:	3708      	adds	r7, #8
 80034d2:	46bd      	mov	sp, r7
 80034d4:	bd80      	pop	{r7, pc}
 80034d6:	bf00      	nop
 80034d8:	200003d0 	.word	0x200003d0
 80034dc:	2000045c 	.word	0x2000045c
 80034e0:	20000470 	.word	0x20000470
 80034e4:	2000048c 	.word	0x2000048c
 80034e8:	200004a0 	.word	0x200004a0
 80034ec:	200004b8 	.word	0x200004b8
 80034f0:	20000484 	.word	0x20000484
 80034f4:	20000488 	.word	0x20000488

080034f8 <prvCheckTasksWaitingTermination>:
 80034f8:	b580      	push	{r7, lr}
 80034fa:	b082      	sub	sp, #8
 80034fc:	af00      	add	r7, sp, #0
 80034fe:	e019      	b.n	8003534 <prvCheckTasksWaitingTermination+0x3c>
 8003500:	f000 f9d4 	bl	80038ac <vPortEnterCritical>
 8003504:	4b10      	ldr	r3, [pc, #64]	; (8003548 <prvCheckTasksWaitingTermination+0x50>)
 8003506:	68db      	ldr	r3, [r3, #12]
 8003508:	68db      	ldr	r3, [r3, #12]
 800350a:	607b      	str	r3, [r7, #4]
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	3304      	adds	r3, #4
 8003510:	4618      	mov	r0, r3
 8003512:	f7ff fb8f 	bl	8002c34 <uxListRemove>
 8003516:	4b0d      	ldr	r3, [pc, #52]	; (800354c <prvCheckTasksWaitingTermination+0x54>)
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	3b01      	subs	r3, #1
 800351c:	4a0b      	ldr	r2, [pc, #44]	; (800354c <prvCheckTasksWaitingTermination+0x54>)
 800351e:	6013      	str	r3, [r2, #0]
 8003520:	4b0b      	ldr	r3, [pc, #44]	; (8003550 <prvCheckTasksWaitingTermination+0x58>)
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	3b01      	subs	r3, #1
 8003526:	4a0a      	ldr	r2, [pc, #40]	; (8003550 <prvCheckTasksWaitingTermination+0x58>)
 8003528:	6013      	str	r3, [r2, #0]
 800352a:	f000 f9ef 	bl	800390c <vPortExitCritical>
 800352e:	6878      	ldr	r0, [r7, #4]
 8003530:	f000 f810 	bl	8003554 <prvDeleteTCB>
 8003534:	4b06      	ldr	r3, [pc, #24]	; (8003550 <prvCheckTasksWaitingTermination+0x58>)
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	2b00      	cmp	r3, #0
 800353a:	d1e1      	bne.n	8003500 <prvCheckTasksWaitingTermination+0x8>
 800353c:	bf00      	nop
 800353e:	bf00      	nop
 8003540:	3708      	adds	r7, #8
 8003542:	46bd      	mov	sp, r7
 8003544:	bd80      	pop	{r7, pc}
 8003546:	bf00      	nop
 8003548:	200004a0 	.word	0x200004a0
 800354c:	200004cc 	.word	0x200004cc
 8003550:	200004b4 	.word	0x200004b4

08003554 <prvDeleteTCB>:
 8003554:	b580      	push	{r7, lr}
 8003556:	b084      	sub	sp, #16
 8003558:	af00      	add	r7, sp, #0
 800355a:	6078      	str	r0, [r7, #4]
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003562:	2b00      	cmp	r3, #0
 8003564:	d108      	bne.n	8003578 <prvDeleteTCB+0x24>
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800356a:	4618      	mov	r0, r3
 800356c:	f000 fb24 	bl	8003bb8 <vPortFree>
 8003570:	6878      	ldr	r0, [r7, #4]
 8003572:	f000 fb21 	bl	8003bb8 <vPortFree>
 8003576:	e018      	b.n	80035aa <prvDeleteTCB+0x56>
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800357e:	2b01      	cmp	r3, #1
 8003580:	d103      	bne.n	800358a <prvDeleteTCB+0x36>
 8003582:	6878      	ldr	r0, [r7, #4]
 8003584:	f000 fb18 	bl	8003bb8 <vPortFree>
 8003588:	e00f      	b.n	80035aa <prvDeleteTCB+0x56>
 800358a:	687b      	ldr	r3, [r7, #4]
 800358c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003590:	2b02      	cmp	r3, #2
 8003592:	d00a      	beq.n	80035aa <prvDeleteTCB+0x56>
 8003594:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003598:	f383 8811 	msr	BASEPRI, r3
 800359c:	f3bf 8f6f 	isb	sy
 80035a0:	f3bf 8f4f 	dsb	sy
 80035a4:	60fb      	str	r3, [r7, #12]
 80035a6:	bf00      	nop
 80035a8:	e7fe      	b.n	80035a8 <prvDeleteTCB+0x54>
 80035aa:	bf00      	nop
 80035ac:	3710      	adds	r7, #16
 80035ae:	46bd      	mov	sp, r7
 80035b0:	bd80      	pop	{r7, pc}
	...

080035b4 <prvResetNextTaskUnblockTime>:
 80035b4:	b480      	push	{r7}
 80035b6:	b083      	sub	sp, #12
 80035b8:	af00      	add	r7, sp, #0
 80035ba:	4b0e      	ldr	r3, [pc, #56]	; (80035f4 <prvResetNextTaskUnblockTime+0x40>)
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	681b      	ldr	r3, [r3, #0]
 80035c0:	2b00      	cmp	r3, #0
 80035c2:	d101      	bne.n	80035c8 <prvResetNextTaskUnblockTime+0x14>
 80035c4:	2301      	movs	r3, #1
 80035c6:	e000      	b.n	80035ca <prvResetNextTaskUnblockTime+0x16>
 80035c8:	2300      	movs	r3, #0
 80035ca:	2b00      	cmp	r3, #0
 80035cc:	d004      	beq.n	80035d8 <prvResetNextTaskUnblockTime+0x24>
 80035ce:	4b0a      	ldr	r3, [pc, #40]	; (80035f8 <prvResetNextTaskUnblockTime+0x44>)
 80035d0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80035d4:	601a      	str	r2, [r3, #0]
 80035d6:	e008      	b.n	80035ea <prvResetNextTaskUnblockTime+0x36>
 80035d8:	4b06      	ldr	r3, [pc, #24]	; (80035f4 <prvResetNextTaskUnblockTime+0x40>)
 80035da:	681b      	ldr	r3, [r3, #0]
 80035dc:	68db      	ldr	r3, [r3, #12]
 80035de:	68db      	ldr	r3, [r3, #12]
 80035e0:	607b      	str	r3, [r7, #4]
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	685b      	ldr	r3, [r3, #4]
 80035e6:	4a04      	ldr	r2, [pc, #16]	; (80035f8 <prvResetNextTaskUnblockTime+0x44>)
 80035e8:	6013      	str	r3, [r2, #0]
 80035ea:	bf00      	nop
 80035ec:	370c      	adds	r7, #12
 80035ee:	46bd      	mov	sp, r7
 80035f0:	bc80      	pop	{r7}
 80035f2:	4770      	bx	lr
 80035f4:	20000484 	.word	0x20000484
 80035f8:	200004ec 	.word	0x200004ec

080035fc <prvAddCurrentTaskToDelayedList>:
 80035fc:	b580      	push	{r7, lr}
 80035fe:	b084      	sub	sp, #16
 8003600:	af00      	add	r7, sp, #0
 8003602:	6078      	str	r0, [r7, #4]
 8003604:	6039      	str	r1, [r7, #0]
 8003606:	4b29      	ldr	r3, [pc, #164]	; (80036ac <prvAddCurrentTaskToDelayedList+0xb0>)
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	60fb      	str	r3, [r7, #12]
 800360c:	4b28      	ldr	r3, [pc, #160]	; (80036b0 <prvAddCurrentTaskToDelayedList+0xb4>)
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	3304      	adds	r3, #4
 8003612:	4618      	mov	r0, r3
 8003614:	f7ff fb0e 	bl	8002c34 <uxListRemove>
 8003618:	4603      	mov	r3, r0
 800361a:	2b00      	cmp	r3, #0
 800361c:	d10b      	bne.n	8003636 <prvAddCurrentTaskToDelayedList+0x3a>
 800361e:	4b24      	ldr	r3, [pc, #144]	; (80036b0 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003624:	2201      	movs	r2, #1
 8003626:	fa02 f303 	lsl.w	r3, r2, r3
 800362a:	43da      	mvns	r2, r3
 800362c:	4b21      	ldr	r3, [pc, #132]	; (80036b4 <prvAddCurrentTaskToDelayedList+0xb8>)
 800362e:	681b      	ldr	r3, [r3, #0]
 8003630:	4013      	ands	r3, r2
 8003632:	4a20      	ldr	r2, [pc, #128]	; (80036b4 <prvAddCurrentTaskToDelayedList+0xb8>)
 8003634:	6013      	str	r3, [r2, #0]
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800363c:	d10a      	bne.n	8003654 <prvAddCurrentTaskToDelayedList+0x58>
 800363e:	683b      	ldr	r3, [r7, #0]
 8003640:	2b00      	cmp	r3, #0
 8003642:	d007      	beq.n	8003654 <prvAddCurrentTaskToDelayedList+0x58>
 8003644:	4b1a      	ldr	r3, [pc, #104]	; (80036b0 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	3304      	adds	r3, #4
 800364a:	4619      	mov	r1, r3
 800364c:	481a      	ldr	r0, [pc, #104]	; (80036b8 <prvAddCurrentTaskToDelayedList+0xbc>)
 800364e:	f7ff fa96 	bl	8002b7e <vListInsertEnd>
 8003652:	e026      	b.n	80036a2 <prvAddCurrentTaskToDelayedList+0xa6>
 8003654:	68fa      	ldr	r2, [r7, #12]
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	4413      	add	r3, r2
 800365a:	60bb      	str	r3, [r7, #8]
 800365c:	4b14      	ldr	r3, [pc, #80]	; (80036b0 <prvAddCurrentTaskToDelayedList+0xb4>)
 800365e:	681b      	ldr	r3, [r3, #0]
 8003660:	68ba      	ldr	r2, [r7, #8]
 8003662:	605a      	str	r2, [r3, #4]
 8003664:	68ba      	ldr	r2, [r7, #8]
 8003666:	68fb      	ldr	r3, [r7, #12]
 8003668:	429a      	cmp	r2, r3
 800366a:	d209      	bcs.n	8003680 <prvAddCurrentTaskToDelayedList+0x84>
 800366c:	4b13      	ldr	r3, [pc, #76]	; (80036bc <prvAddCurrentTaskToDelayedList+0xc0>)
 800366e:	681a      	ldr	r2, [r3, #0]
 8003670:	4b0f      	ldr	r3, [pc, #60]	; (80036b0 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	3304      	adds	r3, #4
 8003676:	4619      	mov	r1, r3
 8003678:	4610      	mov	r0, r2
 800367a:	f7ff faa3 	bl	8002bc4 <vListInsert>
 800367e:	e010      	b.n	80036a2 <prvAddCurrentTaskToDelayedList+0xa6>
 8003680:	4b0f      	ldr	r3, [pc, #60]	; (80036c0 <prvAddCurrentTaskToDelayedList+0xc4>)
 8003682:	681a      	ldr	r2, [r3, #0]
 8003684:	4b0a      	ldr	r3, [pc, #40]	; (80036b0 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	3304      	adds	r3, #4
 800368a:	4619      	mov	r1, r3
 800368c:	4610      	mov	r0, r2
 800368e:	f7ff fa99 	bl	8002bc4 <vListInsert>
 8003692:	4b0c      	ldr	r3, [pc, #48]	; (80036c4 <prvAddCurrentTaskToDelayedList+0xc8>)
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	68ba      	ldr	r2, [r7, #8]
 8003698:	429a      	cmp	r2, r3
 800369a:	d202      	bcs.n	80036a2 <prvAddCurrentTaskToDelayedList+0xa6>
 800369c:	4a09      	ldr	r2, [pc, #36]	; (80036c4 <prvAddCurrentTaskToDelayedList+0xc8>)
 800369e:	68bb      	ldr	r3, [r7, #8]
 80036a0:	6013      	str	r3, [r2, #0]
 80036a2:	bf00      	nop
 80036a4:	3710      	adds	r7, #16
 80036a6:	46bd      	mov	sp, r7
 80036a8:	bd80      	pop	{r7, pc}
 80036aa:	bf00      	nop
 80036ac:	200004d0 	.word	0x200004d0
 80036b0:	200003cc 	.word	0x200003cc
 80036b4:	200004d4 	.word	0x200004d4
 80036b8:	200004b8 	.word	0x200004b8
 80036bc:	20000488 	.word	0x20000488
 80036c0:	20000484 	.word	0x20000484
 80036c4:	200004ec 	.word	0x200004ec

080036c8 <pxPortInitialiseStack>:
 80036c8:	b480      	push	{r7}
 80036ca:	b085      	sub	sp, #20
 80036cc:	af00      	add	r7, sp, #0
 80036ce:	60f8      	str	r0, [r7, #12]
 80036d0:	60b9      	str	r1, [r7, #8]
 80036d2:	607a      	str	r2, [r7, #4]
 80036d4:	68fb      	ldr	r3, [r7, #12]
 80036d6:	3b04      	subs	r3, #4
 80036d8:	60fb      	str	r3, [r7, #12]
 80036da:	68fb      	ldr	r3, [r7, #12]
 80036dc:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80036e0:	601a      	str	r2, [r3, #0]
 80036e2:	68fb      	ldr	r3, [r7, #12]
 80036e4:	3b04      	subs	r3, #4
 80036e6:	60fb      	str	r3, [r7, #12]
 80036e8:	68bb      	ldr	r3, [r7, #8]
 80036ea:	f023 0201 	bic.w	r2, r3, #1
 80036ee:	68fb      	ldr	r3, [r7, #12]
 80036f0:	601a      	str	r2, [r3, #0]
 80036f2:	68fb      	ldr	r3, [r7, #12]
 80036f4:	3b04      	subs	r3, #4
 80036f6:	60fb      	str	r3, [r7, #12]
 80036f8:	4a08      	ldr	r2, [pc, #32]	; (800371c <pxPortInitialiseStack+0x54>)
 80036fa:	68fb      	ldr	r3, [r7, #12]
 80036fc:	601a      	str	r2, [r3, #0]
 80036fe:	68fb      	ldr	r3, [r7, #12]
 8003700:	3b14      	subs	r3, #20
 8003702:	60fb      	str	r3, [r7, #12]
 8003704:	687a      	ldr	r2, [r7, #4]
 8003706:	68fb      	ldr	r3, [r7, #12]
 8003708:	601a      	str	r2, [r3, #0]
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	3b20      	subs	r3, #32
 800370e:	60fb      	str	r3, [r7, #12]
 8003710:	68fb      	ldr	r3, [r7, #12]
 8003712:	4618      	mov	r0, r3
 8003714:	3714      	adds	r7, #20
 8003716:	46bd      	mov	sp, r7
 8003718:	bc80      	pop	{r7}
 800371a:	4770      	bx	lr
 800371c:	08003721 	.word	0x08003721

08003720 <prvTaskExitError>:
 8003720:	b480      	push	{r7}
 8003722:	b085      	sub	sp, #20
 8003724:	af00      	add	r7, sp, #0
 8003726:	2300      	movs	r3, #0
 8003728:	607b      	str	r3, [r7, #4]
 800372a:	4b12      	ldr	r3, [pc, #72]	; (8003774 <prvTaskExitError+0x54>)
 800372c:	681b      	ldr	r3, [r3, #0]
 800372e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003732:	d00a      	beq.n	800374a <prvTaskExitError+0x2a>
 8003734:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003738:	f383 8811 	msr	BASEPRI, r3
 800373c:	f3bf 8f6f 	isb	sy
 8003740:	f3bf 8f4f 	dsb	sy
 8003744:	60fb      	str	r3, [r7, #12]
 8003746:	bf00      	nop
 8003748:	e7fe      	b.n	8003748 <prvTaskExitError+0x28>
 800374a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800374e:	f383 8811 	msr	BASEPRI, r3
 8003752:	f3bf 8f6f 	isb	sy
 8003756:	f3bf 8f4f 	dsb	sy
 800375a:	60bb      	str	r3, [r7, #8]
 800375c:	bf00      	nop
 800375e:	bf00      	nop
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	2b00      	cmp	r3, #0
 8003764:	d0fc      	beq.n	8003760 <prvTaskExitError+0x40>
 8003766:	bf00      	nop
 8003768:	bf00      	nop
 800376a:	3714      	adds	r7, #20
 800376c:	46bd      	mov	sp, r7
 800376e:	bc80      	pop	{r7}
 8003770:	4770      	bx	lr
 8003772:	bf00      	nop
 8003774:	200000ec 	.word	0x200000ec
	...

08003780 <SVC_Handler>:
 8003780:	4b07      	ldr	r3, [pc, #28]	; (80037a0 <pxCurrentTCBConst2>)
 8003782:	6819      	ldr	r1, [r3, #0]
 8003784:	6808      	ldr	r0, [r1, #0]
 8003786:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 800378a:	f380 8809 	msr	PSP, r0
 800378e:	f3bf 8f6f 	isb	sy
 8003792:	f04f 0000 	mov.w	r0, #0
 8003796:	f380 8811 	msr	BASEPRI, r0
 800379a:	f04e 0e0d 	orr.w	lr, lr, #13
 800379e:	4770      	bx	lr

080037a0 <pxCurrentTCBConst2>:
 80037a0:	200003cc 	.word	0x200003cc
 80037a4:	bf00      	nop
 80037a6:	bf00      	nop

080037a8 <prvPortStartFirstTask>:
 80037a8:	4806      	ldr	r0, [pc, #24]	; (80037c4 <prvPortStartFirstTask+0x1c>)
 80037aa:	6800      	ldr	r0, [r0, #0]
 80037ac:	6800      	ldr	r0, [r0, #0]
 80037ae:	f380 8808 	msr	MSP, r0
 80037b2:	b662      	cpsie	i
 80037b4:	b661      	cpsie	f
 80037b6:	f3bf 8f4f 	dsb	sy
 80037ba:	f3bf 8f6f 	isb	sy
 80037be:	df00      	svc	0
 80037c0:	bf00      	nop
 80037c2:	bf00      	nop
 80037c4:	e000ed08 	.word	0xe000ed08

080037c8 <xPortStartScheduler>:
 80037c8:	b580      	push	{r7, lr}
 80037ca:	b084      	sub	sp, #16
 80037cc:	af00      	add	r7, sp, #0
 80037ce:	4b32      	ldr	r3, [pc, #200]	; (8003898 <xPortStartScheduler+0xd0>)
 80037d0:	60fb      	str	r3, [r7, #12]
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	781b      	ldrb	r3, [r3, #0]
 80037d6:	b2db      	uxtb	r3, r3
 80037d8:	607b      	str	r3, [r7, #4]
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	22ff      	movs	r2, #255	; 0xff
 80037de:	701a      	strb	r2, [r3, #0]
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	781b      	ldrb	r3, [r3, #0]
 80037e4:	b2db      	uxtb	r3, r3
 80037e6:	70fb      	strb	r3, [r7, #3]
 80037e8:	78fb      	ldrb	r3, [r7, #3]
 80037ea:	b2db      	uxtb	r3, r3
 80037ec:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80037f0:	b2da      	uxtb	r2, r3
 80037f2:	4b2a      	ldr	r3, [pc, #168]	; (800389c <xPortStartScheduler+0xd4>)
 80037f4:	701a      	strb	r2, [r3, #0]
 80037f6:	4b2a      	ldr	r3, [pc, #168]	; (80038a0 <xPortStartScheduler+0xd8>)
 80037f8:	2207      	movs	r2, #7
 80037fa:	601a      	str	r2, [r3, #0]
 80037fc:	e009      	b.n	8003812 <xPortStartScheduler+0x4a>
 80037fe:	4b28      	ldr	r3, [pc, #160]	; (80038a0 <xPortStartScheduler+0xd8>)
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	3b01      	subs	r3, #1
 8003804:	4a26      	ldr	r2, [pc, #152]	; (80038a0 <xPortStartScheduler+0xd8>)
 8003806:	6013      	str	r3, [r2, #0]
 8003808:	78fb      	ldrb	r3, [r7, #3]
 800380a:	b2db      	uxtb	r3, r3
 800380c:	005b      	lsls	r3, r3, #1
 800380e:	b2db      	uxtb	r3, r3
 8003810:	70fb      	strb	r3, [r7, #3]
 8003812:	78fb      	ldrb	r3, [r7, #3]
 8003814:	b2db      	uxtb	r3, r3
 8003816:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800381a:	2b80      	cmp	r3, #128	; 0x80
 800381c:	d0ef      	beq.n	80037fe <xPortStartScheduler+0x36>
 800381e:	4b20      	ldr	r3, [pc, #128]	; (80038a0 <xPortStartScheduler+0xd8>)
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	f1c3 0307 	rsb	r3, r3, #7
 8003826:	2b04      	cmp	r3, #4
 8003828:	d00a      	beq.n	8003840 <xPortStartScheduler+0x78>
 800382a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800382e:	f383 8811 	msr	BASEPRI, r3
 8003832:	f3bf 8f6f 	isb	sy
 8003836:	f3bf 8f4f 	dsb	sy
 800383a:	60bb      	str	r3, [r7, #8]
 800383c:	bf00      	nop
 800383e:	e7fe      	b.n	800383e <xPortStartScheduler+0x76>
 8003840:	4b17      	ldr	r3, [pc, #92]	; (80038a0 <xPortStartScheduler+0xd8>)
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	021b      	lsls	r3, r3, #8
 8003846:	4a16      	ldr	r2, [pc, #88]	; (80038a0 <xPortStartScheduler+0xd8>)
 8003848:	6013      	str	r3, [r2, #0]
 800384a:	4b15      	ldr	r3, [pc, #84]	; (80038a0 <xPortStartScheduler+0xd8>)
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003852:	4a13      	ldr	r2, [pc, #76]	; (80038a0 <xPortStartScheduler+0xd8>)
 8003854:	6013      	str	r3, [r2, #0]
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	b2da      	uxtb	r2, r3
 800385a:	68fb      	ldr	r3, [r7, #12]
 800385c:	701a      	strb	r2, [r3, #0]
 800385e:	4b11      	ldr	r3, [pc, #68]	; (80038a4 <xPortStartScheduler+0xdc>)
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	4a10      	ldr	r2, [pc, #64]	; (80038a4 <xPortStartScheduler+0xdc>)
 8003864:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003868:	6013      	str	r3, [r2, #0]
 800386a:	4b0e      	ldr	r3, [pc, #56]	; (80038a4 <xPortStartScheduler+0xdc>)
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	4a0d      	ldr	r2, [pc, #52]	; (80038a4 <xPortStartScheduler+0xdc>)
 8003870:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8003874:	6013      	str	r3, [r2, #0]
 8003876:	f000 f8b9 	bl	80039ec <vPortSetupTimerInterrupt>
 800387a:	4b0b      	ldr	r3, [pc, #44]	; (80038a8 <xPortStartScheduler+0xe0>)
 800387c:	2200      	movs	r2, #0
 800387e:	601a      	str	r2, [r3, #0]
 8003880:	f7ff ff92 	bl	80037a8 <prvPortStartFirstTask>
 8003884:	f7ff fd86 	bl	8003394 <vTaskSwitchContext>
 8003888:	f7ff ff4a 	bl	8003720 <prvTaskExitError>
 800388c:	2300      	movs	r3, #0
 800388e:	4618      	mov	r0, r3
 8003890:	3710      	adds	r7, #16
 8003892:	46bd      	mov	sp, r7
 8003894:	bd80      	pop	{r7, pc}
 8003896:	bf00      	nop
 8003898:	e000e400 	.word	0xe000e400
 800389c:	200004f8 	.word	0x200004f8
 80038a0:	200004fc 	.word	0x200004fc
 80038a4:	e000ed20 	.word	0xe000ed20
 80038a8:	200000ec 	.word	0x200000ec

080038ac <vPortEnterCritical>:
 80038ac:	b480      	push	{r7}
 80038ae:	b083      	sub	sp, #12
 80038b0:	af00      	add	r7, sp, #0
 80038b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80038b6:	f383 8811 	msr	BASEPRI, r3
 80038ba:	f3bf 8f6f 	isb	sy
 80038be:	f3bf 8f4f 	dsb	sy
 80038c2:	607b      	str	r3, [r7, #4]
 80038c4:	bf00      	nop
 80038c6:	4b0f      	ldr	r3, [pc, #60]	; (8003904 <vPortEnterCritical+0x58>)
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	3301      	adds	r3, #1
 80038cc:	4a0d      	ldr	r2, [pc, #52]	; (8003904 <vPortEnterCritical+0x58>)
 80038ce:	6013      	str	r3, [r2, #0]
 80038d0:	4b0c      	ldr	r3, [pc, #48]	; (8003904 <vPortEnterCritical+0x58>)
 80038d2:	681b      	ldr	r3, [r3, #0]
 80038d4:	2b01      	cmp	r3, #1
 80038d6:	d10f      	bne.n	80038f8 <vPortEnterCritical+0x4c>
 80038d8:	4b0b      	ldr	r3, [pc, #44]	; (8003908 <vPortEnterCritical+0x5c>)
 80038da:	681b      	ldr	r3, [r3, #0]
 80038dc:	b2db      	uxtb	r3, r3
 80038de:	2b00      	cmp	r3, #0
 80038e0:	d00a      	beq.n	80038f8 <vPortEnterCritical+0x4c>
 80038e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80038e6:	f383 8811 	msr	BASEPRI, r3
 80038ea:	f3bf 8f6f 	isb	sy
 80038ee:	f3bf 8f4f 	dsb	sy
 80038f2:	603b      	str	r3, [r7, #0]
 80038f4:	bf00      	nop
 80038f6:	e7fe      	b.n	80038f6 <vPortEnterCritical+0x4a>
 80038f8:	bf00      	nop
 80038fa:	370c      	adds	r7, #12
 80038fc:	46bd      	mov	sp, r7
 80038fe:	bc80      	pop	{r7}
 8003900:	4770      	bx	lr
 8003902:	bf00      	nop
 8003904:	200000ec 	.word	0x200000ec
 8003908:	e000ed04 	.word	0xe000ed04

0800390c <vPortExitCritical>:
 800390c:	b480      	push	{r7}
 800390e:	b083      	sub	sp, #12
 8003910:	af00      	add	r7, sp, #0
 8003912:	4b11      	ldr	r3, [pc, #68]	; (8003958 <vPortExitCritical+0x4c>)
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	2b00      	cmp	r3, #0
 8003918:	d10a      	bne.n	8003930 <vPortExitCritical+0x24>
 800391a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800391e:	f383 8811 	msr	BASEPRI, r3
 8003922:	f3bf 8f6f 	isb	sy
 8003926:	f3bf 8f4f 	dsb	sy
 800392a:	607b      	str	r3, [r7, #4]
 800392c:	bf00      	nop
 800392e:	e7fe      	b.n	800392e <vPortExitCritical+0x22>
 8003930:	4b09      	ldr	r3, [pc, #36]	; (8003958 <vPortExitCritical+0x4c>)
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	3b01      	subs	r3, #1
 8003936:	4a08      	ldr	r2, [pc, #32]	; (8003958 <vPortExitCritical+0x4c>)
 8003938:	6013      	str	r3, [r2, #0]
 800393a:	4b07      	ldr	r3, [pc, #28]	; (8003958 <vPortExitCritical+0x4c>)
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	2b00      	cmp	r3, #0
 8003940:	d105      	bne.n	800394e <vPortExitCritical+0x42>
 8003942:	2300      	movs	r3, #0
 8003944:	603b      	str	r3, [r7, #0]
 8003946:	683b      	ldr	r3, [r7, #0]
 8003948:	f383 8811 	msr	BASEPRI, r3
 800394c:	bf00      	nop
 800394e:	bf00      	nop
 8003950:	370c      	adds	r7, #12
 8003952:	46bd      	mov	sp, r7
 8003954:	bc80      	pop	{r7}
 8003956:	4770      	bx	lr
 8003958:	200000ec 	.word	0x200000ec
 800395c:	00000000 	.word	0x00000000

08003960 <PendSV_Handler>:
 8003960:	f3ef 8009 	mrs	r0, PSP
 8003964:	f3bf 8f6f 	isb	sy
 8003968:	4b0d      	ldr	r3, [pc, #52]	; (80039a0 <pxCurrentTCBConst>)
 800396a:	681a      	ldr	r2, [r3, #0]
 800396c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003970:	6010      	str	r0, [r2, #0]
 8003972:	e92d 4008 	stmdb	sp!, {r3, lr}
 8003976:	f04f 0050 	mov.w	r0, #80	; 0x50
 800397a:	f380 8811 	msr	BASEPRI, r0
 800397e:	f7ff fd09 	bl	8003394 <vTaskSwitchContext>
 8003982:	f04f 0000 	mov.w	r0, #0
 8003986:	f380 8811 	msr	BASEPRI, r0
 800398a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800398e:	6819      	ldr	r1, [r3, #0]
 8003990:	6808      	ldr	r0, [r1, #0]
 8003992:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003996:	f380 8809 	msr	PSP, r0
 800399a:	f3bf 8f6f 	isb	sy
 800399e:	4770      	bx	lr

080039a0 <pxCurrentTCBConst>:
 80039a0:	200003cc 	.word	0x200003cc
 80039a4:	bf00      	nop
 80039a6:	bf00      	nop

080039a8 <SysTick_Handler>:
 80039a8:	b580      	push	{r7, lr}
 80039aa:	b082      	sub	sp, #8
 80039ac:	af00      	add	r7, sp, #0
 80039ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80039b2:	f383 8811 	msr	BASEPRI, r3
 80039b6:	f3bf 8f6f 	isb	sy
 80039ba:	f3bf 8f4f 	dsb	sy
 80039be:	607b      	str	r3, [r7, #4]
 80039c0:	bf00      	nop
 80039c2:	f7ff fc29 	bl	8003218 <xTaskIncrementTick>
 80039c6:	4603      	mov	r3, r0
 80039c8:	2b00      	cmp	r3, #0
 80039ca:	d003      	beq.n	80039d4 <SysTick_Handler+0x2c>
 80039cc:	4b06      	ldr	r3, [pc, #24]	; (80039e8 <SysTick_Handler+0x40>)
 80039ce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80039d2:	601a      	str	r2, [r3, #0]
 80039d4:	2300      	movs	r3, #0
 80039d6:	603b      	str	r3, [r7, #0]
 80039d8:	683b      	ldr	r3, [r7, #0]
 80039da:	f383 8811 	msr	BASEPRI, r3
 80039de:	bf00      	nop
 80039e0:	bf00      	nop
 80039e2:	3708      	adds	r7, #8
 80039e4:	46bd      	mov	sp, r7
 80039e6:	bd80      	pop	{r7, pc}
 80039e8:	e000ed04 	.word	0xe000ed04

080039ec <vPortSetupTimerInterrupt>:
 80039ec:	b480      	push	{r7}
 80039ee:	af00      	add	r7, sp, #0
 80039f0:	4b0a      	ldr	r3, [pc, #40]	; (8003a1c <vPortSetupTimerInterrupt+0x30>)
 80039f2:	2200      	movs	r2, #0
 80039f4:	601a      	str	r2, [r3, #0]
 80039f6:	4b0a      	ldr	r3, [pc, #40]	; (8003a20 <vPortSetupTimerInterrupt+0x34>)
 80039f8:	2200      	movs	r2, #0
 80039fa:	601a      	str	r2, [r3, #0]
 80039fc:	4b09      	ldr	r3, [pc, #36]	; (8003a24 <vPortSetupTimerInterrupt+0x38>)
 80039fe:	681b      	ldr	r3, [r3, #0]
 8003a00:	4a09      	ldr	r2, [pc, #36]	; (8003a28 <vPortSetupTimerInterrupt+0x3c>)
 8003a02:	fba2 2303 	umull	r2, r3, r2, r3
 8003a06:	099b      	lsrs	r3, r3, #6
 8003a08:	4a08      	ldr	r2, [pc, #32]	; (8003a2c <vPortSetupTimerInterrupt+0x40>)
 8003a0a:	3b01      	subs	r3, #1
 8003a0c:	6013      	str	r3, [r2, #0]
 8003a0e:	4b03      	ldr	r3, [pc, #12]	; (8003a1c <vPortSetupTimerInterrupt+0x30>)
 8003a10:	2207      	movs	r2, #7
 8003a12:	601a      	str	r2, [r3, #0]
 8003a14:	bf00      	nop
 8003a16:	46bd      	mov	sp, r7
 8003a18:	bc80      	pop	{r7}
 8003a1a:	4770      	bx	lr
 8003a1c:	e000e010 	.word	0xe000e010
 8003a20:	e000e018 	.word	0xe000e018
 8003a24:	200000e0 	.word	0x200000e0
 8003a28:	10624dd3 	.word	0x10624dd3
 8003a2c:	e000e014 	.word	0xe000e014

08003a30 <pvPortMalloc>:
 8003a30:	b580      	push	{r7, lr}
 8003a32:	b08a      	sub	sp, #40	; 0x28
 8003a34:	af00      	add	r7, sp, #0
 8003a36:	6078      	str	r0, [r7, #4]
 8003a38:	2300      	movs	r3, #0
 8003a3a:	61fb      	str	r3, [r7, #28]
 8003a3c:	f7ff fb42 	bl	80030c4 <vTaskSuspendAll>
 8003a40:	4b58      	ldr	r3, [pc, #352]	; (8003ba4 <pvPortMalloc+0x174>)
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	d101      	bne.n	8003a4c <pvPortMalloc+0x1c>
 8003a48:	f000 f910 	bl	8003c6c <prvHeapInit>
 8003a4c:	4b56      	ldr	r3, [pc, #344]	; (8003ba8 <pvPortMalloc+0x178>)
 8003a4e:	681a      	ldr	r2, [r3, #0]
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	4013      	ands	r3, r2
 8003a54:	2b00      	cmp	r3, #0
 8003a56:	f040 808e 	bne.w	8003b76 <pvPortMalloc+0x146>
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	2b00      	cmp	r3, #0
 8003a5e:	d01d      	beq.n	8003a9c <pvPortMalloc+0x6c>
 8003a60:	2208      	movs	r2, #8
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	4413      	add	r3, r2
 8003a66:	607b      	str	r3, [r7, #4]
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	f003 0307 	and.w	r3, r3, #7
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	d014      	beq.n	8003a9c <pvPortMalloc+0x6c>
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	f023 0307 	bic.w	r3, r3, #7
 8003a78:	3308      	adds	r3, #8
 8003a7a:	607b      	str	r3, [r7, #4]
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	f003 0307 	and.w	r3, r3, #7
 8003a82:	2b00      	cmp	r3, #0
 8003a84:	d00a      	beq.n	8003a9c <pvPortMalloc+0x6c>
 8003a86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003a8a:	f383 8811 	msr	BASEPRI, r3
 8003a8e:	f3bf 8f6f 	isb	sy
 8003a92:	f3bf 8f4f 	dsb	sy
 8003a96:	617b      	str	r3, [r7, #20]
 8003a98:	bf00      	nop
 8003a9a:	e7fe      	b.n	8003a9a <pvPortMalloc+0x6a>
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	d069      	beq.n	8003b76 <pvPortMalloc+0x146>
 8003aa2:	4b42      	ldr	r3, [pc, #264]	; (8003bac <pvPortMalloc+0x17c>)
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	687a      	ldr	r2, [r7, #4]
 8003aa8:	429a      	cmp	r2, r3
 8003aaa:	d864      	bhi.n	8003b76 <pvPortMalloc+0x146>
 8003aac:	4b40      	ldr	r3, [pc, #256]	; (8003bb0 <pvPortMalloc+0x180>)
 8003aae:	623b      	str	r3, [r7, #32]
 8003ab0:	4b3f      	ldr	r3, [pc, #252]	; (8003bb0 <pvPortMalloc+0x180>)
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	627b      	str	r3, [r7, #36]	; 0x24
 8003ab6:	e004      	b.n	8003ac2 <pvPortMalloc+0x92>
 8003ab8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003aba:	623b      	str	r3, [r7, #32]
 8003abc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	627b      	str	r3, [r7, #36]	; 0x24
 8003ac2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ac4:	685b      	ldr	r3, [r3, #4]
 8003ac6:	687a      	ldr	r2, [r7, #4]
 8003ac8:	429a      	cmp	r2, r3
 8003aca:	d903      	bls.n	8003ad4 <pvPortMalloc+0xa4>
 8003acc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ace:	681b      	ldr	r3, [r3, #0]
 8003ad0:	2b00      	cmp	r3, #0
 8003ad2:	d1f1      	bne.n	8003ab8 <pvPortMalloc+0x88>
 8003ad4:	4b33      	ldr	r3, [pc, #204]	; (8003ba4 <pvPortMalloc+0x174>)
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003ada:	429a      	cmp	r2, r3
 8003adc:	d04b      	beq.n	8003b76 <pvPortMalloc+0x146>
 8003ade:	6a3b      	ldr	r3, [r7, #32]
 8003ae0:	681b      	ldr	r3, [r3, #0]
 8003ae2:	2208      	movs	r2, #8
 8003ae4:	4413      	add	r3, r2
 8003ae6:	61fb      	str	r3, [r7, #28]
 8003ae8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003aea:	681a      	ldr	r2, [r3, #0]
 8003aec:	6a3b      	ldr	r3, [r7, #32]
 8003aee:	601a      	str	r2, [r3, #0]
 8003af0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003af2:	685a      	ldr	r2, [r3, #4]
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	1ad2      	subs	r2, r2, r3
 8003af8:	2308      	movs	r3, #8
 8003afa:	005b      	lsls	r3, r3, #1
 8003afc:	429a      	cmp	r2, r3
 8003afe:	d91f      	bls.n	8003b40 <pvPortMalloc+0x110>
 8003b00:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003b02:	687b      	ldr	r3, [r7, #4]
 8003b04:	4413      	add	r3, r2
 8003b06:	61bb      	str	r3, [r7, #24]
 8003b08:	69bb      	ldr	r3, [r7, #24]
 8003b0a:	f003 0307 	and.w	r3, r3, #7
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d00a      	beq.n	8003b28 <pvPortMalloc+0xf8>
 8003b12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b16:	f383 8811 	msr	BASEPRI, r3
 8003b1a:	f3bf 8f6f 	isb	sy
 8003b1e:	f3bf 8f4f 	dsb	sy
 8003b22:	613b      	str	r3, [r7, #16]
 8003b24:	bf00      	nop
 8003b26:	e7fe      	b.n	8003b26 <pvPortMalloc+0xf6>
 8003b28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b2a:	685a      	ldr	r2, [r3, #4]
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	1ad2      	subs	r2, r2, r3
 8003b30:	69bb      	ldr	r3, [r7, #24]
 8003b32:	605a      	str	r2, [r3, #4]
 8003b34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b36:	687a      	ldr	r2, [r7, #4]
 8003b38:	605a      	str	r2, [r3, #4]
 8003b3a:	69b8      	ldr	r0, [r7, #24]
 8003b3c:	f000 f8f8 	bl	8003d30 <prvInsertBlockIntoFreeList>
 8003b40:	4b1a      	ldr	r3, [pc, #104]	; (8003bac <pvPortMalloc+0x17c>)
 8003b42:	681a      	ldr	r2, [r3, #0]
 8003b44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b46:	685b      	ldr	r3, [r3, #4]
 8003b48:	1ad3      	subs	r3, r2, r3
 8003b4a:	4a18      	ldr	r2, [pc, #96]	; (8003bac <pvPortMalloc+0x17c>)
 8003b4c:	6013      	str	r3, [r2, #0]
 8003b4e:	4b17      	ldr	r3, [pc, #92]	; (8003bac <pvPortMalloc+0x17c>)
 8003b50:	681a      	ldr	r2, [r3, #0]
 8003b52:	4b18      	ldr	r3, [pc, #96]	; (8003bb4 <pvPortMalloc+0x184>)
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	429a      	cmp	r2, r3
 8003b58:	d203      	bcs.n	8003b62 <pvPortMalloc+0x132>
 8003b5a:	4b14      	ldr	r3, [pc, #80]	; (8003bac <pvPortMalloc+0x17c>)
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	4a15      	ldr	r2, [pc, #84]	; (8003bb4 <pvPortMalloc+0x184>)
 8003b60:	6013      	str	r3, [r2, #0]
 8003b62:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b64:	685a      	ldr	r2, [r3, #4]
 8003b66:	4b10      	ldr	r3, [pc, #64]	; (8003ba8 <pvPortMalloc+0x178>)
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	431a      	orrs	r2, r3
 8003b6c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b6e:	605a      	str	r2, [r3, #4]
 8003b70:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b72:	2200      	movs	r2, #0
 8003b74:	601a      	str	r2, [r3, #0]
 8003b76:	f7ff fab3 	bl	80030e0 <xTaskResumeAll>
 8003b7a:	69fb      	ldr	r3, [r7, #28]
 8003b7c:	f003 0307 	and.w	r3, r3, #7
 8003b80:	2b00      	cmp	r3, #0
 8003b82:	d00a      	beq.n	8003b9a <pvPortMalloc+0x16a>
 8003b84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b88:	f383 8811 	msr	BASEPRI, r3
 8003b8c:	f3bf 8f6f 	isb	sy
 8003b90:	f3bf 8f4f 	dsb	sy
 8003b94:	60fb      	str	r3, [r7, #12]
 8003b96:	bf00      	nop
 8003b98:	e7fe      	b.n	8003b98 <pvPortMalloc+0x168>
 8003b9a:	69fb      	ldr	r3, [r7, #28]
 8003b9c:	4618      	mov	r0, r3
 8003b9e:	3728      	adds	r7, #40	; 0x28
 8003ba0:	46bd      	mov	sp, r7
 8003ba2:	bd80      	pop	{r7, pc}
 8003ba4:	20001108 	.word	0x20001108
 8003ba8:	20001114 	.word	0x20001114
 8003bac:	2000110c 	.word	0x2000110c
 8003bb0:	20001100 	.word	0x20001100
 8003bb4:	20001110 	.word	0x20001110

08003bb8 <vPortFree>:
 8003bb8:	b580      	push	{r7, lr}
 8003bba:	b086      	sub	sp, #24
 8003bbc:	af00      	add	r7, sp, #0
 8003bbe:	6078      	str	r0, [r7, #4]
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	617b      	str	r3, [r7, #20]
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	2b00      	cmp	r3, #0
 8003bc8:	d048      	beq.n	8003c5c <vPortFree+0xa4>
 8003bca:	2308      	movs	r3, #8
 8003bcc:	425b      	negs	r3, r3
 8003bce:	697a      	ldr	r2, [r7, #20]
 8003bd0:	4413      	add	r3, r2
 8003bd2:	617b      	str	r3, [r7, #20]
 8003bd4:	697b      	ldr	r3, [r7, #20]
 8003bd6:	613b      	str	r3, [r7, #16]
 8003bd8:	693b      	ldr	r3, [r7, #16]
 8003bda:	685a      	ldr	r2, [r3, #4]
 8003bdc:	4b21      	ldr	r3, [pc, #132]	; (8003c64 <vPortFree+0xac>)
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	4013      	ands	r3, r2
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	d10a      	bne.n	8003bfc <vPortFree+0x44>
 8003be6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003bea:	f383 8811 	msr	BASEPRI, r3
 8003bee:	f3bf 8f6f 	isb	sy
 8003bf2:	f3bf 8f4f 	dsb	sy
 8003bf6:	60fb      	str	r3, [r7, #12]
 8003bf8:	bf00      	nop
 8003bfa:	e7fe      	b.n	8003bfa <vPortFree+0x42>
 8003bfc:	693b      	ldr	r3, [r7, #16]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	2b00      	cmp	r3, #0
 8003c02:	d00a      	beq.n	8003c1a <vPortFree+0x62>
 8003c04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003c08:	f383 8811 	msr	BASEPRI, r3
 8003c0c:	f3bf 8f6f 	isb	sy
 8003c10:	f3bf 8f4f 	dsb	sy
 8003c14:	60bb      	str	r3, [r7, #8]
 8003c16:	bf00      	nop
 8003c18:	e7fe      	b.n	8003c18 <vPortFree+0x60>
 8003c1a:	693b      	ldr	r3, [r7, #16]
 8003c1c:	685a      	ldr	r2, [r3, #4]
 8003c1e:	4b11      	ldr	r3, [pc, #68]	; (8003c64 <vPortFree+0xac>)
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	4013      	ands	r3, r2
 8003c24:	2b00      	cmp	r3, #0
 8003c26:	d019      	beq.n	8003c5c <vPortFree+0xa4>
 8003c28:	693b      	ldr	r3, [r7, #16]
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d115      	bne.n	8003c5c <vPortFree+0xa4>
 8003c30:	693b      	ldr	r3, [r7, #16]
 8003c32:	685a      	ldr	r2, [r3, #4]
 8003c34:	4b0b      	ldr	r3, [pc, #44]	; (8003c64 <vPortFree+0xac>)
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	43db      	mvns	r3, r3
 8003c3a:	401a      	ands	r2, r3
 8003c3c:	693b      	ldr	r3, [r7, #16]
 8003c3e:	605a      	str	r2, [r3, #4]
 8003c40:	f7ff fa40 	bl	80030c4 <vTaskSuspendAll>
 8003c44:	693b      	ldr	r3, [r7, #16]
 8003c46:	685a      	ldr	r2, [r3, #4]
 8003c48:	4b07      	ldr	r3, [pc, #28]	; (8003c68 <vPortFree+0xb0>)
 8003c4a:	681b      	ldr	r3, [r3, #0]
 8003c4c:	4413      	add	r3, r2
 8003c4e:	4a06      	ldr	r2, [pc, #24]	; (8003c68 <vPortFree+0xb0>)
 8003c50:	6013      	str	r3, [r2, #0]
 8003c52:	6938      	ldr	r0, [r7, #16]
 8003c54:	f000 f86c 	bl	8003d30 <prvInsertBlockIntoFreeList>
 8003c58:	f7ff fa42 	bl	80030e0 <xTaskResumeAll>
 8003c5c:	bf00      	nop
 8003c5e:	3718      	adds	r7, #24
 8003c60:	46bd      	mov	sp, r7
 8003c62:	bd80      	pop	{r7, pc}
 8003c64:	20001114 	.word	0x20001114
 8003c68:	2000110c 	.word	0x2000110c

08003c6c <prvHeapInit>:
 8003c6c:	b480      	push	{r7}
 8003c6e:	b085      	sub	sp, #20
 8003c70:	af00      	add	r7, sp, #0
 8003c72:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003c76:	60bb      	str	r3, [r7, #8]
 8003c78:	4b27      	ldr	r3, [pc, #156]	; (8003d18 <prvHeapInit+0xac>)
 8003c7a:	60fb      	str	r3, [r7, #12]
 8003c7c:	68fb      	ldr	r3, [r7, #12]
 8003c7e:	f003 0307 	and.w	r3, r3, #7
 8003c82:	2b00      	cmp	r3, #0
 8003c84:	d00c      	beq.n	8003ca0 <prvHeapInit+0x34>
 8003c86:	68fb      	ldr	r3, [r7, #12]
 8003c88:	3307      	adds	r3, #7
 8003c8a:	60fb      	str	r3, [r7, #12]
 8003c8c:	68fb      	ldr	r3, [r7, #12]
 8003c8e:	f023 0307 	bic.w	r3, r3, #7
 8003c92:	60fb      	str	r3, [r7, #12]
 8003c94:	68ba      	ldr	r2, [r7, #8]
 8003c96:	68fb      	ldr	r3, [r7, #12]
 8003c98:	1ad3      	subs	r3, r2, r3
 8003c9a:	4a1f      	ldr	r2, [pc, #124]	; (8003d18 <prvHeapInit+0xac>)
 8003c9c:	4413      	add	r3, r2
 8003c9e:	60bb      	str	r3, [r7, #8]
 8003ca0:	68fb      	ldr	r3, [r7, #12]
 8003ca2:	607b      	str	r3, [r7, #4]
 8003ca4:	4a1d      	ldr	r2, [pc, #116]	; (8003d1c <prvHeapInit+0xb0>)
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	6013      	str	r3, [r2, #0]
 8003caa:	4b1c      	ldr	r3, [pc, #112]	; (8003d1c <prvHeapInit+0xb0>)
 8003cac:	2200      	movs	r2, #0
 8003cae:	605a      	str	r2, [r3, #4]
 8003cb0:	687b      	ldr	r3, [r7, #4]
 8003cb2:	68ba      	ldr	r2, [r7, #8]
 8003cb4:	4413      	add	r3, r2
 8003cb6:	60fb      	str	r3, [r7, #12]
 8003cb8:	2208      	movs	r2, #8
 8003cba:	68fb      	ldr	r3, [r7, #12]
 8003cbc:	1a9b      	subs	r3, r3, r2
 8003cbe:	60fb      	str	r3, [r7, #12]
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	f023 0307 	bic.w	r3, r3, #7
 8003cc6:	60fb      	str	r3, [r7, #12]
 8003cc8:	68fb      	ldr	r3, [r7, #12]
 8003cca:	4a15      	ldr	r2, [pc, #84]	; (8003d20 <prvHeapInit+0xb4>)
 8003ccc:	6013      	str	r3, [r2, #0]
 8003cce:	4b14      	ldr	r3, [pc, #80]	; (8003d20 <prvHeapInit+0xb4>)
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	2200      	movs	r2, #0
 8003cd4:	605a      	str	r2, [r3, #4]
 8003cd6:	4b12      	ldr	r3, [pc, #72]	; (8003d20 <prvHeapInit+0xb4>)
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	2200      	movs	r2, #0
 8003cdc:	601a      	str	r2, [r3, #0]
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	603b      	str	r3, [r7, #0]
 8003ce2:	683b      	ldr	r3, [r7, #0]
 8003ce4:	68fa      	ldr	r2, [r7, #12]
 8003ce6:	1ad2      	subs	r2, r2, r3
 8003ce8:	683b      	ldr	r3, [r7, #0]
 8003cea:	605a      	str	r2, [r3, #4]
 8003cec:	4b0c      	ldr	r3, [pc, #48]	; (8003d20 <prvHeapInit+0xb4>)
 8003cee:	681a      	ldr	r2, [r3, #0]
 8003cf0:	683b      	ldr	r3, [r7, #0]
 8003cf2:	601a      	str	r2, [r3, #0]
 8003cf4:	683b      	ldr	r3, [r7, #0]
 8003cf6:	685b      	ldr	r3, [r3, #4]
 8003cf8:	4a0a      	ldr	r2, [pc, #40]	; (8003d24 <prvHeapInit+0xb8>)
 8003cfa:	6013      	str	r3, [r2, #0]
 8003cfc:	683b      	ldr	r3, [r7, #0]
 8003cfe:	685b      	ldr	r3, [r3, #4]
 8003d00:	4a09      	ldr	r2, [pc, #36]	; (8003d28 <prvHeapInit+0xbc>)
 8003d02:	6013      	str	r3, [r2, #0]
 8003d04:	4b09      	ldr	r3, [pc, #36]	; (8003d2c <prvHeapInit+0xc0>)
 8003d06:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8003d0a:	601a      	str	r2, [r3, #0]
 8003d0c:	bf00      	nop
 8003d0e:	3714      	adds	r7, #20
 8003d10:	46bd      	mov	sp, r7
 8003d12:	bc80      	pop	{r7}
 8003d14:	4770      	bx	lr
 8003d16:	bf00      	nop
 8003d18:	20000500 	.word	0x20000500
 8003d1c:	20001100 	.word	0x20001100
 8003d20:	20001108 	.word	0x20001108
 8003d24:	20001110 	.word	0x20001110
 8003d28:	2000110c 	.word	0x2000110c
 8003d2c:	20001114 	.word	0x20001114

08003d30 <prvInsertBlockIntoFreeList>:
 8003d30:	b480      	push	{r7}
 8003d32:	b085      	sub	sp, #20
 8003d34:	af00      	add	r7, sp, #0
 8003d36:	6078      	str	r0, [r7, #4]
 8003d38:	4b27      	ldr	r3, [pc, #156]	; (8003dd8 <prvInsertBlockIntoFreeList+0xa8>)
 8003d3a:	60fb      	str	r3, [r7, #12]
 8003d3c:	e002      	b.n	8003d44 <prvInsertBlockIntoFreeList+0x14>
 8003d3e:	68fb      	ldr	r3, [r7, #12]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	60fb      	str	r3, [r7, #12]
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	687a      	ldr	r2, [r7, #4]
 8003d4a:	429a      	cmp	r2, r3
 8003d4c:	d8f7      	bhi.n	8003d3e <prvInsertBlockIntoFreeList+0xe>
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	60bb      	str	r3, [r7, #8]
 8003d52:	68fb      	ldr	r3, [r7, #12]
 8003d54:	685b      	ldr	r3, [r3, #4]
 8003d56:	68ba      	ldr	r2, [r7, #8]
 8003d58:	4413      	add	r3, r2
 8003d5a:	687a      	ldr	r2, [r7, #4]
 8003d5c:	429a      	cmp	r2, r3
 8003d5e:	d108      	bne.n	8003d72 <prvInsertBlockIntoFreeList+0x42>
 8003d60:	68fb      	ldr	r3, [r7, #12]
 8003d62:	685a      	ldr	r2, [r3, #4]
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	685b      	ldr	r3, [r3, #4]
 8003d68:	441a      	add	r2, r3
 8003d6a:	68fb      	ldr	r3, [r7, #12]
 8003d6c:	605a      	str	r2, [r3, #4]
 8003d6e:	68fb      	ldr	r3, [r7, #12]
 8003d70:	607b      	str	r3, [r7, #4]
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	60bb      	str	r3, [r7, #8]
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	685b      	ldr	r3, [r3, #4]
 8003d7a:	68ba      	ldr	r2, [r7, #8]
 8003d7c:	441a      	add	r2, r3
 8003d7e:	68fb      	ldr	r3, [r7, #12]
 8003d80:	681b      	ldr	r3, [r3, #0]
 8003d82:	429a      	cmp	r2, r3
 8003d84:	d118      	bne.n	8003db8 <prvInsertBlockIntoFreeList+0x88>
 8003d86:	68fb      	ldr	r3, [r7, #12]
 8003d88:	681a      	ldr	r2, [r3, #0]
 8003d8a:	4b14      	ldr	r3, [pc, #80]	; (8003ddc <prvInsertBlockIntoFreeList+0xac>)
 8003d8c:	681b      	ldr	r3, [r3, #0]
 8003d8e:	429a      	cmp	r2, r3
 8003d90:	d00d      	beq.n	8003dae <prvInsertBlockIntoFreeList+0x7e>
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	685a      	ldr	r2, [r3, #4]
 8003d96:	68fb      	ldr	r3, [r7, #12]
 8003d98:	681b      	ldr	r3, [r3, #0]
 8003d9a:	685b      	ldr	r3, [r3, #4]
 8003d9c:	441a      	add	r2, r3
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	605a      	str	r2, [r3, #4]
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	681a      	ldr	r2, [r3, #0]
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	601a      	str	r2, [r3, #0]
 8003dac:	e008      	b.n	8003dc0 <prvInsertBlockIntoFreeList+0x90>
 8003dae:	4b0b      	ldr	r3, [pc, #44]	; (8003ddc <prvInsertBlockIntoFreeList+0xac>)
 8003db0:	681a      	ldr	r2, [r3, #0]
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	601a      	str	r2, [r3, #0]
 8003db6:	e003      	b.n	8003dc0 <prvInsertBlockIntoFreeList+0x90>
 8003db8:	68fb      	ldr	r3, [r7, #12]
 8003dba:	681a      	ldr	r2, [r3, #0]
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	601a      	str	r2, [r3, #0]
 8003dc0:	68fa      	ldr	r2, [r7, #12]
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	429a      	cmp	r2, r3
 8003dc6:	d002      	beq.n	8003dce <prvInsertBlockIntoFreeList+0x9e>
 8003dc8:	68fb      	ldr	r3, [r7, #12]
 8003dca:	687a      	ldr	r2, [r7, #4]
 8003dcc:	601a      	str	r2, [r3, #0]
 8003dce:	bf00      	nop
 8003dd0:	3714      	adds	r7, #20
 8003dd2:	46bd      	mov	sp, r7
 8003dd4:	bc80      	pop	{r7}
 8003dd6:	4770      	bx	lr
 8003dd8:	20001100 	.word	0x20001100
 8003ddc:	20001108 	.word	0x20001108

08003de0 <__errno>:
 8003de0:	4b01      	ldr	r3, [pc, #4]	; (8003de8 <__errno+0x8>)
 8003de2:	6818      	ldr	r0, [r3, #0]
 8003de4:	4770      	bx	lr
 8003de6:	bf00      	nop
 8003de8:	200000f0 	.word	0x200000f0

08003dec <__libc_init_array>:
 8003dec:	b570      	push	{r4, r5, r6, lr}
 8003dee:	2600      	movs	r6, #0
 8003df0:	4d0c      	ldr	r5, [pc, #48]	; (8003e24 <__libc_init_array+0x38>)
 8003df2:	4c0d      	ldr	r4, [pc, #52]	; (8003e28 <__libc_init_array+0x3c>)
 8003df4:	1b64      	subs	r4, r4, r5
 8003df6:	10a4      	asrs	r4, r4, #2
 8003df8:	42a6      	cmp	r6, r4
 8003dfa:	d109      	bne.n	8003e10 <__libc_init_array+0x24>
 8003dfc:	f001 fa7a 	bl	80052f4 <_init>
 8003e00:	2600      	movs	r6, #0
 8003e02:	4d0a      	ldr	r5, [pc, #40]	; (8003e2c <__libc_init_array+0x40>)
 8003e04:	4c0a      	ldr	r4, [pc, #40]	; (8003e30 <__libc_init_array+0x44>)
 8003e06:	1b64      	subs	r4, r4, r5
 8003e08:	10a4      	asrs	r4, r4, #2
 8003e0a:	42a6      	cmp	r6, r4
 8003e0c:	d105      	bne.n	8003e1a <__libc_init_array+0x2e>
 8003e0e:	bd70      	pop	{r4, r5, r6, pc}
 8003e10:	f855 3b04 	ldr.w	r3, [r5], #4
 8003e14:	4798      	blx	r3
 8003e16:	3601      	adds	r6, #1
 8003e18:	e7ee      	b.n	8003df8 <__libc_init_array+0xc>
 8003e1a:	f855 3b04 	ldr.w	r3, [r5], #4
 8003e1e:	4798      	blx	r3
 8003e20:	3601      	adds	r6, #1
 8003e22:	e7f2      	b.n	8003e0a <__libc_init_array+0x1e>
 8003e24:	080054f8 	.word	0x080054f8
 8003e28:	080054f8 	.word	0x080054f8
 8003e2c:	080054f8 	.word	0x080054f8
 8003e30:	080054fc 	.word	0x080054fc

08003e34 <memcpy>:
 8003e34:	440a      	add	r2, r1
 8003e36:	4291      	cmp	r1, r2
 8003e38:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8003e3c:	d100      	bne.n	8003e40 <memcpy+0xc>
 8003e3e:	4770      	bx	lr
 8003e40:	b510      	push	{r4, lr}
 8003e42:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003e46:	4291      	cmp	r1, r2
 8003e48:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003e4c:	d1f9      	bne.n	8003e42 <memcpy+0xe>
 8003e4e:	bd10      	pop	{r4, pc}

08003e50 <memset>:
 8003e50:	4603      	mov	r3, r0
 8003e52:	4402      	add	r2, r0
 8003e54:	4293      	cmp	r3, r2
 8003e56:	d100      	bne.n	8003e5a <memset+0xa>
 8003e58:	4770      	bx	lr
 8003e5a:	f803 1b01 	strb.w	r1, [r3], #1
 8003e5e:	e7f9      	b.n	8003e54 <memset+0x4>

08003e60 <srand>:
 8003e60:	b538      	push	{r3, r4, r5, lr}
 8003e62:	4b10      	ldr	r3, [pc, #64]	; (8003ea4 <srand+0x44>)
 8003e64:	4604      	mov	r4, r0
 8003e66:	681d      	ldr	r5, [r3, #0]
 8003e68:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8003e6a:	b9b3      	cbnz	r3, 8003e9a <srand+0x3a>
 8003e6c:	2018      	movs	r0, #24
 8003e6e:	f000 f8f9 	bl	8004064 <malloc>
 8003e72:	4602      	mov	r2, r0
 8003e74:	63a8      	str	r0, [r5, #56]	; 0x38
 8003e76:	b920      	cbnz	r0, 8003e82 <srand+0x22>
 8003e78:	2142      	movs	r1, #66	; 0x42
 8003e7a:	4b0b      	ldr	r3, [pc, #44]	; (8003ea8 <srand+0x48>)
 8003e7c:	480b      	ldr	r0, [pc, #44]	; (8003eac <srand+0x4c>)
 8003e7e:	f000 f8af 	bl	8003fe0 <__assert_func>
 8003e82:	490b      	ldr	r1, [pc, #44]	; (8003eb0 <srand+0x50>)
 8003e84:	4b0b      	ldr	r3, [pc, #44]	; (8003eb4 <srand+0x54>)
 8003e86:	e9c0 1300 	strd	r1, r3, [r0]
 8003e8a:	4b0b      	ldr	r3, [pc, #44]	; (8003eb8 <srand+0x58>)
 8003e8c:	2100      	movs	r1, #0
 8003e8e:	6083      	str	r3, [r0, #8]
 8003e90:	230b      	movs	r3, #11
 8003e92:	8183      	strh	r3, [r0, #12]
 8003e94:	2001      	movs	r0, #1
 8003e96:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003e9a:	2200      	movs	r2, #0
 8003e9c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8003e9e:	611c      	str	r4, [r3, #16]
 8003ea0:	615a      	str	r2, [r3, #20]
 8003ea2:	bd38      	pop	{r3, r4, r5, pc}
 8003ea4:	200000f0 	.word	0x200000f0
 8003ea8:	080053b0 	.word	0x080053b0
 8003eac:	080053c7 	.word	0x080053c7
 8003eb0:	abcd330e 	.word	0xabcd330e
 8003eb4:	e66d1234 	.word	0xe66d1234
 8003eb8:	0005deec 	.word	0x0005deec

08003ebc <rand>:
 8003ebc:	4b17      	ldr	r3, [pc, #92]	; (8003f1c <rand+0x60>)
 8003ebe:	b510      	push	{r4, lr}
 8003ec0:	681c      	ldr	r4, [r3, #0]
 8003ec2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003ec4:	b9b3      	cbnz	r3, 8003ef4 <rand+0x38>
 8003ec6:	2018      	movs	r0, #24
 8003ec8:	f000 f8cc 	bl	8004064 <malloc>
 8003ecc:	4602      	mov	r2, r0
 8003ece:	63a0      	str	r0, [r4, #56]	; 0x38
 8003ed0:	b920      	cbnz	r0, 8003edc <rand+0x20>
 8003ed2:	214e      	movs	r1, #78	; 0x4e
 8003ed4:	4b12      	ldr	r3, [pc, #72]	; (8003f20 <rand+0x64>)
 8003ed6:	4813      	ldr	r0, [pc, #76]	; (8003f24 <rand+0x68>)
 8003ed8:	f000 f882 	bl	8003fe0 <__assert_func>
 8003edc:	4912      	ldr	r1, [pc, #72]	; (8003f28 <rand+0x6c>)
 8003ede:	4b13      	ldr	r3, [pc, #76]	; (8003f2c <rand+0x70>)
 8003ee0:	e9c0 1300 	strd	r1, r3, [r0]
 8003ee4:	4b12      	ldr	r3, [pc, #72]	; (8003f30 <rand+0x74>)
 8003ee6:	2100      	movs	r1, #0
 8003ee8:	6083      	str	r3, [r0, #8]
 8003eea:	230b      	movs	r3, #11
 8003eec:	8183      	strh	r3, [r0, #12]
 8003eee:	2001      	movs	r0, #1
 8003ef0:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003ef4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8003ef6:	480f      	ldr	r0, [pc, #60]	; (8003f34 <rand+0x78>)
 8003ef8:	690a      	ldr	r2, [r1, #16]
 8003efa:	694b      	ldr	r3, [r1, #20]
 8003efc:	4350      	muls	r0, r2
 8003efe:	4c0e      	ldr	r4, [pc, #56]	; (8003f38 <rand+0x7c>)
 8003f00:	fb04 0003 	mla	r0, r4, r3, r0
 8003f04:	fba2 3404 	umull	r3, r4, r2, r4
 8003f08:	1c5a      	adds	r2, r3, #1
 8003f0a:	4404      	add	r4, r0
 8003f0c:	f144 0000 	adc.w	r0, r4, #0
 8003f10:	e9c1 2004 	strd	r2, r0, [r1, #16]
 8003f14:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8003f18:	bd10      	pop	{r4, pc}
 8003f1a:	bf00      	nop
 8003f1c:	200000f0 	.word	0x200000f0
 8003f20:	080053b0 	.word	0x080053b0
 8003f24:	080053c7 	.word	0x080053c7
 8003f28:	abcd330e 	.word	0xabcd330e
 8003f2c:	e66d1234 	.word	0xe66d1234
 8003f30:	0005deec 	.word	0x0005deec
 8003f34:	5851f42d 	.word	0x5851f42d
 8003f38:	4c957f2d 	.word	0x4c957f2d

08003f3c <siprintf>:
 8003f3c:	b40e      	push	{r1, r2, r3}
 8003f3e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003f42:	b500      	push	{lr}
 8003f44:	b09c      	sub	sp, #112	; 0x70
 8003f46:	ab1d      	add	r3, sp, #116	; 0x74
 8003f48:	9002      	str	r0, [sp, #8]
 8003f4a:	9006      	str	r0, [sp, #24]
 8003f4c:	9107      	str	r1, [sp, #28]
 8003f4e:	9104      	str	r1, [sp, #16]
 8003f50:	4808      	ldr	r0, [pc, #32]	; (8003f74 <siprintf+0x38>)
 8003f52:	4909      	ldr	r1, [pc, #36]	; (8003f78 <siprintf+0x3c>)
 8003f54:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f58:	9105      	str	r1, [sp, #20]
 8003f5a:	6800      	ldr	r0, [r0, #0]
 8003f5c:	a902      	add	r1, sp, #8
 8003f5e:	9301      	str	r3, [sp, #4]
 8003f60:	f000 f98a 	bl	8004278 <_svfiprintf_r>
 8003f64:	2200      	movs	r2, #0
 8003f66:	9b02      	ldr	r3, [sp, #8]
 8003f68:	701a      	strb	r2, [r3, #0]
 8003f6a:	b01c      	add	sp, #112	; 0x70
 8003f6c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003f70:	b003      	add	sp, #12
 8003f72:	4770      	bx	lr
 8003f74:	200000f0 	.word	0x200000f0
 8003f78:	ffff0208 	.word	0xffff0208

08003f7c <strcat>:
 8003f7c:	4602      	mov	r2, r0
 8003f7e:	b510      	push	{r4, lr}
 8003f80:	7814      	ldrb	r4, [r2, #0]
 8003f82:	4613      	mov	r3, r2
 8003f84:	3201      	adds	r2, #1
 8003f86:	2c00      	cmp	r4, #0
 8003f88:	d1fa      	bne.n	8003f80 <strcat+0x4>
 8003f8a:	3b01      	subs	r3, #1
 8003f8c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003f90:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003f94:	2a00      	cmp	r2, #0
 8003f96:	d1f9      	bne.n	8003f8c <strcat+0x10>
 8003f98:	bd10      	pop	{r4, pc}

08003f9a <strcpy>:
 8003f9a:	4603      	mov	r3, r0
 8003f9c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003fa0:	f803 2b01 	strb.w	r2, [r3], #1
 8003fa4:	2a00      	cmp	r2, #0
 8003fa6:	d1f9      	bne.n	8003f9c <strcpy+0x2>
 8003fa8:	4770      	bx	lr
	...

08003fac <time>:
 8003fac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003fae:	4b0b      	ldr	r3, [pc, #44]	; (8003fdc <time+0x30>)
 8003fb0:	4604      	mov	r4, r0
 8003fb2:	2200      	movs	r2, #0
 8003fb4:	4669      	mov	r1, sp
 8003fb6:	6818      	ldr	r0, [r3, #0]
 8003fb8:	f000 f842 	bl	8004040 <_gettimeofday_r>
 8003fbc:	2800      	cmp	r0, #0
 8003fbe:	da05      	bge.n	8003fcc <time+0x20>
 8003fc0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003fc4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003fc8:	e9cd 2300 	strd	r2, r3, [sp]
 8003fcc:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003fd0:	b10c      	cbz	r4, 8003fd6 <time+0x2a>
 8003fd2:	e9c4 0100 	strd	r0, r1, [r4]
 8003fd6:	b004      	add	sp, #16
 8003fd8:	bd10      	pop	{r4, pc}
 8003fda:	bf00      	nop
 8003fdc:	200000f0 	.word	0x200000f0

08003fe0 <__assert_func>:
 8003fe0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003fe2:	4614      	mov	r4, r2
 8003fe4:	461a      	mov	r2, r3
 8003fe6:	4b09      	ldr	r3, [pc, #36]	; (800400c <__assert_func+0x2c>)
 8003fe8:	4605      	mov	r5, r0
 8003fea:	681b      	ldr	r3, [r3, #0]
 8003fec:	68d8      	ldr	r0, [r3, #12]
 8003fee:	b14c      	cbz	r4, 8004004 <__assert_func+0x24>
 8003ff0:	4b07      	ldr	r3, [pc, #28]	; (8004010 <__assert_func+0x30>)
 8003ff2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003ff6:	9100      	str	r1, [sp, #0]
 8003ff8:	462b      	mov	r3, r5
 8003ffa:	4906      	ldr	r1, [pc, #24]	; (8004014 <__assert_func+0x34>)
 8003ffc:	f000 f80e 	bl	800401c <fiprintf>
 8004000:	f000 fdf8 	bl	8004bf4 <abort>
 8004004:	4b04      	ldr	r3, [pc, #16]	; (8004018 <__assert_func+0x38>)
 8004006:	461c      	mov	r4, r3
 8004008:	e7f3      	b.n	8003ff2 <__assert_func+0x12>
 800400a:	bf00      	nop
 800400c:	200000f0 	.word	0x200000f0
 8004010:	08005426 	.word	0x08005426
 8004014:	08005433 	.word	0x08005433
 8004018:	08005461 	.word	0x08005461

0800401c <fiprintf>:
 800401c:	b40e      	push	{r1, r2, r3}
 800401e:	b503      	push	{r0, r1, lr}
 8004020:	4601      	mov	r1, r0
 8004022:	ab03      	add	r3, sp, #12
 8004024:	4805      	ldr	r0, [pc, #20]	; (800403c <fiprintf+0x20>)
 8004026:	f853 2b04 	ldr.w	r2, [r3], #4
 800402a:	6800      	ldr	r0, [r0, #0]
 800402c:	9301      	str	r3, [sp, #4]
 800402e:	f000 fa4b 	bl	80044c8 <_vfiprintf_r>
 8004032:	b002      	add	sp, #8
 8004034:	f85d eb04 	ldr.w	lr, [sp], #4
 8004038:	b003      	add	sp, #12
 800403a:	4770      	bx	lr
 800403c:	200000f0 	.word	0x200000f0

08004040 <_gettimeofday_r>:
 8004040:	b538      	push	{r3, r4, r5, lr}
 8004042:	2300      	movs	r3, #0
 8004044:	4d06      	ldr	r5, [pc, #24]	; (8004060 <_gettimeofday_r+0x20>)
 8004046:	4604      	mov	r4, r0
 8004048:	4608      	mov	r0, r1
 800404a:	4611      	mov	r1, r2
 800404c:	602b      	str	r3, [r5, #0]
 800404e:	f001 f949 	bl	80052e4 <_gettimeofday>
 8004052:	1c43      	adds	r3, r0, #1
 8004054:	d102      	bne.n	800405c <_gettimeofday_r+0x1c>
 8004056:	682b      	ldr	r3, [r5, #0]
 8004058:	b103      	cbz	r3, 800405c <_gettimeofday_r+0x1c>
 800405a:	6023      	str	r3, [r4, #0]
 800405c:	bd38      	pop	{r3, r4, r5, pc}
 800405e:	bf00      	nop
 8004060:	20001624 	.word	0x20001624

08004064 <malloc>:
 8004064:	4b02      	ldr	r3, [pc, #8]	; (8004070 <malloc+0xc>)
 8004066:	4601      	mov	r1, r0
 8004068:	6818      	ldr	r0, [r3, #0]
 800406a:	f000 b84f 	b.w	800410c <_malloc_r>
 800406e:	bf00      	nop
 8004070:	200000f0 	.word	0x200000f0

08004074 <_free_r>:
 8004074:	b538      	push	{r3, r4, r5, lr}
 8004076:	4605      	mov	r5, r0
 8004078:	2900      	cmp	r1, #0
 800407a:	d043      	beq.n	8004104 <_free_r+0x90>
 800407c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004080:	1f0c      	subs	r4, r1, #4
 8004082:	2b00      	cmp	r3, #0
 8004084:	bfb8      	it	lt
 8004086:	18e4      	addlt	r4, r4, r3
 8004088:	f001 f802 	bl	8005090 <__malloc_lock>
 800408c:	4a1e      	ldr	r2, [pc, #120]	; (8004108 <_free_r+0x94>)
 800408e:	6813      	ldr	r3, [r2, #0]
 8004090:	4610      	mov	r0, r2
 8004092:	b933      	cbnz	r3, 80040a2 <_free_r+0x2e>
 8004094:	6063      	str	r3, [r4, #4]
 8004096:	6014      	str	r4, [r2, #0]
 8004098:	4628      	mov	r0, r5
 800409a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800409e:	f000 bffd 	b.w	800509c <__malloc_unlock>
 80040a2:	42a3      	cmp	r3, r4
 80040a4:	d90a      	bls.n	80040bc <_free_r+0x48>
 80040a6:	6821      	ldr	r1, [r4, #0]
 80040a8:	1862      	adds	r2, r4, r1
 80040aa:	4293      	cmp	r3, r2
 80040ac:	bf01      	itttt	eq
 80040ae:	681a      	ldreq	r2, [r3, #0]
 80040b0:	685b      	ldreq	r3, [r3, #4]
 80040b2:	1852      	addeq	r2, r2, r1
 80040b4:	6022      	streq	r2, [r4, #0]
 80040b6:	6063      	str	r3, [r4, #4]
 80040b8:	6004      	str	r4, [r0, #0]
 80040ba:	e7ed      	b.n	8004098 <_free_r+0x24>
 80040bc:	461a      	mov	r2, r3
 80040be:	685b      	ldr	r3, [r3, #4]
 80040c0:	b10b      	cbz	r3, 80040c6 <_free_r+0x52>
 80040c2:	42a3      	cmp	r3, r4
 80040c4:	d9fa      	bls.n	80040bc <_free_r+0x48>
 80040c6:	6811      	ldr	r1, [r2, #0]
 80040c8:	1850      	adds	r0, r2, r1
 80040ca:	42a0      	cmp	r0, r4
 80040cc:	d10b      	bne.n	80040e6 <_free_r+0x72>
 80040ce:	6820      	ldr	r0, [r4, #0]
 80040d0:	4401      	add	r1, r0
 80040d2:	1850      	adds	r0, r2, r1
 80040d4:	4283      	cmp	r3, r0
 80040d6:	6011      	str	r1, [r2, #0]
 80040d8:	d1de      	bne.n	8004098 <_free_r+0x24>
 80040da:	6818      	ldr	r0, [r3, #0]
 80040dc:	685b      	ldr	r3, [r3, #4]
 80040de:	4401      	add	r1, r0
 80040e0:	6011      	str	r1, [r2, #0]
 80040e2:	6053      	str	r3, [r2, #4]
 80040e4:	e7d8      	b.n	8004098 <_free_r+0x24>
 80040e6:	d902      	bls.n	80040ee <_free_r+0x7a>
 80040e8:	230c      	movs	r3, #12
 80040ea:	602b      	str	r3, [r5, #0]
 80040ec:	e7d4      	b.n	8004098 <_free_r+0x24>
 80040ee:	6820      	ldr	r0, [r4, #0]
 80040f0:	1821      	adds	r1, r4, r0
 80040f2:	428b      	cmp	r3, r1
 80040f4:	bf01      	itttt	eq
 80040f6:	6819      	ldreq	r1, [r3, #0]
 80040f8:	685b      	ldreq	r3, [r3, #4]
 80040fa:	1809      	addeq	r1, r1, r0
 80040fc:	6021      	streq	r1, [r4, #0]
 80040fe:	6063      	str	r3, [r4, #4]
 8004100:	6054      	str	r4, [r2, #4]
 8004102:	e7c9      	b.n	8004098 <_free_r+0x24>
 8004104:	bd38      	pop	{r3, r4, r5, pc}
 8004106:	bf00      	nop
 8004108:	20001118 	.word	0x20001118

0800410c <_malloc_r>:
 800410c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800410e:	1ccd      	adds	r5, r1, #3
 8004110:	f025 0503 	bic.w	r5, r5, #3
 8004114:	3508      	adds	r5, #8
 8004116:	2d0c      	cmp	r5, #12
 8004118:	bf38      	it	cc
 800411a:	250c      	movcc	r5, #12
 800411c:	2d00      	cmp	r5, #0
 800411e:	4606      	mov	r6, r0
 8004120:	db01      	blt.n	8004126 <_malloc_r+0x1a>
 8004122:	42a9      	cmp	r1, r5
 8004124:	d903      	bls.n	800412e <_malloc_r+0x22>
 8004126:	230c      	movs	r3, #12
 8004128:	6033      	str	r3, [r6, #0]
 800412a:	2000      	movs	r0, #0
 800412c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800412e:	f000 ffaf 	bl	8005090 <__malloc_lock>
 8004132:	4921      	ldr	r1, [pc, #132]	; (80041b8 <_malloc_r+0xac>)
 8004134:	680a      	ldr	r2, [r1, #0]
 8004136:	4614      	mov	r4, r2
 8004138:	b99c      	cbnz	r4, 8004162 <_malloc_r+0x56>
 800413a:	4f20      	ldr	r7, [pc, #128]	; (80041bc <_malloc_r+0xb0>)
 800413c:	683b      	ldr	r3, [r7, #0]
 800413e:	b923      	cbnz	r3, 800414a <_malloc_r+0x3e>
 8004140:	4621      	mov	r1, r4
 8004142:	4630      	mov	r0, r6
 8004144:	f000 fc86 	bl	8004a54 <_sbrk_r>
 8004148:	6038      	str	r0, [r7, #0]
 800414a:	4629      	mov	r1, r5
 800414c:	4630      	mov	r0, r6
 800414e:	f000 fc81 	bl	8004a54 <_sbrk_r>
 8004152:	1c43      	adds	r3, r0, #1
 8004154:	d123      	bne.n	800419e <_malloc_r+0x92>
 8004156:	230c      	movs	r3, #12
 8004158:	4630      	mov	r0, r6
 800415a:	6033      	str	r3, [r6, #0]
 800415c:	f000 ff9e 	bl	800509c <__malloc_unlock>
 8004160:	e7e3      	b.n	800412a <_malloc_r+0x1e>
 8004162:	6823      	ldr	r3, [r4, #0]
 8004164:	1b5b      	subs	r3, r3, r5
 8004166:	d417      	bmi.n	8004198 <_malloc_r+0x8c>
 8004168:	2b0b      	cmp	r3, #11
 800416a:	d903      	bls.n	8004174 <_malloc_r+0x68>
 800416c:	6023      	str	r3, [r4, #0]
 800416e:	441c      	add	r4, r3
 8004170:	6025      	str	r5, [r4, #0]
 8004172:	e004      	b.n	800417e <_malloc_r+0x72>
 8004174:	6863      	ldr	r3, [r4, #4]
 8004176:	42a2      	cmp	r2, r4
 8004178:	bf0c      	ite	eq
 800417a:	600b      	streq	r3, [r1, #0]
 800417c:	6053      	strne	r3, [r2, #4]
 800417e:	4630      	mov	r0, r6
 8004180:	f000 ff8c 	bl	800509c <__malloc_unlock>
 8004184:	f104 000b 	add.w	r0, r4, #11
 8004188:	1d23      	adds	r3, r4, #4
 800418a:	f020 0007 	bic.w	r0, r0, #7
 800418e:	1ac2      	subs	r2, r0, r3
 8004190:	d0cc      	beq.n	800412c <_malloc_r+0x20>
 8004192:	1a1b      	subs	r3, r3, r0
 8004194:	50a3      	str	r3, [r4, r2]
 8004196:	e7c9      	b.n	800412c <_malloc_r+0x20>
 8004198:	4622      	mov	r2, r4
 800419a:	6864      	ldr	r4, [r4, #4]
 800419c:	e7cc      	b.n	8004138 <_malloc_r+0x2c>
 800419e:	1cc4      	adds	r4, r0, #3
 80041a0:	f024 0403 	bic.w	r4, r4, #3
 80041a4:	42a0      	cmp	r0, r4
 80041a6:	d0e3      	beq.n	8004170 <_malloc_r+0x64>
 80041a8:	1a21      	subs	r1, r4, r0
 80041aa:	4630      	mov	r0, r6
 80041ac:	f000 fc52 	bl	8004a54 <_sbrk_r>
 80041b0:	3001      	adds	r0, #1
 80041b2:	d1dd      	bne.n	8004170 <_malloc_r+0x64>
 80041b4:	e7cf      	b.n	8004156 <_malloc_r+0x4a>
 80041b6:	bf00      	nop
 80041b8:	20001118 	.word	0x20001118
 80041bc:	2000111c 	.word	0x2000111c

080041c0 <__ssputs_r>:
 80041c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80041c4:	688e      	ldr	r6, [r1, #8]
 80041c6:	4682      	mov	sl, r0
 80041c8:	429e      	cmp	r6, r3
 80041ca:	460c      	mov	r4, r1
 80041cc:	4690      	mov	r8, r2
 80041ce:	461f      	mov	r7, r3
 80041d0:	d838      	bhi.n	8004244 <__ssputs_r+0x84>
 80041d2:	898a      	ldrh	r2, [r1, #12]
 80041d4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80041d8:	d032      	beq.n	8004240 <__ssputs_r+0x80>
 80041da:	6825      	ldr	r5, [r4, #0]
 80041dc:	6909      	ldr	r1, [r1, #16]
 80041de:	3301      	adds	r3, #1
 80041e0:	eba5 0901 	sub.w	r9, r5, r1
 80041e4:	6965      	ldr	r5, [r4, #20]
 80041e6:	444b      	add	r3, r9
 80041e8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80041ec:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80041f0:	106d      	asrs	r5, r5, #1
 80041f2:	429d      	cmp	r5, r3
 80041f4:	bf38      	it	cc
 80041f6:	461d      	movcc	r5, r3
 80041f8:	0553      	lsls	r3, r2, #21
 80041fa:	d531      	bpl.n	8004260 <__ssputs_r+0xa0>
 80041fc:	4629      	mov	r1, r5
 80041fe:	f7ff ff85 	bl	800410c <_malloc_r>
 8004202:	4606      	mov	r6, r0
 8004204:	b950      	cbnz	r0, 800421c <__ssputs_r+0x5c>
 8004206:	230c      	movs	r3, #12
 8004208:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800420c:	f8ca 3000 	str.w	r3, [sl]
 8004210:	89a3      	ldrh	r3, [r4, #12]
 8004212:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004216:	81a3      	strh	r3, [r4, #12]
 8004218:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800421c:	464a      	mov	r2, r9
 800421e:	6921      	ldr	r1, [r4, #16]
 8004220:	f7ff fe08 	bl	8003e34 <memcpy>
 8004224:	89a3      	ldrh	r3, [r4, #12]
 8004226:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800422a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800422e:	81a3      	strh	r3, [r4, #12]
 8004230:	6126      	str	r6, [r4, #16]
 8004232:	444e      	add	r6, r9
 8004234:	6026      	str	r6, [r4, #0]
 8004236:	463e      	mov	r6, r7
 8004238:	6165      	str	r5, [r4, #20]
 800423a:	eba5 0509 	sub.w	r5, r5, r9
 800423e:	60a5      	str	r5, [r4, #8]
 8004240:	42be      	cmp	r6, r7
 8004242:	d900      	bls.n	8004246 <__ssputs_r+0x86>
 8004244:	463e      	mov	r6, r7
 8004246:	4632      	mov	r2, r6
 8004248:	4641      	mov	r1, r8
 800424a:	6820      	ldr	r0, [r4, #0]
 800424c:	f000 ff06 	bl	800505c <memmove>
 8004250:	68a3      	ldr	r3, [r4, #8]
 8004252:	6822      	ldr	r2, [r4, #0]
 8004254:	1b9b      	subs	r3, r3, r6
 8004256:	4432      	add	r2, r6
 8004258:	2000      	movs	r0, #0
 800425a:	60a3      	str	r3, [r4, #8]
 800425c:	6022      	str	r2, [r4, #0]
 800425e:	e7db      	b.n	8004218 <__ssputs_r+0x58>
 8004260:	462a      	mov	r2, r5
 8004262:	f000 ff21 	bl	80050a8 <_realloc_r>
 8004266:	4606      	mov	r6, r0
 8004268:	2800      	cmp	r0, #0
 800426a:	d1e1      	bne.n	8004230 <__ssputs_r+0x70>
 800426c:	4650      	mov	r0, sl
 800426e:	6921      	ldr	r1, [r4, #16]
 8004270:	f7ff ff00 	bl	8004074 <_free_r>
 8004274:	e7c7      	b.n	8004206 <__ssputs_r+0x46>
	...

08004278 <_svfiprintf_r>:
 8004278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800427c:	4698      	mov	r8, r3
 800427e:	898b      	ldrh	r3, [r1, #12]
 8004280:	4607      	mov	r7, r0
 8004282:	061b      	lsls	r3, r3, #24
 8004284:	460d      	mov	r5, r1
 8004286:	4614      	mov	r4, r2
 8004288:	b09d      	sub	sp, #116	; 0x74
 800428a:	d50e      	bpl.n	80042aa <_svfiprintf_r+0x32>
 800428c:	690b      	ldr	r3, [r1, #16]
 800428e:	b963      	cbnz	r3, 80042aa <_svfiprintf_r+0x32>
 8004290:	2140      	movs	r1, #64	; 0x40
 8004292:	f7ff ff3b 	bl	800410c <_malloc_r>
 8004296:	6028      	str	r0, [r5, #0]
 8004298:	6128      	str	r0, [r5, #16]
 800429a:	b920      	cbnz	r0, 80042a6 <_svfiprintf_r+0x2e>
 800429c:	230c      	movs	r3, #12
 800429e:	603b      	str	r3, [r7, #0]
 80042a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80042a4:	e0d1      	b.n	800444a <_svfiprintf_r+0x1d2>
 80042a6:	2340      	movs	r3, #64	; 0x40
 80042a8:	616b      	str	r3, [r5, #20]
 80042aa:	2300      	movs	r3, #0
 80042ac:	9309      	str	r3, [sp, #36]	; 0x24
 80042ae:	2320      	movs	r3, #32
 80042b0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80042b4:	2330      	movs	r3, #48	; 0x30
 80042b6:	f04f 0901 	mov.w	r9, #1
 80042ba:	f8cd 800c 	str.w	r8, [sp, #12]
 80042be:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004464 <_svfiprintf_r+0x1ec>
 80042c2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80042c6:	4623      	mov	r3, r4
 80042c8:	469a      	mov	sl, r3
 80042ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80042ce:	b10a      	cbz	r2, 80042d4 <_svfiprintf_r+0x5c>
 80042d0:	2a25      	cmp	r2, #37	; 0x25
 80042d2:	d1f9      	bne.n	80042c8 <_svfiprintf_r+0x50>
 80042d4:	ebba 0b04 	subs.w	fp, sl, r4
 80042d8:	d00b      	beq.n	80042f2 <_svfiprintf_r+0x7a>
 80042da:	465b      	mov	r3, fp
 80042dc:	4622      	mov	r2, r4
 80042de:	4629      	mov	r1, r5
 80042e0:	4638      	mov	r0, r7
 80042e2:	f7ff ff6d 	bl	80041c0 <__ssputs_r>
 80042e6:	3001      	adds	r0, #1
 80042e8:	f000 80aa 	beq.w	8004440 <_svfiprintf_r+0x1c8>
 80042ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80042ee:	445a      	add	r2, fp
 80042f0:	9209      	str	r2, [sp, #36]	; 0x24
 80042f2:	f89a 3000 	ldrb.w	r3, [sl]
 80042f6:	2b00      	cmp	r3, #0
 80042f8:	f000 80a2 	beq.w	8004440 <_svfiprintf_r+0x1c8>
 80042fc:	2300      	movs	r3, #0
 80042fe:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004302:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004306:	f10a 0a01 	add.w	sl, sl, #1
 800430a:	9304      	str	r3, [sp, #16]
 800430c:	9307      	str	r3, [sp, #28]
 800430e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004312:	931a      	str	r3, [sp, #104]	; 0x68
 8004314:	4654      	mov	r4, sl
 8004316:	2205      	movs	r2, #5
 8004318:	f814 1b01 	ldrb.w	r1, [r4], #1
 800431c:	4851      	ldr	r0, [pc, #324]	; (8004464 <_svfiprintf_r+0x1ec>)
 800431e:	f000 fe8f 	bl	8005040 <memchr>
 8004322:	9a04      	ldr	r2, [sp, #16]
 8004324:	b9d8      	cbnz	r0, 800435e <_svfiprintf_r+0xe6>
 8004326:	06d0      	lsls	r0, r2, #27
 8004328:	bf44      	itt	mi
 800432a:	2320      	movmi	r3, #32
 800432c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004330:	0711      	lsls	r1, r2, #28
 8004332:	bf44      	itt	mi
 8004334:	232b      	movmi	r3, #43	; 0x2b
 8004336:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800433a:	f89a 3000 	ldrb.w	r3, [sl]
 800433e:	2b2a      	cmp	r3, #42	; 0x2a
 8004340:	d015      	beq.n	800436e <_svfiprintf_r+0xf6>
 8004342:	4654      	mov	r4, sl
 8004344:	2000      	movs	r0, #0
 8004346:	f04f 0c0a 	mov.w	ip, #10
 800434a:	9a07      	ldr	r2, [sp, #28]
 800434c:	4621      	mov	r1, r4
 800434e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004352:	3b30      	subs	r3, #48	; 0x30
 8004354:	2b09      	cmp	r3, #9
 8004356:	d94e      	bls.n	80043f6 <_svfiprintf_r+0x17e>
 8004358:	b1b0      	cbz	r0, 8004388 <_svfiprintf_r+0x110>
 800435a:	9207      	str	r2, [sp, #28]
 800435c:	e014      	b.n	8004388 <_svfiprintf_r+0x110>
 800435e:	eba0 0308 	sub.w	r3, r0, r8
 8004362:	fa09 f303 	lsl.w	r3, r9, r3
 8004366:	4313      	orrs	r3, r2
 8004368:	46a2      	mov	sl, r4
 800436a:	9304      	str	r3, [sp, #16]
 800436c:	e7d2      	b.n	8004314 <_svfiprintf_r+0x9c>
 800436e:	9b03      	ldr	r3, [sp, #12]
 8004370:	1d19      	adds	r1, r3, #4
 8004372:	681b      	ldr	r3, [r3, #0]
 8004374:	9103      	str	r1, [sp, #12]
 8004376:	2b00      	cmp	r3, #0
 8004378:	bfbb      	ittet	lt
 800437a:	425b      	neglt	r3, r3
 800437c:	f042 0202 	orrlt.w	r2, r2, #2
 8004380:	9307      	strge	r3, [sp, #28]
 8004382:	9307      	strlt	r3, [sp, #28]
 8004384:	bfb8      	it	lt
 8004386:	9204      	strlt	r2, [sp, #16]
 8004388:	7823      	ldrb	r3, [r4, #0]
 800438a:	2b2e      	cmp	r3, #46	; 0x2e
 800438c:	d10c      	bne.n	80043a8 <_svfiprintf_r+0x130>
 800438e:	7863      	ldrb	r3, [r4, #1]
 8004390:	2b2a      	cmp	r3, #42	; 0x2a
 8004392:	d135      	bne.n	8004400 <_svfiprintf_r+0x188>
 8004394:	9b03      	ldr	r3, [sp, #12]
 8004396:	3402      	adds	r4, #2
 8004398:	1d1a      	adds	r2, r3, #4
 800439a:	681b      	ldr	r3, [r3, #0]
 800439c:	9203      	str	r2, [sp, #12]
 800439e:	2b00      	cmp	r3, #0
 80043a0:	bfb8      	it	lt
 80043a2:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80043a6:	9305      	str	r3, [sp, #20]
 80043a8:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8004474 <_svfiprintf_r+0x1fc>
 80043ac:	2203      	movs	r2, #3
 80043ae:	4650      	mov	r0, sl
 80043b0:	7821      	ldrb	r1, [r4, #0]
 80043b2:	f000 fe45 	bl	8005040 <memchr>
 80043b6:	b140      	cbz	r0, 80043ca <_svfiprintf_r+0x152>
 80043b8:	2340      	movs	r3, #64	; 0x40
 80043ba:	eba0 000a 	sub.w	r0, r0, sl
 80043be:	fa03 f000 	lsl.w	r0, r3, r0
 80043c2:	9b04      	ldr	r3, [sp, #16]
 80043c4:	3401      	adds	r4, #1
 80043c6:	4303      	orrs	r3, r0
 80043c8:	9304      	str	r3, [sp, #16]
 80043ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 80043ce:	2206      	movs	r2, #6
 80043d0:	4825      	ldr	r0, [pc, #148]	; (8004468 <_svfiprintf_r+0x1f0>)
 80043d2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80043d6:	f000 fe33 	bl	8005040 <memchr>
 80043da:	2800      	cmp	r0, #0
 80043dc:	d038      	beq.n	8004450 <_svfiprintf_r+0x1d8>
 80043de:	4b23      	ldr	r3, [pc, #140]	; (800446c <_svfiprintf_r+0x1f4>)
 80043e0:	bb1b      	cbnz	r3, 800442a <_svfiprintf_r+0x1b2>
 80043e2:	9b03      	ldr	r3, [sp, #12]
 80043e4:	3307      	adds	r3, #7
 80043e6:	f023 0307 	bic.w	r3, r3, #7
 80043ea:	3308      	adds	r3, #8
 80043ec:	9303      	str	r3, [sp, #12]
 80043ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043f0:	4433      	add	r3, r6
 80043f2:	9309      	str	r3, [sp, #36]	; 0x24
 80043f4:	e767      	b.n	80042c6 <_svfiprintf_r+0x4e>
 80043f6:	460c      	mov	r4, r1
 80043f8:	2001      	movs	r0, #1
 80043fa:	fb0c 3202 	mla	r2, ip, r2, r3
 80043fe:	e7a5      	b.n	800434c <_svfiprintf_r+0xd4>
 8004400:	2300      	movs	r3, #0
 8004402:	f04f 0c0a 	mov.w	ip, #10
 8004406:	4619      	mov	r1, r3
 8004408:	3401      	adds	r4, #1
 800440a:	9305      	str	r3, [sp, #20]
 800440c:	4620      	mov	r0, r4
 800440e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004412:	3a30      	subs	r2, #48	; 0x30
 8004414:	2a09      	cmp	r2, #9
 8004416:	d903      	bls.n	8004420 <_svfiprintf_r+0x1a8>
 8004418:	2b00      	cmp	r3, #0
 800441a:	d0c5      	beq.n	80043a8 <_svfiprintf_r+0x130>
 800441c:	9105      	str	r1, [sp, #20]
 800441e:	e7c3      	b.n	80043a8 <_svfiprintf_r+0x130>
 8004420:	4604      	mov	r4, r0
 8004422:	2301      	movs	r3, #1
 8004424:	fb0c 2101 	mla	r1, ip, r1, r2
 8004428:	e7f0      	b.n	800440c <_svfiprintf_r+0x194>
 800442a:	ab03      	add	r3, sp, #12
 800442c:	9300      	str	r3, [sp, #0]
 800442e:	462a      	mov	r2, r5
 8004430:	4638      	mov	r0, r7
 8004432:	4b0f      	ldr	r3, [pc, #60]	; (8004470 <_svfiprintf_r+0x1f8>)
 8004434:	a904      	add	r1, sp, #16
 8004436:	f3af 8000 	nop.w
 800443a:	1c42      	adds	r2, r0, #1
 800443c:	4606      	mov	r6, r0
 800443e:	d1d6      	bne.n	80043ee <_svfiprintf_r+0x176>
 8004440:	89ab      	ldrh	r3, [r5, #12]
 8004442:	065b      	lsls	r3, r3, #25
 8004444:	f53f af2c 	bmi.w	80042a0 <_svfiprintf_r+0x28>
 8004448:	9809      	ldr	r0, [sp, #36]	; 0x24
 800444a:	b01d      	add	sp, #116	; 0x74
 800444c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004450:	ab03      	add	r3, sp, #12
 8004452:	9300      	str	r3, [sp, #0]
 8004454:	462a      	mov	r2, r5
 8004456:	4638      	mov	r0, r7
 8004458:	4b05      	ldr	r3, [pc, #20]	; (8004470 <_svfiprintf_r+0x1f8>)
 800445a:	a904      	add	r1, sp, #16
 800445c:	f000 f9d4 	bl	8004808 <_printf_i>
 8004460:	e7eb      	b.n	800443a <_svfiprintf_r+0x1c2>
 8004462:	bf00      	nop
 8004464:	08005462 	.word	0x08005462
 8004468:	0800546c 	.word	0x0800546c
 800446c:	00000000 	.word	0x00000000
 8004470:	080041c1 	.word	0x080041c1
 8004474:	08005468 	.word	0x08005468

08004478 <__sfputc_r>:
 8004478:	6893      	ldr	r3, [r2, #8]
 800447a:	b410      	push	{r4}
 800447c:	3b01      	subs	r3, #1
 800447e:	2b00      	cmp	r3, #0
 8004480:	6093      	str	r3, [r2, #8]
 8004482:	da07      	bge.n	8004494 <__sfputc_r+0x1c>
 8004484:	6994      	ldr	r4, [r2, #24]
 8004486:	42a3      	cmp	r3, r4
 8004488:	db01      	blt.n	800448e <__sfputc_r+0x16>
 800448a:	290a      	cmp	r1, #10
 800448c:	d102      	bne.n	8004494 <__sfputc_r+0x1c>
 800448e:	bc10      	pop	{r4}
 8004490:	f000 baf0 	b.w	8004a74 <__swbuf_r>
 8004494:	6813      	ldr	r3, [r2, #0]
 8004496:	1c58      	adds	r0, r3, #1
 8004498:	6010      	str	r0, [r2, #0]
 800449a:	7019      	strb	r1, [r3, #0]
 800449c:	4608      	mov	r0, r1
 800449e:	bc10      	pop	{r4}
 80044a0:	4770      	bx	lr

080044a2 <__sfputs_r>:
 80044a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044a4:	4606      	mov	r6, r0
 80044a6:	460f      	mov	r7, r1
 80044a8:	4614      	mov	r4, r2
 80044aa:	18d5      	adds	r5, r2, r3
 80044ac:	42ac      	cmp	r4, r5
 80044ae:	d101      	bne.n	80044b4 <__sfputs_r+0x12>
 80044b0:	2000      	movs	r0, #0
 80044b2:	e007      	b.n	80044c4 <__sfputs_r+0x22>
 80044b4:	463a      	mov	r2, r7
 80044b6:	4630      	mov	r0, r6
 80044b8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80044bc:	f7ff ffdc 	bl	8004478 <__sfputc_r>
 80044c0:	1c43      	adds	r3, r0, #1
 80044c2:	d1f3      	bne.n	80044ac <__sfputs_r+0xa>
 80044c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080044c8 <_vfiprintf_r>:
 80044c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044cc:	460d      	mov	r5, r1
 80044ce:	4614      	mov	r4, r2
 80044d0:	4698      	mov	r8, r3
 80044d2:	4606      	mov	r6, r0
 80044d4:	b09d      	sub	sp, #116	; 0x74
 80044d6:	b118      	cbz	r0, 80044e0 <_vfiprintf_r+0x18>
 80044d8:	6983      	ldr	r3, [r0, #24]
 80044da:	b90b      	cbnz	r3, 80044e0 <_vfiprintf_r+0x18>
 80044dc:	f000 fcac 	bl	8004e38 <__sinit>
 80044e0:	4b89      	ldr	r3, [pc, #548]	; (8004708 <_vfiprintf_r+0x240>)
 80044e2:	429d      	cmp	r5, r3
 80044e4:	d11b      	bne.n	800451e <_vfiprintf_r+0x56>
 80044e6:	6875      	ldr	r5, [r6, #4]
 80044e8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80044ea:	07d9      	lsls	r1, r3, #31
 80044ec:	d405      	bmi.n	80044fa <_vfiprintf_r+0x32>
 80044ee:	89ab      	ldrh	r3, [r5, #12]
 80044f0:	059a      	lsls	r2, r3, #22
 80044f2:	d402      	bmi.n	80044fa <_vfiprintf_r+0x32>
 80044f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80044f6:	f000 fd3d 	bl	8004f74 <__retarget_lock_acquire_recursive>
 80044fa:	89ab      	ldrh	r3, [r5, #12]
 80044fc:	071b      	lsls	r3, r3, #28
 80044fe:	d501      	bpl.n	8004504 <_vfiprintf_r+0x3c>
 8004500:	692b      	ldr	r3, [r5, #16]
 8004502:	b9eb      	cbnz	r3, 8004540 <_vfiprintf_r+0x78>
 8004504:	4629      	mov	r1, r5
 8004506:	4630      	mov	r0, r6
 8004508:	f000 fb06 	bl	8004b18 <__swsetup_r>
 800450c:	b1c0      	cbz	r0, 8004540 <_vfiprintf_r+0x78>
 800450e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004510:	07dc      	lsls	r4, r3, #31
 8004512:	d50e      	bpl.n	8004532 <_vfiprintf_r+0x6a>
 8004514:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004518:	b01d      	add	sp, #116	; 0x74
 800451a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800451e:	4b7b      	ldr	r3, [pc, #492]	; (800470c <_vfiprintf_r+0x244>)
 8004520:	429d      	cmp	r5, r3
 8004522:	d101      	bne.n	8004528 <_vfiprintf_r+0x60>
 8004524:	68b5      	ldr	r5, [r6, #8]
 8004526:	e7df      	b.n	80044e8 <_vfiprintf_r+0x20>
 8004528:	4b79      	ldr	r3, [pc, #484]	; (8004710 <_vfiprintf_r+0x248>)
 800452a:	429d      	cmp	r5, r3
 800452c:	bf08      	it	eq
 800452e:	68f5      	ldreq	r5, [r6, #12]
 8004530:	e7da      	b.n	80044e8 <_vfiprintf_r+0x20>
 8004532:	89ab      	ldrh	r3, [r5, #12]
 8004534:	0598      	lsls	r0, r3, #22
 8004536:	d4ed      	bmi.n	8004514 <_vfiprintf_r+0x4c>
 8004538:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800453a:	f000 fd1c 	bl	8004f76 <__retarget_lock_release_recursive>
 800453e:	e7e9      	b.n	8004514 <_vfiprintf_r+0x4c>
 8004540:	2300      	movs	r3, #0
 8004542:	9309      	str	r3, [sp, #36]	; 0x24
 8004544:	2320      	movs	r3, #32
 8004546:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800454a:	2330      	movs	r3, #48	; 0x30
 800454c:	f04f 0901 	mov.w	r9, #1
 8004550:	f8cd 800c 	str.w	r8, [sp, #12]
 8004554:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8004714 <_vfiprintf_r+0x24c>
 8004558:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800455c:	4623      	mov	r3, r4
 800455e:	469a      	mov	sl, r3
 8004560:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004564:	b10a      	cbz	r2, 800456a <_vfiprintf_r+0xa2>
 8004566:	2a25      	cmp	r2, #37	; 0x25
 8004568:	d1f9      	bne.n	800455e <_vfiprintf_r+0x96>
 800456a:	ebba 0b04 	subs.w	fp, sl, r4
 800456e:	d00b      	beq.n	8004588 <_vfiprintf_r+0xc0>
 8004570:	465b      	mov	r3, fp
 8004572:	4622      	mov	r2, r4
 8004574:	4629      	mov	r1, r5
 8004576:	4630      	mov	r0, r6
 8004578:	f7ff ff93 	bl	80044a2 <__sfputs_r>
 800457c:	3001      	adds	r0, #1
 800457e:	f000 80aa 	beq.w	80046d6 <_vfiprintf_r+0x20e>
 8004582:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004584:	445a      	add	r2, fp
 8004586:	9209      	str	r2, [sp, #36]	; 0x24
 8004588:	f89a 3000 	ldrb.w	r3, [sl]
 800458c:	2b00      	cmp	r3, #0
 800458e:	f000 80a2 	beq.w	80046d6 <_vfiprintf_r+0x20e>
 8004592:	2300      	movs	r3, #0
 8004594:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004598:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800459c:	f10a 0a01 	add.w	sl, sl, #1
 80045a0:	9304      	str	r3, [sp, #16]
 80045a2:	9307      	str	r3, [sp, #28]
 80045a4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80045a8:	931a      	str	r3, [sp, #104]	; 0x68
 80045aa:	4654      	mov	r4, sl
 80045ac:	2205      	movs	r2, #5
 80045ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045b2:	4858      	ldr	r0, [pc, #352]	; (8004714 <_vfiprintf_r+0x24c>)
 80045b4:	f000 fd44 	bl	8005040 <memchr>
 80045b8:	9a04      	ldr	r2, [sp, #16]
 80045ba:	b9d8      	cbnz	r0, 80045f4 <_vfiprintf_r+0x12c>
 80045bc:	06d1      	lsls	r1, r2, #27
 80045be:	bf44      	itt	mi
 80045c0:	2320      	movmi	r3, #32
 80045c2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80045c6:	0713      	lsls	r3, r2, #28
 80045c8:	bf44      	itt	mi
 80045ca:	232b      	movmi	r3, #43	; 0x2b
 80045cc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80045d0:	f89a 3000 	ldrb.w	r3, [sl]
 80045d4:	2b2a      	cmp	r3, #42	; 0x2a
 80045d6:	d015      	beq.n	8004604 <_vfiprintf_r+0x13c>
 80045d8:	4654      	mov	r4, sl
 80045da:	2000      	movs	r0, #0
 80045dc:	f04f 0c0a 	mov.w	ip, #10
 80045e0:	9a07      	ldr	r2, [sp, #28]
 80045e2:	4621      	mov	r1, r4
 80045e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80045e8:	3b30      	subs	r3, #48	; 0x30
 80045ea:	2b09      	cmp	r3, #9
 80045ec:	d94e      	bls.n	800468c <_vfiprintf_r+0x1c4>
 80045ee:	b1b0      	cbz	r0, 800461e <_vfiprintf_r+0x156>
 80045f0:	9207      	str	r2, [sp, #28]
 80045f2:	e014      	b.n	800461e <_vfiprintf_r+0x156>
 80045f4:	eba0 0308 	sub.w	r3, r0, r8
 80045f8:	fa09 f303 	lsl.w	r3, r9, r3
 80045fc:	4313      	orrs	r3, r2
 80045fe:	46a2      	mov	sl, r4
 8004600:	9304      	str	r3, [sp, #16]
 8004602:	e7d2      	b.n	80045aa <_vfiprintf_r+0xe2>
 8004604:	9b03      	ldr	r3, [sp, #12]
 8004606:	1d19      	adds	r1, r3, #4
 8004608:	681b      	ldr	r3, [r3, #0]
 800460a:	9103      	str	r1, [sp, #12]
 800460c:	2b00      	cmp	r3, #0
 800460e:	bfbb      	ittet	lt
 8004610:	425b      	neglt	r3, r3
 8004612:	f042 0202 	orrlt.w	r2, r2, #2
 8004616:	9307      	strge	r3, [sp, #28]
 8004618:	9307      	strlt	r3, [sp, #28]
 800461a:	bfb8      	it	lt
 800461c:	9204      	strlt	r2, [sp, #16]
 800461e:	7823      	ldrb	r3, [r4, #0]
 8004620:	2b2e      	cmp	r3, #46	; 0x2e
 8004622:	d10c      	bne.n	800463e <_vfiprintf_r+0x176>
 8004624:	7863      	ldrb	r3, [r4, #1]
 8004626:	2b2a      	cmp	r3, #42	; 0x2a
 8004628:	d135      	bne.n	8004696 <_vfiprintf_r+0x1ce>
 800462a:	9b03      	ldr	r3, [sp, #12]
 800462c:	3402      	adds	r4, #2
 800462e:	1d1a      	adds	r2, r3, #4
 8004630:	681b      	ldr	r3, [r3, #0]
 8004632:	9203      	str	r2, [sp, #12]
 8004634:	2b00      	cmp	r3, #0
 8004636:	bfb8      	it	lt
 8004638:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800463c:	9305      	str	r3, [sp, #20]
 800463e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8004724 <_vfiprintf_r+0x25c>
 8004642:	2203      	movs	r2, #3
 8004644:	4650      	mov	r0, sl
 8004646:	7821      	ldrb	r1, [r4, #0]
 8004648:	f000 fcfa 	bl	8005040 <memchr>
 800464c:	b140      	cbz	r0, 8004660 <_vfiprintf_r+0x198>
 800464e:	2340      	movs	r3, #64	; 0x40
 8004650:	eba0 000a 	sub.w	r0, r0, sl
 8004654:	fa03 f000 	lsl.w	r0, r3, r0
 8004658:	9b04      	ldr	r3, [sp, #16]
 800465a:	3401      	adds	r4, #1
 800465c:	4303      	orrs	r3, r0
 800465e:	9304      	str	r3, [sp, #16]
 8004660:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004664:	2206      	movs	r2, #6
 8004666:	482c      	ldr	r0, [pc, #176]	; (8004718 <_vfiprintf_r+0x250>)
 8004668:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800466c:	f000 fce8 	bl	8005040 <memchr>
 8004670:	2800      	cmp	r0, #0
 8004672:	d03f      	beq.n	80046f4 <_vfiprintf_r+0x22c>
 8004674:	4b29      	ldr	r3, [pc, #164]	; (800471c <_vfiprintf_r+0x254>)
 8004676:	bb1b      	cbnz	r3, 80046c0 <_vfiprintf_r+0x1f8>
 8004678:	9b03      	ldr	r3, [sp, #12]
 800467a:	3307      	adds	r3, #7
 800467c:	f023 0307 	bic.w	r3, r3, #7
 8004680:	3308      	adds	r3, #8
 8004682:	9303      	str	r3, [sp, #12]
 8004684:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004686:	443b      	add	r3, r7
 8004688:	9309      	str	r3, [sp, #36]	; 0x24
 800468a:	e767      	b.n	800455c <_vfiprintf_r+0x94>
 800468c:	460c      	mov	r4, r1
 800468e:	2001      	movs	r0, #1
 8004690:	fb0c 3202 	mla	r2, ip, r2, r3
 8004694:	e7a5      	b.n	80045e2 <_vfiprintf_r+0x11a>
 8004696:	2300      	movs	r3, #0
 8004698:	f04f 0c0a 	mov.w	ip, #10
 800469c:	4619      	mov	r1, r3
 800469e:	3401      	adds	r4, #1
 80046a0:	9305      	str	r3, [sp, #20]
 80046a2:	4620      	mov	r0, r4
 80046a4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80046a8:	3a30      	subs	r2, #48	; 0x30
 80046aa:	2a09      	cmp	r2, #9
 80046ac:	d903      	bls.n	80046b6 <_vfiprintf_r+0x1ee>
 80046ae:	2b00      	cmp	r3, #0
 80046b0:	d0c5      	beq.n	800463e <_vfiprintf_r+0x176>
 80046b2:	9105      	str	r1, [sp, #20]
 80046b4:	e7c3      	b.n	800463e <_vfiprintf_r+0x176>
 80046b6:	4604      	mov	r4, r0
 80046b8:	2301      	movs	r3, #1
 80046ba:	fb0c 2101 	mla	r1, ip, r1, r2
 80046be:	e7f0      	b.n	80046a2 <_vfiprintf_r+0x1da>
 80046c0:	ab03      	add	r3, sp, #12
 80046c2:	9300      	str	r3, [sp, #0]
 80046c4:	462a      	mov	r2, r5
 80046c6:	4630      	mov	r0, r6
 80046c8:	4b15      	ldr	r3, [pc, #84]	; (8004720 <_vfiprintf_r+0x258>)
 80046ca:	a904      	add	r1, sp, #16
 80046cc:	f3af 8000 	nop.w
 80046d0:	4607      	mov	r7, r0
 80046d2:	1c78      	adds	r0, r7, #1
 80046d4:	d1d6      	bne.n	8004684 <_vfiprintf_r+0x1bc>
 80046d6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80046d8:	07d9      	lsls	r1, r3, #31
 80046da:	d405      	bmi.n	80046e8 <_vfiprintf_r+0x220>
 80046dc:	89ab      	ldrh	r3, [r5, #12]
 80046de:	059a      	lsls	r2, r3, #22
 80046e0:	d402      	bmi.n	80046e8 <_vfiprintf_r+0x220>
 80046e2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80046e4:	f000 fc47 	bl	8004f76 <__retarget_lock_release_recursive>
 80046e8:	89ab      	ldrh	r3, [r5, #12]
 80046ea:	065b      	lsls	r3, r3, #25
 80046ec:	f53f af12 	bmi.w	8004514 <_vfiprintf_r+0x4c>
 80046f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80046f2:	e711      	b.n	8004518 <_vfiprintf_r+0x50>
 80046f4:	ab03      	add	r3, sp, #12
 80046f6:	9300      	str	r3, [sp, #0]
 80046f8:	462a      	mov	r2, r5
 80046fa:	4630      	mov	r0, r6
 80046fc:	4b08      	ldr	r3, [pc, #32]	; (8004720 <_vfiprintf_r+0x258>)
 80046fe:	a904      	add	r1, sp, #16
 8004700:	f000 f882 	bl	8004808 <_printf_i>
 8004704:	e7e4      	b.n	80046d0 <_vfiprintf_r+0x208>
 8004706:	bf00      	nop
 8004708:	080054b8 	.word	0x080054b8
 800470c:	080054d8 	.word	0x080054d8
 8004710:	08005498 	.word	0x08005498
 8004714:	08005462 	.word	0x08005462
 8004718:	0800546c 	.word	0x0800546c
 800471c:	00000000 	.word	0x00000000
 8004720:	080044a3 	.word	0x080044a3
 8004724:	08005468 	.word	0x08005468

08004728 <_printf_common>:
 8004728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800472c:	4616      	mov	r6, r2
 800472e:	4699      	mov	r9, r3
 8004730:	688a      	ldr	r2, [r1, #8]
 8004732:	690b      	ldr	r3, [r1, #16]
 8004734:	4607      	mov	r7, r0
 8004736:	4293      	cmp	r3, r2
 8004738:	bfb8      	it	lt
 800473a:	4613      	movlt	r3, r2
 800473c:	6033      	str	r3, [r6, #0]
 800473e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004742:	460c      	mov	r4, r1
 8004744:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004748:	b10a      	cbz	r2, 800474e <_printf_common+0x26>
 800474a:	3301      	adds	r3, #1
 800474c:	6033      	str	r3, [r6, #0]
 800474e:	6823      	ldr	r3, [r4, #0]
 8004750:	0699      	lsls	r1, r3, #26
 8004752:	bf42      	ittt	mi
 8004754:	6833      	ldrmi	r3, [r6, #0]
 8004756:	3302      	addmi	r3, #2
 8004758:	6033      	strmi	r3, [r6, #0]
 800475a:	6825      	ldr	r5, [r4, #0]
 800475c:	f015 0506 	ands.w	r5, r5, #6
 8004760:	d106      	bne.n	8004770 <_printf_common+0x48>
 8004762:	f104 0a19 	add.w	sl, r4, #25
 8004766:	68e3      	ldr	r3, [r4, #12]
 8004768:	6832      	ldr	r2, [r6, #0]
 800476a:	1a9b      	subs	r3, r3, r2
 800476c:	42ab      	cmp	r3, r5
 800476e:	dc28      	bgt.n	80047c2 <_printf_common+0x9a>
 8004770:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004774:	1e13      	subs	r3, r2, #0
 8004776:	6822      	ldr	r2, [r4, #0]
 8004778:	bf18      	it	ne
 800477a:	2301      	movne	r3, #1
 800477c:	0692      	lsls	r2, r2, #26
 800477e:	d42d      	bmi.n	80047dc <_printf_common+0xb4>
 8004780:	4649      	mov	r1, r9
 8004782:	4638      	mov	r0, r7
 8004784:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004788:	47c0      	blx	r8
 800478a:	3001      	adds	r0, #1
 800478c:	d020      	beq.n	80047d0 <_printf_common+0xa8>
 800478e:	6823      	ldr	r3, [r4, #0]
 8004790:	68e5      	ldr	r5, [r4, #12]
 8004792:	f003 0306 	and.w	r3, r3, #6
 8004796:	2b04      	cmp	r3, #4
 8004798:	bf18      	it	ne
 800479a:	2500      	movne	r5, #0
 800479c:	6832      	ldr	r2, [r6, #0]
 800479e:	f04f 0600 	mov.w	r6, #0
 80047a2:	68a3      	ldr	r3, [r4, #8]
 80047a4:	bf08      	it	eq
 80047a6:	1aad      	subeq	r5, r5, r2
 80047a8:	6922      	ldr	r2, [r4, #16]
 80047aa:	bf08      	it	eq
 80047ac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80047b0:	4293      	cmp	r3, r2
 80047b2:	bfc4      	itt	gt
 80047b4:	1a9b      	subgt	r3, r3, r2
 80047b6:	18ed      	addgt	r5, r5, r3
 80047b8:	341a      	adds	r4, #26
 80047ba:	42b5      	cmp	r5, r6
 80047bc:	d11a      	bne.n	80047f4 <_printf_common+0xcc>
 80047be:	2000      	movs	r0, #0
 80047c0:	e008      	b.n	80047d4 <_printf_common+0xac>
 80047c2:	2301      	movs	r3, #1
 80047c4:	4652      	mov	r2, sl
 80047c6:	4649      	mov	r1, r9
 80047c8:	4638      	mov	r0, r7
 80047ca:	47c0      	blx	r8
 80047cc:	3001      	adds	r0, #1
 80047ce:	d103      	bne.n	80047d8 <_printf_common+0xb0>
 80047d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80047d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80047d8:	3501      	adds	r5, #1
 80047da:	e7c4      	b.n	8004766 <_printf_common+0x3e>
 80047dc:	2030      	movs	r0, #48	; 0x30
 80047de:	18e1      	adds	r1, r4, r3
 80047e0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80047e4:	1c5a      	adds	r2, r3, #1
 80047e6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80047ea:	4422      	add	r2, r4
 80047ec:	3302      	adds	r3, #2
 80047ee:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80047f2:	e7c5      	b.n	8004780 <_printf_common+0x58>
 80047f4:	2301      	movs	r3, #1
 80047f6:	4622      	mov	r2, r4
 80047f8:	4649      	mov	r1, r9
 80047fa:	4638      	mov	r0, r7
 80047fc:	47c0      	blx	r8
 80047fe:	3001      	adds	r0, #1
 8004800:	d0e6      	beq.n	80047d0 <_printf_common+0xa8>
 8004802:	3601      	adds	r6, #1
 8004804:	e7d9      	b.n	80047ba <_printf_common+0x92>
	...

08004808 <_printf_i>:
 8004808:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800480c:	460c      	mov	r4, r1
 800480e:	7e27      	ldrb	r7, [r4, #24]
 8004810:	4691      	mov	r9, r2
 8004812:	2f78      	cmp	r7, #120	; 0x78
 8004814:	4680      	mov	r8, r0
 8004816:	469a      	mov	sl, r3
 8004818:	990c      	ldr	r1, [sp, #48]	; 0x30
 800481a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800481e:	d807      	bhi.n	8004830 <_printf_i+0x28>
 8004820:	2f62      	cmp	r7, #98	; 0x62
 8004822:	d80a      	bhi.n	800483a <_printf_i+0x32>
 8004824:	2f00      	cmp	r7, #0
 8004826:	f000 80d9 	beq.w	80049dc <_printf_i+0x1d4>
 800482a:	2f58      	cmp	r7, #88	; 0x58
 800482c:	f000 80a4 	beq.w	8004978 <_printf_i+0x170>
 8004830:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004834:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004838:	e03a      	b.n	80048b0 <_printf_i+0xa8>
 800483a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800483e:	2b15      	cmp	r3, #21
 8004840:	d8f6      	bhi.n	8004830 <_printf_i+0x28>
 8004842:	a001      	add	r0, pc, #4	; (adr r0, 8004848 <_printf_i+0x40>)
 8004844:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8004848:	080048a1 	.word	0x080048a1
 800484c:	080048b5 	.word	0x080048b5
 8004850:	08004831 	.word	0x08004831
 8004854:	08004831 	.word	0x08004831
 8004858:	08004831 	.word	0x08004831
 800485c:	08004831 	.word	0x08004831
 8004860:	080048b5 	.word	0x080048b5
 8004864:	08004831 	.word	0x08004831
 8004868:	08004831 	.word	0x08004831
 800486c:	08004831 	.word	0x08004831
 8004870:	08004831 	.word	0x08004831
 8004874:	080049c3 	.word	0x080049c3
 8004878:	080048e5 	.word	0x080048e5
 800487c:	080049a5 	.word	0x080049a5
 8004880:	08004831 	.word	0x08004831
 8004884:	08004831 	.word	0x08004831
 8004888:	080049e5 	.word	0x080049e5
 800488c:	08004831 	.word	0x08004831
 8004890:	080048e5 	.word	0x080048e5
 8004894:	08004831 	.word	0x08004831
 8004898:	08004831 	.word	0x08004831
 800489c:	080049ad 	.word	0x080049ad
 80048a0:	680b      	ldr	r3, [r1, #0]
 80048a2:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80048a6:	1d1a      	adds	r2, r3, #4
 80048a8:	681b      	ldr	r3, [r3, #0]
 80048aa:	600a      	str	r2, [r1, #0]
 80048ac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80048b0:	2301      	movs	r3, #1
 80048b2:	e0a4      	b.n	80049fe <_printf_i+0x1f6>
 80048b4:	6825      	ldr	r5, [r4, #0]
 80048b6:	6808      	ldr	r0, [r1, #0]
 80048b8:	062e      	lsls	r6, r5, #24
 80048ba:	f100 0304 	add.w	r3, r0, #4
 80048be:	d50a      	bpl.n	80048d6 <_printf_i+0xce>
 80048c0:	6805      	ldr	r5, [r0, #0]
 80048c2:	600b      	str	r3, [r1, #0]
 80048c4:	2d00      	cmp	r5, #0
 80048c6:	da03      	bge.n	80048d0 <_printf_i+0xc8>
 80048c8:	232d      	movs	r3, #45	; 0x2d
 80048ca:	426d      	negs	r5, r5
 80048cc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80048d0:	230a      	movs	r3, #10
 80048d2:	485e      	ldr	r0, [pc, #376]	; (8004a4c <_printf_i+0x244>)
 80048d4:	e019      	b.n	800490a <_printf_i+0x102>
 80048d6:	f015 0f40 	tst.w	r5, #64	; 0x40
 80048da:	6805      	ldr	r5, [r0, #0]
 80048dc:	600b      	str	r3, [r1, #0]
 80048de:	bf18      	it	ne
 80048e0:	b22d      	sxthne	r5, r5
 80048e2:	e7ef      	b.n	80048c4 <_printf_i+0xbc>
 80048e4:	680b      	ldr	r3, [r1, #0]
 80048e6:	6825      	ldr	r5, [r4, #0]
 80048e8:	1d18      	adds	r0, r3, #4
 80048ea:	6008      	str	r0, [r1, #0]
 80048ec:	0628      	lsls	r0, r5, #24
 80048ee:	d501      	bpl.n	80048f4 <_printf_i+0xec>
 80048f0:	681d      	ldr	r5, [r3, #0]
 80048f2:	e002      	b.n	80048fa <_printf_i+0xf2>
 80048f4:	0669      	lsls	r1, r5, #25
 80048f6:	d5fb      	bpl.n	80048f0 <_printf_i+0xe8>
 80048f8:	881d      	ldrh	r5, [r3, #0]
 80048fa:	2f6f      	cmp	r7, #111	; 0x6f
 80048fc:	bf0c      	ite	eq
 80048fe:	2308      	moveq	r3, #8
 8004900:	230a      	movne	r3, #10
 8004902:	4852      	ldr	r0, [pc, #328]	; (8004a4c <_printf_i+0x244>)
 8004904:	2100      	movs	r1, #0
 8004906:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800490a:	6866      	ldr	r6, [r4, #4]
 800490c:	2e00      	cmp	r6, #0
 800490e:	bfa8      	it	ge
 8004910:	6821      	ldrge	r1, [r4, #0]
 8004912:	60a6      	str	r6, [r4, #8]
 8004914:	bfa4      	itt	ge
 8004916:	f021 0104 	bicge.w	r1, r1, #4
 800491a:	6021      	strge	r1, [r4, #0]
 800491c:	b90d      	cbnz	r5, 8004922 <_printf_i+0x11a>
 800491e:	2e00      	cmp	r6, #0
 8004920:	d04d      	beq.n	80049be <_printf_i+0x1b6>
 8004922:	4616      	mov	r6, r2
 8004924:	fbb5 f1f3 	udiv	r1, r5, r3
 8004928:	fb03 5711 	mls	r7, r3, r1, r5
 800492c:	5dc7      	ldrb	r7, [r0, r7]
 800492e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004932:	462f      	mov	r7, r5
 8004934:	42bb      	cmp	r3, r7
 8004936:	460d      	mov	r5, r1
 8004938:	d9f4      	bls.n	8004924 <_printf_i+0x11c>
 800493a:	2b08      	cmp	r3, #8
 800493c:	d10b      	bne.n	8004956 <_printf_i+0x14e>
 800493e:	6823      	ldr	r3, [r4, #0]
 8004940:	07df      	lsls	r7, r3, #31
 8004942:	d508      	bpl.n	8004956 <_printf_i+0x14e>
 8004944:	6923      	ldr	r3, [r4, #16]
 8004946:	6861      	ldr	r1, [r4, #4]
 8004948:	4299      	cmp	r1, r3
 800494a:	bfde      	ittt	le
 800494c:	2330      	movle	r3, #48	; 0x30
 800494e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004952:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8004956:	1b92      	subs	r2, r2, r6
 8004958:	6122      	str	r2, [r4, #16]
 800495a:	464b      	mov	r3, r9
 800495c:	4621      	mov	r1, r4
 800495e:	4640      	mov	r0, r8
 8004960:	f8cd a000 	str.w	sl, [sp]
 8004964:	aa03      	add	r2, sp, #12
 8004966:	f7ff fedf 	bl	8004728 <_printf_common>
 800496a:	3001      	adds	r0, #1
 800496c:	d14c      	bne.n	8004a08 <_printf_i+0x200>
 800496e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004972:	b004      	add	sp, #16
 8004974:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004978:	4834      	ldr	r0, [pc, #208]	; (8004a4c <_printf_i+0x244>)
 800497a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800497e:	680e      	ldr	r6, [r1, #0]
 8004980:	6823      	ldr	r3, [r4, #0]
 8004982:	f856 5b04 	ldr.w	r5, [r6], #4
 8004986:	061f      	lsls	r7, r3, #24
 8004988:	600e      	str	r6, [r1, #0]
 800498a:	d514      	bpl.n	80049b6 <_printf_i+0x1ae>
 800498c:	07d9      	lsls	r1, r3, #31
 800498e:	bf44      	itt	mi
 8004990:	f043 0320 	orrmi.w	r3, r3, #32
 8004994:	6023      	strmi	r3, [r4, #0]
 8004996:	b91d      	cbnz	r5, 80049a0 <_printf_i+0x198>
 8004998:	6823      	ldr	r3, [r4, #0]
 800499a:	f023 0320 	bic.w	r3, r3, #32
 800499e:	6023      	str	r3, [r4, #0]
 80049a0:	2310      	movs	r3, #16
 80049a2:	e7af      	b.n	8004904 <_printf_i+0xfc>
 80049a4:	6823      	ldr	r3, [r4, #0]
 80049a6:	f043 0320 	orr.w	r3, r3, #32
 80049aa:	6023      	str	r3, [r4, #0]
 80049ac:	2378      	movs	r3, #120	; 0x78
 80049ae:	4828      	ldr	r0, [pc, #160]	; (8004a50 <_printf_i+0x248>)
 80049b0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80049b4:	e7e3      	b.n	800497e <_printf_i+0x176>
 80049b6:	065e      	lsls	r6, r3, #25
 80049b8:	bf48      	it	mi
 80049ba:	b2ad      	uxthmi	r5, r5
 80049bc:	e7e6      	b.n	800498c <_printf_i+0x184>
 80049be:	4616      	mov	r6, r2
 80049c0:	e7bb      	b.n	800493a <_printf_i+0x132>
 80049c2:	680b      	ldr	r3, [r1, #0]
 80049c4:	6826      	ldr	r6, [r4, #0]
 80049c6:	1d1d      	adds	r5, r3, #4
 80049c8:	6960      	ldr	r0, [r4, #20]
 80049ca:	600d      	str	r5, [r1, #0]
 80049cc:	0635      	lsls	r5, r6, #24
 80049ce:	681b      	ldr	r3, [r3, #0]
 80049d0:	d501      	bpl.n	80049d6 <_printf_i+0x1ce>
 80049d2:	6018      	str	r0, [r3, #0]
 80049d4:	e002      	b.n	80049dc <_printf_i+0x1d4>
 80049d6:	0671      	lsls	r1, r6, #25
 80049d8:	d5fb      	bpl.n	80049d2 <_printf_i+0x1ca>
 80049da:	8018      	strh	r0, [r3, #0]
 80049dc:	2300      	movs	r3, #0
 80049de:	4616      	mov	r6, r2
 80049e0:	6123      	str	r3, [r4, #16]
 80049e2:	e7ba      	b.n	800495a <_printf_i+0x152>
 80049e4:	680b      	ldr	r3, [r1, #0]
 80049e6:	1d1a      	adds	r2, r3, #4
 80049e8:	600a      	str	r2, [r1, #0]
 80049ea:	681e      	ldr	r6, [r3, #0]
 80049ec:	2100      	movs	r1, #0
 80049ee:	4630      	mov	r0, r6
 80049f0:	6862      	ldr	r2, [r4, #4]
 80049f2:	f000 fb25 	bl	8005040 <memchr>
 80049f6:	b108      	cbz	r0, 80049fc <_printf_i+0x1f4>
 80049f8:	1b80      	subs	r0, r0, r6
 80049fa:	6060      	str	r0, [r4, #4]
 80049fc:	6863      	ldr	r3, [r4, #4]
 80049fe:	6123      	str	r3, [r4, #16]
 8004a00:	2300      	movs	r3, #0
 8004a02:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004a06:	e7a8      	b.n	800495a <_printf_i+0x152>
 8004a08:	4632      	mov	r2, r6
 8004a0a:	4649      	mov	r1, r9
 8004a0c:	4640      	mov	r0, r8
 8004a0e:	6923      	ldr	r3, [r4, #16]
 8004a10:	47d0      	blx	sl
 8004a12:	3001      	adds	r0, #1
 8004a14:	d0ab      	beq.n	800496e <_printf_i+0x166>
 8004a16:	6823      	ldr	r3, [r4, #0]
 8004a18:	079b      	lsls	r3, r3, #30
 8004a1a:	d413      	bmi.n	8004a44 <_printf_i+0x23c>
 8004a1c:	68e0      	ldr	r0, [r4, #12]
 8004a1e:	9b03      	ldr	r3, [sp, #12]
 8004a20:	4298      	cmp	r0, r3
 8004a22:	bfb8      	it	lt
 8004a24:	4618      	movlt	r0, r3
 8004a26:	e7a4      	b.n	8004972 <_printf_i+0x16a>
 8004a28:	2301      	movs	r3, #1
 8004a2a:	4632      	mov	r2, r6
 8004a2c:	4649      	mov	r1, r9
 8004a2e:	4640      	mov	r0, r8
 8004a30:	47d0      	blx	sl
 8004a32:	3001      	adds	r0, #1
 8004a34:	d09b      	beq.n	800496e <_printf_i+0x166>
 8004a36:	3501      	adds	r5, #1
 8004a38:	68e3      	ldr	r3, [r4, #12]
 8004a3a:	9903      	ldr	r1, [sp, #12]
 8004a3c:	1a5b      	subs	r3, r3, r1
 8004a3e:	42ab      	cmp	r3, r5
 8004a40:	dcf2      	bgt.n	8004a28 <_printf_i+0x220>
 8004a42:	e7eb      	b.n	8004a1c <_printf_i+0x214>
 8004a44:	2500      	movs	r5, #0
 8004a46:	f104 0619 	add.w	r6, r4, #25
 8004a4a:	e7f5      	b.n	8004a38 <_printf_i+0x230>
 8004a4c:	08005473 	.word	0x08005473
 8004a50:	08005484 	.word	0x08005484

08004a54 <_sbrk_r>:
 8004a54:	b538      	push	{r3, r4, r5, lr}
 8004a56:	2300      	movs	r3, #0
 8004a58:	4d05      	ldr	r5, [pc, #20]	; (8004a70 <_sbrk_r+0x1c>)
 8004a5a:	4604      	mov	r4, r0
 8004a5c:	4608      	mov	r0, r1
 8004a5e:	602b      	str	r3, [r5, #0]
 8004a60:	f7fc fbd0 	bl	8001204 <_sbrk>
 8004a64:	1c43      	adds	r3, r0, #1
 8004a66:	d102      	bne.n	8004a6e <_sbrk_r+0x1a>
 8004a68:	682b      	ldr	r3, [r5, #0]
 8004a6a:	b103      	cbz	r3, 8004a6e <_sbrk_r+0x1a>
 8004a6c:	6023      	str	r3, [r4, #0]
 8004a6e:	bd38      	pop	{r3, r4, r5, pc}
 8004a70:	20001624 	.word	0x20001624

08004a74 <__swbuf_r>:
 8004a74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a76:	460e      	mov	r6, r1
 8004a78:	4614      	mov	r4, r2
 8004a7a:	4605      	mov	r5, r0
 8004a7c:	b118      	cbz	r0, 8004a86 <__swbuf_r+0x12>
 8004a7e:	6983      	ldr	r3, [r0, #24]
 8004a80:	b90b      	cbnz	r3, 8004a86 <__swbuf_r+0x12>
 8004a82:	f000 f9d9 	bl	8004e38 <__sinit>
 8004a86:	4b21      	ldr	r3, [pc, #132]	; (8004b0c <__swbuf_r+0x98>)
 8004a88:	429c      	cmp	r4, r3
 8004a8a:	d12b      	bne.n	8004ae4 <__swbuf_r+0x70>
 8004a8c:	686c      	ldr	r4, [r5, #4]
 8004a8e:	69a3      	ldr	r3, [r4, #24]
 8004a90:	60a3      	str	r3, [r4, #8]
 8004a92:	89a3      	ldrh	r3, [r4, #12]
 8004a94:	071a      	lsls	r2, r3, #28
 8004a96:	d52f      	bpl.n	8004af8 <__swbuf_r+0x84>
 8004a98:	6923      	ldr	r3, [r4, #16]
 8004a9a:	b36b      	cbz	r3, 8004af8 <__swbuf_r+0x84>
 8004a9c:	6923      	ldr	r3, [r4, #16]
 8004a9e:	6820      	ldr	r0, [r4, #0]
 8004aa0:	b2f6      	uxtb	r6, r6
 8004aa2:	1ac0      	subs	r0, r0, r3
 8004aa4:	6963      	ldr	r3, [r4, #20]
 8004aa6:	4637      	mov	r7, r6
 8004aa8:	4283      	cmp	r3, r0
 8004aaa:	dc04      	bgt.n	8004ab6 <__swbuf_r+0x42>
 8004aac:	4621      	mov	r1, r4
 8004aae:	4628      	mov	r0, r5
 8004ab0:	f000 f92e 	bl	8004d10 <_fflush_r>
 8004ab4:	bb30      	cbnz	r0, 8004b04 <__swbuf_r+0x90>
 8004ab6:	68a3      	ldr	r3, [r4, #8]
 8004ab8:	3001      	adds	r0, #1
 8004aba:	3b01      	subs	r3, #1
 8004abc:	60a3      	str	r3, [r4, #8]
 8004abe:	6823      	ldr	r3, [r4, #0]
 8004ac0:	1c5a      	adds	r2, r3, #1
 8004ac2:	6022      	str	r2, [r4, #0]
 8004ac4:	701e      	strb	r6, [r3, #0]
 8004ac6:	6963      	ldr	r3, [r4, #20]
 8004ac8:	4283      	cmp	r3, r0
 8004aca:	d004      	beq.n	8004ad6 <__swbuf_r+0x62>
 8004acc:	89a3      	ldrh	r3, [r4, #12]
 8004ace:	07db      	lsls	r3, r3, #31
 8004ad0:	d506      	bpl.n	8004ae0 <__swbuf_r+0x6c>
 8004ad2:	2e0a      	cmp	r6, #10
 8004ad4:	d104      	bne.n	8004ae0 <__swbuf_r+0x6c>
 8004ad6:	4621      	mov	r1, r4
 8004ad8:	4628      	mov	r0, r5
 8004ada:	f000 f919 	bl	8004d10 <_fflush_r>
 8004ade:	b988      	cbnz	r0, 8004b04 <__swbuf_r+0x90>
 8004ae0:	4638      	mov	r0, r7
 8004ae2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004ae4:	4b0a      	ldr	r3, [pc, #40]	; (8004b10 <__swbuf_r+0x9c>)
 8004ae6:	429c      	cmp	r4, r3
 8004ae8:	d101      	bne.n	8004aee <__swbuf_r+0x7a>
 8004aea:	68ac      	ldr	r4, [r5, #8]
 8004aec:	e7cf      	b.n	8004a8e <__swbuf_r+0x1a>
 8004aee:	4b09      	ldr	r3, [pc, #36]	; (8004b14 <__swbuf_r+0xa0>)
 8004af0:	429c      	cmp	r4, r3
 8004af2:	bf08      	it	eq
 8004af4:	68ec      	ldreq	r4, [r5, #12]
 8004af6:	e7ca      	b.n	8004a8e <__swbuf_r+0x1a>
 8004af8:	4621      	mov	r1, r4
 8004afa:	4628      	mov	r0, r5
 8004afc:	f000 f80c 	bl	8004b18 <__swsetup_r>
 8004b00:	2800      	cmp	r0, #0
 8004b02:	d0cb      	beq.n	8004a9c <__swbuf_r+0x28>
 8004b04:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8004b08:	e7ea      	b.n	8004ae0 <__swbuf_r+0x6c>
 8004b0a:	bf00      	nop
 8004b0c:	080054b8 	.word	0x080054b8
 8004b10:	080054d8 	.word	0x080054d8
 8004b14:	08005498 	.word	0x08005498

08004b18 <__swsetup_r>:
 8004b18:	4b32      	ldr	r3, [pc, #200]	; (8004be4 <__swsetup_r+0xcc>)
 8004b1a:	b570      	push	{r4, r5, r6, lr}
 8004b1c:	681d      	ldr	r5, [r3, #0]
 8004b1e:	4606      	mov	r6, r0
 8004b20:	460c      	mov	r4, r1
 8004b22:	b125      	cbz	r5, 8004b2e <__swsetup_r+0x16>
 8004b24:	69ab      	ldr	r3, [r5, #24]
 8004b26:	b913      	cbnz	r3, 8004b2e <__swsetup_r+0x16>
 8004b28:	4628      	mov	r0, r5
 8004b2a:	f000 f985 	bl	8004e38 <__sinit>
 8004b2e:	4b2e      	ldr	r3, [pc, #184]	; (8004be8 <__swsetup_r+0xd0>)
 8004b30:	429c      	cmp	r4, r3
 8004b32:	d10f      	bne.n	8004b54 <__swsetup_r+0x3c>
 8004b34:	686c      	ldr	r4, [r5, #4]
 8004b36:	89a3      	ldrh	r3, [r4, #12]
 8004b38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004b3c:	0719      	lsls	r1, r3, #28
 8004b3e:	d42c      	bmi.n	8004b9a <__swsetup_r+0x82>
 8004b40:	06dd      	lsls	r5, r3, #27
 8004b42:	d411      	bmi.n	8004b68 <__swsetup_r+0x50>
 8004b44:	2309      	movs	r3, #9
 8004b46:	6033      	str	r3, [r6, #0]
 8004b48:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004b4c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004b50:	81a3      	strh	r3, [r4, #12]
 8004b52:	e03e      	b.n	8004bd2 <__swsetup_r+0xba>
 8004b54:	4b25      	ldr	r3, [pc, #148]	; (8004bec <__swsetup_r+0xd4>)
 8004b56:	429c      	cmp	r4, r3
 8004b58:	d101      	bne.n	8004b5e <__swsetup_r+0x46>
 8004b5a:	68ac      	ldr	r4, [r5, #8]
 8004b5c:	e7eb      	b.n	8004b36 <__swsetup_r+0x1e>
 8004b5e:	4b24      	ldr	r3, [pc, #144]	; (8004bf0 <__swsetup_r+0xd8>)
 8004b60:	429c      	cmp	r4, r3
 8004b62:	bf08      	it	eq
 8004b64:	68ec      	ldreq	r4, [r5, #12]
 8004b66:	e7e6      	b.n	8004b36 <__swsetup_r+0x1e>
 8004b68:	0758      	lsls	r0, r3, #29
 8004b6a:	d512      	bpl.n	8004b92 <__swsetup_r+0x7a>
 8004b6c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004b6e:	b141      	cbz	r1, 8004b82 <__swsetup_r+0x6a>
 8004b70:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004b74:	4299      	cmp	r1, r3
 8004b76:	d002      	beq.n	8004b7e <__swsetup_r+0x66>
 8004b78:	4630      	mov	r0, r6
 8004b7a:	f7ff fa7b 	bl	8004074 <_free_r>
 8004b7e:	2300      	movs	r3, #0
 8004b80:	6363      	str	r3, [r4, #52]	; 0x34
 8004b82:	89a3      	ldrh	r3, [r4, #12]
 8004b84:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004b88:	81a3      	strh	r3, [r4, #12]
 8004b8a:	2300      	movs	r3, #0
 8004b8c:	6063      	str	r3, [r4, #4]
 8004b8e:	6923      	ldr	r3, [r4, #16]
 8004b90:	6023      	str	r3, [r4, #0]
 8004b92:	89a3      	ldrh	r3, [r4, #12]
 8004b94:	f043 0308 	orr.w	r3, r3, #8
 8004b98:	81a3      	strh	r3, [r4, #12]
 8004b9a:	6923      	ldr	r3, [r4, #16]
 8004b9c:	b94b      	cbnz	r3, 8004bb2 <__swsetup_r+0x9a>
 8004b9e:	89a3      	ldrh	r3, [r4, #12]
 8004ba0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8004ba4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004ba8:	d003      	beq.n	8004bb2 <__swsetup_r+0x9a>
 8004baa:	4621      	mov	r1, r4
 8004bac:	4630      	mov	r0, r6
 8004bae:	f000 fa07 	bl	8004fc0 <__smakebuf_r>
 8004bb2:	89a0      	ldrh	r0, [r4, #12]
 8004bb4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004bb8:	f010 0301 	ands.w	r3, r0, #1
 8004bbc:	d00a      	beq.n	8004bd4 <__swsetup_r+0xbc>
 8004bbe:	2300      	movs	r3, #0
 8004bc0:	60a3      	str	r3, [r4, #8]
 8004bc2:	6963      	ldr	r3, [r4, #20]
 8004bc4:	425b      	negs	r3, r3
 8004bc6:	61a3      	str	r3, [r4, #24]
 8004bc8:	6923      	ldr	r3, [r4, #16]
 8004bca:	b943      	cbnz	r3, 8004bde <__swsetup_r+0xc6>
 8004bcc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8004bd0:	d1ba      	bne.n	8004b48 <__swsetup_r+0x30>
 8004bd2:	bd70      	pop	{r4, r5, r6, pc}
 8004bd4:	0781      	lsls	r1, r0, #30
 8004bd6:	bf58      	it	pl
 8004bd8:	6963      	ldrpl	r3, [r4, #20]
 8004bda:	60a3      	str	r3, [r4, #8]
 8004bdc:	e7f4      	b.n	8004bc8 <__swsetup_r+0xb0>
 8004bde:	2000      	movs	r0, #0
 8004be0:	e7f7      	b.n	8004bd2 <__swsetup_r+0xba>
 8004be2:	bf00      	nop
 8004be4:	200000f0 	.word	0x200000f0
 8004be8:	080054b8 	.word	0x080054b8
 8004bec:	080054d8 	.word	0x080054d8
 8004bf0:	08005498 	.word	0x08005498

08004bf4 <abort>:
 8004bf4:	2006      	movs	r0, #6
 8004bf6:	b508      	push	{r3, lr}
 8004bf8:	f000 faa4 	bl	8005144 <raise>
 8004bfc:	2001      	movs	r0, #1
 8004bfe:	f7fc fa8e 	bl	800111e <_exit>
	...

08004c04 <__sflush_r>:
 8004c04:	898a      	ldrh	r2, [r1, #12]
 8004c06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c0a:	4605      	mov	r5, r0
 8004c0c:	0710      	lsls	r0, r2, #28
 8004c0e:	460c      	mov	r4, r1
 8004c10:	d458      	bmi.n	8004cc4 <__sflush_r+0xc0>
 8004c12:	684b      	ldr	r3, [r1, #4]
 8004c14:	2b00      	cmp	r3, #0
 8004c16:	dc05      	bgt.n	8004c24 <__sflush_r+0x20>
 8004c18:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	dc02      	bgt.n	8004c24 <__sflush_r+0x20>
 8004c1e:	2000      	movs	r0, #0
 8004c20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004c26:	2e00      	cmp	r6, #0
 8004c28:	d0f9      	beq.n	8004c1e <__sflush_r+0x1a>
 8004c2a:	2300      	movs	r3, #0
 8004c2c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004c30:	682f      	ldr	r7, [r5, #0]
 8004c32:	602b      	str	r3, [r5, #0]
 8004c34:	d032      	beq.n	8004c9c <__sflush_r+0x98>
 8004c36:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004c38:	89a3      	ldrh	r3, [r4, #12]
 8004c3a:	075a      	lsls	r2, r3, #29
 8004c3c:	d505      	bpl.n	8004c4a <__sflush_r+0x46>
 8004c3e:	6863      	ldr	r3, [r4, #4]
 8004c40:	1ac0      	subs	r0, r0, r3
 8004c42:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004c44:	b10b      	cbz	r3, 8004c4a <__sflush_r+0x46>
 8004c46:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004c48:	1ac0      	subs	r0, r0, r3
 8004c4a:	2300      	movs	r3, #0
 8004c4c:	4602      	mov	r2, r0
 8004c4e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004c50:	4628      	mov	r0, r5
 8004c52:	6a21      	ldr	r1, [r4, #32]
 8004c54:	47b0      	blx	r6
 8004c56:	1c43      	adds	r3, r0, #1
 8004c58:	89a3      	ldrh	r3, [r4, #12]
 8004c5a:	d106      	bne.n	8004c6a <__sflush_r+0x66>
 8004c5c:	6829      	ldr	r1, [r5, #0]
 8004c5e:	291d      	cmp	r1, #29
 8004c60:	d82c      	bhi.n	8004cbc <__sflush_r+0xb8>
 8004c62:	4a2a      	ldr	r2, [pc, #168]	; (8004d0c <__sflush_r+0x108>)
 8004c64:	40ca      	lsrs	r2, r1
 8004c66:	07d6      	lsls	r6, r2, #31
 8004c68:	d528      	bpl.n	8004cbc <__sflush_r+0xb8>
 8004c6a:	2200      	movs	r2, #0
 8004c6c:	6062      	str	r2, [r4, #4]
 8004c6e:	6922      	ldr	r2, [r4, #16]
 8004c70:	04d9      	lsls	r1, r3, #19
 8004c72:	6022      	str	r2, [r4, #0]
 8004c74:	d504      	bpl.n	8004c80 <__sflush_r+0x7c>
 8004c76:	1c42      	adds	r2, r0, #1
 8004c78:	d101      	bne.n	8004c7e <__sflush_r+0x7a>
 8004c7a:	682b      	ldr	r3, [r5, #0]
 8004c7c:	b903      	cbnz	r3, 8004c80 <__sflush_r+0x7c>
 8004c7e:	6560      	str	r0, [r4, #84]	; 0x54
 8004c80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004c82:	602f      	str	r7, [r5, #0]
 8004c84:	2900      	cmp	r1, #0
 8004c86:	d0ca      	beq.n	8004c1e <__sflush_r+0x1a>
 8004c88:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004c8c:	4299      	cmp	r1, r3
 8004c8e:	d002      	beq.n	8004c96 <__sflush_r+0x92>
 8004c90:	4628      	mov	r0, r5
 8004c92:	f7ff f9ef 	bl	8004074 <_free_r>
 8004c96:	2000      	movs	r0, #0
 8004c98:	6360      	str	r0, [r4, #52]	; 0x34
 8004c9a:	e7c1      	b.n	8004c20 <__sflush_r+0x1c>
 8004c9c:	6a21      	ldr	r1, [r4, #32]
 8004c9e:	2301      	movs	r3, #1
 8004ca0:	4628      	mov	r0, r5
 8004ca2:	47b0      	blx	r6
 8004ca4:	1c41      	adds	r1, r0, #1
 8004ca6:	d1c7      	bne.n	8004c38 <__sflush_r+0x34>
 8004ca8:	682b      	ldr	r3, [r5, #0]
 8004caa:	2b00      	cmp	r3, #0
 8004cac:	d0c4      	beq.n	8004c38 <__sflush_r+0x34>
 8004cae:	2b1d      	cmp	r3, #29
 8004cb0:	d001      	beq.n	8004cb6 <__sflush_r+0xb2>
 8004cb2:	2b16      	cmp	r3, #22
 8004cb4:	d101      	bne.n	8004cba <__sflush_r+0xb6>
 8004cb6:	602f      	str	r7, [r5, #0]
 8004cb8:	e7b1      	b.n	8004c1e <__sflush_r+0x1a>
 8004cba:	89a3      	ldrh	r3, [r4, #12]
 8004cbc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004cc0:	81a3      	strh	r3, [r4, #12]
 8004cc2:	e7ad      	b.n	8004c20 <__sflush_r+0x1c>
 8004cc4:	690f      	ldr	r7, [r1, #16]
 8004cc6:	2f00      	cmp	r7, #0
 8004cc8:	d0a9      	beq.n	8004c1e <__sflush_r+0x1a>
 8004cca:	0793      	lsls	r3, r2, #30
 8004ccc:	bf18      	it	ne
 8004cce:	2300      	movne	r3, #0
 8004cd0:	680e      	ldr	r6, [r1, #0]
 8004cd2:	bf08      	it	eq
 8004cd4:	694b      	ldreq	r3, [r1, #20]
 8004cd6:	eba6 0807 	sub.w	r8, r6, r7
 8004cda:	600f      	str	r7, [r1, #0]
 8004cdc:	608b      	str	r3, [r1, #8]
 8004cde:	f1b8 0f00 	cmp.w	r8, #0
 8004ce2:	dd9c      	ble.n	8004c1e <__sflush_r+0x1a>
 8004ce4:	4643      	mov	r3, r8
 8004ce6:	463a      	mov	r2, r7
 8004ce8:	4628      	mov	r0, r5
 8004cea:	6a21      	ldr	r1, [r4, #32]
 8004cec:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004cee:	47b0      	blx	r6
 8004cf0:	2800      	cmp	r0, #0
 8004cf2:	dc06      	bgt.n	8004d02 <__sflush_r+0xfe>
 8004cf4:	89a3      	ldrh	r3, [r4, #12]
 8004cf6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004cfa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004cfe:	81a3      	strh	r3, [r4, #12]
 8004d00:	e78e      	b.n	8004c20 <__sflush_r+0x1c>
 8004d02:	4407      	add	r7, r0
 8004d04:	eba8 0800 	sub.w	r8, r8, r0
 8004d08:	e7e9      	b.n	8004cde <__sflush_r+0xda>
 8004d0a:	bf00      	nop
 8004d0c:	20400001 	.word	0x20400001

08004d10 <_fflush_r>:
 8004d10:	b538      	push	{r3, r4, r5, lr}
 8004d12:	690b      	ldr	r3, [r1, #16]
 8004d14:	4605      	mov	r5, r0
 8004d16:	460c      	mov	r4, r1
 8004d18:	b913      	cbnz	r3, 8004d20 <_fflush_r+0x10>
 8004d1a:	2500      	movs	r5, #0
 8004d1c:	4628      	mov	r0, r5
 8004d1e:	bd38      	pop	{r3, r4, r5, pc}
 8004d20:	b118      	cbz	r0, 8004d2a <_fflush_r+0x1a>
 8004d22:	6983      	ldr	r3, [r0, #24]
 8004d24:	b90b      	cbnz	r3, 8004d2a <_fflush_r+0x1a>
 8004d26:	f000 f887 	bl	8004e38 <__sinit>
 8004d2a:	4b14      	ldr	r3, [pc, #80]	; (8004d7c <_fflush_r+0x6c>)
 8004d2c:	429c      	cmp	r4, r3
 8004d2e:	d11b      	bne.n	8004d68 <_fflush_r+0x58>
 8004d30:	686c      	ldr	r4, [r5, #4]
 8004d32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004d36:	2b00      	cmp	r3, #0
 8004d38:	d0ef      	beq.n	8004d1a <_fflush_r+0xa>
 8004d3a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004d3c:	07d0      	lsls	r0, r2, #31
 8004d3e:	d404      	bmi.n	8004d4a <_fflush_r+0x3a>
 8004d40:	0599      	lsls	r1, r3, #22
 8004d42:	d402      	bmi.n	8004d4a <_fflush_r+0x3a>
 8004d44:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004d46:	f000 f915 	bl	8004f74 <__retarget_lock_acquire_recursive>
 8004d4a:	4628      	mov	r0, r5
 8004d4c:	4621      	mov	r1, r4
 8004d4e:	f7ff ff59 	bl	8004c04 <__sflush_r>
 8004d52:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004d54:	4605      	mov	r5, r0
 8004d56:	07da      	lsls	r2, r3, #31
 8004d58:	d4e0      	bmi.n	8004d1c <_fflush_r+0xc>
 8004d5a:	89a3      	ldrh	r3, [r4, #12]
 8004d5c:	059b      	lsls	r3, r3, #22
 8004d5e:	d4dd      	bmi.n	8004d1c <_fflush_r+0xc>
 8004d60:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004d62:	f000 f908 	bl	8004f76 <__retarget_lock_release_recursive>
 8004d66:	e7d9      	b.n	8004d1c <_fflush_r+0xc>
 8004d68:	4b05      	ldr	r3, [pc, #20]	; (8004d80 <_fflush_r+0x70>)
 8004d6a:	429c      	cmp	r4, r3
 8004d6c:	d101      	bne.n	8004d72 <_fflush_r+0x62>
 8004d6e:	68ac      	ldr	r4, [r5, #8]
 8004d70:	e7df      	b.n	8004d32 <_fflush_r+0x22>
 8004d72:	4b04      	ldr	r3, [pc, #16]	; (8004d84 <_fflush_r+0x74>)
 8004d74:	429c      	cmp	r4, r3
 8004d76:	bf08      	it	eq
 8004d78:	68ec      	ldreq	r4, [r5, #12]
 8004d7a:	e7da      	b.n	8004d32 <_fflush_r+0x22>
 8004d7c:	080054b8 	.word	0x080054b8
 8004d80:	080054d8 	.word	0x080054d8
 8004d84:	08005498 	.word	0x08005498

08004d88 <std>:
 8004d88:	2300      	movs	r3, #0
 8004d8a:	b510      	push	{r4, lr}
 8004d8c:	4604      	mov	r4, r0
 8004d8e:	e9c0 3300 	strd	r3, r3, [r0]
 8004d92:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004d96:	6083      	str	r3, [r0, #8]
 8004d98:	8181      	strh	r1, [r0, #12]
 8004d9a:	6643      	str	r3, [r0, #100]	; 0x64
 8004d9c:	81c2      	strh	r2, [r0, #14]
 8004d9e:	6183      	str	r3, [r0, #24]
 8004da0:	4619      	mov	r1, r3
 8004da2:	2208      	movs	r2, #8
 8004da4:	305c      	adds	r0, #92	; 0x5c
 8004da6:	f7ff f853 	bl	8003e50 <memset>
 8004daa:	4b05      	ldr	r3, [pc, #20]	; (8004dc0 <std+0x38>)
 8004dac:	6224      	str	r4, [r4, #32]
 8004dae:	6263      	str	r3, [r4, #36]	; 0x24
 8004db0:	4b04      	ldr	r3, [pc, #16]	; (8004dc4 <std+0x3c>)
 8004db2:	62a3      	str	r3, [r4, #40]	; 0x28
 8004db4:	4b04      	ldr	r3, [pc, #16]	; (8004dc8 <std+0x40>)
 8004db6:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004db8:	4b04      	ldr	r3, [pc, #16]	; (8004dcc <std+0x44>)
 8004dba:	6323      	str	r3, [r4, #48]	; 0x30
 8004dbc:	bd10      	pop	{r4, pc}
 8004dbe:	bf00      	nop
 8004dc0:	0800517d 	.word	0x0800517d
 8004dc4:	0800519f 	.word	0x0800519f
 8004dc8:	080051d7 	.word	0x080051d7
 8004dcc:	080051fb 	.word	0x080051fb

08004dd0 <_cleanup_r>:
 8004dd0:	4901      	ldr	r1, [pc, #4]	; (8004dd8 <_cleanup_r+0x8>)
 8004dd2:	f000 b8af 	b.w	8004f34 <_fwalk_reent>
 8004dd6:	bf00      	nop
 8004dd8:	08004d11 	.word	0x08004d11

08004ddc <__sfmoreglue>:
 8004ddc:	b570      	push	{r4, r5, r6, lr}
 8004dde:	2568      	movs	r5, #104	; 0x68
 8004de0:	1e4a      	subs	r2, r1, #1
 8004de2:	4355      	muls	r5, r2
 8004de4:	460e      	mov	r6, r1
 8004de6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004dea:	f7ff f98f 	bl	800410c <_malloc_r>
 8004dee:	4604      	mov	r4, r0
 8004df0:	b140      	cbz	r0, 8004e04 <__sfmoreglue+0x28>
 8004df2:	2100      	movs	r1, #0
 8004df4:	e9c0 1600 	strd	r1, r6, [r0]
 8004df8:	300c      	adds	r0, #12
 8004dfa:	60a0      	str	r0, [r4, #8]
 8004dfc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8004e00:	f7ff f826 	bl	8003e50 <memset>
 8004e04:	4620      	mov	r0, r4
 8004e06:	bd70      	pop	{r4, r5, r6, pc}

08004e08 <__sfp_lock_acquire>:
 8004e08:	4801      	ldr	r0, [pc, #4]	; (8004e10 <__sfp_lock_acquire+0x8>)
 8004e0a:	f000 b8b3 	b.w	8004f74 <__retarget_lock_acquire_recursive>
 8004e0e:	bf00      	nop
 8004e10:	20001630 	.word	0x20001630

08004e14 <__sfp_lock_release>:
 8004e14:	4801      	ldr	r0, [pc, #4]	; (8004e1c <__sfp_lock_release+0x8>)
 8004e16:	f000 b8ae 	b.w	8004f76 <__retarget_lock_release_recursive>
 8004e1a:	bf00      	nop
 8004e1c:	20001630 	.word	0x20001630

08004e20 <__sinit_lock_acquire>:
 8004e20:	4801      	ldr	r0, [pc, #4]	; (8004e28 <__sinit_lock_acquire+0x8>)
 8004e22:	f000 b8a7 	b.w	8004f74 <__retarget_lock_acquire_recursive>
 8004e26:	bf00      	nop
 8004e28:	2000162b 	.word	0x2000162b

08004e2c <__sinit_lock_release>:
 8004e2c:	4801      	ldr	r0, [pc, #4]	; (8004e34 <__sinit_lock_release+0x8>)
 8004e2e:	f000 b8a2 	b.w	8004f76 <__retarget_lock_release_recursive>
 8004e32:	bf00      	nop
 8004e34:	2000162b 	.word	0x2000162b

08004e38 <__sinit>:
 8004e38:	b510      	push	{r4, lr}
 8004e3a:	4604      	mov	r4, r0
 8004e3c:	f7ff fff0 	bl	8004e20 <__sinit_lock_acquire>
 8004e40:	69a3      	ldr	r3, [r4, #24]
 8004e42:	b11b      	cbz	r3, 8004e4c <__sinit+0x14>
 8004e44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004e48:	f7ff bff0 	b.w	8004e2c <__sinit_lock_release>
 8004e4c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8004e50:	6523      	str	r3, [r4, #80]	; 0x50
 8004e52:	4b13      	ldr	r3, [pc, #76]	; (8004ea0 <__sinit+0x68>)
 8004e54:	4a13      	ldr	r2, [pc, #76]	; (8004ea4 <__sinit+0x6c>)
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	62a2      	str	r2, [r4, #40]	; 0x28
 8004e5a:	42a3      	cmp	r3, r4
 8004e5c:	bf08      	it	eq
 8004e5e:	2301      	moveq	r3, #1
 8004e60:	4620      	mov	r0, r4
 8004e62:	bf08      	it	eq
 8004e64:	61a3      	streq	r3, [r4, #24]
 8004e66:	f000 f81f 	bl	8004ea8 <__sfp>
 8004e6a:	6060      	str	r0, [r4, #4]
 8004e6c:	4620      	mov	r0, r4
 8004e6e:	f000 f81b 	bl	8004ea8 <__sfp>
 8004e72:	60a0      	str	r0, [r4, #8]
 8004e74:	4620      	mov	r0, r4
 8004e76:	f000 f817 	bl	8004ea8 <__sfp>
 8004e7a:	2200      	movs	r2, #0
 8004e7c:	2104      	movs	r1, #4
 8004e7e:	60e0      	str	r0, [r4, #12]
 8004e80:	6860      	ldr	r0, [r4, #4]
 8004e82:	f7ff ff81 	bl	8004d88 <std>
 8004e86:	2201      	movs	r2, #1
 8004e88:	2109      	movs	r1, #9
 8004e8a:	68a0      	ldr	r0, [r4, #8]
 8004e8c:	f7ff ff7c 	bl	8004d88 <std>
 8004e90:	2202      	movs	r2, #2
 8004e92:	2112      	movs	r1, #18
 8004e94:	68e0      	ldr	r0, [r4, #12]
 8004e96:	f7ff ff77 	bl	8004d88 <std>
 8004e9a:	2301      	movs	r3, #1
 8004e9c:	61a3      	str	r3, [r4, #24]
 8004e9e:	e7d1      	b.n	8004e44 <__sinit+0xc>
 8004ea0:	080053ac 	.word	0x080053ac
 8004ea4:	08004dd1 	.word	0x08004dd1

08004ea8 <__sfp>:
 8004ea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004eaa:	4607      	mov	r7, r0
 8004eac:	f7ff ffac 	bl	8004e08 <__sfp_lock_acquire>
 8004eb0:	4b1e      	ldr	r3, [pc, #120]	; (8004f2c <__sfp+0x84>)
 8004eb2:	681e      	ldr	r6, [r3, #0]
 8004eb4:	69b3      	ldr	r3, [r6, #24]
 8004eb6:	b913      	cbnz	r3, 8004ebe <__sfp+0x16>
 8004eb8:	4630      	mov	r0, r6
 8004eba:	f7ff ffbd 	bl	8004e38 <__sinit>
 8004ebe:	3648      	adds	r6, #72	; 0x48
 8004ec0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8004ec4:	3b01      	subs	r3, #1
 8004ec6:	d503      	bpl.n	8004ed0 <__sfp+0x28>
 8004ec8:	6833      	ldr	r3, [r6, #0]
 8004eca:	b30b      	cbz	r3, 8004f10 <__sfp+0x68>
 8004ecc:	6836      	ldr	r6, [r6, #0]
 8004ece:	e7f7      	b.n	8004ec0 <__sfp+0x18>
 8004ed0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004ed4:	b9d5      	cbnz	r5, 8004f0c <__sfp+0x64>
 8004ed6:	4b16      	ldr	r3, [pc, #88]	; (8004f30 <__sfp+0x88>)
 8004ed8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8004edc:	60e3      	str	r3, [r4, #12]
 8004ede:	6665      	str	r5, [r4, #100]	; 0x64
 8004ee0:	f000 f847 	bl	8004f72 <__retarget_lock_init_recursive>
 8004ee4:	f7ff ff96 	bl	8004e14 <__sfp_lock_release>
 8004ee8:	2208      	movs	r2, #8
 8004eea:	4629      	mov	r1, r5
 8004eec:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8004ef0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8004ef4:	6025      	str	r5, [r4, #0]
 8004ef6:	61a5      	str	r5, [r4, #24]
 8004ef8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004efc:	f7fe ffa8 	bl	8003e50 <memset>
 8004f00:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8004f04:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004f08:	4620      	mov	r0, r4
 8004f0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f0c:	3468      	adds	r4, #104	; 0x68
 8004f0e:	e7d9      	b.n	8004ec4 <__sfp+0x1c>
 8004f10:	2104      	movs	r1, #4
 8004f12:	4638      	mov	r0, r7
 8004f14:	f7ff ff62 	bl	8004ddc <__sfmoreglue>
 8004f18:	4604      	mov	r4, r0
 8004f1a:	6030      	str	r0, [r6, #0]
 8004f1c:	2800      	cmp	r0, #0
 8004f1e:	d1d5      	bne.n	8004ecc <__sfp+0x24>
 8004f20:	f7ff ff78 	bl	8004e14 <__sfp_lock_release>
 8004f24:	230c      	movs	r3, #12
 8004f26:	603b      	str	r3, [r7, #0]
 8004f28:	e7ee      	b.n	8004f08 <__sfp+0x60>
 8004f2a:	bf00      	nop
 8004f2c:	080053ac 	.word	0x080053ac
 8004f30:	ffff0001 	.word	0xffff0001

08004f34 <_fwalk_reent>:
 8004f34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004f38:	4606      	mov	r6, r0
 8004f3a:	4688      	mov	r8, r1
 8004f3c:	2700      	movs	r7, #0
 8004f3e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004f42:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004f46:	f1b9 0901 	subs.w	r9, r9, #1
 8004f4a:	d505      	bpl.n	8004f58 <_fwalk_reent+0x24>
 8004f4c:	6824      	ldr	r4, [r4, #0]
 8004f4e:	2c00      	cmp	r4, #0
 8004f50:	d1f7      	bne.n	8004f42 <_fwalk_reent+0xe>
 8004f52:	4638      	mov	r0, r7
 8004f54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004f58:	89ab      	ldrh	r3, [r5, #12]
 8004f5a:	2b01      	cmp	r3, #1
 8004f5c:	d907      	bls.n	8004f6e <_fwalk_reent+0x3a>
 8004f5e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004f62:	3301      	adds	r3, #1
 8004f64:	d003      	beq.n	8004f6e <_fwalk_reent+0x3a>
 8004f66:	4629      	mov	r1, r5
 8004f68:	4630      	mov	r0, r6
 8004f6a:	47c0      	blx	r8
 8004f6c:	4307      	orrs	r7, r0
 8004f6e:	3568      	adds	r5, #104	; 0x68
 8004f70:	e7e9      	b.n	8004f46 <_fwalk_reent+0x12>

08004f72 <__retarget_lock_init_recursive>:
 8004f72:	4770      	bx	lr

08004f74 <__retarget_lock_acquire_recursive>:
 8004f74:	4770      	bx	lr

08004f76 <__retarget_lock_release_recursive>:
 8004f76:	4770      	bx	lr

08004f78 <__swhatbuf_r>:
 8004f78:	b570      	push	{r4, r5, r6, lr}
 8004f7a:	460e      	mov	r6, r1
 8004f7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004f80:	4614      	mov	r4, r2
 8004f82:	2900      	cmp	r1, #0
 8004f84:	461d      	mov	r5, r3
 8004f86:	b096      	sub	sp, #88	; 0x58
 8004f88:	da07      	bge.n	8004f9a <__swhatbuf_r+0x22>
 8004f8a:	2300      	movs	r3, #0
 8004f8c:	602b      	str	r3, [r5, #0]
 8004f8e:	89b3      	ldrh	r3, [r6, #12]
 8004f90:	061a      	lsls	r2, r3, #24
 8004f92:	d410      	bmi.n	8004fb6 <__swhatbuf_r+0x3e>
 8004f94:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004f98:	e00e      	b.n	8004fb8 <__swhatbuf_r+0x40>
 8004f9a:	466a      	mov	r2, sp
 8004f9c:	f000 f954 	bl	8005248 <_fstat_r>
 8004fa0:	2800      	cmp	r0, #0
 8004fa2:	dbf2      	blt.n	8004f8a <__swhatbuf_r+0x12>
 8004fa4:	9a01      	ldr	r2, [sp, #4]
 8004fa6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004faa:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8004fae:	425a      	negs	r2, r3
 8004fb0:	415a      	adcs	r2, r3
 8004fb2:	602a      	str	r2, [r5, #0]
 8004fb4:	e7ee      	b.n	8004f94 <__swhatbuf_r+0x1c>
 8004fb6:	2340      	movs	r3, #64	; 0x40
 8004fb8:	2000      	movs	r0, #0
 8004fba:	6023      	str	r3, [r4, #0]
 8004fbc:	b016      	add	sp, #88	; 0x58
 8004fbe:	bd70      	pop	{r4, r5, r6, pc}

08004fc0 <__smakebuf_r>:
 8004fc0:	898b      	ldrh	r3, [r1, #12]
 8004fc2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004fc4:	079d      	lsls	r5, r3, #30
 8004fc6:	4606      	mov	r6, r0
 8004fc8:	460c      	mov	r4, r1
 8004fca:	d507      	bpl.n	8004fdc <__smakebuf_r+0x1c>
 8004fcc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004fd0:	6023      	str	r3, [r4, #0]
 8004fd2:	6123      	str	r3, [r4, #16]
 8004fd4:	2301      	movs	r3, #1
 8004fd6:	6163      	str	r3, [r4, #20]
 8004fd8:	b002      	add	sp, #8
 8004fda:	bd70      	pop	{r4, r5, r6, pc}
 8004fdc:	466a      	mov	r2, sp
 8004fde:	ab01      	add	r3, sp, #4
 8004fe0:	f7ff ffca 	bl	8004f78 <__swhatbuf_r>
 8004fe4:	9900      	ldr	r1, [sp, #0]
 8004fe6:	4605      	mov	r5, r0
 8004fe8:	4630      	mov	r0, r6
 8004fea:	f7ff f88f 	bl	800410c <_malloc_r>
 8004fee:	b948      	cbnz	r0, 8005004 <__smakebuf_r+0x44>
 8004ff0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004ff4:	059a      	lsls	r2, r3, #22
 8004ff6:	d4ef      	bmi.n	8004fd8 <__smakebuf_r+0x18>
 8004ff8:	f023 0303 	bic.w	r3, r3, #3
 8004ffc:	f043 0302 	orr.w	r3, r3, #2
 8005000:	81a3      	strh	r3, [r4, #12]
 8005002:	e7e3      	b.n	8004fcc <__smakebuf_r+0xc>
 8005004:	4b0d      	ldr	r3, [pc, #52]	; (800503c <__smakebuf_r+0x7c>)
 8005006:	62b3      	str	r3, [r6, #40]	; 0x28
 8005008:	89a3      	ldrh	r3, [r4, #12]
 800500a:	6020      	str	r0, [r4, #0]
 800500c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005010:	81a3      	strh	r3, [r4, #12]
 8005012:	9b00      	ldr	r3, [sp, #0]
 8005014:	6120      	str	r0, [r4, #16]
 8005016:	6163      	str	r3, [r4, #20]
 8005018:	9b01      	ldr	r3, [sp, #4]
 800501a:	b15b      	cbz	r3, 8005034 <__smakebuf_r+0x74>
 800501c:	4630      	mov	r0, r6
 800501e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005022:	f000 f923 	bl	800526c <_isatty_r>
 8005026:	b128      	cbz	r0, 8005034 <__smakebuf_r+0x74>
 8005028:	89a3      	ldrh	r3, [r4, #12]
 800502a:	f023 0303 	bic.w	r3, r3, #3
 800502e:	f043 0301 	orr.w	r3, r3, #1
 8005032:	81a3      	strh	r3, [r4, #12]
 8005034:	89a0      	ldrh	r0, [r4, #12]
 8005036:	4305      	orrs	r5, r0
 8005038:	81a5      	strh	r5, [r4, #12]
 800503a:	e7cd      	b.n	8004fd8 <__smakebuf_r+0x18>
 800503c:	08004dd1 	.word	0x08004dd1

08005040 <memchr>:
 8005040:	4603      	mov	r3, r0
 8005042:	b510      	push	{r4, lr}
 8005044:	b2c9      	uxtb	r1, r1
 8005046:	4402      	add	r2, r0
 8005048:	4293      	cmp	r3, r2
 800504a:	4618      	mov	r0, r3
 800504c:	d101      	bne.n	8005052 <memchr+0x12>
 800504e:	2000      	movs	r0, #0
 8005050:	e003      	b.n	800505a <memchr+0x1a>
 8005052:	7804      	ldrb	r4, [r0, #0]
 8005054:	3301      	adds	r3, #1
 8005056:	428c      	cmp	r4, r1
 8005058:	d1f6      	bne.n	8005048 <memchr+0x8>
 800505a:	bd10      	pop	{r4, pc}

0800505c <memmove>:
 800505c:	4288      	cmp	r0, r1
 800505e:	b510      	push	{r4, lr}
 8005060:	eb01 0402 	add.w	r4, r1, r2
 8005064:	d902      	bls.n	800506c <memmove+0x10>
 8005066:	4284      	cmp	r4, r0
 8005068:	4623      	mov	r3, r4
 800506a:	d807      	bhi.n	800507c <memmove+0x20>
 800506c:	1e43      	subs	r3, r0, #1
 800506e:	42a1      	cmp	r1, r4
 8005070:	d008      	beq.n	8005084 <memmove+0x28>
 8005072:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005076:	f803 2f01 	strb.w	r2, [r3, #1]!
 800507a:	e7f8      	b.n	800506e <memmove+0x12>
 800507c:	4601      	mov	r1, r0
 800507e:	4402      	add	r2, r0
 8005080:	428a      	cmp	r2, r1
 8005082:	d100      	bne.n	8005086 <memmove+0x2a>
 8005084:	bd10      	pop	{r4, pc}
 8005086:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800508a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800508e:	e7f7      	b.n	8005080 <memmove+0x24>

08005090 <__malloc_lock>:
 8005090:	4801      	ldr	r0, [pc, #4]	; (8005098 <__malloc_lock+0x8>)
 8005092:	f7ff bf6f 	b.w	8004f74 <__retarget_lock_acquire_recursive>
 8005096:	bf00      	nop
 8005098:	2000162c 	.word	0x2000162c

0800509c <__malloc_unlock>:
 800509c:	4801      	ldr	r0, [pc, #4]	; (80050a4 <__malloc_unlock+0x8>)
 800509e:	f7ff bf6a 	b.w	8004f76 <__retarget_lock_release_recursive>
 80050a2:	bf00      	nop
 80050a4:	2000162c 	.word	0x2000162c

080050a8 <_realloc_r>:
 80050a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050aa:	4607      	mov	r7, r0
 80050ac:	4614      	mov	r4, r2
 80050ae:	460e      	mov	r6, r1
 80050b0:	b921      	cbnz	r1, 80050bc <_realloc_r+0x14>
 80050b2:	4611      	mov	r1, r2
 80050b4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80050b8:	f7ff b828 	b.w	800410c <_malloc_r>
 80050bc:	b922      	cbnz	r2, 80050c8 <_realloc_r+0x20>
 80050be:	f7fe ffd9 	bl	8004074 <_free_r>
 80050c2:	4625      	mov	r5, r4
 80050c4:	4628      	mov	r0, r5
 80050c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80050c8:	f000 f8f2 	bl	80052b0 <_malloc_usable_size_r>
 80050cc:	42a0      	cmp	r0, r4
 80050ce:	d20f      	bcs.n	80050f0 <_realloc_r+0x48>
 80050d0:	4621      	mov	r1, r4
 80050d2:	4638      	mov	r0, r7
 80050d4:	f7ff f81a 	bl	800410c <_malloc_r>
 80050d8:	4605      	mov	r5, r0
 80050da:	2800      	cmp	r0, #0
 80050dc:	d0f2      	beq.n	80050c4 <_realloc_r+0x1c>
 80050de:	4631      	mov	r1, r6
 80050e0:	4622      	mov	r2, r4
 80050e2:	f7fe fea7 	bl	8003e34 <memcpy>
 80050e6:	4631      	mov	r1, r6
 80050e8:	4638      	mov	r0, r7
 80050ea:	f7fe ffc3 	bl	8004074 <_free_r>
 80050ee:	e7e9      	b.n	80050c4 <_realloc_r+0x1c>
 80050f0:	4635      	mov	r5, r6
 80050f2:	e7e7      	b.n	80050c4 <_realloc_r+0x1c>

080050f4 <_raise_r>:
 80050f4:	291f      	cmp	r1, #31
 80050f6:	b538      	push	{r3, r4, r5, lr}
 80050f8:	4604      	mov	r4, r0
 80050fa:	460d      	mov	r5, r1
 80050fc:	d904      	bls.n	8005108 <_raise_r+0x14>
 80050fe:	2316      	movs	r3, #22
 8005100:	6003      	str	r3, [r0, #0]
 8005102:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005106:	bd38      	pop	{r3, r4, r5, pc}
 8005108:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800510a:	b112      	cbz	r2, 8005112 <_raise_r+0x1e>
 800510c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005110:	b94b      	cbnz	r3, 8005126 <_raise_r+0x32>
 8005112:	4620      	mov	r0, r4
 8005114:	f000 f830 	bl	8005178 <_getpid_r>
 8005118:	462a      	mov	r2, r5
 800511a:	4601      	mov	r1, r0
 800511c:	4620      	mov	r0, r4
 800511e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005122:	f000 b817 	b.w	8005154 <_kill_r>
 8005126:	2b01      	cmp	r3, #1
 8005128:	d00a      	beq.n	8005140 <_raise_r+0x4c>
 800512a:	1c59      	adds	r1, r3, #1
 800512c:	d103      	bne.n	8005136 <_raise_r+0x42>
 800512e:	2316      	movs	r3, #22
 8005130:	6003      	str	r3, [r0, #0]
 8005132:	2001      	movs	r0, #1
 8005134:	e7e7      	b.n	8005106 <_raise_r+0x12>
 8005136:	2400      	movs	r4, #0
 8005138:	4628      	mov	r0, r5
 800513a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800513e:	4798      	blx	r3
 8005140:	2000      	movs	r0, #0
 8005142:	e7e0      	b.n	8005106 <_raise_r+0x12>

08005144 <raise>:
 8005144:	4b02      	ldr	r3, [pc, #8]	; (8005150 <raise+0xc>)
 8005146:	4601      	mov	r1, r0
 8005148:	6818      	ldr	r0, [r3, #0]
 800514a:	f7ff bfd3 	b.w	80050f4 <_raise_r>
 800514e:	bf00      	nop
 8005150:	200000f0 	.word	0x200000f0

08005154 <_kill_r>:
 8005154:	b538      	push	{r3, r4, r5, lr}
 8005156:	2300      	movs	r3, #0
 8005158:	4d06      	ldr	r5, [pc, #24]	; (8005174 <_kill_r+0x20>)
 800515a:	4604      	mov	r4, r0
 800515c:	4608      	mov	r0, r1
 800515e:	4611      	mov	r1, r2
 8005160:	602b      	str	r3, [r5, #0]
 8005162:	f7fb ffcc 	bl	80010fe <_kill>
 8005166:	1c43      	adds	r3, r0, #1
 8005168:	d102      	bne.n	8005170 <_kill_r+0x1c>
 800516a:	682b      	ldr	r3, [r5, #0]
 800516c:	b103      	cbz	r3, 8005170 <_kill_r+0x1c>
 800516e:	6023      	str	r3, [r4, #0]
 8005170:	bd38      	pop	{r3, r4, r5, pc}
 8005172:	bf00      	nop
 8005174:	20001624 	.word	0x20001624

08005178 <_getpid_r>:
 8005178:	f7fb bfba 	b.w	80010f0 <_getpid>

0800517c <__sread>:
 800517c:	b510      	push	{r4, lr}
 800517e:	460c      	mov	r4, r1
 8005180:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005184:	f000 f89c 	bl	80052c0 <_read_r>
 8005188:	2800      	cmp	r0, #0
 800518a:	bfab      	itete	ge
 800518c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800518e:	89a3      	ldrhlt	r3, [r4, #12]
 8005190:	181b      	addge	r3, r3, r0
 8005192:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005196:	bfac      	ite	ge
 8005198:	6563      	strge	r3, [r4, #84]	; 0x54
 800519a:	81a3      	strhlt	r3, [r4, #12]
 800519c:	bd10      	pop	{r4, pc}

0800519e <__swrite>:
 800519e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80051a2:	461f      	mov	r7, r3
 80051a4:	898b      	ldrh	r3, [r1, #12]
 80051a6:	4605      	mov	r5, r0
 80051a8:	05db      	lsls	r3, r3, #23
 80051aa:	460c      	mov	r4, r1
 80051ac:	4616      	mov	r6, r2
 80051ae:	d505      	bpl.n	80051bc <__swrite+0x1e>
 80051b0:	2302      	movs	r3, #2
 80051b2:	2200      	movs	r2, #0
 80051b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80051b8:	f000 f868 	bl	800528c <_lseek_r>
 80051bc:	89a3      	ldrh	r3, [r4, #12]
 80051be:	4632      	mov	r2, r6
 80051c0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80051c4:	81a3      	strh	r3, [r4, #12]
 80051c6:	4628      	mov	r0, r5
 80051c8:	463b      	mov	r3, r7
 80051ca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80051ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80051d2:	f000 b817 	b.w	8005204 <_write_r>

080051d6 <__sseek>:
 80051d6:	b510      	push	{r4, lr}
 80051d8:	460c      	mov	r4, r1
 80051da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80051de:	f000 f855 	bl	800528c <_lseek_r>
 80051e2:	1c43      	adds	r3, r0, #1
 80051e4:	89a3      	ldrh	r3, [r4, #12]
 80051e6:	bf15      	itete	ne
 80051e8:	6560      	strne	r0, [r4, #84]	; 0x54
 80051ea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80051ee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80051f2:	81a3      	strheq	r3, [r4, #12]
 80051f4:	bf18      	it	ne
 80051f6:	81a3      	strhne	r3, [r4, #12]
 80051f8:	bd10      	pop	{r4, pc}

080051fa <__sclose>:
 80051fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80051fe:	f000 b813 	b.w	8005228 <_close_r>
	...

08005204 <_write_r>:
 8005204:	b538      	push	{r3, r4, r5, lr}
 8005206:	4604      	mov	r4, r0
 8005208:	4608      	mov	r0, r1
 800520a:	4611      	mov	r1, r2
 800520c:	2200      	movs	r2, #0
 800520e:	4d05      	ldr	r5, [pc, #20]	; (8005224 <_write_r+0x20>)
 8005210:	602a      	str	r2, [r5, #0]
 8005212:	461a      	mov	r2, r3
 8005214:	f7fb ffaa 	bl	800116c <_write>
 8005218:	1c43      	adds	r3, r0, #1
 800521a:	d102      	bne.n	8005222 <_write_r+0x1e>
 800521c:	682b      	ldr	r3, [r5, #0]
 800521e:	b103      	cbz	r3, 8005222 <_write_r+0x1e>
 8005220:	6023      	str	r3, [r4, #0]
 8005222:	bd38      	pop	{r3, r4, r5, pc}
 8005224:	20001624 	.word	0x20001624

08005228 <_close_r>:
 8005228:	b538      	push	{r3, r4, r5, lr}
 800522a:	2300      	movs	r3, #0
 800522c:	4d05      	ldr	r5, [pc, #20]	; (8005244 <_close_r+0x1c>)
 800522e:	4604      	mov	r4, r0
 8005230:	4608      	mov	r0, r1
 8005232:	602b      	str	r3, [r5, #0]
 8005234:	f7fb ffb6 	bl	80011a4 <_close>
 8005238:	1c43      	adds	r3, r0, #1
 800523a:	d102      	bne.n	8005242 <_close_r+0x1a>
 800523c:	682b      	ldr	r3, [r5, #0]
 800523e:	b103      	cbz	r3, 8005242 <_close_r+0x1a>
 8005240:	6023      	str	r3, [r4, #0]
 8005242:	bd38      	pop	{r3, r4, r5, pc}
 8005244:	20001624 	.word	0x20001624

08005248 <_fstat_r>:
 8005248:	b538      	push	{r3, r4, r5, lr}
 800524a:	2300      	movs	r3, #0
 800524c:	4d06      	ldr	r5, [pc, #24]	; (8005268 <_fstat_r+0x20>)
 800524e:	4604      	mov	r4, r0
 8005250:	4608      	mov	r0, r1
 8005252:	4611      	mov	r1, r2
 8005254:	602b      	str	r3, [r5, #0]
 8005256:	f7fb ffb0 	bl	80011ba <_fstat>
 800525a:	1c43      	adds	r3, r0, #1
 800525c:	d102      	bne.n	8005264 <_fstat_r+0x1c>
 800525e:	682b      	ldr	r3, [r5, #0]
 8005260:	b103      	cbz	r3, 8005264 <_fstat_r+0x1c>
 8005262:	6023      	str	r3, [r4, #0]
 8005264:	bd38      	pop	{r3, r4, r5, pc}
 8005266:	bf00      	nop
 8005268:	20001624 	.word	0x20001624

0800526c <_isatty_r>:
 800526c:	b538      	push	{r3, r4, r5, lr}
 800526e:	2300      	movs	r3, #0
 8005270:	4d05      	ldr	r5, [pc, #20]	; (8005288 <_isatty_r+0x1c>)
 8005272:	4604      	mov	r4, r0
 8005274:	4608      	mov	r0, r1
 8005276:	602b      	str	r3, [r5, #0]
 8005278:	f7fb ffae 	bl	80011d8 <_isatty>
 800527c:	1c43      	adds	r3, r0, #1
 800527e:	d102      	bne.n	8005286 <_isatty_r+0x1a>
 8005280:	682b      	ldr	r3, [r5, #0]
 8005282:	b103      	cbz	r3, 8005286 <_isatty_r+0x1a>
 8005284:	6023      	str	r3, [r4, #0]
 8005286:	bd38      	pop	{r3, r4, r5, pc}
 8005288:	20001624 	.word	0x20001624

0800528c <_lseek_r>:
 800528c:	b538      	push	{r3, r4, r5, lr}
 800528e:	4604      	mov	r4, r0
 8005290:	4608      	mov	r0, r1
 8005292:	4611      	mov	r1, r2
 8005294:	2200      	movs	r2, #0
 8005296:	4d05      	ldr	r5, [pc, #20]	; (80052ac <_lseek_r+0x20>)
 8005298:	602a      	str	r2, [r5, #0]
 800529a:	461a      	mov	r2, r3
 800529c:	f7fb ffa6 	bl	80011ec <_lseek>
 80052a0:	1c43      	adds	r3, r0, #1
 80052a2:	d102      	bne.n	80052aa <_lseek_r+0x1e>
 80052a4:	682b      	ldr	r3, [r5, #0]
 80052a6:	b103      	cbz	r3, 80052aa <_lseek_r+0x1e>
 80052a8:	6023      	str	r3, [r4, #0]
 80052aa:	bd38      	pop	{r3, r4, r5, pc}
 80052ac:	20001624 	.word	0x20001624

080052b0 <_malloc_usable_size_r>:
 80052b0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80052b4:	1f18      	subs	r0, r3, #4
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	bfbc      	itt	lt
 80052ba:	580b      	ldrlt	r3, [r1, r0]
 80052bc:	18c0      	addlt	r0, r0, r3
 80052be:	4770      	bx	lr

080052c0 <_read_r>:
 80052c0:	b538      	push	{r3, r4, r5, lr}
 80052c2:	4604      	mov	r4, r0
 80052c4:	4608      	mov	r0, r1
 80052c6:	4611      	mov	r1, r2
 80052c8:	2200      	movs	r2, #0
 80052ca:	4d05      	ldr	r5, [pc, #20]	; (80052e0 <_read_r+0x20>)
 80052cc:	602a      	str	r2, [r5, #0]
 80052ce:	461a      	mov	r2, r3
 80052d0:	f7fb ff2f 	bl	8001132 <_read>
 80052d4:	1c43      	adds	r3, r0, #1
 80052d6:	d102      	bne.n	80052de <_read_r+0x1e>
 80052d8:	682b      	ldr	r3, [r5, #0]
 80052da:	b103      	cbz	r3, 80052de <_read_r+0x1e>
 80052dc:	6023      	str	r3, [r4, #0]
 80052de:	bd38      	pop	{r3, r4, r5, pc}
 80052e0:	20001624 	.word	0x20001624

080052e4 <_gettimeofday>:
 80052e4:	2258      	movs	r2, #88	; 0x58
 80052e6:	4b02      	ldr	r3, [pc, #8]	; (80052f0 <_gettimeofday+0xc>)
 80052e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80052ec:	601a      	str	r2, [r3, #0]
 80052ee:	4770      	bx	lr
 80052f0:	20001624 	.word	0x20001624

080052f4 <_init>:
 80052f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052f6:	bf00      	nop
 80052f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80052fa:	bc08      	pop	{r3}
 80052fc:	469e      	mov	lr, r3
 80052fe:	4770      	bx	lr

08005300 <_fini>:
 8005300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005302:	bf00      	nop
 8005304:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005306:	bc08      	pop	{r3}
 8005308:	469e      	mov	lr, r3
 800530a:	4770      	bx	lr


BluePillHAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000051dc  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001ec  080052ec  080052ec  000152ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080054d8  080054d8  00020144  2**0
                  CONTENTS
  4 .ARM          00000000  080054d8  080054d8  00020144  2**0
                  CONTENTS
  5 .preinit_array 00000000  080054d8  080054d8  00020144  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080054d8  080054d8  000154d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080054dc  080054dc  000154dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000144  20000000  080054e0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000014cc  20000144  08005624  00020144  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20001610  08005624  00021610  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020144  2**0
                  CONTENTS, READONLY
 12 .debug_info   00012cfb  00000000  00000000  0002016d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002e37  00000000  00000000  00032e68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001110  00000000  00000000  00035ca0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000fc8  00000000  00000000  00036db0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019cb5  00000000  00000000  00037d78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00010d08  00000000  00000000  00051a2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00093b92  00000000  00000000  00062735  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f62c7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005238  00000000  00000000  000f631c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         00000024  00000000  00000000  000fb554  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      0000004e  00000000  00000000  000fb578  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000144 	.word	0x20000144
 800012c:	00000000 	.word	0x00000000
 8000130:	080052d4 	.word	0x080052d4

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000148 	.word	0x20000148
 800014c:	080052d4 	.word	0x080052d4

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <vApplicationGetIdleTaskMemory>:
 8000160:	b480      	push	{r7}
 8000162:	b085      	sub	sp, #20
 8000164:	af00      	add	r7, sp, #0
 8000166:	60f8      	str	r0, [r7, #12]
 8000168:	60b9      	str	r1, [r7, #8]
 800016a:	607a      	str	r2, [r7, #4]
 800016c:	68fb      	ldr	r3, [r7, #12]
 800016e:	4a06      	ldr	r2, [pc, #24]	; (8000188 <vApplicationGetIdleTaskMemory+0x28>)
 8000170:	601a      	str	r2, [r3, #0]
 8000172:	68bb      	ldr	r3, [r7, #8]
 8000174:	4a05      	ldr	r2, [pc, #20]	; (800018c <vApplicationGetIdleTaskMemory+0x2c>)
 8000176:	601a      	str	r2, [r3, #0]
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	2280      	movs	r2, #128	; 0x80
 800017c:	601a      	str	r2, [r3, #0]
 800017e:	bf00      	nop
 8000180:	3714      	adds	r7, #20
 8000182:	46bd      	mov	sp, r7
 8000184:	bc80      	pop	{r7}
 8000186:	4770      	bx	lr
 8000188:	20000160 	.word	0x20000160
 800018c:	200001b4 	.word	0x200001b4

08000190 <SARA_Init>:
	HAL_UART_Receive(&huart1, msg, 60, 10)

}*/


void SARA_Init() {
 8000190:	b580      	push	{r7, lr}
 8000192:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARApause, strlen(SARApause), 50);
 8000194:	4833      	ldr	r0, [pc, #204]	; (8000264 <SARA_Init+0xd4>)
 8000196:	f7ff ffdb 	bl	8000150 <strlen>
 800019a:	4603      	mov	r3, r0
 800019c:	b29a      	uxth	r2, r3
 800019e:	2332      	movs	r3, #50	; 0x32
 80001a0:	4930      	ldr	r1, [pc, #192]	; (8000264 <SARA_Init+0xd4>)
 80001a2:	4831      	ldr	r0, [pc, #196]	; (8000268 <SARA_Init+0xd8>)
 80001a4:	f002 fa27 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001a8:	2364      	movs	r3, #100	; 0x64
 80001aa:	2280      	movs	r2, #128	; 0x80
 80001ac:	492f      	ldr	r1, [pc, #188]	; (800026c <SARA_Init+0xdc>)
 80001ae:	482e      	ldr	r0, [pc, #184]	; (8000268 <SARA_Init+0xd8>)
 80001b0:	f002 fab3 	bl	800271a <HAL_UART_Receive>
	osDelay(500);
 80001b4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001b8:	f002 fc90 	bl	8002adc <osDelay>
	HAL_UART_Transmit(&huart1, SARAumnoprof, strlen(SARAumnoprof), 50);
 80001bc:	482c      	ldr	r0, [pc, #176]	; (8000270 <SARA_Init+0xe0>)
 80001be:	f7ff ffc7 	bl	8000150 <strlen>
 80001c2:	4603      	mov	r3, r0
 80001c4:	b29a      	uxth	r2, r3
 80001c6:	2332      	movs	r3, #50	; 0x32
 80001c8:	4929      	ldr	r1, [pc, #164]	; (8000270 <SARA_Init+0xe0>)
 80001ca:	4827      	ldr	r0, [pc, #156]	; (8000268 <SARA_Init+0xd8>)
 80001cc:	f002 fa13 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001d0:	2364      	movs	r3, #100	; 0x64
 80001d2:	2280      	movs	r2, #128	; 0x80
 80001d4:	4925      	ldr	r1, [pc, #148]	; (800026c <SARA_Init+0xdc>)
 80001d6:	4824      	ldr	r0, [pc, #144]	; (8000268 <SARA_Init+0xd8>)
 80001d8:	f002 fa9f 	bl	800271a <HAL_UART_Receive>
	osDelay(500);
 80001dc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001e0:	f002 fc7c 	bl	8002adc <osDelay>
	//HAL_UART_Transmit(&huart1, cereg, strlen(cereg), 10);
	//osDelay(250);
	HAL_UART_Transmit(&huart1, SARAcops, strlen(SARAcops), 50);
 80001e4:	4823      	ldr	r0, [pc, #140]	; (8000274 <SARA_Init+0xe4>)
 80001e6:	f7ff ffb3 	bl	8000150 <strlen>
 80001ea:	4603      	mov	r3, r0
 80001ec:	b29a      	uxth	r2, r3
 80001ee:	2332      	movs	r3, #50	; 0x32
 80001f0:	4920      	ldr	r1, [pc, #128]	; (8000274 <SARA_Init+0xe4>)
 80001f2:	481d      	ldr	r0, [pc, #116]	; (8000268 <SARA_Init+0xd8>)
 80001f4:	f002 f9ff 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001f8:	2364      	movs	r3, #100	; 0x64
 80001fa:	2280      	movs	r2, #128	; 0x80
 80001fc:	491b      	ldr	r1, [pc, #108]	; (800026c <SARA_Init+0xdc>)
 80001fe:	481a      	ldr	r0, [pc, #104]	; (8000268 <SARA_Init+0xd8>)
 8000200:	f002 fa8b 	bl	800271a <HAL_UART_Receive>
	osDelay(500);
 8000204:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000208:	f002 fc68 	bl	8002adc <osDelay>
	HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 50);
 800020c:	481a      	ldr	r0, [pc, #104]	; (8000278 <SARA_Init+0xe8>)
 800020e:	f7ff ff9f 	bl	8000150 <strlen>
 8000212:	4603      	mov	r3, r0
 8000214:	b29a      	uxth	r2, r3
 8000216:	2332      	movs	r3, #50	; 0x32
 8000218:	4917      	ldr	r1, [pc, #92]	; (8000278 <SARA_Init+0xe8>)
 800021a:	4813      	ldr	r0, [pc, #76]	; (8000268 <SARA_Init+0xd8>)
 800021c:	f002 f9eb 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000220:	2364      	movs	r3, #100	; 0x64
 8000222:	2280      	movs	r2, #128	; 0x80
 8000224:	4911      	ldr	r1, [pc, #68]	; (800026c <SARA_Init+0xdc>)
 8000226:	4810      	ldr	r0, [pc, #64]	; (8000268 <SARA_Init+0xd8>)
 8000228:	f002 fa77 	bl	800271a <HAL_UART_Receive>

	HAL_UART_Transmit(&huart1, SARApause, strlen(SARApause), 50);
 800022c:	480d      	ldr	r0, [pc, #52]	; (8000264 <SARA_Init+0xd4>)
 800022e:	f7ff ff8f 	bl	8000150 <strlen>
 8000232:	4603      	mov	r3, r0
 8000234:	b29a      	uxth	r2, r3
 8000236:	2332      	movs	r3, #50	; 0x32
 8000238:	490a      	ldr	r1, [pc, #40]	; (8000264 <SARA_Init+0xd4>)
 800023a:	480b      	ldr	r0, [pc, #44]	; (8000268 <SARA_Init+0xd8>)
 800023c:	f002 f9db 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000240:	2364      	movs	r3, #100	; 0x64
 8000242:	2280      	movs	r2, #128	; 0x80
 8000244:	4909      	ldr	r1, [pc, #36]	; (800026c <SARA_Init+0xdc>)
 8000246:	4808      	ldr	r0, [pc, #32]	; (8000268 <SARA_Init+0xd8>)
 8000248:	f002 fa67 	bl	800271a <HAL_UART_Receive>

	osDelay(500);
 800024c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000250:	f002 fc44 	bl	8002adc <osDelay>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000254:	2364      	movs	r3, #100	; 0x64
 8000256:	2280      	movs	r2, #128	; 0x80
 8000258:	4904      	ldr	r1, [pc, #16]	; (800026c <SARA_Init+0xdc>)
 800025a:	4803      	ldr	r0, [pc, #12]	; (8000268 <SARA_Init+0xd8>)
 800025c:	f002 fa5d 	bl	800271a <HAL_UART_Receive>

}
 8000260:	bf00      	nop
 8000262:	bd80      	pop	{r7, pc}
 8000264:	20000004 	.word	0x20000004
 8000268:	200012ac 	.word	0x200012ac
 800026c:	200011dc 	.word	0x200011dc
 8000270:	2000000c 	.word	0x2000000c
 8000274:	20000020 	.word	0x20000020
 8000278:	20000030 	.word	0x20000030

0800027c <nemeus_Power_Cycle>:

void nemeus_Power_Cycle() {
 800027c:	b580      	push	{r7, lr}
 800027e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8000280:	2200      	movs	r2, #0
 8000282:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000286:	4832      	ldr	r0, [pc, #200]	; (8000350 <nemeus_Power_Cycle+0xd4>)
 8000288:	f001 faa2 	bl	80017d0 <HAL_GPIO_WritePin>
    osDelay(1500);
 800028c:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8000290:	f002 fc24 	bl	8002adc <osDelay>
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000294:	2201      	movs	r2, #1
 8000296:	f44f 7180 	mov.w	r1, #256	; 0x100
 800029a:	482d      	ldr	r0, [pc, #180]	; (8000350 <nemeus_Power_Cycle+0xd4>)
 800029c:	f001 fa98 	bl	80017d0 <HAL_GPIO_WritePin>
	//osDelay(150);
    HAL_UART_Receive(&huart3, trash, 128, 150);
 80002a0:	2396      	movs	r3, #150	; 0x96
 80002a2:	2280      	movs	r2, #128	; 0x80
 80002a4:	492b      	ldr	r1, [pc, #172]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002a6:	482c      	ldr	r0, [pc, #176]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002a8:	f002 fa37 	bl	800271a <HAL_UART_Receive>

	HAL_UART_Transmit(&huart3, syncLora, strlen(syncLora), 10);
 80002ac:	482b      	ldr	r0, [pc, #172]	; (800035c <nemeus_Power_Cycle+0xe0>)
 80002ae:	f7ff ff4f 	bl	8000150 <strlen>
 80002b2:	4603      	mov	r3, r0
 80002b4:	b29a      	uxth	r2, r3
 80002b6:	230a      	movs	r3, #10
 80002b8:	4928      	ldr	r1, [pc, #160]	; (800035c <nemeus_Power_Cycle+0xe0>)
 80002ba:	4827      	ldr	r0, [pc, #156]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002bc:	f002 f99b 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002c0:	2364      	movs	r3, #100	; 0x64
 80002c2:	2280      	movs	r2, #128	; 0x80
 80002c4:	4923      	ldr	r1, [pc, #140]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002c6:	4824      	ldr	r0, [pc, #144]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002c8:	f002 fa27 	bl	800271a <HAL_UART_Receive>
	osDelay(500);
 80002cc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80002d0:	f002 fc04 	bl	8002adc <osDelay>

	HAL_UART_Transmit(&huart3, beginLora, strlen(beginLora), 10);
 80002d4:	4822      	ldr	r0, [pc, #136]	; (8000360 <nemeus_Power_Cycle+0xe4>)
 80002d6:	f7ff ff3b 	bl	8000150 <strlen>
 80002da:	4603      	mov	r3, r0
 80002dc:	b29a      	uxth	r2, r3
 80002de:	230a      	movs	r3, #10
 80002e0:	491f      	ldr	r1, [pc, #124]	; (8000360 <nemeus_Power_Cycle+0xe4>)
 80002e2:	481d      	ldr	r0, [pc, #116]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002e4:	f002 f987 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002e8:	2364      	movs	r3, #100	; 0x64
 80002ea:	2280      	movs	r2, #128	; 0x80
 80002ec:	4919      	ldr	r1, [pc, #100]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002ee:	481a      	ldr	r0, [pc, #104]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 80002f0:	f002 fa13 	bl	800271a <HAL_UART_Receive>
	//osDelay(1500);
	memset(trash, '\0', 128);
 80002f4:	2280      	movs	r2, #128	; 0x80
 80002f6:	2100      	movs	r1, #0
 80002f8:	4816      	ldr	r0, [pc, #88]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 80002fa:	f003 fd99 	bl	8003e30 <memset>
	//HAL_UART_Receive(&huart3, trash, 128, 4000);
	HAL_UART_Receive(&huart3, trash, 10, 40000);
 80002fe:	f649 4340 	movw	r3, #40000	; 0x9c40
 8000302:	220a      	movs	r2, #10
 8000304:	4913      	ldr	r1, [pc, #76]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000306:	4814      	ldr	r0, [pc, #80]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000308:	f002 fa07 	bl	800271a <HAL_UART_Receive>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800030c:	2364      	movs	r3, #100	; 0x64
 800030e:	2280      	movs	r2, #128	; 0x80
 8000310:	4910      	ldr	r1, [pc, #64]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000312:	4811      	ldr	r0, [pc, #68]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000314:	f002 fa01 	bl	800271a <HAL_UART_Receive>

	HAL_UART_Transmit(&huart3, beginSigfox, strlen(beginSigfox), 10);
 8000318:	4812      	ldr	r0, [pc, #72]	; (8000364 <nemeus_Power_Cycle+0xe8>)
 800031a:	f7ff ff19 	bl	8000150 <strlen>
 800031e:	4603      	mov	r3, r0
 8000320:	b29a      	uxth	r2, r3
 8000322:	230a      	movs	r3, #10
 8000324:	490f      	ldr	r1, [pc, #60]	; (8000364 <nemeus_Power_Cycle+0xe8>)
 8000326:	480c      	ldr	r0, [pc, #48]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000328:	f002 f965 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800032c:	2364      	movs	r3, #100	; 0x64
 800032e:	2280      	movs	r2, #128	; 0x80
 8000330:	4908      	ldr	r1, [pc, #32]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000332:	4809      	ldr	r0, [pc, #36]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000334:	f002 f9f1 	bl	800271a <HAL_UART_Receive>
	osDelay(50);
 8000338:	2032      	movs	r0, #50	; 0x32
 800033a:	f002 fbcf 	bl	8002adc <osDelay>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 800033e:	2364      	movs	r3, #100	; 0x64
 8000340:	2280      	movs	r2, #128	; 0x80
 8000342:	4904      	ldr	r1, [pc, #16]	; (8000354 <nemeus_Power_Cycle+0xd8>)
 8000344:	4804      	ldr	r0, [pc, #16]	; (8000358 <nemeus_Power_Cycle+0xdc>)
 8000346:	f002 f9e8 	bl	800271a <HAL_UART_Receive>


}
 800034a:	bf00      	nop
 800034c:	bd80      	pop	{r7, pc}
 800034e:	bf00      	nop
 8000350:	40010800 	.word	0x40010800
 8000354:	200011dc 	.word	0x200011dc
 8000358:	20001194 	.word	0x20001194
 800035c:	2000007c 	.word	0x2000007c
 8000360:	20000088 	.word	0x20000088
 8000364:	200000ac 	.word	0x200000ac

08000368 <SARA_ChangeTech>:
	HAL_UART_Receive(&huart1, SARAresult, 128, 100);
}



void SARA_ChangeTech(uint8_t tech){ //tech should be 9 for NB
 8000368:	b580      	push	{r7, lr}
 800036a:	b086      	sub	sp, #24
 800036c:	af00      	add	r7, sp, #0
 800036e:	4603      	mov	r3, r0
 8000370:	71fb      	strb	r3, [r7, #7]
	uint8_t lpwanTechnology[12];
	if(tech == '7'){
 8000372:	79fb      	ldrb	r3, [r7, #7]
 8000374:	2b37      	cmp	r3, #55	; 0x37
 8000376:	d106      	bne.n	8000386 <SARA_ChangeTech+0x1e>
		strcpy(lpwanTechnology,SARAconnLTE);
 8000378:	f107 0308 	add.w	r3, r7, #8
 800037c:	492a      	ldr	r1, [pc, #168]	; (8000428 <SARA_ChangeTech+0xc0>)
 800037e:	4618      	mov	r0, r3
 8000380:	f003 fdfb 	bl	8003f7a <strcpy>
 8000384:	e005      	b.n	8000392 <SARA_ChangeTech+0x2a>
	}
	else {
		strcpy(lpwanTechnology,SARAconnNB);
 8000386:	f107 0308 	add.w	r3, r7, #8
 800038a:	4928      	ldr	r1, [pc, #160]	; (800042c <SARA_ChangeTech+0xc4>)
 800038c:	4618      	mov	r0, r3
 800038e:	f003 fdf4 	bl	8003f7a <strcpy>
	}
	HAL_UART_Transmit(&huart1, lpwanTechnology, strlen(lpwanTechnology), 50);
 8000392:	f107 0308 	add.w	r3, r7, #8
 8000396:	4618      	mov	r0, r3
 8000398:	f7ff feda 	bl	8000150 <strlen>
 800039c:	4603      	mov	r3, r0
 800039e:	b29a      	uxth	r2, r3
 80003a0:	f107 0108 	add.w	r1, r7, #8
 80003a4:	2332      	movs	r3, #50	; 0x32
 80003a6:	4822      	ldr	r0, [pc, #136]	; (8000430 <SARA_ChangeTech+0xc8>)
 80003a8:	f002 f925 	bl	80025f6 <HAL_UART_Transmit>
		HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 10);
	} else { //8 = NB IOT
		HAL_UART_Transmit(&huart1, SARAconnNB, strlen(SARAconnNB), 10);
	}
	*/
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80003ac:	2364      	movs	r3, #100	; 0x64
 80003ae:	2280      	movs	r2, #128	; 0x80
 80003b0:	4920      	ldr	r1, [pc, #128]	; (8000434 <SARA_ChangeTech+0xcc>)
 80003b2:	481f      	ldr	r0, [pc, #124]	; (8000430 <SARA_ChangeTech+0xc8>)
 80003b4:	f002 f9b1 	bl	800271a <HAL_UART_Receive>

	uint8_t curTech; //if -1 then dont do following
	int i = 0;
 80003b8:	2300      	movs	r3, #0
 80003ba:	617b      	str	r3, [r7, #20]
	do {
		SARA_CheckTech();
 80003bc:	f000 f840 	bl	8000440 <SARA_CheckTech>
		getResultParameterURAT(3, SARAtech);
 80003c0:	491d      	ldr	r1, [pc, #116]	; (8000438 <SARA_ChangeTech+0xd0>)
 80003c2:	2003      	movs	r0, #3
 80003c4:	f000 f858 	bl	8000478 <getResultParameterURAT>
		sendToESP(SARATechnology);
 80003c8:	481c      	ldr	r0, [pc, #112]	; (800043c <SARA_ChangeTech+0xd4>)
 80003ca:	f000 fb95 	bl	8000af8 <sendToESP>
		HAL_UART_Receive(&huart1, trash, 128, 100);
 80003ce:	2364      	movs	r3, #100	; 0x64
 80003d0:	2280      	movs	r2, #128	; 0x80
 80003d2:	4918      	ldr	r1, [pc, #96]	; (8000434 <SARA_ChangeTech+0xcc>)
 80003d4:	4816      	ldr	r0, [pc, #88]	; (8000430 <SARA_ChangeTech+0xc8>)
 80003d6:	f002 f9a0 	bl	800271a <HAL_UART_Receive>
		//SARA_Get_Current_URAT(SARAtech);
		osDelay(2500);
 80003da:	f640 10c4 	movw	r0, #2500	; 0x9c4
 80003de:	f002 fb7d 	bl	8002adc <osDelay>
		i++;
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	3301      	adds	r3, #1
 80003e6:	617b      	str	r3, [r7, #20]
		HAL_UART_Transmit(&huart1, lpwanTechnology, strlen(lpwanTechnology), 50);
 80003e8:	f107 0308 	add.w	r3, r7, #8
 80003ec:	4618      	mov	r0, r3
 80003ee:	f7ff feaf 	bl	8000150 <strlen>
 80003f2:	4603      	mov	r3, r0
 80003f4:	b29a      	uxth	r2, r3
 80003f6:	f107 0108 	add.w	r1, r7, #8
 80003fa:	2332      	movs	r3, #50	; 0x32
 80003fc:	480c      	ldr	r0, [pc, #48]	; (8000430 <SARA_ChangeTech+0xc8>)
 80003fe:	f002 f8fa 	bl	80025f6 <HAL_UART_Transmit>
		HAL_UART_Receive(&huart1, trash, 128, 500);
 8000402:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000406:	2280      	movs	r2, #128	; 0x80
 8000408:	490a      	ldr	r1, [pc, #40]	; (8000434 <SARA_ChangeTech+0xcc>)
 800040a:	4809      	ldr	r0, [pc, #36]	; (8000430 <SARA_ChangeTech+0xc8>)
 800040c:	f002 f985 	bl	800271a <HAL_UART_Receive>
		//sendToESP(SARATechnology);
	} while (SARATechnology[0] != tech && i < 15);
 8000410:	4b0a      	ldr	r3, [pc, #40]	; (800043c <SARA_ChangeTech+0xd4>)
 8000412:	781b      	ldrb	r3, [r3, #0]
 8000414:	79fa      	ldrb	r2, [r7, #7]
 8000416:	429a      	cmp	r2, r3
 8000418:	d002      	beq.n	8000420 <SARA_ChangeTech+0xb8>
 800041a:	697b      	ldr	r3, [r7, #20]
 800041c:	2b0e      	cmp	r3, #14
 800041e:	ddcd      	ble.n	80003bc <SARA_ChangeTech+0x54>
}
 8000420:	bf00      	nop
 8000422:	3718      	adds	r7, #24
 8000424:	46bd      	mov	sp, r7
 8000426:	bd80      	pop	{r7, pc}
 8000428:	20000030 	.word	0x20000030
 800042c:	2000003c 	.word	0x2000003c
 8000430:	200012ac 	.word	0x200012ac
 8000434:	200011dc 	.word	0x200011dc
 8000438:	20001538 	.word	0x20001538
 800043c:	200012a8 	.word	0x200012a8

08000440 <SARA_CheckTech>:

void SARA_CheckTech(){
 8000440:	b580      	push	{r7, lr}
 8000442:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARAcopsCheck, strlen(SARAcopsCheck), 10);
 8000444:	4809      	ldr	r0, [pc, #36]	; (800046c <SARA_CheckTech+0x2c>)
 8000446:	f7ff fe83 	bl	8000150 <strlen>
 800044a:	4603      	mov	r3, r0
 800044c:	b29a      	uxth	r2, r3
 800044e:	230a      	movs	r3, #10
 8000450:	4906      	ldr	r1, [pc, #24]	; (800046c <SARA_CheckTech+0x2c>)
 8000452:	4807      	ldr	r0, [pc, #28]	; (8000470 <SARA_CheckTech+0x30>)
 8000454:	f002 f8cf 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, SARAtech, 30, 750);
 8000458:	f240 23ee 	movw	r3, #750	; 0x2ee
 800045c:	221e      	movs	r2, #30
 800045e:	4905      	ldr	r1, [pc, #20]	; (8000474 <SARA_CheckTech+0x34>)
 8000460:	4803      	ldr	r0, [pc, #12]	; (8000470 <SARA_CheckTech+0x30>)
 8000462:	f002 f95a 	bl	800271a <HAL_UART_Receive>
	//sendToESP(SARAtech);
}
 8000466:	bf00      	nop
 8000468:	bd80      	pop	{r7, pc}
 800046a:	bf00      	nop
 800046c:	20000048 	.word	0x20000048
 8000470:	200012ac 	.word	0x200012ac
 8000474:	20001538 	.word	0x20001538

08000478 <getResultParameterURAT>:


void getResultParameterURAT(int nParam, uint8_t * msg){
 8000478:	b480      	push	{r7}
 800047a:	b085      	sub	sp, #20
 800047c:	af00      	add	r7, sp, #0
 800047e:	6078      	str	r0, [r7, #4]
 8000480:	6039      	str	r1, [r7, #0]
	int commaCnt = 0;
 8000482:	2300      	movs	r3, #0
 8000484:	60fb      	str	r3, [r7, #12]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 8000486:	2300      	movs	r3, #0
 8000488:	60bb      	str	r3, [r7, #8]
	while (msg[i] != '\0'){
 800048a:	e01e      	b.n	80004ca <getResultParameterURAT+0x52>
		if(msg[i] == ',' && commaCnt == nParam-1){
 800048c:	68bb      	ldr	r3, [r7, #8]
 800048e:	683a      	ldr	r2, [r7, #0]
 8000490:	4413      	add	r3, r2
 8000492:	781b      	ldrb	r3, [r3, #0]
 8000494:	2b2c      	cmp	r3, #44	; 0x2c
 8000496:	d10c      	bne.n	80004b2 <getResultParameterURAT+0x3a>
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	3b01      	subs	r3, #1
 800049c:	68fa      	ldr	r2, [r7, #12]
 800049e:	429a      	cmp	r2, r3
 80004a0:	d107      	bne.n	80004b2 <getResultParameterURAT+0x3a>
			SARATechnology[0] = msg[i+1];
 80004a2:	68bb      	ldr	r3, [r7, #8]
 80004a4:	3301      	adds	r3, #1
 80004a6:	683a      	ldr	r2, [r7, #0]
 80004a8:	4413      	add	r3, r2
 80004aa:	781a      	ldrb	r2, [r3, #0]
 80004ac:	4b0c      	ldr	r3, [pc, #48]	; (80004e0 <getResultParameterURAT+0x68>)
 80004ae:	701a      	strb	r2, [r3, #0]
			return;
 80004b0:	e011      	b.n	80004d6 <getResultParameterURAT+0x5e>
		} else if(msg[i] == ','){
 80004b2:	68bb      	ldr	r3, [r7, #8]
 80004b4:	683a      	ldr	r2, [r7, #0]
 80004b6:	4413      	add	r3, r2
 80004b8:	781b      	ldrb	r3, [r3, #0]
 80004ba:	2b2c      	cmp	r3, #44	; 0x2c
 80004bc:	d102      	bne.n	80004c4 <getResultParameterURAT+0x4c>
			commaCnt++;
 80004be:	68fb      	ldr	r3, [r7, #12]
 80004c0:	3301      	adds	r3, #1
 80004c2:	60fb      	str	r3, [r7, #12]
			//sendToESP(testing);
		}
		i++;
 80004c4:	68bb      	ldr	r3, [r7, #8]
 80004c6:	3301      	adds	r3, #1
 80004c8:	60bb      	str	r3, [r7, #8]
	while (msg[i] != '\0'){
 80004ca:	68bb      	ldr	r3, [r7, #8]
 80004cc:	683a      	ldr	r2, [r7, #0]
 80004ce:	4413      	add	r3, r2
 80004d0:	781b      	ldrb	r3, [r3, #0]
 80004d2:	2b00      	cmp	r3, #0
 80004d4:	d1da      	bne.n	800048c <getResultParameterURAT+0x14>
		//osDelay(400);
	}

}
 80004d6:	3714      	adds	r7, #20
 80004d8:	46bd      	mov	sp, r7
 80004da:	bc80      	pop	{r7}
 80004dc:	4770      	bx	lr
 80004de:	bf00      	nop
 80004e0:	200012a8 	.word	0x200012a8

080004e4 <getResultParameterCESQ>:


void getResultParameterCESQ(int nParam, uint8_t * msg){
 80004e4:	b480      	push	{r7}
 80004e6:	b087      	sub	sp, #28
 80004e8:	af00      	add	r7, sp, #0
 80004ea:	6078      	str	r0, [r7, #4]
 80004ec:	6039      	str	r1, [r7, #0]
	int commaCnt = 0;
 80004ee:	2300      	movs	r3, #0
 80004f0:	617b      	str	r3, [r7, #20]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 80004f2:	2300      	movs	r3, #0
 80004f4:	613b      	str	r3, [r7, #16]
	int j = 1;
 80004f6:	2301      	movs	r3, #1
 80004f8:	60fb      	str	r3, [r7, #12]
	while (msg[i] != '\0'){
 80004fa:	e03b      	b.n	8000574 <getResultParameterCESQ+0x90>
		if(msg[i] == ',' && commaCnt == nParam-1){
 80004fc:	693b      	ldr	r3, [r7, #16]
 80004fe:	683a      	ldr	r2, [r7, #0]
 8000500:	4413      	add	r3, r2
 8000502:	781b      	ldrb	r3, [r3, #0]
 8000504:	2b2c      	cmp	r3, #44	; 0x2c
 8000506:	d129      	bne.n	800055c <getResultParameterCESQ+0x78>
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	3b01      	subs	r3, #1
 800050c:	697a      	ldr	r2, [r7, #20]
 800050e:	429a      	cmp	r2, r3
 8000510:	d124      	bne.n	800055c <getResultParameterCESQ+0x78>
			while (j <= 5 && msg[i+j] != '\r' && msg[i+j] != '\n'){
 8000512:	e00d      	b.n	8000530 <getResultParameterCESQ+0x4c>
				SARARsrpRsrq[j-1] = msg[i+j];
 8000514:	693a      	ldr	r2, [r7, #16]
 8000516:	68fb      	ldr	r3, [r7, #12]
 8000518:	4413      	add	r3, r2
 800051a:	461a      	mov	r2, r3
 800051c:	683b      	ldr	r3, [r7, #0]
 800051e:	441a      	add	r2, r3
 8000520:	68fb      	ldr	r3, [r7, #12]
 8000522:	3b01      	subs	r3, #1
 8000524:	7811      	ldrb	r1, [r2, #0]
 8000526:	4a19      	ldr	r2, [pc, #100]	; (800058c <getResultParameterCESQ+0xa8>)
 8000528:	54d1      	strb	r1, [r2, r3]
				j++;
 800052a:	68fb      	ldr	r3, [r7, #12]
 800052c:	3301      	adds	r3, #1
 800052e:	60fb      	str	r3, [r7, #12]
			while (j <= 5 && msg[i+j] != '\r' && msg[i+j] != '\n'){
 8000530:	68fb      	ldr	r3, [r7, #12]
 8000532:	2b05      	cmp	r3, #5
 8000534:	dc25      	bgt.n	8000582 <getResultParameterCESQ+0x9e>
 8000536:	693a      	ldr	r2, [r7, #16]
 8000538:	68fb      	ldr	r3, [r7, #12]
 800053a:	4413      	add	r3, r2
 800053c:	461a      	mov	r2, r3
 800053e:	683b      	ldr	r3, [r7, #0]
 8000540:	4413      	add	r3, r2
 8000542:	781b      	ldrb	r3, [r3, #0]
 8000544:	2b0d      	cmp	r3, #13
 8000546:	d01c      	beq.n	8000582 <getResultParameterCESQ+0x9e>
 8000548:	693a      	ldr	r2, [r7, #16]
 800054a:	68fb      	ldr	r3, [r7, #12]
 800054c:	4413      	add	r3, r2
 800054e:	461a      	mov	r2, r3
 8000550:	683b      	ldr	r3, [r7, #0]
 8000552:	4413      	add	r3, r2
 8000554:	781b      	ldrb	r3, [r3, #0]
 8000556:	2b0a      	cmp	r3, #10
 8000558:	d1dc      	bne.n	8000514 <getResultParameterCESQ+0x30>
			}
			return;
 800055a:	e012      	b.n	8000582 <getResultParameterCESQ+0x9e>
		} else if(msg[i] == ','){
 800055c:	693b      	ldr	r3, [r7, #16]
 800055e:	683a      	ldr	r2, [r7, #0]
 8000560:	4413      	add	r3, r2
 8000562:	781b      	ldrb	r3, [r3, #0]
 8000564:	2b2c      	cmp	r3, #44	; 0x2c
 8000566:	d102      	bne.n	800056e <getResultParameterCESQ+0x8a>
			commaCnt++;
 8000568:	697b      	ldr	r3, [r7, #20]
 800056a:	3301      	adds	r3, #1
 800056c:	617b      	str	r3, [r7, #20]
			//sendToESP(testing);
		}
		i++;
 800056e:	693b      	ldr	r3, [r7, #16]
 8000570:	3301      	adds	r3, #1
 8000572:	613b      	str	r3, [r7, #16]
	while (msg[i] != '\0'){
 8000574:	693b      	ldr	r3, [r7, #16]
 8000576:	683a      	ldr	r2, [r7, #0]
 8000578:	4413      	add	r3, r2
 800057a:	781b      	ldrb	r3, [r3, #0]
 800057c:	2b00      	cmp	r3, #0
 800057e:	d1bd      	bne.n	80004fc <getResultParameterCESQ+0x18>
 8000580:	e000      	b.n	8000584 <getResultParameterCESQ+0xa0>
			return;
 8000582:	bf00      	nop
		//osDelay(400);
	}
}
 8000584:	371c      	adds	r7, #28
 8000586:	46bd      	mov	sp, r7
 8000588:	bc80      	pop	{r7}
 800058a:	4770      	bx	lr
 800058c:	200015a8 	.word	0x200015a8

08000590 <getCSQResult>:

void getCSQResult(uint8_t * msg){
 8000590:	b480      	push	{r7}
 8000592:	b085      	sub	sp, #20
 8000594:	af00      	add	r7, sp, #0
 8000596:	6078      	str	r0, [r7, #4]
	int i = 8;
 8000598:	2308      	movs	r3, #8
 800059a:	60fb      	str	r3, [r7, #12]
	int j = 0;
 800059c:	2300      	movs	r3, #0
 800059e:	60bb      	str	r3, [r7, #8]
	while (msg[i] != ',' && msg[i] != '\0' && msg[i] != '\r' && msg[i] != '\n' && j < 4){
 80005a0:	e00e      	b.n	80005c0 <getCSQResult+0x30>
		SARAcsqResult[j] = msg[i];
 80005a2:	68fb      	ldr	r3, [r7, #12]
 80005a4:	687a      	ldr	r2, [r7, #4]
 80005a6:	4413      	add	r3, r2
 80005a8:	7819      	ldrb	r1, [r3, #0]
 80005aa:	4a15      	ldr	r2, [pc, #84]	; (8000600 <getCSQResult+0x70>)
 80005ac:	68bb      	ldr	r3, [r7, #8]
 80005ae:	4413      	add	r3, r2
 80005b0:	460a      	mov	r2, r1
 80005b2:	701a      	strb	r2, [r3, #0]
		i++;
 80005b4:	68fb      	ldr	r3, [r7, #12]
 80005b6:	3301      	adds	r3, #1
 80005b8:	60fb      	str	r3, [r7, #12]
		j++;
 80005ba:	68bb      	ldr	r3, [r7, #8]
 80005bc:	3301      	adds	r3, #1
 80005be:	60bb      	str	r3, [r7, #8]
	while (msg[i] != ',' && msg[i] != '\0' && msg[i] != '\r' && msg[i] != '\n' && j < 4){
 80005c0:	68fb      	ldr	r3, [r7, #12]
 80005c2:	687a      	ldr	r2, [r7, #4]
 80005c4:	4413      	add	r3, r2
 80005c6:	781b      	ldrb	r3, [r3, #0]
 80005c8:	2b2c      	cmp	r3, #44	; 0x2c
 80005ca:	d014      	beq.n	80005f6 <getCSQResult+0x66>
 80005cc:	68fb      	ldr	r3, [r7, #12]
 80005ce:	687a      	ldr	r2, [r7, #4]
 80005d0:	4413      	add	r3, r2
 80005d2:	781b      	ldrb	r3, [r3, #0]
 80005d4:	2b00      	cmp	r3, #0
 80005d6:	d00e      	beq.n	80005f6 <getCSQResult+0x66>
 80005d8:	68fb      	ldr	r3, [r7, #12]
 80005da:	687a      	ldr	r2, [r7, #4]
 80005dc:	4413      	add	r3, r2
 80005de:	781b      	ldrb	r3, [r3, #0]
 80005e0:	2b0d      	cmp	r3, #13
 80005e2:	d008      	beq.n	80005f6 <getCSQResult+0x66>
 80005e4:	68fb      	ldr	r3, [r7, #12]
 80005e6:	687a      	ldr	r2, [r7, #4]
 80005e8:	4413      	add	r3, r2
 80005ea:	781b      	ldrb	r3, [r3, #0]
 80005ec:	2b0a      	cmp	r3, #10
 80005ee:	d002      	beq.n	80005f6 <getCSQResult+0x66>
 80005f0:	68bb      	ldr	r3, [r7, #8]
 80005f2:	2b03      	cmp	r3, #3
 80005f4:	ddd5      	ble.n	80005a2 <getCSQResult+0x12>
	}
}
 80005f6:	bf00      	nop
 80005f8:	3714      	adds	r7, #20
 80005fa:	46bd      	mov	sp, r7
 80005fc:	bc80      	pop	{r7}
 80005fe:	4770      	bx	lr
 8000600:	20001438 	.word	0x20001438

08000604 <getGPSCoordinates>:

void getGPSCoordinates(){
 8000604:	b580      	push	{r7, lr}
 8000606:	af00      	add	r7, sp, #0
	//memset(currentGPSCoords,'\0',80);
	HAL_UART_Receive(&huart1, trash, 128, 200);
 8000608:	23c8      	movs	r3, #200	; 0xc8
 800060a:	2280      	movs	r2, #128	; 0x80
 800060c:	491f      	ldr	r1, [pc, #124]	; (800068c <getGPSCoordinates+0x88>)
 800060e:	4820      	ldr	r0, [pc, #128]	; (8000690 <getGPSCoordinates+0x8c>)
 8000610:	f002 f883 	bl	800271a <HAL_UART_Receive>
    HAL_UART_Transmit(&huart1, getGPSCoordsCommand, strlen(getGPSCoordsCommand), 10);
 8000614:	481f      	ldr	r0, [pc, #124]	; (8000694 <getGPSCoordinates+0x90>)
 8000616:	f7ff fd9b 	bl	8000150 <strlen>
 800061a:	4603      	mov	r3, r0
 800061c:	b29a      	uxth	r2, r3
 800061e:	230a      	movs	r3, #10
 8000620:	491c      	ldr	r1, [pc, #112]	; (8000694 <getGPSCoordinates+0x90>)
 8000622:	481b      	ldr	r0, [pc, #108]	; (8000690 <getGPSCoordinates+0x8c>)
 8000624:	f001 ffe7 	bl	80025f6 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
 8000628:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800062c:	2250      	movs	r2, #80	; 0x50
 800062e:	491a      	ldr	r1, [pc, #104]	; (8000698 <getGPSCoordinates+0x94>)
 8000630:	4817      	ldr	r0, [pc, #92]	; (8000690 <getGPSCoordinates+0x8c>)
 8000632:	f002 f872 	bl	800271a <HAL_UART_Receive>

    if (strlen(currentGPSCoords) < 5){ //arbitrary number, should be tweaked.
 8000636:	4818      	ldr	r0, [pc, #96]	; (8000698 <getGPSCoordinates+0x94>)
 8000638:	f7ff fd8a 	bl	8000150 <strlen>
 800063c:	4603      	mov	r3, r0
 800063e:	2b04      	cmp	r3, #4
 8000640:	d822      	bhi.n	8000688 <getGPSCoordinates+0x84>
    	sendToESP(testing);
 8000642:	4816      	ldr	r0, [pc, #88]	; (800069c <getGPSCoordinates+0x98>)
 8000644:	f000 fa58 	bl	8000af8 <sendToESP>
    	memset(currentGPSCoords,'\0',80);
 8000648:	2250      	movs	r2, #80	; 0x50
 800064a:	2100      	movs	r1, #0
 800064c:	4812      	ldr	r0, [pc, #72]	; (8000698 <getGPSCoordinates+0x94>)
 800064e:	f003 fbef 	bl	8003e30 <memset>
    	osDelay(400);
 8000652:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000656:	f002 fa41 	bl	8002adc <osDelay>
    	HAL_UART_Receive(&huart1, trash, 128, 200);
 800065a:	23c8      	movs	r3, #200	; 0xc8
 800065c:	2280      	movs	r2, #128	; 0x80
 800065e:	490b      	ldr	r1, [pc, #44]	; (800068c <getGPSCoordinates+0x88>)
 8000660:	480b      	ldr	r0, [pc, #44]	; (8000690 <getGPSCoordinates+0x8c>)
 8000662:	f002 f85a 	bl	800271a <HAL_UART_Receive>
        HAL_UART_Transmit(&huart1, getGPSCoordsCommand, strlen(getGPSCoordsCommand), 10);
 8000666:	480b      	ldr	r0, [pc, #44]	; (8000694 <getGPSCoordinates+0x90>)
 8000668:	f7ff fd72 	bl	8000150 <strlen>
 800066c:	4603      	mov	r3, r0
 800066e:	b29a      	uxth	r2, r3
 8000670:	230a      	movs	r3, #10
 8000672:	4908      	ldr	r1, [pc, #32]	; (8000694 <getGPSCoordinates+0x90>)
 8000674:	4806      	ldr	r0, [pc, #24]	; (8000690 <getGPSCoordinates+0x8c>)
 8000676:	f001 ffbe 	bl	80025f6 <HAL_UART_Transmit>
        HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
 800067a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800067e:	2250      	movs	r2, #80	; 0x50
 8000680:	4905      	ldr	r1, [pc, #20]	; (8000698 <getGPSCoordinates+0x94>)
 8000682:	4803      	ldr	r0, [pc, #12]	; (8000690 <getGPSCoordinates+0x8c>)
 8000684:	f002 f849 	bl	800271a <HAL_UART_Receive>
    }
}
 8000688:	bf00      	nop
 800068a:	bd80      	pop	{r7, pc}
 800068c:	200011dc 	.word	0x200011dc
 8000690:	200012ac 	.word	0x200012ac
 8000694:	200000b8 	.word	0x200000b8
 8000698:	20001558 	.word	0x20001558
 800069c:	20000000 	.word	0x20000000

080006a0 <prepareSaraMeasurement>:

void prepareSaraMeasurement(int technology){
 80006a0:	b580      	push	{r7, lr}
 80006a2:	b082      	sub	sp, #8
 80006a4:	af00      	add	r7, sp, #0
 80006a6:	6078      	str	r0, [r7, #4]
	memset(SaraMeasurements,'\0',128);
 80006a8:	2280      	movs	r2, #128	; 0x80
 80006aa:	2100      	movs	r1, #0
 80006ac:	4822      	ldr	r0, [pc, #136]	; (8000738 <prepareSaraMeasurement+0x98>)
 80006ae:	f003 fbbf 	bl	8003e30 <memset>
	if (technology == 7){
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	2b07      	cmp	r3, #7
 80006b6:	d103      	bne.n	80006c0 <prepareSaraMeasurement+0x20>
		strcpy(SaraMeasurements,LTEMTechName);
 80006b8:	4920      	ldr	r1, [pc, #128]	; (800073c <prepareSaraMeasurement+0x9c>)
 80006ba:	481f      	ldr	r0, [pc, #124]	; (8000738 <prepareSaraMeasurement+0x98>)
 80006bc:	f003 fc5d 	bl	8003f7a <strcpy>
	}
	if (technology == 9){
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	2b09      	cmp	r3, #9
 80006c4:	d103      	bne.n	80006ce <prepareSaraMeasurement+0x2e>
		strcpy(SaraMeasurements,NBIoTTechName);
 80006c6:	491e      	ldr	r1, [pc, #120]	; (8000740 <prepareSaraMeasurement+0xa0>)
 80006c8:	481b      	ldr	r0, [pc, #108]	; (8000738 <prepareSaraMeasurement+0x98>)
 80006ca:	f003 fc56 	bl	8003f7a <strcpy>
	}

	strcat(SaraMeasurements,currentGPSCoords);
 80006ce:	491d      	ldr	r1, [pc, #116]	; (8000744 <prepareSaraMeasurement+0xa4>)
 80006d0:	4819      	ldr	r0, [pc, #100]	; (8000738 <prepareSaraMeasurement+0x98>)
 80006d2:	f003 fc43 	bl	8003f5c <strcat>
	strcat(SaraMeasurements,SARARsrpRsrq);
 80006d6:	491c      	ldr	r1, [pc, #112]	; (8000748 <prepareSaraMeasurement+0xa8>)
 80006d8:	4817      	ldr	r0, [pc, #92]	; (8000738 <prepareSaraMeasurement+0x98>)
 80006da:	f003 fc3f 	bl	8003f5c <strcat>
	strcat(SaraMeasurements,",");
 80006de:	4816      	ldr	r0, [pc, #88]	; (8000738 <prepareSaraMeasurement+0x98>)
 80006e0:	f7ff fd36 	bl	8000150 <strlen>
 80006e4:	4603      	mov	r3, r0
 80006e6:	461a      	mov	r2, r3
 80006e8:	4b13      	ldr	r3, [pc, #76]	; (8000738 <prepareSaraMeasurement+0x98>)
 80006ea:	4413      	add	r3, r2
 80006ec:	4917      	ldr	r1, [pc, #92]	; (800074c <prepareSaraMeasurement+0xac>)
 80006ee:	461a      	mov	r2, r3
 80006f0:	460b      	mov	r3, r1
 80006f2:	881b      	ldrh	r3, [r3, #0]
 80006f4:	8013      	strh	r3, [r2, #0]
	strcat(SaraMeasurements,SARAcsqResult);
 80006f6:	4916      	ldr	r1, [pc, #88]	; (8000750 <prepareSaraMeasurement+0xb0>)
 80006f8:	480f      	ldr	r0, [pc, #60]	; (8000738 <prepareSaraMeasurement+0x98>)
 80006fa:	f003 fc2f 	bl	8003f5c <strcat>

	memset(currentGPSCoords,'\0',80);
 80006fe:	2250      	movs	r2, #80	; 0x50
 8000700:	2100      	movs	r1, #0
 8000702:	4810      	ldr	r0, [pc, #64]	; (8000744 <prepareSaraMeasurement+0xa4>)
 8000704:	f003 fb94 	bl	8003e30 <memset>
	memset(SARARsrpRsrq,'\0',6);
 8000708:	2206      	movs	r2, #6
 800070a:	2100      	movs	r1, #0
 800070c:	480e      	ldr	r0, [pc, #56]	; (8000748 <prepareSaraMeasurement+0xa8>)
 800070e:	f003 fb8f 	bl	8003e30 <memset>
	memset(SARAcsqResult,'\0',4);
 8000712:	2204      	movs	r2, #4
 8000714:	2100      	movs	r1, #0
 8000716:	480e      	ldr	r0, [pc, #56]	; (8000750 <prepareSaraMeasurement+0xb0>)
 8000718:	f003 fb8a 	bl	8003e30 <memset>

	memset(saraCESQmessage,'\0',70);
 800071c:	2246      	movs	r2, #70	; 0x46
 800071e:	2100      	movs	r1, #0
 8000720:	480c      	ldr	r0, [pc, #48]	; (8000754 <prepareSaraMeasurement+0xb4>)
 8000722:	f003 fb85 	bl	8003e30 <memset>
	memset(saraCSQmessage,'\0',50);
 8000726:	2232      	movs	r2, #50	; 0x32
 8000728:	2100      	movs	r1, #0
 800072a:	480b      	ldr	r0, [pc, #44]	; (8000758 <prepareSaraMeasurement+0xb8>)
 800072c:	f003 fb80 	bl	8003e30 <memset>
}
 8000730:	bf00      	nop
 8000732:	3708      	adds	r7, #8
 8000734:	46bd      	mov	sp, r7
 8000736:	bd80      	pop	{r7, pc}
 8000738:	200012f0 	.word	0x200012f0
 800073c:	2000006c 	.word	0x2000006c
 8000740:	20000074 	.word	0x20000074
 8000744:	20001558 	.word	0x20001558
 8000748:	200015a8 	.word	0x200015a8
 800074c:	080052f8 	.word	0x080052f8
 8000750:	20001438 	.word	0x20001438
 8000754:	20001370 	.word	0x20001370
 8000758:	20001504 	.word	0x20001504

0800075c <NEMEUS_Extract_Lora_Measurements>:

void NEMEUS_Extract_Lora_Measurements(uint8_t * cmd){
 800075c:	b480      	push	{r7}
 800075e:	b085      	sub	sp, #20
 8000760:	af00      	add	r7, sp, #0
 8000762:	6078      	str	r0, [r7, #4]
	int i = 8; // start after '+MAC: ' also contains 2 more of some ascii stuff???
 8000764:	2308      	movs	r3, #8
 8000766:	60fb      	str	r3, [r7, #12]
	int j = 0;
 8000768:	2300      	movs	r3, #0
 800076a:	60bb      	str	r3, [r7, #8]
	//while(i < strlen(cmd) && cmd[i] != '\n' && cmd[i] != '\0'){
	while(i < 69 && cmd[i] != '\n' && cmd[i] != '\0' && cmd[i] != '\r'){
 800076c:	e00e      	b.n	800078c <NEMEUS_Extract_Lora_Measurements+0x30>
		currentLoraSignalQuality[j] = cmd[i];
 800076e:	68fb      	ldr	r3, [r7, #12]
 8000770:	687a      	ldr	r2, [r7, #4]
 8000772:	4413      	add	r3, r2
 8000774:	7819      	ldrb	r1, [r3, #0]
 8000776:	4a12      	ldr	r2, [pc, #72]	; (80007c0 <NEMEUS_Extract_Lora_Measurements+0x64>)
 8000778:	68bb      	ldr	r3, [r7, #8]
 800077a:	4413      	add	r3, r2
 800077c:	460a      	mov	r2, r1
 800077e:	701a      	strb	r2, [r3, #0]
		i++;
 8000780:	68fb      	ldr	r3, [r7, #12]
 8000782:	3301      	adds	r3, #1
 8000784:	60fb      	str	r3, [r7, #12]
		j++;
 8000786:	68bb      	ldr	r3, [r7, #8]
 8000788:	3301      	adds	r3, #1
 800078a:	60bb      	str	r3, [r7, #8]
	while(i < 69 && cmd[i] != '\n' && cmd[i] != '\0' && cmd[i] != '\r'){
 800078c:	68fb      	ldr	r3, [r7, #12]
 800078e:	2b44      	cmp	r3, #68	; 0x44
 8000790:	dc11      	bgt.n	80007b6 <NEMEUS_Extract_Lora_Measurements+0x5a>
 8000792:	68fb      	ldr	r3, [r7, #12]
 8000794:	687a      	ldr	r2, [r7, #4]
 8000796:	4413      	add	r3, r2
 8000798:	781b      	ldrb	r3, [r3, #0]
 800079a:	2b0a      	cmp	r3, #10
 800079c:	d00b      	beq.n	80007b6 <NEMEUS_Extract_Lora_Measurements+0x5a>
 800079e:	68fb      	ldr	r3, [r7, #12]
 80007a0:	687a      	ldr	r2, [r7, #4]
 80007a2:	4413      	add	r3, r2
 80007a4:	781b      	ldrb	r3, [r3, #0]
 80007a6:	2b00      	cmp	r3, #0
 80007a8:	d005      	beq.n	80007b6 <NEMEUS_Extract_Lora_Measurements+0x5a>
 80007aa:	68fb      	ldr	r3, [r7, #12]
 80007ac:	687a      	ldr	r2, [r7, #4]
 80007ae:	4413      	add	r3, r2
 80007b0:	781b      	ldrb	r3, [r3, #0]
 80007b2:	2b0d      	cmp	r3, #13
 80007b4:	d1db      	bne.n	800076e <NEMEUS_Extract_Lora_Measurements+0x12>
	}
	//sendToESP()
	//currentLoraSignalQuality[j] = '\0';

}
 80007b6:	bf00      	nop
 80007b8:	3714      	adds	r7, #20
 80007ba:	46bd      	mov	sp, r7
 80007bc:	bc80      	pop	{r7}
 80007be:	4770      	bx	lr
 80007c0:	20001260 	.word	0x20001260

080007c4 <NEMEUS_Prepare_Lora_Measurements>:

void NEMEUS_Prepare_Lora_Measurements(){
 80007c4:	b580      	push	{r7, lr}
 80007c6:	af00      	add	r7, sp, #0

	strcpy(loraMeasurements,loraTechName);
 80007c8:	4909      	ldr	r1, [pc, #36]	; (80007f0 <NEMEUS_Prepare_Lora_Measurements+0x2c>)
 80007ca:	480a      	ldr	r0, [pc, #40]	; (80007f4 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 80007cc:	f003 fbd5 	bl	8003f7a <strcpy>
	strcat(loraMeasurements,currentGPSCoords);
 80007d0:	4909      	ldr	r1, [pc, #36]	; (80007f8 <NEMEUS_Prepare_Lora_Measurements+0x34>)
 80007d2:	4808      	ldr	r0, [pc, #32]	; (80007f4 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 80007d4:	f003 fbc2 	bl	8003f5c <strcat>
	strcat(loraMeasurements,currentLoraSignalQuality);
 80007d8:	4908      	ldr	r1, [pc, #32]	; (80007fc <NEMEUS_Prepare_Lora_Measurements+0x38>)
 80007da:	4806      	ldr	r0, [pc, #24]	; (80007f4 <NEMEUS_Prepare_Lora_Measurements+0x30>)
 80007dc:	f003 fbbe 	bl	8003f5c <strcat>
	HAL_UART_Transmit(&huart2, endDelim, 1, 50);
	osDelay(50);
	*/


	memset(currentGPSCoords,'\0',80);
 80007e0:	2250      	movs	r2, #80	; 0x50
 80007e2:	2100      	movs	r1, #0
 80007e4:	4804      	ldr	r0, [pc, #16]	; (80007f8 <NEMEUS_Prepare_Lora_Measurements+0x34>)
 80007e6:	f003 fb23 	bl	8003e30 <memset>
}
 80007ea:	bf00      	nop
 80007ec:	bd80      	pop	{r7, pc}
 80007ee:	bf00      	nop
 80007f0:	200000c0 	.word	0x200000c0
 80007f4:	200013b8 	.word	0x200013b8
 80007f8:	20001558 	.word	0x20001558
 80007fc:	20001260 	.word	0x20001260

08000800 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000800:	b5b0      	push	{r4, r5, r7, lr}
 8000802:	b08a      	sub	sp, #40	; 0x28
 8000804:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000806:	f000 fd4d 	bl	80012a4 <HAL_Init>

  /* USER CODE BEGIN Init */

  srand(time(0));
 800080a:	2000      	movs	r0, #0
 800080c:	f003 fbbe 	bl	8003f8c <time>
 8000810:	4603      	mov	r3, r0
 8000812:	4618      	mov	r0, r3
 8000814:	f003 fb14 	bl	8003e40 <srand>
  int x = rand();
 8000818:	f003 fb40 	bl	8003e9c <rand>
 800081c:	6278      	str	r0, [r7, #36]	; 0x24
  int y = rand();
 800081e:	f003 fb3d 	bl	8003e9c <rand>
 8000822:	6238      	str	r0, [r7, #32]
  sprintf(randSeq, "%X", x%16);
 8000824:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000826:	425a      	negs	r2, r3
 8000828:	f003 030f 	and.w	r3, r3, #15
 800082c:	f002 020f 	and.w	r2, r2, #15
 8000830:	bf58      	it	pl
 8000832:	4253      	negpl	r3, r2
 8000834:	461a      	mov	r2, r3
 8000836:	491c      	ldr	r1, [pc, #112]	; (80008a8 <main+0xa8>)
 8000838:	481c      	ldr	r0, [pc, #112]	; (80008ac <main+0xac>)
 800083a:	f003 fb6f 	bl	8003f1c <siprintf>
  sprintf(stry, "%X", y%16);
 800083e:	6a3b      	ldr	r3, [r7, #32]
 8000840:	425a      	negs	r2, r3
 8000842:	f003 030f 	and.w	r3, r3, #15
 8000846:	f002 020f 	and.w	r2, r2, #15
 800084a:	bf58      	it	pl
 800084c:	4253      	negpl	r3, r2
 800084e:	461a      	mov	r2, r3
 8000850:	4915      	ldr	r1, [pc, #84]	; (80008a8 <main+0xa8>)
 8000852:	4817      	ldr	r0, [pc, #92]	; (80008b0 <main+0xb0>)
 8000854:	f003 fb62 	bl	8003f1c <siprintf>
  strcat(randSeq, stry);
 8000858:	4915      	ldr	r1, [pc, #84]	; (80008b0 <main+0xb0>)
 800085a:	4814      	ldr	r0, [pc, #80]	; (80008ac <main+0xac>)
 800085c:	f003 fb7e 	bl	8003f5c <strcat>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000860:	f000 f82e 	bl	80008c0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000864:	f000 f8e6 	bl	8000a34 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8000868:	f000 f866 	bl	8000938 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 800086c:	f000 f88e 	bl	800098c <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 8000870:	f000 f8b6 	bl	80009e0 <MX_USART3_UART_Init>
  /* USER CODE BEGIN 2 */

  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000874:	2201      	movs	r2, #1
 8000876:	f44f 7180 	mov.w	r1, #256	; 0x100
 800087a:	480e      	ldr	r0, [pc, #56]	; (80008b4 <main+0xb4>)
 800087c:	f000 ffa8 	bl	80017d0 <HAL_GPIO_WritePin>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 8000880:	4b0d      	ldr	r3, [pc, #52]	; (80008b8 <main+0xb8>)
 8000882:	1d3c      	adds	r4, r7, #4
 8000884:	461d      	mov	r5, r3
 8000886:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000888:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800088a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800088e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8000892:	1d3b      	adds	r3, r7, #4
 8000894:	2100      	movs	r1, #0
 8000896:	4618      	mov	r0, r3
 8000898:	f002 f8d4 	bl	8002a44 <osThreadCreate>
 800089c:	4603      	mov	r3, r0
 800089e:	4a07      	ldr	r2, [pc, #28]	; (80008bc <main+0xbc>)
 80008a0:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 80008a2:	f002 f8c8 	bl	8002a36 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80008a6:	e7fe      	b.n	80008a6 <main+0xa6>
 80008a8:	080052fc 	.word	0x080052fc
 80008ac:	200015b0 	.word	0x200015b0
 80008b0:	20001440 	.word	0x20001440
 80008b4:	40010800 	.word	0x40010800
 80008b8:	08005300 	.word	0x08005300
 80008bc:	20001190 	.word	0x20001190

080008c0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80008c0:	b580      	push	{r7, lr}
 80008c2:	b090      	sub	sp, #64	; 0x40
 80008c4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80008c6:	f107 0318 	add.w	r3, r7, #24
 80008ca:	2228      	movs	r2, #40	; 0x28
 80008cc:	2100      	movs	r1, #0
 80008ce:	4618      	mov	r0, r3
 80008d0:	f003 faae 	bl	8003e30 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80008d4:	1d3b      	adds	r3, r7, #4
 80008d6:	2200      	movs	r2, #0
 80008d8:	601a      	str	r2, [r3, #0]
 80008da:	605a      	str	r2, [r3, #4]
 80008dc:	609a      	str	r2, [r3, #8]
 80008de:	60da      	str	r2, [r3, #12]
 80008e0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80008e2:	2302      	movs	r3, #2
 80008e4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80008e6:	2301      	movs	r3, #1
 80008e8:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80008ea:	2310      	movs	r3, #16
 80008ec:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80008ee:	2300      	movs	r3, #0
 80008f0:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80008f2:	f107 0318 	add.w	r3, r7, #24
 80008f6:	4618      	mov	r0, r3
 80008f8:	f000 ff9c 	bl	8001834 <HAL_RCC_OscConfig>
 80008fc:	4603      	mov	r3, r0
 80008fe:	2b00      	cmp	r3, #0
 8000900:	d001      	beq.n	8000906 <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000902:	f000 fa6f 	bl	8000de4 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000906:	230f      	movs	r3, #15
 8000908:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800090a:	2300      	movs	r3, #0
 800090c:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800090e:	2300      	movs	r3, #0
 8000910:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000912:	2300      	movs	r3, #0
 8000914:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000916:	2300      	movs	r3, #0
 8000918:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800091a:	1d3b      	adds	r3, r7, #4
 800091c:	2100      	movs	r1, #0
 800091e:	4618      	mov	r0, r3
 8000920:	f001 fa08 	bl	8001d34 <HAL_RCC_ClockConfig>
 8000924:	4603      	mov	r3, r0
 8000926:	2b00      	cmp	r3, #0
 8000928:	d001      	beq.n	800092e <SystemClock_Config+0x6e>
  {
    Error_Handler();
 800092a:	f000 fa5b 	bl	8000de4 <Error_Handler>
  }
}
 800092e:	bf00      	nop
 8000930:	3740      	adds	r7, #64	; 0x40
 8000932:	46bd      	mov	sp, r7
 8000934:	bd80      	pop	{r7, pc}
	...

08000938 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000938:	b580      	push	{r7, lr}
 800093a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 800093c:	4b11      	ldr	r3, [pc, #68]	; (8000984 <MX_USART1_UART_Init+0x4c>)
 800093e:	4a12      	ldr	r2, [pc, #72]	; (8000988 <MX_USART1_UART_Init+0x50>)
 8000940:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 57600;
 8000942:	4b10      	ldr	r3, [pc, #64]	; (8000984 <MX_USART1_UART_Init+0x4c>)
 8000944:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 8000948:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800094a:	4b0e      	ldr	r3, [pc, #56]	; (8000984 <MX_USART1_UART_Init+0x4c>)
 800094c:	2200      	movs	r2, #0
 800094e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000950:	4b0c      	ldr	r3, [pc, #48]	; (8000984 <MX_USART1_UART_Init+0x4c>)
 8000952:	2200      	movs	r2, #0
 8000954:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000956:	4b0b      	ldr	r3, [pc, #44]	; (8000984 <MX_USART1_UART_Init+0x4c>)
 8000958:	2200      	movs	r2, #0
 800095a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800095c:	4b09      	ldr	r3, [pc, #36]	; (8000984 <MX_USART1_UART_Init+0x4c>)
 800095e:	220c      	movs	r2, #12
 8000960:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000962:	4b08      	ldr	r3, [pc, #32]	; (8000984 <MX_USART1_UART_Init+0x4c>)
 8000964:	2200      	movs	r2, #0
 8000966:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000968:	4b06      	ldr	r3, [pc, #24]	; (8000984 <MX_USART1_UART_Init+0x4c>)
 800096a:	2200      	movs	r2, #0
 800096c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800096e:	4805      	ldr	r0, [pc, #20]	; (8000984 <MX_USART1_UART_Init+0x4c>)
 8000970:	f001 fdf4 	bl	800255c <HAL_UART_Init>
 8000974:	4603      	mov	r3, r0
 8000976:	2b00      	cmp	r3, #0
 8000978:	d001      	beq.n	800097e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 800097a:	f000 fa33 	bl	8000de4 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800097e:	bf00      	nop
 8000980:	bd80      	pop	{r7, pc}
 8000982:	bf00      	nop
 8000984:	200012ac 	.word	0x200012ac
 8000988:	40013800 	.word	0x40013800

0800098c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 800098c:	b580      	push	{r7, lr}
 800098e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000990:	4b11      	ldr	r3, [pc, #68]	; (80009d8 <MX_USART2_UART_Init+0x4c>)
 8000992:	4a12      	ldr	r2, [pc, #72]	; (80009dc <MX_USART2_UART_Init+0x50>)
 8000994:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 57600;
 8000996:	4b10      	ldr	r3, [pc, #64]	; (80009d8 <MX_USART2_UART_Init+0x4c>)
 8000998:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 800099c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800099e:	4b0e      	ldr	r3, [pc, #56]	; (80009d8 <MX_USART2_UART_Init+0x4c>)
 80009a0:	2200      	movs	r2, #0
 80009a2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80009a4:	4b0c      	ldr	r3, [pc, #48]	; (80009d8 <MX_USART2_UART_Init+0x4c>)
 80009a6:	2200      	movs	r2, #0
 80009a8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80009aa:	4b0b      	ldr	r3, [pc, #44]	; (80009d8 <MX_USART2_UART_Init+0x4c>)
 80009ac:	2200      	movs	r2, #0
 80009ae:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80009b0:	4b09      	ldr	r3, [pc, #36]	; (80009d8 <MX_USART2_UART_Init+0x4c>)
 80009b2:	220c      	movs	r2, #12
 80009b4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80009b6:	4b08      	ldr	r3, [pc, #32]	; (80009d8 <MX_USART2_UART_Init+0x4c>)
 80009b8:	2200      	movs	r2, #0
 80009ba:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80009bc:	4b06      	ldr	r3, [pc, #24]	; (80009d8 <MX_USART2_UART_Init+0x4c>)
 80009be:	2200      	movs	r2, #0
 80009c0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80009c2:	4805      	ldr	r0, [pc, #20]	; (80009d8 <MX_USART2_UART_Init+0x4c>)
 80009c4:	f001 fdca 	bl	800255c <HAL_UART_Init>
 80009c8:	4603      	mov	r3, r0
 80009ca:	2b00      	cmp	r3, #0
 80009cc:	d001      	beq.n	80009d2 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80009ce:	f000 fa09 	bl	8000de4 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80009d2:	bf00      	nop
 80009d4:	bd80      	pop	{r7, pc}
 80009d6:	bf00      	nop
 80009d8:	200014c4 	.word	0x200014c4
 80009dc:	40004400 	.word	0x40004400

080009e0 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80009e0:	b580      	push	{r7, lr}
 80009e2:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80009e4:	4b11      	ldr	r3, [pc, #68]	; (8000a2c <MX_USART3_UART_Init+0x4c>)
 80009e6:	4a12      	ldr	r2, [pc, #72]	; (8000a30 <MX_USART3_UART_Init+0x50>)
 80009e8:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 38400;
 80009ea:	4b10      	ldr	r3, [pc, #64]	; (8000a2c <MX_USART3_UART_Init+0x4c>)
 80009ec:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 80009f0:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80009f2:	4b0e      	ldr	r3, [pc, #56]	; (8000a2c <MX_USART3_UART_Init+0x4c>)
 80009f4:	2200      	movs	r2, #0
 80009f6:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80009f8:	4b0c      	ldr	r3, [pc, #48]	; (8000a2c <MX_USART3_UART_Init+0x4c>)
 80009fa:	2200      	movs	r2, #0
 80009fc:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80009fe:	4b0b      	ldr	r3, [pc, #44]	; (8000a2c <MX_USART3_UART_Init+0x4c>)
 8000a00:	2200      	movs	r2, #0
 8000a02:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8000a04:	4b09      	ldr	r3, [pc, #36]	; (8000a2c <MX_USART3_UART_Init+0x4c>)
 8000a06:	220c      	movs	r2, #12
 8000a08:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000a0a:	4b08      	ldr	r3, [pc, #32]	; (8000a2c <MX_USART3_UART_Init+0x4c>)
 8000a0c:	2200      	movs	r2, #0
 8000a0e:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8000a10:	4b06      	ldr	r3, [pc, #24]	; (8000a2c <MX_USART3_UART_Init+0x4c>)
 8000a12:	2200      	movs	r2, #0
 8000a14:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8000a16:	4805      	ldr	r0, [pc, #20]	; (8000a2c <MX_USART3_UART_Init+0x4c>)
 8000a18:	f001 fda0 	bl	800255c <HAL_UART_Init>
 8000a1c:	4603      	mov	r3, r0
 8000a1e:	2b00      	cmp	r3, #0
 8000a20:	d001      	beq.n	8000a26 <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8000a22:	f000 f9df 	bl	8000de4 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8000a26:	bf00      	nop
 8000a28:	bd80      	pop	{r7, pc}
 8000a2a:	bf00      	nop
 8000a2c:	20001194 	.word	0x20001194
 8000a30:	40004800 	.word	0x40004800

08000a34 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000a34:	b580      	push	{r7, lr}
 8000a36:	b088      	sub	sp, #32
 8000a38:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a3a:	f107 0310 	add.w	r3, r7, #16
 8000a3e:	2200      	movs	r2, #0
 8000a40:	601a      	str	r2, [r3, #0]
 8000a42:	605a      	str	r2, [r3, #4]
 8000a44:	609a      	str	r2, [r3, #8]
 8000a46:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000a48:	4b28      	ldr	r3, [pc, #160]	; (8000aec <MX_GPIO_Init+0xb8>)
 8000a4a:	699b      	ldr	r3, [r3, #24]
 8000a4c:	4a27      	ldr	r2, [pc, #156]	; (8000aec <MX_GPIO_Init+0xb8>)
 8000a4e:	f043 0310 	orr.w	r3, r3, #16
 8000a52:	6193      	str	r3, [r2, #24]
 8000a54:	4b25      	ldr	r3, [pc, #148]	; (8000aec <MX_GPIO_Init+0xb8>)
 8000a56:	699b      	ldr	r3, [r3, #24]
 8000a58:	f003 0310 	and.w	r3, r3, #16
 8000a5c:	60fb      	str	r3, [r7, #12]
 8000a5e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000a60:	4b22      	ldr	r3, [pc, #136]	; (8000aec <MX_GPIO_Init+0xb8>)
 8000a62:	699b      	ldr	r3, [r3, #24]
 8000a64:	4a21      	ldr	r2, [pc, #132]	; (8000aec <MX_GPIO_Init+0xb8>)
 8000a66:	f043 0304 	orr.w	r3, r3, #4
 8000a6a:	6193      	str	r3, [r2, #24]
 8000a6c:	4b1f      	ldr	r3, [pc, #124]	; (8000aec <MX_GPIO_Init+0xb8>)
 8000a6e:	699b      	ldr	r3, [r3, #24]
 8000a70:	f003 0304 	and.w	r3, r3, #4
 8000a74:	60bb      	str	r3, [r7, #8]
 8000a76:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000a78:	4b1c      	ldr	r3, [pc, #112]	; (8000aec <MX_GPIO_Init+0xb8>)
 8000a7a:	699b      	ldr	r3, [r3, #24]
 8000a7c:	4a1b      	ldr	r2, [pc, #108]	; (8000aec <MX_GPIO_Init+0xb8>)
 8000a7e:	f043 0308 	orr.w	r3, r3, #8
 8000a82:	6193      	str	r3, [r2, #24]
 8000a84:	4b19      	ldr	r3, [pc, #100]	; (8000aec <MX_GPIO_Init+0xb8>)
 8000a86:	699b      	ldr	r3, [r3, #24]
 8000a88:	f003 0308 	and.w	r3, r3, #8
 8000a8c:	607b      	str	r3, [r7, #4]
 8000a8e:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8000a90:	2200      	movs	r2, #0
 8000a92:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000a96:	4816      	ldr	r0, [pc, #88]	; (8000af0 <MX_GPIO_Init+0xbc>)
 8000a98:	f000 fe9a 	bl	80017d0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8000a9c:	2200      	movs	r2, #0
 8000a9e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000aa2:	4814      	ldr	r0, [pc, #80]	; (8000af4 <MX_GPIO_Init+0xc0>)
 8000aa4:	f000 fe94 	bl	80017d0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000aa8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000aac:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000aae:	2301      	movs	r3, #1
 8000ab0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ab2:	2300      	movs	r3, #0
 8000ab4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ab6:	2302      	movs	r3, #2
 8000ab8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000aba:	f107 0310 	add.w	r3, r7, #16
 8000abe:	4619      	mov	r1, r3
 8000ac0:	480b      	ldr	r0, [pc, #44]	; (8000af0 <MX_GPIO_Init+0xbc>)
 8000ac2:	f000 fd01 	bl	80014c8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000ac6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000aca:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000acc:	2301      	movs	r3, #1
 8000ace:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ad0:	2300      	movs	r3, #0
 8000ad2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ad4:	2302      	movs	r3, #2
 8000ad6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000ad8:	f107 0310 	add.w	r3, r7, #16
 8000adc:	4619      	mov	r1, r3
 8000ade:	4805      	ldr	r0, [pc, #20]	; (8000af4 <MX_GPIO_Init+0xc0>)
 8000ae0:	f000 fcf2 	bl	80014c8 <HAL_GPIO_Init>

}
 8000ae4:	bf00      	nop
 8000ae6:	3720      	adds	r7, #32
 8000ae8:	46bd      	mov	sp, r7
 8000aea:	bd80      	pop	{r7, pc}
 8000aec:	40021000 	.word	0x40021000
 8000af0:	40011000 	.word	0x40011000
 8000af4:	40010800 	.word	0x40010800

08000af8 <sendToESP>:

/* USER CODE BEGIN 4 */

void sendToESP(uint8_t * msg) {
 8000af8:	b580      	push	{r7, lr}
 8000afa:	b082      	sub	sp, #8
 8000afc:	af00      	add	r7, sp, #0
 8000afe:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart2, beginDelim, 1, 50);
 8000b00:	2332      	movs	r3, #50	; 0x32
 8000b02:	2201      	movs	r2, #1
 8000b04:	490b      	ldr	r1, [pc, #44]	; (8000b34 <sendToESP+0x3c>)
 8000b06:	480c      	ldr	r0, [pc, #48]	; (8000b38 <sendToESP+0x40>)
 8000b08:	f001 fd75 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, msg, strlen(msg), 50);
 8000b0c:	6878      	ldr	r0, [r7, #4]
 8000b0e:	f7ff fb1f 	bl	8000150 <strlen>
 8000b12:	4603      	mov	r3, r0
 8000b14:	b29a      	uxth	r2, r3
 8000b16:	2332      	movs	r3, #50	; 0x32
 8000b18:	6879      	ldr	r1, [r7, #4]
 8000b1a:	4807      	ldr	r0, [pc, #28]	; (8000b38 <sendToESP+0x40>)
 8000b1c:	f001 fd6b 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, endDelim, 1, 50);
 8000b20:	2332      	movs	r3, #50	; 0x32
 8000b22:	2201      	movs	r2, #1
 8000b24:	4905      	ldr	r1, [pc, #20]	; (8000b3c <sendToESP+0x44>)
 8000b26:	4804      	ldr	r0, [pc, #16]	; (8000b38 <sendToESP+0x40>)
 8000b28:	f001 fd65 	bl	80025f6 <HAL_UART_Transmit>
}
 8000b2c:	bf00      	nop
 8000b2e:	3708      	adds	r7, #8
 8000b30:	46bd      	mov	sp, r7
 8000b32:	bd80      	pop	{r7, pc}
 8000b34:	200000c8 	.word	0x200000c8
 8000b38:	200014c4 	.word	0x200014c4
 8000b3c:	200000cc 	.word	0x200000cc

08000b40 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 8000b40:	b590      	push	{r4, r7, lr}
 8000b42:	b0d1      	sub	sp, #324	; 0x144
 8000b44:	af00      	add	r7, sp, #0
 8000b46:	1d3b      	adds	r3, r7, #4
 8000b48:	6018      	str	r0, [r3, #0]
  /* USER CODE BEGIN 5 */

  uint8_t test[] = "AT+COPS?\r\n";
 8000b4a:	4a88      	ldr	r2, [pc, #544]	; (8000d6c <StartDefaultTask+0x22c>)
 8000b4c:	f507 739a 	add.w	r3, r7, #308	; 0x134
 8000b50:	ca07      	ldmia	r2, {r0, r1, r2}
 8000b52:	c303      	stmia	r3!, {r0, r1}
 8000b54:	801a      	strh	r2, [r3, #0]
 8000b56:	3302      	adds	r3, #2
 8000b58:	0c12      	lsrs	r2, r2, #16
 8000b5a:	701a      	strb	r2, [r3, #0]
  uint8_t test2[] = "AT+MAC=ON\r\n";
 8000b5c:	4a84      	ldr	r2, [pc, #528]	; (8000d70 <StartDefaultTask+0x230>)
 8000b5e:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8000b62:	ca07      	ldmia	r2, {r0, r1, r2}
 8000b64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  uint8_t debugTest[] = "AT+DEBUG=ME?";
 8000b68:	4b82      	ldr	r3, [pc, #520]	; (8000d74 <StartDefaultTask+0x234>)
 8000b6a:	f507 748c 	add.w	r4, r7, #280	; 0x118
 8000b6e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000b70:	c407      	stmia	r4!, {r0, r1, r2}
 8000b72:	7023      	strb	r3, [r4, #0]
  uint8_t loopDone[] = "Loop done\r\n";
 8000b74:	4a80      	ldr	r2, [pc, #512]	; (8000d78 <StartDefaultTask+0x238>)
 8000b76:	f507 7386 	add.w	r3, r7, #268	; 0x10c
 8000b7a:	ca07      	ldmia	r2, {r0, r1, r2}
 8000b7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  sendToESP(debugTest);
 8000b80:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8000b84:	4618      	mov	r0, r3
 8000b86:	f7ff ffb7 	bl	8000af8 <sendToESP>
  osDelay(4500);
 8000b8a:	f241 1094 	movw	r0, #4500	; 0x1194
 8000b8e:	f001 ffa5 	bl	8002adc <osDelay>
  SARA_Init();
 8000b92:	f7ff fafd 	bl	8000190 <SARA_Init>
  nemeus_Power_Cycle();
 8000b96:	f7ff fb71 	bl	800027c <nemeus_Power_Cycle>

  //uint8_t sigfoxSend[23] = "AT+SF=SNDBIN,";
  uint8_t sigfoxSend[30];
  uint8_t sigfoxEnd[] = ",0\r\n";
 8000b9a:	4a78      	ldr	r2, [pc, #480]	; (8000d7c <StartDefaultTask+0x23c>)
 8000b9c:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8000ba0:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000ba4:	6018      	str	r0, [r3, #0]
 8000ba6:	3304      	adds	r3, #4
 8000ba8:	7019      	strb	r1, [r3, #0]
  uint8_t SigFoxMessage[69];
  uint8_t saraMSG[69];

  for(;;)
  {
    osDelay(1000);
 8000baa:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000bae:	f001 ff95 	bl	8002adc <osDelay>
    //sendToESP(test);
    HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 8000bb2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000bb6:	4872      	ldr	r0, [pc, #456]	; (8000d80 <StartDefaultTask+0x240>)
 8000bb8:	f000 fe22 	bl	8001800 <HAL_GPIO_TogglePin>
// **** SARA STUFF ****

    HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 8000bbc:	4871      	ldr	r0, [pc, #452]	; (8000d84 <StartDefaultTask+0x244>)
 8000bbe:	f7ff fac7 	bl	8000150 <strlen>
 8000bc2:	4603      	mov	r3, r0
 8000bc4:	b29a      	uxth	r2, r3
 8000bc6:	2332      	movs	r3, #50	; 0x32
 8000bc8:	496e      	ldr	r1, [pc, #440]	; (8000d84 <StartDefaultTask+0x244>)
 8000bca:	486f      	ldr	r0, [pc, #444]	; (8000d88 <StartDefaultTask+0x248>)
 8000bcc:	f001 fd13 	bl	80025f6 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCESQmessage, 70, 150);
 8000bd0:	2396      	movs	r3, #150	; 0x96
 8000bd2:	2246      	movs	r2, #70	; 0x46
 8000bd4:	496d      	ldr	r1, [pc, #436]	; (8000d8c <StartDefaultTask+0x24c>)
 8000bd6:	486c      	ldr	r0, [pc, #432]	; (8000d88 <StartDefaultTask+0x248>)
 8000bd8:	f001 fd9f 	bl	800271a <HAL_UART_Receive>
    osDelay(200);
 8000bdc:	20c8      	movs	r0, #200	; 0xc8
 8000bde:	f001 ff7d 	bl	8002adc <osDelay>
    getResultParameterCESQ(4, saraCESQmessage);
 8000be2:	496a      	ldr	r1, [pc, #424]	; (8000d8c <StartDefaultTask+0x24c>)
 8000be4:	2004      	movs	r0, #4
 8000be6:	f7ff fc7d 	bl	80004e4 <getResultParameterCESQ>
    //sendToESP(saraMSG);
    //sendToESP(SARARsrpRsrq);

    HAL_UART_Transmit(&huart1, SARAcsq, strlen(SARAcsq), 50);
 8000bea:	4869      	ldr	r0, [pc, #420]	; (8000d90 <StartDefaultTask+0x250>)
 8000bec:	f7ff fab0 	bl	8000150 <strlen>
 8000bf0:	4603      	mov	r3, r0
 8000bf2:	b29a      	uxth	r2, r3
 8000bf4:	2332      	movs	r3, #50	; 0x32
 8000bf6:	4966      	ldr	r1, [pc, #408]	; (8000d90 <StartDefaultTask+0x250>)
 8000bf8:	4863      	ldr	r0, [pc, #396]	; (8000d88 <StartDefaultTask+0x248>)
 8000bfa:	f001 fcfc 	bl	80025f6 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCSQmessage, 50, 50);
 8000bfe:	2332      	movs	r3, #50	; 0x32
 8000c00:	2232      	movs	r2, #50	; 0x32
 8000c02:	4964      	ldr	r1, [pc, #400]	; (8000d94 <StartDefaultTask+0x254>)
 8000c04:	4860      	ldr	r0, [pc, #384]	; (8000d88 <StartDefaultTask+0x248>)
 8000c06:	f001 fd88 	bl	800271a <HAL_UART_Receive>
    //sendToESP(saraCSQmessage);

    getCSQResult(saraCSQmessage);
 8000c0a:	4862      	ldr	r0, [pc, #392]	; (8000d94 <StartDefaultTask+0x254>)
 8000c0c:	f7ff fcc0 	bl	8000590 <getCSQResult>
    //sendToESP(SARAcsqResult);
    osDelay(1000);
 8000c10:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000c14:	f001 ff62 	bl	8002adc <osDelay>
    /*
    HAL_UART_Transmit(&huart1, getGPSCoords, strlen(getGPSCoords), 50);
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
	*/
    getGPSCoordinates();
 8000c18:	f7ff fcf4 	bl	8000604 <getGPSCoordinates>
    prepareSaraMeasurement(7);
 8000c1c:	2007      	movs	r0, #7
 8000c1e:	f7ff fd3f 	bl	80006a0 <prepareSaraMeasurement>
    sendToESP(SaraMeasurements);
 8000c22:	485d      	ldr	r0, [pc, #372]	; (8000d98 <StartDefaultTask+0x258>)
 8000c24:	f7ff ff68 	bl	8000af8 <sendToESP>

    //sendToESP(SARARsrpRsrq);

	SARA_ChangeTech('9');
 8000c28:	2039      	movs	r0, #57	; 0x39
 8000c2a:	f7ff fb9d 	bl	8000368 <SARA_ChangeTech>

	osDelay(1000);
 8000c2e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000c32:	f001 ff53 	bl	8002adc <osDelay>
	HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 8000c36:	4853      	ldr	r0, [pc, #332]	; (8000d84 <StartDefaultTask+0x244>)
 8000c38:	f7ff fa8a 	bl	8000150 <strlen>
 8000c3c:	4603      	mov	r3, r0
 8000c3e:	b29a      	uxth	r2, r3
 8000c40:	2332      	movs	r3, #50	; 0x32
 8000c42:	4950      	ldr	r1, [pc, #320]	; (8000d84 <StartDefaultTask+0x244>)
 8000c44:	4850      	ldr	r0, [pc, #320]	; (8000d88 <StartDefaultTask+0x248>)
 8000c46:	f001 fcd6 	bl	80025f6 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, saraCESQmessage, 70, 150);
 8000c4a:	2396      	movs	r3, #150	; 0x96
 8000c4c:	2246      	movs	r2, #70	; 0x46
 8000c4e:	494f      	ldr	r1, [pc, #316]	; (8000d8c <StartDefaultTask+0x24c>)
 8000c50:	484d      	ldr	r0, [pc, #308]	; (8000d88 <StartDefaultTask+0x248>)
 8000c52:	f001 fd62 	bl	800271a <HAL_UART_Receive>
	osDelay(200);
 8000c56:	20c8      	movs	r0, #200	; 0xc8
 8000c58:	f001 ff40 	bl	8002adc <osDelay>
	getResultParameterCESQ(4, saraCESQmessage);
 8000c5c:	494b      	ldr	r1, [pc, #300]	; (8000d8c <StartDefaultTask+0x24c>)
 8000c5e:	2004      	movs	r0, #4
 8000c60:	f7ff fc40 	bl	80004e4 <getResultParameterCESQ>

    HAL_UART_Transmit(&huart1, SARAcsq, strlen(SARAcsq), 50);
 8000c64:	484a      	ldr	r0, [pc, #296]	; (8000d90 <StartDefaultTask+0x250>)
 8000c66:	f7ff fa73 	bl	8000150 <strlen>
 8000c6a:	4603      	mov	r3, r0
 8000c6c:	b29a      	uxth	r2, r3
 8000c6e:	2332      	movs	r3, #50	; 0x32
 8000c70:	4947      	ldr	r1, [pc, #284]	; (8000d90 <StartDefaultTask+0x250>)
 8000c72:	4845      	ldr	r0, [pc, #276]	; (8000d88 <StartDefaultTask+0x248>)
 8000c74:	f001 fcbf 	bl	80025f6 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraCSQmessage, 50, 50);
 8000c78:	2332      	movs	r3, #50	; 0x32
 8000c7a:	2232      	movs	r2, #50	; 0x32
 8000c7c:	4945      	ldr	r1, [pc, #276]	; (8000d94 <StartDefaultTask+0x254>)
 8000c7e:	4842      	ldr	r0, [pc, #264]	; (8000d88 <StartDefaultTask+0x248>)
 8000c80:	f001 fd4b 	bl	800271a <HAL_UART_Receive>

    getCSQResult(saraCSQmessage);
 8000c84:	4843      	ldr	r0, [pc, #268]	; (8000d94 <StartDefaultTask+0x254>)
 8000c86:	f7ff fc83 	bl	8000590 <getCSQResult>
    osDelay(500);
 8000c8a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000c8e:	f001 ff25 	bl	8002adc <osDelay>
    /*
    HAL_UART_Transmit(&huart1, getGPSCoords, strlen(getGPSCoords), 50);
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
	*/
    getGPSCoordinates();
 8000c92:	f7ff fcb7 	bl	8000604 <getGPSCoordinates>
    prepareSaraMeasurement(9);
 8000c96:	2009      	movs	r0, #9
 8000c98:	f7ff fd02 	bl	80006a0 <prepareSaraMeasurement>
    sendToESP(SaraMeasurements);
 8000c9c:	483e      	ldr	r0, [pc, #248]	; (8000d98 <StartDefaultTask+0x258>)
 8000c9e:	f7ff ff2b 	bl	8000af8 <sendToESP>

	SARA_ChangeTech('7');
 8000ca2:	2037      	movs	r0, #55	; 0x37
 8000ca4:	f7ff fb60 	bl	8000368 <SARA_ChangeTech>


// **** NEMEUS STUFF ****
// **********************

    HAL_UART_Transmit(&huart3, getLoraLCR, strlen(getLoraLCR), 50);
 8000ca8:	483c      	ldr	r0, [pc, #240]	; (8000d9c <StartDefaultTask+0x25c>)
 8000caa:	f7ff fa51 	bl	8000150 <strlen>
 8000cae:	4603      	mov	r3, r0
 8000cb0:	b29a      	uxth	r2, r3
 8000cb2:	2332      	movs	r3, #50	; 0x32
 8000cb4:	4939      	ldr	r1, [pc, #228]	; (8000d9c <StartDefaultTask+0x25c>)
 8000cb6:	483a      	ldr	r0, [pc, #232]	; (8000da0 <StartDefaultTask+0x260>)
 8000cb8:	f001 fc9d 	bl	80025f6 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart3, LoRaMessage, 69, 10000);
 8000cbc:	f107 019c 	add.w	r1, r7, #156	; 0x9c
 8000cc0:	f242 7310 	movw	r3, #10000	; 0x2710
 8000cc4:	2245      	movs	r2, #69	; 0x45
 8000cc6:	4836      	ldr	r0, [pc, #216]	; (8000da0 <StartDefaultTask+0x260>)
 8000cc8:	f001 fd27 	bl	800271a <HAL_UART_Receive>
    NEMEUS_Extract_Lora_Measurements(LoRaMessage);
 8000ccc:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8000cd0:	4618      	mov	r0, r3
 8000cd2:	f7ff fd43 	bl	800075c <NEMEUS_Extract_Lora_Measurements>
    // Get Coords:
    /*
    HAL_UART_Transmit(&huart1, getGPSCoords, strlen(getGPSCoords), 50);
    HAL_UART_Receive(&huart1, currentGPSCoords, 80, 500);
	*/
    getGPSCoordinates();
 8000cd6:	f7ff fc95 	bl	8000604 <getGPSCoordinates>
    //sendToESP(currentGPSCoords);
    osDelay(500);
 8000cda:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000cde:	f001 fefd 	bl	8002adc <osDelay>


    NEMEUS_Prepare_Lora_Measurements();
 8000ce2:	f7ff fd6f 	bl	80007c4 <NEMEUS_Prepare_Lora_Measurements>

    sendToESP(loraMeasurements);
 8000ce6:	482f      	ldr	r0, [pc, #188]	; (8000da4 <StartDefaultTask+0x264>)
 8000ce8:	f7ff ff06 	bl	8000af8 <sendToESP>
    sendToESP(currentGPSCoords);
*/

	// BARE SÅ TTL OUTPUT ER LIDT PÆNERE!!!!
	//HAL_UART_Transmit(&huart2, loopDone, strlen(loopDone), 50);
    HAL_UART_Transmit(&huart2, crlf, strlen(crlf), 50);
 8000cec:	2332      	movs	r3, #50	; 0x32
 8000cee:	2202      	movs	r2, #2
 8000cf0:	492d      	ldr	r1, [pc, #180]	; (8000da8 <StartDefaultTask+0x268>)
 8000cf2:	482e      	ldr	r0, [pc, #184]	; (8000dac <StartDefaultTask+0x26c>)
 8000cf4:	f001 fc7f 	bl	80025f6 <HAL_UART_Transmit>

    //osDelay(1000);
    //nemeus_Power_Cycle();

	osDelay(50);
 8000cf8:	2032      	movs	r0, #50	; 0x32
 8000cfa:	f001 feef 	bl	8002adc <osDelay>
    memset(saraMSG,'\0', 69);
 8000cfe:	f107 030c 	add.w	r3, r7, #12
 8000d02:	2245      	movs	r2, #69	; 0x45
 8000d04:	2100      	movs	r1, #0
 8000d06:	4618      	mov	r0, r3
 8000d08:	f003 f892 	bl	8003e30 <memset>
	memset(SigFoxMessage, '\0', 69);
 8000d0c:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8000d10:	2245      	movs	r2, #69	; 0x45
 8000d12:	2100      	movs	r1, #0
 8000d14:	4618      	mov	r0, r3
 8000d16:	f003 f88b 	bl	8003e30 <memset>
	memset(LoRaMessage, '\0', 69);
 8000d1a:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8000d1e:	2245      	movs	r2, #69	; 0x45
 8000d20:	2100      	movs	r1, #0
 8000d22:	4618      	mov	r0, r3
 8000d24:	f003 f884 	bl	8003e30 <memset>
	memset(currentGPSCoords,'\0',80);
 8000d28:	2250      	movs	r2, #80	; 0x50
 8000d2a:	2100      	movs	r1, #0
 8000d2c:	4820      	ldr	r0, [pc, #128]	; (8000db0 <StartDefaultTask+0x270>)
 8000d2e:	f003 f87f 	bl	8003e30 <memset>
	memset(currentLoraSignalQuality,'\0',69);
 8000d32:	2245      	movs	r2, #69	; 0x45
 8000d34:	2100      	movs	r1, #0
 8000d36:	481f      	ldr	r0, [pc, #124]	; (8000db4 <StartDefaultTask+0x274>)
 8000d38:	f003 f87a 	bl	8003e30 <memset>
	memset(loraMeasurements,'\0',128);
 8000d3c:	2280      	movs	r2, #128	; 0x80
 8000d3e:	2100      	movs	r1, #0
 8000d40:	4818      	ldr	r0, [pc, #96]	; (8000da4 <StartDefaultTask+0x264>)
 8000d42:	f003 f875 	bl	8003e30 <memset>
	memset(sigfoxMeasurements,'\0',128);
 8000d46:	2280      	movs	r2, #128	; 0x80
 8000d48:	2100      	movs	r1, #0
 8000d4a:	481b      	ldr	r0, [pc, #108]	; (8000db8 <StartDefaultTask+0x278>)
 8000d4c:	f003 f870 	bl	8003e30 <memset>
	memset(sigfoxSend,'\0',30);
 8000d50:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8000d54:	221e      	movs	r2, #30
 8000d56:	2100      	movs	r1, #0
 8000d58:	4618      	mov	r0, r3
 8000d5a:	f003 f869 	bl	8003e30 <memset>
	sigFoxSeq++;
 8000d5e:	4b17      	ldr	r3, [pc, #92]	; (8000dbc <StartDefaultTask+0x27c>)
 8000d60:	681b      	ldr	r3, [r3, #0]
 8000d62:	3301      	adds	r3, #1
 8000d64:	4a15      	ldr	r2, [pc, #84]	; (8000dbc <StartDefaultTask+0x27c>)
 8000d66:	6013      	str	r3, [r2, #0]
  {
 8000d68:	e71f      	b.n	8000baa <StartDefaultTask+0x6a>
 8000d6a:	bf00      	nop
 8000d6c:	0800531c 	.word	0x0800531c
 8000d70:	08005328 	.word	0x08005328
 8000d74:	08005334 	.word	0x08005334
 8000d78:	08005344 	.word	0x08005344
 8000d7c:	08005350 	.word	0x08005350
 8000d80:	40011000 	.word	0x40011000
 8000d84:	20000060 	.word	0x20000060
 8000d88:	200012ac 	.word	0x200012ac
 8000d8c:	20001370 	.word	0x20001370
 8000d90:	20000054 	.word	0x20000054
 8000d94:	20001504 	.word	0x20001504
 8000d98:	200012f0 	.word	0x200012f0
 8000d9c:	2000009c 	.word	0x2000009c
 8000da0:	20001194 	.word	0x20001194
 8000da4:	200013b8 	.word	0x200013b8
 8000da8:	08005370 	.word	0x08005370
 8000dac:	200014c4 	.word	0x200014c4
 8000db0:	20001558 	.word	0x20001558
 8000db4:	20001260 	.word	0x20001260
 8000db8:	20001444 	.word	0x20001444
 8000dbc:	200003b4 	.word	0x200003b4

08000dc0 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000dc0:	b580      	push	{r7, lr}
 8000dc2:	b082      	sub	sp, #8
 8000dc4:	af00      	add	r7, sp, #0
 8000dc6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8000dc8:	687b      	ldr	r3, [r7, #4]
 8000dca:	681b      	ldr	r3, [r3, #0]
 8000dcc:	4a04      	ldr	r2, [pc, #16]	; (8000de0 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000dce:	4293      	cmp	r3, r2
 8000dd0:	d101      	bne.n	8000dd6 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000dd2:	f000 fa7d 	bl	80012d0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000dd6:	bf00      	nop
 8000dd8:	3708      	adds	r7, #8
 8000dda:	46bd      	mov	sp, r7
 8000ddc:	bd80      	pop	{r7, pc}
 8000dde:	bf00      	nop
 8000de0:	40012c00 	.word	0x40012c00

08000de4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000de4:	b480      	push	{r7}
 8000de6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000de8:	b672      	cpsid	i
}
 8000dea:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000dec:	e7fe      	b.n	8000dec <Error_Handler+0x8>
	...

08000df0 <HAL_MspInit>:
 8000df0:	b580      	push	{r7, lr}
 8000df2:	b084      	sub	sp, #16
 8000df4:	af00      	add	r7, sp, #0
 8000df6:	4b18      	ldr	r3, [pc, #96]	; (8000e58 <HAL_MspInit+0x68>)
 8000df8:	699b      	ldr	r3, [r3, #24]
 8000dfa:	4a17      	ldr	r2, [pc, #92]	; (8000e58 <HAL_MspInit+0x68>)
 8000dfc:	f043 0301 	orr.w	r3, r3, #1
 8000e00:	6193      	str	r3, [r2, #24]
 8000e02:	4b15      	ldr	r3, [pc, #84]	; (8000e58 <HAL_MspInit+0x68>)
 8000e04:	699b      	ldr	r3, [r3, #24]
 8000e06:	f003 0301 	and.w	r3, r3, #1
 8000e0a:	60bb      	str	r3, [r7, #8]
 8000e0c:	68bb      	ldr	r3, [r7, #8]
 8000e0e:	4b12      	ldr	r3, [pc, #72]	; (8000e58 <HAL_MspInit+0x68>)
 8000e10:	69db      	ldr	r3, [r3, #28]
 8000e12:	4a11      	ldr	r2, [pc, #68]	; (8000e58 <HAL_MspInit+0x68>)
 8000e14:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000e18:	61d3      	str	r3, [r2, #28]
 8000e1a:	4b0f      	ldr	r3, [pc, #60]	; (8000e58 <HAL_MspInit+0x68>)
 8000e1c:	69db      	ldr	r3, [r3, #28]
 8000e1e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000e22:	607b      	str	r3, [r7, #4]
 8000e24:	687b      	ldr	r3, [r7, #4]
 8000e26:	2200      	movs	r2, #0
 8000e28:	210f      	movs	r1, #15
 8000e2a:	f06f 0001 	mvn.w	r0, #1
 8000e2e:	f000 fb20 	bl	8001472 <HAL_NVIC_SetPriority>
 8000e32:	4b0a      	ldr	r3, [pc, #40]	; (8000e5c <HAL_MspInit+0x6c>)
 8000e34:	685b      	ldr	r3, [r3, #4]
 8000e36:	60fb      	str	r3, [r7, #12]
 8000e38:	68fb      	ldr	r3, [r7, #12]
 8000e3a:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000e3e:	60fb      	str	r3, [r7, #12]
 8000e40:	68fb      	ldr	r3, [r7, #12]
 8000e42:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000e46:	60fb      	str	r3, [r7, #12]
 8000e48:	4a04      	ldr	r2, [pc, #16]	; (8000e5c <HAL_MspInit+0x6c>)
 8000e4a:	68fb      	ldr	r3, [r7, #12]
 8000e4c:	6053      	str	r3, [r2, #4]
 8000e4e:	bf00      	nop
 8000e50:	3710      	adds	r7, #16
 8000e52:	46bd      	mov	sp, r7
 8000e54:	bd80      	pop	{r7, pc}
 8000e56:	bf00      	nop
 8000e58:	40021000 	.word	0x40021000
 8000e5c:	40010000 	.word	0x40010000

08000e60 <HAL_UART_MspInit>:
 8000e60:	b580      	push	{r7, lr}
 8000e62:	b08c      	sub	sp, #48	; 0x30
 8000e64:	af00      	add	r7, sp, #0
 8000e66:	6078      	str	r0, [r7, #4]
 8000e68:	f107 0320 	add.w	r3, r7, #32
 8000e6c:	2200      	movs	r2, #0
 8000e6e:	601a      	str	r2, [r3, #0]
 8000e70:	605a      	str	r2, [r3, #4]
 8000e72:	609a      	str	r2, [r3, #8]
 8000e74:	60da      	str	r2, [r3, #12]
 8000e76:	687b      	ldr	r3, [r7, #4]
 8000e78:	681b      	ldr	r3, [r3, #0]
 8000e7a:	4a53      	ldr	r2, [pc, #332]	; (8000fc8 <HAL_UART_MspInit+0x168>)
 8000e7c:	4293      	cmp	r3, r2
 8000e7e:	d132      	bne.n	8000ee6 <HAL_UART_MspInit+0x86>
 8000e80:	4b52      	ldr	r3, [pc, #328]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000e82:	699b      	ldr	r3, [r3, #24]
 8000e84:	4a51      	ldr	r2, [pc, #324]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000e86:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000e8a:	6193      	str	r3, [r2, #24]
 8000e8c:	4b4f      	ldr	r3, [pc, #316]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000e8e:	699b      	ldr	r3, [r3, #24]
 8000e90:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000e94:	61fb      	str	r3, [r7, #28]
 8000e96:	69fb      	ldr	r3, [r7, #28]
 8000e98:	4b4c      	ldr	r3, [pc, #304]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000e9a:	699b      	ldr	r3, [r3, #24]
 8000e9c:	4a4b      	ldr	r2, [pc, #300]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000e9e:	f043 0304 	orr.w	r3, r3, #4
 8000ea2:	6193      	str	r3, [r2, #24]
 8000ea4:	4b49      	ldr	r3, [pc, #292]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000ea6:	699b      	ldr	r3, [r3, #24]
 8000ea8:	f003 0304 	and.w	r3, r3, #4
 8000eac:	61bb      	str	r3, [r7, #24]
 8000eae:	69bb      	ldr	r3, [r7, #24]
 8000eb0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000eb4:	623b      	str	r3, [r7, #32]
 8000eb6:	2302      	movs	r3, #2
 8000eb8:	627b      	str	r3, [r7, #36]	; 0x24
 8000eba:	2303      	movs	r3, #3
 8000ebc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000ebe:	f107 0320 	add.w	r3, r7, #32
 8000ec2:	4619      	mov	r1, r3
 8000ec4:	4842      	ldr	r0, [pc, #264]	; (8000fd0 <HAL_UART_MspInit+0x170>)
 8000ec6:	f000 faff 	bl	80014c8 <HAL_GPIO_Init>
 8000eca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ece:	623b      	str	r3, [r7, #32]
 8000ed0:	2300      	movs	r3, #0
 8000ed2:	627b      	str	r3, [r7, #36]	; 0x24
 8000ed4:	2300      	movs	r3, #0
 8000ed6:	62bb      	str	r3, [r7, #40]	; 0x28
 8000ed8:	f107 0320 	add.w	r3, r7, #32
 8000edc:	4619      	mov	r1, r3
 8000ede:	483c      	ldr	r0, [pc, #240]	; (8000fd0 <HAL_UART_MspInit+0x170>)
 8000ee0:	f000 faf2 	bl	80014c8 <HAL_GPIO_Init>
 8000ee4:	e06c      	b.n	8000fc0 <HAL_UART_MspInit+0x160>
 8000ee6:	687b      	ldr	r3, [r7, #4]
 8000ee8:	681b      	ldr	r3, [r3, #0]
 8000eea:	4a3a      	ldr	r2, [pc, #232]	; (8000fd4 <HAL_UART_MspInit+0x174>)
 8000eec:	4293      	cmp	r3, r2
 8000eee:	d130      	bne.n	8000f52 <HAL_UART_MspInit+0xf2>
 8000ef0:	4b36      	ldr	r3, [pc, #216]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000ef2:	69db      	ldr	r3, [r3, #28]
 8000ef4:	4a35      	ldr	r2, [pc, #212]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000ef6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000efa:	61d3      	str	r3, [r2, #28]
 8000efc:	4b33      	ldr	r3, [pc, #204]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000efe:	69db      	ldr	r3, [r3, #28]
 8000f00:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000f04:	617b      	str	r3, [r7, #20]
 8000f06:	697b      	ldr	r3, [r7, #20]
 8000f08:	4b30      	ldr	r3, [pc, #192]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000f0a:	699b      	ldr	r3, [r3, #24]
 8000f0c:	4a2f      	ldr	r2, [pc, #188]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000f0e:	f043 0304 	orr.w	r3, r3, #4
 8000f12:	6193      	str	r3, [r2, #24]
 8000f14:	4b2d      	ldr	r3, [pc, #180]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000f16:	699b      	ldr	r3, [r3, #24]
 8000f18:	f003 0304 	and.w	r3, r3, #4
 8000f1c:	613b      	str	r3, [r7, #16]
 8000f1e:	693b      	ldr	r3, [r7, #16]
 8000f20:	2304      	movs	r3, #4
 8000f22:	623b      	str	r3, [r7, #32]
 8000f24:	2302      	movs	r3, #2
 8000f26:	627b      	str	r3, [r7, #36]	; 0x24
 8000f28:	2303      	movs	r3, #3
 8000f2a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000f2c:	f107 0320 	add.w	r3, r7, #32
 8000f30:	4619      	mov	r1, r3
 8000f32:	4827      	ldr	r0, [pc, #156]	; (8000fd0 <HAL_UART_MspInit+0x170>)
 8000f34:	f000 fac8 	bl	80014c8 <HAL_GPIO_Init>
 8000f38:	2308      	movs	r3, #8
 8000f3a:	623b      	str	r3, [r7, #32]
 8000f3c:	2300      	movs	r3, #0
 8000f3e:	627b      	str	r3, [r7, #36]	; 0x24
 8000f40:	2300      	movs	r3, #0
 8000f42:	62bb      	str	r3, [r7, #40]	; 0x28
 8000f44:	f107 0320 	add.w	r3, r7, #32
 8000f48:	4619      	mov	r1, r3
 8000f4a:	4821      	ldr	r0, [pc, #132]	; (8000fd0 <HAL_UART_MspInit+0x170>)
 8000f4c:	f000 fabc 	bl	80014c8 <HAL_GPIO_Init>
 8000f50:	e036      	b.n	8000fc0 <HAL_UART_MspInit+0x160>
 8000f52:	687b      	ldr	r3, [r7, #4]
 8000f54:	681b      	ldr	r3, [r3, #0]
 8000f56:	4a20      	ldr	r2, [pc, #128]	; (8000fd8 <HAL_UART_MspInit+0x178>)
 8000f58:	4293      	cmp	r3, r2
 8000f5a:	d131      	bne.n	8000fc0 <HAL_UART_MspInit+0x160>
 8000f5c:	4b1b      	ldr	r3, [pc, #108]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000f5e:	69db      	ldr	r3, [r3, #28]
 8000f60:	4a1a      	ldr	r2, [pc, #104]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000f62:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000f66:	61d3      	str	r3, [r2, #28]
 8000f68:	4b18      	ldr	r3, [pc, #96]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000f6a:	69db      	ldr	r3, [r3, #28]
 8000f6c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8000f70:	60fb      	str	r3, [r7, #12]
 8000f72:	68fb      	ldr	r3, [r7, #12]
 8000f74:	4b15      	ldr	r3, [pc, #84]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000f76:	699b      	ldr	r3, [r3, #24]
 8000f78:	4a14      	ldr	r2, [pc, #80]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000f7a:	f043 0308 	orr.w	r3, r3, #8
 8000f7e:	6193      	str	r3, [r2, #24]
 8000f80:	4b12      	ldr	r3, [pc, #72]	; (8000fcc <HAL_UART_MspInit+0x16c>)
 8000f82:	699b      	ldr	r3, [r3, #24]
 8000f84:	f003 0308 	and.w	r3, r3, #8
 8000f88:	60bb      	str	r3, [r7, #8]
 8000f8a:	68bb      	ldr	r3, [r7, #8]
 8000f8c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000f90:	623b      	str	r3, [r7, #32]
 8000f92:	2302      	movs	r3, #2
 8000f94:	627b      	str	r3, [r7, #36]	; 0x24
 8000f96:	2303      	movs	r3, #3
 8000f98:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000f9a:	f107 0320 	add.w	r3, r7, #32
 8000f9e:	4619      	mov	r1, r3
 8000fa0:	480e      	ldr	r0, [pc, #56]	; (8000fdc <HAL_UART_MspInit+0x17c>)
 8000fa2:	f000 fa91 	bl	80014c8 <HAL_GPIO_Init>
 8000fa6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000faa:	623b      	str	r3, [r7, #32]
 8000fac:	2300      	movs	r3, #0
 8000fae:	627b      	str	r3, [r7, #36]	; 0x24
 8000fb0:	2300      	movs	r3, #0
 8000fb2:	62bb      	str	r3, [r7, #40]	; 0x28
 8000fb4:	f107 0320 	add.w	r3, r7, #32
 8000fb8:	4619      	mov	r1, r3
 8000fba:	4808      	ldr	r0, [pc, #32]	; (8000fdc <HAL_UART_MspInit+0x17c>)
 8000fbc:	f000 fa84 	bl	80014c8 <HAL_GPIO_Init>
 8000fc0:	bf00      	nop
 8000fc2:	3730      	adds	r7, #48	; 0x30
 8000fc4:	46bd      	mov	sp, r7
 8000fc6:	bd80      	pop	{r7, pc}
 8000fc8:	40013800 	.word	0x40013800
 8000fcc:	40021000 	.word	0x40021000
 8000fd0:	40010800 	.word	0x40010800
 8000fd4:	40004400 	.word	0x40004400
 8000fd8:	40004800 	.word	0x40004800
 8000fdc:	40010c00 	.word	0x40010c00

08000fe0 <HAL_InitTick>:
 8000fe0:	b580      	push	{r7, lr}
 8000fe2:	b08c      	sub	sp, #48	; 0x30
 8000fe4:	af00      	add	r7, sp, #0
 8000fe6:	6078      	str	r0, [r7, #4]
 8000fe8:	2300      	movs	r3, #0
 8000fea:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000fec:	2300      	movs	r3, #0
 8000fee:	62bb      	str	r3, [r7, #40]	; 0x28
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	6879      	ldr	r1, [r7, #4]
 8000ff4:	2019      	movs	r0, #25
 8000ff6:	f000 fa3c 	bl	8001472 <HAL_NVIC_SetPriority>
 8000ffa:	2019      	movs	r0, #25
 8000ffc:	f000 fa55 	bl	80014aa <HAL_NVIC_EnableIRQ>
 8001000:	4b1e      	ldr	r3, [pc, #120]	; (800107c <HAL_InitTick+0x9c>)
 8001002:	699b      	ldr	r3, [r3, #24]
 8001004:	4a1d      	ldr	r2, [pc, #116]	; (800107c <HAL_InitTick+0x9c>)
 8001006:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800100a:	6193      	str	r3, [r2, #24]
 800100c:	4b1b      	ldr	r3, [pc, #108]	; (800107c <HAL_InitTick+0x9c>)
 800100e:	699b      	ldr	r3, [r3, #24]
 8001010:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8001014:	60fb      	str	r3, [r7, #12]
 8001016:	68fb      	ldr	r3, [r7, #12]
 8001018:	f107 0210 	add.w	r2, r7, #16
 800101c:	f107 0314 	add.w	r3, r7, #20
 8001020:	4611      	mov	r1, r2
 8001022:	4618      	mov	r0, r3
 8001024:	f001 f802 	bl	800202c <HAL_RCC_GetClockConfig>
 8001028:	f000 ffec 	bl	8002004 <HAL_RCC_GetPCLK2Freq>
 800102c:	62f8      	str	r0, [r7, #44]	; 0x2c
 800102e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001030:	4a13      	ldr	r2, [pc, #76]	; (8001080 <HAL_InitTick+0xa0>)
 8001032:	fba2 2303 	umull	r2, r3, r2, r3
 8001036:	0c9b      	lsrs	r3, r3, #18
 8001038:	3b01      	subs	r3, #1
 800103a:	62bb      	str	r3, [r7, #40]	; 0x28
 800103c:	4b11      	ldr	r3, [pc, #68]	; (8001084 <HAL_InitTick+0xa4>)
 800103e:	4a12      	ldr	r2, [pc, #72]	; (8001088 <HAL_InitTick+0xa8>)
 8001040:	601a      	str	r2, [r3, #0]
 8001042:	4b10      	ldr	r3, [pc, #64]	; (8001084 <HAL_InitTick+0xa4>)
 8001044:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001048:	60da      	str	r2, [r3, #12]
 800104a:	4a0e      	ldr	r2, [pc, #56]	; (8001084 <HAL_InitTick+0xa4>)
 800104c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800104e:	6053      	str	r3, [r2, #4]
 8001050:	4b0c      	ldr	r3, [pc, #48]	; (8001084 <HAL_InitTick+0xa4>)
 8001052:	2200      	movs	r2, #0
 8001054:	611a      	str	r2, [r3, #16]
 8001056:	4b0b      	ldr	r3, [pc, #44]	; (8001084 <HAL_InitTick+0xa4>)
 8001058:	2200      	movs	r2, #0
 800105a:	609a      	str	r2, [r3, #8]
 800105c:	4809      	ldr	r0, [pc, #36]	; (8001084 <HAL_InitTick+0xa4>)
 800105e:	f001 f833 	bl	80020c8 <HAL_TIM_Base_Init>
 8001062:	4603      	mov	r3, r0
 8001064:	2b00      	cmp	r3, #0
 8001066:	d104      	bne.n	8001072 <HAL_InitTick+0x92>
 8001068:	4806      	ldr	r0, [pc, #24]	; (8001084 <HAL_InitTick+0xa4>)
 800106a:	f001 f885 	bl	8002178 <HAL_TIM_Base_Start_IT>
 800106e:	4603      	mov	r3, r0
 8001070:	e000      	b.n	8001074 <HAL_InitTick+0x94>
 8001072:	2301      	movs	r3, #1
 8001074:	4618      	mov	r0, r3
 8001076:	3730      	adds	r7, #48	; 0x30
 8001078:	46bd      	mov	sp, r7
 800107a:	bd80      	pop	{r7, pc}
 800107c:	40021000 	.word	0x40021000
 8001080:	431bde83 	.word	0x431bde83
 8001084:	200015b4 	.word	0x200015b4
 8001088:	40012c00 	.word	0x40012c00

0800108c <NMI_Handler>:
 800108c:	b480      	push	{r7}
 800108e:	af00      	add	r7, sp, #0
 8001090:	e7fe      	b.n	8001090 <NMI_Handler+0x4>

08001092 <HardFault_Handler>:
 8001092:	b480      	push	{r7}
 8001094:	af00      	add	r7, sp, #0
 8001096:	e7fe      	b.n	8001096 <HardFault_Handler+0x4>

08001098 <MemManage_Handler>:
 8001098:	b480      	push	{r7}
 800109a:	af00      	add	r7, sp, #0
 800109c:	e7fe      	b.n	800109c <MemManage_Handler+0x4>

0800109e <BusFault_Handler>:
 800109e:	b480      	push	{r7}
 80010a0:	af00      	add	r7, sp, #0
 80010a2:	e7fe      	b.n	80010a2 <BusFault_Handler+0x4>

080010a4 <UsageFault_Handler>:
 80010a4:	b480      	push	{r7}
 80010a6:	af00      	add	r7, sp, #0
 80010a8:	e7fe      	b.n	80010a8 <UsageFault_Handler+0x4>

080010aa <DebugMon_Handler>:
 80010aa:	b480      	push	{r7}
 80010ac:	af00      	add	r7, sp, #0
 80010ae:	bf00      	nop
 80010b0:	46bd      	mov	sp, r7
 80010b2:	bc80      	pop	{r7}
 80010b4:	4770      	bx	lr
	...

080010b8 <TIM1_UP_IRQHandler>:
 80010b8:	b580      	push	{r7, lr}
 80010ba:	af00      	add	r7, sp, #0
 80010bc:	4802      	ldr	r0, [pc, #8]	; (80010c8 <TIM1_UP_IRQHandler+0x10>)
 80010be:	f001 f8ad 	bl	800221c <HAL_TIM_IRQHandler>
 80010c2:	bf00      	nop
 80010c4:	bd80      	pop	{r7, pc}
 80010c6:	bf00      	nop
 80010c8:	200015b4 	.word	0x200015b4

080010cc <_getpid>:
 80010cc:	b480      	push	{r7}
 80010ce:	af00      	add	r7, sp, #0
 80010d0:	2301      	movs	r3, #1
 80010d2:	4618      	mov	r0, r3
 80010d4:	46bd      	mov	sp, r7
 80010d6:	bc80      	pop	{r7}
 80010d8:	4770      	bx	lr

080010da <_kill>:
 80010da:	b580      	push	{r7, lr}
 80010dc:	b082      	sub	sp, #8
 80010de:	af00      	add	r7, sp, #0
 80010e0:	6078      	str	r0, [r7, #4]
 80010e2:	6039      	str	r1, [r7, #0]
 80010e4:	f002 fe6c 	bl	8003dc0 <__errno>
 80010e8:	4603      	mov	r3, r0
 80010ea:	2216      	movs	r2, #22
 80010ec:	601a      	str	r2, [r3, #0]
 80010ee:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80010f2:	4618      	mov	r0, r3
 80010f4:	3708      	adds	r7, #8
 80010f6:	46bd      	mov	sp, r7
 80010f8:	bd80      	pop	{r7, pc}

080010fa <_exit>:
 80010fa:	b580      	push	{r7, lr}
 80010fc:	b082      	sub	sp, #8
 80010fe:	af00      	add	r7, sp, #0
 8001100:	6078      	str	r0, [r7, #4]
 8001102:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001106:	6878      	ldr	r0, [r7, #4]
 8001108:	f7ff ffe7 	bl	80010da <_kill>
 800110c:	e7fe      	b.n	800110c <_exit+0x12>

0800110e <_read>:
 800110e:	b580      	push	{r7, lr}
 8001110:	b086      	sub	sp, #24
 8001112:	af00      	add	r7, sp, #0
 8001114:	60f8      	str	r0, [r7, #12]
 8001116:	60b9      	str	r1, [r7, #8]
 8001118:	607a      	str	r2, [r7, #4]
 800111a:	2300      	movs	r3, #0
 800111c:	617b      	str	r3, [r7, #20]
 800111e:	e00a      	b.n	8001136 <_read+0x28>
 8001120:	f3af 8000 	nop.w
 8001124:	4601      	mov	r1, r0
 8001126:	68bb      	ldr	r3, [r7, #8]
 8001128:	1c5a      	adds	r2, r3, #1
 800112a:	60ba      	str	r2, [r7, #8]
 800112c:	b2ca      	uxtb	r2, r1
 800112e:	701a      	strb	r2, [r3, #0]
 8001130:	697b      	ldr	r3, [r7, #20]
 8001132:	3301      	adds	r3, #1
 8001134:	617b      	str	r3, [r7, #20]
 8001136:	697a      	ldr	r2, [r7, #20]
 8001138:	687b      	ldr	r3, [r7, #4]
 800113a:	429a      	cmp	r2, r3
 800113c:	dbf0      	blt.n	8001120 <_read+0x12>
 800113e:	687b      	ldr	r3, [r7, #4]
 8001140:	4618      	mov	r0, r3
 8001142:	3718      	adds	r7, #24
 8001144:	46bd      	mov	sp, r7
 8001146:	bd80      	pop	{r7, pc}

08001148 <_write>:
 8001148:	b580      	push	{r7, lr}
 800114a:	b086      	sub	sp, #24
 800114c:	af00      	add	r7, sp, #0
 800114e:	60f8      	str	r0, [r7, #12]
 8001150:	60b9      	str	r1, [r7, #8]
 8001152:	607a      	str	r2, [r7, #4]
 8001154:	2300      	movs	r3, #0
 8001156:	617b      	str	r3, [r7, #20]
 8001158:	e009      	b.n	800116e <_write+0x26>
 800115a:	68bb      	ldr	r3, [r7, #8]
 800115c:	1c5a      	adds	r2, r3, #1
 800115e:	60ba      	str	r2, [r7, #8]
 8001160:	781b      	ldrb	r3, [r3, #0]
 8001162:	4618      	mov	r0, r3
 8001164:	f3af 8000 	nop.w
 8001168:	697b      	ldr	r3, [r7, #20]
 800116a:	3301      	adds	r3, #1
 800116c:	617b      	str	r3, [r7, #20]
 800116e:	697a      	ldr	r2, [r7, #20]
 8001170:	687b      	ldr	r3, [r7, #4]
 8001172:	429a      	cmp	r2, r3
 8001174:	dbf1      	blt.n	800115a <_write+0x12>
 8001176:	687b      	ldr	r3, [r7, #4]
 8001178:	4618      	mov	r0, r3
 800117a:	3718      	adds	r7, #24
 800117c:	46bd      	mov	sp, r7
 800117e:	bd80      	pop	{r7, pc}

08001180 <_close>:
 8001180:	b480      	push	{r7}
 8001182:	b083      	sub	sp, #12
 8001184:	af00      	add	r7, sp, #0
 8001186:	6078      	str	r0, [r7, #4]
 8001188:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800118c:	4618      	mov	r0, r3
 800118e:	370c      	adds	r7, #12
 8001190:	46bd      	mov	sp, r7
 8001192:	bc80      	pop	{r7}
 8001194:	4770      	bx	lr

08001196 <_fstat>:
 8001196:	b480      	push	{r7}
 8001198:	b083      	sub	sp, #12
 800119a:	af00      	add	r7, sp, #0
 800119c:	6078      	str	r0, [r7, #4]
 800119e:	6039      	str	r1, [r7, #0]
 80011a0:	683b      	ldr	r3, [r7, #0]
 80011a2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80011a6:	605a      	str	r2, [r3, #4]
 80011a8:	2300      	movs	r3, #0
 80011aa:	4618      	mov	r0, r3
 80011ac:	370c      	adds	r7, #12
 80011ae:	46bd      	mov	sp, r7
 80011b0:	bc80      	pop	{r7}
 80011b2:	4770      	bx	lr

080011b4 <_isatty>:
 80011b4:	b480      	push	{r7}
 80011b6:	b083      	sub	sp, #12
 80011b8:	af00      	add	r7, sp, #0
 80011ba:	6078      	str	r0, [r7, #4]
 80011bc:	2301      	movs	r3, #1
 80011be:	4618      	mov	r0, r3
 80011c0:	370c      	adds	r7, #12
 80011c2:	46bd      	mov	sp, r7
 80011c4:	bc80      	pop	{r7}
 80011c6:	4770      	bx	lr

080011c8 <_lseek>:
 80011c8:	b480      	push	{r7}
 80011ca:	b085      	sub	sp, #20
 80011cc:	af00      	add	r7, sp, #0
 80011ce:	60f8      	str	r0, [r7, #12]
 80011d0:	60b9      	str	r1, [r7, #8]
 80011d2:	607a      	str	r2, [r7, #4]
 80011d4:	2300      	movs	r3, #0
 80011d6:	4618      	mov	r0, r3
 80011d8:	3714      	adds	r7, #20
 80011da:	46bd      	mov	sp, r7
 80011dc:	bc80      	pop	{r7}
 80011de:	4770      	bx	lr

080011e0 <_sbrk>:
 80011e0:	b580      	push	{r7, lr}
 80011e2:	b086      	sub	sp, #24
 80011e4:	af00      	add	r7, sp, #0
 80011e6:	6078      	str	r0, [r7, #4]
 80011e8:	4a14      	ldr	r2, [pc, #80]	; (800123c <_sbrk+0x5c>)
 80011ea:	4b15      	ldr	r3, [pc, #84]	; (8001240 <_sbrk+0x60>)
 80011ec:	1ad3      	subs	r3, r2, r3
 80011ee:	617b      	str	r3, [r7, #20]
 80011f0:	697b      	ldr	r3, [r7, #20]
 80011f2:	613b      	str	r3, [r7, #16]
 80011f4:	4b13      	ldr	r3, [pc, #76]	; (8001244 <_sbrk+0x64>)
 80011f6:	681b      	ldr	r3, [r3, #0]
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	d102      	bne.n	8001202 <_sbrk+0x22>
 80011fc:	4b11      	ldr	r3, [pc, #68]	; (8001244 <_sbrk+0x64>)
 80011fe:	4a12      	ldr	r2, [pc, #72]	; (8001248 <_sbrk+0x68>)
 8001200:	601a      	str	r2, [r3, #0]
 8001202:	4b10      	ldr	r3, [pc, #64]	; (8001244 <_sbrk+0x64>)
 8001204:	681a      	ldr	r2, [r3, #0]
 8001206:	687b      	ldr	r3, [r7, #4]
 8001208:	4413      	add	r3, r2
 800120a:	693a      	ldr	r2, [r7, #16]
 800120c:	429a      	cmp	r2, r3
 800120e:	d207      	bcs.n	8001220 <_sbrk+0x40>
 8001210:	f002 fdd6 	bl	8003dc0 <__errno>
 8001214:	4603      	mov	r3, r0
 8001216:	220c      	movs	r2, #12
 8001218:	601a      	str	r2, [r3, #0]
 800121a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800121e:	e009      	b.n	8001234 <_sbrk+0x54>
 8001220:	4b08      	ldr	r3, [pc, #32]	; (8001244 <_sbrk+0x64>)
 8001222:	681b      	ldr	r3, [r3, #0]
 8001224:	60fb      	str	r3, [r7, #12]
 8001226:	4b07      	ldr	r3, [pc, #28]	; (8001244 <_sbrk+0x64>)
 8001228:	681a      	ldr	r2, [r3, #0]
 800122a:	687b      	ldr	r3, [r7, #4]
 800122c:	4413      	add	r3, r2
 800122e:	4a05      	ldr	r2, [pc, #20]	; (8001244 <_sbrk+0x64>)
 8001230:	6013      	str	r3, [r2, #0]
 8001232:	68fb      	ldr	r3, [r7, #12]
 8001234:	4618      	mov	r0, r3
 8001236:	3718      	adds	r7, #24
 8001238:	46bd      	mov	sp, r7
 800123a:	bd80      	pop	{r7, pc}
 800123c:	20005000 	.word	0x20005000
 8001240:	00000400 	.word	0x00000400
 8001244:	200003b8 	.word	0x200003b8
 8001248:	20001610 	.word	0x20001610

0800124c <SystemInit>:
 800124c:	b480      	push	{r7}
 800124e:	af00      	add	r7, sp, #0
 8001250:	bf00      	nop
 8001252:	46bd      	mov	sp, r7
 8001254:	bc80      	pop	{r7}
 8001256:	4770      	bx	lr

08001258 <Reset_Handler>:
 8001258:	2100      	movs	r1, #0
 800125a:	e003      	b.n	8001264 <LoopCopyDataInit>

0800125c <CopyDataInit>:
 800125c:	4b0b      	ldr	r3, [pc, #44]	; (800128c <LoopFillZerobss+0x14>)
 800125e:	585b      	ldr	r3, [r3, r1]
 8001260:	5043      	str	r3, [r0, r1]
 8001262:	3104      	adds	r1, #4

08001264 <LoopCopyDataInit>:
 8001264:	480a      	ldr	r0, [pc, #40]	; (8001290 <LoopFillZerobss+0x18>)
 8001266:	4b0b      	ldr	r3, [pc, #44]	; (8001294 <LoopFillZerobss+0x1c>)
 8001268:	1842      	adds	r2, r0, r1
 800126a:	429a      	cmp	r2, r3
 800126c:	d3f6      	bcc.n	800125c <CopyDataInit>
 800126e:	4a0a      	ldr	r2, [pc, #40]	; (8001298 <LoopFillZerobss+0x20>)
 8001270:	e002      	b.n	8001278 <LoopFillZerobss>

08001272 <FillZerobss>:
 8001272:	2300      	movs	r3, #0
 8001274:	f842 3b04 	str.w	r3, [r2], #4

08001278 <LoopFillZerobss>:
 8001278:	4b08      	ldr	r3, [pc, #32]	; (800129c <LoopFillZerobss+0x24>)
 800127a:	429a      	cmp	r2, r3
 800127c:	d3f9      	bcc.n	8001272 <FillZerobss>
 800127e:	f7ff ffe5 	bl	800124c <SystemInit>
 8001282:	f002 fda3 	bl	8003dcc <__libc_init_array>
 8001286:	f7ff fabb 	bl	8000800 <main>
 800128a:	4770      	bx	lr
 800128c:	080054e0 	.word	0x080054e0
 8001290:	20000000 	.word	0x20000000
 8001294:	20000144 	.word	0x20000144
 8001298:	20000144 	.word	0x20000144
 800129c:	20001610 	.word	0x20001610

080012a0 <ADC1_2_IRQHandler>:
 80012a0:	e7fe      	b.n	80012a0 <ADC1_2_IRQHandler>
	...

080012a4 <HAL_Init>:
 80012a4:	b580      	push	{r7, lr}
 80012a6:	af00      	add	r7, sp, #0
 80012a8:	4b08      	ldr	r3, [pc, #32]	; (80012cc <HAL_Init+0x28>)
 80012aa:	681b      	ldr	r3, [r3, #0]
 80012ac:	4a07      	ldr	r2, [pc, #28]	; (80012cc <HAL_Init+0x28>)
 80012ae:	f043 0310 	orr.w	r3, r3, #16
 80012b2:	6013      	str	r3, [r2, #0]
 80012b4:	2003      	movs	r0, #3
 80012b6:	f000 f8d1 	bl	800145c <HAL_NVIC_SetPriorityGrouping>
 80012ba:	2000      	movs	r0, #0
 80012bc:	f7ff fe90 	bl	8000fe0 <HAL_InitTick>
 80012c0:	f7ff fd96 	bl	8000df0 <HAL_MspInit>
 80012c4:	2300      	movs	r3, #0
 80012c6:	4618      	mov	r0, r3
 80012c8:	bd80      	pop	{r7, pc}
 80012ca:	bf00      	nop
 80012cc:	40022000 	.word	0x40022000

080012d0 <HAL_IncTick>:
 80012d0:	b480      	push	{r7}
 80012d2:	af00      	add	r7, sp, #0
 80012d4:	4b05      	ldr	r3, [pc, #20]	; (80012ec <HAL_IncTick+0x1c>)
 80012d6:	781b      	ldrb	r3, [r3, #0]
 80012d8:	461a      	mov	r2, r3
 80012da:	4b05      	ldr	r3, [pc, #20]	; (80012f0 <HAL_IncTick+0x20>)
 80012dc:	681b      	ldr	r3, [r3, #0]
 80012de:	4413      	add	r3, r2
 80012e0:	4a03      	ldr	r2, [pc, #12]	; (80012f0 <HAL_IncTick+0x20>)
 80012e2:	6013      	str	r3, [r2, #0]
 80012e4:	bf00      	nop
 80012e6:	46bd      	mov	sp, r7
 80012e8:	bc80      	pop	{r7}
 80012ea:	4770      	bx	lr
 80012ec:	200000d8 	.word	0x200000d8
 80012f0:	200015fc 	.word	0x200015fc

080012f4 <HAL_GetTick>:
 80012f4:	b480      	push	{r7}
 80012f6:	af00      	add	r7, sp, #0
 80012f8:	4b02      	ldr	r3, [pc, #8]	; (8001304 <HAL_GetTick+0x10>)
 80012fa:	681b      	ldr	r3, [r3, #0]
 80012fc:	4618      	mov	r0, r3
 80012fe:	46bd      	mov	sp, r7
 8001300:	bc80      	pop	{r7}
 8001302:	4770      	bx	lr
 8001304:	200015fc 	.word	0x200015fc

08001308 <__NVIC_SetPriorityGrouping>:
 8001308:	b480      	push	{r7}
 800130a:	b085      	sub	sp, #20
 800130c:	af00      	add	r7, sp, #0
 800130e:	6078      	str	r0, [r7, #4]
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	f003 0307 	and.w	r3, r3, #7
 8001316:	60fb      	str	r3, [r7, #12]
 8001318:	4b0c      	ldr	r3, [pc, #48]	; (800134c <__NVIC_SetPriorityGrouping+0x44>)
 800131a:	68db      	ldr	r3, [r3, #12]
 800131c:	60bb      	str	r3, [r7, #8]
 800131e:	68ba      	ldr	r2, [r7, #8]
 8001320:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001324:	4013      	ands	r3, r2
 8001326:	60bb      	str	r3, [r7, #8]
 8001328:	68fb      	ldr	r3, [r7, #12]
 800132a:	021a      	lsls	r2, r3, #8
 800132c:	68bb      	ldr	r3, [r7, #8]
 800132e:	4313      	orrs	r3, r2
 8001330:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001334:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001338:	60bb      	str	r3, [r7, #8]
 800133a:	4a04      	ldr	r2, [pc, #16]	; (800134c <__NVIC_SetPriorityGrouping+0x44>)
 800133c:	68bb      	ldr	r3, [r7, #8]
 800133e:	60d3      	str	r3, [r2, #12]
 8001340:	bf00      	nop
 8001342:	3714      	adds	r7, #20
 8001344:	46bd      	mov	sp, r7
 8001346:	bc80      	pop	{r7}
 8001348:	4770      	bx	lr
 800134a:	bf00      	nop
 800134c:	e000ed00 	.word	0xe000ed00

08001350 <__NVIC_GetPriorityGrouping>:
 8001350:	b480      	push	{r7}
 8001352:	af00      	add	r7, sp, #0
 8001354:	4b04      	ldr	r3, [pc, #16]	; (8001368 <__NVIC_GetPriorityGrouping+0x18>)
 8001356:	68db      	ldr	r3, [r3, #12]
 8001358:	0a1b      	lsrs	r3, r3, #8
 800135a:	f003 0307 	and.w	r3, r3, #7
 800135e:	4618      	mov	r0, r3
 8001360:	46bd      	mov	sp, r7
 8001362:	bc80      	pop	{r7}
 8001364:	4770      	bx	lr
 8001366:	bf00      	nop
 8001368:	e000ed00 	.word	0xe000ed00

0800136c <__NVIC_EnableIRQ>:
 800136c:	b480      	push	{r7}
 800136e:	b083      	sub	sp, #12
 8001370:	af00      	add	r7, sp, #0
 8001372:	4603      	mov	r3, r0
 8001374:	71fb      	strb	r3, [r7, #7]
 8001376:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800137a:	2b00      	cmp	r3, #0
 800137c:	db0b      	blt.n	8001396 <__NVIC_EnableIRQ+0x2a>
 800137e:	79fb      	ldrb	r3, [r7, #7]
 8001380:	f003 021f 	and.w	r2, r3, #31
 8001384:	4906      	ldr	r1, [pc, #24]	; (80013a0 <__NVIC_EnableIRQ+0x34>)
 8001386:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800138a:	095b      	lsrs	r3, r3, #5
 800138c:	2001      	movs	r0, #1
 800138e:	fa00 f202 	lsl.w	r2, r0, r2
 8001392:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001396:	bf00      	nop
 8001398:	370c      	adds	r7, #12
 800139a:	46bd      	mov	sp, r7
 800139c:	bc80      	pop	{r7}
 800139e:	4770      	bx	lr
 80013a0:	e000e100 	.word	0xe000e100

080013a4 <__NVIC_SetPriority>:
 80013a4:	b480      	push	{r7}
 80013a6:	b083      	sub	sp, #12
 80013a8:	af00      	add	r7, sp, #0
 80013aa:	4603      	mov	r3, r0
 80013ac:	6039      	str	r1, [r7, #0]
 80013ae:	71fb      	strb	r3, [r7, #7]
 80013b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013b4:	2b00      	cmp	r3, #0
 80013b6:	db0a      	blt.n	80013ce <__NVIC_SetPriority+0x2a>
 80013b8:	683b      	ldr	r3, [r7, #0]
 80013ba:	b2da      	uxtb	r2, r3
 80013bc:	490c      	ldr	r1, [pc, #48]	; (80013f0 <__NVIC_SetPriority+0x4c>)
 80013be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013c2:	0112      	lsls	r2, r2, #4
 80013c4:	b2d2      	uxtb	r2, r2
 80013c6:	440b      	add	r3, r1
 80013c8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80013cc:	e00a      	b.n	80013e4 <__NVIC_SetPriority+0x40>
 80013ce:	683b      	ldr	r3, [r7, #0]
 80013d0:	b2da      	uxtb	r2, r3
 80013d2:	4908      	ldr	r1, [pc, #32]	; (80013f4 <__NVIC_SetPriority+0x50>)
 80013d4:	79fb      	ldrb	r3, [r7, #7]
 80013d6:	f003 030f 	and.w	r3, r3, #15
 80013da:	3b04      	subs	r3, #4
 80013dc:	0112      	lsls	r2, r2, #4
 80013de:	b2d2      	uxtb	r2, r2
 80013e0:	440b      	add	r3, r1
 80013e2:	761a      	strb	r2, [r3, #24]
 80013e4:	bf00      	nop
 80013e6:	370c      	adds	r7, #12
 80013e8:	46bd      	mov	sp, r7
 80013ea:	bc80      	pop	{r7}
 80013ec:	4770      	bx	lr
 80013ee:	bf00      	nop
 80013f0:	e000e100 	.word	0xe000e100
 80013f4:	e000ed00 	.word	0xe000ed00

080013f8 <NVIC_EncodePriority>:
 80013f8:	b480      	push	{r7}
 80013fa:	b089      	sub	sp, #36	; 0x24
 80013fc:	af00      	add	r7, sp, #0
 80013fe:	60f8      	str	r0, [r7, #12]
 8001400:	60b9      	str	r1, [r7, #8]
 8001402:	607a      	str	r2, [r7, #4]
 8001404:	68fb      	ldr	r3, [r7, #12]
 8001406:	f003 0307 	and.w	r3, r3, #7
 800140a:	61fb      	str	r3, [r7, #28]
 800140c:	69fb      	ldr	r3, [r7, #28]
 800140e:	f1c3 0307 	rsb	r3, r3, #7
 8001412:	2b04      	cmp	r3, #4
 8001414:	bf28      	it	cs
 8001416:	2304      	movcs	r3, #4
 8001418:	61bb      	str	r3, [r7, #24]
 800141a:	69fb      	ldr	r3, [r7, #28]
 800141c:	3304      	adds	r3, #4
 800141e:	2b06      	cmp	r3, #6
 8001420:	d902      	bls.n	8001428 <NVIC_EncodePriority+0x30>
 8001422:	69fb      	ldr	r3, [r7, #28]
 8001424:	3b03      	subs	r3, #3
 8001426:	e000      	b.n	800142a <NVIC_EncodePriority+0x32>
 8001428:	2300      	movs	r3, #0
 800142a:	617b      	str	r3, [r7, #20]
 800142c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001430:	69bb      	ldr	r3, [r7, #24]
 8001432:	fa02 f303 	lsl.w	r3, r2, r3
 8001436:	43da      	mvns	r2, r3
 8001438:	68bb      	ldr	r3, [r7, #8]
 800143a:	401a      	ands	r2, r3
 800143c:	697b      	ldr	r3, [r7, #20]
 800143e:	409a      	lsls	r2, r3
 8001440:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001444:	697b      	ldr	r3, [r7, #20]
 8001446:	fa01 f303 	lsl.w	r3, r1, r3
 800144a:	43d9      	mvns	r1, r3
 800144c:	687b      	ldr	r3, [r7, #4]
 800144e:	400b      	ands	r3, r1
 8001450:	4313      	orrs	r3, r2
 8001452:	4618      	mov	r0, r3
 8001454:	3724      	adds	r7, #36	; 0x24
 8001456:	46bd      	mov	sp, r7
 8001458:	bc80      	pop	{r7}
 800145a:	4770      	bx	lr

0800145c <HAL_NVIC_SetPriorityGrouping>:
 800145c:	b580      	push	{r7, lr}
 800145e:	b082      	sub	sp, #8
 8001460:	af00      	add	r7, sp, #0
 8001462:	6078      	str	r0, [r7, #4]
 8001464:	6878      	ldr	r0, [r7, #4]
 8001466:	f7ff ff4f 	bl	8001308 <__NVIC_SetPriorityGrouping>
 800146a:	bf00      	nop
 800146c:	3708      	adds	r7, #8
 800146e:	46bd      	mov	sp, r7
 8001470:	bd80      	pop	{r7, pc}

08001472 <HAL_NVIC_SetPriority>:
 8001472:	b580      	push	{r7, lr}
 8001474:	b086      	sub	sp, #24
 8001476:	af00      	add	r7, sp, #0
 8001478:	4603      	mov	r3, r0
 800147a:	60b9      	str	r1, [r7, #8]
 800147c:	607a      	str	r2, [r7, #4]
 800147e:	73fb      	strb	r3, [r7, #15]
 8001480:	2300      	movs	r3, #0
 8001482:	617b      	str	r3, [r7, #20]
 8001484:	f7ff ff64 	bl	8001350 <__NVIC_GetPriorityGrouping>
 8001488:	6178      	str	r0, [r7, #20]
 800148a:	687a      	ldr	r2, [r7, #4]
 800148c:	68b9      	ldr	r1, [r7, #8]
 800148e:	6978      	ldr	r0, [r7, #20]
 8001490:	f7ff ffb2 	bl	80013f8 <NVIC_EncodePriority>
 8001494:	4602      	mov	r2, r0
 8001496:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800149a:	4611      	mov	r1, r2
 800149c:	4618      	mov	r0, r3
 800149e:	f7ff ff81 	bl	80013a4 <__NVIC_SetPriority>
 80014a2:	bf00      	nop
 80014a4:	3718      	adds	r7, #24
 80014a6:	46bd      	mov	sp, r7
 80014a8:	bd80      	pop	{r7, pc}

080014aa <HAL_NVIC_EnableIRQ>:
 80014aa:	b580      	push	{r7, lr}
 80014ac:	b082      	sub	sp, #8
 80014ae:	af00      	add	r7, sp, #0
 80014b0:	4603      	mov	r3, r0
 80014b2:	71fb      	strb	r3, [r7, #7]
 80014b4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014b8:	4618      	mov	r0, r3
 80014ba:	f7ff ff57 	bl	800136c <__NVIC_EnableIRQ>
 80014be:	bf00      	nop
 80014c0:	3708      	adds	r7, #8
 80014c2:	46bd      	mov	sp, r7
 80014c4:	bd80      	pop	{r7, pc}
	...

080014c8 <HAL_GPIO_Init>:
 80014c8:	b480      	push	{r7}
 80014ca:	b08b      	sub	sp, #44	; 0x2c
 80014cc:	af00      	add	r7, sp, #0
 80014ce:	6078      	str	r0, [r7, #4]
 80014d0:	6039      	str	r1, [r7, #0]
 80014d2:	2300      	movs	r3, #0
 80014d4:	627b      	str	r3, [r7, #36]	; 0x24
 80014d6:	2300      	movs	r3, #0
 80014d8:	623b      	str	r3, [r7, #32]
 80014da:	e169      	b.n	80017b0 <HAL_GPIO_Init+0x2e8>
 80014dc:	2201      	movs	r2, #1
 80014de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014e0:	fa02 f303 	lsl.w	r3, r2, r3
 80014e4:	61fb      	str	r3, [r7, #28]
 80014e6:	683b      	ldr	r3, [r7, #0]
 80014e8:	681b      	ldr	r3, [r3, #0]
 80014ea:	69fa      	ldr	r2, [r7, #28]
 80014ec:	4013      	ands	r3, r2
 80014ee:	61bb      	str	r3, [r7, #24]
 80014f0:	69ba      	ldr	r2, [r7, #24]
 80014f2:	69fb      	ldr	r3, [r7, #28]
 80014f4:	429a      	cmp	r2, r3
 80014f6:	f040 8158 	bne.w	80017aa <HAL_GPIO_Init+0x2e2>
 80014fa:	683b      	ldr	r3, [r7, #0]
 80014fc:	685b      	ldr	r3, [r3, #4]
 80014fe:	4a9a      	ldr	r2, [pc, #616]	; (8001768 <HAL_GPIO_Init+0x2a0>)
 8001500:	4293      	cmp	r3, r2
 8001502:	d05e      	beq.n	80015c2 <HAL_GPIO_Init+0xfa>
 8001504:	4a98      	ldr	r2, [pc, #608]	; (8001768 <HAL_GPIO_Init+0x2a0>)
 8001506:	4293      	cmp	r3, r2
 8001508:	d875      	bhi.n	80015f6 <HAL_GPIO_Init+0x12e>
 800150a:	4a98      	ldr	r2, [pc, #608]	; (800176c <HAL_GPIO_Init+0x2a4>)
 800150c:	4293      	cmp	r3, r2
 800150e:	d058      	beq.n	80015c2 <HAL_GPIO_Init+0xfa>
 8001510:	4a96      	ldr	r2, [pc, #600]	; (800176c <HAL_GPIO_Init+0x2a4>)
 8001512:	4293      	cmp	r3, r2
 8001514:	d86f      	bhi.n	80015f6 <HAL_GPIO_Init+0x12e>
 8001516:	4a96      	ldr	r2, [pc, #600]	; (8001770 <HAL_GPIO_Init+0x2a8>)
 8001518:	4293      	cmp	r3, r2
 800151a:	d052      	beq.n	80015c2 <HAL_GPIO_Init+0xfa>
 800151c:	4a94      	ldr	r2, [pc, #592]	; (8001770 <HAL_GPIO_Init+0x2a8>)
 800151e:	4293      	cmp	r3, r2
 8001520:	d869      	bhi.n	80015f6 <HAL_GPIO_Init+0x12e>
 8001522:	4a94      	ldr	r2, [pc, #592]	; (8001774 <HAL_GPIO_Init+0x2ac>)
 8001524:	4293      	cmp	r3, r2
 8001526:	d04c      	beq.n	80015c2 <HAL_GPIO_Init+0xfa>
 8001528:	4a92      	ldr	r2, [pc, #584]	; (8001774 <HAL_GPIO_Init+0x2ac>)
 800152a:	4293      	cmp	r3, r2
 800152c:	d863      	bhi.n	80015f6 <HAL_GPIO_Init+0x12e>
 800152e:	4a92      	ldr	r2, [pc, #584]	; (8001778 <HAL_GPIO_Init+0x2b0>)
 8001530:	4293      	cmp	r3, r2
 8001532:	d046      	beq.n	80015c2 <HAL_GPIO_Init+0xfa>
 8001534:	4a90      	ldr	r2, [pc, #576]	; (8001778 <HAL_GPIO_Init+0x2b0>)
 8001536:	4293      	cmp	r3, r2
 8001538:	d85d      	bhi.n	80015f6 <HAL_GPIO_Init+0x12e>
 800153a:	2b12      	cmp	r3, #18
 800153c:	d82a      	bhi.n	8001594 <HAL_GPIO_Init+0xcc>
 800153e:	2b12      	cmp	r3, #18
 8001540:	d859      	bhi.n	80015f6 <HAL_GPIO_Init+0x12e>
 8001542:	a201      	add	r2, pc, #4	; (adr r2, 8001548 <HAL_GPIO_Init+0x80>)
 8001544:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001548:	080015c3 	.word	0x080015c3
 800154c:	0800159d 	.word	0x0800159d
 8001550:	080015af 	.word	0x080015af
 8001554:	080015f1 	.word	0x080015f1
 8001558:	080015f7 	.word	0x080015f7
 800155c:	080015f7 	.word	0x080015f7
 8001560:	080015f7 	.word	0x080015f7
 8001564:	080015f7 	.word	0x080015f7
 8001568:	080015f7 	.word	0x080015f7
 800156c:	080015f7 	.word	0x080015f7
 8001570:	080015f7 	.word	0x080015f7
 8001574:	080015f7 	.word	0x080015f7
 8001578:	080015f7 	.word	0x080015f7
 800157c:	080015f7 	.word	0x080015f7
 8001580:	080015f7 	.word	0x080015f7
 8001584:	080015f7 	.word	0x080015f7
 8001588:	080015f7 	.word	0x080015f7
 800158c:	080015a5 	.word	0x080015a5
 8001590:	080015b9 	.word	0x080015b9
 8001594:	4a79      	ldr	r2, [pc, #484]	; (800177c <HAL_GPIO_Init+0x2b4>)
 8001596:	4293      	cmp	r3, r2
 8001598:	d013      	beq.n	80015c2 <HAL_GPIO_Init+0xfa>
 800159a:	e02c      	b.n	80015f6 <HAL_GPIO_Init+0x12e>
 800159c:	683b      	ldr	r3, [r7, #0]
 800159e:	68db      	ldr	r3, [r3, #12]
 80015a0:	623b      	str	r3, [r7, #32]
 80015a2:	e029      	b.n	80015f8 <HAL_GPIO_Init+0x130>
 80015a4:	683b      	ldr	r3, [r7, #0]
 80015a6:	68db      	ldr	r3, [r3, #12]
 80015a8:	3304      	adds	r3, #4
 80015aa:	623b      	str	r3, [r7, #32]
 80015ac:	e024      	b.n	80015f8 <HAL_GPIO_Init+0x130>
 80015ae:	683b      	ldr	r3, [r7, #0]
 80015b0:	68db      	ldr	r3, [r3, #12]
 80015b2:	3308      	adds	r3, #8
 80015b4:	623b      	str	r3, [r7, #32]
 80015b6:	e01f      	b.n	80015f8 <HAL_GPIO_Init+0x130>
 80015b8:	683b      	ldr	r3, [r7, #0]
 80015ba:	68db      	ldr	r3, [r3, #12]
 80015bc:	330c      	adds	r3, #12
 80015be:	623b      	str	r3, [r7, #32]
 80015c0:	e01a      	b.n	80015f8 <HAL_GPIO_Init+0x130>
 80015c2:	683b      	ldr	r3, [r7, #0]
 80015c4:	689b      	ldr	r3, [r3, #8]
 80015c6:	2b00      	cmp	r3, #0
 80015c8:	d102      	bne.n	80015d0 <HAL_GPIO_Init+0x108>
 80015ca:	2304      	movs	r3, #4
 80015cc:	623b      	str	r3, [r7, #32]
 80015ce:	e013      	b.n	80015f8 <HAL_GPIO_Init+0x130>
 80015d0:	683b      	ldr	r3, [r7, #0]
 80015d2:	689b      	ldr	r3, [r3, #8]
 80015d4:	2b01      	cmp	r3, #1
 80015d6:	d105      	bne.n	80015e4 <HAL_GPIO_Init+0x11c>
 80015d8:	2308      	movs	r3, #8
 80015da:	623b      	str	r3, [r7, #32]
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	69fa      	ldr	r2, [r7, #28]
 80015e0:	611a      	str	r2, [r3, #16]
 80015e2:	e009      	b.n	80015f8 <HAL_GPIO_Init+0x130>
 80015e4:	2308      	movs	r3, #8
 80015e6:	623b      	str	r3, [r7, #32]
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	69fa      	ldr	r2, [r7, #28]
 80015ec:	615a      	str	r2, [r3, #20]
 80015ee:	e003      	b.n	80015f8 <HAL_GPIO_Init+0x130>
 80015f0:	2300      	movs	r3, #0
 80015f2:	623b      	str	r3, [r7, #32]
 80015f4:	e000      	b.n	80015f8 <HAL_GPIO_Init+0x130>
 80015f6:	bf00      	nop
 80015f8:	69bb      	ldr	r3, [r7, #24]
 80015fa:	2bff      	cmp	r3, #255	; 0xff
 80015fc:	d801      	bhi.n	8001602 <HAL_GPIO_Init+0x13a>
 80015fe:	687b      	ldr	r3, [r7, #4]
 8001600:	e001      	b.n	8001606 <HAL_GPIO_Init+0x13e>
 8001602:	687b      	ldr	r3, [r7, #4]
 8001604:	3304      	adds	r3, #4
 8001606:	617b      	str	r3, [r7, #20]
 8001608:	69bb      	ldr	r3, [r7, #24]
 800160a:	2bff      	cmp	r3, #255	; 0xff
 800160c:	d802      	bhi.n	8001614 <HAL_GPIO_Init+0x14c>
 800160e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001610:	009b      	lsls	r3, r3, #2
 8001612:	e002      	b.n	800161a <HAL_GPIO_Init+0x152>
 8001614:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001616:	3b08      	subs	r3, #8
 8001618:	009b      	lsls	r3, r3, #2
 800161a:	613b      	str	r3, [r7, #16]
 800161c:	697b      	ldr	r3, [r7, #20]
 800161e:	681a      	ldr	r2, [r3, #0]
 8001620:	210f      	movs	r1, #15
 8001622:	693b      	ldr	r3, [r7, #16]
 8001624:	fa01 f303 	lsl.w	r3, r1, r3
 8001628:	43db      	mvns	r3, r3
 800162a:	401a      	ands	r2, r3
 800162c:	6a39      	ldr	r1, [r7, #32]
 800162e:	693b      	ldr	r3, [r7, #16]
 8001630:	fa01 f303 	lsl.w	r3, r1, r3
 8001634:	431a      	orrs	r2, r3
 8001636:	697b      	ldr	r3, [r7, #20]
 8001638:	601a      	str	r2, [r3, #0]
 800163a:	683b      	ldr	r3, [r7, #0]
 800163c:	685b      	ldr	r3, [r3, #4]
 800163e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001642:	2b00      	cmp	r3, #0
 8001644:	f000 80b1 	beq.w	80017aa <HAL_GPIO_Init+0x2e2>
 8001648:	4b4d      	ldr	r3, [pc, #308]	; (8001780 <HAL_GPIO_Init+0x2b8>)
 800164a:	699b      	ldr	r3, [r3, #24]
 800164c:	4a4c      	ldr	r2, [pc, #304]	; (8001780 <HAL_GPIO_Init+0x2b8>)
 800164e:	f043 0301 	orr.w	r3, r3, #1
 8001652:	6193      	str	r3, [r2, #24]
 8001654:	4b4a      	ldr	r3, [pc, #296]	; (8001780 <HAL_GPIO_Init+0x2b8>)
 8001656:	699b      	ldr	r3, [r3, #24]
 8001658:	f003 0301 	and.w	r3, r3, #1
 800165c:	60bb      	str	r3, [r7, #8]
 800165e:	68bb      	ldr	r3, [r7, #8]
 8001660:	4a48      	ldr	r2, [pc, #288]	; (8001784 <HAL_GPIO_Init+0x2bc>)
 8001662:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001664:	089b      	lsrs	r3, r3, #2
 8001666:	3302      	adds	r3, #2
 8001668:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800166c:	60fb      	str	r3, [r7, #12]
 800166e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001670:	f003 0303 	and.w	r3, r3, #3
 8001674:	009b      	lsls	r3, r3, #2
 8001676:	220f      	movs	r2, #15
 8001678:	fa02 f303 	lsl.w	r3, r2, r3
 800167c:	43db      	mvns	r3, r3
 800167e:	68fa      	ldr	r2, [r7, #12]
 8001680:	4013      	ands	r3, r2
 8001682:	60fb      	str	r3, [r7, #12]
 8001684:	687b      	ldr	r3, [r7, #4]
 8001686:	4a40      	ldr	r2, [pc, #256]	; (8001788 <HAL_GPIO_Init+0x2c0>)
 8001688:	4293      	cmp	r3, r2
 800168a:	d013      	beq.n	80016b4 <HAL_GPIO_Init+0x1ec>
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	4a3f      	ldr	r2, [pc, #252]	; (800178c <HAL_GPIO_Init+0x2c4>)
 8001690:	4293      	cmp	r3, r2
 8001692:	d00d      	beq.n	80016b0 <HAL_GPIO_Init+0x1e8>
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	4a3e      	ldr	r2, [pc, #248]	; (8001790 <HAL_GPIO_Init+0x2c8>)
 8001698:	4293      	cmp	r3, r2
 800169a:	d007      	beq.n	80016ac <HAL_GPIO_Init+0x1e4>
 800169c:	687b      	ldr	r3, [r7, #4]
 800169e:	4a3d      	ldr	r2, [pc, #244]	; (8001794 <HAL_GPIO_Init+0x2cc>)
 80016a0:	4293      	cmp	r3, r2
 80016a2:	d101      	bne.n	80016a8 <HAL_GPIO_Init+0x1e0>
 80016a4:	2303      	movs	r3, #3
 80016a6:	e006      	b.n	80016b6 <HAL_GPIO_Init+0x1ee>
 80016a8:	2304      	movs	r3, #4
 80016aa:	e004      	b.n	80016b6 <HAL_GPIO_Init+0x1ee>
 80016ac:	2302      	movs	r3, #2
 80016ae:	e002      	b.n	80016b6 <HAL_GPIO_Init+0x1ee>
 80016b0:	2301      	movs	r3, #1
 80016b2:	e000      	b.n	80016b6 <HAL_GPIO_Init+0x1ee>
 80016b4:	2300      	movs	r3, #0
 80016b6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80016b8:	f002 0203 	and.w	r2, r2, #3
 80016bc:	0092      	lsls	r2, r2, #2
 80016be:	4093      	lsls	r3, r2
 80016c0:	68fa      	ldr	r2, [r7, #12]
 80016c2:	4313      	orrs	r3, r2
 80016c4:	60fb      	str	r3, [r7, #12]
 80016c6:	492f      	ldr	r1, [pc, #188]	; (8001784 <HAL_GPIO_Init+0x2bc>)
 80016c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016ca:	089b      	lsrs	r3, r3, #2
 80016cc:	3302      	adds	r3, #2
 80016ce:	68fa      	ldr	r2, [r7, #12]
 80016d0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80016d4:	683b      	ldr	r3, [r7, #0]
 80016d6:	685b      	ldr	r3, [r3, #4]
 80016d8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80016dc:	2b00      	cmp	r3, #0
 80016de:	d006      	beq.n	80016ee <HAL_GPIO_Init+0x226>
 80016e0:	4b2d      	ldr	r3, [pc, #180]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 80016e2:	681a      	ldr	r2, [r3, #0]
 80016e4:	492c      	ldr	r1, [pc, #176]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 80016e6:	69bb      	ldr	r3, [r7, #24]
 80016e8:	4313      	orrs	r3, r2
 80016ea:	600b      	str	r3, [r1, #0]
 80016ec:	e006      	b.n	80016fc <HAL_GPIO_Init+0x234>
 80016ee:	4b2a      	ldr	r3, [pc, #168]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 80016f0:	681a      	ldr	r2, [r3, #0]
 80016f2:	69bb      	ldr	r3, [r7, #24]
 80016f4:	43db      	mvns	r3, r3
 80016f6:	4928      	ldr	r1, [pc, #160]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 80016f8:	4013      	ands	r3, r2
 80016fa:	600b      	str	r3, [r1, #0]
 80016fc:	683b      	ldr	r3, [r7, #0]
 80016fe:	685b      	ldr	r3, [r3, #4]
 8001700:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001704:	2b00      	cmp	r3, #0
 8001706:	d006      	beq.n	8001716 <HAL_GPIO_Init+0x24e>
 8001708:	4b23      	ldr	r3, [pc, #140]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 800170a:	685a      	ldr	r2, [r3, #4]
 800170c:	4922      	ldr	r1, [pc, #136]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 800170e:	69bb      	ldr	r3, [r7, #24]
 8001710:	4313      	orrs	r3, r2
 8001712:	604b      	str	r3, [r1, #4]
 8001714:	e006      	b.n	8001724 <HAL_GPIO_Init+0x25c>
 8001716:	4b20      	ldr	r3, [pc, #128]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 8001718:	685a      	ldr	r2, [r3, #4]
 800171a:	69bb      	ldr	r3, [r7, #24]
 800171c:	43db      	mvns	r3, r3
 800171e:	491e      	ldr	r1, [pc, #120]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 8001720:	4013      	ands	r3, r2
 8001722:	604b      	str	r3, [r1, #4]
 8001724:	683b      	ldr	r3, [r7, #0]
 8001726:	685b      	ldr	r3, [r3, #4]
 8001728:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800172c:	2b00      	cmp	r3, #0
 800172e:	d006      	beq.n	800173e <HAL_GPIO_Init+0x276>
 8001730:	4b19      	ldr	r3, [pc, #100]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 8001732:	689a      	ldr	r2, [r3, #8]
 8001734:	4918      	ldr	r1, [pc, #96]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 8001736:	69bb      	ldr	r3, [r7, #24]
 8001738:	4313      	orrs	r3, r2
 800173a:	608b      	str	r3, [r1, #8]
 800173c:	e006      	b.n	800174c <HAL_GPIO_Init+0x284>
 800173e:	4b16      	ldr	r3, [pc, #88]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 8001740:	689a      	ldr	r2, [r3, #8]
 8001742:	69bb      	ldr	r3, [r7, #24]
 8001744:	43db      	mvns	r3, r3
 8001746:	4914      	ldr	r1, [pc, #80]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 8001748:	4013      	ands	r3, r2
 800174a:	608b      	str	r3, [r1, #8]
 800174c:	683b      	ldr	r3, [r7, #0]
 800174e:	685b      	ldr	r3, [r3, #4]
 8001750:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001754:	2b00      	cmp	r3, #0
 8001756:	d021      	beq.n	800179c <HAL_GPIO_Init+0x2d4>
 8001758:	4b0f      	ldr	r3, [pc, #60]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 800175a:	68da      	ldr	r2, [r3, #12]
 800175c:	490e      	ldr	r1, [pc, #56]	; (8001798 <HAL_GPIO_Init+0x2d0>)
 800175e:	69bb      	ldr	r3, [r7, #24]
 8001760:	4313      	orrs	r3, r2
 8001762:	60cb      	str	r3, [r1, #12]
 8001764:	e021      	b.n	80017aa <HAL_GPIO_Init+0x2e2>
 8001766:	bf00      	nop
 8001768:	10320000 	.word	0x10320000
 800176c:	10310000 	.word	0x10310000
 8001770:	10220000 	.word	0x10220000
 8001774:	10210000 	.word	0x10210000
 8001778:	10120000 	.word	0x10120000
 800177c:	10110000 	.word	0x10110000
 8001780:	40021000 	.word	0x40021000
 8001784:	40010000 	.word	0x40010000
 8001788:	40010800 	.word	0x40010800
 800178c:	40010c00 	.word	0x40010c00
 8001790:	40011000 	.word	0x40011000
 8001794:	40011400 	.word	0x40011400
 8001798:	40010400 	.word	0x40010400
 800179c:	4b0b      	ldr	r3, [pc, #44]	; (80017cc <HAL_GPIO_Init+0x304>)
 800179e:	68da      	ldr	r2, [r3, #12]
 80017a0:	69bb      	ldr	r3, [r7, #24]
 80017a2:	43db      	mvns	r3, r3
 80017a4:	4909      	ldr	r1, [pc, #36]	; (80017cc <HAL_GPIO_Init+0x304>)
 80017a6:	4013      	ands	r3, r2
 80017a8:	60cb      	str	r3, [r1, #12]
 80017aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017ac:	3301      	adds	r3, #1
 80017ae:	627b      	str	r3, [r7, #36]	; 0x24
 80017b0:	683b      	ldr	r3, [r7, #0]
 80017b2:	681a      	ldr	r2, [r3, #0]
 80017b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017b6:	fa22 f303 	lsr.w	r3, r2, r3
 80017ba:	2b00      	cmp	r3, #0
 80017bc:	f47f ae8e 	bne.w	80014dc <HAL_GPIO_Init+0x14>
 80017c0:	bf00      	nop
 80017c2:	bf00      	nop
 80017c4:	372c      	adds	r7, #44	; 0x2c
 80017c6:	46bd      	mov	sp, r7
 80017c8:	bc80      	pop	{r7}
 80017ca:	4770      	bx	lr
 80017cc:	40010400 	.word	0x40010400

080017d0 <HAL_GPIO_WritePin>:
 80017d0:	b480      	push	{r7}
 80017d2:	b083      	sub	sp, #12
 80017d4:	af00      	add	r7, sp, #0
 80017d6:	6078      	str	r0, [r7, #4]
 80017d8:	460b      	mov	r3, r1
 80017da:	807b      	strh	r3, [r7, #2]
 80017dc:	4613      	mov	r3, r2
 80017de:	707b      	strb	r3, [r7, #1]
 80017e0:	787b      	ldrb	r3, [r7, #1]
 80017e2:	2b00      	cmp	r3, #0
 80017e4:	d003      	beq.n	80017ee <HAL_GPIO_WritePin+0x1e>
 80017e6:	887a      	ldrh	r2, [r7, #2]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	611a      	str	r2, [r3, #16]
 80017ec:	e003      	b.n	80017f6 <HAL_GPIO_WritePin+0x26>
 80017ee:	887b      	ldrh	r3, [r7, #2]
 80017f0:	041a      	lsls	r2, r3, #16
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	611a      	str	r2, [r3, #16]
 80017f6:	bf00      	nop
 80017f8:	370c      	adds	r7, #12
 80017fa:	46bd      	mov	sp, r7
 80017fc:	bc80      	pop	{r7}
 80017fe:	4770      	bx	lr

08001800 <HAL_GPIO_TogglePin>:
 8001800:	b480      	push	{r7}
 8001802:	b085      	sub	sp, #20
 8001804:	af00      	add	r7, sp, #0
 8001806:	6078      	str	r0, [r7, #4]
 8001808:	460b      	mov	r3, r1
 800180a:	807b      	strh	r3, [r7, #2]
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	68db      	ldr	r3, [r3, #12]
 8001810:	60fb      	str	r3, [r7, #12]
 8001812:	887a      	ldrh	r2, [r7, #2]
 8001814:	68fb      	ldr	r3, [r7, #12]
 8001816:	4013      	ands	r3, r2
 8001818:	041a      	lsls	r2, r3, #16
 800181a:	68fb      	ldr	r3, [r7, #12]
 800181c:	43d9      	mvns	r1, r3
 800181e:	887b      	ldrh	r3, [r7, #2]
 8001820:	400b      	ands	r3, r1
 8001822:	431a      	orrs	r2, r3
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	611a      	str	r2, [r3, #16]
 8001828:	bf00      	nop
 800182a:	3714      	adds	r7, #20
 800182c:	46bd      	mov	sp, r7
 800182e:	bc80      	pop	{r7}
 8001830:	4770      	bx	lr
	...

08001834 <HAL_RCC_OscConfig>:
 8001834:	b580      	push	{r7, lr}
 8001836:	b086      	sub	sp, #24
 8001838:	af00      	add	r7, sp, #0
 800183a:	6078      	str	r0, [r7, #4]
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	2b00      	cmp	r3, #0
 8001840:	d101      	bne.n	8001846 <HAL_RCC_OscConfig+0x12>
 8001842:	2301      	movs	r3, #1
 8001844:	e26c      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	681b      	ldr	r3, [r3, #0]
 800184a:	f003 0301 	and.w	r3, r3, #1
 800184e:	2b00      	cmp	r3, #0
 8001850:	f000 8087 	beq.w	8001962 <HAL_RCC_OscConfig+0x12e>
 8001854:	4b92      	ldr	r3, [pc, #584]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 8001856:	685b      	ldr	r3, [r3, #4]
 8001858:	f003 030c 	and.w	r3, r3, #12
 800185c:	2b04      	cmp	r3, #4
 800185e:	d00c      	beq.n	800187a <HAL_RCC_OscConfig+0x46>
 8001860:	4b8f      	ldr	r3, [pc, #572]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 8001862:	685b      	ldr	r3, [r3, #4]
 8001864:	f003 030c 	and.w	r3, r3, #12
 8001868:	2b08      	cmp	r3, #8
 800186a:	d112      	bne.n	8001892 <HAL_RCC_OscConfig+0x5e>
 800186c:	4b8c      	ldr	r3, [pc, #560]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 800186e:	685b      	ldr	r3, [r3, #4]
 8001870:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001874:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001878:	d10b      	bne.n	8001892 <HAL_RCC_OscConfig+0x5e>
 800187a:	4b89      	ldr	r3, [pc, #548]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 800187c:	681b      	ldr	r3, [r3, #0]
 800187e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001882:	2b00      	cmp	r3, #0
 8001884:	d06c      	beq.n	8001960 <HAL_RCC_OscConfig+0x12c>
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	685b      	ldr	r3, [r3, #4]
 800188a:	2b00      	cmp	r3, #0
 800188c:	d168      	bne.n	8001960 <HAL_RCC_OscConfig+0x12c>
 800188e:	2301      	movs	r3, #1
 8001890:	e246      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	685b      	ldr	r3, [r3, #4]
 8001896:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800189a:	d106      	bne.n	80018aa <HAL_RCC_OscConfig+0x76>
 800189c:	4b80      	ldr	r3, [pc, #512]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 800189e:	681b      	ldr	r3, [r3, #0]
 80018a0:	4a7f      	ldr	r2, [pc, #508]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018a2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80018a6:	6013      	str	r3, [r2, #0]
 80018a8:	e02e      	b.n	8001908 <HAL_RCC_OscConfig+0xd4>
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	685b      	ldr	r3, [r3, #4]
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	d10c      	bne.n	80018cc <HAL_RCC_OscConfig+0x98>
 80018b2:	4b7b      	ldr	r3, [pc, #492]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018b4:	681b      	ldr	r3, [r3, #0]
 80018b6:	4a7a      	ldr	r2, [pc, #488]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018b8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80018bc:	6013      	str	r3, [r2, #0]
 80018be:	4b78      	ldr	r3, [pc, #480]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	4a77      	ldr	r2, [pc, #476]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018c4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018c8:	6013      	str	r3, [r2, #0]
 80018ca:	e01d      	b.n	8001908 <HAL_RCC_OscConfig+0xd4>
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	685b      	ldr	r3, [r3, #4]
 80018d0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80018d4:	d10c      	bne.n	80018f0 <HAL_RCC_OscConfig+0xbc>
 80018d6:	4b72      	ldr	r3, [pc, #456]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018d8:	681b      	ldr	r3, [r3, #0]
 80018da:	4a71      	ldr	r2, [pc, #452]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018dc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80018e0:	6013      	str	r3, [r2, #0]
 80018e2:	4b6f      	ldr	r3, [pc, #444]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018e4:	681b      	ldr	r3, [r3, #0]
 80018e6:	4a6e      	ldr	r2, [pc, #440]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80018ec:	6013      	str	r3, [r2, #0]
 80018ee:	e00b      	b.n	8001908 <HAL_RCC_OscConfig+0xd4>
 80018f0:	4b6b      	ldr	r3, [pc, #428]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	4a6a      	ldr	r2, [pc, #424]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018f6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80018fa:	6013      	str	r3, [r2, #0]
 80018fc:	4b68      	ldr	r3, [pc, #416]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	4a67      	ldr	r2, [pc, #412]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 8001902:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001906:	6013      	str	r3, [r2, #0]
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	685b      	ldr	r3, [r3, #4]
 800190c:	2b00      	cmp	r3, #0
 800190e:	d013      	beq.n	8001938 <HAL_RCC_OscConfig+0x104>
 8001910:	f7ff fcf0 	bl	80012f4 <HAL_GetTick>
 8001914:	6138      	str	r0, [r7, #16]
 8001916:	e008      	b.n	800192a <HAL_RCC_OscConfig+0xf6>
 8001918:	f7ff fcec 	bl	80012f4 <HAL_GetTick>
 800191c:	4602      	mov	r2, r0
 800191e:	693b      	ldr	r3, [r7, #16]
 8001920:	1ad3      	subs	r3, r2, r3
 8001922:	2b64      	cmp	r3, #100	; 0x64
 8001924:	d901      	bls.n	800192a <HAL_RCC_OscConfig+0xf6>
 8001926:	2303      	movs	r3, #3
 8001928:	e1fa      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 800192a:	4b5d      	ldr	r3, [pc, #372]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 800192c:	681b      	ldr	r3, [r3, #0]
 800192e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001932:	2b00      	cmp	r3, #0
 8001934:	d0f0      	beq.n	8001918 <HAL_RCC_OscConfig+0xe4>
 8001936:	e014      	b.n	8001962 <HAL_RCC_OscConfig+0x12e>
 8001938:	f7ff fcdc 	bl	80012f4 <HAL_GetTick>
 800193c:	6138      	str	r0, [r7, #16]
 800193e:	e008      	b.n	8001952 <HAL_RCC_OscConfig+0x11e>
 8001940:	f7ff fcd8 	bl	80012f4 <HAL_GetTick>
 8001944:	4602      	mov	r2, r0
 8001946:	693b      	ldr	r3, [r7, #16]
 8001948:	1ad3      	subs	r3, r2, r3
 800194a:	2b64      	cmp	r3, #100	; 0x64
 800194c:	d901      	bls.n	8001952 <HAL_RCC_OscConfig+0x11e>
 800194e:	2303      	movs	r3, #3
 8001950:	e1e6      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001952:	4b53      	ldr	r3, [pc, #332]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 8001954:	681b      	ldr	r3, [r3, #0]
 8001956:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800195a:	2b00      	cmp	r3, #0
 800195c:	d1f0      	bne.n	8001940 <HAL_RCC_OscConfig+0x10c>
 800195e:	e000      	b.n	8001962 <HAL_RCC_OscConfig+0x12e>
 8001960:	bf00      	nop
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	681b      	ldr	r3, [r3, #0]
 8001966:	f003 0302 	and.w	r3, r3, #2
 800196a:	2b00      	cmp	r3, #0
 800196c:	d063      	beq.n	8001a36 <HAL_RCC_OscConfig+0x202>
 800196e:	4b4c      	ldr	r3, [pc, #304]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 8001970:	685b      	ldr	r3, [r3, #4]
 8001972:	f003 030c 	and.w	r3, r3, #12
 8001976:	2b00      	cmp	r3, #0
 8001978:	d00b      	beq.n	8001992 <HAL_RCC_OscConfig+0x15e>
 800197a:	4b49      	ldr	r3, [pc, #292]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 800197c:	685b      	ldr	r3, [r3, #4]
 800197e:	f003 030c 	and.w	r3, r3, #12
 8001982:	2b08      	cmp	r3, #8
 8001984:	d11c      	bne.n	80019c0 <HAL_RCC_OscConfig+0x18c>
 8001986:	4b46      	ldr	r3, [pc, #280]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 8001988:	685b      	ldr	r3, [r3, #4]
 800198a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800198e:	2b00      	cmp	r3, #0
 8001990:	d116      	bne.n	80019c0 <HAL_RCC_OscConfig+0x18c>
 8001992:	4b43      	ldr	r3, [pc, #268]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	f003 0302 	and.w	r3, r3, #2
 800199a:	2b00      	cmp	r3, #0
 800199c:	d005      	beq.n	80019aa <HAL_RCC_OscConfig+0x176>
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	691b      	ldr	r3, [r3, #16]
 80019a2:	2b01      	cmp	r3, #1
 80019a4:	d001      	beq.n	80019aa <HAL_RCC_OscConfig+0x176>
 80019a6:	2301      	movs	r3, #1
 80019a8:	e1ba      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 80019aa:	4b3d      	ldr	r3, [pc, #244]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80019ac:	681b      	ldr	r3, [r3, #0]
 80019ae:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	695b      	ldr	r3, [r3, #20]
 80019b6:	00db      	lsls	r3, r3, #3
 80019b8:	4939      	ldr	r1, [pc, #228]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80019ba:	4313      	orrs	r3, r2
 80019bc:	600b      	str	r3, [r1, #0]
 80019be:	e03a      	b.n	8001a36 <HAL_RCC_OscConfig+0x202>
 80019c0:	687b      	ldr	r3, [r7, #4]
 80019c2:	691b      	ldr	r3, [r3, #16]
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	d020      	beq.n	8001a0a <HAL_RCC_OscConfig+0x1d6>
 80019c8:	4b36      	ldr	r3, [pc, #216]	; (8001aa4 <HAL_RCC_OscConfig+0x270>)
 80019ca:	2201      	movs	r2, #1
 80019cc:	601a      	str	r2, [r3, #0]
 80019ce:	f7ff fc91 	bl	80012f4 <HAL_GetTick>
 80019d2:	6138      	str	r0, [r7, #16]
 80019d4:	e008      	b.n	80019e8 <HAL_RCC_OscConfig+0x1b4>
 80019d6:	f7ff fc8d 	bl	80012f4 <HAL_GetTick>
 80019da:	4602      	mov	r2, r0
 80019dc:	693b      	ldr	r3, [r7, #16]
 80019de:	1ad3      	subs	r3, r2, r3
 80019e0:	2b02      	cmp	r3, #2
 80019e2:	d901      	bls.n	80019e8 <HAL_RCC_OscConfig+0x1b4>
 80019e4:	2303      	movs	r3, #3
 80019e6:	e19b      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 80019e8:	4b2d      	ldr	r3, [pc, #180]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80019ea:	681b      	ldr	r3, [r3, #0]
 80019ec:	f003 0302 	and.w	r3, r3, #2
 80019f0:	2b00      	cmp	r3, #0
 80019f2:	d0f0      	beq.n	80019d6 <HAL_RCC_OscConfig+0x1a2>
 80019f4:	4b2a      	ldr	r3, [pc, #168]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 80019f6:	681b      	ldr	r3, [r3, #0]
 80019f8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80019fc:	687b      	ldr	r3, [r7, #4]
 80019fe:	695b      	ldr	r3, [r3, #20]
 8001a00:	00db      	lsls	r3, r3, #3
 8001a02:	4927      	ldr	r1, [pc, #156]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 8001a04:	4313      	orrs	r3, r2
 8001a06:	600b      	str	r3, [r1, #0]
 8001a08:	e015      	b.n	8001a36 <HAL_RCC_OscConfig+0x202>
 8001a0a:	4b26      	ldr	r3, [pc, #152]	; (8001aa4 <HAL_RCC_OscConfig+0x270>)
 8001a0c:	2200      	movs	r2, #0
 8001a0e:	601a      	str	r2, [r3, #0]
 8001a10:	f7ff fc70 	bl	80012f4 <HAL_GetTick>
 8001a14:	6138      	str	r0, [r7, #16]
 8001a16:	e008      	b.n	8001a2a <HAL_RCC_OscConfig+0x1f6>
 8001a18:	f7ff fc6c 	bl	80012f4 <HAL_GetTick>
 8001a1c:	4602      	mov	r2, r0
 8001a1e:	693b      	ldr	r3, [r7, #16]
 8001a20:	1ad3      	subs	r3, r2, r3
 8001a22:	2b02      	cmp	r3, #2
 8001a24:	d901      	bls.n	8001a2a <HAL_RCC_OscConfig+0x1f6>
 8001a26:	2303      	movs	r3, #3
 8001a28:	e17a      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001a2a:	4b1d      	ldr	r3, [pc, #116]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 8001a2c:	681b      	ldr	r3, [r3, #0]
 8001a2e:	f003 0302 	and.w	r3, r3, #2
 8001a32:	2b00      	cmp	r3, #0
 8001a34:	d1f0      	bne.n	8001a18 <HAL_RCC_OscConfig+0x1e4>
 8001a36:	687b      	ldr	r3, [r7, #4]
 8001a38:	681b      	ldr	r3, [r3, #0]
 8001a3a:	f003 0308 	and.w	r3, r3, #8
 8001a3e:	2b00      	cmp	r3, #0
 8001a40:	d03a      	beq.n	8001ab8 <HAL_RCC_OscConfig+0x284>
 8001a42:	687b      	ldr	r3, [r7, #4]
 8001a44:	699b      	ldr	r3, [r3, #24]
 8001a46:	2b00      	cmp	r3, #0
 8001a48:	d019      	beq.n	8001a7e <HAL_RCC_OscConfig+0x24a>
 8001a4a:	4b17      	ldr	r3, [pc, #92]	; (8001aa8 <HAL_RCC_OscConfig+0x274>)
 8001a4c:	2201      	movs	r2, #1
 8001a4e:	601a      	str	r2, [r3, #0]
 8001a50:	f7ff fc50 	bl	80012f4 <HAL_GetTick>
 8001a54:	6138      	str	r0, [r7, #16]
 8001a56:	e008      	b.n	8001a6a <HAL_RCC_OscConfig+0x236>
 8001a58:	f7ff fc4c 	bl	80012f4 <HAL_GetTick>
 8001a5c:	4602      	mov	r2, r0
 8001a5e:	693b      	ldr	r3, [r7, #16]
 8001a60:	1ad3      	subs	r3, r2, r3
 8001a62:	2b02      	cmp	r3, #2
 8001a64:	d901      	bls.n	8001a6a <HAL_RCC_OscConfig+0x236>
 8001a66:	2303      	movs	r3, #3
 8001a68:	e15a      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001a6a:	4b0d      	ldr	r3, [pc, #52]	; (8001aa0 <HAL_RCC_OscConfig+0x26c>)
 8001a6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a6e:	f003 0302 	and.w	r3, r3, #2
 8001a72:	2b00      	cmp	r3, #0
 8001a74:	d0f0      	beq.n	8001a58 <HAL_RCC_OscConfig+0x224>
 8001a76:	2001      	movs	r0, #1
 8001a78:	f000 fb08 	bl	800208c <RCC_Delay>
 8001a7c:	e01c      	b.n	8001ab8 <HAL_RCC_OscConfig+0x284>
 8001a7e:	4b0a      	ldr	r3, [pc, #40]	; (8001aa8 <HAL_RCC_OscConfig+0x274>)
 8001a80:	2200      	movs	r2, #0
 8001a82:	601a      	str	r2, [r3, #0]
 8001a84:	f7ff fc36 	bl	80012f4 <HAL_GetTick>
 8001a88:	6138      	str	r0, [r7, #16]
 8001a8a:	e00f      	b.n	8001aac <HAL_RCC_OscConfig+0x278>
 8001a8c:	f7ff fc32 	bl	80012f4 <HAL_GetTick>
 8001a90:	4602      	mov	r2, r0
 8001a92:	693b      	ldr	r3, [r7, #16]
 8001a94:	1ad3      	subs	r3, r2, r3
 8001a96:	2b02      	cmp	r3, #2
 8001a98:	d908      	bls.n	8001aac <HAL_RCC_OscConfig+0x278>
 8001a9a:	2303      	movs	r3, #3
 8001a9c:	e140      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001a9e:	bf00      	nop
 8001aa0:	40021000 	.word	0x40021000
 8001aa4:	42420000 	.word	0x42420000
 8001aa8:	42420480 	.word	0x42420480
 8001aac:	4b9e      	ldr	r3, [pc, #632]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001aae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ab0:	f003 0302 	and.w	r3, r3, #2
 8001ab4:	2b00      	cmp	r3, #0
 8001ab6:	d1e9      	bne.n	8001a8c <HAL_RCC_OscConfig+0x258>
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	f003 0304 	and.w	r3, r3, #4
 8001ac0:	2b00      	cmp	r3, #0
 8001ac2:	f000 80a6 	beq.w	8001c12 <HAL_RCC_OscConfig+0x3de>
 8001ac6:	2300      	movs	r3, #0
 8001ac8:	75fb      	strb	r3, [r7, #23]
 8001aca:	4b97      	ldr	r3, [pc, #604]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001acc:	69db      	ldr	r3, [r3, #28]
 8001ace:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ad2:	2b00      	cmp	r3, #0
 8001ad4:	d10d      	bne.n	8001af2 <HAL_RCC_OscConfig+0x2be>
 8001ad6:	4b94      	ldr	r3, [pc, #592]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001ad8:	69db      	ldr	r3, [r3, #28]
 8001ada:	4a93      	ldr	r2, [pc, #588]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001adc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001ae0:	61d3      	str	r3, [r2, #28]
 8001ae2:	4b91      	ldr	r3, [pc, #580]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001ae4:	69db      	ldr	r3, [r3, #28]
 8001ae6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001aea:	60bb      	str	r3, [r7, #8]
 8001aec:	68bb      	ldr	r3, [r7, #8]
 8001aee:	2301      	movs	r3, #1
 8001af0:	75fb      	strb	r3, [r7, #23]
 8001af2:	4b8e      	ldr	r3, [pc, #568]	; (8001d2c <HAL_RCC_OscConfig+0x4f8>)
 8001af4:	681b      	ldr	r3, [r3, #0]
 8001af6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001afa:	2b00      	cmp	r3, #0
 8001afc:	d118      	bne.n	8001b30 <HAL_RCC_OscConfig+0x2fc>
 8001afe:	4b8b      	ldr	r3, [pc, #556]	; (8001d2c <HAL_RCC_OscConfig+0x4f8>)
 8001b00:	681b      	ldr	r3, [r3, #0]
 8001b02:	4a8a      	ldr	r2, [pc, #552]	; (8001d2c <HAL_RCC_OscConfig+0x4f8>)
 8001b04:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001b08:	6013      	str	r3, [r2, #0]
 8001b0a:	f7ff fbf3 	bl	80012f4 <HAL_GetTick>
 8001b0e:	6138      	str	r0, [r7, #16]
 8001b10:	e008      	b.n	8001b24 <HAL_RCC_OscConfig+0x2f0>
 8001b12:	f7ff fbef 	bl	80012f4 <HAL_GetTick>
 8001b16:	4602      	mov	r2, r0
 8001b18:	693b      	ldr	r3, [r7, #16]
 8001b1a:	1ad3      	subs	r3, r2, r3
 8001b1c:	2b64      	cmp	r3, #100	; 0x64
 8001b1e:	d901      	bls.n	8001b24 <HAL_RCC_OscConfig+0x2f0>
 8001b20:	2303      	movs	r3, #3
 8001b22:	e0fd      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001b24:	4b81      	ldr	r3, [pc, #516]	; (8001d2c <HAL_RCC_OscConfig+0x4f8>)
 8001b26:	681b      	ldr	r3, [r3, #0]
 8001b28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b2c:	2b00      	cmp	r3, #0
 8001b2e:	d0f0      	beq.n	8001b12 <HAL_RCC_OscConfig+0x2de>
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	68db      	ldr	r3, [r3, #12]
 8001b34:	2b01      	cmp	r3, #1
 8001b36:	d106      	bne.n	8001b46 <HAL_RCC_OscConfig+0x312>
 8001b38:	4b7b      	ldr	r3, [pc, #492]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b3a:	6a1b      	ldr	r3, [r3, #32]
 8001b3c:	4a7a      	ldr	r2, [pc, #488]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b3e:	f043 0301 	orr.w	r3, r3, #1
 8001b42:	6213      	str	r3, [r2, #32]
 8001b44:	e02d      	b.n	8001ba2 <HAL_RCC_OscConfig+0x36e>
 8001b46:	687b      	ldr	r3, [r7, #4]
 8001b48:	68db      	ldr	r3, [r3, #12]
 8001b4a:	2b00      	cmp	r3, #0
 8001b4c:	d10c      	bne.n	8001b68 <HAL_RCC_OscConfig+0x334>
 8001b4e:	4b76      	ldr	r3, [pc, #472]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b50:	6a1b      	ldr	r3, [r3, #32]
 8001b52:	4a75      	ldr	r2, [pc, #468]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b54:	f023 0301 	bic.w	r3, r3, #1
 8001b58:	6213      	str	r3, [r2, #32]
 8001b5a:	4b73      	ldr	r3, [pc, #460]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b5c:	6a1b      	ldr	r3, [r3, #32]
 8001b5e:	4a72      	ldr	r2, [pc, #456]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b60:	f023 0304 	bic.w	r3, r3, #4
 8001b64:	6213      	str	r3, [r2, #32]
 8001b66:	e01c      	b.n	8001ba2 <HAL_RCC_OscConfig+0x36e>
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	68db      	ldr	r3, [r3, #12]
 8001b6c:	2b05      	cmp	r3, #5
 8001b6e:	d10c      	bne.n	8001b8a <HAL_RCC_OscConfig+0x356>
 8001b70:	4b6d      	ldr	r3, [pc, #436]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b72:	6a1b      	ldr	r3, [r3, #32]
 8001b74:	4a6c      	ldr	r2, [pc, #432]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b76:	f043 0304 	orr.w	r3, r3, #4
 8001b7a:	6213      	str	r3, [r2, #32]
 8001b7c:	4b6a      	ldr	r3, [pc, #424]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b7e:	6a1b      	ldr	r3, [r3, #32]
 8001b80:	4a69      	ldr	r2, [pc, #420]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b82:	f043 0301 	orr.w	r3, r3, #1
 8001b86:	6213      	str	r3, [r2, #32]
 8001b88:	e00b      	b.n	8001ba2 <HAL_RCC_OscConfig+0x36e>
 8001b8a:	4b67      	ldr	r3, [pc, #412]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b8c:	6a1b      	ldr	r3, [r3, #32]
 8001b8e:	4a66      	ldr	r2, [pc, #408]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b90:	f023 0301 	bic.w	r3, r3, #1
 8001b94:	6213      	str	r3, [r2, #32]
 8001b96:	4b64      	ldr	r3, [pc, #400]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b98:	6a1b      	ldr	r3, [r3, #32]
 8001b9a:	4a63      	ldr	r2, [pc, #396]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001b9c:	f023 0304 	bic.w	r3, r3, #4
 8001ba0:	6213      	str	r3, [r2, #32]
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	68db      	ldr	r3, [r3, #12]
 8001ba6:	2b00      	cmp	r3, #0
 8001ba8:	d015      	beq.n	8001bd6 <HAL_RCC_OscConfig+0x3a2>
 8001baa:	f7ff fba3 	bl	80012f4 <HAL_GetTick>
 8001bae:	6138      	str	r0, [r7, #16]
 8001bb0:	e00a      	b.n	8001bc8 <HAL_RCC_OscConfig+0x394>
 8001bb2:	f7ff fb9f 	bl	80012f4 <HAL_GetTick>
 8001bb6:	4602      	mov	r2, r0
 8001bb8:	693b      	ldr	r3, [r7, #16]
 8001bba:	1ad3      	subs	r3, r2, r3
 8001bbc:	f241 3288 	movw	r2, #5000	; 0x1388
 8001bc0:	4293      	cmp	r3, r2
 8001bc2:	d901      	bls.n	8001bc8 <HAL_RCC_OscConfig+0x394>
 8001bc4:	2303      	movs	r3, #3
 8001bc6:	e0ab      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001bc8:	4b57      	ldr	r3, [pc, #348]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001bca:	6a1b      	ldr	r3, [r3, #32]
 8001bcc:	f003 0302 	and.w	r3, r3, #2
 8001bd0:	2b00      	cmp	r3, #0
 8001bd2:	d0ee      	beq.n	8001bb2 <HAL_RCC_OscConfig+0x37e>
 8001bd4:	e014      	b.n	8001c00 <HAL_RCC_OscConfig+0x3cc>
 8001bd6:	f7ff fb8d 	bl	80012f4 <HAL_GetTick>
 8001bda:	6138      	str	r0, [r7, #16]
 8001bdc:	e00a      	b.n	8001bf4 <HAL_RCC_OscConfig+0x3c0>
 8001bde:	f7ff fb89 	bl	80012f4 <HAL_GetTick>
 8001be2:	4602      	mov	r2, r0
 8001be4:	693b      	ldr	r3, [r7, #16]
 8001be6:	1ad3      	subs	r3, r2, r3
 8001be8:	f241 3288 	movw	r2, #5000	; 0x1388
 8001bec:	4293      	cmp	r3, r2
 8001bee:	d901      	bls.n	8001bf4 <HAL_RCC_OscConfig+0x3c0>
 8001bf0:	2303      	movs	r3, #3
 8001bf2:	e095      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001bf4:	4b4c      	ldr	r3, [pc, #304]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001bf6:	6a1b      	ldr	r3, [r3, #32]
 8001bf8:	f003 0302 	and.w	r3, r3, #2
 8001bfc:	2b00      	cmp	r3, #0
 8001bfe:	d1ee      	bne.n	8001bde <HAL_RCC_OscConfig+0x3aa>
 8001c00:	7dfb      	ldrb	r3, [r7, #23]
 8001c02:	2b01      	cmp	r3, #1
 8001c04:	d105      	bne.n	8001c12 <HAL_RCC_OscConfig+0x3de>
 8001c06:	4b48      	ldr	r3, [pc, #288]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001c08:	69db      	ldr	r3, [r3, #28]
 8001c0a:	4a47      	ldr	r2, [pc, #284]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001c0c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001c10:	61d3      	str	r3, [r2, #28]
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	69db      	ldr	r3, [r3, #28]
 8001c16:	2b00      	cmp	r3, #0
 8001c18:	f000 8081 	beq.w	8001d1e <HAL_RCC_OscConfig+0x4ea>
 8001c1c:	4b42      	ldr	r3, [pc, #264]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001c1e:	685b      	ldr	r3, [r3, #4]
 8001c20:	f003 030c 	and.w	r3, r3, #12
 8001c24:	2b08      	cmp	r3, #8
 8001c26:	d061      	beq.n	8001cec <HAL_RCC_OscConfig+0x4b8>
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	69db      	ldr	r3, [r3, #28]
 8001c2c:	2b02      	cmp	r3, #2
 8001c2e:	d146      	bne.n	8001cbe <HAL_RCC_OscConfig+0x48a>
 8001c30:	4b3f      	ldr	r3, [pc, #252]	; (8001d30 <HAL_RCC_OscConfig+0x4fc>)
 8001c32:	2200      	movs	r2, #0
 8001c34:	601a      	str	r2, [r3, #0]
 8001c36:	f7ff fb5d 	bl	80012f4 <HAL_GetTick>
 8001c3a:	6138      	str	r0, [r7, #16]
 8001c3c:	e008      	b.n	8001c50 <HAL_RCC_OscConfig+0x41c>
 8001c3e:	f7ff fb59 	bl	80012f4 <HAL_GetTick>
 8001c42:	4602      	mov	r2, r0
 8001c44:	693b      	ldr	r3, [r7, #16]
 8001c46:	1ad3      	subs	r3, r2, r3
 8001c48:	2b02      	cmp	r3, #2
 8001c4a:	d901      	bls.n	8001c50 <HAL_RCC_OscConfig+0x41c>
 8001c4c:	2303      	movs	r3, #3
 8001c4e:	e067      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001c50:	4b35      	ldr	r3, [pc, #212]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001c52:	681b      	ldr	r3, [r3, #0]
 8001c54:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c58:	2b00      	cmp	r3, #0
 8001c5a:	d1f0      	bne.n	8001c3e <HAL_RCC_OscConfig+0x40a>
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	6a1b      	ldr	r3, [r3, #32]
 8001c60:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001c64:	d108      	bne.n	8001c78 <HAL_RCC_OscConfig+0x444>
 8001c66:	4b30      	ldr	r3, [pc, #192]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001c68:	685b      	ldr	r3, [r3, #4]
 8001c6a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	689b      	ldr	r3, [r3, #8]
 8001c72:	492d      	ldr	r1, [pc, #180]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001c74:	4313      	orrs	r3, r2
 8001c76:	604b      	str	r3, [r1, #4]
 8001c78:	4b2b      	ldr	r3, [pc, #172]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001c7a:	685b      	ldr	r3, [r3, #4]
 8001c7c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	6a19      	ldr	r1, [r3, #32]
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c88:	430b      	orrs	r3, r1
 8001c8a:	4927      	ldr	r1, [pc, #156]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001c8c:	4313      	orrs	r3, r2
 8001c8e:	604b      	str	r3, [r1, #4]
 8001c90:	4b27      	ldr	r3, [pc, #156]	; (8001d30 <HAL_RCC_OscConfig+0x4fc>)
 8001c92:	2201      	movs	r2, #1
 8001c94:	601a      	str	r2, [r3, #0]
 8001c96:	f7ff fb2d 	bl	80012f4 <HAL_GetTick>
 8001c9a:	6138      	str	r0, [r7, #16]
 8001c9c:	e008      	b.n	8001cb0 <HAL_RCC_OscConfig+0x47c>
 8001c9e:	f7ff fb29 	bl	80012f4 <HAL_GetTick>
 8001ca2:	4602      	mov	r2, r0
 8001ca4:	693b      	ldr	r3, [r7, #16]
 8001ca6:	1ad3      	subs	r3, r2, r3
 8001ca8:	2b02      	cmp	r3, #2
 8001caa:	d901      	bls.n	8001cb0 <HAL_RCC_OscConfig+0x47c>
 8001cac:	2303      	movs	r3, #3
 8001cae:	e037      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001cb0:	4b1d      	ldr	r3, [pc, #116]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001cb2:	681b      	ldr	r3, [r3, #0]
 8001cb4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	d0f0      	beq.n	8001c9e <HAL_RCC_OscConfig+0x46a>
 8001cbc:	e02f      	b.n	8001d1e <HAL_RCC_OscConfig+0x4ea>
 8001cbe:	4b1c      	ldr	r3, [pc, #112]	; (8001d30 <HAL_RCC_OscConfig+0x4fc>)
 8001cc0:	2200      	movs	r2, #0
 8001cc2:	601a      	str	r2, [r3, #0]
 8001cc4:	f7ff fb16 	bl	80012f4 <HAL_GetTick>
 8001cc8:	6138      	str	r0, [r7, #16]
 8001cca:	e008      	b.n	8001cde <HAL_RCC_OscConfig+0x4aa>
 8001ccc:	f7ff fb12 	bl	80012f4 <HAL_GetTick>
 8001cd0:	4602      	mov	r2, r0
 8001cd2:	693b      	ldr	r3, [r7, #16]
 8001cd4:	1ad3      	subs	r3, r2, r3
 8001cd6:	2b02      	cmp	r3, #2
 8001cd8:	d901      	bls.n	8001cde <HAL_RCC_OscConfig+0x4aa>
 8001cda:	2303      	movs	r3, #3
 8001cdc:	e020      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001cde:	4b12      	ldr	r3, [pc, #72]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001ce6:	2b00      	cmp	r3, #0
 8001ce8:	d1f0      	bne.n	8001ccc <HAL_RCC_OscConfig+0x498>
 8001cea:	e018      	b.n	8001d1e <HAL_RCC_OscConfig+0x4ea>
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	69db      	ldr	r3, [r3, #28]
 8001cf0:	2b01      	cmp	r3, #1
 8001cf2:	d101      	bne.n	8001cf8 <HAL_RCC_OscConfig+0x4c4>
 8001cf4:	2301      	movs	r3, #1
 8001cf6:	e013      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001cf8:	4b0b      	ldr	r3, [pc, #44]	; (8001d28 <HAL_RCC_OscConfig+0x4f4>)
 8001cfa:	685b      	ldr	r3, [r3, #4]
 8001cfc:	60fb      	str	r3, [r7, #12]
 8001cfe:	68fb      	ldr	r3, [r7, #12]
 8001d00:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	6a1b      	ldr	r3, [r3, #32]
 8001d08:	429a      	cmp	r2, r3
 8001d0a:	d106      	bne.n	8001d1a <HAL_RCC_OscConfig+0x4e6>
 8001d0c:	68fb      	ldr	r3, [r7, #12]
 8001d0e:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d16:	429a      	cmp	r2, r3
 8001d18:	d001      	beq.n	8001d1e <HAL_RCC_OscConfig+0x4ea>
 8001d1a:	2301      	movs	r3, #1
 8001d1c:	e000      	b.n	8001d20 <HAL_RCC_OscConfig+0x4ec>
 8001d1e:	2300      	movs	r3, #0
 8001d20:	4618      	mov	r0, r3
 8001d22:	3718      	adds	r7, #24
 8001d24:	46bd      	mov	sp, r7
 8001d26:	bd80      	pop	{r7, pc}
 8001d28:	40021000 	.word	0x40021000
 8001d2c:	40007000 	.word	0x40007000
 8001d30:	42420060 	.word	0x42420060

08001d34 <HAL_RCC_ClockConfig>:
 8001d34:	b580      	push	{r7, lr}
 8001d36:	b084      	sub	sp, #16
 8001d38:	af00      	add	r7, sp, #0
 8001d3a:	6078      	str	r0, [r7, #4]
 8001d3c:	6039      	str	r1, [r7, #0]
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	2b00      	cmp	r3, #0
 8001d42:	d101      	bne.n	8001d48 <HAL_RCC_ClockConfig+0x14>
 8001d44:	2301      	movs	r3, #1
 8001d46:	e0d0      	b.n	8001eea <HAL_RCC_ClockConfig+0x1b6>
 8001d48:	4b6a      	ldr	r3, [pc, #424]	; (8001ef4 <HAL_RCC_ClockConfig+0x1c0>)
 8001d4a:	681b      	ldr	r3, [r3, #0]
 8001d4c:	f003 0307 	and.w	r3, r3, #7
 8001d50:	683a      	ldr	r2, [r7, #0]
 8001d52:	429a      	cmp	r2, r3
 8001d54:	d910      	bls.n	8001d78 <HAL_RCC_ClockConfig+0x44>
 8001d56:	4b67      	ldr	r3, [pc, #412]	; (8001ef4 <HAL_RCC_ClockConfig+0x1c0>)
 8001d58:	681b      	ldr	r3, [r3, #0]
 8001d5a:	f023 0207 	bic.w	r2, r3, #7
 8001d5e:	4965      	ldr	r1, [pc, #404]	; (8001ef4 <HAL_RCC_ClockConfig+0x1c0>)
 8001d60:	683b      	ldr	r3, [r7, #0]
 8001d62:	4313      	orrs	r3, r2
 8001d64:	600b      	str	r3, [r1, #0]
 8001d66:	4b63      	ldr	r3, [pc, #396]	; (8001ef4 <HAL_RCC_ClockConfig+0x1c0>)
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	f003 0307 	and.w	r3, r3, #7
 8001d6e:	683a      	ldr	r2, [r7, #0]
 8001d70:	429a      	cmp	r2, r3
 8001d72:	d001      	beq.n	8001d78 <HAL_RCC_ClockConfig+0x44>
 8001d74:	2301      	movs	r3, #1
 8001d76:	e0b8      	b.n	8001eea <HAL_RCC_ClockConfig+0x1b6>
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	f003 0302 	and.w	r3, r3, #2
 8001d80:	2b00      	cmp	r3, #0
 8001d82:	d020      	beq.n	8001dc6 <HAL_RCC_ClockConfig+0x92>
 8001d84:	687b      	ldr	r3, [r7, #4]
 8001d86:	681b      	ldr	r3, [r3, #0]
 8001d88:	f003 0304 	and.w	r3, r3, #4
 8001d8c:	2b00      	cmp	r3, #0
 8001d8e:	d005      	beq.n	8001d9c <HAL_RCC_ClockConfig+0x68>
 8001d90:	4b59      	ldr	r3, [pc, #356]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001d92:	685b      	ldr	r3, [r3, #4]
 8001d94:	4a58      	ldr	r2, [pc, #352]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001d96:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001d9a:	6053      	str	r3, [r2, #4]
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	681b      	ldr	r3, [r3, #0]
 8001da0:	f003 0308 	and.w	r3, r3, #8
 8001da4:	2b00      	cmp	r3, #0
 8001da6:	d005      	beq.n	8001db4 <HAL_RCC_ClockConfig+0x80>
 8001da8:	4b53      	ldr	r3, [pc, #332]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001daa:	685b      	ldr	r3, [r3, #4]
 8001dac:	4a52      	ldr	r2, [pc, #328]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001dae:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001db2:	6053      	str	r3, [r2, #4]
 8001db4:	4b50      	ldr	r3, [pc, #320]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001db6:	685b      	ldr	r3, [r3, #4]
 8001db8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	689b      	ldr	r3, [r3, #8]
 8001dc0:	494d      	ldr	r1, [pc, #308]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001dc2:	4313      	orrs	r3, r2
 8001dc4:	604b      	str	r3, [r1, #4]
 8001dc6:	687b      	ldr	r3, [r7, #4]
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	f003 0301 	and.w	r3, r3, #1
 8001dce:	2b00      	cmp	r3, #0
 8001dd0:	d040      	beq.n	8001e54 <HAL_RCC_ClockConfig+0x120>
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	685b      	ldr	r3, [r3, #4]
 8001dd6:	2b01      	cmp	r3, #1
 8001dd8:	d107      	bne.n	8001dea <HAL_RCC_ClockConfig+0xb6>
 8001dda:	4b47      	ldr	r3, [pc, #284]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001de2:	2b00      	cmp	r3, #0
 8001de4:	d115      	bne.n	8001e12 <HAL_RCC_ClockConfig+0xde>
 8001de6:	2301      	movs	r3, #1
 8001de8:	e07f      	b.n	8001eea <HAL_RCC_ClockConfig+0x1b6>
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	685b      	ldr	r3, [r3, #4]
 8001dee:	2b02      	cmp	r3, #2
 8001df0:	d107      	bne.n	8001e02 <HAL_RCC_ClockConfig+0xce>
 8001df2:	4b41      	ldr	r3, [pc, #260]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001df4:	681b      	ldr	r3, [r3, #0]
 8001df6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	d109      	bne.n	8001e12 <HAL_RCC_ClockConfig+0xde>
 8001dfe:	2301      	movs	r3, #1
 8001e00:	e073      	b.n	8001eea <HAL_RCC_ClockConfig+0x1b6>
 8001e02:	4b3d      	ldr	r3, [pc, #244]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e04:	681b      	ldr	r3, [r3, #0]
 8001e06:	f003 0302 	and.w	r3, r3, #2
 8001e0a:	2b00      	cmp	r3, #0
 8001e0c:	d101      	bne.n	8001e12 <HAL_RCC_ClockConfig+0xde>
 8001e0e:	2301      	movs	r3, #1
 8001e10:	e06b      	b.n	8001eea <HAL_RCC_ClockConfig+0x1b6>
 8001e12:	4b39      	ldr	r3, [pc, #228]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e14:	685b      	ldr	r3, [r3, #4]
 8001e16:	f023 0203 	bic.w	r2, r3, #3
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	685b      	ldr	r3, [r3, #4]
 8001e1e:	4936      	ldr	r1, [pc, #216]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e20:	4313      	orrs	r3, r2
 8001e22:	604b      	str	r3, [r1, #4]
 8001e24:	f7ff fa66 	bl	80012f4 <HAL_GetTick>
 8001e28:	60f8      	str	r0, [r7, #12]
 8001e2a:	e00a      	b.n	8001e42 <HAL_RCC_ClockConfig+0x10e>
 8001e2c:	f7ff fa62 	bl	80012f4 <HAL_GetTick>
 8001e30:	4602      	mov	r2, r0
 8001e32:	68fb      	ldr	r3, [r7, #12]
 8001e34:	1ad3      	subs	r3, r2, r3
 8001e36:	f241 3288 	movw	r2, #5000	; 0x1388
 8001e3a:	4293      	cmp	r3, r2
 8001e3c:	d901      	bls.n	8001e42 <HAL_RCC_ClockConfig+0x10e>
 8001e3e:	2303      	movs	r3, #3
 8001e40:	e053      	b.n	8001eea <HAL_RCC_ClockConfig+0x1b6>
 8001e42:	4b2d      	ldr	r3, [pc, #180]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e44:	685b      	ldr	r3, [r3, #4]
 8001e46:	f003 020c 	and.w	r2, r3, #12
 8001e4a:	687b      	ldr	r3, [r7, #4]
 8001e4c:	685b      	ldr	r3, [r3, #4]
 8001e4e:	009b      	lsls	r3, r3, #2
 8001e50:	429a      	cmp	r2, r3
 8001e52:	d1eb      	bne.n	8001e2c <HAL_RCC_ClockConfig+0xf8>
 8001e54:	4b27      	ldr	r3, [pc, #156]	; (8001ef4 <HAL_RCC_ClockConfig+0x1c0>)
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	f003 0307 	and.w	r3, r3, #7
 8001e5c:	683a      	ldr	r2, [r7, #0]
 8001e5e:	429a      	cmp	r2, r3
 8001e60:	d210      	bcs.n	8001e84 <HAL_RCC_ClockConfig+0x150>
 8001e62:	4b24      	ldr	r3, [pc, #144]	; (8001ef4 <HAL_RCC_ClockConfig+0x1c0>)
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	f023 0207 	bic.w	r2, r3, #7
 8001e6a:	4922      	ldr	r1, [pc, #136]	; (8001ef4 <HAL_RCC_ClockConfig+0x1c0>)
 8001e6c:	683b      	ldr	r3, [r7, #0]
 8001e6e:	4313      	orrs	r3, r2
 8001e70:	600b      	str	r3, [r1, #0]
 8001e72:	4b20      	ldr	r3, [pc, #128]	; (8001ef4 <HAL_RCC_ClockConfig+0x1c0>)
 8001e74:	681b      	ldr	r3, [r3, #0]
 8001e76:	f003 0307 	and.w	r3, r3, #7
 8001e7a:	683a      	ldr	r2, [r7, #0]
 8001e7c:	429a      	cmp	r2, r3
 8001e7e:	d001      	beq.n	8001e84 <HAL_RCC_ClockConfig+0x150>
 8001e80:	2301      	movs	r3, #1
 8001e82:	e032      	b.n	8001eea <HAL_RCC_ClockConfig+0x1b6>
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	681b      	ldr	r3, [r3, #0]
 8001e88:	f003 0304 	and.w	r3, r3, #4
 8001e8c:	2b00      	cmp	r3, #0
 8001e8e:	d008      	beq.n	8001ea2 <HAL_RCC_ClockConfig+0x16e>
 8001e90:	4b19      	ldr	r3, [pc, #100]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e92:	685b      	ldr	r3, [r3, #4]
 8001e94:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	68db      	ldr	r3, [r3, #12]
 8001e9c:	4916      	ldr	r1, [pc, #88]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e9e:	4313      	orrs	r3, r2
 8001ea0:	604b      	str	r3, [r1, #4]
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	681b      	ldr	r3, [r3, #0]
 8001ea6:	f003 0308 	and.w	r3, r3, #8
 8001eaa:	2b00      	cmp	r3, #0
 8001eac:	d009      	beq.n	8001ec2 <HAL_RCC_ClockConfig+0x18e>
 8001eae:	4b12      	ldr	r3, [pc, #72]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001eb0:	685b      	ldr	r3, [r3, #4]
 8001eb2:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	691b      	ldr	r3, [r3, #16]
 8001eba:	00db      	lsls	r3, r3, #3
 8001ebc:	490e      	ldr	r1, [pc, #56]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001ebe:	4313      	orrs	r3, r2
 8001ec0:	604b      	str	r3, [r1, #4]
 8001ec2:	f000 f821 	bl	8001f08 <HAL_RCC_GetSysClockFreq>
 8001ec6:	4602      	mov	r2, r0
 8001ec8:	4b0b      	ldr	r3, [pc, #44]	; (8001ef8 <HAL_RCC_ClockConfig+0x1c4>)
 8001eca:	685b      	ldr	r3, [r3, #4]
 8001ecc:	091b      	lsrs	r3, r3, #4
 8001ece:	f003 030f 	and.w	r3, r3, #15
 8001ed2:	490a      	ldr	r1, [pc, #40]	; (8001efc <HAL_RCC_ClockConfig+0x1c8>)
 8001ed4:	5ccb      	ldrb	r3, [r1, r3]
 8001ed6:	fa22 f303 	lsr.w	r3, r2, r3
 8001eda:	4a09      	ldr	r2, [pc, #36]	; (8001f00 <HAL_RCC_ClockConfig+0x1cc>)
 8001edc:	6013      	str	r3, [r2, #0]
 8001ede:	4b09      	ldr	r3, [pc, #36]	; (8001f04 <HAL_RCC_ClockConfig+0x1d0>)
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	4618      	mov	r0, r3
 8001ee4:	f7ff f87c 	bl	8000fe0 <HAL_InitTick>
 8001ee8:	2300      	movs	r3, #0
 8001eea:	4618      	mov	r0, r3
 8001eec:	3710      	adds	r7, #16
 8001eee:	46bd      	mov	sp, r7
 8001ef0:	bd80      	pop	{r7, pc}
 8001ef2:	bf00      	nop
 8001ef4:	40022000 	.word	0x40022000
 8001ef8:	40021000 	.word	0x40021000
 8001efc:	08005374 	.word	0x08005374
 8001f00:	200000d0 	.word	0x200000d0
 8001f04:	200000d4 	.word	0x200000d4

08001f08 <HAL_RCC_GetSysClockFreq>:
 8001f08:	b490      	push	{r4, r7}
 8001f0a:	b08a      	sub	sp, #40	; 0x28
 8001f0c:	af00      	add	r7, sp, #0
 8001f0e:	4b2a      	ldr	r3, [pc, #168]	; (8001fb8 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001f10:	1d3c      	adds	r4, r7, #4
 8001f12:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001f14:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001f18:	f240 2301 	movw	r3, #513	; 0x201
 8001f1c:	803b      	strh	r3, [r7, #0]
 8001f1e:	2300      	movs	r3, #0
 8001f20:	61fb      	str	r3, [r7, #28]
 8001f22:	2300      	movs	r3, #0
 8001f24:	61bb      	str	r3, [r7, #24]
 8001f26:	2300      	movs	r3, #0
 8001f28:	627b      	str	r3, [r7, #36]	; 0x24
 8001f2a:	2300      	movs	r3, #0
 8001f2c:	617b      	str	r3, [r7, #20]
 8001f2e:	2300      	movs	r3, #0
 8001f30:	623b      	str	r3, [r7, #32]
 8001f32:	4b22      	ldr	r3, [pc, #136]	; (8001fbc <HAL_RCC_GetSysClockFreq+0xb4>)
 8001f34:	685b      	ldr	r3, [r3, #4]
 8001f36:	61fb      	str	r3, [r7, #28]
 8001f38:	69fb      	ldr	r3, [r7, #28]
 8001f3a:	f003 030c 	and.w	r3, r3, #12
 8001f3e:	2b04      	cmp	r3, #4
 8001f40:	d002      	beq.n	8001f48 <HAL_RCC_GetSysClockFreq+0x40>
 8001f42:	2b08      	cmp	r3, #8
 8001f44:	d003      	beq.n	8001f4e <HAL_RCC_GetSysClockFreq+0x46>
 8001f46:	e02d      	b.n	8001fa4 <HAL_RCC_GetSysClockFreq+0x9c>
 8001f48:	4b1d      	ldr	r3, [pc, #116]	; (8001fc0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001f4a:	623b      	str	r3, [r7, #32]
 8001f4c:	e02d      	b.n	8001faa <HAL_RCC_GetSysClockFreq+0xa2>
 8001f4e:	69fb      	ldr	r3, [r7, #28]
 8001f50:	0c9b      	lsrs	r3, r3, #18
 8001f52:	f003 030f 	and.w	r3, r3, #15
 8001f56:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001f5a:	4413      	add	r3, r2
 8001f5c:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001f60:	617b      	str	r3, [r7, #20]
 8001f62:	69fb      	ldr	r3, [r7, #28]
 8001f64:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001f68:	2b00      	cmp	r3, #0
 8001f6a:	d013      	beq.n	8001f94 <HAL_RCC_GetSysClockFreq+0x8c>
 8001f6c:	4b13      	ldr	r3, [pc, #76]	; (8001fbc <HAL_RCC_GetSysClockFreq+0xb4>)
 8001f6e:	685b      	ldr	r3, [r3, #4]
 8001f70:	0c5b      	lsrs	r3, r3, #17
 8001f72:	f003 0301 	and.w	r3, r3, #1
 8001f76:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001f7a:	4413      	add	r3, r2
 8001f7c:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001f80:	61bb      	str	r3, [r7, #24]
 8001f82:	697b      	ldr	r3, [r7, #20]
 8001f84:	4a0e      	ldr	r2, [pc, #56]	; (8001fc0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001f86:	fb02 f203 	mul.w	r2, r2, r3
 8001f8a:	69bb      	ldr	r3, [r7, #24]
 8001f8c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f90:	627b      	str	r3, [r7, #36]	; 0x24
 8001f92:	e004      	b.n	8001f9e <HAL_RCC_GetSysClockFreq+0x96>
 8001f94:	697b      	ldr	r3, [r7, #20]
 8001f96:	4a0b      	ldr	r2, [pc, #44]	; (8001fc4 <HAL_RCC_GetSysClockFreq+0xbc>)
 8001f98:	fb02 f303 	mul.w	r3, r2, r3
 8001f9c:	627b      	str	r3, [r7, #36]	; 0x24
 8001f9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fa0:	623b      	str	r3, [r7, #32]
 8001fa2:	e002      	b.n	8001faa <HAL_RCC_GetSysClockFreq+0xa2>
 8001fa4:	4b06      	ldr	r3, [pc, #24]	; (8001fc0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001fa6:	623b      	str	r3, [r7, #32]
 8001fa8:	bf00      	nop
 8001faa:	6a3b      	ldr	r3, [r7, #32]
 8001fac:	4618      	mov	r0, r3
 8001fae:	3728      	adds	r7, #40	; 0x28
 8001fb0:	46bd      	mov	sp, r7
 8001fb2:	bc90      	pop	{r4, r7}
 8001fb4:	4770      	bx	lr
 8001fb6:	bf00      	nop
 8001fb8:	08005358 	.word	0x08005358
 8001fbc:	40021000 	.word	0x40021000
 8001fc0:	007a1200 	.word	0x007a1200
 8001fc4:	003d0900 	.word	0x003d0900

08001fc8 <HAL_RCC_GetHCLKFreq>:
 8001fc8:	b480      	push	{r7}
 8001fca:	af00      	add	r7, sp, #0
 8001fcc:	4b02      	ldr	r3, [pc, #8]	; (8001fd8 <HAL_RCC_GetHCLKFreq+0x10>)
 8001fce:	681b      	ldr	r3, [r3, #0]
 8001fd0:	4618      	mov	r0, r3
 8001fd2:	46bd      	mov	sp, r7
 8001fd4:	bc80      	pop	{r7}
 8001fd6:	4770      	bx	lr
 8001fd8:	200000d0 	.word	0x200000d0

08001fdc <HAL_RCC_GetPCLK1Freq>:
 8001fdc:	b580      	push	{r7, lr}
 8001fde:	af00      	add	r7, sp, #0
 8001fe0:	f7ff fff2 	bl	8001fc8 <HAL_RCC_GetHCLKFreq>
 8001fe4:	4602      	mov	r2, r0
 8001fe6:	4b05      	ldr	r3, [pc, #20]	; (8001ffc <HAL_RCC_GetPCLK1Freq+0x20>)
 8001fe8:	685b      	ldr	r3, [r3, #4]
 8001fea:	0a1b      	lsrs	r3, r3, #8
 8001fec:	f003 0307 	and.w	r3, r3, #7
 8001ff0:	4903      	ldr	r1, [pc, #12]	; (8002000 <HAL_RCC_GetPCLK1Freq+0x24>)
 8001ff2:	5ccb      	ldrb	r3, [r1, r3]
 8001ff4:	fa22 f303 	lsr.w	r3, r2, r3
 8001ff8:	4618      	mov	r0, r3
 8001ffa:	bd80      	pop	{r7, pc}
 8001ffc:	40021000 	.word	0x40021000
 8002000:	08005384 	.word	0x08005384

08002004 <HAL_RCC_GetPCLK2Freq>:
 8002004:	b580      	push	{r7, lr}
 8002006:	af00      	add	r7, sp, #0
 8002008:	f7ff ffde 	bl	8001fc8 <HAL_RCC_GetHCLKFreq>
 800200c:	4602      	mov	r2, r0
 800200e:	4b05      	ldr	r3, [pc, #20]	; (8002024 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002010:	685b      	ldr	r3, [r3, #4]
 8002012:	0adb      	lsrs	r3, r3, #11
 8002014:	f003 0307 	and.w	r3, r3, #7
 8002018:	4903      	ldr	r1, [pc, #12]	; (8002028 <HAL_RCC_GetPCLK2Freq+0x24>)
 800201a:	5ccb      	ldrb	r3, [r1, r3]
 800201c:	fa22 f303 	lsr.w	r3, r2, r3
 8002020:	4618      	mov	r0, r3
 8002022:	bd80      	pop	{r7, pc}
 8002024:	40021000 	.word	0x40021000
 8002028:	08005384 	.word	0x08005384

0800202c <HAL_RCC_GetClockConfig>:
 800202c:	b480      	push	{r7}
 800202e:	b083      	sub	sp, #12
 8002030:	af00      	add	r7, sp, #0
 8002032:	6078      	str	r0, [r7, #4]
 8002034:	6039      	str	r1, [r7, #0]
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	220f      	movs	r2, #15
 800203a:	601a      	str	r2, [r3, #0]
 800203c:	4b11      	ldr	r3, [pc, #68]	; (8002084 <HAL_RCC_GetClockConfig+0x58>)
 800203e:	685b      	ldr	r3, [r3, #4]
 8002040:	f003 0203 	and.w	r2, r3, #3
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	605a      	str	r2, [r3, #4]
 8002048:	4b0e      	ldr	r3, [pc, #56]	; (8002084 <HAL_RCC_GetClockConfig+0x58>)
 800204a:	685b      	ldr	r3, [r3, #4]
 800204c:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	609a      	str	r2, [r3, #8]
 8002054:	4b0b      	ldr	r3, [pc, #44]	; (8002084 <HAL_RCC_GetClockConfig+0x58>)
 8002056:	685b      	ldr	r3, [r3, #4]
 8002058:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	60da      	str	r2, [r3, #12]
 8002060:	4b08      	ldr	r3, [pc, #32]	; (8002084 <HAL_RCC_GetClockConfig+0x58>)
 8002062:	685b      	ldr	r3, [r3, #4]
 8002064:	08db      	lsrs	r3, r3, #3
 8002066:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	611a      	str	r2, [r3, #16]
 800206e:	4b06      	ldr	r3, [pc, #24]	; (8002088 <HAL_RCC_GetClockConfig+0x5c>)
 8002070:	681b      	ldr	r3, [r3, #0]
 8002072:	f003 0207 	and.w	r2, r3, #7
 8002076:	683b      	ldr	r3, [r7, #0]
 8002078:	601a      	str	r2, [r3, #0]
 800207a:	bf00      	nop
 800207c:	370c      	adds	r7, #12
 800207e:	46bd      	mov	sp, r7
 8002080:	bc80      	pop	{r7}
 8002082:	4770      	bx	lr
 8002084:	40021000 	.word	0x40021000
 8002088:	40022000 	.word	0x40022000

0800208c <RCC_Delay>:
 800208c:	b480      	push	{r7}
 800208e:	b085      	sub	sp, #20
 8002090:	af00      	add	r7, sp, #0
 8002092:	6078      	str	r0, [r7, #4]
 8002094:	4b0a      	ldr	r3, [pc, #40]	; (80020c0 <RCC_Delay+0x34>)
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	4a0a      	ldr	r2, [pc, #40]	; (80020c4 <RCC_Delay+0x38>)
 800209a:	fba2 2303 	umull	r2, r3, r2, r3
 800209e:	0a5b      	lsrs	r3, r3, #9
 80020a0:	687a      	ldr	r2, [r7, #4]
 80020a2:	fb02 f303 	mul.w	r3, r2, r3
 80020a6:	60fb      	str	r3, [r7, #12]
 80020a8:	bf00      	nop
 80020aa:	68fb      	ldr	r3, [r7, #12]
 80020ac:	1e5a      	subs	r2, r3, #1
 80020ae:	60fa      	str	r2, [r7, #12]
 80020b0:	2b00      	cmp	r3, #0
 80020b2:	d1f9      	bne.n	80020a8 <RCC_Delay+0x1c>
 80020b4:	bf00      	nop
 80020b6:	bf00      	nop
 80020b8:	3714      	adds	r7, #20
 80020ba:	46bd      	mov	sp, r7
 80020bc:	bc80      	pop	{r7}
 80020be:	4770      	bx	lr
 80020c0:	200000d0 	.word	0x200000d0
 80020c4:	10624dd3 	.word	0x10624dd3

080020c8 <HAL_TIM_Base_Init>:
 80020c8:	b580      	push	{r7, lr}
 80020ca:	b082      	sub	sp, #8
 80020cc:	af00      	add	r7, sp, #0
 80020ce:	6078      	str	r0, [r7, #4]
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	d101      	bne.n	80020da <HAL_TIM_Base_Init+0x12>
 80020d6:	2301      	movs	r3, #1
 80020d8:	e041      	b.n	800215e <HAL_TIM_Base_Init+0x96>
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80020e0:	b2db      	uxtb	r3, r3
 80020e2:	2b00      	cmp	r3, #0
 80020e4:	d106      	bne.n	80020f4 <HAL_TIM_Base_Init+0x2c>
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	2200      	movs	r2, #0
 80020ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80020ee:	6878      	ldr	r0, [r7, #4]
 80020f0:	f000 f839 	bl	8002166 <HAL_TIM_Base_MspInit>
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	2202      	movs	r2, #2
 80020f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	681a      	ldr	r2, [r3, #0]
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	3304      	adds	r3, #4
 8002104:	4619      	mov	r1, r3
 8002106:	4610      	mov	r0, r2
 8002108:	f000 f9b4 	bl	8002474 <TIM_Base_SetConfig>
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	2201      	movs	r2, #1
 8002110:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002114:	687b      	ldr	r3, [r7, #4]
 8002116:	2201      	movs	r2, #1
 8002118:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	2201      	movs	r2, #1
 8002120:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	2201      	movs	r2, #1
 8002128:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	2201      	movs	r2, #1
 8002130:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	2201      	movs	r2, #1
 8002138:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	2201      	movs	r2, #1
 8002140:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	2201      	movs	r2, #1
 8002148:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	2201      	movs	r2, #1
 8002150:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	2201      	movs	r2, #1
 8002158:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800215c:	2300      	movs	r3, #0
 800215e:	4618      	mov	r0, r3
 8002160:	3708      	adds	r7, #8
 8002162:	46bd      	mov	sp, r7
 8002164:	bd80      	pop	{r7, pc}

08002166 <HAL_TIM_Base_MspInit>:
 8002166:	b480      	push	{r7}
 8002168:	b083      	sub	sp, #12
 800216a:	af00      	add	r7, sp, #0
 800216c:	6078      	str	r0, [r7, #4]
 800216e:	bf00      	nop
 8002170:	370c      	adds	r7, #12
 8002172:	46bd      	mov	sp, r7
 8002174:	bc80      	pop	{r7}
 8002176:	4770      	bx	lr

08002178 <HAL_TIM_Base_Start_IT>:
 8002178:	b480      	push	{r7}
 800217a:	b085      	sub	sp, #20
 800217c:	af00      	add	r7, sp, #0
 800217e:	6078      	str	r0, [r7, #4]
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002186:	b2db      	uxtb	r3, r3
 8002188:	2b01      	cmp	r3, #1
 800218a:	d001      	beq.n	8002190 <HAL_TIM_Base_Start_IT+0x18>
 800218c:	2301      	movs	r3, #1
 800218e:	e03a      	b.n	8002206 <HAL_TIM_Base_Start_IT+0x8e>
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	2202      	movs	r2, #2
 8002194:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	68da      	ldr	r2, [r3, #12]
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	681b      	ldr	r3, [r3, #0]
 80021a2:	f042 0201 	orr.w	r2, r2, #1
 80021a6:	60da      	str	r2, [r3, #12]
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	4a18      	ldr	r2, [pc, #96]	; (8002210 <HAL_TIM_Base_Start_IT+0x98>)
 80021ae:	4293      	cmp	r3, r2
 80021b0:	d00e      	beq.n	80021d0 <HAL_TIM_Base_Start_IT+0x58>
 80021b2:	687b      	ldr	r3, [r7, #4]
 80021b4:	681b      	ldr	r3, [r3, #0]
 80021b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80021ba:	d009      	beq.n	80021d0 <HAL_TIM_Base_Start_IT+0x58>
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	4a14      	ldr	r2, [pc, #80]	; (8002214 <HAL_TIM_Base_Start_IT+0x9c>)
 80021c2:	4293      	cmp	r3, r2
 80021c4:	d004      	beq.n	80021d0 <HAL_TIM_Base_Start_IT+0x58>
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	681b      	ldr	r3, [r3, #0]
 80021ca:	4a13      	ldr	r2, [pc, #76]	; (8002218 <HAL_TIM_Base_Start_IT+0xa0>)
 80021cc:	4293      	cmp	r3, r2
 80021ce:	d111      	bne.n	80021f4 <HAL_TIM_Base_Start_IT+0x7c>
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	689b      	ldr	r3, [r3, #8]
 80021d6:	f003 0307 	and.w	r3, r3, #7
 80021da:	60fb      	str	r3, [r7, #12]
 80021dc:	68fb      	ldr	r3, [r7, #12]
 80021de:	2b06      	cmp	r3, #6
 80021e0:	d010      	beq.n	8002204 <HAL_TIM_Base_Start_IT+0x8c>
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	681a      	ldr	r2, [r3, #0]
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	f042 0201 	orr.w	r2, r2, #1
 80021f0:	601a      	str	r2, [r3, #0]
 80021f2:	e007      	b.n	8002204 <HAL_TIM_Base_Start_IT+0x8c>
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	681a      	ldr	r2, [r3, #0]
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	681b      	ldr	r3, [r3, #0]
 80021fe:	f042 0201 	orr.w	r2, r2, #1
 8002202:	601a      	str	r2, [r3, #0]
 8002204:	2300      	movs	r3, #0
 8002206:	4618      	mov	r0, r3
 8002208:	3714      	adds	r7, #20
 800220a:	46bd      	mov	sp, r7
 800220c:	bc80      	pop	{r7}
 800220e:	4770      	bx	lr
 8002210:	40012c00 	.word	0x40012c00
 8002214:	40000400 	.word	0x40000400
 8002218:	40000800 	.word	0x40000800

0800221c <HAL_TIM_IRQHandler>:
 800221c:	b580      	push	{r7, lr}
 800221e:	b082      	sub	sp, #8
 8002220:	af00      	add	r7, sp, #0
 8002222:	6078      	str	r0, [r7, #4]
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	691b      	ldr	r3, [r3, #16]
 800222a:	f003 0302 	and.w	r3, r3, #2
 800222e:	2b02      	cmp	r3, #2
 8002230:	d122      	bne.n	8002278 <HAL_TIM_IRQHandler+0x5c>
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	68db      	ldr	r3, [r3, #12]
 8002238:	f003 0302 	and.w	r3, r3, #2
 800223c:	2b02      	cmp	r3, #2
 800223e:	d11b      	bne.n	8002278 <HAL_TIM_IRQHandler+0x5c>
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	681b      	ldr	r3, [r3, #0]
 8002244:	f06f 0202 	mvn.w	r2, #2
 8002248:	611a      	str	r2, [r3, #16]
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	2201      	movs	r2, #1
 800224e:	771a      	strb	r2, [r3, #28]
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	681b      	ldr	r3, [r3, #0]
 8002254:	699b      	ldr	r3, [r3, #24]
 8002256:	f003 0303 	and.w	r3, r3, #3
 800225a:	2b00      	cmp	r3, #0
 800225c:	d003      	beq.n	8002266 <HAL_TIM_IRQHandler+0x4a>
 800225e:	6878      	ldr	r0, [r7, #4]
 8002260:	f000 f8ed 	bl	800243e <HAL_TIM_IC_CaptureCallback>
 8002264:	e005      	b.n	8002272 <HAL_TIM_IRQHandler+0x56>
 8002266:	6878      	ldr	r0, [r7, #4]
 8002268:	f000 f8e0 	bl	800242c <HAL_TIM_OC_DelayElapsedCallback>
 800226c:	6878      	ldr	r0, [r7, #4]
 800226e:	f000 f8ef 	bl	8002450 <HAL_TIM_PWM_PulseFinishedCallback>
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	2200      	movs	r2, #0
 8002276:	771a      	strb	r2, [r3, #28]
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	691b      	ldr	r3, [r3, #16]
 800227e:	f003 0304 	and.w	r3, r3, #4
 8002282:	2b04      	cmp	r3, #4
 8002284:	d122      	bne.n	80022cc <HAL_TIM_IRQHandler+0xb0>
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	681b      	ldr	r3, [r3, #0]
 800228a:	68db      	ldr	r3, [r3, #12]
 800228c:	f003 0304 	and.w	r3, r3, #4
 8002290:	2b04      	cmp	r3, #4
 8002292:	d11b      	bne.n	80022cc <HAL_TIM_IRQHandler+0xb0>
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	f06f 0204 	mvn.w	r2, #4
 800229c:	611a      	str	r2, [r3, #16]
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	2202      	movs	r2, #2
 80022a2:	771a      	strb	r2, [r3, #28]
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	699b      	ldr	r3, [r3, #24]
 80022aa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80022ae:	2b00      	cmp	r3, #0
 80022b0:	d003      	beq.n	80022ba <HAL_TIM_IRQHandler+0x9e>
 80022b2:	6878      	ldr	r0, [r7, #4]
 80022b4:	f000 f8c3 	bl	800243e <HAL_TIM_IC_CaptureCallback>
 80022b8:	e005      	b.n	80022c6 <HAL_TIM_IRQHandler+0xaa>
 80022ba:	6878      	ldr	r0, [r7, #4]
 80022bc:	f000 f8b6 	bl	800242c <HAL_TIM_OC_DelayElapsedCallback>
 80022c0:	6878      	ldr	r0, [r7, #4]
 80022c2:	f000 f8c5 	bl	8002450 <HAL_TIM_PWM_PulseFinishedCallback>
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	2200      	movs	r2, #0
 80022ca:	771a      	strb	r2, [r3, #28]
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	691b      	ldr	r3, [r3, #16]
 80022d2:	f003 0308 	and.w	r3, r3, #8
 80022d6:	2b08      	cmp	r3, #8
 80022d8:	d122      	bne.n	8002320 <HAL_TIM_IRQHandler+0x104>
 80022da:	687b      	ldr	r3, [r7, #4]
 80022dc:	681b      	ldr	r3, [r3, #0]
 80022de:	68db      	ldr	r3, [r3, #12]
 80022e0:	f003 0308 	and.w	r3, r3, #8
 80022e4:	2b08      	cmp	r3, #8
 80022e6:	d11b      	bne.n	8002320 <HAL_TIM_IRQHandler+0x104>
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	f06f 0208 	mvn.w	r2, #8
 80022f0:	611a      	str	r2, [r3, #16]
 80022f2:	687b      	ldr	r3, [r7, #4]
 80022f4:	2204      	movs	r2, #4
 80022f6:	771a      	strb	r2, [r3, #28]
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	69db      	ldr	r3, [r3, #28]
 80022fe:	f003 0303 	and.w	r3, r3, #3
 8002302:	2b00      	cmp	r3, #0
 8002304:	d003      	beq.n	800230e <HAL_TIM_IRQHandler+0xf2>
 8002306:	6878      	ldr	r0, [r7, #4]
 8002308:	f000 f899 	bl	800243e <HAL_TIM_IC_CaptureCallback>
 800230c:	e005      	b.n	800231a <HAL_TIM_IRQHandler+0xfe>
 800230e:	6878      	ldr	r0, [r7, #4]
 8002310:	f000 f88c 	bl	800242c <HAL_TIM_OC_DelayElapsedCallback>
 8002314:	6878      	ldr	r0, [r7, #4]
 8002316:	f000 f89b 	bl	8002450 <HAL_TIM_PWM_PulseFinishedCallback>
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	2200      	movs	r2, #0
 800231e:	771a      	strb	r2, [r3, #28]
 8002320:	687b      	ldr	r3, [r7, #4]
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	691b      	ldr	r3, [r3, #16]
 8002326:	f003 0310 	and.w	r3, r3, #16
 800232a:	2b10      	cmp	r3, #16
 800232c:	d122      	bne.n	8002374 <HAL_TIM_IRQHandler+0x158>
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	68db      	ldr	r3, [r3, #12]
 8002334:	f003 0310 	and.w	r3, r3, #16
 8002338:	2b10      	cmp	r3, #16
 800233a:	d11b      	bne.n	8002374 <HAL_TIM_IRQHandler+0x158>
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	f06f 0210 	mvn.w	r2, #16
 8002344:	611a      	str	r2, [r3, #16]
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	2208      	movs	r2, #8
 800234a:	771a      	strb	r2, [r3, #28]
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	69db      	ldr	r3, [r3, #28]
 8002352:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002356:	2b00      	cmp	r3, #0
 8002358:	d003      	beq.n	8002362 <HAL_TIM_IRQHandler+0x146>
 800235a:	6878      	ldr	r0, [r7, #4]
 800235c:	f000 f86f 	bl	800243e <HAL_TIM_IC_CaptureCallback>
 8002360:	e005      	b.n	800236e <HAL_TIM_IRQHandler+0x152>
 8002362:	6878      	ldr	r0, [r7, #4]
 8002364:	f000 f862 	bl	800242c <HAL_TIM_OC_DelayElapsedCallback>
 8002368:	6878      	ldr	r0, [r7, #4]
 800236a:	f000 f871 	bl	8002450 <HAL_TIM_PWM_PulseFinishedCallback>
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	2200      	movs	r2, #0
 8002372:	771a      	strb	r2, [r3, #28]
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	691b      	ldr	r3, [r3, #16]
 800237a:	f003 0301 	and.w	r3, r3, #1
 800237e:	2b01      	cmp	r3, #1
 8002380:	d10e      	bne.n	80023a0 <HAL_TIM_IRQHandler+0x184>
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	68db      	ldr	r3, [r3, #12]
 8002388:	f003 0301 	and.w	r3, r3, #1
 800238c:	2b01      	cmp	r3, #1
 800238e:	d107      	bne.n	80023a0 <HAL_TIM_IRQHandler+0x184>
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	681b      	ldr	r3, [r3, #0]
 8002394:	f06f 0201 	mvn.w	r2, #1
 8002398:	611a      	str	r2, [r3, #16]
 800239a:	6878      	ldr	r0, [r7, #4]
 800239c:	f7fe fd10 	bl	8000dc0 <HAL_TIM_PeriodElapsedCallback>
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	691b      	ldr	r3, [r3, #16]
 80023a6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80023aa:	2b80      	cmp	r3, #128	; 0x80
 80023ac:	d10e      	bne.n	80023cc <HAL_TIM_IRQHandler+0x1b0>
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	68db      	ldr	r3, [r3, #12]
 80023b4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80023b8:	2b80      	cmp	r3, #128	; 0x80
 80023ba:	d107      	bne.n	80023cc <HAL_TIM_IRQHandler+0x1b0>
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80023c4:	611a      	str	r2, [r3, #16]
 80023c6:	6878      	ldr	r0, [r7, #4]
 80023c8:	f000 f8bf 	bl	800254a <HAL_TIMEx_BreakCallback>
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	681b      	ldr	r3, [r3, #0]
 80023d0:	691b      	ldr	r3, [r3, #16]
 80023d2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80023d6:	2b40      	cmp	r3, #64	; 0x40
 80023d8:	d10e      	bne.n	80023f8 <HAL_TIM_IRQHandler+0x1dc>
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	68db      	ldr	r3, [r3, #12]
 80023e0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80023e4:	2b40      	cmp	r3, #64	; 0x40
 80023e6:	d107      	bne.n	80023f8 <HAL_TIM_IRQHandler+0x1dc>
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	681b      	ldr	r3, [r3, #0]
 80023ec:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80023f0:	611a      	str	r2, [r3, #16]
 80023f2:	6878      	ldr	r0, [r7, #4]
 80023f4:	f000 f835 	bl	8002462 <HAL_TIM_TriggerCallback>
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	691b      	ldr	r3, [r3, #16]
 80023fe:	f003 0320 	and.w	r3, r3, #32
 8002402:	2b20      	cmp	r3, #32
 8002404:	d10e      	bne.n	8002424 <HAL_TIM_IRQHandler+0x208>
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	68db      	ldr	r3, [r3, #12]
 800240c:	f003 0320 	and.w	r3, r3, #32
 8002410:	2b20      	cmp	r3, #32
 8002412:	d107      	bne.n	8002424 <HAL_TIM_IRQHandler+0x208>
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	f06f 0220 	mvn.w	r2, #32
 800241c:	611a      	str	r2, [r3, #16]
 800241e:	6878      	ldr	r0, [r7, #4]
 8002420:	f000 f88a 	bl	8002538 <HAL_TIMEx_CommutCallback>
 8002424:	bf00      	nop
 8002426:	3708      	adds	r7, #8
 8002428:	46bd      	mov	sp, r7
 800242a:	bd80      	pop	{r7, pc}

0800242c <HAL_TIM_OC_DelayElapsedCallback>:
 800242c:	b480      	push	{r7}
 800242e:	b083      	sub	sp, #12
 8002430:	af00      	add	r7, sp, #0
 8002432:	6078      	str	r0, [r7, #4]
 8002434:	bf00      	nop
 8002436:	370c      	adds	r7, #12
 8002438:	46bd      	mov	sp, r7
 800243a:	bc80      	pop	{r7}
 800243c:	4770      	bx	lr

0800243e <HAL_TIM_IC_CaptureCallback>:
 800243e:	b480      	push	{r7}
 8002440:	b083      	sub	sp, #12
 8002442:	af00      	add	r7, sp, #0
 8002444:	6078      	str	r0, [r7, #4]
 8002446:	bf00      	nop
 8002448:	370c      	adds	r7, #12
 800244a:	46bd      	mov	sp, r7
 800244c:	bc80      	pop	{r7}
 800244e:	4770      	bx	lr

08002450 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002450:	b480      	push	{r7}
 8002452:	b083      	sub	sp, #12
 8002454:	af00      	add	r7, sp, #0
 8002456:	6078      	str	r0, [r7, #4]
 8002458:	bf00      	nop
 800245a:	370c      	adds	r7, #12
 800245c:	46bd      	mov	sp, r7
 800245e:	bc80      	pop	{r7}
 8002460:	4770      	bx	lr

08002462 <HAL_TIM_TriggerCallback>:
 8002462:	b480      	push	{r7}
 8002464:	b083      	sub	sp, #12
 8002466:	af00      	add	r7, sp, #0
 8002468:	6078      	str	r0, [r7, #4]
 800246a:	bf00      	nop
 800246c:	370c      	adds	r7, #12
 800246e:	46bd      	mov	sp, r7
 8002470:	bc80      	pop	{r7}
 8002472:	4770      	bx	lr

08002474 <TIM_Base_SetConfig>:
 8002474:	b480      	push	{r7}
 8002476:	b085      	sub	sp, #20
 8002478:	af00      	add	r7, sp, #0
 800247a:	6078      	str	r0, [r7, #4]
 800247c:	6039      	str	r1, [r7, #0]
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	60fb      	str	r3, [r7, #12]
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	4a29      	ldr	r2, [pc, #164]	; (800252c <TIM_Base_SetConfig+0xb8>)
 8002488:	4293      	cmp	r3, r2
 800248a:	d00b      	beq.n	80024a4 <TIM_Base_SetConfig+0x30>
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002492:	d007      	beq.n	80024a4 <TIM_Base_SetConfig+0x30>
 8002494:	687b      	ldr	r3, [r7, #4]
 8002496:	4a26      	ldr	r2, [pc, #152]	; (8002530 <TIM_Base_SetConfig+0xbc>)
 8002498:	4293      	cmp	r3, r2
 800249a:	d003      	beq.n	80024a4 <TIM_Base_SetConfig+0x30>
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	4a25      	ldr	r2, [pc, #148]	; (8002534 <TIM_Base_SetConfig+0xc0>)
 80024a0:	4293      	cmp	r3, r2
 80024a2:	d108      	bne.n	80024b6 <TIM_Base_SetConfig+0x42>
 80024a4:	68fb      	ldr	r3, [r7, #12]
 80024a6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80024aa:	60fb      	str	r3, [r7, #12]
 80024ac:	683b      	ldr	r3, [r7, #0]
 80024ae:	685b      	ldr	r3, [r3, #4]
 80024b0:	68fa      	ldr	r2, [r7, #12]
 80024b2:	4313      	orrs	r3, r2
 80024b4:	60fb      	str	r3, [r7, #12]
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	4a1c      	ldr	r2, [pc, #112]	; (800252c <TIM_Base_SetConfig+0xb8>)
 80024ba:	4293      	cmp	r3, r2
 80024bc:	d00b      	beq.n	80024d6 <TIM_Base_SetConfig+0x62>
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80024c4:	d007      	beq.n	80024d6 <TIM_Base_SetConfig+0x62>
 80024c6:	687b      	ldr	r3, [r7, #4]
 80024c8:	4a19      	ldr	r2, [pc, #100]	; (8002530 <TIM_Base_SetConfig+0xbc>)
 80024ca:	4293      	cmp	r3, r2
 80024cc:	d003      	beq.n	80024d6 <TIM_Base_SetConfig+0x62>
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	4a18      	ldr	r2, [pc, #96]	; (8002534 <TIM_Base_SetConfig+0xc0>)
 80024d2:	4293      	cmp	r3, r2
 80024d4:	d108      	bne.n	80024e8 <TIM_Base_SetConfig+0x74>
 80024d6:	68fb      	ldr	r3, [r7, #12]
 80024d8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80024dc:	60fb      	str	r3, [r7, #12]
 80024de:	683b      	ldr	r3, [r7, #0]
 80024e0:	68db      	ldr	r3, [r3, #12]
 80024e2:	68fa      	ldr	r2, [r7, #12]
 80024e4:	4313      	orrs	r3, r2
 80024e6:	60fb      	str	r3, [r7, #12]
 80024e8:	68fb      	ldr	r3, [r7, #12]
 80024ea:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80024ee:	683b      	ldr	r3, [r7, #0]
 80024f0:	695b      	ldr	r3, [r3, #20]
 80024f2:	4313      	orrs	r3, r2
 80024f4:	60fb      	str	r3, [r7, #12]
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	68fa      	ldr	r2, [r7, #12]
 80024fa:	601a      	str	r2, [r3, #0]
 80024fc:	683b      	ldr	r3, [r7, #0]
 80024fe:	689a      	ldr	r2, [r3, #8]
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	62da      	str	r2, [r3, #44]	; 0x2c
 8002504:	683b      	ldr	r3, [r7, #0]
 8002506:	681a      	ldr	r2, [r3, #0]
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	629a      	str	r2, [r3, #40]	; 0x28
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	4a07      	ldr	r2, [pc, #28]	; (800252c <TIM_Base_SetConfig+0xb8>)
 8002510:	4293      	cmp	r3, r2
 8002512:	d103      	bne.n	800251c <TIM_Base_SetConfig+0xa8>
 8002514:	683b      	ldr	r3, [r7, #0]
 8002516:	691a      	ldr	r2, [r3, #16]
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	631a      	str	r2, [r3, #48]	; 0x30
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	2201      	movs	r2, #1
 8002520:	615a      	str	r2, [r3, #20]
 8002522:	bf00      	nop
 8002524:	3714      	adds	r7, #20
 8002526:	46bd      	mov	sp, r7
 8002528:	bc80      	pop	{r7}
 800252a:	4770      	bx	lr
 800252c:	40012c00 	.word	0x40012c00
 8002530:	40000400 	.word	0x40000400
 8002534:	40000800 	.word	0x40000800

08002538 <HAL_TIMEx_CommutCallback>:
 8002538:	b480      	push	{r7}
 800253a:	b083      	sub	sp, #12
 800253c:	af00      	add	r7, sp, #0
 800253e:	6078      	str	r0, [r7, #4]
 8002540:	bf00      	nop
 8002542:	370c      	adds	r7, #12
 8002544:	46bd      	mov	sp, r7
 8002546:	bc80      	pop	{r7}
 8002548:	4770      	bx	lr

0800254a <HAL_TIMEx_BreakCallback>:
 800254a:	b480      	push	{r7}
 800254c:	b083      	sub	sp, #12
 800254e:	af00      	add	r7, sp, #0
 8002550:	6078      	str	r0, [r7, #4]
 8002552:	bf00      	nop
 8002554:	370c      	adds	r7, #12
 8002556:	46bd      	mov	sp, r7
 8002558:	bc80      	pop	{r7}
 800255a:	4770      	bx	lr

0800255c <HAL_UART_Init>:
 800255c:	b580      	push	{r7, lr}
 800255e:	b082      	sub	sp, #8
 8002560:	af00      	add	r7, sp, #0
 8002562:	6078      	str	r0, [r7, #4]
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	2b00      	cmp	r3, #0
 8002568:	d101      	bne.n	800256e <HAL_UART_Init+0x12>
 800256a:	2301      	movs	r3, #1
 800256c:	e03f      	b.n	80025ee <HAL_UART_Init+0x92>
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8002574:	b2db      	uxtb	r3, r3
 8002576:	2b00      	cmp	r3, #0
 8002578:	d106      	bne.n	8002588 <HAL_UART_Init+0x2c>
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	2200      	movs	r2, #0
 800257e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002582:	6878      	ldr	r0, [r7, #4]
 8002584:	f7fe fc6c 	bl	8000e60 <HAL_UART_MspInit>
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	2224      	movs	r2, #36	; 0x24
 800258c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	68da      	ldr	r2, [r3, #12]
 8002596:	687b      	ldr	r3, [r7, #4]
 8002598:	681b      	ldr	r3, [r3, #0]
 800259a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800259e:	60da      	str	r2, [r3, #12]
 80025a0:	6878      	ldr	r0, [r7, #4]
 80025a2:	f000 f9a3 	bl	80028ec <UART_SetConfig>
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	691a      	ldr	r2, [r3, #16]
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80025b4:	611a      	str	r2, [r3, #16]
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	695a      	ldr	r2, [r3, #20]
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80025c4:	615a      	str	r2, [r3, #20]
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	681b      	ldr	r3, [r3, #0]
 80025ca:	68da      	ldr	r2, [r3, #12]
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80025d4:	60da      	str	r2, [r3, #12]
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	2200      	movs	r2, #0
 80025da:	63da      	str	r2, [r3, #60]	; 0x3c
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	2220      	movs	r2, #32
 80025e0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	2220      	movs	r2, #32
 80025e8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80025ec:	2300      	movs	r3, #0
 80025ee:	4618      	mov	r0, r3
 80025f0:	3708      	adds	r7, #8
 80025f2:	46bd      	mov	sp, r7
 80025f4:	bd80      	pop	{r7, pc}

080025f6 <HAL_UART_Transmit>:
 80025f6:	b580      	push	{r7, lr}
 80025f8:	b08a      	sub	sp, #40	; 0x28
 80025fa:	af02      	add	r7, sp, #8
 80025fc:	60f8      	str	r0, [r7, #12]
 80025fe:	60b9      	str	r1, [r7, #8]
 8002600:	603b      	str	r3, [r7, #0]
 8002602:	4613      	mov	r3, r2
 8002604:	80fb      	strh	r3, [r7, #6]
 8002606:	2300      	movs	r3, #0
 8002608:	617b      	str	r3, [r7, #20]
 800260a:	68fb      	ldr	r3, [r7, #12]
 800260c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8002610:	b2db      	uxtb	r3, r3
 8002612:	2b20      	cmp	r3, #32
 8002614:	d17c      	bne.n	8002710 <HAL_UART_Transmit+0x11a>
 8002616:	68bb      	ldr	r3, [r7, #8]
 8002618:	2b00      	cmp	r3, #0
 800261a:	d002      	beq.n	8002622 <HAL_UART_Transmit+0x2c>
 800261c:	88fb      	ldrh	r3, [r7, #6]
 800261e:	2b00      	cmp	r3, #0
 8002620:	d101      	bne.n	8002626 <HAL_UART_Transmit+0x30>
 8002622:	2301      	movs	r3, #1
 8002624:	e075      	b.n	8002712 <HAL_UART_Transmit+0x11c>
 8002626:	68fb      	ldr	r3, [r7, #12]
 8002628:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800262c:	2b01      	cmp	r3, #1
 800262e:	d101      	bne.n	8002634 <HAL_UART_Transmit+0x3e>
 8002630:	2302      	movs	r3, #2
 8002632:	e06e      	b.n	8002712 <HAL_UART_Transmit+0x11c>
 8002634:	68fb      	ldr	r3, [r7, #12]
 8002636:	2201      	movs	r2, #1
 8002638:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800263c:	68fb      	ldr	r3, [r7, #12]
 800263e:	2200      	movs	r2, #0
 8002640:	63da      	str	r2, [r3, #60]	; 0x3c
 8002642:	68fb      	ldr	r3, [r7, #12]
 8002644:	2221      	movs	r2, #33	; 0x21
 8002646:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800264a:	f7fe fe53 	bl	80012f4 <HAL_GetTick>
 800264e:	6178      	str	r0, [r7, #20]
 8002650:	68fb      	ldr	r3, [r7, #12]
 8002652:	88fa      	ldrh	r2, [r7, #6]
 8002654:	849a      	strh	r2, [r3, #36]	; 0x24
 8002656:	68fb      	ldr	r3, [r7, #12]
 8002658:	88fa      	ldrh	r2, [r7, #6]
 800265a:	84da      	strh	r2, [r3, #38]	; 0x26
 800265c:	68fb      	ldr	r3, [r7, #12]
 800265e:	689b      	ldr	r3, [r3, #8]
 8002660:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002664:	d108      	bne.n	8002678 <HAL_UART_Transmit+0x82>
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	691b      	ldr	r3, [r3, #16]
 800266a:	2b00      	cmp	r3, #0
 800266c:	d104      	bne.n	8002678 <HAL_UART_Transmit+0x82>
 800266e:	2300      	movs	r3, #0
 8002670:	61fb      	str	r3, [r7, #28]
 8002672:	68bb      	ldr	r3, [r7, #8]
 8002674:	61bb      	str	r3, [r7, #24]
 8002676:	e003      	b.n	8002680 <HAL_UART_Transmit+0x8a>
 8002678:	68bb      	ldr	r3, [r7, #8]
 800267a:	61fb      	str	r3, [r7, #28]
 800267c:	2300      	movs	r3, #0
 800267e:	61bb      	str	r3, [r7, #24]
 8002680:	68fb      	ldr	r3, [r7, #12]
 8002682:	2200      	movs	r2, #0
 8002684:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002688:	e02a      	b.n	80026e0 <HAL_UART_Transmit+0xea>
 800268a:	683b      	ldr	r3, [r7, #0]
 800268c:	9300      	str	r3, [sp, #0]
 800268e:	697b      	ldr	r3, [r7, #20]
 8002690:	2200      	movs	r2, #0
 8002692:	2180      	movs	r1, #128	; 0x80
 8002694:	68f8      	ldr	r0, [r7, #12]
 8002696:	f000 f8df 	bl	8002858 <UART_WaitOnFlagUntilTimeout>
 800269a:	4603      	mov	r3, r0
 800269c:	2b00      	cmp	r3, #0
 800269e:	d001      	beq.n	80026a4 <HAL_UART_Transmit+0xae>
 80026a0:	2303      	movs	r3, #3
 80026a2:	e036      	b.n	8002712 <HAL_UART_Transmit+0x11c>
 80026a4:	69fb      	ldr	r3, [r7, #28]
 80026a6:	2b00      	cmp	r3, #0
 80026a8:	d10b      	bne.n	80026c2 <HAL_UART_Transmit+0xcc>
 80026aa:	69bb      	ldr	r3, [r7, #24]
 80026ac:	881b      	ldrh	r3, [r3, #0]
 80026ae:	461a      	mov	r2, r3
 80026b0:	68fb      	ldr	r3, [r7, #12]
 80026b2:	681b      	ldr	r3, [r3, #0]
 80026b4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80026b8:	605a      	str	r2, [r3, #4]
 80026ba:	69bb      	ldr	r3, [r7, #24]
 80026bc:	3302      	adds	r3, #2
 80026be:	61bb      	str	r3, [r7, #24]
 80026c0:	e007      	b.n	80026d2 <HAL_UART_Transmit+0xdc>
 80026c2:	69fb      	ldr	r3, [r7, #28]
 80026c4:	781a      	ldrb	r2, [r3, #0]
 80026c6:	68fb      	ldr	r3, [r7, #12]
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	605a      	str	r2, [r3, #4]
 80026cc:	69fb      	ldr	r3, [r7, #28]
 80026ce:	3301      	adds	r3, #1
 80026d0:	61fb      	str	r3, [r7, #28]
 80026d2:	68fb      	ldr	r3, [r7, #12]
 80026d4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80026d6:	b29b      	uxth	r3, r3
 80026d8:	3b01      	subs	r3, #1
 80026da:	b29a      	uxth	r2, r3
 80026dc:	68fb      	ldr	r3, [r7, #12]
 80026de:	84da      	strh	r2, [r3, #38]	; 0x26
 80026e0:	68fb      	ldr	r3, [r7, #12]
 80026e2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80026e4:	b29b      	uxth	r3, r3
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d1cf      	bne.n	800268a <HAL_UART_Transmit+0x94>
 80026ea:	683b      	ldr	r3, [r7, #0]
 80026ec:	9300      	str	r3, [sp, #0]
 80026ee:	697b      	ldr	r3, [r7, #20]
 80026f0:	2200      	movs	r2, #0
 80026f2:	2140      	movs	r1, #64	; 0x40
 80026f4:	68f8      	ldr	r0, [r7, #12]
 80026f6:	f000 f8af 	bl	8002858 <UART_WaitOnFlagUntilTimeout>
 80026fa:	4603      	mov	r3, r0
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d001      	beq.n	8002704 <HAL_UART_Transmit+0x10e>
 8002700:	2303      	movs	r3, #3
 8002702:	e006      	b.n	8002712 <HAL_UART_Transmit+0x11c>
 8002704:	68fb      	ldr	r3, [r7, #12]
 8002706:	2220      	movs	r2, #32
 8002708:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800270c:	2300      	movs	r3, #0
 800270e:	e000      	b.n	8002712 <HAL_UART_Transmit+0x11c>
 8002710:	2302      	movs	r3, #2
 8002712:	4618      	mov	r0, r3
 8002714:	3720      	adds	r7, #32
 8002716:	46bd      	mov	sp, r7
 8002718:	bd80      	pop	{r7, pc}

0800271a <HAL_UART_Receive>:
 800271a:	b580      	push	{r7, lr}
 800271c:	b08a      	sub	sp, #40	; 0x28
 800271e:	af02      	add	r7, sp, #8
 8002720:	60f8      	str	r0, [r7, #12]
 8002722:	60b9      	str	r1, [r7, #8]
 8002724:	603b      	str	r3, [r7, #0]
 8002726:	4613      	mov	r3, r2
 8002728:	80fb      	strh	r3, [r7, #6]
 800272a:	2300      	movs	r3, #0
 800272c:	617b      	str	r3, [r7, #20]
 800272e:	68fb      	ldr	r3, [r7, #12]
 8002730:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8002734:	b2db      	uxtb	r3, r3
 8002736:	2b20      	cmp	r3, #32
 8002738:	f040 8089 	bne.w	800284e <HAL_UART_Receive+0x134>
 800273c:	68bb      	ldr	r3, [r7, #8]
 800273e:	2b00      	cmp	r3, #0
 8002740:	d002      	beq.n	8002748 <HAL_UART_Receive+0x2e>
 8002742:	88fb      	ldrh	r3, [r7, #6]
 8002744:	2b00      	cmp	r3, #0
 8002746:	d101      	bne.n	800274c <HAL_UART_Receive+0x32>
 8002748:	2301      	movs	r3, #1
 800274a:	e081      	b.n	8002850 <HAL_UART_Receive+0x136>
 800274c:	68fb      	ldr	r3, [r7, #12]
 800274e:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002752:	2b01      	cmp	r3, #1
 8002754:	d101      	bne.n	800275a <HAL_UART_Receive+0x40>
 8002756:	2302      	movs	r3, #2
 8002758:	e07a      	b.n	8002850 <HAL_UART_Receive+0x136>
 800275a:	68fb      	ldr	r3, [r7, #12]
 800275c:	2201      	movs	r2, #1
 800275e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002762:	68fb      	ldr	r3, [r7, #12]
 8002764:	2200      	movs	r2, #0
 8002766:	63da      	str	r2, [r3, #60]	; 0x3c
 8002768:	68fb      	ldr	r3, [r7, #12]
 800276a:	2222      	movs	r2, #34	; 0x22
 800276c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002770:	f7fe fdc0 	bl	80012f4 <HAL_GetTick>
 8002774:	6178      	str	r0, [r7, #20]
 8002776:	68fb      	ldr	r3, [r7, #12]
 8002778:	88fa      	ldrh	r2, [r7, #6]
 800277a:	859a      	strh	r2, [r3, #44]	; 0x2c
 800277c:	68fb      	ldr	r3, [r7, #12]
 800277e:	88fa      	ldrh	r2, [r7, #6]
 8002780:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002782:	68fb      	ldr	r3, [r7, #12]
 8002784:	689b      	ldr	r3, [r3, #8]
 8002786:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800278a:	d108      	bne.n	800279e <HAL_UART_Receive+0x84>
 800278c:	68fb      	ldr	r3, [r7, #12]
 800278e:	691b      	ldr	r3, [r3, #16]
 8002790:	2b00      	cmp	r3, #0
 8002792:	d104      	bne.n	800279e <HAL_UART_Receive+0x84>
 8002794:	2300      	movs	r3, #0
 8002796:	61fb      	str	r3, [r7, #28]
 8002798:	68bb      	ldr	r3, [r7, #8]
 800279a:	61bb      	str	r3, [r7, #24]
 800279c:	e003      	b.n	80027a6 <HAL_UART_Receive+0x8c>
 800279e:	68bb      	ldr	r3, [r7, #8]
 80027a0:	61fb      	str	r3, [r7, #28]
 80027a2:	2300      	movs	r3, #0
 80027a4:	61bb      	str	r3, [r7, #24]
 80027a6:	68fb      	ldr	r3, [r7, #12]
 80027a8:	2200      	movs	r2, #0
 80027aa:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80027ae:	e043      	b.n	8002838 <HAL_UART_Receive+0x11e>
 80027b0:	683b      	ldr	r3, [r7, #0]
 80027b2:	9300      	str	r3, [sp, #0]
 80027b4:	697b      	ldr	r3, [r7, #20]
 80027b6:	2200      	movs	r2, #0
 80027b8:	2120      	movs	r1, #32
 80027ba:	68f8      	ldr	r0, [r7, #12]
 80027bc:	f000 f84c 	bl	8002858 <UART_WaitOnFlagUntilTimeout>
 80027c0:	4603      	mov	r3, r0
 80027c2:	2b00      	cmp	r3, #0
 80027c4:	d001      	beq.n	80027ca <HAL_UART_Receive+0xb0>
 80027c6:	2303      	movs	r3, #3
 80027c8:	e042      	b.n	8002850 <HAL_UART_Receive+0x136>
 80027ca:	69fb      	ldr	r3, [r7, #28]
 80027cc:	2b00      	cmp	r3, #0
 80027ce:	d10c      	bne.n	80027ea <HAL_UART_Receive+0xd0>
 80027d0:	68fb      	ldr	r3, [r7, #12]
 80027d2:	681b      	ldr	r3, [r3, #0]
 80027d4:	685b      	ldr	r3, [r3, #4]
 80027d6:	b29b      	uxth	r3, r3
 80027d8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80027dc:	b29a      	uxth	r2, r3
 80027de:	69bb      	ldr	r3, [r7, #24]
 80027e0:	801a      	strh	r2, [r3, #0]
 80027e2:	69bb      	ldr	r3, [r7, #24]
 80027e4:	3302      	adds	r3, #2
 80027e6:	61bb      	str	r3, [r7, #24]
 80027e8:	e01f      	b.n	800282a <HAL_UART_Receive+0x110>
 80027ea:	68fb      	ldr	r3, [r7, #12]
 80027ec:	689b      	ldr	r3, [r3, #8]
 80027ee:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80027f2:	d007      	beq.n	8002804 <HAL_UART_Receive+0xea>
 80027f4:	68fb      	ldr	r3, [r7, #12]
 80027f6:	689b      	ldr	r3, [r3, #8]
 80027f8:	2b00      	cmp	r3, #0
 80027fa:	d10a      	bne.n	8002812 <HAL_UART_Receive+0xf8>
 80027fc:	68fb      	ldr	r3, [r7, #12]
 80027fe:	691b      	ldr	r3, [r3, #16]
 8002800:	2b00      	cmp	r3, #0
 8002802:	d106      	bne.n	8002812 <HAL_UART_Receive+0xf8>
 8002804:	68fb      	ldr	r3, [r7, #12]
 8002806:	681b      	ldr	r3, [r3, #0]
 8002808:	685b      	ldr	r3, [r3, #4]
 800280a:	b2da      	uxtb	r2, r3
 800280c:	69fb      	ldr	r3, [r7, #28]
 800280e:	701a      	strb	r2, [r3, #0]
 8002810:	e008      	b.n	8002824 <HAL_UART_Receive+0x10a>
 8002812:	68fb      	ldr	r3, [r7, #12]
 8002814:	681b      	ldr	r3, [r3, #0]
 8002816:	685b      	ldr	r3, [r3, #4]
 8002818:	b2db      	uxtb	r3, r3
 800281a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800281e:	b2da      	uxtb	r2, r3
 8002820:	69fb      	ldr	r3, [r7, #28]
 8002822:	701a      	strb	r2, [r3, #0]
 8002824:	69fb      	ldr	r3, [r7, #28]
 8002826:	3301      	adds	r3, #1
 8002828:	61fb      	str	r3, [r7, #28]
 800282a:	68fb      	ldr	r3, [r7, #12]
 800282c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800282e:	b29b      	uxth	r3, r3
 8002830:	3b01      	subs	r3, #1
 8002832:	b29a      	uxth	r2, r3
 8002834:	68fb      	ldr	r3, [r7, #12]
 8002836:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002838:	68fb      	ldr	r3, [r7, #12]
 800283a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800283c:	b29b      	uxth	r3, r3
 800283e:	2b00      	cmp	r3, #0
 8002840:	d1b6      	bne.n	80027b0 <HAL_UART_Receive+0x96>
 8002842:	68fb      	ldr	r3, [r7, #12]
 8002844:	2220      	movs	r2, #32
 8002846:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 800284a:	2300      	movs	r3, #0
 800284c:	e000      	b.n	8002850 <HAL_UART_Receive+0x136>
 800284e:	2302      	movs	r3, #2
 8002850:	4618      	mov	r0, r3
 8002852:	3720      	adds	r7, #32
 8002854:	46bd      	mov	sp, r7
 8002856:	bd80      	pop	{r7, pc}

08002858 <UART_WaitOnFlagUntilTimeout>:
 8002858:	b580      	push	{r7, lr}
 800285a:	b084      	sub	sp, #16
 800285c:	af00      	add	r7, sp, #0
 800285e:	60f8      	str	r0, [r7, #12]
 8002860:	60b9      	str	r1, [r7, #8]
 8002862:	603b      	str	r3, [r7, #0]
 8002864:	4613      	mov	r3, r2
 8002866:	71fb      	strb	r3, [r7, #7]
 8002868:	e02c      	b.n	80028c4 <UART_WaitOnFlagUntilTimeout+0x6c>
 800286a:	69bb      	ldr	r3, [r7, #24]
 800286c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002870:	d028      	beq.n	80028c4 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002872:	69bb      	ldr	r3, [r7, #24]
 8002874:	2b00      	cmp	r3, #0
 8002876:	d007      	beq.n	8002888 <UART_WaitOnFlagUntilTimeout+0x30>
 8002878:	f7fe fd3c 	bl	80012f4 <HAL_GetTick>
 800287c:	4602      	mov	r2, r0
 800287e:	683b      	ldr	r3, [r7, #0]
 8002880:	1ad3      	subs	r3, r2, r3
 8002882:	69ba      	ldr	r2, [r7, #24]
 8002884:	429a      	cmp	r2, r3
 8002886:	d21d      	bcs.n	80028c4 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002888:	68fb      	ldr	r3, [r7, #12]
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	68da      	ldr	r2, [r3, #12]
 800288e:	68fb      	ldr	r3, [r7, #12]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8002896:	60da      	str	r2, [r3, #12]
 8002898:	68fb      	ldr	r3, [r7, #12]
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	695a      	ldr	r2, [r3, #20]
 800289e:	68fb      	ldr	r3, [r7, #12]
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	f022 0201 	bic.w	r2, r2, #1
 80028a6:	615a      	str	r2, [r3, #20]
 80028a8:	68fb      	ldr	r3, [r7, #12]
 80028aa:	2220      	movs	r2, #32
 80028ac:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80028b0:	68fb      	ldr	r3, [r7, #12]
 80028b2:	2220      	movs	r2, #32
 80028b4:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80028b8:	68fb      	ldr	r3, [r7, #12]
 80028ba:	2200      	movs	r2, #0
 80028bc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80028c0:	2303      	movs	r3, #3
 80028c2:	e00f      	b.n	80028e4 <UART_WaitOnFlagUntilTimeout+0x8c>
 80028c4:	68fb      	ldr	r3, [r7, #12]
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	681a      	ldr	r2, [r3, #0]
 80028ca:	68bb      	ldr	r3, [r7, #8]
 80028cc:	4013      	ands	r3, r2
 80028ce:	68ba      	ldr	r2, [r7, #8]
 80028d0:	429a      	cmp	r2, r3
 80028d2:	bf0c      	ite	eq
 80028d4:	2301      	moveq	r3, #1
 80028d6:	2300      	movne	r3, #0
 80028d8:	b2db      	uxtb	r3, r3
 80028da:	461a      	mov	r2, r3
 80028dc:	79fb      	ldrb	r3, [r7, #7]
 80028de:	429a      	cmp	r2, r3
 80028e0:	d0c3      	beq.n	800286a <UART_WaitOnFlagUntilTimeout+0x12>
 80028e2:	2300      	movs	r3, #0
 80028e4:	4618      	mov	r0, r3
 80028e6:	3710      	adds	r7, #16
 80028e8:	46bd      	mov	sp, r7
 80028ea:	bd80      	pop	{r7, pc}

080028ec <UART_SetConfig>:
 80028ec:	b580      	push	{r7, lr}
 80028ee:	b084      	sub	sp, #16
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	6078      	str	r0, [r7, #4]
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	681b      	ldr	r3, [r3, #0]
 80028f8:	691b      	ldr	r3, [r3, #16]
 80028fa:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	68da      	ldr	r2, [r3, #12]
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	681b      	ldr	r3, [r3, #0]
 8002906:	430a      	orrs	r2, r1
 8002908:	611a      	str	r2, [r3, #16]
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	689a      	ldr	r2, [r3, #8]
 800290e:	687b      	ldr	r3, [r7, #4]
 8002910:	691b      	ldr	r3, [r3, #16]
 8002912:	431a      	orrs	r2, r3
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	695b      	ldr	r3, [r3, #20]
 8002918:	4313      	orrs	r3, r2
 800291a:	60bb      	str	r3, [r7, #8]
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	68db      	ldr	r3, [r3, #12]
 8002922:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8002926:	f023 030c 	bic.w	r3, r3, #12
 800292a:	687a      	ldr	r2, [r7, #4]
 800292c:	6812      	ldr	r2, [r2, #0]
 800292e:	68b9      	ldr	r1, [r7, #8]
 8002930:	430b      	orrs	r3, r1
 8002932:	60d3      	str	r3, [r2, #12]
 8002934:	687b      	ldr	r3, [r7, #4]
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	695b      	ldr	r3, [r3, #20]
 800293a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	699a      	ldr	r2, [r3, #24]
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	430a      	orrs	r2, r1
 8002948:	615a      	str	r2, [r3, #20]
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	681b      	ldr	r3, [r3, #0]
 800294e:	4a2c      	ldr	r2, [pc, #176]	; (8002a00 <UART_SetConfig+0x114>)
 8002950:	4293      	cmp	r3, r2
 8002952:	d103      	bne.n	800295c <UART_SetConfig+0x70>
 8002954:	f7ff fb56 	bl	8002004 <HAL_RCC_GetPCLK2Freq>
 8002958:	60f8      	str	r0, [r7, #12]
 800295a:	e002      	b.n	8002962 <UART_SetConfig+0x76>
 800295c:	f7ff fb3e 	bl	8001fdc <HAL_RCC_GetPCLK1Freq>
 8002960:	60f8      	str	r0, [r7, #12]
 8002962:	68fa      	ldr	r2, [r7, #12]
 8002964:	4613      	mov	r3, r2
 8002966:	009b      	lsls	r3, r3, #2
 8002968:	4413      	add	r3, r2
 800296a:	009a      	lsls	r2, r3, #2
 800296c:	441a      	add	r2, r3
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	685b      	ldr	r3, [r3, #4]
 8002972:	009b      	lsls	r3, r3, #2
 8002974:	fbb2 f3f3 	udiv	r3, r2, r3
 8002978:	4a22      	ldr	r2, [pc, #136]	; (8002a04 <UART_SetConfig+0x118>)
 800297a:	fba2 2303 	umull	r2, r3, r2, r3
 800297e:	095b      	lsrs	r3, r3, #5
 8002980:	0119      	lsls	r1, r3, #4
 8002982:	68fa      	ldr	r2, [r7, #12]
 8002984:	4613      	mov	r3, r2
 8002986:	009b      	lsls	r3, r3, #2
 8002988:	4413      	add	r3, r2
 800298a:	009a      	lsls	r2, r3, #2
 800298c:	441a      	add	r2, r3
 800298e:	687b      	ldr	r3, [r7, #4]
 8002990:	685b      	ldr	r3, [r3, #4]
 8002992:	009b      	lsls	r3, r3, #2
 8002994:	fbb2 f2f3 	udiv	r2, r2, r3
 8002998:	4b1a      	ldr	r3, [pc, #104]	; (8002a04 <UART_SetConfig+0x118>)
 800299a:	fba3 0302 	umull	r0, r3, r3, r2
 800299e:	095b      	lsrs	r3, r3, #5
 80029a0:	2064      	movs	r0, #100	; 0x64
 80029a2:	fb00 f303 	mul.w	r3, r0, r3
 80029a6:	1ad3      	subs	r3, r2, r3
 80029a8:	011b      	lsls	r3, r3, #4
 80029aa:	3332      	adds	r3, #50	; 0x32
 80029ac:	4a15      	ldr	r2, [pc, #84]	; (8002a04 <UART_SetConfig+0x118>)
 80029ae:	fba2 2303 	umull	r2, r3, r2, r3
 80029b2:	095b      	lsrs	r3, r3, #5
 80029b4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80029b8:	4419      	add	r1, r3
 80029ba:	68fa      	ldr	r2, [r7, #12]
 80029bc:	4613      	mov	r3, r2
 80029be:	009b      	lsls	r3, r3, #2
 80029c0:	4413      	add	r3, r2
 80029c2:	009a      	lsls	r2, r3, #2
 80029c4:	441a      	add	r2, r3
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	685b      	ldr	r3, [r3, #4]
 80029ca:	009b      	lsls	r3, r3, #2
 80029cc:	fbb2 f2f3 	udiv	r2, r2, r3
 80029d0:	4b0c      	ldr	r3, [pc, #48]	; (8002a04 <UART_SetConfig+0x118>)
 80029d2:	fba3 0302 	umull	r0, r3, r3, r2
 80029d6:	095b      	lsrs	r3, r3, #5
 80029d8:	2064      	movs	r0, #100	; 0x64
 80029da:	fb00 f303 	mul.w	r3, r0, r3
 80029de:	1ad3      	subs	r3, r2, r3
 80029e0:	011b      	lsls	r3, r3, #4
 80029e2:	3332      	adds	r3, #50	; 0x32
 80029e4:	4a07      	ldr	r2, [pc, #28]	; (8002a04 <UART_SetConfig+0x118>)
 80029e6:	fba2 2303 	umull	r2, r3, r2, r3
 80029ea:	095b      	lsrs	r3, r3, #5
 80029ec:	f003 020f 	and.w	r2, r3, #15
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	440a      	add	r2, r1
 80029f6:	609a      	str	r2, [r3, #8]
 80029f8:	bf00      	nop
 80029fa:	3710      	adds	r7, #16
 80029fc:	46bd      	mov	sp, r7
 80029fe:	bd80      	pop	{r7, pc}
 8002a00:	40013800 	.word	0x40013800
 8002a04:	51eb851f 	.word	0x51eb851f

08002a08 <makeFreeRtosPriority>:
 8002a08:	b480      	push	{r7}
 8002a0a:	b085      	sub	sp, #20
 8002a0c:	af00      	add	r7, sp, #0
 8002a0e:	4603      	mov	r3, r0
 8002a10:	80fb      	strh	r3, [r7, #6]
 8002a12:	2300      	movs	r3, #0
 8002a14:	60fb      	str	r3, [r7, #12]
 8002a16:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002a1a:	2b84      	cmp	r3, #132	; 0x84
 8002a1c:	d005      	beq.n	8002a2a <makeFreeRtosPriority+0x22>
 8002a1e:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8002a22:	68fb      	ldr	r3, [r7, #12]
 8002a24:	4413      	add	r3, r2
 8002a26:	3303      	adds	r3, #3
 8002a28:	60fb      	str	r3, [r7, #12]
 8002a2a:	68fb      	ldr	r3, [r7, #12]
 8002a2c:	4618      	mov	r0, r3
 8002a2e:	3714      	adds	r7, #20
 8002a30:	46bd      	mov	sp, r7
 8002a32:	bc80      	pop	{r7}
 8002a34:	4770      	bx	lr

08002a36 <osKernelStart>:
 8002a36:	b580      	push	{r7, lr}
 8002a38:	af00      	add	r7, sp, #0
 8002a3a:	f000 fad1 	bl	8002fe0 <vTaskStartScheduler>
 8002a3e:	2300      	movs	r3, #0
 8002a40:	4618      	mov	r0, r3
 8002a42:	bd80      	pop	{r7, pc}

08002a44 <osThreadCreate>:
 8002a44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a46:	b089      	sub	sp, #36	; 0x24
 8002a48:	af04      	add	r7, sp, #16
 8002a4a:	6078      	str	r0, [r7, #4]
 8002a4c:	6039      	str	r1, [r7, #0]
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	695b      	ldr	r3, [r3, #20]
 8002a52:	2b00      	cmp	r3, #0
 8002a54:	d020      	beq.n	8002a98 <osThreadCreate+0x54>
 8002a56:	687b      	ldr	r3, [r7, #4]
 8002a58:	699b      	ldr	r3, [r3, #24]
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d01c      	beq.n	8002a98 <osThreadCreate+0x54>
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	685c      	ldr	r4, [r3, #4]
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	681d      	ldr	r5, [r3, #0]
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	691e      	ldr	r6, [r3, #16]
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002a70:	4618      	mov	r0, r3
 8002a72:	f7ff ffc9 	bl	8002a08 <makeFreeRtosPriority>
 8002a76:	4601      	mov	r1, r0
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	695b      	ldr	r3, [r3, #20]
 8002a7c:	687a      	ldr	r2, [r7, #4]
 8002a7e:	6992      	ldr	r2, [r2, #24]
 8002a80:	9202      	str	r2, [sp, #8]
 8002a82:	9301      	str	r3, [sp, #4]
 8002a84:	9100      	str	r1, [sp, #0]
 8002a86:	683b      	ldr	r3, [r7, #0]
 8002a88:	4632      	mov	r2, r6
 8002a8a:	4629      	mov	r1, r5
 8002a8c:	4620      	mov	r0, r4
 8002a8e:	f000 f8e8 	bl	8002c62 <xTaskCreateStatic>
 8002a92:	4603      	mov	r3, r0
 8002a94:	60fb      	str	r3, [r7, #12]
 8002a96:	e01c      	b.n	8002ad2 <osThreadCreate+0x8e>
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	685c      	ldr	r4, [r3, #4]
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	681d      	ldr	r5, [r3, #0]
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	691b      	ldr	r3, [r3, #16]
 8002aa4:	b29e      	uxth	r6, r3
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002aac:	4618      	mov	r0, r3
 8002aae:	f7ff ffab 	bl	8002a08 <makeFreeRtosPriority>
 8002ab2:	4602      	mov	r2, r0
 8002ab4:	f107 030c 	add.w	r3, r7, #12
 8002ab8:	9301      	str	r3, [sp, #4]
 8002aba:	9200      	str	r2, [sp, #0]
 8002abc:	683b      	ldr	r3, [r7, #0]
 8002abe:	4632      	mov	r2, r6
 8002ac0:	4629      	mov	r1, r5
 8002ac2:	4620      	mov	r0, r4
 8002ac4:	f000 f929 	bl	8002d1a <xTaskCreate>
 8002ac8:	4603      	mov	r3, r0
 8002aca:	2b01      	cmp	r3, #1
 8002acc:	d001      	beq.n	8002ad2 <osThreadCreate+0x8e>
 8002ace:	2300      	movs	r3, #0
 8002ad0:	e000      	b.n	8002ad4 <osThreadCreate+0x90>
 8002ad2:	68fb      	ldr	r3, [r7, #12]
 8002ad4:	4618      	mov	r0, r3
 8002ad6:	3714      	adds	r7, #20
 8002ad8:	46bd      	mov	sp, r7
 8002ada:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002adc <osDelay>:
 8002adc:	b580      	push	{r7, lr}
 8002ade:	b084      	sub	sp, #16
 8002ae0:	af00      	add	r7, sp, #0
 8002ae2:	6078      	str	r0, [r7, #4]
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	60fb      	str	r3, [r7, #12]
 8002ae8:	68fb      	ldr	r3, [r7, #12]
 8002aea:	2b00      	cmp	r3, #0
 8002aec:	d001      	beq.n	8002af2 <osDelay+0x16>
 8002aee:	68fb      	ldr	r3, [r7, #12]
 8002af0:	e000      	b.n	8002af4 <osDelay+0x18>
 8002af2:	2301      	movs	r3, #1
 8002af4:	4618      	mov	r0, r3
 8002af6:	f000 fa3f 	bl	8002f78 <vTaskDelay>
 8002afa:	2300      	movs	r3, #0
 8002afc:	4618      	mov	r0, r3
 8002afe:	3710      	adds	r7, #16
 8002b00:	46bd      	mov	sp, r7
 8002b02:	bd80      	pop	{r7, pc}

08002b04 <vListInitialise>:
 8002b04:	b480      	push	{r7}
 8002b06:	b083      	sub	sp, #12
 8002b08:	af00      	add	r7, sp, #0
 8002b0a:	6078      	str	r0, [r7, #4]
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	f103 0208 	add.w	r2, r3, #8
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	605a      	str	r2, [r3, #4]
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002b1c:	609a      	str	r2, [r3, #8]
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	f103 0208 	add.w	r2, r3, #8
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	60da      	str	r2, [r3, #12]
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	f103 0208 	add.w	r2, r3, #8
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	611a      	str	r2, [r3, #16]
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	2200      	movs	r2, #0
 8002b36:	601a      	str	r2, [r3, #0]
 8002b38:	bf00      	nop
 8002b3a:	370c      	adds	r7, #12
 8002b3c:	46bd      	mov	sp, r7
 8002b3e:	bc80      	pop	{r7}
 8002b40:	4770      	bx	lr

08002b42 <vListInitialiseItem>:
 8002b42:	b480      	push	{r7}
 8002b44:	b083      	sub	sp, #12
 8002b46:	af00      	add	r7, sp, #0
 8002b48:	6078      	str	r0, [r7, #4]
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	2200      	movs	r2, #0
 8002b4e:	611a      	str	r2, [r3, #16]
 8002b50:	bf00      	nop
 8002b52:	370c      	adds	r7, #12
 8002b54:	46bd      	mov	sp, r7
 8002b56:	bc80      	pop	{r7}
 8002b58:	4770      	bx	lr

08002b5a <vListInsertEnd>:
 8002b5a:	b480      	push	{r7}
 8002b5c:	b085      	sub	sp, #20
 8002b5e:	af00      	add	r7, sp, #0
 8002b60:	6078      	str	r0, [r7, #4]
 8002b62:	6039      	str	r1, [r7, #0]
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	685b      	ldr	r3, [r3, #4]
 8002b68:	60fb      	str	r3, [r7, #12]
 8002b6a:	683b      	ldr	r3, [r7, #0]
 8002b6c:	68fa      	ldr	r2, [r7, #12]
 8002b6e:	605a      	str	r2, [r3, #4]
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	689a      	ldr	r2, [r3, #8]
 8002b74:	683b      	ldr	r3, [r7, #0]
 8002b76:	609a      	str	r2, [r3, #8]
 8002b78:	68fb      	ldr	r3, [r7, #12]
 8002b7a:	689b      	ldr	r3, [r3, #8]
 8002b7c:	683a      	ldr	r2, [r7, #0]
 8002b7e:	605a      	str	r2, [r3, #4]
 8002b80:	68fb      	ldr	r3, [r7, #12]
 8002b82:	683a      	ldr	r2, [r7, #0]
 8002b84:	609a      	str	r2, [r3, #8]
 8002b86:	683b      	ldr	r3, [r7, #0]
 8002b88:	687a      	ldr	r2, [r7, #4]
 8002b8a:	611a      	str	r2, [r3, #16]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	1c5a      	adds	r2, r3, #1
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	601a      	str	r2, [r3, #0]
 8002b96:	bf00      	nop
 8002b98:	3714      	adds	r7, #20
 8002b9a:	46bd      	mov	sp, r7
 8002b9c:	bc80      	pop	{r7}
 8002b9e:	4770      	bx	lr

08002ba0 <vListInsert>:
 8002ba0:	b480      	push	{r7}
 8002ba2:	b085      	sub	sp, #20
 8002ba4:	af00      	add	r7, sp, #0
 8002ba6:	6078      	str	r0, [r7, #4]
 8002ba8:	6039      	str	r1, [r7, #0]
 8002baa:	683b      	ldr	r3, [r7, #0]
 8002bac:	681b      	ldr	r3, [r3, #0]
 8002bae:	60bb      	str	r3, [r7, #8]
 8002bb0:	68bb      	ldr	r3, [r7, #8]
 8002bb2:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002bb6:	d103      	bne.n	8002bc0 <vListInsert+0x20>
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	691b      	ldr	r3, [r3, #16]
 8002bbc:	60fb      	str	r3, [r7, #12]
 8002bbe:	e00c      	b.n	8002bda <vListInsert+0x3a>
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	3308      	adds	r3, #8
 8002bc4:	60fb      	str	r3, [r7, #12]
 8002bc6:	e002      	b.n	8002bce <vListInsert+0x2e>
 8002bc8:	68fb      	ldr	r3, [r7, #12]
 8002bca:	685b      	ldr	r3, [r3, #4]
 8002bcc:	60fb      	str	r3, [r7, #12]
 8002bce:	68fb      	ldr	r3, [r7, #12]
 8002bd0:	685b      	ldr	r3, [r3, #4]
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	68ba      	ldr	r2, [r7, #8]
 8002bd6:	429a      	cmp	r2, r3
 8002bd8:	d2f6      	bcs.n	8002bc8 <vListInsert+0x28>
 8002bda:	68fb      	ldr	r3, [r7, #12]
 8002bdc:	685a      	ldr	r2, [r3, #4]
 8002bde:	683b      	ldr	r3, [r7, #0]
 8002be0:	605a      	str	r2, [r3, #4]
 8002be2:	683b      	ldr	r3, [r7, #0]
 8002be4:	685b      	ldr	r3, [r3, #4]
 8002be6:	683a      	ldr	r2, [r7, #0]
 8002be8:	609a      	str	r2, [r3, #8]
 8002bea:	683b      	ldr	r3, [r7, #0]
 8002bec:	68fa      	ldr	r2, [r7, #12]
 8002bee:	609a      	str	r2, [r3, #8]
 8002bf0:	68fb      	ldr	r3, [r7, #12]
 8002bf2:	683a      	ldr	r2, [r7, #0]
 8002bf4:	605a      	str	r2, [r3, #4]
 8002bf6:	683b      	ldr	r3, [r7, #0]
 8002bf8:	687a      	ldr	r2, [r7, #4]
 8002bfa:	611a      	str	r2, [r3, #16]
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	1c5a      	adds	r2, r3, #1
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	601a      	str	r2, [r3, #0]
 8002c06:	bf00      	nop
 8002c08:	3714      	adds	r7, #20
 8002c0a:	46bd      	mov	sp, r7
 8002c0c:	bc80      	pop	{r7}
 8002c0e:	4770      	bx	lr

08002c10 <uxListRemove>:
 8002c10:	b480      	push	{r7}
 8002c12:	b085      	sub	sp, #20
 8002c14:	af00      	add	r7, sp, #0
 8002c16:	6078      	str	r0, [r7, #4]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	691b      	ldr	r3, [r3, #16]
 8002c1c:	60fb      	str	r3, [r7, #12]
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	685b      	ldr	r3, [r3, #4]
 8002c22:	687a      	ldr	r2, [r7, #4]
 8002c24:	6892      	ldr	r2, [r2, #8]
 8002c26:	609a      	str	r2, [r3, #8]
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	689b      	ldr	r3, [r3, #8]
 8002c2c:	687a      	ldr	r2, [r7, #4]
 8002c2e:	6852      	ldr	r2, [r2, #4]
 8002c30:	605a      	str	r2, [r3, #4]
 8002c32:	68fb      	ldr	r3, [r7, #12]
 8002c34:	685b      	ldr	r3, [r3, #4]
 8002c36:	687a      	ldr	r2, [r7, #4]
 8002c38:	429a      	cmp	r2, r3
 8002c3a:	d103      	bne.n	8002c44 <uxListRemove+0x34>
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	689a      	ldr	r2, [r3, #8]
 8002c40:	68fb      	ldr	r3, [r7, #12]
 8002c42:	605a      	str	r2, [r3, #4]
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	2200      	movs	r2, #0
 8002c48:	611a      	str	r2, [r3, #16]
 8002c4a:	68fb      	ldr	r3, [r7, #12]
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	1e5a      	subs	r2, r3, #1
 8002c50:	68fb      	ldr	r3, [r7, #12]
 8002c52:	601a      	str	r2, [r3, #0]
 8002c54:	68fb      	ldr	r3, [r7, #12]
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	4618      	mov	r0, r3
 8002c5a:	3714      	adds	r7, #20
 8002c5c:	46bd      	mov	sp, r7
 8002c5e:	bc80      	pop	{r7}
 8002c60:	4770      	bx	lr

08002c62 <xTaskCreateStatic>:
 8002c62:	b580      	push	{r7, lr}
 8002c64:	b08e      	sub	sp, #56	; 0x38
 8002c66:	af04      	add	r7, sp, #16
 8002c68:	60f8      	str	r0, [r7, #12]
 8002c6a:	60b9      	str	r1, [r7, #8]
 8002c6c:	607a      	str	r2, [r7, #4]
 8002c6e:	603b      	str	r3, [r7, #0]
 8002c70:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002c72:	2b00      	cmp	r3, #0
 8002c74:	d10a      	bne.n	8002c8c <xTaskCreateStatic+0x2a>
 8002c76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c7a:	f383 8811 	msr	BASEPRI, r3
 8002c7e:	f3bf 8f6f 	isb	sy
 8002c82:	f3bf 8f4f 	dsb	sy
 8002c86:	623b      	str	r3, [r7, #32]
 8002c88:	bf00      	nop
 8002c8a:	e7fe      	b.n	8002c8a <xTaskCreateStatic+0x28>
 8002c8c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002c8e:	2b00      	cmp	r3, #0
 8002c90:	d10a      	bne.n	8002ca8 <xTaskCreateStatic+0x46>
 8002c92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c96:	f383 8811 	msr	BASEPRI, r3
 8002c9a:	f3bf 8f6f 	isb	sy
 8002c9e:	f3bf 8f4f 	dsb	sy
 8002ca2:	61fb      	str	r3, [r7, #28]
 8002ca4:	bf00      	nop
 8002ca6:	e7fe      	b.n	8002ca6 <xTaskCreateStatic+0x44>
 8002ca8:	2354      	movs	r3, #84	; 0x54
 8002caa:	613b      	str	r3, [r7, #16]
 8002cac:	693b      	ldr	r3, [r7, #16]
 8002cae:	2b54      	cmp	r3, #84	; 0x54
 8002cb0:	d00a      	beq.n	8002cc8 <xTaskCreateStatic+0x66>
 8002cb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002cb6:	f383 8811 	msr	BASEPRI, r3
 8002cba:	f3bf 8f6f 	isb	sy
 8002cbe:	f3bf 8f4f 	dsb	sy
 8002cc2:	61bb      	str	r3, [r7, #24]
 8002cc4:	bf00      	nop
 8002cc6:	e7fe      	b.n	8002cc6 <xTaskCreateStatic+0x64>
 8002cc8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002cca:	2b00      	cmp	r3, #0
 8002ccc:	d01e      	beq.n	8002d0c <xTaskCreateStatic+0xaa>
 8002cce:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002cd0:	2b00      	cmp	r3, #0
 8002cd2:	d01b      	beq.n	8002d0c <xTaskCreateStatic+0xaa>
 8002cd4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002cd6:	627b      	str	r3, [r7, #36]	; 0x24
 8002cd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002cda:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002cdc:	631a      	str	r2, [r3, #48]	; 0x30
 8002cde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ce0:	2202      	movs	r2, #2
 8002ce2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002ce6:	2300      	movs	r3, #0
 8002ce8:	9303      	str	r3, [sp, #12]
 8002cea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002cec:	9302      	str	r3, [sp, #8]
 8002cee:	f107 0314 	add.w	r3, r7, #20
 8002cf2:	9301      	str	r3, [sp, #4]
 8002cf4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002cf6:	9300      	str	r3, [sp, #0]
 8002cf8:	683b      	ldr	r3, [r7, #0]
 8002cfa:	687a      	ldr	r2, [r7, #4]
 8002cfc:	68b9      	ldr	r1, [r7, #8]
 8002cfe:	68f8      	ldr	r0, [r7, #12]
 8002d00:	f000 f850 	bl	8002da4 <prvInitialiseNewTask>
 8002d04:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002d06:	f000 f8cd 	bl	8002ea4 <prvAddNewTaskToReadyList>
 8002d0a:	e001      	b.n	8002d10 <xTaskCreateStatic+0xae>
 8002d0c:	2300      	movs	r3, #0
 8002d0e:	617b      	str	r3, [r7, #20]
 8002d10:	697b      	ldr	r3, [r7, #20]
 8002d12:	4618      	mov	r0, r3
 8002d14:	3728      	adds	r7, #40	; 0x28
 8002d16:	46bd      	mov	sp, r7
 8002d18:	bd80      	pop	{r7, pc}

08002d1a <xTaskCreate>:
 8002d1a:	b580      	push	{r7, lr}
 8002d1c:	b08c      	sub	sp, #48	; 0x30
 8002d1e:	af04      	add	r7, sp, #16
 8002d20:	60f8      	str	r0, [r7, #12]
 8002d22:	60b9      	str	r1, [r7, #8]
 8002d24:	603b      	str	r3, [r7, #0]
 8002d26:	4613      	mov	r3, r2
 8002d28:	80fb      	strh	r3, [r7, #6]
 8002d2a:	88fb      	ldrh	r3, [r7, #6]
 8002d2c:	009b      	lsls	r3, r3, #2
 8002d2e:	4618      	mov	r0, r3
 8002d30:	f000 fe6e 	bl	8003a10 <pvPortMalloc>
 8002d34:	6178      	str	r0, [r7, #20]
 8002d36:	697b      	ldr	r3, [r7, #20]
 8002d38:	2b00      	cmp	r3, #0
 8002d3a:	d00e      	beq.n	8002d5a <xTaskCreate+0x40>
 8002d3c:	2054      	movs	r0, #84	; 0x54
 8002d3e:	f000 fe67 	bl	8003a10 <pvPortMalloc>
 8002d42:	61f8      	str	r0, [r7, #28]
 8002d44:	69fb      	ldr	r3, [r7, #28]
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	d003      	beq.n	8002d52 <xTaskCreate+0x38>
 8002d4a:	69fb      	ldr	r3, [r7, #28]
 8002d4c:	697a      	ldr	r2, [r7, #20]
 8002d4e:	631a      	str	r2, [r3, #48]	; 0x30
 8002d50:	e005      	b.n	8002d5e <xTaskCreate+0x44>
 8002d52:	6978      	ldr	r0, [r7, #20]
 8002d54:	f000 ff20 	bl	8003b98 <vPortFree>
 8002d58:	e001      	b.n	8002d5e <xTaskCreate+0x44>
 8002d5a:	2300      	movs	r3, #0
 8002d5c:	61fb      	str	r3, [r7, #28]
 8002d5e:	69fb      	ldr	r3, [r7, #28]
 8002d60:	2b00      	cmp	r3, #0
 8002d62:	d017      	beq.n	8002d94 <xTaskCreate+0x7a>
 8002d64:	69fb      	ldr	r3, [r7, #28]
 8002d66:	2200      	movs	r2, #0
 8002d68:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002d6c:	88fa      	ldrh	r2, [r7, #6]
 8002d6e:	2300      	movs	r3, #0
 8002d70:	9303      	str	r3, [sp, #12]
 8002d72:	69fb      	ldr	r3, [r7, #28]
 8002d74:	9302      	str	r3, [sp, #8]
 8002d76:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002d78:	9301      	str	r3, [sp, #4]
 8002d7a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002d7c:	9300      	str	r3, [sp, #0]
 8002d7e:	683b      	ldr	r3, [r7, #0]
 8002d80:	68b9      	ldr	r1, [r7, #8]
 8002d82:	68f8      	ldr	r0, [r7, #12]
 8002d84:	f000 f80e 	bl	8002da4 <prvInitialiseNewTask>
 8002d88:	69f8      	ldr	r0, [r7, #28]
 8002d8a:	f000 f88b 	bl	8002ea4 <prvAddNewTaskToReadyList>
 8002d8e:	2301      	movs	r3, #1
 8002d90:	61bb      	str	r3, [r7, #24]
 8002d92:	e002      	b.n	8002d9a <xTaskCreate+0x80>
 8002d94:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002d98:	61bb      	str	r3, [r7, #24]
 8002d9a:	69bb      	ldr	r3, [r7, #24]
 8002d9c:	4618      	mov	r0, r3
 8002d9e:	3720      	adds	r7, #32
 8002da0:	46bd      	mov	sp, r7
 8002da2:	bd80      	pop	{r7, pc}

08002da4 <prvInitialiseNewTask>:
 8002da4:	b580      	push	{r7, lr}
 8002da6:	b088      	sub	sp, #32
 8002da8:	af00      	add	r7, sp, #0
 8002daa:	60f8      	str	r0, [r7, #12]
 8002dac:	60b9      	str	r1, [r7, #8]
 8002dae:	607a      	str	r2, [r7, #4]
 8002db0:	603b      	str	r3, [r7, #0]
 8002db2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002db4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8002dbc:	3b01      	subs	r3, #1
 8002dbe:	009b      	lsls	r3, r3, #2
 8002dc0:	4413      	add	r3, r2
 8002dc2:	61bb      	str	r3, [r7, #24]
 8002dc4:	69bb      	ldr	r3, [r7, #24]
 8002dc6:	f023 0307 	bic.w	r3, r3, #7
 8002dca:	61bb      	str	r3, [r7, #24]
 8002dcc:	69bb      	ldr	r3, [r7, #24]
 8002dce:	f003 0307 	and.w	r3, r3, #7
 8002dd2:	2b00      	cmp	r3, #0
 8002dd4:	d00a      	beq.n	8002dec <prvInitialiseNewTask+0x48>
 8002dd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002dda:	f383 8811 	msr	BASEPRI, r3
 8002dde:	f3bf 8f6f 	isb	sy
 8002de2:	f3bf 8f4f 	dsb	sy
 8002de6:	617b      	str	r3, [r7, #20]
 8002de8:	bf00      	nop
 8002dea:	e7fe      	b.n	8002dea <prvInitialiseNewTask+0x46>
 8002dec:	2300      	movs	r3, #0
 8002dee:	61fb      	str	r3, [r7, #28]
 8002df0:	e012      	b.n	8002e18 <prvInitialiseNewTask+0x74>
 8002df2:	68ba      	ldr	r2, [r7, #8]
 8002df4:	69fb      	ldr	r3, [r7, #28]
 8002df6:	4413      	add	r3, r2
 8002df8:	7819      	ldrb	r1, [r3, #0]
 8002dfa:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002dfc:	69fb      	ldr	r3, [r7, #28]
 8002dfe:	4413      	add	r3, r2
 8002e00:	3334      	adds	r3, #52	; 0x34
 8002e02:	460a      	mov	r2, r1
 8002e04:	701a      	strb	r2, [r3, #0]
 8002e06:	68ba      	ldr	r2, [r7, #8]
 8002e08:	69fb      	ldr	r3, [r7, #28]
 8002e0a:	4413      	add	r3, r2
 8002e0c:	781b      	ldrb	r3, [r3, #0]
 8002e0e:	2b00      	cmp	r3, #0
 8002e10:	d006      	beq.n	8002e20 <prvInitialiseNewTask+0x7c>
 8002e12:	69fb      	ldr	r3, [r7, #28]
 8002e14:	3301      	adds	r3, #1
 8002e16:	61fb      	str	r3, [r7, #28]
 8002e18:	69fb      	ldr	r3, [r7, #28]
 8002e1a:	2b0f      	cmp	r3, #15
 8002e1c:	d9e9      	bls.n	8002df2 <prvInitialiseNewTask+0x4e>
 8002e1e:	e000      	b.n	8002e22 <prvInitialiseNewTask+0x7e>
 8002e20:	bf00      	nop
 8002e22:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e24:	2200      	movs	r2, #0
 8002e26:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002e2a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002e2c:	2b06      	cmp	r3, #6
 8002e2e:	d901      	bls.n	8002e34 <prvInitialiseNewTask+0x90>
 8002e30:	2306      	movs	r3, #6
 8002e32:	62bb      	str	r3, [r7, #40]	; 0x28
 8002e34:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e36:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002e38:	62da      	str	r2, [r3, #44]	; 0x2c
 8002e3a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e3c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002e3e:	645a      	str	r2, [r3, #68]	; 0x44
 8002e40:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e42:	2200      	movs	r2, #0
 8002e44:	649a      	str	r2, [r3, #72]	; 0x48
 8002e46:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e48:	3304      	adds	r3, #4
 8002e4a:	4618      	mov	r0, r3
 8002e4c:	f7ff fe79 	bl	8002b42 <vListInitialiseItem>
 8002e50:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e52:	3318      	adds	r3, #24
 8002e54:	4618      	mov	r0, r3
 8002e56:	f7ff fe74 	bl	8002b42 <vListInitialiseItem>
 8002e5a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e5c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002e5e:	611a      	str	r2, [r3, #16]
 8002e60:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002e62:	f1c3 0207 	rsb	r2, r3, #7
 8002e66:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e68:	619a      	str	r2, [r3, #24]
 8002e6a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e6c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002e6e:	625a      	str	r2, [r3, #36]	; 0x24
 8002e70:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e72:	2200      	movs	r2, #0
 8002e74:	64da      	str	r2, [r3, #76]	; 0x4c
 8002e76:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e78:	2200      	movs	r2, #0
 8002e7a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002e7e:	683a      	ldr	r2, [r7, #0]
 8002e80:	68f9      	ldr	r1, [r7, #12]
 8002e82:	69b8      	ldr	r0, [r7, #24]
 8002e84:	f000 fc0e 	bl	80036a4 <pxPortInitialiseStack>
 8002e88:	4602      	mov	r2, r0
 8002e8a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e8c:	601a      	str	r2, [r3, #0]
 8002e8e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002e90:	2b00      	cmp	r3, #0
 8002e92:	d002      	beq.n	8002e9a <prvInitialiseNewTask+0xf6>
 8002e94:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002e96:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002e98:	601a      	str	r2, [r3, #0]
 8002e9a:	bf00      	nop
 8002e9c:	3720      	adds	r7, #32
 8002e9e:	46bd      	mov	sp, r7
 8002ea0:	bd80      	pop	{r7, pc}
	...

08002ea4 <prvAddNewTaskToReadyList>:
 8002ea4:	b580      	push	{r7, lr}
 8002ea6:	b082      	sub	sp, #8
 8002ea8:	af00      	add	r7, sp, #0
 8002eaa:	6078      	str	r0, [r7, #4]
 8002eac:	f000 fcee 	bl	800388c <vPortEnterCritical>
 8002eb0:	4b2a      	ldr	r3, [pc, #168]	; (8002f5c <prvAddNewTaskToReadyList+0xb8>)
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	3301      	adds	r3, #1
 8002eb6:	4a29      	ldr	r2, [pc, #164]	; (8002f5c <prvAddNewTaskToReadyList+0xb8>)
 8002eb8:	6013      	str	r3, [r2, #0]
 8002eba:	4b29      	ldr	r3, [pc, #164]	; (8002f60 <prvAddNewTaskToReadyList+0xbc>)
 8002ebc:	681b      	ldr	r3, [r3, #0]
 8002ebe:	2b00      	cmp	r3, #0
 8002ec0:	d109      	bne.n	8002ed6 <prvAddNewTaskToReadyList+0x32>
 8002ec2:	4a27      	ldr	r2, [pc, #156]	; (8002f60 <prvAddNewTaskToReadyList+0xbc>)
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	6013      	str	r3, [r2, #0]
 8002ec8:	4b24      	ldr	r3, [pc, #144]	; (8002f5c <prvAddNewTaskToReadyList+0xb8>)
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	2b01      	cmp	r3, #1
 8002ece:	d110      	bne.n	8002ef2 <prvAddNewTaskToReadyList+0x4e>
 8002ed0:	f000 fac0 	bl	8003454 <prvInitialiseTaskLists>
 8002ed4:	e00d      	b.n	8002ef2 <prvAddNewTaskToReadyList+0x4e>
 8002ed6:	4b23      	ldr	r3, [pc, #140]	; (8002f64 <prvAddNewTaskToReadyList+0xc0>)
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	d109      	bne.n	8002ef2 <prvAddNewTaskToReadyList+0x4e>
 8002ede:	4b20      	ldr	r3, [pc, #128]	; (8002f60 <prvAddNewTaskToReadyList+0xbc>)
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002ee8:	429a      	cmp	r2, r3
 8002eea:	d802      	bhi.n	8002ef2 <prvAddNewTaskToReadyList+0x4e>
 8002eec:	4a1c      	ldr	r2, [pc, #112]	; (8002f60 <prvAddNewTaskToReadyList+0xbc>)
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	6013      	str	r3, [r2, #0]
 8002ef2:	4b1d      	ldr	r3, [pc, #116]	; (8002f68 <prvAddNewTaskToReadyList+0xc4>)
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	3301      	adds	r3, #1
 8002ef8:	4a1b      	ldr	r2, [pc, #108]	; (8002f68 <prvAddNewTaskToReadyList+0xc4>)
 8002efa:	6013      	str	r3, [r2, #0]
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002f00:	2201      	movs	r2, #1
 8002f02:	409a      	lsls	r2, r3
 8002f04:	4b19      	ldr	r3, [pc, #100]	; (8002f6c <prvAddNewTaskToReadyList+0xc8>)
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	4313      	orrs	r3, r2
 8002f0a:	4a18      	ldr	r2, [pc, #96]	; (8002f6c <prvAddNewTaskToReadyList+0xc8>)
 8002f0c:	6013      	str	r3, [r2, #0]
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002f12:	4613      	mov	r3, r2
 8002f14:	009b      	lsls	r3, r3, #2
 8002f16:	4413      	add	r3, r2
 8002f18:	009b      	lsls	r3, r3, #2
 8002f1a:	4a15      	ldr	r2, [pc, #84]	; (8002f70 <prvAddNewTaskToReadyList+0xcc>)
 8002f1c:	441a      	add	r2, r3
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	3304      	adds	r3, #4
 8002f22:	4619      	mov	r1, r3
 8002f24:	4610      	mov	r0, r2
 8002f26:	f7ff fe18 	bl	8002b5a <vListInsertEnd>
 8002f2a:	f000 fcdf 	bl	80038ec <vPortExitCritical>
 8002f2e:	4b0d      	ldr	r3, [pc, #52]	; (8002f64 <prvAddNewTaskToReadyList+0xc0>)
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	2b00      	cmp	r3, #0
 8002f34:	d00e      	beq.n	8002f54 <prvAddNewTaskToReadyList+0xb0>
 8002f36:	4b0a      	ldr	r3, [pc, #40]	; (8002f60 <prvAddNewTaskToReadyList+0xbc>)
 8002f38:	681b      	ldr	r3, [r3, #0]
 8002f3a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002f40:	429a      	cmp	r2, r3
 8002f42:	d207      	bcs.n	8002f54 <prvAddNewTaskToReadyList+0xb0>
 8002f44:	4b0b      	ldr	r3, [pc, #44]	; (8002f74 <prvAddNewTaskToReadyList+0xd0>)
 8002f46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002f4a:	601a      	str	r2, [r3, #0]
 8002f4c:	f3bf 8f4f 	dsb	sy
 8002f50:	f3bf 8f6f 	isb	sy
 8002f54:	bf00      	nop
 8002f56:	3708      	adds	r7, #8
 8002f58:	46bd      	mov	sp, r7
 8002f5a:	bd80      	pop	{r7, pc}
 8002f5c:	200004bc 	.word	0x200004bc
 8002f60:	200003bc 	.word	0x200003bc
 8002f64:	200004c8 	.word	0x200004c8
 8002f68:	200004d8 	.word	0x200004d8
 8002f6c:	200004c4 	.word	0x200004c4
 8002f70:	200003c0 	.word	0x200003c0
 8002f74:	e000ed04 	.word	0xe000ed04

08002f78 <vTaskDelay>:
 8002f78:	b580      	push	{r7, lr}
 8002f7a:	b084      	sub	sp, #16
 8002f7c:	af00      	add	r7, sp, #0
 8002f7e:	6078      	str	r0, [r7, #4]
 8002f80:	2300      	movs	r3, #0
 8002f82:	60fb      	str	r3, [r7, #12]
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	d017      	beq.n	8002fba <vTaskDelay+0x42>
 8002f8a:	4b13      	ldr	r3, [pc, #76]	; (8002fd8 <vTaskDelay+0x60>)
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d00a      	beq.n	8002fa8 <vTaskDelay+0x30>
 8002f92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002f96:	f383 8811 	msr	BASEPRI, r3
 8002f9a:	f3bf 8f6f 	isb	sy
 8002f9e:	f3bf 8f4f 	dsb	sy
 8002fa2:	60bb      	str	r3, [r7, #8]
 8002fa4:	bf00      	nop
 8002fa6:	e7fe      	b.n	8002fa6 <vTaskDelay+0x2e>
 8002fa8:	f000 f87a 	bl	80030a0 <vTaskSuspendAll>
 8002fac:	2100      	movs	r1, #0
 8002fae:	6878      	ldr	r0, [r7, #4]
 8002fb0:	f000 fb12 	bl	80035d8 <prvAddCurrentTaskToDelayedList>
 8002fb4:	f000 f882 	bl	80030bc <xTaskResumeAll>
 8002fb8:	60f8      	str	r0, [r7, #12]
 8002fba:	68fb      	ldr	r3, [r7, #12]
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	d107      	bne.n	8002fd0 <vTaskDelay+0x58>
 8002fc0:	4b06      	ldr	r3, [pc, #24]	; (8002fdc <vTaskDelay+0x64>)
 8002fc2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002fc6:	601a      	str	r2, [r3, #0]
 8002fc8:	f3bf 8f4f 	dsb	sy
 8002fcc:	f3bf 8f6f 	isb	sy
 8002fd0:	bf00      	nop
 8002fd2:	3710      	adds	r7, #16
 8002fd4:	46bd      	mov	sp, r7
 8002fd6:	bd80      	pop	{r7, pc}
 8002fd8:	200004e4 	.word	0x200004e4
 8002fdc:	e000ed04 	.word	0xe000ed04

08002fe0 <vTaskStartScheduler>:
 8002fe0:	b580      	push	{r7, lr}
 8002fe2:	b08a      	sub	sp, #40	; 0x28
 8002fe4:	af04      	add	r7, sp, #16
 8002fe6:	2300      	movs	r3, #0
 8002fe8:	60bb      	str	r3, [r7, #8]
 8002fea:	2300      	movs	r3, #0
 8002fec:	607b      	str	r3, [r7, #4]
 8002fee:	463a      	mov	r2, r7
 8002ff0:	1d39      	adds	r1, r7, #4
 8002ff2:	f107 0308 	add.w	r3, r7, #8
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	f7fd f8b2 	bl	8000160 <vApplicationGetIdleTaskMemory>
 8002ffc:	6839      	ldr	r1, [r7, #0]
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	68ba      	ldr	r2, [r7, #8]
 8003002:	9202      	str	r2, [sp, #8]
 8003004:	9301      	str	r3, [sp, #4]
 8003006:	2300      	movs	r3, #0
 8003008:	9300      	str	r3, [sp, #0]
 800300a:	2300      	movs	r3, #0
 800300c:	460a      	mov	r2, r1
 800300e:	491e      	ldr	r1, [pc, #120]	; (8003088 <vTaskStartScheduler+0xa8>)
 8003010:	481e      	ldr	r0, [pc, #120]	; (800308c <vTaskStartScheduler+0xac>)
 8003012:	f7ff fe26 	bl	8002c62 <xTaskCreateStatic>
 8003016:	4603      	mov	r3, r0
 8003018:	4a1d      	ldr	r2, [pc, #116]	; (8003090 <vTaskStartScheduler+0xb0>)
 800301a:	6013      	str	r3, [r2, #0]
 800301c:	4b1c      	ldr	r3, [pc, #112]	; (8003090 <vTaskStartScheduler+0xb0>)
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	2b00      	cmp	r3, #0
 8003022:	d002      	beq.n	800302a <vTaskStartScheduler+0x4a>
 8003024:	2301      	movs	r3, #1
 8003026:	617b      	str	r3, [r7, #20]
 8003028:	e001      	b.n	800302e <vTaskStartScheduler+0x4e>
 800302a:	2300      	movs	r3, #0
 800302c:	617b      	str	r3, [r7, #20]
 800302e:	697b      	ldr	r3, [r7, #20]
 8003030:	2b01      	cmp	r3, #1
 8003032:	d116      	bne.n	8003062 <vTaskStartScheduler+0x82>
 8003034:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003038:	f383 8811 	msr	BASEPRI, r3
 800303c:	f3bf 8f6f 	isb	sy
 8003040:	f3bf 8f4f 	dsb	sy
 8003044:	613b      	str	r3, [r7, #16]
 8003046:	bf00      	nop
 8003048:	4b12      	ldr	r3, [pc, #72]	; (8003094 <vTaskStartScheduler+0xb4>)
 800304a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800304e:	601a      	str	r2, [r3, #0]
 8003050:	4b11      	ldr	r3, [pc, #68]	; (8003098 <vTaskStartScheduler+0xb8>)
 8003052:	2201      	movs	r2, #1
 8003054:	601a      	str	r2, [r3, #0]
 8003056:	4b11      	ldr	r3, [pc, #68]	; (800309c <vTaskStartScheduler+0xbc>)
 8003058:	2200      	movs	r2, #0
 800305a:	601a      	str	r2, [r3, #0]
 800305c:	f000 fba4 	bl	80037a8 <xPortStartScheduler>
 8003060:	e00e      	b.n	8003080 <vTaskStartScheduler+0xa0>
 8003062:	697b      	ldr	r3, [r7, #20]
 8003064:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003068:	d10a      	bne.n	8003080 <vTaskStartScheduler+0xa0>
 800306a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800306e:	f383 8811 	msr	BASEPRI, r3
 8003072:	f3bf 8f6f 	isb	sy
 8003076:	f3bf 8f4f 	dsb	sy
 800307a:	60fb      	str	r3, [r7, #12]
 800307c:	bf00      	nop
 800307e:	e7fe      	b.n	800307e <vTaskStartScheduler+0x9e>
 8003080:	bf00      	nop
 8003082:	3718      	adds	r7, #24
 8003084:	46bd      	mov	sp, r7
 8003086:	bd80      	pop	{r7, pc}
 8003088:	08005368 	.word	0x08005368
 800308c:	08003425 	.word	0x08003425
 8003090:	200004e0 	.word	0x200004e0
 8003094:	200004dc 	.word	0x200004dc
 8003098:	200004c8 	.word	0x200004c8
 800309c:	200004c0 	.word	0x200004c0

080030a0 <vTaskSuspendAll>:
 80030a0:	b480      	push	{r7}
 80030a2:	af00      	add	r7, sp, #0
 80030a4:	4b04      	ldr	r3, [pc, #16]	; (80030b8 <vTaskSuspendAll+0x18>)
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	3301      	adds	r3, #1
 80030aa:	4a03      	ldr	r2, [pc, #12]	; (80030b8 <vTaskSuspendAll+0x18>)
 80030ac:	6013      	str	r3, [r2, #0]
 80030ae:	bf00      	nop
 80030b0:	46bd      	mov	sp, r7
 80030b2:	bc80      	pop	{r7}
 80030b4:	4770      	bx	lr
 80030b6:	bf00      	nop
 80030b8:	200004e4 	.word	0x200004e4

080030bc <xTaskResumeAll>:
 80030bc:	b580      	push	{r7, lr}
 80030be:	b084      	sub	sp, #16
 80030c0:	af00      	add	r7, sp, #0
 80030c2:	2300      	movs	r3, #0
 80030c4:	60fb      	str	r3, [r7, #12]
 80030c6:	2300      	movs	r3, #0
 80030c8:	60bb      	str	r3, [r7, #8]
 80030ca:	4b41      	ldr	r3, [pc, #260]	; (80031d0 <xTaskResumeAll+0x114>)
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	2b00      	cmp	r3, #0
 80030d0:	d10a      	bne.n	80030e8 <xTaskResumeAll+0x2c>
 80030d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80030d6:	f383 8811 	msr	BASEPRI, r3
 80030da:	f3bf 8f6f 	isb	sy
 80030de:	f3bf 8f4f 	dsb	sy
 80030e2:	603b      	str	r3, [r7, #0]
 80030e4:	bf00      	nop
 80030e6:	e7fe      	b.n	80030e6 <xTaskResumeAll+0x2a>
 80030e8:	f000 fbd0 	bl	800388c <vPortEnterCritical>
 80030ec:	4b38      	ldr	r3, [pc, #224]	; (80031d0 <xTaskResumeAll+0x114>)
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	3b01      	subs	r3, #1
 80030f2:	4a37      	ldr	r2, [pc, #220]	; (80031d0 <xTaskResumeAll+0x114>)
 80030f4:	6013      	str	r3, [r2, #0]
 80030f6:	4b36      	ldr	r3, [pc, #216]	; (80031d0 <xTaskResumeAll+0x114>)
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	2b00      	cmp	r3, #0
 80030fc:	d161      	bne.n	80031c2 <xTaskResumeAll+0x106>
 80030fe:	4b35      	ldr	r3, [pc, #212]	; (80031d4 <xTaskResumeAll+0x118>)
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	2b00      	cmp	r3, #0
 8003104:	d05d      	beq.n	80031c2 <xTaskResumeAll+0x106>
 8003106:	e02e      	b.n	8003166 <xTaskResumeAll+0xaa>
 8003108:	4b33      	ldr	r3, [pc, #204]	; (80031d8 <xTaskResumeAll+0x11c>)
 800310a:	68db      	ldr	r3, [r3, #12]
 800310c:	68db      	ldr	r3, [r3, #12]
 800310e:	60fb      	str	r3, [r7, #12]
 8003110:	68fb      	ldr	r3, [r7, #12]
 8003112:	3318      	adds	r3, #24
 8003114:	4618      	mov	r0, r3
 8003116:	f7ff fd7b 	bl	8002c10 <uxListRemove>
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	3304      	adds	r3, #4
 800311e:	4618      	mov	r0, r3
 8003120:	f7ff fd76 	bl	8002c10 <uxListRemove>
 8003124:	68fb      	ldr	r3, [r7, #12]
 8003126:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003128:	2201      	movs	r2, #1
 800312a:	409a      	lsls	r2, r3
 800312c:	4b2b      	ldr	r3, [pc, #172]	; (80031dc <xTaskResumeAll+0x120>)
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	4313      	orrs	r3, r2
 8003132:	4a2a      	ldr	r2, [pc, #168]	; (80031dc <xTaskResumeAll+0x120>)
 8003134:	6013      	str	r3, [r2, #0]
 8003136:	68fb      	ldr	r3, [r7, #12]
 8003138:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800313a:	4613      	mov	r3, r2
 800313c:	009b      	lsls	r3, r3, #2
 800313e:	4413      	add	r3, r2
 8003140:	009b      	lsls	r3, r3, #2
 8003142:	4a27      	ldr	r2, [pc, #156]	; (80031e0 <xTaskResumeAll+0x124>)
 8003144:	441a      	add	r2, r3
 8003146:	68fb      	ldr	r3, [r7, #12]
 8003148:	3304      	adds	r3, #4
 800314a:	4619      	mov	r1, r3
 800314c:	4610      	mov	r0, r2
 800314e:	f7ff fd04 	bl	8002b5a <vListInsertEnd>
 8003152:	68fb      	ldr	r3, [r7, #12]
 8003154:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003156:	4b23      	ldr	r3, [pc, #140]	; (80031e4 <xTaskResumeAll+0x128>)
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800315c:	429a      	cmp	r2, r3
 800315e:	d302      	bcc.n	8003166 <xTaskResumeAll+0xaa>
 8003160:	4b21      	ldr	r3, [pc, #132]	; (80031e8 <xTaskResumeAll+0x12c>)
 8003162:	2201      	movs	r2, #1
 8003164:	601a      	str	r2, [r3, #0]
 8003166:	4b1c      	ldr	r3, [pc, #112]	; (80031d8 <xTaskResumeAll+0x11c>)
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	2b00      	cmp	r3, #0
 800316c:	d1cc      	bne.n	8003108 <xTaskResumeAll+0x4c>
 800316e:	68fb      	ldr	r3, [r7, #12]
 8003170:	2b00      	cmp	r3, #0
 8003172:	d001      	beq.n	8003178 <xTaskResumeAll+0xbc>
 8003174:	f000 fa0c 	bl	8003590 <prvResetNextTaskUnblockTime>
 8003178:	4b1c      	ldr	r3, [pc, #112]	; (80031ec <xTaskResumeAll+0x130>)
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	607b      	str	r3, [r7, #4]
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	2b00      	cmp	r3, #0
 8003182:	d010      	beq.n	80031a6 <xTaskResumeAll+0xea>
 8003184:	f000 f836 	bl	80031f4 <xTaskIncrementTick>
 8003188:	4603      	mov	r3, r0
 800318a:	2b00      	cmp	r3, #0
 800318c:	d002      	beq.n	8003194 <xTaskResumeAll+0xd8>
 800318e:	4b16      	ldr	r3, [pc, #88]	; (80031e8 <xTaskResumeAll+0x12c>)
 8003190:	2201      	movs	r2, #1
 8003192:	601a      	str	r2, [r3, #0]
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	3b01      	subs	r3, #1
 8003198:	607b      	str	r3, [r7, #4]
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	2b00      	cmp	r3, #0
 800319e:	d1f1      	bne.n	8003184 <xTaskResumeAll+0xc8>
 80031a0:	4b12      	ldr	r3, [pc, #72]	; (80031ec <xTaskResumeAll+0x130>)
 80031a2:	2200      	movs	r2, #0
 80031a4:	601a      	str	r2, [r3, #0]
 80031a6:	4b10      	ldr	r3, [pc, #64]	; (80031e8 <xTaskResumeAll+0x12c>)
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	2b00      	cmp	r3, #0
 80031ac:	d009      	beq.n	80031c2 <xTaskResumeAll+0x106>
 80031ae:	2301      	movs	r3, #1
 80031b0:	60bb      	str	r3, [r7, #8]
 80031b2:	4b0f      	ldr	r3, [pc, #60]	; (80031f0 <xTaskResumeAll+0x134>)
 80031b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80031b8:	601a      	str	r2, [r3, #0]
 80031ba:	f3bf 8f4f 	dsb	sy
 80031be:	f3bf 8f6f 	isb	sy
 80031c2:	f000 fb93 	bl	80038ec <vPortExitCritical>
 80031c6:	68bb      	ldr	r3, [r7, #8]
 80031c8:	4618      	mov	r0, r3
 80031ca:	3710      	adds	r7, #16
 80031cc:	46bd      	mov	sp, r7
 80031ce:	bd80      	pop	{r7, pc}
 80031d0:	200004e4 	.word	0x200004e4
 80031d4:	200004bc 	.word	0x200004bc
 80031d8:	2000047c 	.word	0x2000047c
 80031dc:	200004c4 	.word	0x200004c4
 80031e0:	200003c0 	.word	0x200003c0
 80031e4:	200003bc 	.word	0x200003bc
 80031e8:	200004d0 	.word	0x200004d0
 80031ec:	200004cc 	.word	0x200004cc
 80031f0:	e000ed04 	.word	0xe000ed04

080031f4 <xTaskIncrementTick>:
 80031f4:	b580      	push	{r7, lr}
 80031f6:	b086      	sub	sp, #24
 80031f8:	af00      	add	r7, sp, #0
 80031fa:	2300      	movs	r3, #0
 80031fc:	617b      	str	r3, [r7, #20]
 80031fe:	4b51      	ldr	r3, [pc, #324]	; (8003344 <xTaskIncrementTick+0x150>)
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	2b00      	cmp	r3, #0
 8003204:	f040 808d 	bne.w	8003322 <xTaskIncrementTick+0x12e>
 8003208:	4b4f      	ldr	r3, [pc, #316]	; (8003348 <xTaskIncrementTick+0x154>)
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	3301      	adds	r3, #1
 800320e:	613b      	str	r3, [r7, #16]
 8003210:	4a4d      	ldr	r2, [pc, #308]	; (8003348 <xTaskIncrementTick+0x154>)
 8003212:	693b      	ldr	r3, [r7, #16]
 8003214:	6013      	str	r3, [r2, #0]
 8003216:	693b      	ldr	r3, [r7, #16]
 8003218:	2b00      	cmp	r3, #0
 800321a:	d120      	bne.n	800325e <xTaskIncrementTick+0x6a>
 800321c:	4b4b      	ldr	r3, [pc, #300]	; (800334c <xTaskIncrementTick+0x158>)
 800321e:	681b      	ldr	r3, [r3, #0]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	2b00      	cmp	r3, #0
 8003224:	d00a      	beq.n	800323c <xTaskIncrementTick+0x48>
 8003226:	f04f 0350 	mov.w	r3, #80	; 0x50
 800322a:	f383 8811 	msr	BASEPRI, r3
 800322e:	f3bf 8f6f 	isb	sy
 8003232:	f3bf 8f4f 	dsb	sy
 8003236:	603b      	str	r3, [r7, #0]
 8003238:	bf00      	nop
 800323a:	e7fe      	b.n	800323a <xTaskIncrementTick+0x46>
 800323c:	4b43      	ldr	r3, [pc, #268]	; (800334c <xTaskIncrementTick+0x158>)
 800323e:	681b      	ldr	r3, [r3, #0]
 8003240:	60fb      	str	r3, [r7, #12]
 8003242:	4b43      	ldr	r3, [pc, #268]	; (8003350 <xTaskIncrementTick+0x15c>)
 8003244:	681b      	ldr	r3, [r3, #0]
 8003246:	4a41      	ldr	r2, [pc, #260]	; (800334c <xTaskIncrementTick+0x158>)
 8003248:	6013      	str	r3, [r2, #0]
 800324a:	4a41      	ldr	r2, [pc, #260]	; (8003350 <xTaskIncrementTick+0x15c>)
 800324c:	68fb      	ldr	r3, [r7, #12]
 800324e:	6013      	str	r3, [r2, #0]
 8003250:	4b40      	ldr	r3, [pc, #256]	; (8003354 <xTaskIncrementTick+0x160>)
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	3301      	adds	r3, #1
 8003256:	4a3f      	ldr	r2, [pc, #252]	; (8003354 <xTaskIncrementTick+0x160>)
 8003258:	6013      	str	r3, [r2, #0]
 800325a:	f000 f999 	bl	8003590 <prvResetNextTaskUnblockTime>
 800325e:	4b3e      	ldr	r3, [pc, #248]	; (8003358 <xTaskIncrementTick+0x164>)
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	693a      	ldr	r2, [r7, #16]
 8003264:	429a      	cmp	r2, r3
 8003266:	d34d      	bcc.n	8003304 <xTaskIncrementTick+0x110>
 8003268:	4b38      	ldr	r3, [pc, #224]	; (800334c <xTaskIncrementTick+0x158>)
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	681b      	ldr	r3, [r3, #0]
 800326e:	2b00      	cmp	r3, #0
 8003270:	d101      	bne.n	8003276 <xTaskIncrementTick+0x82>
 8003272:	2301      	movs	r3, #1
 8003274:	e000      	b.n	8003278 <xTaskIncrementTick+0x84>
 8003276:	2300      	movs	r3, #0
 8003278:	2b00      	cmp	r3, #0
 800327a:	d004      	beq.n	8003286 <xTaskIncrementTick+0x92>
 800327c:	4b36      	ldr	r3, [pc, #216]	; (8003358 <xTaskIncrementTick+0x164>)
 800327e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003282:	601a      	str	r2, [r3, #0]
 8003284:	e03e      	b.n	8003304 <xTaskIncrementTick+0x110>
 8003286:	4b31      	ldr	r3, [pc, #196]	; (800334c <xTaskIncrementTick+0x158>)
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	68db      	ldr	r3, [r3, #12]
 800328c:	68db      	ldr	r3, [r3, #12]
 800328e:	60bb      	str	r3, [r7, #8]
 8003290:	68bb      	ldr	r3, [r7, #8]
 8003292:	685b      	ldr	r3, [r3, #4]
 8003294:	607b      	str	r3, [r7, #4]
 8003296:	693a      	ldr	r2, [r7, #16]
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	429a      	cmp	r2, r3
 800329c:	d203      	bcs.n	80032a6 <xTaskIncrementTick+0xb2>
 800329e:	4a2e      	ldr	r2, [pc, #184]	; (8003358 <xTaskIncrementTick+0x164>)
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	6013      	str	r3, [r2, #0]
 80032a4:	e02e      	b.n	8003304 <xTaskIncrementTick+0x110>
 80032a6:	68bb      	ldr	r3, [r7, #8]
 80032a8:	3304      	adds	r3, #4
 80032aa:	4618      	mov	r0, r3
 80032ac:	f7ff fcb0 	bl	8002c10 <uxListRemove>
 80032b0:	68bb      	ldr	r3, [r7, #8]
 80032b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80032b4:	2b00      	cmp	r3, #0
 80032b6:	d004      	beq.n	80032c2 <xTaskIncrementTick+0xce>
 80032b8:	68bb      	ldr	r3, [r7, #8]
 80032ba:	3318      	adds	r3, #24
 80032bc:	4618      	mov	r0, r3
 80032be:	f7ff fca7 	bl	8002c10 <uxListRemove>
 80032c2:	68bb      	ldr	r3, [r7, #8]
 80032c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80032c6:	2201      	movs	r2, #1
 80032c8:	409a      	lsls	r2, r3
 80032ca:	4b24      	ldr	r3, [pc, #144]	; (800335c <xTaskIncrementTick+0x168>)
 80032cc:	681b      	ldr	r3, [r3, #0]
 80032ce:	4313      	orrs	r3, r2
 80032d0:	4a22      	ldr	r2, [pc, #136]	; (800335c <xTaskIncrementTick+0x168>)
 80032d2:	6013      	str	r3, [r2, #0]
 80032d4:	68bb      	ldr	r3, [r7, #8]
 80032d6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80032d8:	4613      	mov	r3, r2
 80032da:	009b      	lsls	r3, r3, #2
 80032dc:	4413      	add	r3, r2
 80032de:	009b      	lsls	r3, r3, #2
 80032e0:	4a1f      	ldr	r2, [pc, #124]	; (8003360 <xTaskIncrementTick+0x16c>)
 80032e2:	441a      	add	r2, r3
 80032e4:	68bb      	ldr	r3, [r7, #8]
 80032e6:	3304      	adds	r3, #4
 80032e8:	4619      	mov	r1, r3
 80032ea:	4610      	mov	r0, r2
 80032ec:	f7ff fc35 	bl	8002b5a <vListInsertEnd>
 80032f0:	68bb      	ldr	r3, [r7, #8]
 80032f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80032f4:	4b1b      	ldr	r3, [pc, #108]	; (8003364 <xTaskIncrementTick+0x170>)
 80032f6:	681b      	ldr	r3, [r3, #0]
 80032f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80032fa:	429a      	cmp	r2, r3
 80032fc:	d3b4      	bcc.n	8003268 <xTaskIncrementTick+0x74>
 80032fe:	2301      	movs	r3, #1
 8003300:	617b      	str	r3, [r7, #20]
 8003302:	e7b1      	b.n	8003268 <xTaskIncrementTick+0x74>
 8003304:	4b17      	ldr	r3, [pc, #92]	; (8003364 <xTaskIncrementTick+0x170>)
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800330a:	4915      	ldr	r1, [pc, #84]	; (8003360 <xTaskIncrementTick+0x16c>)
 800330c:	4613      	mov	r3, r2
 800330e:	009b      	lsls	r3, r3, #2
 8003310:	4413      	add	r3, r2
 8003312:	009b      	lsls	r3, r3, #2
 8003314:	440b      	add	r3, r1
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	2b01      	cmp	r3, #1
 800331a:	d907      	bls.n	800332c <xTaskIncrementTick+0x138>
 800331c:	2301      	movs	r3, #1
 800331e:	617b      	str	r3, [r7, #20]
 8003320:	e004      	b.n	800332c <xTaskIncrementTick+0x138>
 8003322:	4b11      	ldr	r3, [pc, #68]	; (8003368 <xTaskIncrementTick+0x174>)
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	3301      	adds	r3, #1
 8003328:	4a0f      	ldr	r2, [pc, #60]	; (8003368 <xTaskIncrementTick+0x174>)
 800332a:	6013      	str	r3, [r2, #0]
 800332c:	4b0f      	ldr	r3, [pc, #60]	; (800336c <xTaskIncrementTick+0x178>)
 800332e:	681b      	ldr	r3, [r3, #0]
 8003330:	2b00      	cmp	r3, #0
 8003332:	d001      	beq.n	8003338 <xTaskIncrementTick+0x144>
 8003334:	2301      	movs	r3, #1
 8003336:	617b      	str	r3, [r7, #20]
 8003338:	697b      	ldr	r3, [r7, #20]
 800333a:	4618      	mov	r0, r3
 800333c:	3718      	adds	r7, #24
 800333e:	46bd      	mov	sp, r7
 8003340:	bd80      	pop	{r7, pc}
 8003342:	bf00      	nop
 8003344:	200004e4 	.word	0x200004e4
 8003348:	200004c0 	.word	0x200004c0
 800334c:	20000474 	.word	0x20000474
 8003350:	20000478 	.word	0x20000478
 8003354:	200004d4 	.word	0x200004d4
 8003358:	200004dc 	.word	0x200004dc
 800335c:	200004c4 	.word	0x200004c4
 8003360:	200003c0 	.word	0x200003c0
 8003364:	200003bc 	.word	0x200003bc
 8003368:	200004cc 	.word	0x200004cc
 800336c:	200004d0 	.word	0x200004d0

08003370 <vTaskSwitchContext>:
 8003370:	b480      	push	{r7}
 8003372:	b087      	sub	sp, #28
 8003374:	af00      	add	r7, sp, #0
 8003376:	4b26      	ldr	r3, [pc, #152]	; (8003410 <vTaskSwitchContext+0xa0>)
 8003378:	681b      	ldr	r3, [r3, #0]
 800337a:	2b00      	cmp	r3, #0
 800337c:	d003      	beq.n	8003386 <vTaskSwitchContext+0x16>
 800337e:	4b25      	ldr	r3, [pc, #148]	; (8003414 <vTaskSwitchContext+0xa4>)
 8003380:	2201      	movs	r2, #1
 8003382:	601a      	str	r2, [r3, #0]
 8003384:	e03f      	b.n	8003406 <vTaskSwitchContext+0x96>
 8003386:	4b23      	ldr	r3, [pc, #140]	; (8003414 <vTaskSwitchContext+0xa4>)
 8003388:	2200      	movs	r2, #0
 800338a:	601a      	str	r2, [r3, #0]
 800338c:	4b22      	ldr	r3, [pc, #136]	; (8003418 <vTaskSwitchContext+0xa8>)
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	60fb      	str	r3, [r7, #12]
 8003392:	68fb      	ldr	r3, [r7, #12]
 8003394:	fab3 f383 	clz	r3, r3
 8003398:	72fb      	strb	r3, [r7, #11]
 800339a:	7afb      	ldrb	r3, [r7, #11]
 800339c:	f1c3 031f 	rsb	r3, r3, #31
 80033a0:	617b      	str	r3, [r7, #20]
 80033a2:	491e      	ldr	r1, [pc, #120]	; (800341c <vTaskSwitchContext+0xac>)
 80033a4:	697a      	ldr	r2, [r7, #20]
 80033a6:	4613      	mov	r3, r2
 80033a8:	009b      	lsls	r3, r3, #2
 80033aa:	4413      	add	r3, r2
 80033ac:	009b      	lsls	r3, r3, #2
 80033ae:	440b      	add	r3, r1
 80033b0:	681b      	ldr	r3, [r3, #0]
 80033b2:	2b00      	cmp	r3, #0
 80033b4:	d10a      	bne.n	80033cc <vTaskSwitchContext+0x5c>
 80033b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80033ba:	f383 8811 	msr	BASEPRI, r3
 80033be:	f3bf 8f6f 	isb	sy
 80033c2:	f3bf 8f4f 	dsb	sy
 80033c6:	607b      	str	r3, [r7, #4]
 80033c8:	bf00      	nop
 80033ca:	e7fe      	b.n	80033ca <vTaskSwitchContext+0x5a>
 80033cc:	697a      	ldr	r2, [r7, #20]
 80033ce:	4613      	mov	r3, r2
 80033d0:	009b      	lsls	r3, r3, #2
 80033d2:	4413      	add	r3, r2
 80033d4:	009b      	lsls	r3, r3, #2
 80033d6:	4a11      	ldr	r2, [pc, #68]	; (800341c <vTaskSwitchContext+0xac>)
 80033d8:	4413      	add	r3, r2
 80033da:	613b      	str	r3, [r7, #16]
 80033dc:	693b      	ldr	r3, [r7, #16]
 80033de:	685b      	ldr	r3, [r3, #4]
 80033e0:	685a      	ldr	r2, [r3, #4]
 80033e2:	693b      	ldr	r3, [r7, #16]
 80033e4:	605a      	str	r2, [r3, #4]
 80033e6:	693b      	ldr	r3, [r7, #16]
 80033e8:	685a      	ldr	r2, [r3, #4]
 80033ea:	693b      	ldr	r3, [r7, #16]
 80033ec:	3308      	adds	r3, #8
 80033ee:	429a      	cmp	r2, r3
 80033f0:	d104      	bne.n	80033fc <vTaskSwitchContext+0x8c>
 80033f2:	693b      	ldr	r3, [r7, #16]
 80033f4:	685b      	ldr	r3, [r3, #4]
 80033f6:	685a      	ldr	r2, [r3, #4]
 80033f8:	693b      	ldr	r3, [r7, #16]
 80033fa:	605a      	str	r2, [r3, #4]
 80033fc:	693b      	ldr	r3, [r7, #16]
 80033fe:	685b      	ldr	r3, [r3, #4]
 8003400:	68db      	ldr	r3, [r3, #12]
 8003402:	4a07      	ldr	r2, [pc, #28]	; (8003420 <vTaskSwitchContext+0xb0>)
 8003404:	6013      	str	r3, [r2, #0]
 8003406:	bf00      	nop
 8003408:	371c      	adds	r7, #28
 800340a:	46bd      	mov	sp, r7
 800340c:	bc80      	pop	{r7}
 800340e:	4770      	bx	lr
 8003410:	200004e4 	.word	0x200004e4
 8003414:	200004d0 	.word	0x200004d0
 8003418:	200004c4 	.word	0x200004c4
 800341c:	200003c0 	.word	0x200003c0
 8003420:	200003bc 	.word	0x200003bc

08003424 <prvIdleTask>:
 8003424:	b580      	push	{r7, lr}
 8003426:	b082      	sub	sp, #8
 8003428:	af00      	add	r7, sp, #0
 800342a:	6078      	str	r0, [r7, #4]
 800342c:	f000 f852 	bl	80034d4 <prvCheckTasksWaitingTermination>
 8003430:	4b06      	ldr	r3, [pc, #24]	; (800344c <prvIdleTask+0x28>)
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	2b01      	cmp	r3, #1
 8003436:	d9f9      	bls.n	800342c <prvIdleTask+0x8>
 8003438:	4b05      	ldr	r3, [pc, #20]	; (8003450 <prvIdleTask+0x2c>)
 800343a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800343e:	601a      	str	r2, [r3, #0]
 8003440:	f3bf 8f4f 	dsb	sy
 8003444:	f3bf 8f6f 	isb	sy
 8003448:	e7f0      	b.n	800342c <prvIdleTask+0x8>
 800344a:	bf00      	nop
 800344c:	200003c0 	.word	0x200003c0
 8003450:	e000ed04 	.word	0xe000ed04

08003454 <prvInitialiseTaskLists>:
 8003454:	b580      	push	{r7, lr}
 8003456:	b082      	sub	sp, #8
 8003458:	af00      	add	r7, sp, #0
 800345a:	2300      	movs	r3, #0
 800345c:	607b      	str	r3, [r7, #4]
 800345e:	e00c      	b.n	800347a <prvInitialiseTaskLists+0x26>
 8003460:	687a      	ldr	r2, [r7, #4]
 8003462:	4613      	mov	r3, r2
 8003464:	009b      	lsls	r3, r3, #2
 8003466:	4413      	add	r3, r2
 8003468:	009b      	lsls	r3, r3, #2
 800346a:	4a12      	ldr	r2, [pc, #72]	; (80034b4 <prvInitialiseTaskLists+0x60>)
 800346c:	4413      	add	r3, r2
 800346e:	4618      	mov	r0, r3
 8003470:	f7ff fb48 	bl	8002b04 <vListInitialise>
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	3301      	adds	r3, #1
 8003478:	607b      	str	r3, [r7, #4]
 800347a:	687b      	ldr	r3, [r7, #4]
 800347c:	2b06      	cmp	r3, #6
 800347e:	d9ef      	bls.n	8003460 <prvInitialiseTaskLists+0xc>
 8003480:	480d      	ldr	r0, [pc, #52]	; (80034b8 <prvInitialiseTaskLists+0x64>)
 8003482:	f7ff fb3f 	bl	8002b04 <vListInitialise>
 8003486:	480d      	ldr	r0, [pc, #52]	; (80034bc <prvInitialiseTaskLists+0x68>)
 8003488:	f7ff fb3c 	bl	8002b04 <vListInitialise>
 800348c:	480c      	ldr	r0, [pc, #48]	; (80034c0 <prvInitialiseTaskLists+0x6c>)
 800348e:	f7ff fb39 	bl	8002b04 <vListInitialise>
 8003492:	480c      	ldr	r0, [pc, #48]	; (80034c4 <prvInitialiseTaskLists+0x70>)
 8003494:	f7ff fb36 	bl	8002b04 <vListInitialise>
 8003498:	480b      	ldr	r0, [pc, #44]	; (80034c8 <prvInitialiseTaskLists+0x74>)
 800349a:	f7ff fb33 	bl	8002b04 <vListInitialise>
 800349e:	4b0b      	ldr	r3, [pc, #44]	; (80034cc <prvInitialiseTaskLists+0x78>)
 80034a0:	4a05      	ldr	r2, [pc, #20]	; (80034b8 <prvInitialiseTaskLists+0x64>)
 80034a2:	601a      	str	r2, [r3, #0]
 80034a4:	4b0a      	ldr	r3, [pc, #40]	; (80034d0 <prvInitialiseTaskLists+0x7c>)
 80034a6:	4a05      	ldr	r2, [pc, #20]	; (80034bc <prvInitialiseTaskLists+0x68>)
 80034a8:	601a      	str	r2, [r3, #0]
 80034aa:	bf00      	nop
 80034ac:	3708      	adds	r7, #8
 80034ae:	46bd      	mov	sp, r7
 80034b0:	bd80      	pop	{r7, pc}
 80034b2:	bf00      	nop
 80034b4:	200003c0 	.word	0x200003c0
 80034b8:	2000044c 	.word	0x2000044c
 80034bc:	20000460 	.word	0x20000460
 80034c0:	2000047c 	.word	0x2000047c
 80034c4:	20000490 	.word	0x20000490
 80034c8:	200004a8 	.word	0x200004a8
 80034cc:	20000474 	.word	0x20000474
 80034d0:	20000478 	.word	0x20000478

080034d4 <prvCheckTasksWaitingTermination>:
 80034d4:	b580      	push	{r7, lr}
 80034d6:	b082      	sub	sp, #8
 80034d8:	af00      	add	r7, sp, #0
 80034da:	e019      	b.n	8003510 <prvCheckTasksWaitingTermination+0x3c>
 80034dc:	f000 f9d6 	bl	800388c <vPortEnterCritical>
 80034e0:	4b10      	ldr	r3, [pc, #64]	; (8003524 <prvCheckTasksWaitingTermination+0x50>)
 80034e2:	68db      	ldr	r3, [r3, #12]
 80034e4:	68db      	ldr	r3, [r3, #12]
 80034e6:	607b      	str	r3, [r7, #4]
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	3304      	adds	r3, #4
 80034ec:	4618      	mov	r0, r3
 80034ee:	f7ff fb8f 	bl	8002c10 <uxListRemove>
 80034f2:	4b0d      	ldr	r3, [pc, #52]	; (8003528 <prvCheckTasksWaitingTermination+0x54>)
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	3b01      	subs	r3, #1
 80034f8:	4a0b      	ldr	r2, [pc, #44]	; (8003528 <prvCheckTasksWaitingTermination+0x54>)
 80034fa:	6013      	str	r3, [r2, #0]
 80034fc:	4b0b      	ldr	r3, [pc, #44]	; (800352c <prvCheckTasksWaitingTermination+0x58>)
 80034fe:	681b      	ldr	r3, [r3, #0]
 8003500:	3b01      	subs	r3, #1
 8003502:	4a0a      	ldr	r2, [pc, #40]	; (800352c <prvCheckTasksWaitingTermination+0x58>)
 8003504:	6013      	str	r3, [r2, #0]
 8003506:	f000 f9f1 	bl	80038ec <vPortExitCritical>
 800350a:	6878      	ldr	r0, [r7, #4]
 800350c:	f000 f810 	bl	8003530 <prvDeleteTCB>
 8003510:	4b06      	ldr	r3, [pc, #24]	; (800352c <prvCheckTasksWaitingTermination+0x58>)
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	2b00      	cmp	r3, #0
 8003516:	d1e1      	bne.n	80034dc <prvCheckTasksWaitingTermination+0x8>
 8003518:	bf00      	nop
 800351a:	bf00      	nop
 800351c:	3708      	adds	r7, #8
 800351e:	46bd      	mov	sp, r7
 8003520:	bd80      	pop	{r7, pc}
 8003522:	bf00      	nop
 8003524:	20000490 	.word	0x20000490
 8003528:	200004bc 	.word	0x200004bc
 800352c:	200004a4 	.word	0x200004a4

08003530 <prvDeleteTCB>:
 8003530:	b580      	push	{r7, lr}
 8003532:	b084      	sub	sp, #16
 8003534:	af00      	add	r7, sp, #0
 8003536:	6078      	str	r0, [r7, #4]
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800353e:	2b00      	cmp	r3, #0
 8003540:	d108      	bne.n	8003554 <prvDeleteTCB+0x24>
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003546:	4618      	mov	r0, r3
 8003548:	f000 fb26 	bl	8003b98 <vPortFree>
 800354c:	6878      	ldr	r0, [r7, #4]
 800354e:	f000 fb23 	bl	8003b98 <vPortFree>
 8003552:	e018      	b.n	8003586 <prvDeleteTCB+0x56>
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800355a:	2b01      	cmp	r3, #1
 800355c:	d103      	bne.n	8003566 <prvDeleteTCB+0x36>
 800355e:	6878      	ldr	r0, [r7, #4]
 8003560:	f000 fb1a 	bl	8003b98 <vPortFree>
 8003564:	e00f      	b.n	8003586 <prvDeleteTCB+0x56>
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800356c:	2b02      	cmp	r3, #2
 800356e:	d00a      	beq.n	8003586 <prvDeleteTCB+0x56>
 8003570:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003574:	f383 8811 	msr	BASEPRI, r3
 8003578:	f3bf 8f6f 	isb	sy
 800357c:	f3bf 8f4f 	dsb	sy
 8003580:	60fb      	str	r3, [r7, #12]
 8003582:	bf00      	nop
 8003584:	e7fe      	b.n	8003584 <prvDeleteTCB+0x54>
 8003586:	bf00      	nop
 8003588:	3710      	adds	r7, #16
 800358a:	46bd      	mov	sp, r7
 800358c:	bd80      	pop	{r7, pc}
	...

08003590 <prvResetNextTaskUnblockTime>:
 8003590:	b480      	push	{r7}
 8003592:	b083      	sub	sp, #12
 8003594:	af00      	add	r7, sp, #0
 8003596:	4b0e      	ldr	r3, [pc, #56]	; (80035d0 <prvResetNextTaskUnblockTime+0x40>)
 8003598:	681b      	ldr	r3, [r3, #0]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	2b00      	cmp	r3, #0
 800359e:	d101      	bne.n	80035a4 <prvResetNextTaskUnblockTime+0x14>
 80035a0:	2301      	movs	r3, #1
 80035a2:	e000      	b.n	80035a6 <prvResetNextTaskUnblockTime+0x16>
 80035a4:	2300      	movs	r3, #0
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	d004      	beq.n	80035b4 <prvResetNextTaskUnblockTime+0x24>
 80035aa:	4b0a      	ldr	r3, [pc, #40]	; (80035d4 <prvResetNextTaskUnblockTime+0x44>)
 80035ac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80035b0:	601a      	str	r2, [r3, #0]
 80035b2:	e008      	b.n	80035c6 <prvResetNextTaskUnblockTime+0x36>
 80035b4:	4b06      	ldr	r3, [pc, #24]	; (80035d0 <prvResetNextTaskUnblockTime+0x40>)
 80035b6:	681b      	ldr	r3, [r3, #0]
 80035b8:	68db      	ldr	r3, [r3, #12]
 80035ba:	68db      	ldr	r3, [r3, #12]
 80035bc:	607b      	str	r3, [r7, #4]
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	685b      	ldr	r3, [r3, #4]
 80035c2:	4a04      	ldr	r2, [pc, #16]	; (80035d4 <prvResetNextTaskUnblockTime+0x44>)
 80035c4:	6013      	str	r3, [r2, #0]
 80035c6:	bf00      	nop
 80035c8:	370c      	adds	r7, #12
 80035ca:	46bd      	mov	sp, r7
 80035cc:	bc80      	pop	{r7}
 80035ce:	4770      	bx	lr
 80035d0:	20000474 	.word	0x20000474
 80035d4:	200004dc 	.word	0x200004dc

080035d8 <prvAddCurrentTaskToDelayedList>:
 80035d8:	b580      	push	{r7, lr}
 80035da:	b084      	sub	sp, #16
 80035dc:	af00      	add	r7, sp, #0
 80035de:	6078      	str	r0, [r7, #4]
 80035e0:	6039      	str	r1, [r7, #0]
 80035e2:	4b29      	ldr	r3, [pc, #164]	; (8003688 <prvAddCurrentTaskToDelayedList+0xb0>)
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	60fb      	str	r3, [r7, #12]
 80035e8:	4b28      	ldr	r3, [pc, #160]	; (800368c <prvAddCurrentTaskToDelayedList+0xb4>)
 80035ea:	681b      	ldr	r3, [r3, #0]
 80035ec:	3304      	adds	r3, #4
 80035ee:	4618      	mov	r0, r3
 80035f0:	f7ff fb0e 	bl	8002c10 <uxListRemove>
 80035f4:	4603      	mov	r3, r0
 80035f6:	2b00      	cmp	r3, #0
 80035f8:	d10b      	bne.n	8003612 <prvAddCurrentTaskToDelayedList+0x3a>
 80035fa:	4b24      	ldr	r3, [pc, #144]	; (800368c <prvAddCurrentTaskToDelayedList+0xb4>)
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003600:	2201      	movs	r2, #1
 8003602:	fa02 f303 	lsl.w	r3, r2, r3
 8003606:	43da      	mvns	r2, r3
 8003608:	4b21      	ldr	r3, [pc, #132]	; (8003690 <prvAddCurrentTaskToDelayedList+0xb8>)
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	4013      	ands	r3, r2
 800360e:	4a20      	ldr	r2, [pc, #128]	; (8003690 <prvAddCurrentTaskToDelayedList+0xb8>)
 8003610:	6013      	str	r3, [r2, #0]
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003618:	d10a      	bne.n	8003630 <prvAddCurrentTaskToDelayedList+0x58>
 800361a:	683b      	ldr	r3, [r7, #0]
 800361c:	2b00      	cmp	r3, #0
 800361e:	d007      	beq.n	8003630 <prvAddCurrentTaskToDelayedList+0x58>
 8003620:	4b1a      	ldr	r3, [pc, #104]	; (800368c <prvAddCurrentTaskToDelayedList+0xb4>)
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	3304      	adds	r3, #4
 8003626:	4619      	mov	r1, r3
 8003628:	481a      	ldr	r0, [pc, #104]	; (8003694 <prvAddCurrentTaskToDelayedList+0xbc>)
 800362a:	f7ff fa96 	bl	8002b5a <vListInsertEnd>
 800362e:	e026      	b.n	800367e <prvAddCurrentTaskToDelayedList+0xa6>
 8003630:	68fa      	ldr	r2, [r7, #12]
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	4413      	add	r3, r2
 8003636:	60bb      	str	r3, [r7, #8]
 8003638:	4b14      	ldr	r3, [pc, #80]	; (800368c <prvAddCurrentTaskToDelayedList+0xb4>)
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	68ba      	ldr	r2, [r7, #8]
 800363e:	605a      	str	r2, [r3, #4]
 8003640:	68ba      	ldr	r2, [r7, #8]
 8003642:	68fb      	ldr	r3, [r7, #12]
 8003644:	429a      	cmp	r2, r3
 8003646:	d209      	bcs.n	800365c <prvAddCurrentTaskToDelayedList+0x84>
 8003648:	4b13      	ldr	r3, [pc, #76]	; (8003698 <prvAddCurrentTaskToDelayedList+0xc0>)
 800364a:	681a      	ldr	r2, [r3, #0]
 800364c:	4b0f      	ldr	r3, [pc, #60]	; (800368c <prvAddCurrentTaskToDelayedList+0xb4>)
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	3304      	adds	r3, #4
 8003652:	4619      	mov	r1, r3
 8003654:	4610      	mov	r0, r2
 8003656:	f7ff faa3 	bl	8002ba0 <vListInsert>
 800365a:	e010      	b.n	800367e <prvAddCurrentTaskToDelayedList+0xa6>
 800365c:	4b0f      	ldr	r3, [pc, #60]	; (800369c <prvAddCurrentTaskToDelayedList+0xc4>)
 800365e:	681a      	ldr	r2, [r3, #0]
 8003660:	4b0a      	ldr	r3, [pc, #40]	; (800368c <prvAddCurrentTaskToDelayedList+0xb4>)
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	3304      	adds	r3, #4
 8003666:	4619      	mov	r1, r3
 8003668:	4610      	mov	r0, r2
 800366a:	f7ff fa99 	bl	8002ba0 <vListInsert>
 800366e:	4b0c      	ldr	r3, [pc, #48]	; (80036a0 <prvAddCurrentTaskToDelayedList+0xc8>)
 8003670:	681b      	ldr	r3, [r3, #0]
 8003672:	68ba      	ldr	r2, [r7, #8]
 8003674:	429a      	cmp	r2, r3
 8003676:	d202      	bcs.n	800367e <prvAddCurrentTaskToDelayedList+0xa6>
 8003678:	4a09      	ldr	r2, [pc, #36]	; (80036a0 <prvAddCurrentTaskToDelayedList+0xc8>)
 800367a:	68bb      	ldr	r3, [r7, #8]
 800367c:	6013      	str	r3, [r2, #0]
 800367e:	bf00      	nop
 8003680:	3710      	adds	r7, #16
 8003682:	46bd      	mov	sp, r7
 8003684:	bd80      	pop	{r7, pc}
 8003686:	bf00      	nop
 8003688:	200004c0 	.word	0x200004c0
 800368c:	200003bc 	.word	0x200003bc
 8003690:	200004c4 	.word	0x200004c4
 8003694:	200004a8 	.word	0x200004a8
 8003698:	20000478 	.word	0x20000478
 800369c:	20000474 	.word	0x20000474
 80036a0:	200004dc 	.word	0x200004dc

080036a4 <pxPortInitialiseStack>:
 80036a4:	b480      	push	{r7}
 80036a6:	b085      	sub	sp, #20
 80036a8:	af00      	add	r7, sp, #0
 80036aa:	60f8      	str	r0, [r7, #12]
 80036ac:	60b9      	str	r1, [r7, #8]
 80036ae:	607a      	str	r2, [r7, #4]
 80036b0:	68fb      	ldr	r3, [r7, #12]
 80036b2:	3b04      	subs	r3, #4
 80036b4:	60fb      	str	r3, [r7, #12]
 80036b6:	68fb      	ldr	r3, [r7, #12]
 80036b8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80036bc:	601a      	str	r2, [r3, #0]
 80036be:	68fb      	ldr	r3, [r7, #12]
 80036c0:	3b04      	subs	r3, #4
 80036c2:	60fb      	str	r3, [r7, #12]
 80036c4:	68bb      	ldr	r3, [r7, #8]
 80036c6:	f023 0201 	bic.w	r2, r3, #1
 80036ca:	68fb      	ldr	r3, [r7, #12]
 80036cc:	601a      	str	r2, [r3, #0]
 80036ce:	68fb      	ldr	r3, [r7, #12]
 80036d0:	3b04      	subs	r3, #4
 80036d2:	60fb      	str	r3, [r7, #12]
 80036d4:	4a08      	ldr	r2, [pc, #32]	; (80036f8 <pxPortInitialiseStack+0x54>)
 80036d6:	68fb      	ldr	r3, [r7, #12]
 80036d8:	601a      	str	r2, [r3, #0]
 80036da:	68fb      	ldr	r3, [r7, #12]
 80036dc:	3b14      	subs	r3, #20
 80036de:	60fb      	str	r3, [r7, #12]
 80036e0:	687a      	ldr	r2, [r7, #4]
 80036e2:	68fb      	ldr	r3, [r7, #12]
 80036e4:	601a      	str	r2, [r3, #0]
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	3b20      	subs	r3, #32
 80036ea:	60fb      	str	r3, [r7, #12]
 80036ec:	68fb      	ldr	r3, [r7, #12]
 80036ee:	4618      	mov	r0, r3
 80036f0:	3714      	adds	r7, #20
 80036f2:	46bd      	mov	sp, r7
 80036f4:	bc80      	pop	{r7}
 80036f6:	4770      	bx	lr
 80036f8:	080036fd 	.word	0x080036fd

080036fc <prvTaskExitError>:
 80036fc:	b480      	push	{r7}
 80036fe:	b085      	sub	sp, #20
 8003700:	af00      	add	r7, sp, #0
 8003702:	2300      	movs	r3, #0
 8003704:	607b      	str	r3, [r7, #4]
 8003706:	4b12      	ldr	r3, [pc, #72]	; (8003750 <prvTaskExitError+0x54>)
 8003708:	681b      	ldr	r3, [r3, #0]
 800370a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800370e:	d00a      	beq.n	8003726 <prvTaskExitError+0x2a>
 8003710:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003714:	f383 8811 	msr	BASEPRI, r3
 8003718:	f3bf 8f6f 	isb	sy
 800371c:	f3bf 8f4f 	dsb	sy
 8003720:	60fb      	str	r3, [r7, #12]
 8003722:	bf00      	nop
 8003724:	e7fe      	b.n	8003724 <prvTaskExitError+0x28>
 8003726:	f04f 0350 	mov.w	r3, #80	; 0x50
 800372a:	f383 8811 	msr	BASEPRI, r3
 800372e:	f3bf 8f6f 	isb	sy
 8003732:	f3bf 8f4f 	dsb	sy
 8003736:	60bb      	str	r3, [r7, #8]
 8003738:	bf00      	nop
 800373a:	bf00      	nop
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	2b00      	cmp	r3, #0
 8003740:	d0fc      	beq.n	800373c <prvTaskExitError+0x40>
 8003742:	bf00      	nop
 8003744:	bf00      	nop
 8003746:	3714      	adds	r7, #20
 8003748:	46bd      	mov	sp, r7
 800374a:	bc80      	pop	{r7}
 800374c:	4770      	bx	lr
 800374e:	bf00      	nop
 8003750:	200000dc 	.word	0x200000dc
	...

08003760 <SVC_Handler>:
 8003760:	4b07      	ldr	r3, [pc, #28]	; (8003780 <pxCurrentTCBConst2>)
 8003762:	6819      	ldr	r1, [r3, #0]
 8003764:	6808      	ldr	r0, [r1, #0]
 8003766:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 800376a:	f380 8809 	msr	PSP, r0
 800376e:	f3bf 8f6f 	isb	sy
 8003772:	f04f 0000 	mov.w	r0, #0
 8003776:	f380 8811 	msr	BASEPRI, r0
 800377a:	f04e 0e0d 	orr.w	lr, lr, #13
 800377e:	4770      	bx	lr

08003780 <pxCurrentTCBConst2>:
 8003780:	200003bc 	.word	0x200003bc
 8003784:	bf00      	nop
 8003786:	bf00      	nop

08003788 <prvPortStartFirstTask>:
 8003788:	4806      	ldr	r0, [pc, #24]	; (80037a4 <prvPortStartFirstTask+0x1c>)
 800378a:	6800      	ldr	r0, [r0, #0]
 800378c:	6800      	ldr	r0, [r0, #0]
 800378e:	f380 8808 	msr	MSP, r0
 8003792:	b662      	cpsie	i
 8003794:	b661      	cpsie	f
 8003796:	f3bf 8f4f 	dsb	sy
 800379a:	f3bf 8f6f 	isb	sy
 800379e:	df00      	svc	0
 80037a0:	bf00      	nop
 80037a2:	bf00      	nop
 80037a4:	e000ed08 	.word	0xe000ed08

080037a8 <xPortStartScheduler>:
 80037a8:	b580      	push	{r7, lr}
 80037aa:	b084      	sub	sp, #16
 80037ac:	af00      	add	r7, sp, #0
 80037ae:	4b32      	ldr	r3, [pc, #200]	; (8003878 <xPortStartScheduler+0xd0>)
 80037b0:	60fb      	str	r3, [r7, #12]
 80037b2:	68fb      	ldr	r3, [r7, #12]
 80037b4:	781b      	ldrb	r3, [r3, #0]
 80037b6:	b2db      	uxtb	r3, r3
 80037b8:	607b      	str	r3, [r7, #4]
 80037ba:	68fb      	ldr	r3, [r7, #12]
 80037bc:	22ff      	movs	r2, #255	; 0xff
 80037be:	701a      	strb	r2, [r3, #0]
 80037c0:	68fb      	ldr	r3, [r7, #12]
 80037c2:	781b      	ldrb	r3, [r3, #0]
 80037c4:	b2db      	uxtb	r3, r3
 80037c6:	70fb      	strb	r3, [r7, #3]
 80037c8:	78fb      	ldrb	r3, [r7, #3]
 80037ca:	b2db      	uxtb	r3, r3
 80037cc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80037d0:	b2da      	uxtb	r2, r3
 80037d2:	4b2a      	ldr	r3, [pc, #168]	; (800387c <xPortStartScheduler+0xd4>)
 80037d4:	701a      	strb	r2, [r3, #0]
 80037d6:	4b2a      	ldr	r3, [pc, #168]	; (8003880 <xPortStartScheduler+0xd8>)
 80037d8:	2207      	movs	r2, #7
 80037da:	601a      	str	r2, [r3, #0]
 80037dc:	e009      	b.n	80037f2 <xPortStartScheduler+0x4a>
 80037de:	4b28      	ldr	r3, [pc, #160]	; (8003880 <xPortStartScheduler+0xd8>)
 80037e0:	681b      	ldr	r3, [r3, #0]
 80037e2:	3b01      	subs	r3, #1
 80037e4:	4a26      	ldr	r2, [pc, #152]	; (8003880 <xPortStartScheduler+0xd8>)
 80037e6:	6013      	str	r3, [r2, #0]
 80037e8:	78fb      	ldrb	r3, [r7, #3]
 80037ea:	b2db      	uxtb	r3, r3
 80037ec:	005b      	lsls	r3, r3, #1
 80037ee:	b2db      	uxtb	r3, r3
 80037f0:	70fb      	strb	r3, [r7, #3]
 80037f2:	78fb      	ldrb	r3, [r7, #3]
 80037f4:	b2db      	uxtb	r3, r3
 80037f6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80037fa:	2b80      	cmp	r3, #128	; 0x80
 80037fc:	d0ef      	beq.n	80037de <xPortStartScheduler+0x36>
 80037fe:	4b20      	ldr	r3, [pc, #128]	; (8003880 <xPortStartScheduler+0xd8>)
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	f1c3 0307 	rsb	r3, r3, #7
 8003806:	2b04      	cmp	r3, #4
 8003808:	d00a      	beq.n	8003820 <xPortStartScheduler+0x78>
 800380a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800380e:	f383 8811 	msr	BASEPRI, r3
 8003812:	f3bf 8f6f 	isb	sy
 8003816:	f3bf 8f4f 	dsb	sy
 800381a:	60bb      	str	r3, [r7, #8]
 800381c:	bf00      	nop
 800381e:	e7fe      	b.n	800381e <xPortStartScheduler+0x76>
 8003820:	4b17      	ldr	r3, [pc, #92]	; (8003880 <xPortStartScheduler+0xd8>)
 8003822:	681b      	ldr	r3, [r3, #0]
 8003824:	021b      	lsls	r3, r3, #8
 8003826:	4a16      	ldr	r2, [pc, #88]	; (8003880 <xPortStartScheduler+0xd8>)
 8003828:	6013      	str	r3, [r2, #0]
 800382a:	4b15      	ldr	r3, [pc, #84]	; (8003880 <xPortStartScheduler+0xd8>)
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003832:	4a13      	ldr	r2, [pc, #76]	; (8003880 <xPortStartScheduler+0xd8>)
 8003834:	6013      	str	r3, [r2, #0]
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	b2da      	uxtb	r2, r3
 800383a:	68fb      	ldr	r3, [r7, #12]
 800383c:	701a      	strb	r2, [r3, #0]
 800383e:	4b11      	ldr	r3, [pc, #68]	; (8003884 <xPortStartScheduler+0xdc>)
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	4a10      	ldr	r2, [pc, #64]	; (8003884 <xPortStartScheduler+0xdc>)
 8003844:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003848:	6013      	str	r3, [r2, #0]
 800384a:	4b0e      	ldr	r3, [pc, #56]	; (8003884 <xPortStartScheduler+0xdc>)
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	4a0d      	ldr	r2, [pc, #52]	; (8003884 <xPortStartScheduler+0xdc>)
 8003850:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8003854:	6013      	str	r3, [r2, #0]
 8003856:	f000 f8b9 	bl	80039cc <vPortSetupTimerInterrupt>
 800385a:	4b0b      	ldr	r3, [pc, #44]	; (8003888 <xPortStartScheduler+0xe0>)
 800385c:	2200      	movs	r2, #0
 800385e:	601a      	str	r2, [r3, #0]
 8003860:	f7ff ff92 	bl	8003788 <prvPortStartFirstTask>
 8003864:	f7ff fd84 	bl	8003370 <vTaskSwitchContext>
 8003868:	f7ff ff48 	bl	80036fc <prvTaskExitError>
 800386c:	2300      	movs	r3, #0
 800386e:	4618      	mov	r0, r3
 8003870:	3710      	adds	r7, #16
 8003872:	46bd      	mov	sp, r7
 8003874:	bd80      	pop	{r7, pc}
 8003876:	bf00      	nop
 8003878:	e000e400 	.word	0xe000e400
 800387c:	200004e8 	.word	0x200004e8
 8003880:	200004ec 	.word	0x200004ec
 8003884:	e000ed20 	.word	0xe000ed20
 8003888:	200000dc 	.word	0x200000dc

0800388c <vPortEnterCritical>:
 800388c:	b480      	push	{r7}
 800388e:	b083      	sub	sp, #12
 8003890:	af00      	add	r7, sp, #0
 8003892:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003896:	f383 8811 	msr	BASEPRI, r3
 800389a:	f3bf 8f6f 	isb	sy
 800389e:	f3bf 8f4f 	dsb	sy
 80038a2:	607b      	str	r3, [r7, #4]
 80038a4:	bf00      	nop
 80038a6:	4b0f      	ldr	r3, [pc, #60]	; (80038e4 <vPortEnterCritical+0x58>)
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	3301      	adds	r3, #1
 80038ac:	4a0d      	ldr	r2, [pc, #52]	; (80038e4 <vPortEnterCritical+0x58>)
 80038ae:	6013      	str	r3, [r2, #0]
 80038b0:	4b0c      	ldr	r3, [pc, #48]	; (80038e4 <vPortEnterCritical+0x58>)
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	2b01      	cmp	r3, #1
 80038b6:	d10f      	bne.n	80038d8 <vPortEnterCritical+0x4c>
 80038b8:	4b0b      	ldr	r3, [pc, #44]	; (80038e8 <vPortEnterCritical+0x5c>)
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	b2db      	uxtb	r3, r3
 80038be:	2b00      	cmp	r3, #0
 80038c0:	d00a      	beq.n	80038d8 <vPortEnterCritical+0x4c>
 80038c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80038c6:	f383 8811 	msr	BASEPRI, r3
 80038ca:	f3bf 8f6f 	isb	sy
 80038ce:	f3bf 8f4f 	dsb	sy
 80038d2:	603b      	str	r3, [r7, #0]
 80038d4:	bf00      	nop
 80038d6:	e7fe      	b.n	80038d6 <vPortEnterCritical+0x4a>
 80038d8:	bf00      	nop
 80038da:	370c      	adds	r7, #12
 80038dc:	46bd      	mov	sp, r7
 80038de:	bc80      	pop	{r7}
 80038e0:	4770      	bx	lr
 80038e2:	bf00      	nop
 80038e4:	200000dc 	.word	0x200000dc
 80038e8:	e000ed04 	.word	0xe000ed04

080038ec <vPortExitCritical>:
 80038ec:	b480      	push	{r7}
 80038ee:	b083      	sub	sp, #12
 80038f0:	af00      	add	r7, sp, #0
 80038f2:	4b11      	ldr	r3, [pc, #68]	; (8003938 <vPortExitCritical+0x4c>)
 80038f4:	681b      	ldr	r3, [r3, #0]
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	d10a      	bne.n	8003910 <vPortExitCritical+0x24>
 80038fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80038fe:	f383 8811 	msr	BASEPRI, r3
 8003902:	f3bf 8f6f 	isb	sy
 8003906:	f3bf 8f4f 	dsb	sy
 800390a:	607b      	str	r3, [r7, #4]
 800390c:	bf00      	nop
 800390e:	e7fe      	b.n	800390e <vPortExitCritical+0x22>
 8003910:	4b09      	ldr	r3, [pc, #36]	; (8003938 <vPortExitCritical+0x4c>)
 8003912:	681b      	ldr	r3, [r3, #0]
 8003914:	3b01      	subs	r3, #1
 8003916:	4a08      	ldr	r2, [pc, #32]	; (8003938 <vPortExitCritical+0x4c>)
 8003918:	6013      	str	r3, [r2, #0]
 800391a:	4b07      	ldr	r3, [pc, #28]	; (8003938 <vPortExitCritical+0x4c>)
 800391c:	681b      	ldr	r3, [r3, #0]
 800391e:	2b00      	cmp	r3, #0
 8003920:	d105      	bne.n	800392e <vPortExitCritical+0x42>
 8003922:	2300      	movs	r3, #0
 8003924:	603b      	str	r3, [r7, #0]
 8003926:	683b      	ldr	r3, [r7, #0]
 8003928:	f383 8811 	msr	BASEPRI, r3
 800392c:	bf00      	nop
 800392e:	bf00      	nop
 8003930:	370c      	adds	r7, #12
 8003932:	46bd      	mov	sp, r7
 8003934:	bc80      	pop	{r7}
 8003936:	4770      	bx	lr
 8003938:	200000dc 	.word	0x200000dc
 800393c:	00000000 	.word	0x00000000

08003940 <PendSV_Handler>:
 8003940:	f3ef 8009 	mrs	r0, PSP
 8003944:	f3bf 8f6f 	isb	sy
 8003948:	4b0d      	ldr	r3, [pc, #52]	; (8003980 <pxCurrentTCBConst>)
 800394a:	681a      	ldr	r2, [r3, #0]
 800394c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003950:	6010      	str	r0, [r2, #0]
 8003952:	e92d 4008 	stmdb	sp!, {r3, lr}
 8003956:	f04f 0050 	mov.w	r0, #80	; 0x50
 800395a:	f380 8811 	msr	BASEPRI, r0
 800395e:	f7ff fd07 	bl	8003370 <vTaskSwitchContext>
 8003962:	f04f 0000 	mov.w	r0, #0
 8003966:	f380 8811 	msr	BASEPRI, r0
 800396a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800396e:	6819      	ldr	r1, [r3, #0]
 8003970:	6808      	ldr	r0, [r1, #0]
 8003972:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003976:	f380 8809 	msr	PSP, r0
 800397a:	f3bf 8f6f 	isb	sy
 800397e:	4770      	bx	lr

08003980 <pxCurrentTCBConst>:
 8003980:	200003bc 	.word	0x200003bc
 8003984:	bf00      	nop
 8003986:	bf00      	nop

08003988 <SysTick_Handler>:
 8003988:	b580      	push	{r7, lr}
 800398a:	b082      	sub	sp, #8
 800398c:	af00      	add	r7, sp, #0
 800398e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003992:	f383 8811 	msr	BASEPRI, r3
 8003996:	f3bf 8f6f 	isb	sy
 800399a:	f3bf 8f4f 	dsb	sy
 800399e:	607b      	str	r3, [r7, #4]
 80039a0:	bf00      	nop
 80039a2:	f7ff fc27 	bl	80031f4 <xTaskIncrementTick>
 80039a6:	4603      	mov	r3, r0
 80039a8:	2b00      	cmp	r3, #0
 80039aa:	d003      	beq.n	80039b4 <SysTick_Handler+0x2c>
 80039ac:	4b06      	ldr	r3, [pc, #24]	; (80039c8 <SysTick_Handler+0x40>)
 80039ae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80039b2:	601a      	str	r2, [r3, #0]
 80039b4:	2300      	movs	r3, #0
 80039b6:	603b      	str	r3, [r7, #0]
 80039b8:	683b      	ldr	r3, [r7, #0]
 80039ba:	f383 8811 	msr	BASEPRI, r3
 80039be:	bf00      	nop
 80039c0:	bf00      	nop
 80039c2:	3708      	adds	r7, #8
 80039c4:	46bd      	mov	sp, r7
 80039c6:	bd80      	pop	{r7, pc}
 80039c8:	e000ed04 	.word	0xe000ed04

080039cc <vPortSetupTimerInterrupt>:
 80039cc:	b480      	push	{r7}
 80039ce:	af00      	add	r7, sp, #0
 80039d0:	4b0a      	ldr	r3, [pc, #40]	; (80039fc <vPortSetupTimerInterrupt+0x30>)
 80039d2:	2200      	movs	r2, #0
 80039d4:	601a      	str	r2, [r3, #0]
 80039d6:	4b0a      	ldr	r3, [pc, #40]	; (8003a00 <vPortSetupTimerInterrupt+0x34>)
 80039d8:	2200      	movs	r2, #0
 80039da:	601a      	str	r2, [r3, #0]
 80039dc:	4b09      	ldr	r3, [pc, #36]	; (8003a04 <vPortSetupTimerInterrupt+0x38>)
 80039de:	681b      	ldr	r3, [r3, #0]
 80039e0:	4a09      	ldr	r2, [pc, #36]	; (8003a08 <vPortSetupTimerInterrupt+0x3c>)
 80039e2:	fba2 2303 	umull	r2, r3, r2, r3
 80039e6:	099b      	lsrs	r3, r3, #6
 80039e8:	4a08      	ldr	r2, [pc, #32]	; (8003a0c <vPortSetupTimerInterrupt+0x40>)
 80039ea:	3b01      	subs	r3, #1
 80039ec:	6013      	str	r3, [r2, #0]
 80039ee:	4b03      	ldr	r3, [pc, #12]	; (80039fc <vPortSetupTimerInterrupt+0x30>)
 80039f0:	2207      	movs	r2, #7
 80039f2:	601a      	str	r2, [r3, #0]
 80039f4:	bf00      	nop
 80039f6:	46bd      	mov	sp, r7
 80039f8:	bc80      	pop	{r7}
 80039fa:	4770      	bx	lr
 80039fc:	e000e010 	.word	0xe000e010
 8003a00:	e000e018 	.word	0xe000e018
 8003a04:	200000d0 	.word	0x200000d0
 8003a08:	10624dd3 	.word	0x10624dd3
 8003a0c:	e000e014 	.word	0xe000e014

08003a10 <pvPortMalloc>:
 8003a10:	b580      	push	{r7, lr}
 8003a12:	b08a      	sub	sp, #40	; 0x28
 8003a14:	af00      	add	r7, sp, #0
 8003a16:	6078      	str	r0, [r7, #4]
 8003a18:	2300      	movs	r3, #0
 8003a1a:	61fb      	str	r3, [r7, #28]
 8003a1c:	f7ff fb40 	bl	80030a0 <vTaskSuspendAll>
 8003a20:	4b58      	ldr	r3, [pc, #352]	; (8003b84 <pvPortMalloc+0x174>)
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	2b00      	cmp	r3, #0
 8003a26:	d101      	bne.n	8003a2c <pvPortMalloc+0x1c>
 8003a28:	f000 f910 	bl	8003c4c <prvHeapInit>
 8003a2c:	4b56      	ldr	r3, [pc, #344]	; (8003b88 <pvPortMalloc+0x178>)
 8003a2e:	681a      	ldr	r2, [r3, #0]
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	4013      	ands	r3, r2
 8003a34:	2b00      	cmp	r3, #0
 8003a36:	f040 808e 	bne.w	8003b56 <pvPortMalloc+0x146>
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	d01d      	beq.n	8003a7c <pvPortMalloc+0x6c>
 8003a40:	2208      	movs	r2, #8
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	4413      	add	r3, r2
 8003a46:	607b      	str	r3, [r7, #4]
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	f003 0307 	and.w	r3, r3, #7
 8003a4e:	2b00      	cmp	r3, #0
 8003a50:	d014      	beq.n	8003a7c <pvPortMalloc+0x6c>
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	f023 0307 	bic.w	r3, r3, #7
 8003a58:	3308      	adds	r3, #8
 8003a5a:	607b      	str	r3, [r7, #4]
 8003a5c:	687b      	ldr	r3, [r7, #4]
 8003a5e:	f003 0307 	and.w	r3, r3, #7
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d00a      	beq.n	8003a7c <pvPortMalloc+0x6c>
 8003a66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003a6a:	f383 8811 	msr	BASEPRI, r3
 8003a6e:	f3bf 8f6f 	isb	sy
 8003a72:	f3bf 8f4f 	dsb	sy
 8003a76:	617b      	str	r3, [r7, #20]
 8003a78:	bf00      	nop
 8003a7a:	e7fe      	b.n	8003a7a <pvPortMalloc+0x6a>
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	2b00      	cmp	r3, #0
 8003a80:	d069      	beq.n	8003b56 <pvPortMalloc+0x146>
 8003a82:	4b42      	ldr	r3, [pc, #264]	; (8003b8c <pvPortMalloc+0x17c>)
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	687a      	ldr	r2, [r7, #4]
 8003a88:	429a      	cmp	r2, r3
 8003a8a:	d864      	bhi.n	8003b56 <pvPortMalloc+0x146>
 8003a8c:	4b40      	ldr	r3, [pc, #256]	; (8003b90 <pvPortMalloc+0x180>)
 8003a8e:	623b      	str	r3, [r7, #32]
 8003a90:	4b3f      	ldr	r3, [pc, #252]	; (8003b90 <pvPortMalloc+0x180>)
 8003a92:	681b      	ldr	r3, [r3, #0]
 8003a94:	627b      	str	r3, [r7, #36]	; 0x24
 8003a96:	e004      	b.n	8003aa2 <pvPortMalloc+0x92>
 8003a98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a9a:	623b      	str	r3, [r7, #32]
 8003a9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	627b      	str	r3, [r7, #36]	; 0x24
 8003aa2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003aa4:	685b      	ldr	r3, [r3, #4]
 8003aa6:	687a      	ldr	r2, [r7, #4]
 8003aa8:	429a      	cmp	r2, r3
 8003aaa:	d903      	bls.n	8003ab4 <pvPortMalloc+0xa4>
 8003aac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	2b00      	cmp	r3, #0
 8003ab2:	d1f1      	bne.n	8003a98 <pvPortMalloc+0x88>
 8003ab4:	4b33      	ldr	r3, [pc, #204]	; (8003b84 <pvPortMalloc+0x174>)
 8003ab6:	681b      	ldr	r3, [r3, #0]
 8003ab8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003aba:	429a      	cmp	r2, r3
 8003abc:	d04b      	beq.n	8003b56 <pvPortMalloc+0x146>
 8003abe:	6a3b      	ldr	r3, [r7, #32]
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	2208      	movs	r2, #8
 8003ac4:	4413      	add	r3, r2
 8003ac6:	61fb      	str	r3, [r7, #28]
 8003ac8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003aca:	681a      	ldr	r2, [r3, #0]
 8003acc:	6a3b      	ldr	r3, [r7, #32]
 8003ace:	601a      	str	r2, [r3, #0]
 8003ad0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ad2:	685a      	ldr	r2, [r3, #4]
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	1ad2      	subs	r2, r2, r3
 8003ad8:	2308      	movs	r3, #8
 8003ada:	005b      	lsls	r3, r3, #1
 8003adc:	429a      	cmp	r2, r3
 8003ade:	d91f      	bls.n	8003b20 <pvPortMalloc+0x110>
 8003ae0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	4413      	add	r3, r2
 8003ae6:	61bb      	str	r3, [r7, #24]
 8003ae8:	69bb      	ldr	r3, [r7, #24]
 8003aea:	f003 0307 	and.w	r3, r3, #7
 8003aee:	2b00      	cmp	r3, #0
 8003af0:	d00a      	beq.n	8003b08 <pvPortMalloc+0xf8>
 8003af2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003af6:	f383 8811 	msr	BASEPRI, r3
 8003afa:	f3bf 8f6f 	isb	sy
 8003afe:	f3bf 8f4f 	dsb	sy
 8003b02:	613b      	str	r3, [r7, #16]
 8003b04:	bf00      	nop
 8003b06:	e7fe      	b.n	8003b06 <pvPortMalloc+0xf6>
 8003b08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b0a:	685a      	ldr	r2, [r3, #4]
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	1ad2      	subs	r2, r2, r3
 8003b10:	69bb      	ldr	r3, [r7, #24]
 8003b12:	605a      	str	r2, [r3, #4]
 8003b14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b16:	687a      	ldr	r2, [r7, #4]
 8003b18:	605a      	str	r2, [r3, #4]
 8003b1a:	69b8      	ldr	r0, [r7, #24]
 8003b1c:	f000 f8f8 	bl	8003d10 <prvInsertBlockIntoFreeList>
 8003b20:	4b1a      	ldr	r3, [pc, #104]	; (8003b8c <pvPortMalloc+0x17c>)
 8003b22:	681a      	ldr	r2, [r3, #0]
 8003b24:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b26:	685b      	ldr	r3, [r3, #4]
 8003b28:	1ad3      	subs	r3, r2, r3
 8003b2a:	4a18      	ldr	r2, [pc, #96]	; (8003b8c <pvPortMalloc+0x17c>)
 8003b2c:	6013      	str	r3, [r2, #0]
 8003b2e:	4b17      	ldr	r3, [pc, #92]	; (8003b8c <pvPortMalloc+0x17c>)
 8003b30:	681a      	ldr	r2, [r3, #0]
 8003b32:	4b18      	ldr	r3, [pc, #96]	; (8003b94 <pvPortMalloc+0x184>)
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	429a      	cmp	r2, r3
 8003b38:	d203      	bcs.n	8003b42 <pvPortMalloc+0x132>
 8003b3a:	4b14      	ldr	r3, [pc, #80]	; (8003b8c <pvPortMalloc+0x17c>)
 8003b3c:	681b      	ldr	r3, [r3, #0]
 8003b3e:	4a15      	ldr	r2, [pc, #84]	; (8003b94 <pvPortMalloc+0x184>)
 8003b40:	6013      	str	r3, [r2, #0]
 8003b42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b44:	685a      	ldr	r2, [r3, #4]
 8003b46:	4b10      	ldr	r3, [pc, #64]	; (8003b88 <pvPortMalloc+0x178>)
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	431a      	orrs	r2, r3
 8003b4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b4e:	605a      	str	r2, [r3, #4]
 8003b50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b52:	2200      	movs	r2, #0
 8003b54:	601a      	str	r2, [r3, #0]
 8003b56:	f7ff fab1 	bl	80030bc <xTaskResumeAll>
 8003b5a:	69fb      	ldr	r3, [r7, #28]
 8003b5c:	f003 0307 	and.w	r3, r3, #7
 8003b60:	2b00      	cmp	r3, #0
 8003b62:	d00a      	beq.n	8003b7a <pvPortMalloc+0x16a>
 8003b64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b68:	f383 8811 	msr	BASEPRI, r3
 8003b6c:	f3bf 8f6f 	isb	sy
 8003b70:	f3bf 8f4f 	dsb	sy
 8003b74:	60fb      	str	r3, [r7, #12]
 8003b76:	bf00      	nop
 8003b78:	e7fe      	b.n	8003b78 <pvPortMalloc+0x168>
 8003b7a:	69fb      	ldr	r3, [r7, #28]
 8003b7c:	4618      	mov	r0, r3
 8003b7e:	3728      	adds	r7, #40	; 0x28
 8003b80:	46bd      	mov	sp, r7
 8003b82:	bd80      	pop	{r7, pc}
 8003b84:	200010f8 	.word	0x200010f8
 8003b88:	20001104 	.word	0x20001104
 8003b8c:	200010fc 	.word	0x200010fc
 8003b90:	200010f0 	.word	0x200010f0
 8003b94:	20001100 	.word	0x20001100

08003b98 <vPortFree>:
 8003b98:	b580      	push	{r7, lr}
 8003b9a:	b086      	sub	sp, #24
 8003b9c:	af00      	add	r7, sp, #0
 8003b9e:	6078      	str	r0, [r7, #4]
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	617b      	str	r3, [r7, #20]
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	2b00      	cmp	r3, #0
 8003ba8:	d048      	beq.n	8003c3c <vPortFree+0xa4>
 8003baa:	2308      	movs	r3, #8
 8003bac:	425b      	negs	r3, r3
 8003bae:	697a      	ldr	r2, [r7, #20]
 8003bb0:	4413      	add	r3, r2
 8003bb2:	617b      	str	r3, [r7, #20]
 8003bb4:	697b      	ldr	r3, [r7, #20]
 8003bb6:	613b      	str	r3, [r7, #16]
 8003bb8:	693b      	ldr	r3, [r7, #16]
 8003bba:	685a      	ldr	r2, [r3, #4]
 8003bbc:	4b21      	ldr	r3, [pc, #132]	; (8003c44 <vPortFree+0xac>)
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	4013      	ands	r3, r2
 8003bc2:	2b00      	cmp	r3, #0
 8003bc4:	d10a      	bne.n	8003bdc <vPortFree+0x44>
 8003bc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003bca:	f383 8811 	msr	BASEPRI, r3
 8003bce:	f3bf 8f6f 	isb	sy
 8003bd2:	f3bf 8f4f 	dsb	sy
 8003bd6:	60fb      	str	r3, [r7, #12]
 8003bd8:	bf00      	nop
 8003bda:	e7fe      	b.n	8003bda <vPortFree+0x42>
 8003bdc:	693b      	ldr	r3, [r7, #16]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	2b00      	cmp	r3, #0
 8003be2:	d00a      	beq.n	8003bfa <vPortFree+0x62>
 8003be4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003be8:	f383 8811 	msr	BASEPRI, r3
 8003bec:	f3bf 8f6f 	isb	sy
 8003bf0:	f3bf 8f4f 	dsb	sy
 8003bf4:	60bb      	str	r3, [r7, #8]
 8003bf6:	bf00      	nop
 8003bf8:	e7fe      	b.n	8003bf8 <vPortFree+0x60>
 8003bfa:	693b      	ldr	r3, [r7, #16]
 8003bfc:	685a      	ldr	r2, [r3, #4]
 8003bfe:	4b11      	ldr	r3, [pc, #68]	; (8003c44 <vPortFree+0xac>)
 8003c00:	681b      	ldr	r3, [r3, #0]
 8003c02:	4013      	ands	r3, r2
 8003c04:	2b00      	cmp	r3, #0
 8003c06:	d019      	beq.n	8003c3c <vPortFree+0xa4>
 8003c08:	693b      	ldr	r3, [r7, #16]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	2b00      	cmp	r3, #0
 8003c0e:	d115      	bne.n	8003c3c <vPortFree+0xa4>
 8003c10:	693b      	ldr	r3, [r7, #16]
 8003c12:	685a      	ldr	r2, [r3, #4]
 8003c14:	4b0b      	ldr	r3, [pc, #44]	; (8003c44 <vPortFree+0xac>)
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	43db      	mvns	r3, r3
 8003c1a:	401a      	ands	r2, r3
 8003c1c:	693b      	ldr	r3, [r7, #16]
 8003c1e:	605a      	str	r2, [r3, #4]
 8003c20:	f7ff fa3e 	bl	80030a0 <vTaskSuspendAll>
 8003c24:	693b      	ldr	r3, [r7, #16]
 8003c26:	685a      	ldr	r2, [r3, #4]
 8003c28:	4b07      	ldr	r3, [pc, #28]	; (8003c48 <vPortFree+0xb0>)
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	4413      	add	r3, r2
 8003c2e:	4a06      	ldr	r2, [pc, #24]	; (8003c48 <vPortFree+0xb0>)
 8003c30:	6013      	str	r3, [r2, #0]
 8003c32:	6938      	ldr	r0, [r7, #16]
 8003c34:	f000 f86c 	bl	8003d10 <prvInsertBlockIntoFreeList>
 8003c38:	f7ff fa40 	bl	80030bc <xTaskResumeAll>
 8003c3c:	bf00      	nop
 8003c3e:	3718      	adds	r7, #24
 8003c40:	46bd      	mov	sp, r7
 8003c42:	bd80      	pop	{r7, pc}
 8003c44:	20001104 	.word	0x20001104
 8003c48:	200010fc 	.word	0x200010fc

08003c4c <prvHeapInit>:
 8003c4c:	b480      	push	{r7}
 8003c4e:	b085      	sub	sp, #20
 8003c50:	af00      	add	r7, sp, #0
 8003c52:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003c56:	60bb      	str	r3, [r7, #8]
 8003c58:	4b27      	ldr	r3, [pc, #156]	; (8003cf8 <prvHeapInit+0xac>)
 8003c5a:	60fb      	str	r3, [r7, #12]
 8003c5c:	68fb      	ldr	r3, [r7, #12]
 8003c5e:	f003 0307 	and.w	r3, r3, #7
 8003c62:	2b00      	cmp	r3, #0
 8003c64:	d00c      	beq.n	8003c80 <prvHeapInit+0x34>
 8003c66:	68fb      	ldr	r3, [r7, #12]
 8003c68:	3307      	adds	r3, #7
 8003c6a:	60fb      	str	r3, [r7, #12]
 8003c6c:	68fb      	ldr	r3, [r7, #12]
 8003c6e:	f023 0307 	bic.w	r3, r3, #7
 8003c72:	60fb      	str	r3, [r7, #12]
 8003c74:	68ba      	ldr	r2, [r7, #8]
 8003c76:	68fb      	ldr	r3, [r7, #12]
 8003c78:	1ad3      	subs	r3, r2, r3
 8003c7a:	4a1f      	ldr	r2, [pc, #124]	; (8003cf8 <prvHeapInit+0xac>)
 8003c7c:	4413      	add	r3, r2
 8003c7e:	60bb      	str	r3, [r7, #8]
 8003c80:	68fb      	ldr	r3, [r7, #12]
 8003c82:	607b      	str	r3, [r7, #4]
 8003c84:	4a1d      	ldr	r2, [pc, #116]	; (8003cfc <prvHeapInit+0xb0>)
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	6013      	str	r3, [r2, #0]
 8003c8a:	4b1c      	ldr	r3, [pc, #112]	; (8003cfc <prvHeapInit+0xb0>)
 8003c8c:	2200      	movs	r2, #0
 8003c8e:	605a      	str	r2, [r3, #4]
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	68ba      	ldr	r2, [r7, #8]
 8003c94:	4413      	add	r3, r2
 8003c96:	60fb      	str	r3, [r7, #12]
 8003c98:	2208      	movs	r2, #8
 8003c9a:	68fb      	ldr	r3, [r7, #12]
 8003c9c:	1a9b      	subs	r3, r3, r2
 8003c9e:	60fb      	str	r3, [r7, #12]
 8003ca0:	68fb      	ldr	r3, [r7, #12]
 8003ca2:	f023 0307 	bic.w	r3, r3, #7
 8003ca6:	60fb      	str	r3, [r7, #12]
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	4a15      	ldr	r2, [pc, #84]	; (8003d00 <prvHeapInit+0xb4>)
 8003cac:	6013      	str	r3, [r2, #0]
 8003cae:	4b14      	ldr	r3, [pc, #80]	; (8003d00 <prvHeapInit+0xb4>)
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	2200      	movs	r2, #0
 8003cb4:	605a      	str	r2, [r3, #4]
 8003cb6:	4b12      	ldr	r3, [pc, #72]	; (8003d00 <prvHeapInit+0xb4>)
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	2200      	movs	r2, #0
 8003cbc:	601a      	str	r2, [r3, #0]
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	603b      	str	r3, [r7, #0]
 8003cc2:	683b      	ldr	r3, [r7, #0]
 8003cc4:	68fa      	ldr	r2, [r7, #12]
 8003cc6:	1ad2      	subs	r2, r2, r3
 8003cc8:	683b      	ldr	r3, [r7, #0]
 8003cca:	605a      	str	r2, [r3, #4]
 8003ccc:	4b0c      	ldr	r3, [pc, #48]	; (8003d00 <prvHeapInit+0xb4>)
 8003cce:	681a      	ldr	r2, [r3, #0]
 8003cd0:	683b      	ldr	r3, [r7, #0]
 8003cd2:	601a      	str	r2, [r3, #0]
 8003cd4:	683b      	ldr	r3, [r7, #0]
 8003cd6:	685b      	ldr	r3, [r3, #4]
 8003cd8:	4a0a      	ldr	r2, [pc, #40]	; (8003d04 <prvHeapInit+0xb8>)
 8003cda:	6013      	str	r3, [r2, #0]
 8003cdc:	683b      	ldr	r3, [r7, #0]
 8003cde:	685b      	ldr	r3, [r3, #4]
 8003ce0:	4a09      	ldr	r2, [pc, #36]	; (8003d08 <prvHeapInit+0xbc>)
 8003ce2:	6013      	str	r3, [r2, #0]
 8003ce4:	4b09      	ldr	r3, [pc, #36]	; (8003d0c <prvHeapInit+0xc0>)
 8003ce6:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8003cea:	601a      	str	r2, [r3, #0]
 8003cec:	bf00      	nop
 8003cee:	3714      	adds	r7, #20
 8003cf0:	46bd      	mov	sp, r7
 8003cf2:	bc80      	pop	{r7}
 8003cf4:	4770      	bx	lr
 8003cf6:	bf00      	nop
 8003cf8:	200004f0 	.word	0x200004f0
 8003cfc:	200010f0 	.word	0x200010f0
 8003d00:	200010f8 	.word	0x200010f8
 8003d04:	20001100 	.word	0x20001100
 8003d08:	200010fc 	.word	0x200010fc
 8003d0c:	20001104 	.word	0x20001104

08003d10 <prvInsertBlockIntoFreeList>:
 8003d10:	b480      	push	{r7}
 8003d12:	b085      	sub	sp, #20
 8003d14:	af00      	add	r7, sp, #0
 8003d16:	6078      	str	r0, [r7, #4]
 8003d18:	4b27      	ldr	r3, [pc, #156]	; (8003db8 <prvInsertBlockIntoFreeList+0xa8>)
 8003d1a:	60fb      	str	r3, [r7, #12]
 8003d1c:	e002      	b.n	8003d24 <prvInsertBlockIntoFreeList+0x14>
 8003d1e:	68fb      	ldr	r3, [r7, #12]
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	60fb      	str	r3, [r7, #12]
 8003d24:	68fb      	ldr	r3, [r7, #12]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	687a      	ldr	r2, [r7, #4]
 8003d2a:	429a      	cmp	r2, r3
 8003d2c:	d8f7      	bhi.n	8003d1e <prvInsertBlockIntoFreeList+0xe>
 8003d2e:	68fb      	ldr	r3, [r7, #12]
 8003d30:	60bb      	str	r3, [r7, #8]
 8003d32:	68fb      	ldr	r3, [r7, #12]
 8003d34:	685b      	ldr	r3, [r3, #4]
 8003d36:	68ba      	ldr	r2, [r7, #8]
 8003d38:	4413      	add	r3, r2
 8003d3a:	687a      	ldr	r2, [r7, #4]
 8003d3c:	429a      	cmp	r2, r3
 8003d3e:	d108      	bne.n	8003d52 <prvInsertBlockIntoFreeList+0x42>
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	685a      	ldr	r2, [r3, #4]
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	685b      	ldr	r3, [r3, #4]
 8003d48:	441a      	add	r2, r3
 8003d4a:	68fb      	ldr	r3, [r7, #12]
 8003d4c:	605a      	str	r2, [r3, #4]
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	607b      	str	r3, [r7, #4]
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	60bb      	str	r3, [r7, #8]
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	685b      	ldr	r3, [r3, #4]
 8003d5a:	68ba      	ldr	r2, [r7, #8]
 8003d5c:	441a      	add	r2, r3
 8003d5e:	68fb      	ldr	r3, [r7, #12]
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	429a      	cmp	r2, r3
 8003d64:	d118      	bne.n	8003d98 <prvInsertBlockIntoFreeList+0x88>
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	681a      	ldr	r2, [r3, #0]
 8003d6a:	4b14      	ldr	r3, [pc, #80]	; (8003dbc <prvInsertBlockIntoFreeList+0xac>)
 8003d6c:	681b      	ldr	r3, [r3, #0]
 8003d6e:	429a      	cmp	r2, r3
 8003d70:	d00d      	beq.n	8003d8e <prvInsertBlockIntoFreeList+0x7e>
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	685a      	ldr	r2, [r3, #4]
 8003d76:	68fb      	ldr	r3, [r7, #12]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	685b      	ldr	r3, [r3, #4]
 8003d7c:	441a      	add	r2, r3
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	605a      	str	r2, [r3, #4]
 8003d82:	68fb      	ldr	r3, [r7, #12]
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	681a      	ldr	r2, [r3, #0]
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	601a      	str	r2, [r3, #0]
 8003d8c:	e008      	b.n	8003da0 <prvInsertBlockIntoFreeList+0x90>
 8003d8e:	4b0b      	ldr	r3, [pc, #44]	; (8003dbc <prvInsertBlockIntoFreeList+0xac>)
 8003d90:	681a      	ldr	r2, [r3, #0]
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	601a      	str	r2, [r3, #0]
 8003d96:	e003      	b.n	8003da0 <prvInsertBlockIntoFreeList+0x90>
 8003d98:	68fb      	ldr	r3, [r7, #12]
 8003d9a:	681a      	ldr	r2, [r3, #0]
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	601a      	str	r2, [r3, #0]
 8003da0:	68fa      	ldr	r2, [r7, #12]
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	429a      	cmp	r2, r3
 8003da6:	d002      	beq.n	8003dae <prvInsertBlockIntoFreeList+0x9e>
 8003da8:	68fb      	ldr	r3, [r7, #12]
 8003daa:	687a      	ldr	r2, [r7, #4]
 8003dac:	601a      	str	r2, [r3, #0]
 8003dae:	bf00      	nop
 8003db0:	3714      	adds	r7, #20
 8003db2:	46bd      	mov	sp, r7
 8003db4:	bc80      	pop	{r7}
 8003db6:	4770      	bx	lr
 8003db8:	200010f0 	.word	0x200010f0
 8003dbc:	200010f8 	.word	0x200010f8

08003dc0 <__errno>:
 8003dc0:	4b01      	ldr	r3, [pc, #4]	; (8003dc8 <__errno+0x8>)
 8003dc2:	6818      	ldr	r0, [r3, #0]
 8003dc4:	4770      	bx	lr
 8003dc6:	bf00      	nop
 8003dc8:	200000e0 	.word	0x200000e0

08003dcc <__libc_init_array>:
 8003dcc:	b570      	push	{r4, r5, r6, lr}
 8003dce:	2600      	movs	r6, #0
 8003dd0:	4d0c      	ldr	r5, [pc, #48]	; (8003e04 <__libc_init_array+0x38>)
 8003dd2:	4c0d      	ldr	r4, [pc, #52]	; (8003e08 <__libc_init_array+0x3c>)
 8003dd4:	1b64      	subs	r4, r4, r5
 8003dd6:	10a4      	asrs	r4, r4, #2
 8003dd8:	42a6      	cmp	r6, r4
 8003dda:	d109      	bne.n	8003df0 <__libc_init_array+0x24>
 8003ddc:	f001 fa7a 	bl	80052d4 <_init>
 8003de0:	2600      	movs	r6, #0
 8003de2:	4d0a      	ldr	r5, [pc, #40]	; (8003e0c <__libc_init_array+0x40>)
 8003de4:	4c0a      	ldr	r4, [pc, #40]	; (8003e10 <__libc_init_array+0x44>)
 8003de6:	1b64      	subs	r4, r4, r5
 8003de8:	10a4      	asrs	r4, r4, #2
 8003dea:	42a6      	cmp	r6, r4
 8003dec:	d105      	bne.n	8003dfa <__libc_init_array+0x2e>
 8003dee:	bd70      	pop	{r4, r5, r6, pc}
 8003df0:	f855 3b04 	ldr.w	r3, [r5], #4
 8003df4:	4798      	blx	r3
 8003df6:	3601      	adds	r6, #1
 8003df8:	e7ee      	b.n	8003dd8 <__libc_init_array+0xc>
 8003dfa:	f855 3b04 	ldr.w	r3, [r5], #4
 8003dfe:	4798      	blx	r3
 8003e00:	3601      	adds	r6, #1
 8003e02:	e7f2      	b.n	8003dea <__libc_init_array+0x1e>
 8003e04:	080054d8 	.word	0x080054d8
 8003e08:	080054d8 	.word	0x080054d8
 8003e0c:	080054d8 	.word	0x080054d8
 8003e10:	080054dc 	.word	0x080054dc

08003e14 <memcpy>:
 8003e14:	440a      	add	r2, r1
 8003e16:	4291      	cmp	r1, r2
 8003e18:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8003e1c:	d100      	bne.n	8003e20 <memcpy+0xc>
 8003e1e:	4770      	bx	lr
 8003e20:	b510      	push	{r4, lr}
 8003e22:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003e26:	4291      	cmp	r1, r2
 8003e28:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003e2c:	d1f9      	bne.n	8003e22 <memcpy+0xe>
 8003e2e:	bd10      	pop	{r4, pc}

08003e30 <memset>:
 8003e30:	4603      	mov	r3, r0
 8003e32:	4402      	add	r2, r0
 8003e34:	4293      	cmp	r3, r2
 8003e36:	d100      	bne.n	8003e3a <memset+0xa>
 8003e38:	4770      	bx	lr
 8003e3a:	f803 1b01 	strb.w	r1, [r3], #1
 8003e3e:	e7f9      	b.n	8003e34 <memset+0x4>

08003e40 <srand>:
 8003e40:	b538      	push	{r3, r4, r5, lr}
 8003e42:	4b10      	ldr	r3, [pc, #64]	; (8003e84 <srand+0x44>)
 8003e44:	4604      	mov	r4, r0
 8003e46:	681d      	ldr	r5, [r3, #0]
 8003e48:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8003e4a:	b9b3      	cbnz	r3, 8003e7a <srand+0x3a>
 8003e4c:	2018      	movs	r0, #24
 8003e4e:	f000 f8f9 	bl	8004044 <malloc>
 8003e52:	4602      	mov	r2, r0
 8003e54:	63a8      	str	r0, [r5, #56]	; 0x38
 8003e56:	b920      	cbnz	r0, 8003e62 <srand+0x22>
 8003e58:	2142      	movs	r1, #66	; 0x42
 8003e5a:	4b0b      	ldr	r3, [pc, #44]	; (8003e88 <srand+0x48>)
 8003e5c:	480b      	ldr	r0, [pc, #44]	; (8003e8c <srand+0x4c>)
 8003e5e:	f000 f8af 	bl	8003fc0 <__assert_func>
 8003e62:	490b      	ldr	r1, [pc, #44]	; (8003e90 <srand+0x50>)
 8003e64:	4b0b      	ldr	r3, [pc, #44]	; (8003e94 <srand+0x54>)
 8003e66:	e9c0 1300 	strd	r1, r3, [r0]
 8003e6a:	4b0b      	ldr	r3, [pc, #44]	; (8003e98 <srand+0x58>)
 8003e6c:	2100      	movs	r1, #0
 8003e6e:	6083      	str	r3, [r0, #8]
 8003e70:	230b      	movs	r3, #11
 8003e72:	8183      	strh	r3, [r0, #12]
 8003e74:	2001      	movs	r0, #1
 8003e76:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003e7a:	2200      	movs	r2, #0
 8003e7c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8003e7e:	611c      	str	r4, [r3, #16]
 8003e80:	615a      	str	r2, [r3, #20]
 8003e82:	bd38      	pop	{r3, r4, r5, pc}
 8003e84:	200000e0 	.word	0x200000e0
 8003e88:	08005390 	.word	0x08005390
 8003e8c:	080053a7 	.word	0x080053a7
 8003e90:	abcd330e 	.word	0xabcd330e
 8003e94:	e66d1234 	.word	0xe66d1234
 8003e98:	0005deec 	.word	0x0005deec

08003e9c <rand>:
 8003e9c:	4b17      	ldr	r3, [pc, #92]	; (8003efc <rand+0x60>)
 8003e9e:	b510      	push	{r4, lr}
 8003ea0:	681c      	ldr	r4, [r3, #0]
 8003ea2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003ea4:	b9b3      	cbnz	r3, 8003ed4 <rand+0x38>
 8003ea6:	2018      	movs	r0, #24
 8003ea8:	f000 f8cc 	bl	8004044 <malloc>
 8003eac:	4602      	mov	r2, r0
 8003eae:	63a0      	str	r0, [r4, #56]	; 0x38
 8003eb0:	b920      	cbnz	r0, 8003ebc <rand+0x20>
 8003eb2:	214e      	movs	r1, #78	; 0x4e
 8003eb4:	4b12      	ldr	r3, [pc, #72]	; (8003f00 <rand+0x64>)
 8003eb6:	4813      	ldr	r0, [pc, #76]	; (8003f04 <rand+0x68>)
 8003eb8:	f000 f882 	bl	8003fc0 <__assert_func>
 8003ebc:	4912      	ldr	r1, [pc, #72]	; (8003f08 <rand+0x6c>)
 8003ebe:	4b13      	ldr	r3, [pc, #76]	; (8003f0c <rand+0x70>)
 8003ec0:	e9c0 1300 	strd	r1, r3, [r0]
 8003ec4:	4b12      	ldr	r3, [pc, #72]	; (8003f10 <rand+0x74>)
 8003ec6:	2100      	movs	r1, #0
 8003ec8:	6083      	str	r3, [r0, #8]
 8003eca:	230b      	movs	r3, #11
 8003ecc:	8183      	strh	r3, [r0, #12]
 8003ece:	2001      	movs	r0, #1
 8003ed0:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003ed4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8003ed6:	480f      	ldr	r0, [pc, #60]	; (8003f14 <rand+0x78>)
 8003ed8:	690a      	ldr	r2, [r1, #16]
 8003eda:	694b      	ldr	r3, [r1, #20]
 8003edc:	4350      	muls	r0, r2
 8003ede:	4c0e      	ldr	r4, [pc, #56]	; (8003f18 <rand+0x7c>)
 8003ee0:	fb04 0003 	mla	r0, r4, r3, r0
 8003ee4:	fba2 3404 	umull	r3, r4, r2, r4
 8003ee8:	1c5a      	adds	r2, r3, #1
 8003eea:	4404      	add	r4, r0
 8003eec:	f144 0000 	adc.w	r0, r4, #0
 8003ef0:	e9c1 2004 	strd	r2, r0, [r1, #16]
 8003ef4:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8003ef8:	bd10      	pop	{r4, pc}
 8003efa:	bf00      	nop
 8003efc:	200000e0 	.word	0x200000e0
 8003f00:	08005390 	.word	0x08005390
 8003f04:	080053a7 	.word	0x080053a7
 8003f08:	abcd330e 	.word	0xabcd330e
 8003f0c:	e66d1234 	.word	0xe66d1234
 8003f10:	0005deec 	.word	0x0005deec
 8003f14:	5851f42d 	.word	0x5851f42d
 8003f18:	4c957f2d 	.word	0x4c957f2d

08003f1c <siprintf>:
 8003f1c:	b40e      	push	{r1, r2, r3}
 8003f1e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003f22:	b500      	push	{lr}
 8003f24:	b09c      	sub	sp, #112	; 0x70
 8003f26:	ab1d      	add	r3, sp, #116	; 0x74
 8003f28:	9002      	str	r0, [sp, #8]
 8003f2a:	9006      	str	r0, [sp, #24]
 8003f2c:	9107      	str	r1, [sp, #28]
 8003f2e:	9104      	str	r1, [sp, #16]
 8003f30:	4808      	ldr	r0, [pc, #32]	; (8003f54 <siprintf+0x38>)
 8003f32:	4909      	ldr	r1, [pc, #36]	; (8003f58 <siprintf+0x3c>)
 8003f34:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f38:	9105      	str	r1, [sp, #20]
 8003f3a:	6800      	ldr	r0, [r0, #0]
 8003f3c:	a902      	add	r1, sp, #8
 8003f3e:	9301      	str	r3, [sp, #4]
 8003f40:	f000 f98a 	bl	8004258 <_svfiprintf_r>
 8003f44:	2200      	movs	r2, #0
 8003f46:	9b02      	ldr	r3, [sp, #8]
 8003f48:	701a      	strb	r2, [r3, #0]
 8003f4a:	b01c      	add	sp, #112	; 0x70
 8003f4c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003f50:	b003      	add	sp, #12
 8003f52:	4770      	bx	lr
 8003f54:	200000e0 	.word	0x200000e0
 8003f58:	ffff0208 	.word	0xffff0208

08003f5c <strcat>:
 8003f5c:	4602      	mov	r2, r0
 8003f5e:	b510      	push	{r4, lr}
 8003f60:	7814      	ldrb	r4, [r2, #0]
 8003f62:	4613      	mov	r3, r2
 8003f64:	3201      	adds	r2, #1
 8003f66:	2c00      	cmp	r4, #0
 8003f68:	d1fa      	bne.n	8003f60 <strcat+0x4>
 8003f6a:	3b01      	subs	r3, #1
 8003f6c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003f70:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003f74:	2a00      	cmp	r2, #0
 8003f76:	d1f9      	bne.n	8003f6c <strcat+0x10>
 8003f78:	bd10      	pop	{r4, pc}

08003f7a <strcpy>:
 8003f7a:	4603      	mov	r3, r0
 8003f7c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003f80:	f803 2b01 	strb.w	r2, [r3], #1
 8003f84:	2a00      	cmp	r2, #0
 8003f86:	d1f9      	bne.n	8003f7c <strcpy+0x2>
 8003f88:	4770      	bx	lr
	...

08003f8c <time>:
 8003f8c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003f8e:	4b0b      	ldr	r3, [pc, #44]	; (8003fbc <time+0x30>)
 8003f90:	4604      	mov	r4, r0
 8003f92:	2200      	movs	r2, #0
 8003f94:	4669      	mov	r1, sp
 8003f96:	6818      	ldr	r0, [r3, #0]
 8003f98:	f000 f842 	bl	8004020 <_gettimeofday_r>
 8003f9c:	2800      	cmp	r0, #0
 8003f9e:	da05      	bge.n	8003fac <time+0x20>
 8003fa0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003fa4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003fa8:	e9cd 2300 	strd	r2, r3, [sp]
 8003fac:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003fb0:	b10c      	cbz	r4, 8003fb6 <time+0x2a>
 8003fb2:	e9c4 0100 	strd	r0, r1, [r4]
 8003fb6:	b004      	add	sp, #16
 8003fb8:	bd10      	pop	{r4, pc}
 8003fba:	bf00      	nop
 8003fbc:	200000e0 	.word	0x200000e0

08003fc0 <__assert_func>:
 8003fc0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003fc2:	4614      	mov	r4, r2
 8003fc4:	461a      	mov	r2, r3
 8003fc6:	4b09      	ldr	r3, [pc, #36]	; (8003fec <__assert_func+0x2c>)
 8003fc8:	4605      	mov	r5, r0
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	68d8      	ldr	r0, [r3, #12]
 8003fce:	b14c      	cbz	r4, 8003fe4 <__assert_func+0x24>
 8003fd0:	4b07      	ldr	r3, [pc, #28]	; (8003ff0 <__assert_func+0x30>)
 8003fd2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003fd6:	9100      	str	r1, [sp, #0]
 8003fd8:	462b      	mov	r3, r5
 8003fda:	4906      	ldr	r1, [pc, #24]	; (8003ff4 <__assert_func+0x34>)
 8003fdc:	f000 f80e 	bl	8003ffc <fiprintf>
 8003fe0:	f000 fdf8 	bl	8004bd4 <abort>
 8003fe4:	4b04      	ldr	r3, [pc, #16]	; (8003ff8 <__assert_func+0x38>)
 8003fe6:	461c      	mov	r4, r3
 8003fe8:	e7f3      	b.n	8003fd2 <__assert_func+0x12>
 8003fea:	bf00      	nop
 8003fec:	200000e0 	.word	0x200000e0
 8003ff0:	08005406 	.word	0x08005406
 8003ff4:	08005413 	.word	0x08005413
 8003ff8:	08005441 	.word	0x08005441

08003ffc <fiprintf>:
 8003ffc:	b40e      	push	{r1, r2, r3}
 8003ffe:	b503      	push	{r0, r1, lr}
 8004000:	4601      	mov	r1, r0
 8004002:	ab03      	add	r3, sp, #12
 8004004:	4805      	ldr	r0, [pc, #20]	; (800401c <fiprintf+0x20>)
 8004006:	f853 2b04 	ldr.w	r2, [r3], #4
 800400a:	6800      	ldr	r0, [r0, #0]
 800400c:	9301      	str	r3, [sp, #4]
 800400e:	f000 fa4b 	bl	80044a8 <_vfiprintf_r>
 8004012:	b002      	add	sp, #8
 8004014:	f85d eb04 	ldr.w	lr, [sp], #4
 8004018:	b003      	add	sp, #12
 800401a:	4770      	bx	lr
 800401c:	200000e0 	.word	0x200000e0

08004020 <_gettimeofday_r>:
 8004020:	b538      	push	{r3, r4, r5, lr}
 8004022:	2300      	movs	r3, #0
 8004024:	4d06      	ldr	r5, [pc, #24]	; (8004040 <_gettimeofday_r+0x20>)
 8004026:	4604      	mov	r4, r0
 8004028:	4608      	mov	r0, r1
 800402a:	4611      	mov	r1, r2
 800402c:	602b      	str	r3, [r5, #0]
 800402e:	f001 f949 	bl	80052c4 <_gettimeofday>
 8004032:	1c43      	adds	r3, r0, #1
 8004034:	d102      	bne.n	800403c <_gettimeofday_r+0x1c>
 8004036:	682b      	ldr	r3, [r5, #0]
 8004038:	b103      	cbz	r3, 800403c <_gettimeofday_r+0x1c>
 800403a:	6023      	str	r3, [r4, #0]
 800403c:	bd38      	pop	{r3, r4, r5, pc}
 800403e:	bf00      	nop
 8004040:	20001600 	.word	0x20001600

08004044 <malloc>:
 8004044:	4b02      	ldr	r3, [pc, #8]	; (8004050 <malloc+0xc>)
 8004046:	4601      	mov	r1, r0
 8004048:	6818      	ldr	r0, [r3, #0]
 800404a:	f000 b84f 	b.w	80040ec <_malloc_r>
 800404e:	bf00      	nop
 8004050:	200000e0 	.word	0x200000e0

08004054 <_free_r>:
 8004054:	b538      	push	{r3, r4, r5, lr}
 8004056:	4605      	mov	r5, r0
 8004058:	2900      	cmp	r1, #0
 800405a:	d043      	beq.n	80040e4 <_free_r+0x90>
 800405c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004060:	1f0c      	subs	r4, r1, #4
 8004062:	2b00      	cmp	r3, #0
 8004064:	bfb8      	it	lt
 8004066:	18e4      	addlt	r4, r4, r3
 8004068:	f001 f802 	bl	8005070 <__malloc_lock>
 800406c:	4a1e      	ldr	r2, [pc, #120]	; (80040e8 <_free_r+0x94>)
 800406e:	6813      	ldr	r3, [r2, #0]
 8004070:	4610      	mov	r0, r2
 8004072:	b933      	cbnz	r3, 8004082 <_free_r+0x2e>
 8004074:	6063      	str	r3, [r4, #4]
 8004076:	6014      	str	r4, [r2, #0]
 8004078:	4628      	mov	r0, r5
 800407a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800407e:	f000 bffd 	b.w	800507c <__malloc_unlock>
 8004082:	42a3      	cmp	r3, r4
 8004084:	d90a      	bls.n	800409c <_free_r+0x48>
 8004086:	6821      	ldr	r1, [r4, #0]
 8004088:	1862      	adds	r2, r4, r1
 800408a:	4293      	cmp	r3, r2
 800408c:	bf01      	itttt	eq
 800408e:	681a      	ldreq	r2, [r3, #0]
 8004090:	685b      	ldreq	r3, [r3, #4]
 8004092:	1852      	addeq	r2, r2, r1
 8004094:	6022      	streq	r2, [r4, #0]
 8004096:	6063      	str	r3, [r4, #4]
 8004098:	6004      	str	r4, [r0, #0]
 800409a:	e7ed      	b.n	8004078 <_free_r+0x24>
 800409c:	461a      	mov	r2, r3
 800409e:	685b      	ldr	r3, [r3, #4]
 80040a0:	b10b      	cbz	r3, 80040a6 <_free_r+0x52>
 80040a2:	42a3      	cmp	r3, r4
 80040a4:	d9fa      	bls.n	800409c <_free_r+0x48>
 80040a6:	6811      	ldr	r1, [r2, #0]
 80040a8:	1850      	adds	r0, r2, r1
 80040aa:	42a0      	cmp	r0, r4
 80040ac:	d10b      	bne.n	80040c6 <_free_r+0x72>
 80040ae:	6820      	ldr	r0, [r4, #0]
 80040b0:	4401      	add	r1, r0
 80040b2:	1850      	adds	r0, r2, r1
 80040b4:	4283      	cmp	r3, r0
 80040b6:	6011      	str	r1, [r2, #0]
 80040b8:	d1de      	bne.n	8004078 <_free_r+0x24>
 80040ba:	6818      	ldr	r0, [r3, #0]
 80040bc:	685b      	ldr	r3, [r3, #4]
 80040be:	4401      	add	r1, r0
 80040c0:	6011      	str	r1, [r2, #0]
 80040c2:	6053      	str	r3, [r2, #4]
 80040c4:	e7d8      	b.n	8004078 <_free_r+0x24>
 80040c6:	d902      	bls.n	80040ce <_free_r+0x7a>
 80040c8:	230c      	movs	r3, #12
 80040ca:	602b      	str	r3, [r5, #0]
 80040cc:	e7d4      	b.n	8004078 <_free_r+0x24>
 80040ce:	6820      	ldr	r0, [r4, #0]
 80040d0:	1821      	adds	r1, r4, r0
 80040d2:	428b      	cmp	r3, r1
 80040d4:	bf01      	itttt	eq
 80040d6:	6819      	ldreq	r1, [r3, #0]
 80040d8:	685b      	ldreq	r3, [r3, #4]
 80040da:	1809      	addeq	r1, r1, r0
 80040dc:	6021      	streq	r1, [r4, #0]
 80040de:	6063      	str	r3, [r4, #4]
 80040e0:	6054      	str	r4, [r2, #4]
 80040e2:	e7c9      	b.n	8004078 <_free_r+0x24>
 80040e4:	bd38      	pop	{r3, r4, r5, pc}
 80040e6:	bf00      	nop
 80040e8:	20001108 	.word	0x20001108

080040ec <_malloc_r>:
 80040ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040ee:	1ccd      	adds	r5, r1, #3
 80040f0:	f025 0503 	bic.w	r5, r5, #3
 80040f4:	3508      	adds	r5, #8
 80040f6:	2d0c      	cmp	r5, #12
 80040f8:	bf38      	it	cc
 80040fa:	250c      	movcc	r5, #12
 80040fc:	2d00      	cmp	r5, #0
 80040fe:	4606      	mov	r6, r0
 8004100:	db01      	blt.n	8004106 <_malloc_r+0x1a>
 8004102:	42a9      	cmp	r1, r5
 8004104:	d903      	bls.n	800410e <_malloc_r+0x22>
 8004106:	230c      	movs	r3, #12
 8004108:	6033      	str	r3, [r6, #0]
 800410a:	2000      	movs	r0, #0
 800410c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800410e:	f000 ffaf 	bl	8005070 <__malloc_lock>
 8004112:	4921      	ldr	r1, [pc, #132]	; (8004198 <_malloc_r+0xac>)
 8004114:	680a      	ldr	r2, [r1, #0]
 8004116:	4614      	mov	r4, r2
 8004118:	b99c      	cbnz	r4, 8004142 <_malloc_r+0x56>
 800411a:	4f20      	ldr	r7, [pc, #128]	; (800419c <_malloc_r+0xb0>)
 800411c:	683b      	ldr	r3, [r7, #0]
 800411e:	b923      	cbnz	r3, 800412a <_malloc_r+0x3e>
 8004120:	4621      	mov	r1, r4
 8004122:	4630      	mov	r0, r6
 8004124:	f000 fc86 	bl	8004a34 <_sbrk_r>
 8004128:	6038      	str	r0, [r7, #0]
 800412a:	4629      	mov	r1, r5
 800412c:	4630      	mov	r0, r6
 800412e:	f000 fc81 	bl	8004a34 <_sbrk_r>
 8004132:	1c43      	adds	r3, r0, #1
 8004134:	d123      	bne.n	800417e <_malloc_r+0x92>
 8004136:	230c      	movs	r3, #12
 8004138:	4630      	mov	r0, r6
 800413a:	6033      	str	r3, [r6, #0]
 800413c:	f000 ff9e 	bl	800507c <__malloc_unlock>
 8004140:	e7e3      	b.n	800410a <_malloc_r+0x1e>
 8004142:	6823      	ldr	r3, [r4, #0]
 8004144:	1b5b      	subs	r3, r3, r5
 8004146:	d417      	bmi.n	8004178 <_malloc_r+0x8c>
 8004148:	2b0b      	cmp	r3, #11
 800414a:	d903      	bls.n	8004154 <_malloc_r+0x68>
 800414c:	6023      	str	r3, [r4, #0]
 800414e:	441c      	add	r4, r3
 8004150:	6025      	str	r5, [r4, #0]
 8004152:	e004      	b.n	800415e <_malloc_r+0x72>
 8004154:	6863      	ldr	r3, [r4, #4]
 8004156:	42a2      	cmp	r2, r4
 8004158:	bf0c      	ite	eq
 800415a:	600b      	streq	r3, [r1, #0]
 800415c:	6053      	strne	r3, [r2, #4]
 800415e:	4630      	mov	r0, r6
 8004160:	f000 ff8c 	bl	800507c <__malloc_unlock>
 8004164:	f104 000b 	add.w	r0, r4, #11
 8004168:	1d23      	adds	r3, r4, #4
 800416a:	f020 0007 	bic.w	r0, r0, #7
 800416e:	1ac2      	subs	r2, r0, r3
 8004170:	d0cc      	beq.n	800410c <_malloc_r+0x20>
 8004172:	1a1b      	subs	r3, r3, r0
 8004174:	50a3      	str	r3, [r4, r2]
 8004176:	e7c9      	b.n	800410c <_malloc_r+0x20>
 8004178:	4622      	mov	r2, r4
 800417a:	6864      	ldr	r4, [r4, #4]
 800417c:	e7cc      	b.n	8004118 <_malloc_r+0x2c>
 800417e:	1cc4      	adds	r4, r0, #3
 8004180:	f024 0403 	bic.w	r4, r4, #3
 8004184:	42a0      	cmp	r0, r4
 8004186:	d0e3      	beq.n	8004150 <_malloc_r+0x64>
 8004188:	1a21      	subs	r1, r4, r0
 800418a:	4630      	mov	r0, r6
 800418c:	f000 fc52 	bl	8004a34 <_sbrk_r>
 8004190:	3001      	adds	r0, #1
 8004192:	d1dd      	bne.n	8004150 <_malloc_r+0x64>
 8004194:	e7cf      	b.n	8004136 <_malloc_r+0x4a>
 8004196:	bf00      	nop
 8004198:	20001108 	.word	0x20001108
 800419c:	2000110c 	.word	0x2000110c

080041a0 <__ssputs_r>:
 80041a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80041a4:	688e      	ldr	r6, [r1, #8]
 80041a6:	4682      	mov	sl, r0
 80041a8:	429e      	cmp	r6, r3
 80041aa:	460c      	mov	r4, r1
 80041ac:	4690      	mov	r8, r2
 80041ae:	461f      	mov	r7, r3
 80041b0:	d838      	bhi.n	8004224 <__ssputs_r+0x84>
 80041b2:	898a      	ldrh	r2, [r1, #12]
 80041b4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80041b8:	d032      	beq.n	8004220 <__ssputs_r+0x80>
 80041ba:	6825      	ldr	r5, [r4, #0]
 80041bc:	6909      	ldr	r1, [r1, #16]
 80041be:	3301      	adds	r3, #1
 80041c0:	eba5 0901 	sub.w	r9, r5, r1
 80041c4:	6965      	ldr	r5, [r4, #20]
 80041c6:	444b      	add	r3, r9
 80041c8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80041cc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80041d0:	106d      	asrs	r5, r5, #1
 80041d2:	429d      	cmp	r5, r3
 80041d4:	bf38      	it	cc
 80041d6:	461d      	movcc	r5, r3
 80041d8:	0553      	lsls	r3, r2, #21
 80041da:	d531      	bpl.n	8004240 <__ssputs_r+0xa0>
 80041dc:	4629      	mov	r1, r5
 80041de:	f7ff ff85 	bl	80040ec <_malloc_r>
 80041e2:	4606      	mov	r6, r0
 80041e4:	b950      	cbnz	r0, 80041fc <__ssputs_r+0x5c>
 80041e6:	230c      	movs	r3, #12
 80041e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80041ec:	f8ca 3000 	str.w	r3, [sl]
 80041f0:	89a3      	ldrh	r3, [r4, #12]
 80041f2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80041f6:	81a3      	strh	r3, [r4, #12]
 80041f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80041fc:	464a      	mov	r2, r9
 80041fe:	6921      	ldr	r1, [r4, #16]
 8004200:	f7ff fe08 	bl	8003e14 <memcpy>
 8004204:	89a3      	ldrh	r3, [r4, #12]
 8004206:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800420a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800420e:	81a3      	strh	r3, [r4, #12]
 8004210:	6126      	str	r6, [r4, #16]
 8004212:	444e      	add	r6, r9
 8004214:	6026      	str	r6, [r4, #0]
 8004216:	463e      	mov	r6, r7
 8004218:	6165      	str	r5, [r4, #20]
 800421a:	eba5 0509 	sub.w	r5, r5, r9
 800421e:	60a5      	str	r5, [r4, #8]
 8004220:	42be      	cmp	r6, r7
 8004222:	d900      	bls.n	8004226 <__ssputs_r+0x86>
 8004224:	463e      	mov	r6, r7
 8004226:	4632      	mov	r2, r6
 8004228:	4641      	mov	r1, r8
 800422a:	6820      	ldr	r0, [r4, #0]
 800422c:	f000 ff06 	bl	800503c <memmove>
 8004230:	68a3      	ldr	r3, [r4, #8]
 8004232:	6822      	ldr	r2, [r4, #0]
 8004234:	1b9b      	subs	r3, r3, r6
 8004236:	4432      	add	r2, r6
 8004238:	2000      	movs	r0, #0
 800423a:	60a3      	str	r3, [r4, #8]
 800423c:	6022      	str	r2, [r4, #0]
 800423e:	e7db      	b.n	80041f8 <__ssputs_r+0x58>
 8004240:	462a      	mov	r2, r5
 8004242:	f000 ff21 	bl	8005088 <_realloc_r>
 8004246:	4606      	mov	r6, r0
 8004248:	2800      	cmp	r0, #0
 800424a:	d1e1      	bne.n	8004210 <__ssputs_r+0x70>
 800424c:	4650      	mov	r0, sl
 800424e:	6921      	ldr	r1, [r4, #16]
 8004250:	f7ff ff00 	bl	8004054 <_free_r>
 8004254:	e7c7      	b.n	80041e6 <__ssputs_r+0x46>
	...

08004258 <_svfiprintf_r>:
 8004258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800425c:	4698      	mov	r8, r3
 800425e:	898b      	ldrh	r3, [r1, #12]
 8004260:	4607      	mov	r7, r0
 8004262:	061b      	lsls	r3, r3, #24
 8004264:	460d      	mov	r5, r1
 8004266:	4614      	mov	r4, r2
 8004268:	b09d      	sub	sp, #116	; 0x74
 800426a:	d50e      	bpl.n	800428a <_svfiprintf_r+0x32>
 800426c:	690b      	ldr	r3, [r1, #16]
 800426e:	b963      	cbnz	r3, 800428a <_svfiprintf_r+0x32>
 8004270:	2140      	movs	r1, #64	; 0x40
 8004272:	f7ff ff3b 	bl	80040ec <_malloc_r>
 8004276:	6028      	str	r0, [r5, #0]
 8004278:	6128      	str	r0, [r5, #16]
 800427a:	b920      	cbnz	r0, 8004286 <_svfiprintf_r+0x2e>
 800427c:	230c      	movs	r3, #12
 800427e:	603b      	str	r3, [r7, #0]
 8004280:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004284:	e0d1      	b.n	800442a <_svfiprintf_r+0x1d2>
 8004286:	2340      	movs	r3, #64	; 0x40
 8004288:	616b      	str	r3, [r5, #20]
 800428a:	2300      	movs	r3, #0
 800428c:	9309      	str	r3, [sp, #36]	; 0x24
 800428e:	2320      	movs	r3, #32
 8004290:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004294:	2330      	movs	r3, #48	; 0x30
 8004296:	f04f 0901 	mov.w	r9, #1
 800429a:	f8cd 800c 	str.w	r8, [sp, #12]
 800429e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004444 <_svfiprintf_r+0x1ec>
 80042a2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80042a6:	4623      	mov	r3, r4
 80042a8:	469a      	mov	sl, r3
 80042aa:	f813 2b01 	ldrb.w	r2, [r3], #1
 80042ae:	b10a      	cbz	r2, 80042b4 <_svfiprintf_r+0x5c>
 80042b0:	2a25      	cmp	r2, #37	; 0x25
 80042b2:	d1f9      	bne.n	80042a8 <_svfiprintf_r+0x50>
 80042b4:	ebba 0b04 	subs.w	fp, sl, r4
 80042b8:	d00b      	beq.n	80042d2 <_svfiprintf_r+0x7a>
 80042ba:	465b      	mov	r3, fp
 80042bc:	4622      	mov	r2, r4
 80042be:	4629      	mov	r1, r5
 80042c0:	4638      	mov	r0, r7
 80042c2:	f7ff ff6d 	bl	80041a0 <__ssputs_r>
 80042c6:	3001      	adds	r0, #1
 80042c8:	f000 80aa 	beq.w	8004420 <_svfiprintf_r+0x1c8>
 80042cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80042ce:	445a      	add	r2, fp
 80042d0:	9209      	str	r2, [sp, #36]	; 0x24
 80042d2:	f89a 3000 	ldrb.w	r3, [sl]
 80042d6:	2b00      	cmp	r3, #0
 80042d8:	f000 80a2 	beq.w	8004420 <_svfiprintf_r+0x1c8>
 80042dc:	2300      	movs	r3, #0
 80042de:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80042e2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80042e6:	f10a 0a01 	add.w	sl, sl, #1
 80042ea:	9304      	str	r3, [sp, #16]
 80042ec:	9307      	str	r3, [sp, #28]
 80042ee:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80042f2:	931a      	str	r3, [sp, #104]	; 0x68
 80042f4:	4654      	mov	r4, sl
 80042f6:	2205      	movs	r2, #5
 80042f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80042fc:	4851      	ldr	r0, [pc, #324]	; (8004444 <_svfiprintf_r+0x1ec>)
 80042fe:	f000 fe8f 	bl	8005020 <memchr>
 8004302:	9a04      	ldr	r2, [sp, #16]
 8004304:	b9d8      	cbnz	r0, 800433e <_svfiprintf_r+0xe6>
 8004306:	06d0      	lsls	r0, r2, #27
 8004308:	bf44      	itt	mi
 800430a:	2320      	movmi	r3, #32
 800430c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004310:	0711      	lsls	r1, r2, #28
 8004312:	bf44      	itt	mi
 8004314:	232b      	movmi	r3, #43	; 0x2b
 8004316:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800431a:	f89a 3000 	ldrb.w	r3, [sl]
 800431e:	2b2a      	cmp	r3, #42	; 0x2a
 8004320:	d015      	beq.n	800434e <_svfiprintf_r+0xf6>
 8004322:	4654      	mov	r4, sl
 8004324:	2000      	movs	r0, #0
 8004326:	f04f 0c0a 	mov.w	ip, #10
 800432a:	9a07      	ldr	r2, [sp, #28]
 800432c:	4621      	mov	r1, r4
 800432e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004332:	3b30      	subs	r3, #48	; 0x30
 8004334:	2b09      	cmp	r3, #9
 8004336:	d94e      	bls.n	80043d6 <_svfiprintf_r+0x17e>
 8004338:	b1b0      	cbz	r0, 8004368 <_svfiprintf_r+0x110>
 800433a:	9207      	str	r2, [sp, #28]
 800433c:	e014      	b.n	8004368 <_svfiprintf_r+0x110>
 800433e:	eba0 0308 	sub.w	r3, r0, r8
 8004342:	fa09 f303 	lsl.w	r3, r9, r3
 8004346:	4313      	orrs	r3, r2
 8004348:	46a2      	mov	sl, r4
 800434a:	9304      	str	r3, [sp, #16]
 800434c:	e7d2      	b.n	80042f4 <_svfiprintf_r+0x9c>
 800434e:	9b03      	ldr	r3, [sp, #12]
 8004350:	1d19      	adds	r1, r3, #4
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	9103      	str	r1, [sp, #12]
 8004356:	2b00      	cmp	r3, #0
 8004358:	bfbb      	ittet	lt
 800435a:	425b      	neglt	r3, r3
 800435c:	f042 0202 	orrlt.w	r2, r2, #2
 8004360:	9307      	strge	r3, [sp, #28]
 8004362:	9307      	strlt	r3, [sp, #28]
 8004364:	bfb8      	it	lt
 8004366:	9204      	strlt	r2, [sp, #16]
 8004368:	7823      	ldrb	r3, [r4, #0]
 800436a:	2b2e      	cmp	r3, #46	; 0x2e
 800436c:	d10c      	bne.n	8004388 <_svfiprintf_r+0x130>
 800436e:	7863      	ldrb	r3, [r4, #1]
 8004370:	2b2a      	cmp	r3, #42	; 0x2a
 8004372:	d135      	bne.n	80043e0 <_svfiprintf_r+0x188>
 8004374:	9b03      	ldr	r3, [sp, #12]
 8004376:	3402      	adds	r4, #2
 8004378:	1d1a      	adds	r2, r3, #4
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	9203      	str	r2, [sp, #12]
 800437e:	2b00      	cmp	r3, #0
 8004380:	bfb8      	it	lt
 8004382:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8004386:	9305      	str	r3, [sp, #20]
 8004388:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8004454 <_svfiprintf_r+0x1fc>
 800438c:	2203      	movs	r2, #3
 800438e:	4650      	mov	r0, sl
 8004390:	7821      	ldrb	r1, [r4, #0]
 8004392:	f000 fe45 	bl	8005020 <memchr>
 8004396:	b140      	cbz	r0, 80043aa <_svfiprintf_r+0x152>
 8004398:	2340      	movs	r3, #64	; 0x40
 800439a:	eba0 000a 	sub.w	r0, r0, sl
 800439e:	fa03 f000 	lsl.w	r0, r3, r0
 80043a2:	9b04      	ldr	r3, [sp, #16]
 80043a4:	3401      	adds	r4, #1
 80043a6:	4303      	orrs	r3, r0
 80043a8:	9304      	str	r3, [sp, #16]
 80043aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80043ae:	2206      	movs	r2, #6
 80043b0:	4825      	ldr	r0, [pc, #148]	; (8004448 <_svfiprintf_r+0x1f0>)
 80043b2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80043b6:	f000 fe33 	bl	8005020 <memchr>
 80043ba:	2800      	cmp	r0, #0
 80043bc:	d038      	beq.n	8004430 <_svfiprintf_r+0x1d8>
 80043be:	4b23      	ldr	r3, [pc, #140]	; (800444c <_svfiprintf_r+0x1f4>)
 80043c0:	bb1b      	cbnz	r3, 800440a <_svfiprintf_r+0x1b2>
 80043c2:	9b03      	ldr	r3, [sp, #12]
 80043c4:	3307      	adds	r3, #7
 80043c6:	f023 0307 	bic.w	r3, r3, #7
 80043ca:	3308      	adds	r3, #8
 80043cc:	9303      	str	r3, [sp, #12]
 80043ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043d0:	4433      	add	r3, r6
 80043d2:	9309      	str	r3, [sp, #36]	; 0x24
 80043d4:	e767      	b.n	80042a6 <_svfiprintf_r+0x4e>
 80043d6:	460c      	mov	r4, r1
 80043d8:	2001      	movs	r0, #1
 80043da:	fb0c 3202 	mla	r2, ip, r2, r3
 80043de:	e7a5      	b.n	800432c <_svfiprintf_r+0xd4>
 80043e0:	2300      	movs	r3, #0
 80043e2:	f04f 0c0a 	mov.w	ip, #10
 80043e6:	4619      	mov	r1, r3
 80043e8:	3401      	adds	r4, #1
 80043ea:	9305      	str	r3, [sp, #20]
 80043ec:	4620      	mov	r0, r4
 80043ee:	f810 2b01 	ldrb.w	r2, [r0], #1
 80043f2:	3a30      	subs	r2, #48	; 0x30
 80043f4:	2a09      	cmp	r2, #9
 80043f6:	d903      	bls.n	8004400 <_svfiprintf_r+0x1a8>
 80043f8:	2b00      	cmp	r3, #0
 80043fa:	d0c5      	beq.n	8004388 <_svfiprintf_r+0x130>
 80043fc:	9105      	str	r1, [sp, #20]
 80043fe:	e7c3      	b.n	8004388 <_svfiprintf_r+0x130>
 8004400:	4604      	mov	r4, r0
 8004402:	2301      	movs	r3, #1
 8004404:	fb0c 2101 	mla	r1, ip, r1, r2
 8004408:	e7f0      	b.n	80043ec <_svfiprintf_r+0x194>
 800440a:	ab03      	add	r3, sp, #12
 800440c:	9300      	str	r3, [sp, #0]
 800440e:	462a      	mov	r2, r5
 8004410:	4638      	mov	r0, r7
 8004412:	4b0f      	ldr	r3, [pc, #60]	; (8004450 <_svfiprintf_r+0x1f8>)
 8004414:	a904      	add	r1, sp, #16
 8004416:	f3af 8000 	nop.w
 800441a:	1c42      	adds	r2, r0, #1
 800441c:	4606      	mov	r6, r0
 800441e:	d1d6      	bne.n	80043ce <_svfiprintf_r+0x176>
 8004420:	89ab      	ldrh	r3, [r5, #12]
 8004422:	065b      	lsls	r3, r3, #25
 8004424:	f53f af2c 	bmi.w	8004280 <_svfiprintf_r+0x28>
 8004428:	9809      	ldr	r0, [sp, #36]	; 0x24
 800442a:	b01d      	add	sp, #116	; 0x74
 800442c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004430:	ab03      	add	r3, sp, #12
 8004432:	9300      	str	r3, [sp, #0]
 8004434:	462a      	mov	r2, r5
 8004436:	4638      	mov	r0, r7
 8004438:	4b05      	ldr	r3, [pc, #20]	; (8004450 <_svfiprintf_r+0x1f8>)
 800443a:	a904      	add	r1, sp, #16
 800443c:	f000 f9d4 	bl	80047e8 <_printf_i>
 8004440:	e7eb      	b.n	800441a <_svfiprintf_r+0x1c2>
 8004442:	bf00      	nop
 8004444:	08005442 	.word	0x08005442
 8004448:	0800544c 	.word	0x0800544c
 800444c:	00000000 	.word	0x00000000
 8004450:	080041a1 	.word	0x080041a1
 8004454:	08005448 	.word	0x08005448

08004458 <__sfputc_r>:
 8004458:	6893      	ldr	r3, [r2, #8]
 800445a:	b410      	push	{r4}
 800445c:	3b01      	subs	r3, #1
 800445e:	2b00      	cmp	r3, #0
 8004460:	6093      	str	r3, [r2, #8]
 8004462:	da07      	bge.n	8004474 <__sfputc_r+0x1c>
 8004464:	6994      	ldr	r4, [r2, #24]
 8004466:	42a3      	cmp	r3, r4
 8004468:	db01      	blt.n	800446e <__sfputc_r+0x16>
 800446a:	290a      	cmp	r1, #10
 800446c:	d102      	bne.n	8004474 <__sfputc_r+0x1c>
 800446e:	bc10      	pop	{r4}
 8004470:	f000 baf0 	b.w	8004a54 <__swbuf_r>
 8004474:	6813      	ldr	r3, [r2, #0]
 8004476:	1c58      	adds	r0, r3, #1
 8004478:	6010      	str	r0, [r2, #0]
 800447a:	7019      	strb	r1, [r3, #0]
 800447c:	4608      	mov	r0, r1
 800447e:	bc10      	pop	{r4}
 8004480:	4770      	bx	lr

08004482 <__sfputs_r>:
 8004482:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004484:	4606      	mov	r6, r0
 8004486:	460f      	mov	r7, r1
 8004488:	4614      	mov	r4, r2
 800448a:	18d5      	adds	r5, r2, r3
 800448c:	42ac      	cmp	r4, r5
 800448e:	d101      	bne.n	8004494 <__sfputs_r+0x12>
 8004490:	2000      	movs	r0, #0
 8004492:	e007      	b.n	80044a4 <__sfputs_r+0x22>
 8004494:	463a      	mov	r2, r7
 8004496:	4630      	mov	r0, r6
 8004498:	f814 1b01 	ldrb.w	r1, [r4], #1
 800449c:	f7ff ffdc 	bl	8004458 <__sfputc_r>
 80044a0:	1c43      	adds	r3, r0, #1
 80044a2:	d1f3      	bne.n	800448c <__sfputs_r+0xa>
 80044a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080044a8 <_vfiprintf_r>:
 80044a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044ac:	460d      	mov	r5, r1
 80044ae:	4614      	mov	r4, r2
 80044b0:	4698      	mov	r8, r3
 80044b2:	4606      	mov	r6, r0
 80044b4:	b09d      	sub	sp, #116	; 0x74
 80044b6:	b118      	cbz	r0, 80044c0 <_vfiprintf_r+0x18>
 80044b8:	6983      	ldr	r3, [r0, #24]
 80044ba:	b90b      	cbnz	r3, 80044c0 <_vfiprintf_r+0x18>
 80044bc:	f000 fcac 	bl	8004e18 <__sinit>
 80044c0:	4b89      	ldr	r3, [pc, #548]	; (80046e8 <_vfiprintf_r+0x240>)
 80044c2:	429d      	cmp	r5, r3
 80044c4:	d11b      	bne.n	80044fe <_vfiprintf_r+0x56>
 80044c6:	6875      	ldr	r5, [r6, #4]
 80044c8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80044ca:	07d9      	lsls	r1, r3, #31
 80044cc:	d405      	bmi.n	80044da <_vfiprintf_r+0x32>
 80044ce:	89ab      	ldrh	r3, [r5, #12]
 80044d0:	059a      	lsls	r2, r3, #22
 80044d2:	d402      	bmi.n	80044da <_vfiprintf_r+0x32>
 80044d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80044d6:	f000 fd3d 	bl	8004f54 <__retarget_lock_acquire_recursive>
 80044da:	89ab      	ldrh	r3, [r5, #12]
 80044dc:	071b      	lsls	r3, r3, #28
 80044de:	d501      	bpl.n	80044e4 <_vfiprintf_r+0x3c>
 80044e0:	692b      	ldr	r3, [r5, #16]
 80044e2:	b9eb      	cbnz	r3, 8004520 <_vfiprintf_r+0x78>
 80044e4:	4629      	mov	r1, r5
 80044e6:	4630      	mov	r0, r6
 80044e8:	f000 fb06 	bl	8004af8 <__swsetup_r>
 80044ec:	b1c0      	cbz	r0, 8004520 <_vfiprintf_r+0x78>
 80044ee:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80044f0:	07dc      	lsls	r4, r3, #31
 80044f2:	d50e      	bpl.n	8004512 <_vfiprintf_r+0x6a>
 80044f4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80044f8:	b01d      	add	sp, #116	; 0x74
 80044fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80044fe:	4b7b      	ldr	r3, [pc, #492]	; (80046ec <_vfiprintf_r+0x244>)
 8004500:	429d      	cmp	r5, r3
 8004502:	d101      	bne.n	8004508 <_vfiprintf_r+0x60>
 8004504:	68b5      	ldr	r5, [r6, #8]
 8004506:	e7df      	b.n	80044c8 <_vfiprintf_r+0x20>
 8004508:	4b79      	ldr	r3, [pc, #484]	; (80046f0 <_vfiprintf_r+0x248>)
 800450a:	429d      	cmp	r5, r3
 800450c:	bf08      	it	eq
 800450e:	68f5      	ldreq	r5, [r6, #12]
 8004510:	e7da      	b.n	80044c8 <_vfiprintf_r+0x20>
 8004512:	89ab      	ldrh	r3, [r5, #12]
 8004514:	0598      	lsls	r0, r3, #22
 8004516:	d4ed      	bmi.n	80044f4 <_vfiprintf_r+0x4c>
 8004518:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800451a:	f000 fd1c 	bl	8004f56 <__retarget_lock_release_recursive>
 800451e:	e7e9      	b.n	80044f4 <_vfiprintf_r+0x4c>
 8004520:	2300      	movs	r3, #0
 8004522:	9309      	str	r3, [sp, #36]	; 0x24
 8004524:	2320      	movs	r3, #32
 8004526:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800452a:	2330      	movs	r3, #48	; 0x30
 800452c:	f04f 0901 	mov.w	r9, #1
 8004530:	f8cd 800c 	str.w	r8, [sp, #12]
 8004534:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 80046f4 <_vfiprintf_r+0x24c>
 8004538:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800453c:	4623      	mov	r3, r4
 800453e:	469a      	mov	sl, r3
 8004540:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004544:	b10a      	cbz	r2, 800454a <_vfiprintf_r+0xa2>
 8004546:	2a25      	cmp	r2, #37	; 0x25
 8004548:	d1f9      	bne.n	800453e <_vfiprintf_r+0x96>
 800454a:	ebba 0b04 	subs.w	fp, sl, r4
 800454e:	d00b      	beq.n	8004568 <_vfiprintf_r+0xc0>
 8004550:	465b      	mov	r3, fp
 8004552:	4622      	mov	r2, r4
 8004554:	4629      	mov	r1, r5
 8004556:	4630      	mov	r0, r6
 8004558:	f7ff ff93 	bl	8004482 <__sfputs_r>
 800455c:	3001      	adds	r0, #1
 800455e:	f000 80aa 	beq.w	80046b6 <_vfiprintf_r+0x20e>
 8004562:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004564:	445a      	add	r2, fp
 8004566:	9209      	str	r2, [sp, #36]	; 0x24
 8004568:	f89a 3000 	ldrb.w	r3, [sl]
 800456c:	2b00      	cmp	r3, #0
 800456e:	f000 80a2 	beq.w	80046b6 <_vfiprintf_r+0x20e>
 8004572:	2300      	movs	r3, #0
 8004574:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004578:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800457c:	f10a 0a01 	add.w	sl, sl, #1
 8004580:	9304      	str	r3, [sp, #16]
 8004582:	9307      	str	r3, [sp, #28]
 8004584:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004588:	931a      	str	r3, [sp, #104]	; 0x68
 800458a:	4654      	mov	r4, sl
 800458c:	2205      	movs	r2, #5
 800458e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004592:	4858      	ldr	r0, [pc, #352]	; (80046f4 <_vfiprintf_r+0x24c>)
 8004594:	f000 fd44 	bl	8005020 <memchr>
 8004598:	9a04      	ldr	r2, [sp, #16]
 800459a:	b9d8      	cbnz	r0, 80045d4 <_vfiprintf_r+0x12c>
 800459c:	06d1      	lsls	r1, r2, #27
 800459e:	bf44      	itt	mi
 80045a0:	2320      	movmi	r3, #32
 80045a2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80045a6:	0713      	lsls	r3, r2, #28
 80045a8:	bf44      	itt	mi
 80045aa:	232b      	movmi	r3, #43	; 0x2b
 80045ac:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80045b0:	f89a 3000 	ldrb.w	r3, [sl]
 80045b4:	2b2a      	cmp	r3, #42	; 0x2a
 80045b6:	d015      	beq.n	80045e4 <_vfiprintf_r+0x13c>
 80045b8:	4654      	mov	r4, sl
 80045ba:	2000      	movs	r0, #0
 80045bc:	f04f 0c0a 	mov.w	ip, #10
 80045c0:	9a07      	ldr	r2, [sp, #28]
 80045c2:	4621      	mov	r1, r4
 80045c4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80045c8:	3b30      	subs	r3, #48	; 0x30
 80045ca:	2b09      	cmp	r3, #9
 80045cc:	d94e      	bls.n	800466c <_vfiprintf_r+0x1c4>
 80045ce:	b1b0      	cbz	r0, 80045fe <_vfiprintf_r+0x156>
 80045d0:	9207      	str	r2, [sp, #28]
 80045d2:	e014      	b.n	80045fe <_vfiprintf_r+0x156>
 80045d4:	eba0 0308 	sub.w	r3, r0, r8
 80045d8:	fa09 f303 	lsl.w	r3, r9, r3
 80045dc:	4313      	orrs	r3, r2
 80045de:	46a2      	mov	sl, r4
 80045e0:	9304      	str	r3, [sp, #16]
 80045e2:	e7d2      	b.n	800458a <_vfiprintf_r+0xe2>
 80045e4:	9b03      	ldr	r3, [sp, #12]
 80045e6:	1d19      	adds	r1, r3, #4
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	9103      	str	r1, [sp, #12]
 80045ec:	2b00      	cmp	r3, #0
 80045ee:	bfbb      	ittet	lt
 80045f0:	425b      	neglt	r3, r3
 80045f2:	f042 0202 	orrlt.w	r2, r2, #2
 80045f6:	9307      	strge	r3, [sp, #28]
 80045f8:	9307      	strlt	r3, [sp, #28]
 80045fa:	bfb8      	it	lt
 80045fc:	9204      	strlt	r2, [sp, #16]
 80045fe:	7823      	ldrb	r3, [r4, #0]
 8004600:	2b2e      	cmp	r3, #46	; 0x2e
 8004602:	d10c      	bne.n	800461e <_vfiprintf_r+0x176>
 8004604:	7863      	ldrb	r3, [r4, #1]
 8004606:	2b2a      	cmp	r3, #42	; 0x2a
 8004608:	d135      	bne.n	8004676 <_vfiprintf_r+0x1ce>
 800460a:	9b03      	ldr	r3, [sp, #12]
 800460c:	3402      	adds	r4, #2
 800460e:	1d1a      	adds	r2, r3, #4
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	9203      	str	r2, [sp, #12]
 8004614:	2b00      	cmp	r3, #0
 8004616:	bfb8      	it	lt
 8004618:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800461c:	9305      	str	r3, [sp, #20]
 800461e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8004704 <_vfiprintf_r+0x25c>
 8004622:	2203      	movs	r2, #3
 8004624:	4650      	mov	r0, sl
 8004626:	7821      	ldrb	r1, [r4, #0]
 8004628:	f000 fcfa 	bl	8005020 <memchr>
 800462c:	b140      	cbz	r0, 8004640 <_vfiprintf_r+0x198>
 800462e:	2340      	movs	r3, #64	; 0x40
 8004630:	eba0 000a 	sub.w	r0, r0, sl
 8004634:	fa03 f000 	lsl.w	r0, r3, r0
 8004638:	9b04      	ldr	r3, [sp, #16]
 800463a:	3401      	adds	r4, #1
 800463c:	4303      	orrs	r3, r0
 800463e:	9304      	str	r3, [sp, #16]
 8004640:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004644:	2206      	movs	r2, #6
 8004646:	482c      	ldr	r0, [pc, #176]	; (80046f8 <_vfiprintf_r+0x250>)
 8004648:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800464c:	f000 fce8 	bl	8005020 <memchr>
 8004650:	2800      	cmp	r0, #0
 8004652:	d03f      	beq.n	80046d4 <_vfiprintf_r+0x22c>
 8004654:	4b29      	ldr	r3, [pc, #164]	; (80046fc <_vfiprintf_r+0x254>)
 8004656:	bb1b      	cbnz	r3, 80046a0 <_vfiprintf_r+0x1f8>
 8004658:	9b03      	ldr	r3, [sp, #12]
 800465a:	3307      	adds	r3, #7
 800465c:	f023 0307 	bic.w	r3, r3, #7
 8004660:	3308      	adds	r3, #8
 8004662:	9303      	str	r3, [sp, #12]
 8004664:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004666:	443b      	add	r3, r7
 8004668:	9309      	str	r3, [sp, #36]	; 0x24
 800466a:	e767      	b.n	800453c <_vfiprintf_r+0x94>
 800466c:	460c      	mov	r4, r1
 800466e:	2001      	movs	r0, #1
 8004670:	fb0c 3202 	mla	r2, ip, r2, r3
 8004674:	e7a5      	b.n	80045c2 <_vfiprintf_r+0x11a>
 8004676:	2300      	movs	r3, #0
 8004678:	f04f 0c0a 	mov.w	ip, #10
 800467c:	4619      	mov	r1, r3
 800467e:	3401      	adds	r4, #1
 8004680:	9305      	str	r3, [sp, #20]
 8004682:	4620      	mov	r0, r4
 8004684:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004688:	3a30      	subs	r2, #48	; 0x30
 800468a:	2a09      	cmp	r2, #9
 800468c:	d903      	bls.n	8004696 <_vfiprintf_r+0x1ee>
 800468e:	2b00      	cmp	r3, #0
 8004690:	d0c5      	beq.n	800461e <_vfiprintf_r+0x176>
 8004692:	9105      	str	r1, [sp, #20]
 8004694:	e7c3      	b.n	800461e <_vfiprintf_r+0x176>
 8004696:	4604      	mov	r4, r0
 8004698:	2301      	movs	r3, #1
 800469a:	fb0c 2101 	mla	r1, ip, r1, r2
 800469e:	e7f0      	b.n	8004682 <_vfiprintf_r+0x1da>
 80046a0:	ab03      	add	r3, sp, #12
 80046a2:	9300      	str	r3, [sp, #0]
 80046a4:	462a      	mov	r2, r5
 80046a6:	4630      	mov	r0, r6
 80046a8:	4b15      	ldr	r3, [pc, #84]	; (8004700 <_vfiprintf_r+0x258>)
 80046aa:	a904      	add	r1, sp, #16
 80046ac:	f3af 8000 	nop.w
 80046b0:	4607      	mov	r7, r0
 80046b2:	1c78      	adds	r0, r7, #1
 80046b4:	d1d6      	bne.n	8004664 <_vfiprintf_r+0x1bc>
 80046b6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80046b8:	07d9      	lsls	r1, r3, #31
 80046ba:	d405      	bmi.n	80046c8 <_vfiprintf_r+0x220>
 80046bc:	89ab      	ldrh	r3, [r5, #12]
 80046be:	059a      	lsls	r2, r3, #22
 80046c0:	d402      	bmi.n	80046c8 <_vfiprintf_r+0x220>
 80046c2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80046c4:	f000 fc47 	bl	8004f56 <__retarget_lock_release_recursive>
 80046c8:	89ab      	ldrh	r3, [r5, #12]
 80046ca:	065b      	lsls	r3, r3, #25
 80046cc:	f53f af12 	bmi.w	80044f4 <_vfiprintf_r+0x4c>
 80046d0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80046d2:	e711      	b.n	80044f8 <_vfiprintf_r+0x50>
 80046d4:	ab03      	add	r3, sp, #12
 80046d6:	9300      	str	r3, [sp, #0]
 80046d8:	462a      	mov	r2, r5
 80046da:	4630      	mov	r0, r6
 80046dc:	4b08      	ldr	r3, [pc, #32]	; (8004700 <_vfiprintf_r+0x258>)
 80046de:	a904      	add	r1, sp, #16
 80046e0:	f000 f882 	bl	80047e8 <_printf_i>
 80046e4:	e7e4      	b.n	80046b0 <_vfiprintf_r+0x208>
 80046e6:	bf00      	nop
 80046e8:	08005498 	.word	0x08005498
 80046ec:	080054b8 	.word	0x080054b8
 80046f0:	08005478 	.word	0x08005478
 80046f4:	08005442 	.word	0x08005442
 80046f8:	0800544c 	.word	0x0800544c
 80046fc:	00000000 	.word	0x00000000
 8004700:	08004483 	.word	0x08004483
 8004704:	08005448 	.word	0x08005448

08004708 <_printf_common>:
 8004708:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800470c:	4616      	mov	r6, r2
 800470e:	4699      	mov	r9, r3
 8004710:	688a      	ldr	r2, [r1, #8]
 8004712:	690b      	ldr	r3, [r1, #16]
 8004714:	4607      	mov	r7, r0
 8004716:	4293      	cmp	r3, r2
 8004718:	bfb8      	it	lt
 800471a:	4613      	movlt	r3, r2
 800471c:	6033      	str	r3, [r6, #0]
 800471e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004722:	460c      	mov	r4, r1
 8004724:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004728:	b10a      	cbz	r2, 800472e <_printf_common+0x26>
 800472a:	3301      	adds	r3, #1
 800472c:	6033      	str	r3, [r6, #0]
 800472e:	6823      	ldr	r3, [r4, #0]
 8004730:	0699      	lsls	r1, r3, #26
 8004732:	bf42      	ittt	mi
 8004734:	6833      	ldrmi	r3, [r6, #0]
 8004736:	3302      	addmi	r3, #2
 8004738:	6033      	strmi	r3, [r6, #0]
 800473a:	6825      	ldr	r5, [r4, #0]
 800473c:	f015 0506 	ands.w	r5, r5, #6
 8004740:	d106      	bne.n	8004750 <_printf_common+0x48>
 8004742:	f104 0a19 	add.w	sl, r4, #25
 8004746:	68e3      	ldr	r3, [r4, #12]
 8004748:	6832      	ldr	r2, [r6, #0]
 800474a:	1a9b      	subs	r3, r3, r2
 800474c:	42ab      	cmp	r3, r5
 800474e:	dc28      	bgt.n	80047a2 <_printf_common+0x9a>
 8004750:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004754:	1e13      	subs	r3, r2, #0
 8004756:	6822      	ldr	r2, [r4, #0]
 8004758:	bf18      	it	ne
 800475a:	2301      	movne	r3, #1
 800475c:	0692      	lsls	r2, r2, #26
 800475e:	d42d      	bmi.n	80047bc <_printf_common+0xb4>
 8004760:	4649      	mov	r1, r9
 8004762:	4638      	mov	r0, r7
 8004764:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004768:	47c0      	blx	r8
 800476a:	3001      	adds	r0, #1
 800476c:	d020      	beq.n	80047b0 <_printf_common+0xa8>
 800476e:	6823      	ldr	r3, [r4, #0]
 8004770:	68e5      	ldr	r5, [r4, #12]
 8004772:	f003 0306 	and.w	r3, r3, #6
 8004776:	2b04      	cmp	r3, #4
 8004778:	bf18      	it	ne
 800477a:	2500      	movne	r5, #0
 800477c:	6832      	ldr	r2, [r6, #0]
 800477e:	f04f 0600 	mov.w	r6, #0
 8004782:	68a3      	ldr	r3, [r4, #8]
 8004784:	bf08      	it	eq
 8004786:	1aad      	subeq	r5, r5, r2
 8004788:	6922      	ldr	r2, [r4, #16]
 800478a:	bf08      	it	eq
 800478c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004790:	4293      	cmp	r3, r2
 8004792:	bfc4      	itt	gt
 8004794:	1a9b      	subgt	r3, r3, r2
 8004796:	18ed      	addgt	r5, r5, r3
 8004798:	341a      	adds	r4, #26
 800479a:	42b5      	cmp	r5, r6
 800479c:	d11a      	bne.n	80047d4 <_printf_common+0xcc>
 800479e:	2000      	movs	r0, #0
 80047a0:	e008      	b.n	80047b4 <_printf_common+0xac>
 80047a2:	2301      	movs	r3, #1
 80047a4:	4652      	mov	r2, sl
 80047a6:	4649      	mov	r1, r9
 80047a8:	4638      	mov	r0, r7
 80047aa:	47c0      	blx	r8
 80047ac:	3001      	adds	r0, #1
 80047ae:	d103      	bne.n	80047b8 <_printf_common+0xb0>
 80047b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80047b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80047b8:	3501      	adds	r5, #1
 80047ba:	e7c4      	b.n	8004746 <_printf_common+0x3e>
 80047bc:	2030      	movs	r0, #48	; 0x30
 80047be:	18e1      	adds	r1, r4, r3
 80047c0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80047c4:	1c5a      	adds	r2, r3, #1
 80047c6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80047ca:	4422      	add	r2, r4
 80047cc:	3302      	adds	r3, #2
 80047ce:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80047d2:	e7c5      	b.n	8004760 <_printf_common+0x58>
 80047d4:	2301      	movs	r3, #1
 80047d6:	4622      	mov	r2, r4
 80047d8:	4649      	mov	r1, r9
 80047da:	4638      	mov	r0, r7
 80047dc:	47c0      	blx	r8
 80047de:	3001      	adds	r0, #1
 80047e0:	d0e6      	beq.n	80047b0 <_printf_common+0xa8>
 80047e2:	3601      	adds	r6, #1
 80047e4:	e7d9      	b.n	800479a <_printf_common+0x92>
	...

080047e8 <_printf_i>:
 80047e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80047ec:	460c      	mov	r4, r1
 80047ee:	7e27      	ldrb	r7, [r4, #24]
 80047f0:	4691      	mov	r9, r2
 80047f2:	2f78      	cmp	r7, #120	; 0x78
 80047f4:	4680      	mov	r8, r0
 80047f6:	469a      	mov	sl, r3
 80047f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80047fa:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80047fe:	d807      	bhi.n	8004810 <_printf_i+0x28>
 8004800:	2f62      	cmp	r7, #98	; 0x62
 8004802:	d80a      	bhi.n	800481a <_printf_i+0x32>
 8004804:	2f00      	cmp	r7, #0
 8004806:	f000 80d9 	beq.w	80049bc <_printf_i+0x1d4>
 800480a:	2f58      	cmp	r7, #88	; 0x58
 800480c:	f000 80a4 	beq.w	8004958 <_printf_i+0x170>
 8004810:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004814:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004818:	e03a      	b.n	8004890 <_printf_i+0xa8>
 800481a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800481e:	2b15      	cmp	r3, #21
 8004820:	d8f6      	bhi.n	8004810 <_printf_i+0x28>
 8004822:	a001      	add	r0, pc, #4	; (adr r0, 8004828 <_printf_i+0x40>)
 8004824:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8004828:	08004881 	.word	0x08004881
 800482c:	08004895 	.word	0x08004895
 8004830:	08004811 	.word	0x08004811
 8004834:	08004811 	.word	0x08004811
 8004838:	08004811 	.word	0x08004811
 800483c:	08004811 	.word	0x08004811
 8004840:	08004895 	.word	0x08004895
 8004844:	08004811 	.word	0x08004811
 8004848:	08004811 	.word	0x08004811
 800484c:	08004811 	.word	0x08004811
 8004850:	08004811 	.word	0x08004811
 8004854:	080049a3 	.word	0x080049a3
 8004858:	080048c5 	.word	0x080048c5
 800485c:	08004985 	.word	0x08004985
 8004860:	08004811 	.word	0x08004811
 8004864:	08004811 	.word	0x08004811
 8004868:	080049c5 	.word	0x080049c5
 800486c:	08004811 	.word	0x08004811
 8004870:	080048c5 	.word	0x080048c5
 8004874:	08004811 	.word	0x08004811
 8004878:	08004811 	.word	0x08004811
 800487c:	0800498d 	.word	0x0800498d
 8004880:	680b      	ldr	r3, [r1, #0]
 8004882:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004886:	1d1a      	adds	r2, r3, #4
 8004888:	681b      	ldr	r3, [r3, #0]
 800488a:	600a      	str	r2, [r1, #0]
 800488c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004890:	2301      	movs	r3, #1
 8004892:	e0a4      	b.n	80049de <_printf_i+0x1f6>
 8004894:	6825      	ldr	r5, [r4, #0]
 8004896:	6808      	ldr	r0, [r1, #0]
 8004898:	062e      	lsls	r6, r5, #24
 800489a:	f100 0304 	add.w	r3, r0, #4
 800489e:	d50a      	bpl.n	80048b6 <_printf_i+0xce>
 80048a0:	6805      	ldr	r5, [r0, #0]
 80048a2:	600b      	str	r3, [r1, #0]
 80048a4:	2d00      	cmp	r5, #0
 80048a6:	da03      	bge.n	80048b0 <_printf_i+0xc8>
 80048a8:	232d      	movs	r3, #45	; 0x2d
 80048aa:	426d      	negs	r5, r5
 80048ac:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80048b0:	230a      	movs	r3, #10
 80048b2:	485e      	ldr	r0, [pc, #376]	; (8004a2c <_printf_i+0x244>)
 80048b4:	e019      	b.n	80048ea <_printf_i+0x102>
 80048b6:	f015 0f40 	tst.w	r5, #64	; 0x40
 80048ba:	6805      	ldr	r5, [r0, #0]
 80048bc:	600b      	str	r3, [r1, #0]
 80048be:	bf18      	it	ne
 80048c0:	b22d      	sxthne	r5, r5
 80048c2:	e7ef      	b.n	80048a4 <_printf_i+0xbc>
 80048c4:	680b      	ldr	r3, [r1, #0]
 80048c6:	6825      	ldr	r5, [r4, #0]
 80048c8:	1d18      	adds	r0, r3, #4
 80048ca:	6008      	str	r0, [r1, #0]
 80048cc:	0628      	lsls	r0, r5, #24
 80048ce:	d501      	bpl.n	80048d4 <_printf_i+0xec>
 80048d0:	681d      	ldr	r5, [r3, #0]
 80048d2:	e002      	b.n	80048da <_printf_i+0xf2>
 80048d4:	0669      	lsls	r1, r5, #25
 80048d6:	d5fb      	bpl.n	80048d0 <_printf_i+0xe8>
 80048d8:	881d      	ldrh	r5, [r3, #0]
 80048da:	2f6f      	cmp	r7, #111	; 0x6f
 80048dc:	bf0c      	ite	eq
 80048de:	2308      	moveq	r3, #8
 80048e0:	230a      	movne	r3, #10
 80048e2:	4852      	ldr	r0, [pc, #328]	; (8004a2c <_printf_i+0x244>)
 80048e4:	2100      	movs	r1, #0
 80048e6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80048ea:	6866      	ldr	r6, [r4, #4]
 80048ec:	2e00      	cmp	r6, #0
 80048ee:	bfa8      	it	ge
 80048f0:	6821      	ldrge	r1, [r4, #0]
 80048f2:	60a6      	str	r6, [r4, #8]
 80048f4:	bfa4      	itt	ge
 80048f6:	f021 0104 	bicge.w	r1, r1, #4
 80048fa:	6021      	strge	r1, [r4, #0]
 80048fc:	b90d      	cbnz	r5, 8004902 <_printf_i+0x11a>
 80048fe:	2e00      	cmp	r6, #0
 8004900:	d04d      	beq.n	800499e <_printf_i+0x1b6>
 8004902:	4616      	mov	r6, r2
 8004904:	fbb5 f1f3 	udiv	r1, r5, r3
 8004908:	fb03 5711 	mls	r7, r3, r1, r5
 800490c:	5dc7      	ldrb	r7, [r0, r7]
 800490e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004912:	462f      	mov	r7, r5
 8004914:	42bb      	cmp	r3, r7
 8004916:	460d      	mov	r5, r1
 8004918:	d9f4      	bls.n	8004904 <_printf_i+0x11c>
 800491a:	2b08      	cmp	r3, #8
 800491c:	d10b      	bne.n	8004936 <_printf_i+0x14e>
 800491e:	6823      	ldr	r3, [r4, #0]
 8004920:	07df      	lsls	r7, r3, #31
 8004922:	d508      	bpl.n	8004936 <_printf_i+0x14e>
 8004924:	6923      	ldr	r3, [r4, #16]
 8004926:	6861      	ldr	r1, [r4, #4]
 8004928:	4299      	cmp	r1, r3
 800492a:	bfde      	ittt	le
 800492c:	2330      	movle	r3, #48	; 0x30
 800492e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004932:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8004936:	1b92      	subs	r2, r2, r6
 8004938:	6122      	str	r2, [r4, #16]
 800493a:	464b      	mov	r3, r9
 800493c:	4621      	mov	r1, r4
 800493e:	4640      	mov	r0, r8
 8004940:	f8cd a000 	str.w	sl, [sp]
 8004944:	aa03      	add	r2, sp, #12
 8004946:	f7ff fedf 	bl	8004708 <_printf_common>
 800494a:	3001      	adds	r0, #1
 800494c:	d14c      	bne.n	80049e8 <_printf_i+0x200>
 800494e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004952:	b004      	add	sp, #16
 8004954:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004958:	4834      	ldr	r0, [pc, #208]	; (8004a2c <_printf_i+0x244>)
 800495a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800495e:	680e      	ldr	r6, [r1, #0]
 8004960:	6823      	ldr	r3, [r4, #0]
 8004962:	f856 5b04 	ldr.w	r5, [r6], #4
 8004966:	061f      	lsls	r7, r3, #24
 8004968:	600e      	str	r6, [r1, #0]
 800496a:	d514      	bpl.n	8004996 <_printf_i+0x1ae>
 800496c:	07d9      	lsls	r1, r3, #31
 800496e:	bf44      	itt	mi
 8004970:	f043 0320 	orrmi.w	r3, r3, #32
 8004974:	6023      	strmi	r3, [r4, #0]
 8004976:	b91d      	cbnz	r5, 8004980 <_printf_i+0x198>
 8004978:	6823      	ldr	r3, [r4, #0]
 800497a:	f023 0320 	bic.w	r3, r3, #32
 800497e:	6023      	str	r3, [r4, #0]
 8004980:	2310      	movs	r3, #16
 8004982:	e7af      	b.n	80048e4 <_printf_i+0xfc>
 8004984:	6823      	ldr	r3, [r4, #0]
 8004986:	f043 0320 	orr.w	r3, r3, #32
 800498a:	6023      	str	r3, [r4, #0]
 800498c:	2378      	movs	r3, #120	; 0x78
 800498e:	4828      	ldr	r0, [pc, #160]	; (8004a30 <_printf_i+0x248>)
 8004990:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004994:	e7e3      	b.n	800495e <_printf_i+0x176>
 8004996:	065e      	lsls	r6, r3, #25
 8004998:	bf48      	it	mi
 800499a:	b2ad      	uxthmi	r5, r5
 800499c:	e7e6      	b.n	800496c <_printf_i+0x184>
 800499e:	4616      	mov	r6, r2
 80049a0:	e7bb      	b.n	800491a <_printf_i+0x132>
 80049a2:	680b      	ldr	r3, [r1, #0]
 80049a4:	6826      	ldr	r6, [r4, #0]
 80049a6:	1d1d      	adds	r5, r3, #4
 80049a8:	6960      	ldr	r0, [r4, #20]
 80049aa:	600d      	str	r5, [r1, #0]
 80049ac:	0635      	lsls	r5, r6, #24
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	d501      	bpl.n	80049b6 <_printf_i+0x1ce>
 80049b2:	6018      	str	r0, [r3, #0]
 80049b4:	e002      	b.n	80049bc <_printf_i+0x1d4>
 80049b6:	0671      	lsls	r1, r6, #25
 80049b8:	d5fb      	bpl.n	80049b2 <_printf_i+0x1ca>
 80049ba:	8018      	strh	r0, [r3, #0]
 80049bc:	2300      	movs	r3, #0
 80049be:	4616      	mov	r6, r2
 80049c0:	6123      	str	r3, [r4, #16]
 80049c2:	e7ba      	b.n	800493a <_printf_i+0x152>
 80049c4:	680b      	ldr	r3, [r1, #0]
 80049c6:	1d1a      	adds	r2, r3, #4
 80049c8:	600a      	str	r2, [r1, #0]
 80049ca:	681e      	ldr	r6, [r3, #0]
 80049cc:	2100      	movs	r1, #0
 80049ce:	4630      	mov	r0, r6
 80049d0:	6862      	ldr	r2, [r4, #4]
 80049d2:	f000 fb25 	bl	8005020 <memchr>
 80049d6:	b108      	cbz	r0, 80049dc <_printf_i+0x1f4>
 80049d8:	1b80      	subs	r0, r0, r6
 80049da:	6060      	str	r0, [r4, #4]
 80049dc:	6863      	ldr	r3, [r4, #4]
 80049de:	6123      	str	r3, [r4, #16]
 80049e0:	2300      	movs	r3, #0
 80049e2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80049e6:	e7a8      	b.n	800493a <_printf_i+0x152>
 80049e8:	4632      	mov	r2, r6
 80049ea:	4649      	mov	r1, r9
 80049ec:	4640      	mov	r0, r8
 80049ee:	6923      	ldr	r3, [r4, #16]
 80049f0:	47d0      	blx	sl
 80049f2:	3001      	adds	r0, #1
 80049f4:	d0ab      	beq.n	800494e <_printf_i+0x166>
 80049f6:	6823      	ldr	r3, [r4, #0]
 80049f8:	079b      	lsls	r3, r3, #30
 80049fa:	d413      	bmi.n	8004a24 <_printf_i+0x23c>
 80049fc:	68e0      	ldr	r0, [r4, #12]
 80049fe:	9b03      	ldr	r3, [sp, #12]
 8004a00:	4298      	cmp	r0, r3
 8004a02:	bfb8      	it	lt
 8004a04:	4618      	movlt	r0, r3
 8004a06:	e7a4      	b.n	8004952 <_printf_i+0x16a>
 8004a08:	2301      	movs	r3, #1
 8004a0a:	4632      	mov	r2, r6
 8004a0c:	4649      	mov	r1, r9
 8004a0e:	4640      	mov	r0, r8
 8004a10:	47d0      	blx	sl
 8004a12:	3001      	adds	r0, #1
 8004a14:	d09b      	beq.n	800494e <_printf_i+0x166>
 8004a16:	3501      	adds	r5, #1
 8004a18:	68e3      	ldr	r3, [r4, #12]
 8004a1a:	9903      	ldr	r1, [sp, #12]
 8004a1c:	1a5b      	subs	r3, r3, r1
 8004a1e:	42ab      	cmp	r3, r5
 8004a20:	dcf2      	bgt.n	8004a08 <_printf_i+0x220>
 8004a22:	e7eb      	b.n	80049fc <_printf_i+0x214>
 8004a24:	2500      	movs	r5, #0
 8004a26:	f104 0619 	add.w	r6, r4, #25
 8004a2a:	e7f5      	b.n	8004a18 <_printf_i+0x230>
 8004a2c:	08005453 	.word	0x08005453
 8004a30:	08005464 	.word	0x08005464

08004a34 <_sbrk_r>:
 8004a34:	b538      	push	{r3, r4, r5, lr}
 8004a36:	2300      	movs	r3, #0
 8004a38:	4d05      	ldr	r5, [pc, #20]	; (8004a50 <_sbrk_r+0x1c>)
 8004a3a:	4604      	mov	r4, r0
 8004a3c:	4608      	mov	r0, r1
 8004a3e:	602b      	str	r3, [r5, #0]
 8004a40:	f7fc fbce 	bl	80011e0 <_sbrk>
 8004a44:	1c43      	adds	r3, r0, #1
 8004a46:	d102      	bne.n	8004a4e <_sbrk_r+0x1a>
 8004a48:	682b      	ldr	r3, [r5, #0]
 8004a4a:	b103      	cbz	r3, 8004a4e <_sbrk_r+0x1a>
 8004a4c:	6023      	str	r3, [r4, #0]
 8004a4e:	bd38      	pop	{r3, r4, r5, pc}
 8004a50:	20001600 	.word	0x20001600

08004a54 <__swbuf_r>:
 8004a54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a56:	460e      	mov	r6, r1
 8004a58:	4614      	mov	r4, r2
 8004a5a:	4605      	mov	r5, r0
 8004a5c:	b118      	cbz	r0, 8004a66 <__swbuf_r+0x12>
 8004a5e:	6983      	ldr	r3, [r0, #24]
 8004a60:	b90b      	cbnz	r3, 8004a66 <__swbuf_r+0x12>
 8004a62:	f000 f9d9 	bl	8004e18 <__sinit>
 8004a66:	4b21      	ldr	r3, [pc, #132]	; (8004aec <__swbuf_r+0x98>)
 8004a68:	429c      	cmp	r4, r3
 8004a6a:	d12b      	bne.n	8004ac4 <__swbuf_r+0x70>
 8004a6c:	686c      	ldr	r4, [r5, #4]
 8004a6e:	69a3      	ldr	r3, [r4, #24]
 8004a70:	60a3      	str	r3, [r4, #8]
 8004a72:	89a3      	ldrh	r3, [r4, #12]
 8004a74:	071a      	lsls	r2, r3, #28
 8004a76:	d52f      	bpl.n	8004ad8 <__swbuf_r+0x84>
 8004a78:	6923      	ldr	r3, [r4, #16]
 8004a7a:	b36b      	cbz	r3, 8004ad8 <__swbuf_r+0x84>
 8004a7c:	6923      	ldr	r3, [r4, #16]
 8004a7e:	6820      	ldr	r0, [r4, #0]
 8004a80:	b2f6      	uxtb	r6, r6
 8004a82:	1ac0      	subs	r0, r0, r3
 8004a84:	6963      	ldr	r3, [r4, #20]
 8004a86:	4637      	mov	r7, r6
 8004a88:	4283      	cmp	r3, r0
 8004a8a:	dc04      	bgt.n	8004a96 <__swbuf_r+0x42>
 8004a8c:	4621      	mov	r1, r4
 8004a8e:	4628      	mov	r0, r5
 8004a90:	f000 f92e 	bl	8004cf0 <_fflush_r>
 8004a94:	bb30      	cbnz	r0, 8004ae4 <__swbuf_r+0x90>
 8004a96:	68a3      	ldr	r3, [r4, #8]
 8004a98:	3001      	adds	r0, #1
 8004a9a:	3b01      	subs	r3, #1
 8004a9c:	60a3      	str	r3, [r4, #8]
 8004a9e:	6823      	ldr	r3, [r4, #0]
 8004aa0:	1c5a      	adds	r2, r3, #1
 8004aa2:	6022      	str	r2, [r4, #0]
 8004aa4:	701e      	strb	r6, [r3, #0]
 8004aa6:	6963      	ldr	r3, [r4, #20]
 8004aa8:	4283      	cmp	r3, r0
 8004aaa:	d004      	beq.n	8004ab6 <__swbuf_r+0x62>
 8004aac:	89a3      	ldrh	r3, [r4, #12]
 8004aae:	07db      	lsls	r3, r3, #31
 8004ab0:	d506      	bpl.n	8004ac0 <__swbuf_r+0x6c>
 8004ab2:	2e0a      	cmp	r6, #10
 8004ab4:	d104      	bne.n	8004ac0 <__swbuf_r+0x6c>
 8004ab6:	4621      	mov	r1, r4
 8004ab8:	4628      	mov	r0, r5
 8004aba:	f000 f919 	bl	8004cf0 <_fflush_r>
 8004abe:	b988      	cbnz	r0, 8004ae4 <__swbuf_r+0x90>
 8004ac0:	4638      	mov	r0, r7
 8004ac2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004ac4:	4b0a      	ldr	r3, [pc, #40]	; (8004af0 <__swbuf_r+0x9c>)
 8004ac6:	429c      	cmp	r4, r3
 8004ac8:	d101      	bne.n	8004ace <__swbuf_r+0x7a>
 8004aca:	68ac      	ldr	r4, [r5, #8]
 8004acc:	e7cf      	b.n	8004a6e <__swbuf_r+0x1a>
 8004ace:	4b09      	ldr	r3, [pc, #36]	; (8004af4 <__swbuf_r+0xa0>)
 8004ad0:	429c      	cmp	r4, r3
 8004ad2:	bf08      	it	eq
 8004ad4:	68ec      	ldreq	r4, [r5, #12]
 8004ad6:	e7ca      	b.n	8004a6e <__swbuf_r+0x1a>
 8004ad8:	4621      	mov	r1, r4
 8004ada:	4628      	mov	r0, r5
 8004adc:	f000 f80c 	bl	8004af8 <__swsetup_r>
 8004ae0:	2800      	cmp	r0, #0
 8004ae2:	d0cb      	beq.n	8004a7c <__swbuf_r+0x28>
 8004ae4:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8004ae8:	e7ea      	b.n	8004ac0 <__swbuf_r+0x6c>
 8004aea:	bf00      	nop
 8004aec:	08005498 	.word	0x08005498
 8004af0:	080054b8 	.word	0x080054b8
 8004af4:	08005478 	.word	0x08005478

08004af8 <__swsetup_r>:
 8004af8:	4b32      	ldr	r3, [pc, #200]	; (8004bc4 <__swsetup_r+0xcc>)
 8004afa:	b570      	push	{r4, r5, r6, lr}
 8004afc:	681d      	ldr	r5, [r3, #0]
 8004afe:	4606      	mov	r6, r0
 8004b00:	460c      	mov	r4, r1
 8004b02:	b125      	cbz	r5, 8004b0e <__swsetup_r+0x16>
 8004b04:	69ab      	ldr	r3, [r5, #24]
 8004b06:	b913      	cbnz	r3, 8004b0e <__swsetup_r+0x16>
 8004b08:	4628      	mov	r0, r5
 8004b0a:	f000 f985 	bl	8004e18 <__sinit>
 8004b0e:	4b2e      	ldr	r3, [pc, #184]	; (8004bc8 <__swsetup_r+0xd0>)
 8004b10:	429c      	cmp	r4, r3
 8004b12:	d10f      	bne.n	8004b34 <__swsetup_r+0x3c>
 8004b14:	686c      	ldr	r4, [r5, #4]
 8004b16:	89a3      	ldrh	r3, [r4, #12]
 8004b18:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004b1c:	0719      	lsls	r1, r3, #28
 8004b1e:	d42c      	bmi.n	8004b7a <__swsetup_r+0x82>
 8004b20:	06dd      	lsls	r5, r3, #27
 8004b22:	d411      	bmi.n	8004b48 <__swsetup_r+0x50>
 8004b24:	2309      	movs	r3, #9
 8004b26:	6033      	str	r3, [r6, #0]
 8004b28:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004b2c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004b30:	81a3      	strh	r3, [r4, #12]
 8004b32:	e03e      	b.n	8004bb2 <__swsetup_r+0xba>
 8004b34:	4b25      	ldr	r3, [pc, #148]	; (8004bcc <__swsetup_r+0xd4>)
 8004b36:	429c      	cmp	r4, r3
 8004b38:	d101      	bne.n	8004b3e <__swsetup_r+0x46>
 8004b3a:	68ac      	ldr	r4, [r5, #8]
 8004b3c:	e7eb      	b.n	8004b16 <__swsetup_r+0x1e>
 8004b3e:	4b24      	ldr	r3, [pc, #144]	; (8004bd0 <__swsetup_r+0xd8>)
 8004b40:	429c      	cmp	r4, r3
 8004b42:	bf08      	it	eq
 8004b44:	68ec      	ldreq	r4, [r5, #12]
 8004b46:	e7e6      	b.n	8004b16 <__swsetup_r+0x1e>
 8004b48:	0758      	lsls	r0, r3, #29
 8004b4a:	d512      	bpl.n	8004b72 <__swsetup_r+0x7a>
 8004b4c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004b4e:	b141      	cbz	r1, 8004b62 <__swsetup_r+0x6a>
 8004b50:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004b54:	4299      	cmp	r1, r3
 8004b56:	d002      	beq.n	8004b5e <__swsetup_r+0x66>
 8004b58:	4630      	mov	r0, r6
 8004b5a:	f7ff fa7b 	bl	8004054 <_free_r>
 8004b5e:	2300      	movs	r3, #0
 8004b60:	6363      	str	r3, [r4, #52]	; 0x34
 8004b62:	89a3      	ldrh	r3, [r4, #12]
 8004b64:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004b68:	81a3      	strh	r3, [r4, #12]
 8004b6a:	2300      	movs	r3, #0
 8004b6c:	6063      	str	r3, [r4, #4]
 8004b6e:	6923      	ldr	r3, [r4, #16]
 8004b70:	6023      	str	r3, [r4, #0]
 8004b72:	89a3      	ldrh	r3, [r4, #12]
 8004b74:	f043 0308 	orr.w	r3, r3, #8
 8004b78:	81a3      	strh	r3, [r4, #12]
 8004b7a:	6923      	ldr	r3, [r4, #16]
 8004b7c:	b94b      	cbnz	r3, 8004b92 <__swsetup_r+0x9a>
 8004b7e:	89a3      	ldrh	r3, [r4, #12]
 8004b80:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8004b84:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004b88:	d003      	beq.n	8004b92 <__swsetup_r+0x9a>
 8004b8a:	4621      	mov	r1, r4
 8004b8c:	4630      	mov	r0, r6
 8004b8e:	f000 fa07 	bl	8004fa0 <__smakebuf_r>
 8004b92:	89a0      	ldrh	r0, [r4, #12]
 8004b94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004b98:	f010 0301 	ands.w	r3, r0, #1
 8004b9c:	d00a      	beq.n	8004bb4 <__swsetup_r+0xbc>
 8004b9e:	2300      	movs	r3, #0
 8004ba0:	60a3      	str	r3, [r4, #8]
 8004ba2:	6963      	ldr	r3, [r4, #20]
 8004ba4:	425b      	negs	r3, r3
 8004ba6:	61a3      	str	r3, [r4, #24]
 8004ba8:	6923      	ldr	r3, [r4, #16]
 8004baa:	b943      	cbnz	r3, 8004bbe <__swsetup_r+0xc6>
 8004bac:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8004bb0:	d1ba      	bne.n	8004b28 <__swsetup_r+0x30>
 8004bb2:	bd70      	pop	{r4, r5, r6, pc}
 8004bb4:	0781      	lsls	r1, r0, #30
 8004bb6:	bf58      	it	pl
 8004bb8:	6963      	ldrpl	r3, [r4, #20]
 8004bba:	60a3      	str	r3, [r4, #8]
 8004bbc:	e7f4      	b.n	8004ba8 <__swsetup_r+0xb0>
 8004bbe:	2000      	movs	r0, #0
 8004bc0:	e7f7      	b.n	8004bb2 <__swsetup_r+0xba>
 8004bc2:	bf00      	nop
 8004bc4:	200000e0 	.word	0x200000e0
 8004bc8:	08005498 	.word	0x08005498
 8004bcc:	080054b8 	.word	0x080054b8
 8004bd0:	08005478 	.word	0x08005478

08004bd4 <abort>:
 8004bd4:	2006      	movs	r0, #6
 8004bd6:	b508      	push	{r3, lr}
 8004bd8:	f000 faa4 	bl	8005124 <raise>
 8004bdc:	2001      	movs	r0, #1
 8004bde:	f7fc fa8c 	bl	80010fa <_exit>
	...

08004be4 <__sflush_r>:
 8004be4:	898a      	ldrh	r2, [r1, #12]
 8004be6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004bea:	4605      	mov	r5, r0
 8004bec:	0710      	lsls	r0, r2, #28
 8004bee:	460c      	mov	r4, r1
 8004bf0:	d458      	bmi.n	8004ca4 <__sflush_r+0xc0>
 8004bf2:	684b      	ldr	r3, [r1, #4]
 8004bf4:	2b00      	cmp	r3, #0
 8004bf6:	dc05      	bgt.n	8004c04 <__sflush_r+0x20>
 8004bf8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8004bfa:	2b00      	cmp	r3, #0
 8004bfc:	dc02      	bgt.n	8004c04 <__sflush_r+0x20>
 8004bfe:	2000      	movs	r0, #0
 8004c00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c04:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004c06:	2e00      	cmp	r6, #0
 8004c08:	d0f9      	beq.n	8004bfe <__sflush_r+0x1a>
 8004c0a:	2300      	movs	r3, #0
 8004c0c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004c10:	682f      	ldr	r7, [r5, #0]
 8004c12:	602b      	str	r3, [r5, #0]
 8004c14:	d032      	beq.n	8004c7c <__sflush_r+0x98>
 8004c16:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004c18:	89a3      	ldrh	r3, [r4, #12]
 8004c1a:	075a      	lsls	r2, r3, #29
 8004c1c:	d505      	bpl.n	8004c2a <__sflush_r+0x46>
 8004c1e:	6863      	ldr	r3, [r4, #4]
 8004c20:	1ac0      	subs	r0, r0, r3
 8004c22:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004c24:	b10b      	cbz	r3, 8004c2a <__sflush_r+0x46>
 8004c26:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004c28:	1ac0      	subs	r0, r0, r3
 8004c2a:	2300      	movs	r3, #0
 8004c2c:	4602      	mov	r2, r0
 8004c2e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004c30:	4628      	mov	r0, r5
 8004c32:	6a21      	ldr	r1, [r4, #32]
 8004c34:	47b0      	blx	r6
 8004c36:	1c43      	adds	r3, r0, #1
 8004c38:	89a3      	ldrh	r3, [r4, #12]
 8004c3a:	d106      	bne.n	8004c4a <__sflush_r+0x66>
 8004c3c:	6829      	ldr	r1, [r5, #0]
 8004c3e:	291d      	cmp	r1, #29
 8004c40:	d82c      	bhi.n	8004c9c <__sflush_r+0xb8>
 8004c42:	4a2a      	ldr	r2, [pc, #168]	; (8004cec <__sflush_r+0x108>)
 8004c44:	40ca      	lsrs	r2, r1
 8004c46:	07d6      	lsls	r6, r2, #31
 8004c48:	d528      	bpl.n	8004c9c <__sflush_r+0xb8>
 8004c4a:	2200      	movs	r2, #0
 8004c4c:	6062      	str	r2, [r4, #4]
 8004c4e:	6922      	ldr	r2, [r4, #16]
 8004c50:	04d9      	lsls	r1, r3, #19
 8004c52:	6022      	str	r2, [r4, #0]
 8004c54:	d504      	bpl.n	8004c60 <__sflush_r+0x7c>
 8004c56:	1c42      	adds	r2, r0, #1
 8004c58:	d101      	bne.n	8004c5e <__sflush_r+0x7a>
 8004c5a:	682b      	ldr	r3, [r5, #0]
 8004c5c:	b903      	cbnz	r3, 8004c60 <__sflush_r+0x7c>
 8004c5e:	6560      	str	r0, [r4, #84]	; 0x54
 8004c60:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004c62:	602f      	str	r7, [r5, #0]
 8004c64:	2900      	cmp	r1, #0
 8004c66:	d0ca      	beq.n	8004bfe <__sflush_r+0x1a>
 8004c68:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004c6c:	4299      	cmp	r1, r3
 8004c6e:	d002      	beq.n	8004c76 <__sflush_r+0x92>
 8004c70:	4628      	mov	r0, r5
 8004c72:	f7ff f9ef 	bl	8004054 <_free_r>
 8004c76:	2000      	movs	r0, #0
 8004c78:	6360      	str	r0, [r4, #52]	; 0x34
 8004c7a:	e7c1      	b.n	8004c00 <__sflush_r+0x1c>
 8004c7c:	6a21      	ldr	r1, [r4, #32]
 8004c7e:	2301      	movs	r3, #1
 8004c80:	4628      	mov	r0, r5
 8004c82:	47b0      	blx	r6
 8004c84:	1c41      	adds	r1, r0, #1
 8004c86:	d1c7      	bne.n	8004c18 <__sflush_r+0x34>
 8004c88:	682b      	ldr	r3, [r5, #0]
 8004c8a:	2b00      	cmp	r3, #0
 8004c8c:	d0c4      	beq.n	8004c18 <__sflush_r+0x34>
 8004c8e:	2b1d      	cmp	r3, #29
 8004c90:	d001      	beq.n	8004c96 <__sflush_r+0xb2>
 8004c92:	2b16      	cmp	r3, #22
 8004c94:	d101      	bne.n	8004c9a <__sflush_r+0xb6>
 8004c96:	602f      	str	r7, [r5, #0]
 8004c98:	e7b1      	b.n	8004bfe <__sflush_r+0x1a>
 8004c9a:	89a3      	ldrh	r3, [r4, #12]
 8004c9c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004ca0:	81a3      	strh	r3, [r4, #12]
 8004ca2:	e7ad      	b.n	8004c00 <__sflush_r+0x1c>
 8004ca4:	690f      	ldr	r7, [r1, #16]
 8004ca6:	2f00      	cmp	r7, #0
 8004ca8:	d0a9      	beq.n	8004bfe <__sflush_r+0x1a>
 8004caa:	0793      	lsls	r3, r2, #30
 8004cac:	bf18      	it	ne
 8004cae:	2300      	movne	r3, #0
 8004cb0:	680e      	ldr	r6, [r1, #0]
 8004cb2:	bf08      	it	eq
 8004cb4:	694b      	ldreq	r3, [r1, #20]
 8004cb6:	eba6 0807 	sub.w	r8, r6, r7
 8004cba:	600f      	str	r7, [r1, #0]
 8004cbc:	608b      	str	r3, [r1, #8]
 8004cbe:	f1b8 0f00 	cmp.w	r8, #0
 8004cc2:	dd9c      	ble.n	8004bfe <__sflush_r+0x1a>
 8004cc4:	4643      	mov	r3, r8
 8004cc6:	463a      	mov	r2, r7
 8004cc8:	4628      	mov	r0, r5
 8004cca:	6a21      	ldr	r1, [r4, #32]
 8004ccc:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004cce:	47b0      	blx	r6
 8004cd0:	2800      	cmp	r0, #0
 8004cd2:	dc06      	bgt.n	8004ce2 <__sflush_r+0xfe>
 8004cd4:	89a3      	ldrh	r3, [r4, #12]
 8004cd6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004cda:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004cde:	81a3      	strh	r3, [r4, #12]
 8004ce0:	e78e      	b.n	8004c00 <__sflush_r+0x1c>
 8004ce2:	4407      	add	r7, r0
 8004ce4:	eba8 0800 	sub.w	r8, r8, r0
 8004ce8:	e7e9      	b.n	8004cbe <__sflush_r+0xda>
 8004cea:	bf00      	nop
 8004cec:	20400001 	.word	0x20400001

08004cf0 <_fflush_r>:
 8004cf0:	b538      	push	{r3, r4, r5, lr}
 8004cf2:	690b      	ldr	r3, [r1, #16]
 8004cf4:	4605      	mov	r5, r0
 8004cf6:	460c      	mov	r4, r1
 8004cf8:	b913      	cbnz	r3, 8004d00 <_fflush_r+0x10>
 8004cfa:	2500      	movs	r5, #0
 8004cfc:	4628      	mov	r0, r5
 8004cfe:	bd38      	pop	{r3, r4, r5, pc}
 8004d00:	b118      	cbz	r0, 8004d0a <_fflush_r+0x1a>
 8004d02:	6983      	ldr	r3, [r0, #24]
 8004d04:	b90b      	cbnz	r3, 8004d0a <_fflush_r+0x1a>
 8004d06:	f000 f887 	bl	8004e18 <__sinit>
 8004d0a:	4b14      	ldr	r3, [pc, #80]	; (8004d5c <_fflush_r+0x6c>)
 8004d0c:	429c      	cmp	r4, r3
 8004d0e:	d11b      	bne.n	8004d48 <_fflush_r+0x58>
 8004d10:	686c      	ldr	r4, [r5, #4]
 8004d12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d0ef      	beq.n	8004cfa <_fflush_r+0xa>
 8004d1a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004d1c:	07d0      	lsls	r0, r2, #31
 8004d1e:	d404      	bmi.n	8004d2a <_fflush_r+0x3a>
 8004d20:	0599      	lsls	r1, r3, #22
 8004d22:	d402      	bmi.n	8004d2a <_fflush_r+0x3a>
 8004d24:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004d26:	f000 f915 	bl	8004f54 <__retarget_lock_acquire_recursive>
 8004d2a:	4628      	mov	r0, r5
 8004d2c:	4621      	mov	r1, r4
 8004d2e:	f7ff ff59 	bl	8004be4 <__sflush_r>
 8004d32:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004d34:	4605      	mov	r5, r0
 8004d36:	07da      	lsls	r2, r3, #31
 8004d38:	d4e0      	bmi.n	8004cfc <_fflush_r+0xc>
 8004d3a:	89a3      	ldrh	r3, [r4, #12]
 8004d3c:	059b      	lsls	r3, r3, #22
 8004d3e:	d4dd      	bmi.n	8004cfc <_fflush_r+0xc>
 8004d40:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004d42:	f000 f908 	bl	8004f56 <__retarget_lock_release_recursive>
 8004d46:	e7d9      	b.n	8004cfc <_fflush_r+0xc>
 8004d48:	4b05      	ldr	r3, [pc, #20]	; (8004d60 <_fflush_r+0x70>)
 8004d4a:	429c      	cmp	r4, r3
 8004d4c:	d101      	bne.n	8004d52 <_fflush_r+0x62>
 8004d4e:	68ac      	ldr	r4, [r5, #8]
 8004d50:	e7df      	b.n	8004d12 <_fflush_r+0x22>
 8004d52:	4b04      	ldr	r3, [pc, #16]	; (8004d64 <_fflush_r+0x74>)
 8004d54:	429c      	cmp	r4, r3
 8004d56:	bf08      	it	eq
 8004d58:	68ec      	ldreq	r4, [r5, #12]
 8004d5a:	e7da      	b.n	8004d12 <_fflush_r+0x22>
 8004d5c:	08005498 	.word	0x08005498
 8004d60:	080054b8 	.word	0x080054b8
 8004d64:	08005478 	.word	0x08005478

08004d68 <std>:
 8004d68:	2300      	movs	r3, #0
 8004d6a:	b510      	push	{r4, lr}
 8004d6c:	4604      	mov	r4, r0
 8004d6e:	e9c0 3300 	strd	r3, r3, [r0]
 8004d72:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004d76:	6083      	str	r3, [r0, #8]
 8004d78:	8181      	strh	r1, [r0, #12]
 8004d7a:	6643      	str	r3, [r0, #100]	; 0x64
 8004d7c:	81c2      	strh	r2, [r0, #14]
 8004d7e:	6183      	str	r3, [r0, #24]
 8004d80:	4619      	mov	r1, r3
 8004d82:	2208      	movs	r2, #8
 8004d84:	305c      	adds	r0, #92	; 0x5c
 8004d86:	f7ff f853 	bl	8003e30 <memset>
 8004d8a:	4b05      	ldr	r3, [pc, #20]	; (8004da0 <std+0x38>)
 8004d8c:	6224      	str	r4, [r4, #32]
 8004d8e:	6263      	str	r3, [r4, #36]	; 0x24
 8004d90:	4b04      	ldr	r3, [pc, #16]	; (8004da4 <std+0x3c>)
 8004d92:	62a3      	str	r3, [r4, #40]	; 0x28
 8004d94:	4b04      	ldr	r3, [pc, #16]	; (8004da8 <std+0x40>)
 8004d96:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004d98:	4b04      	ldr	r3, [pc, #16]	; (8004dac <std+0x44>)
 8004d9a:	6323      	str	r3, [r4, #48]	; 0x30
 8004d9c:	bd10      	pop	{r4, pc}
 8004d9e:	bf00      	nop
 8004da0:	0800515d 	.word	0x0800515d
 8004da4:	0800517f 	.word	0x0800517f
 8004da8:	080051b7 	.word	0x080051b7
 8004dac:	080051db 	.word	0x080051db

08004db0 <_cleanup_r>:
 8004db0:	4901      	ldr	r1, [pc, #4]	; (8004db8 <_cleanup_r+0x8>)
 8004db2:	f000 b8af 	b.w	8004f14 <_fwalk_reent>
 8004db6:	bf00      	nop
 8004db8:	08004cf1 	.word	0x08004cf1

08004dbc <__sfmoreglue>:
 8004dbc:	b570      	push	{r4, r5, r6, lr}
 8004dbe:	2568      	movs	r5, #104	; 0x68
 8004dc0:	1e4a      	subs	r2, r1, #1
 8004dc2:	4355      	muls	r5, r2
 8004dc4:	460e      	mov	r6, r1
 8004dc6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004dca:	f7ff f98f 	bl	80040ec <_malloc_r>
 8004dce:	4604      	mov	r4, r0
 8004dd0:	b140      	cbz	r0, 8004de4 <__sfmoreglue+0x28>
 8004dd2:	2100      	movs	r1, #0
 8004dd4:	e9c0 1600 	strd	r1, r6, [r0]
 8004dd8:	300c      	adds	r0, #12
 8004dda:	60a0      	str	r0, [r4, #8]
 8004ddc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8004de0:	f7ff f826 	bl	8003e30 <memset>
 8004de4:	4620      	mov	r0, r4
 8004de6:	bd70      	pop	{r4, r5, r6, pc}

08004de8 <__sfp_lock_acquire>:
 8004de8:	4801      	ldr	r0, [pc, #4]	; (8004df0 <__sfp_lock_acquire+0x8>)
 8004dea:	f000 b8b3 	b.w	8004f54 <__retarget_lock_acquire_recursive>
 8004dee:	bf00      	nop
 8004df0:	2000160c 	.word	0x2000160c

08004df4 <__sfp_lock_release>:
 8004df4:	4801      	ldr	r0, [pc, #4]	; (8004dfc <__sfp_lock_release+0x8>)
 8004df6:	f000 b8ae 	b.w	8004f56 <__retarget_lock_release_recursive>
 8004dfa:	bf00      	nop
 8004dfc:	2000160c 	.word	0x2000160c

08004e00 <__sinit_lock_acquire>:
 8004e00:	4801      	ldr	r0, [pc, #4]	; (8004e08 <__sinit_lock_acquire+0x8>)
 8004e02:	f000 b8a7 	b.w	8004f54 <__retarget_lock_acquire_recursive>
 8004e06:	bf00      	nop
 8004e08:	20001607 	.word	0x20001607

08004e0c <__sinit_lock_release>:
 8004e0c:	4801      	ldr	r0, [pc, #4]	; (8004e14 <__sinit_lock_release+0x8>)
 8004e0e:	f000 b8a2 	b.w	8004f56 <__retarget_lock_release_recursive>
 8004e12:	bf00      	nop
 8004e14:	20001607 	.word	0x20001607

08004e18 <__sinit>:
 8004e18:	b510      	push	{r4, lr}
 8004e1a:	4604      	mov	r4, r0
 8004e1c:	f7ff fff0 	bl	8004e00 <__sinit_lock_acquire>
 8004e20:	69a3      	ldr	r3, [r4, #24]
 8004e22:	b11b      	cbz	r3, 8004e2c <__sinit+0x14>
 8004e24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004e28:	f7ff bff0 	b.w	8004e0c <__sinit_lock_release>
 8004e2c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8004e30:	6523      	str	r3, [r4, #80]	; 0x50
 8004e32:	4b13      	ldr	r3, [pc, #76]	; (8004e80 <__sinit+0x68>)
 8004e34:	4a13      	ldr	r2, [pc, #76]	; (8004e84 <__sinit+0x6c>)
 8004e36:	681b      	ldr	r3, [r3, #0]
 8004e38:	62a2      	str	r2, [r4, #40]	; 0x28
 8004e3a:	42a3      	cmp	r3, r4
 8004e3c:	bf08      	it	eq
 8004e3e:	2301      	moveq	r3, #1
 8004e40:	4620      	mov	r0, r4
 8004e42:	bf08      	it	eq
 8004e44:	61a3      	streq	r3, [r4, #24]
 8004e46:	f000 f81f 	bl	8004e88 <__sfp>
 8004e4a:	6060      	str	r0, [r4, #4]
 8004e4c:	4620      	mov	r0, r4
 8004e4e:	f000 f81b 	bl	8004e88 <__sfp>
 8004e52:	60a0      	str	r0, [r4, #8]
 8004e54:	4620      	mov	r0, r4
 8004e56:	f000 f817 	bl	8004e88 <__sfp>
 8004e5a:	2200      	movs	r2, #0
 8004e5c:	2104      	movs	r1, #4
 8004e5e:	60e0      	str	r0, [r4, #12]
 8004e60:	6860      	ldr	r0, [r4, #4]
 8004e62:	f7ff ff81 	bl	8004d68 <std>
 8004e66:	2201      	movs	r2, #1
 8004e68:	2109      	movs	r1, #9
 8004e6a:	68a0      	ldr	r0, [r4, #8]
 8004e6c:	f7ff ff7c 	bl	8004d68 <std>
 8004e70:	2202      	movs	r2, #2
 8004e72:	2112      	movs	r1, #18
 8004e74:	68e0      	ldr	r0, [r4, #12]
 8004e76:	f7ff ff77 	bl	8004d68 <std>
 8004e7a:	2301      	movs	r3, #1
 8004e7c:	61a3      	str	r3, [r4, #24]
 8004e7e:	e7d1      	b.n	8004e24 <__sinit+0xc>
 8004e80:	0800538c 	.word	0x0800538c
 8004e84:	08004db1 	.word	0x08004db1

08004e88 <__sfp>:
 8004e88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e8a:	4607      	mov	r7, r0
 8004e8c:	f7ff ffac 	bl	8004de8 <__sfp_lock_acquire>
 8004e90:	4b1e      	ldr	r3, [pc, #120]	; (8004f0c <__sfp+0x84>)
 8004e92:	681e      	ldr	r6, [r3, #0]
 8004e94:	69b3      	ldr	r3, [r6, #24]
 8004e96:	b913      	cbnz	r3, 8004e9e <__sfp+0x16>
 8004e98:	4630      	mov	r0, r6
 8004e9a:	f7ff ffbd 	bl	8004e18 <__sinit>
 8004e9e:	3648      	adds	r6, #72	; 0x48
 8004ea0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8004ea4:	3b01      	subs	r3, #1
 8004ea6:	d503      	bpl.n	8004eb0 <__sfp+0x28>
 8004ea8:	6833      	ldr	r3, [r6, #0]
 8004eaa:	b30b      	cbz	r3, 8004ef0 <__sfp+0x68>
 8004eac:	6836      	ldr	r6, [r6, #0]
 8004eae:	e7f7      	b.n	8004ea0 <__sfp+0x18>
 8004eb0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004eb4:	b9d5      	cbnz	r5, 8004eec <__sfp+0x64>
 8004eb6:	4b16      	ldr	r3, [pc, #88]	; (8004f10 <__sfp+0x88>)
 8004eb8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8004ebc:	60e3      	str	r3, [r4, #12]
 8004ebe:	6665      	str	r5, [r4, #100]	; 0x64
 8004ec0:	f000 f847 	bl	8004f52 <__retarget_lock_init_recursive>
 8004ec4:	f7ff ff96 	bl	8004df4 <__sfp_lock_release>
 8004ec8:	2208      	movs	r2, #8
 8004eca:	4629      	mov	r1, r5
 8004ecc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8004ed0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8004ed4:	6025      	str	r5, [r4, #0]
 8004ed6:	61a5      	str	r5, [r4, #24]
 8004ed8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004edc:	f7fe ffa8 	bl	8003e30 <memset>
 8004ee0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8004ee4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004ee8:	4620      	mov	r0, r4
 8004eea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004eec:	3468      	adds	r4, #104	; 0x68
 8004eee:	e7d9      	b.n	8004ea4 <__sfp+0x1c>
 8004ef0:	2104      	movs	r1, #4
 8004ef2:	4638      	mov	r0, r7
 8004ef4:	f7ff ff62 	bl	8004dbc <__sfmoreglue>
 8004ef8:	4604      	mov	r4, r0
 8004efa:	6030      	str	r0, [r6, #0]
 8004efc:	2800      	cmp	r0, #0
 8004efe:	d1d5      	bne.n	8004eac <__sfp+0x24>
 8004f00:	f7ff ff78 	bl	8004df4 <__sfp_lock_release>
 8004f04:	230c      	movs	r3, #12
 8004f06:	603b      	str	r3, [r7, #0]
 8004f08:	e7ee      	b.n	8004ee8 <__sfp+0x60>
 8004f0a:	bf00      	nop
 8004f0c:	0800538c 	.word	0x0800538c
 8004f10:	ffff0001 	.word	0xffff0001

08004f14 <_fwalk_reent>:
 8004f14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004f18:	4606      	mov	r6, r0
 8004f1a:	4688      	mov	r8, r1
 8004f1c:	2700      	movs	r7, #0
 8004f1e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004f22:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004f26:	f1b9 0901 	subs.w	r9, r9, #1
 8004f2a:	d505      	bpl.n	8004f38 <_fwalk_reent+0x24>
 8004f2c:	6824      	ldr	r4, [r4, #0]
 8004f2e:	2c00      	cmp	r4, #0
 8004f30:	d1f7      	bne.n	8004f22 <_fwalk_reent+0xe>
 8004f32:	4638      	mov	r0, r7
 8004f34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004f38:	89ab      	ldrh	r3, [r5, #12]
 8004f3a:	2b01      	cmp	r3, #1
 8004f3c:	d907      	bls.n	8004f4e <_fwalk_reent+0x3a>
 8004f3e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004f42:	3301      	adds	r3, #1
 8004f44:	d003      	beq.n	8004f4e <_fwalk_reent+0x3a>
 8004f46:	4629      	mov	r1, r5
 8004f48:	4630      	mov	r0, r6
 8004f4a:	47c0      	blx	r8
 8004f4c:	4307      	orrs	r7, r0
 8004f4e:	3568      	adds	r5, #104	; 0x68
 8004f50:	e7e9      	b.n	8004f26 <_fwalk_reent+0x12>

08004f52 <__retarget_lock_init_recursive>:
 8004f52:	4770      	bx	lr

08004f54 <__retarget_lock_acquire_recursive>:
 8004f54:	4770      	bx	lr

08004f56 <__retarget_lock_release_recursive>:
 8004f56:	4770      	bx	lr

08004f58 <__swhatbuf_r>:
 8004f58:	b570      	push	{r4, r5, r6, lr}
 8004f5a:	460e      	mov	r6, r1
 8004f5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004f60:	4614      	mov	r4, r2
 8004f62:	2900      	cmp	r1, #0
 8004f64:	461d      	mov	r5, r3
 8004f66:	b096      	sub	sp, #88	; 0x58
 8004f68:	da07      	bge.n	8004f7a <__swhatbuf_r+0x22>
 8004f6a:	2300      	movs	r3, #0
 8004f6c:	602b      	str	r3, [r5, #0]
 8004f6e:	89b3      	ldrh	r3, [r6, #12]
 8004f70:	061a      	lsls	r2, r3, #24
 8004f72:	d410      	bmi.n	8004f96 <__swhatbuf_r+0x3e>
 8004f74:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004f78:	e00e      	b.n	8004f98 <__swhatbuf_r+0x40>
 8004f7a:	466a      	mov	r2, sp
 8004f7c:	f000 f954 	bl	8005228 <_fstat_r>
 8004f80:	2800      	cmp	r0, #0
 8004f82:	dbf2      	blt.n	8004f6a <__swhatbuf_r+0x12>
 8004f84:	9a01      	ldr	r2, [sp, #4]
 8004f86:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004f8a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8004f8e:	425a      	negs	r2, r3
 8004f90:	415a      	adcs	r2, r3
 8004f92:	602a      	str	r2, [r5, #0]
 8004f94:	e7ee      	b.n	8004f74 <__swhatbuf_r+0x1c>
 8004f96:	2340      	movs	r3, #64	; 0x40
 8004f98:	2000      	movs	r0, #0
 8004f9a:	6023      	str	r3, [r4, #0]
 8004f9c:	b016      	add	sp, #88	; 0x58
 8004f9e:	bd70      	pop	{r4, r5, r6, pc}

08004fa0 <__smakebuf_r>:
 8004fa0:	898b      	ldrh	r3, [r1, #12]
 8004fa2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004fa4:	079d      	lsls	r5, r3, #30
 8004fa6:	4606      	mov	r6, r0
 8004fa8:	460c      	mov	r4, r1
 8004faa:	d507      	bpl.n	8004fbc <__smakebuf_r+0x1c>
 8004fac:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004fb0:	6023      	str	r3, [r4, #0]
 8004fb2:	6123      	str	r3, [r4, #16]
 8004fb4:	2301      	movs	r3, #1
 8004fb6:	6163      	str	r3, [r4, #20]
 8004fb8:	b002      	add	sp, #8
 8004fba:	bd70      	pop	{r4, r5, r6, pc}
 8004fbc:	466a      	mov	r2, sp
 8004fbe:	ab01      	add	r3, sp, #4
 8004fc0:	f7ff ffca 	bl	8004f58 <__swhatbuf_r>
 8004fc4:	9900      	ldr	r1, [sp, #0]
 8004fc6:	4605      	mov	r5, r0
 8004fc8:	4630      	mov	r0, r6
 8004fca:	f7ff f88f 	bl	80040ec <_malloc_r>
 8004fce:	b948      	cbnz	r0, 8004fe4 <__smakebuf_r+0x44>
 8004fd0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004fd4:	059a      	lsls	r2, r3, #22
 8004fd6:	d4ef      	bmi.n	8004fb8 <__smakebuf_r+0x18>
 8004fd8:	f023 0303 	bic.w	r3, r3, #3
 8004fdc:	f043 0302 	orr.w	r3, r3, #2
 8004fe0:	81a3      	strh	r3, [r4, #12]
 8004fe2:	e7e3      	b.n	8004fac <__smakebuf_r+0xc>
 8004fe4:	4b0d      	ldr	r3, [pc, #52]	; (800501c <__smakebuf_r+0x7c>)
 8004fe6:	62b3      	str	r3, [r6, #40]	; 0x28
 8004fe8:	89a3      	ldrh	r3, [r4, #12]
 8004fea:	6020      	str	r0, [r4, #0]
 8004fec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004ff0:	81a3      	strh	r3, [r4, #12]
 8004ff2:	9b00      	ldr	r3, [sp, #0]
 8004ff4:	6120      	str	r0, [r4, #16]
 8004ff6:	6163      	str	r3, [r4, #20]
 8004ff8:	9b01      	ldr	r3, [sp, #4]
 8004ffa:	b15b      	cbz	r3, 8005014 <__smakebuf_r+0x74>
 8004ffc:	4630      	mov	r0, r6
 8004ffe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005002:	f000 f923 	bl	800524c <_isatty_r>
 8005006:	b128      	cbz	r0, 8005014 <__smakebuf_r+0x74>
 8005008:	89a3      	ldrh	r3, [r4, #12]
 800500a:	f023 0303 	bic.w	r3, r3, #3
 800500e:	f043 0301 	orr.w	r3, r3, #1
 8005012:	81a3      	strh	r3, [r4, #12]
 8005014:	89a0      	ldrh	r0, [r4, #12]
 8005016:	4305      	orrs	r5, r0
 8005018:	81a5      	strh	r5, [r4, #12]
 800501a:	e7cd      	b.n	8004fb8 <__smakebuf_r+0x18>
 800501c:	08004db1 	.word	0x08004db1

08005020 <memchr>:
 8005020:	4603      	mov	r3, r0
 8005022:	b510      	push	{r4, lr}
 8005024:	b2c9      	uxtb	r1, r1
 8005026:	4402      	add	r2, r0
 8005028:	4293      	cmp	r3, r2
 800502a:	4618      	mov	r0, r3
 800502c:	d101      	bne.n	8005032 <memchr+0x12>
 800502e:	2000      	movs	r0, #0
 8005030:	e003      	b.n	800503a <memchr+0x1a>
 8005032:	7804      	ldrb	r4, [r0, #0]
 8005034:	3301      	adds	r3, #1
 8005036:	428c      	cmp	r4, r1
 8005038:	d1f6      	bne.n	8005028 <memchr+0x8>
 800503a:	bd10      	pop	{r4, pc}

0800503c <memmove>:
 800503c:	4288      	cmp	r0, r1
 800503e:	b510      	push	{r4, lr}
 8005040:	eb01 0402 	add.w	r4, r1, r2
 8005044:	d902      	bls.n	800504c <memmove+0x10>
 8005046:	4284      	cmp	r4, r0
 8005048:	4623      	mov	r3, r4
 800504a:	d807      	bhi.n	800505c <memmove+0x20>
 800504c:	1e43      	subs	r3, r0, #1
 800504e:	42a1      	cmp	r1, r4
 8005050:	d008      	beq.n	8005064 <memmove+0x28>
 8005052:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005056:	f803 2f01 	strb.w	r2, [r3, #1]!
 800505a:	e7f8      	b.n	800504e <memmove+0x12>
 800505c:	4601      	mov	r1, r0
 800505e:	4402      	add	r2, r0
 8005060:	428a      	cmp	r2, r1
 8005062:	d100      	bne.n	8005066 <memmove+0x2a>
 8005064:	bd10      	pop	{r4, pc}
 8005066:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800506a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800506e:	e7f7      	b.n	8005060 <memmove+0x24>

08005070 <__malloc_lock>:
 8005070:	4801      	ldr	r0, [pc, #4]	; (8005078 <__malloc_lock+0x8>)
 8005072:	f7ff bf6f 	b.w	8004f54 <__retarget_lock_acquire_recursive>
 8005076:	bf00      	nop
 8005078:	20001608 	.word	0x20001608

0800507c <__malloc_unlock>:
 800507c:	4801      	ldr	r0, [pc, #4]	; (8005084 <__malloc_unlock+0x8>)
 800507e:	f7ff bf6a 	b.w	8004f56 <__retarget_lock_release_recursive>
 8005082:	bf00      	nop
 8005084:	20001608 	.word	0x20001608

08005088 <_realloc_r>:
 8005088:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800508a:	4607      	mov	r7, r0
 800508c:	4614      	mov	r4, r2
 800508e:	460e      	mov	r6, r1
 8005090:	b921      	cbnz	r1, 800509c <_realloc_r+0x14>
 8005092:	4611      	mov	r1, r2
 8005094:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005098:	f7ff b828 	b.w	80040ec <_malloc_r>
 800509c:	b922      	cbnz	r2, 80050a8 <_realloc_r+0x20>
 800509e:	f7fe ffd9 	bl	8004054 <_free_r>
 80050a2:	4625      	mov	r5, r4
 80050a4:	4628      	mov	r0, r5
 80050a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80050a8:	f000 f8f2 	bl	8005290 <_malloc_usable_size_r>
 80050ac:	42a0      	cmp	r0, r4
 80050ae:	d20f      	bcs.n	80050d0 <_realloc_r+0x48>
 80050b0:	4621      	mov	r1, r4
 80050b2:	4638      	mov	r0, r7
 80050b4:	f7ff f81a 	bl	80040ec <_malloc_r>
 80050b8:	4605      	mov	r5, r0
 80050ba:	2800      	cmp	r0, #0
 80050bc:	d0f2      	beq.n	80050a4 <_realloc_r+0x1c>
 80050be:	4631      	mov	r1, r6
 80050c0:	4622      	mov	r2, r4
 80050c2:	f7fe fea7 	bl	8003e14 <memcpy>
 80050c6:	4631      	mov	r1, r6
 80050c8:	4638      	mov	r0, r7
 80050ca:	f7fe ffc3 	bl	8004054 <_free_r>
 80050ce:	e7e9      	b.n	80050a4 <_realloc_r+0x1c>
 80050d0:	4635      	mov	r5, r6
 80050d2:	e7e7      	b.n	80050a4 <_realloc_r+0x1c>

080050d4 <_raise_r>:
 80050d4:	291f      	cmp	r1, #31
 80050d6:	b538      	push	{r3, r4, r5, lr}
 80050d8:	4604      	mov	r4, r0
 80050da:	460d      	mov	r5, r1
 80050dc:	d904      	bls.n	80050e8 <_raise_r+0x14>
 80050de:	2316      	movs	r3, #22
 80050e0:	6003      	str	r3, [r0, #0]
 80050e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80050e6:	bd38      	pop	{r3, r4, r5, pc}
 80050e8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80050ea:	b112      	cbz	r2, 80050f2 <_raise_r+0x1e>
 80050ec:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80050f0:	b94b      	cbnz	r3, 8005106 <_raise_r+0x32>
 80050f2:	4620      	mov	r0, r4
 80050f4:	f000 f830 	bl	8005158 <_getpid_r>
 80050f8:	462a      	mov	r2, r5
 80050fa:	4601      	mov	r1, r0
 80050fc:	4620      	mov	r0, r4
 80050fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005102:	f000 b817 	b.w	8005134 <_kill_r>
 8005106:	2b01      	cmp	r3, #1
 8005108:	d00a      	beq.n	8005120 <_raise_r+0x4c>
 800510a:	1c59      	adds	r1, r3, #1
 800510c:	d103      	bne.n	8005116 <_raise_r+0x42>
 800510e:	2316      	movs	r3, #22
 8005110:	6003      	str	r3, [r0, #0]
 8005112:	2001      	movs	r0, #1
 8005114:	e7e7      	b.n	80050e6 <_raise_r+0x12>
 8005116:	2400      	movs	r4, #0
 8005118:	4628      	mov	r0, r5
 800511a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800511e:	4798      	blx	r3
 8005120:	2000      	movs	r0, #0
 8005122:	e7e0      	b.n	80050e6 <_raise_r+0x12>

08005124 <raise>:
 8005124:	4b02      	ldr	r3, [pc, #8]	; (8005130 <raise+0xc>)
 8005126:	4601      	mov	r1, r0
 8005128:	6818      	ldr	r0, [r3, #0]
 800512a:	f7ff bfd3 	b.w	80050d4 <_raise_r>
 800512e:	bf00      	nop
 8005130:	200000e0 	.word	0x200000e0

08005134 <_kill_r>:
 8005134:	b538      	push	{r3, r4, r5, lr}
 8005136:	2300      	movs	r3, #0
 8005138:	4d06      	ldr	r5, [pc, #24]	; (8005154 <_kill_r+0x20>)
 800513a:	4604      	mov	r4, r0
 800513c:	4608      	mov	r0, r1
 800513e:	4611      	mov	r1, r2
 8005140:	602b      	str	r3, [r5, #0]
 8005142:	f7fb ffca 	bl	80010da <_kill>
 8005146:	1c43      	adds	r3, r0, #1
 8005148:	d102      	bne.n	8005150 <_kill_r+0x1c>
 800514a:	682b      	ldr	r3, [r5, #0]
 800514c:	b103      	cbz	r3, 8005150 <_kill_r+0x1c>
 800514e:	6023      	str	r3, [r4, #0]
 8005150:	bd38      	pop	{r3, r4, r5, pc}
 8005152:	bf00      	nop
 8005154:	20001600 	.word	0x20001600

08005158 <_getpid_r>:
 8005158:	f7fb bfb8 	b.w	80010cc <_getpid>

0800515c <__sread>:
 800515c:	b510      	push	{r4, lr}
 800515e:	460c      	mov	r4, r1
 8005160:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005164:	f000 f89c 	bl	80052a0 <_read_r>
 8005168:	2800      	cmp	r0, #0
 800516a:	bfab      	itete	ge
 800516c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800516e:	89a3      	ldrhlt	r3, [r4, #12]
 8005170:	181b      	addge	r3, r3, r0
 8005172:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005176:	bfac      	ite	ge
 8005178:	6563      	strge	r3, [r4, #84]	; 0x54
 800517a:	81a3      	strhlt	r3, [r4, #12]
 800517c:	bd10      	pop	{r4, pc}

0800517e <__swrite>:
 800517e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005182:	461f      	mov	r7, r3
 8005184:	898b      	ldrh	r3, [r1, #12]
 8005186:	4605      	mov	r5, r0
 8005188:	05db      	lsls	r3, r3, #23
 800518a:	460c      	mov	r4, r1
 800518c:	4616      	mov	r6, r2
 800518e:	d505      	bpl.n	800519c <__swrite+0x1e>
 8005190:	2302      	movs	r3, #2
 8005192:	2200      	movs	r2, #0
 8005194:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005198:	f000 f868 	bl	800526c <_lseek_r>
 800519c:	89a3      	ldrh	r3, [r4, #12]
 800519e:	4632      	mov	r2, r6
 80051a0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80051a4:	81a3      	strh	r3, [r4, #12]
 80051a6:	4628      	mov	r0, r5
 80051a8:	463b      	mov	r3, r7
 80051aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80051ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80051b2:	f000 b817 	b.w	80051e4 <_write_r>

080051b6 <__sseek>:
 80051b6:	b510      	push	{r4, lr}
 80051b8:	460c      	mov	r4, r1
 80051ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80051be:	f000 f855 	bl	800526c <_lseek_r>
 80051c2:	1c43      	adds	r3, r0, #1
 80051c4:	89a3      	ldrh	r3, [r4, #12]
 80051c6:	bf15      	itete	ne
 80051c8:	6560      	strne	r0, [r4, #84]	; 0x54
 80051ca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80051ce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80051d2:	81a3      	strheq	r3, [r4, #12]
 80051d4:	bf18      	it	ne
 80051d6:	81a3      	strhne	r3, [r4, #12]
 80051d8:	bd10      	pop	{r4, pc}

080051da <__sclose>:
 80051da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80051de:	f000 b813 	b.w	8005208 <_close_r>
	...

080051e4 <_write_r>:
 80051e4:	b538      	push	{r3, r4, r5, lr}
 80051e6:	4604      	mov	r4, r0
 80051e8:	4608      	mov	r0, r1
 80051ea:	4611      	mov	r1, r2
 80051ec:	2200      	movs	r2, #0
 80051ee:	4d05      	ldr	r5, [pc, #20]	; (8005204 <_write_r+0x20>)
 80051f0:	602a      	str	r2, [r5, #0]
 80051f2:	461a      	mov	r2, r3
 80051f4:	f7fb ffa8 	bl	8001148 <_write>
 80051f8:	1c43      	adds	r3, r0, #1
 80051fa:	d102      	bne.n	8005202 <_write_r+0x1e>
 80051fc:	682b      	ldr	r3, [r5, #0]
 80051fe:	b103      	cbz	r3, 8005202 <_write_r+0x1e>
 8005200:	6023      	str	r3, [r4, #0]
 8005202:	bd38      	pop	{r3, r4, r5, pc}
 8005204:	20001600 	.word	0x20001600

08005208 <_close_r>:
 8005208:	b538      	push	{r3, r4, r5, lr}
 800520a:	2300      	movs	r3, #0
 800520c:	4d05      	ldr	r5, [pc, #20]	; (8005224 <_close_r+0x1c>)
 800520e:	4604      	mov	r4, r0
 8005210:	4608      	mov	r0, r1
 8005212:	602b      	str	r3, [r5, #0]
 8005214:	f7fb ffb4 	bl	8001180 <_close>
 8005218:	1c43      	adds	r3, r0, #1
 800521a:	d102      	bne.n	8005222 <_close_r+0x1a>
 800521c:	682b      	ldr	r3, [r5, #0]
 800521e:	b103      	cbz	r3, 8005222 <_close_r+0x1a>
 8005220:	6023      	str	r3, [r4, #0]
 8005222:	bd38      	pop	{r3, r4, r5, pc}
 8005224:	20001600 	.word	0x20001600

08005228 <_fstat_r>:
 8005228:	b538      	push	{r3, r4, r5, lr}
 800522a:	2300      	movs	r3, #0
 800522c:	4d06      	ldr	r5, [pc, #24]	; (8005248 <_fstat_r+0x20>)
 800522e:	4604      	mov	r4, r0
 8005230:	4608      	mov	r0, r1
 8005232:	4611      	mov	r1, r2
 8005234:	602b      	str	r3, [r5, #0]
 8005236:	f7fb ffae 	bl	8001196 <_fstat>
 800523a:	1c43      	adds	r3, r0, #1
 800523c:	d102      	bne.n	8005244 <_fstat_r+0x1c>
 800523e:	682b      	ldr	r3, [r5, #0]
 8005240:	b103      	cbz	r3, 8005244 <_fstat_r+0x1c>
 8005242:	6023      	str	r3, [r4, #0]
 8005244:	bd38      	pop	{r3, r4, r5, pc}
 8005246:	bf00      	nop
 8005248:	20001600 	.word	0x20001600

0800524c <_isatty_r>:
 800524c:	b538      	push	{r3, r4, r5, lr}
 800524e:	2300      	movs	r3, #0
 8005250:	4d05      	ldr	r5, [pc, #20]	; (8005268 <_isatty_r+0x1c>)
 8005252:	4604      	mov	r4, r0
 8005254:	4608      	mov	r0, r1
 8005256:	602b      	str	r3, [r5, #0]
 8005258:	f7fb ffac 	bl	80011b4 <_isatty>
 800525c:	1c43      	adds	r3, r0, #1
 800525e:	d102      	bne.n	8005266 <_isatty_r+0x1a>
 8005260:	682b      	ldr	r3, [r5, #0]
 8005262:	b103      	cbz	r3, 8005266 <_isatty_r+0x1a>
 8005264:	6023      	str	r3, [r4, #0]
 8005266:	bd38      	pop	{r3, r4, r5, pc}
 8005268:	20001600 	.word	0x20001600

0800526c <_lseek_r>:
 800526c:	b538      	push	{r3, r4, r5, lr}
 800526e:	4604      	mov	r4, r0
 8005270:	4608      	mov	r0, r1
 8005272:	4611      	mov	r1, r2
 8005274:	2200      	movs	r2, #0
 8005276:	4d05      	ldr	r5, [pc, #20]	; (800528c <_lseek_r+0x20>)
 8005278:	602a      	str	r2, [r5, #0]
 800527a:	461a      	mov	r2, r3
 800527c:	f7fb ffa4 	bl	80011c8 <_lseek>
 8005280:	1c43      	adds	r3, r0, #1
 8005282:	d102      	bne.n	800528a <_lseek_r+0x1e>
 8005284:	682b      	ldr	r3, [r5, #0]
 8005286:	b103      	cbz	r3, 800528a <_lseek_r+0x1e>
 8005288:	6023      	str	r3, [r4, #0]
 800528a:	bd38      	pop	{r3, r4, r5, pc}
 800528c:	20001600 	.word	0x20001600

08005290 <_malloc_usable_size_r>:
 8005290:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005294:	1f18      	subs	r0, r3, #4
 8005296:	2b00      	cmp	r3, #0
 8005298:	bfbc      	itt	lt
 800529a:	580b      	ldrlt	r3, [r1, r0]
 800529c:	18c0      	addlt	r0, r0, r3
 800529e:	4770      	bx	lr

080052a0 <_read_r>:
 80052a0:	b538      	push	{r3, r4, r5, lr}
 80052a2:	4604      	mov	r4, r0
 80052a4:	4608      	mov	r0, r1
 80052a6:	4611      	mov	r1, r2
 80052a8:	2200      	movs	r2, #0
 80052aa:	4d05      	ldr	r5, [pc, #20]	; (80052c0 <_read_r+0x20>)
 80052ac:	602a      	str	r2, [r5, #0]
 80052ae:	461a      	mov	r2, r3
 80052b0:	f7fb ff2d 	bl	800110e <_read>
 80052b4:	1c43      	adds	r3, r0, #1
 80052b6:	d102      	bne.n	80052be <_read_r+0x1e>
 80052b8:	682b      	ldr	r3, [r5, #0]
 80052ba:	b103      	cbz	r3, 80052be <_read_r+0x1e>
 80052bc:	6023      	str	r3, [r4, #0]
 80052be:	bd38      	pop	{r3, r4, r5, pc}
 80052c0:	20001600 	.word	0x20001600

080052c4 <_gettimeofday>:
 80052c4:	2258      	movs	r2, #88	; 0x58
 80052c6:	4b02      	ldr	r3, [pc, #8]	; (80052d0 <_gettimeofday+0xc>)
 80052c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80052cc:	601a      	str	r2, [r3, #0]
 80052ce:	4770      	bx	lr
 80052d0:	20001600 	.word	0x20001600

080052d4 <_init>:
 80052d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052d6:	bf00      	nop
 80052d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80052da:	bc08      	pop	{r3}
 80052dc:	469e      	mov	lr, r3
 80052de:	4770      	bx	lr

080052e0 <_fini>:
 80052e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052e2:	bf00      	nop
 80052e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80052e6:	bc08      	pop	{r3}
 80052e8:	469e      	mov	lr, r3
 80052ea:	4770      	bx	lr

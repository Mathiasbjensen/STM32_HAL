
BluePillHAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004d2c  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001e4  08004e3c  08004e3c  00014e3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005020  08005020  00020100  2**0
                  CONTENTS
  4 .ARM          00000000  08005020  08005020  00020100  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005020  08005020  00020100  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005020  08005020  00015020  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005024  08005024  00015024  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000100  20000000  08005028  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000121c  20000100  08005128  00020100  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000131c  08005128  0002131c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020100  2**0
                  CONTENTS, READONLY
 12 .debug_info   00012881  00000000  00000000  00020129  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002ddb  00000000  00000000  000329aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000010d8  00000000  00000000  00035788  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000f90  00000000  00000000  00036860  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019cb5  00000000  00000000  000377f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00010a74  00000000  00000000  000514a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000939a3  00000000  00000000  00061f19  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f58bc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005124  00000000  00000000  000f5910  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         00000024  00000000  00000000  000faa34  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      0000004e  00000000  00000000  000faa58  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000100 	.word	0x20000100
 800012c:	00000000 	.word	0x00000000
 8000130:	08004e24 	.word	0x08004e24

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000104 	.word	0x20000104
 800014c:	08004e24 	.word	0x08004e24

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <vApplicationGetIdleTaskMemory>:
 8000160:	b480      	push	{r7}
 8000162:	b085      	sub	sp, #20
 8000164:	af00      	add	r7, sp, #0
 8000166:	60f8      	str	r0, [r7, #12]
 8000168:	60b9      	str	r1, [r7, #8]
 800016a:	607a      	str	r2, [r7, #4]
 800016c:	68fb      	ldr	r3, [r7, #12]
 800016e:	4a06      	ldr	r2, [pc, #24]	; (8000188 <vApplicationGetIdleTaskMemory+0x28>)
 8000170:	601a      	str	r2, [r3, #0]
 8000172:	68bb      	ldr	r3, [r7, #8]
 8000174:	4a05      	ldr	r2, [pc, #20]	; (800018c <vApplicationGetIdleTaskMemory+0x2c>)
 8000176:	601a      	str	r2, [r3, #0]
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	2280      	movs	r2, #128	; 0x80
 800017c:	601a      	str	r2, [r3, #0]
 800017e:	bf00      	nop
 8000180:	3714      	adds	r7, #20
 8000182:	46bd      	mov	sp, r7
 8000184:	bc80      	pop	{r7}
 8000186:	4770      	bx	lr
 8000188:	2000011c 	.word	0x2000011c
 800018c:	20000170 	.word	0x20000170

08000190 <SARA_Init>:
	HAL_UART_Receive(&huart1, msg, 60, 10)

}*/


void SARA_Init() {
 8000190:	b580      	push	{r7, lr}
 8000192:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARApause, strlen(SARApause), 10);
 8000194:	482b      	ldr	r0, [pc, #172]	; (8000244 <SARA_Init+0xb4>)
 8000196:	f7ff ffdb 	bl	8000150 <strlen>
 800019a:	4603      	mov	r3, r0
 800019c:	b29a      	uxth	r2, r3
 800019e:	230a      	movs	r3, #10
 80001a0:	4928      	ldr	r1, [pc, #160]	; (8000244 <SARA_Init+0xb4>)
 80001a2:	4829      	ldr	r0, [pc, #164]	; (8000248 <SARA_Init+0xb8>)
 80001a4:	f001 ffdd 	bl	8002162 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001a8:	2364      	movs	r3, #100	; 0x64
 80001aa:	2280      	movs	r2, #128	; 0x80
 80001ac:	4927      	ldr	r1, [pc, #156]	; (800024c <SARA_Init+0xbc>)
 80001ae:	4826      	ldr	r0, [pc, #152]	; (8000248 <SARA_Init+0xb8>)
 80001b0:	f002 f869 	bl	8002286 <HAL_UART_Receive>
	osDelay(500);
 80001b4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001b8:	f002 fa46 	bl	8002648 <osDelay>
	HAL_UART_Transmit(&huart1, SARAumnoprof, strlen(SARAumnoprof), 10);
 80001bc:	4824      	ldr	r0, [pc, #144]	; (8000250 <SARA_Init+0xc0>)
 80001be:	f7ff ffc7 	bl	8000150 <strlen>
 80001c2:	4603      	mov	r3, r0
 80001c4:	b29a      	uxth	r2, r3
 80001c6:	230a      	movs	r3, #10
 80001c8:	4921      	ldr	r1, [pc, #132]	; (8000250 <SARA_Init+0xc0>)
 80001ca:	481f      	ldr	r0, [pc, #124]	; (8000248 <SARA_Init+0xb8>)
 80001cc:	f001 ffc9 	bl	8002162 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001d0:	2364      	movs	r3, #100	; 0x64
 80001d2:	2280      	movs	r2, #128	; 0x80
 80001d4:	491d      	ldr	r1, [pc, #116]	; (800024c <SARA_Init+0xbc>)
 80001d6:	481c      	ldr	r0, [pc, #112]	; (8000248 <SARA_Init+0xb8>)
 80001d8:	f002 f855 	bl	8002286 <HAL_UART_Receive>
	osDelay(500);
 80001dc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80001e0:	f002 fa32 	bl	8002648 <osDelay>
	//HAL_UART_Transmit(&huart1, cereg, strlen(cereg), 10);
	//osDelay(250);
	HAL_UART_Transmit(&huart1, SARAcops, strlen(SARAcops), 10);
 80001e4:	481b      	ldr	r0, [pc, #108]	; (8000254 <SARA_Init+0xc4>)
 80001e6:	f7ff ffb3 	bl	8000150 <strlen>
 80001ea:	4603      	mov	r3, r0
 80001ec:	b29a      	uxth	r2, r3
 80001ee:	230a      	movs	r3, #10
 80001f0:	4918      	ldr	r1, [pc, #96]	; (8000254 <SARA_Init+0xc4>)
 80001f2:	4815      	ldr	r0, [pc, #84]	; (8000248 <SARA_Init+0xb8>)
 80001f4:	f001 ffb5 	bl	8002162 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 80001f8:	2364      	movs	r3, #100	; 0x64
 80001fa:	2280      	movs	r2, #128	; 0x80
 80001fc:	4913      	ldr	r1, [pc, #76]	; (800024c <SARA_Init+0xbc>)
 80001fe:	4812      	ldr	r0, [pc, #72]	; (8000248 <SARA_Init+0xb8>)
 8000200:	f002 f841 	bl	8002286 <HAL_UART_Receive>
	osDelay(500);
 8000204:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000208:	f002 fa1e 	bl	8002648 <osDelay>
	HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 10);
 800020c:	4812      	ldr	r0, [pc, #72]	; (8000258 <SARA_Init+0xc8>)
 800020e:	f7ff ff9f 	bl	8000150 <strlen>
 8000212:	4603      	mov	r3, r0
 8000214:	b29a      	uxth	r2, r3
 8000216:	230a      	movs	r3, #10
 8000218:	490f      	ldr	r1, [pc, #60]	; (8000258 <SARA_Init+0xc8>)
 800021a:	480b      	ldr	r0, [pc, #44]	; (8000248 <SARA_Init+0xb8>)
 800021c:	f001 ffa1 	bl	8002162 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000220:	2364      	movs	r3, #100	; 0x64
 8000222:	2280      	movs	r2, #128	; 0x80
 8000224:	4909      	ldr	r1, [pc, #36]	; (800024c <SARA_Init+0xbc>)
 8000226:	4808      	ldr	r0, [pc, #32]	; (8000248 <SARA_Init+0xb8>)
 8000228:	f002 f82d 	bl	8002286 <HAL_UART_Receive>
	osDelay(500);
 800022c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000230:	f002 fa0a 	bl	8002648 <osDelay>
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000234:	2364      	movs	r3, #100	; 0x64
 8000236:	2280      	movs	r2, #128	; 0x80
 8000238:	4904      	ldr	r1, [pc, #16]	; (800024c <SARA_Init+0xbc>)
 800023a:	4803      	ldr	r0, [pc, #12]	; (8000248 <SARA_Init+0xb8>)
 800023c:	f002 f823 	bl	8002286 <HAL_UART_Receive>

}
 8000240:	bf00      	nop
 8000242:	bd80      	pop	{r7, pc}
 8000244:	20000004 	.word	0x20000004
 8000248:	20001214 	.word	0x20001214
 800024c:	2000118c 	.word	0x2000118c
 8000250:	2000000c 	.word	0x2000000c
 8000254:	20000020 	.word	0x20000020
 8000258:	20000030 	.word	0x20000030

0800025c <nemeus_Power_Cycle>:

void nemeus_Power_Cycle() {
 800025c:	b580      	push	{r7, lr}
 800025e:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8000260:	2200      	movs	r2, #0
 8000262:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000266:	4827      	ldr	r0, [pc, #156]	; (8000304 <nemeus_Power_Cycle+0xa8>)
 8000268:	f001 f868 	bl	800133c <HAL_GPIO_WritePin>
    osDelay(1500);
 800026c:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8000270:	f002 f9ea 	bl	8002648 <osDelay>
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000274:	2201      	movs	r2, #1
 8000276:	f44f 7180 	mov.w	r1, #256	; 0x100
 800027a:	4822      	ldr	r0, [pc, #136]	; (8000304 <nemeus_Power_Cycle+0xa8>)
 800027c:	f001 f85e 	bl	800133c <HAL_GPIO_WritePin>
	//osDelay(150);

	HAL_UART_Transmit(&huart3, syncLora, strlen(syncLora), 10);
 8000280:	4821      	ldr	r0, [pc, #132]	; (8000308 <nemeus_Power_Cycle+0xac>)
 8000282:	f7ff ff65 	bl	8000150 <strlen>
 8000286:	4603      	mov	r3, r0
 8000288:	b29a      	uxth	r2, r3
 800028a:	230a      	movs	r3, #10
 800028c:	491e      	ldr	r1, [pc, #120]	; (8000308 <nemeus_Power_Cycle+0xac>)
 800028e:	481f      	ldr	r0, [pc, #124]	; (800030c <nemeus_Power_Cycle+0xb0>)
 8000290:	f001 ff67 	bl	8002162 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 8000294:	2364      	movs	r3, #100	; 0x64
 8000296:	2280      	movs	r2, #128	; 0x80
 8000298:	491d      	ldr	r1, [pc, #116]	; (8000310 <nemeus_Power_Cycle+0xb4>)
 800029a:	481c      	ldr	r0, [pc, #112]	; (800030c <nemeus_Power_Cycle+0xb0>)
 800029c:	f001 fff3 	bl	8002286 <HAL_UART_Receive>
	osDelay(50);
 80002a0:	2032      	movs	r0, #50	; 0x32
 80002a2:	f002 f9d1 	bl	8002648 <osDelay>

	HAL_UART_Transmit(&huart3, beginLora, strlen(beginLora), 10);
 80002a6:	481b      	ldr	r0, [pc, #108]	; (8000314 <nemeus_Power_Cycle+0xb8>)
 80002a8:	f7ff ff52 	bl	8000150 <strlen>
 80002ac:	4603      	mov	r3, r0
 80002ae:	b29a      	uxth	r2, r3
 80002b0:	230a      	movs	r3, #10
 80002b2:	4918      	ldr	r1, [pc, #96]	; (8000314 <nemeus_Power_Cycle+0xb8>)
 80002b4:	4815      	ldr	r0, [pc, #84]	; (800030c <nemeus_Power_Cycle+0xb0>)
 80002b6:	f001 ff54 	bl	8002162 <HAL_UART_Transmit>
	osDelay(3000);
 80002ba:	f640 30b8 	movw	r0, #3000	; 0xbb8
 80002be:	f002 f9c3 	bl	8002648 <osDelay>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002c2:	2364      	movs	r3, #100	; 0x64
 80002c4:	2280      	movs	r2, #128	; 0x80
 80002c6:	4912      	ldr	r1, [pc, #72]	; (8000310 <nemeus_Power_Cycle+0xb4>)
 80002c8:	4810      	ldr	r0, [pc, #64]	; (800030c <nemeus_Power_Cycle+0xb0>)
 80002ca:	f001 ffdc 	bl	8002286 <HAL_UART_Receive>

	HAL_UART_Transmit(&huart3, beginSigfox, strlen(beginSigfox), 10);
 80002ce:	4812      	ldr	r0, [pc, #72]	; (8000318 <nemeus_Power_Cycle+0xbc>)
 80002d0:	f7ff ff3e 	bl	8000150 <strlen>
 80002d4:	4603      	mov	r3, r0
 80002d6:	b29a      	uxth	r2, r3
 80002d8:	230a      	movs	r3, #10
 80002da:	490f      	ldr	r1, [pc, #60]	; (8000318 <nemeus_Power_Cycle+0xbc>)
 80002dc:	480b      	ldr	r0, [pc, #44]	; (800030c <nemeus_Power_Cycle+0xb0>)
 80002de:	f001 ff40 	bl	8002162 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002e2:	2364      	movs	r3, #100	; 0x64
 80002e4:	2280      	movs	r2, #128	; 0x80
 80002e6:	490a      	ldr	r1, [pc, #40]	; (8000310 <nemeus_Power_Cycle+0xb4>)
 80002e8:	4808      	ldr	r0, [pc, #32]	; (800030c <nemeus_Power_Cycle+0xb0>)
 80002ea:	f001 ffcc 	bl	8002286 <HAL_UART_Receive>
	osDelay(50);
 80002ee:	2032      	movs	r0, #50	; 0x32
 80002f0:	f002 f9aa 	bl	8002648 <osDelay>
	HAL_UART_Receive(&huart3, trash, 128, 100);
 80002f4:	2364      	movs	r3, #100	; 0x64
 80002f6:	2280      	movs	r2, #128	; 0x80
 80002f8:	4905      	ldr	r1, [pc, #20]	; (8000310 <nemeus_Power_Cycle+0xb4>)
 80002fa:	4804      	ldr	r0, [pc, #16]	; (800030c <nemeus_Power_Cycle+0xb0>)
 80002fc:	f001 ffc3 	bl	8002286 <HAL_UART_Receive>


}
 8000300:	bf00      	nop
 8000302:	bd80      	pop	{r7, pc}
 8000304:	40010800 	.word	0x40010800
 8000308:	20000060 	.word	0x20000060
 800030c:	2000114c 	.word	0x2000114c
 8000310:	2000118c 	.word	0x2000118c
 8000314:	2000006c 	.word	0x2000006c
 8000318:	20000078 	.word	0x20000078

0800031c <SARA_ChangeTech>:
void SARA_Get_Measurement(uint8_t * cmd){
	HAL_UART_Transmit(&huart1, cmd, strlen(cmd), 10);
	HAL_UART_Receive(&huart1, SARAresult, 128, 100);
}

void SARA_ChangeTech(uint8_t tech){ //tech should be 9 for NB
 800031c:	b580      	push	{r7, lr}
 800031e:	b084      	sub	sp, #16
 8000320:	af00      	add	r7, sp, #0
 8000322:	4603      	mov	r3, r0
 8000324:	71fb      	strb	r3, [r7, #7]

	if(tech == '7'){ //LTE-M
 8000326:	79fb      	ldrb	r3, [r7, #7]
 8000328:	2b37      	cmp	r3, #55	; 0x37
 800032a:	d10a      	bne.n	8000342 <SARA_ChangeTech+0x26>
		HAL_UART_Transmit(&huart1, SARAconnLTE, strlen(SARAconnLTE), 10);
 800032c:	481a      	ldr	r0, [pc, #104]	; (8000398 <SARA_ChangeTech+0x7c>)
 800032e:	f7ff ff0f 	bl	8000150 <strlen>
 8000332:	4603      	mov	r3, r0
 8000334:	b29a      	uxth	r2, r3
 8000336:	230a      	movs	r3, #10
 8000338:	4917      	ldr	r1, [pc, #92]	; (8000398 <SARA_ChangeTech+0x7c>)
 800033a:	4818      	ldr	r0, [pc, #96]	; (800039c <SARA_ChangeTech+0x80>)
 800033c:	f001 ff11 	bl	8002162 <HAL_UART_Transmit>
 8000340:	e009      	b.n	8000356 <SARA_ChangeTech+0x3a>
	} else { //8 = NB IOT
		HAL_UART_Transmit(&huart1, SARAconnNB, strlen(SARAconnNB), 10);
 8000342:	4817      	ldr	r0, [pc, #92]	; (80003a0 <SARA_ChangeTech+0x84>)
 8000344:	f7ff ff04 	bl	8000150 <strlen>
 8000348:	4603      	mov	r3, r0
 800034a:	b29a      	uxth	r2, r3
 800034c:	230a      	movs	r3, #10
 800034e:	4914      	ldr	r1, [pc, #80]	; (80003a0 <SARA_ChangeTech+0x84>)
 8000350:	4812      	ldr	r0, [pc, #72]	; (800039c <SARA_ChangeTech+0x80>)
 8000352:	f001 ff06 	bl	8002162 <HAL_UART_Transmit>
	}
	HAL_UART_Receive(&huart1, trash, 128, 100);
 8000356:	2364      	movs	r3, #100	; 0x64
 8000358:	2280      	movs	r2, #128	; 0x80
 800035a:	4912      	ldr	r1, [pc, #72]	; (80003a4 <SARA_ChangeTech+0x88>)
 800035c:	480f      	ldr	r0, [pc, #60]	; (800039c <SARA_ChangeTech+0x80>)
 800035e:	f001 ff92 	bl	8002286 <HAL_UART_Receive>

	uint8_t curTech; //if -1 then dont do following
	int i = 0;
 8000362:	2300      	movs	r3, #0
 8000364:	60fb      	str	r3, [r7, #12]
	do {
		SARA_CheckTech();
 8000366:	f000 f823 	bl	80003b0 <SARA_CheckTech>
		getResultParameterURAT(3, SARAtech);
 800036a:	490f      	ldr	r1, [pc, #60]	; (80003a8 <SARA_ChangeTech+0x8c>)
 800036c:	2003      	movs	r0, #3
 800036e:	f000 f83d 	bl	80003ec <getResultParameterURAT>
		//SARA_Get_Current_URAT(SARAtech);
		osDelay(1500);
 8000372:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8000376:	f002 f967 	bl	8002648 <osDelay>
		i++;
 800037a:	68fb      	ldr	r3, [r7, #12]
 800037c:	3301      	adds	r3, #1
 800037e:	60fb      	str	r3, [r7, #12]
		//sendToESP(SARATechnology);
	} while (SARATechnology[0] != tech && i < 15);
 8000380:	4b0a      	ldr	r3, [pc, #40]	; (80003ac <SARA_ChangeTech+0x90>)
 8000382:	781b      	ldrb	r3, [r3, #0]
 8000384:	79fa      	ldrb	r2, [r7, #7]
 8000386:	429a      	cmp	r2, r3
 8000388:	d002      	beq.n	8000390 <SARA_ChangeTech+0x74>
 800038a:	68fb      	ldr	r3, [r7, #12]
 800038c:	2b0e      	cmp	r3, #14
 800038e:	ddea      	ble.n	8000366 <SARA_ChangeTech+0x4a>

}
 8000390:	bf00      	nop
 8000392:	3710      	adds	r7, #16
 8000394:	46bd      	mov	sp, r7
 8000396:	bd80      	pop	{r7, pc}
 8000398:	20000030 	.word	0x20000030
 800039c:	20001214 	.word	0x20001214
 80003a0:	2000003c 	.word	0x2000003c
 80003a4:	2000118c 	.word	0x2000118c
 80003a8:	2000129c 	.word	0x2000129c
 80003ac:	20001210 	.word	0x20001210

080003b0 <SARA_CheckTech>:

void SARA_CheckTech(){
 80003b0:	b580      	push	{r7, lr}
 80003b2:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, SARAcopsCheck, strlen(SARAcopsCheck), 10);
 80003b4:	480a      	ldr	r0, [pc, #40]	; (80003e0 <SARA_CheckTech+0x30>)
 80003b6:	f7ff fecb 	bl	8000150 <strlen>
 80003ba:	4603      	mov	r3, r0
 80003bc:	b29a      	uxth	r2, r3
 80003be:	230a      	movs	r3, #10
 80003c0:	4907      	ldr	r1, [pc, #28]	; (80003e0 <SARA_CheckTech+0x30>)
 80003c2:	4808      	ldr	r0, [pc, #32]	; (80003e4 <SARA_CheckTech+0x34>)
 80003c4:	f001 fecd 	bl	8002162 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, SARAtech, 30, 750);
 80003c8:	f240 23ee 	movw	r3, #750	; 0x2ee
 80003cc:	221e      	movs	r2, #30
 80003ce:	4906      	ldr	r1, [pc, #24]	; (80003e8 <SARA_CheckTech+0x38>)
 80003d0:	4804      	ldr	r0, [pc, #16]	; (80003e4 <SARA_CheckTech+0x34>)
 80003d2:	f001 ff58 	bl	8002286 <HAL_UART_Receive>
	sendToESP(SARAtech);
 80003d6:	4804      	ldr	r0, [pc, #16]	; (80003e8 <SARA_CheckTech+0x38>)
 80003d8:	f000 f9c2 	bl	8000760 <sendToESP>
}
 80003dc:	bf00      	nop
 80003de:	bd80      	pop	{r7, pc}
 80003e0:	20000048 	.word	0x20000048
 80003e4:	20001214 	.word	0x20001214
 80003e8:	2000129c 	.word	0x2000129c

080003ec <getResultParameterURAT>:

}
*/


void getResultParameterURAT(int nParam, uint8_t * msg){
 80003ec:	b580      	push	{r7, lr}
 80003ee:	b084      	sub	sp, #16
 80003f0:	af00      	add	r7, sp, #0
 80003f2:	6078      	str	r0, [r7, #4]
 80003f4:	6039      	str	r1, [r7, #0]
	int commaCnt = 0;
 80003f6:	2300      	movs	r3, #0
 80003f8:	60fb      	str	r3, [r7, #12]
	//uint8_t result;
	//for(int i = 0; i <= strlen(msg); i++){
	int i = 0;
 80003fa:	2300      	movs	r3, #0
 80003fc:	60bb      	str	r3, [r7, #8]
	while (msg[i] != '\0'){
 80003fe:	e025      	b.n	800044c <getResultParameterURAT+0x60>
		if(msg[i] == ',' && commaCnt == nParam-1){
 8000400:	68bb      	ldr	r3, [r7, #8]
 8000402:	683a      	ldr	r2, [r7, #0]
 8000404:	4413      	add	r3, r2
 8000406:	781b      	ldrb	r3, [r3, #0]
 8000408:	2b2c      	cmp	r3, #44	; 0x2c
 800040a:	d10c      	bne.n	8000426 <getResultParameterURAT+0x3a>
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	3b01      	subs	r3, #1
 8000410:	68fa      	ldr	r2, [r7, #12]
 8000412:	429a      	cmp	r2, r3
 8000414:	d107      	bne.n	8000426 <getResultParameterURAT+0x3a>
			SARATechnology[0] = msg[i+1];
 8000416:	68bb      	ldr	r3, [r7, #8]
 8000418:	3301      	adds	r3, #1
 800041a:	683a      	ldr	r2, [r7, #0]
 800041c:	4413      	add	r3, r2
 800041e:	781a      	ldrb	r2, [r3, #0]
 8000420:	4b0f      	ldr	r3, [pc, #60]	; (8000460 <getResultParameterURAT+0x74>)
 8000422:	701a      	strb	r2, [r3, #0]
			return;
 8000424:	e018      	b.n	8000458 <getResultParameterURAT+0x6c>
		} else if(msg[i] == ','){
 8000426:	68bb      	ldr	r3, [r7, #8]
 8000428:	683a      	ldr	r2, [r7, #0]
 800042a:	4413      	add	r3, r2
 800042c:	781b      	ldrb	r3, [r3, #0]
 800042e:	2b2c      	cmp	r3, #44	; 0x2c
 8000430:	d105      	bne.n	800043e <getResultParameterURAT+0x52>
			commaCnt++;
 8000432:	68fb      	ldr	r3, [r7, #12]
 8000434:	3301      	adds	r3, #1
 8000436:	60fb      	str	r3, [r7, #12]
			sendToESP(testing);
 8000438:	480a      	ldr	r0, [pc, #40]	; (8000464 <getResultParameterURAT+0x78>)
 800043a:	f000 f991 	bl	8000760 <sendToESP>
		}
		i++;
 800043e:	68bb      	ldr	r3, [r7, #8]
 8000440:	3301      	adds	r3, #1
 8000442:	60bb      	str	r3, [r7, #8]
		osDelay(400);
 8000444:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000448:	f002 f8fe 	bl	8002648 <osDelay>
	while (msg[i] != '\0'){
 800044c:	68bb      	ldr	r3, [r7, #8]
 800044e:	683a      	ldr	r2, [r7, #0]
 8000450:	4413      	add	r3, r2
 8000452:	781b      	ldrb	r3, [r3, #0]
 8000454:	2b00      	cmp	r3, #0
 8000456:	d1d3      	bne.n	8000400 <getResultParameterURAT+0x14>
	}

}
 8000458:	3710      	adds	r7, #16
 800045a:	46bd      	mov	sp, r7
 800045c:	bd80      	pop	{r7, pc}
 800045e:	bf00      	nop
 8000460:	20001210 	.word	0x20001210
 8000464:	20000000 	.word	0x20000000

08000468 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000468:	b5b0      	push	{r4, r5, r7, lr}
 800046a:	b08a      	sub	sp, #40	; 0x28
 800046c:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800046e:	f000 fccf 	bl	8000e10 <HAL_Init>

  /* USER CODE BEGIN Init */

  srand(time(0));
 8000472:	2000      	movs	r0, #0
 8000474:	f003 fb32 	bl	8003adc <time>
 8000478:	4603      	mov	r3, r0
 800047a:	4618      	mov	r0, r3
 800047c:	f003 fa90 	bl	80039a0 <srand>
  int x = rand();
 8000480:	f003 fabc 	bl	80039fc <rand>
 8000484:	6278      	str	r0, [r7, #36]	; 0x24
  int y = rand();
 8000486:	f003 fab9 	bl	80039fc <rand>
 800048a:	6238      	str	r0, [r7, #32]
  sprintf(randSeq, "%X", x%16);
 800048c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800048e:	425a      	negs	r2, r3
 8000490:	f003 030f 	and.w	r3, r3, #15
 8000494:	f002 020f 	and.w	r2, r2, #15
 8000498:	bf58      	it	pl
 800049a:	4253      	negpl	r3, r2
 800049c:	461a      	mov	r2, r3
 800049e:	491c      	ldr	r1, [pc, #112]	; (8000510 <main+0xa8>)
 80004a0:	481c      	ldr	r0, [pc, #112]	; (8000514 <main+0xac>)
 80004a2:	f003 faeb 	bl	8003a7c <siprintf>
  sprintf(stry, "%X", y%16);
 80004a6:	6a3b      	ldr	r3, [r7, #32]
 80004a8:	425a      	negs	r2, r3
 80004aa:	f003 030f 	and.w	r3, r3, #15
 80004ae:	f002 020f 	and.w	r2, r2, #15
 80004b2:	bf58      	it	pl
 80004b4:	4253      	negpl	r3, r2
 80004b6:	461a      	mov	r2, r3
 80004b8:	4915      	ldr	r1, [pc, #84]	; (8000510 <main+0xa8>)
 80004ba:	4817      	ldr	r0, [pc, #92]	; (8000518 <main+0xb0>)
 80004bc:	f003 fade 	bl	8003a7c <siprintf>
  strcat(randSeq, stry);
 80004c0:	4915      	ldr	r1, [pc, #84]	; (8000518 <main+0xb0>)
 80004c2:	4814      	ldr	r0, [pc, #80]	; (8000514 <main+0xac>)
 80004c4:	f003 fafa 	bl	8003abc <strcat>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80004c8:	f000 f82e 	bl	8000528 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80004cc:	f000 f8e6 	bl	800069c <MX_GPIO_Init>
  MX_USART1_UART_Init();
 80004d0:	f000 f866 	bl	80005a0 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 80004d4:	f000 f88e 	bl	80005f4 <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 80004d8:	f000 f8b6 	bl	8000648 <MX_USART3_UART_Init>
  /* USER CODE BEGIN 2 */

  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 80004dc:	2201      	movs	r2, #1
 80004de:	f44f 7180 	mov.w	r1, #256	; 0x100
 80004e2:	480e      	ldr	r0, [pc, #56]	; (800051c <main+0xb4>)
 80004e4:	f000 ff2a 	bl	800133c <HAL_GPIO_WritePin>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 80004e8:	4b0d      	ldr	r3, [pc, #52]	; (8000520 <main+0xb8>)
 80004ea:	1d3c      	adds	r4, r7, #4
 80004ec:	461d      	mov	r5, r3
 80004ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80004f0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80004f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80004f6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 80004fa:	1d3b      	adds	r3, r7, #4
 80004fc:	2100      	movs	r1, #0
 80004fe:	4618      	mov	r0, r3
 8000500:	f002 f856 	bl	80025b0 <osThreadCreate>
 8000504:	4603      	mov	r3, r0
 8000506:	4a07      	ldr	r2, [pc, #28]	; (8000524 <main+0xbc>)
 8000508:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 800050a:	f002 f84a 	bl	80025a2 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800050e:	e7fe      	b.n	800050e <main+0xa6>
 8000510:	08004e48 	.word	0x08004e48
 8000514:	200012bc 	.word	0x200012bc
 8000518:	20001258 	.word	0x20001258
 800051c:	40010800 	.word	0x40010800
 8000520:	08004e4c 	.word	0x08004e4c
 8000524:	20001148 	.word	0x20001148

08000528 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000528:	b580      	push	{r7, lr}
 800052a:	b090      	sub	sp, #64	; 0x40
 800052c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800052e:	f107 0318 	add.w	r3, r7, #24
 8000532:	2228      	movs	r2, #40	; 0x28
 8000534:	2100      	movs	r1, #0
 8000536:	4618      	mov	r0, r3
 8000538:	f003 fa2a 	bl	8003990 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800053c:	1d3b      	adds	r3, r7, #4
 800053e:	2200      	movs	r2, #0
 8000540:	601a      	str	r2, [r3, #0]
 8000542:	605a      	str	r2, [r3, #4]
 8000544:	609a      	str	r2, [r3, #8]
 8000546:	60da      	str	r2, [r3, #12]
 8000548:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800054a:	2302      	movs	r3, #2
 800054c:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800054e:	2301      	movs	r3, #1
 8000550:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000552:	2310      	movs	r3, #16
 8000554:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000556:	2300      	movs	r3, #0
 8000558:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800055a:	f107 0318 	add.w	r3, r7, #24
 800055e:	4618      	mov	r0, r3
 8000560:	f000 ff1e 	bl	80013a0 <HAL_RCC_OscConfig>
 8000564:	4603      	mov	r3, r0
 8000566:	2b00      	cmp	r3, #0
 8000568:	d001      	beq.n	800056e <SystemClock_Config+0x46>
  {
    Error_Handler();
 800056a:	f000 f9f1 	bl	8000950 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800056e:	230f      	movs	r3, #15
 8000570:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000572:	2300      	movs	r3, #0
 8000574:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000576:	2300      	movs	r3, #0
 8000578:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800057a:	2300      	movs	r3, #0
 800057c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800057e:	2300      	movs	r3, #0
 8000580:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000582:	1d3b      	adds	r3, r7, #4
 8000584:	2100      	movs	r1, #0
 8000586:	4618      	mov	r0, r3
 8000588:	f001 f98a 	bl	80018a0 <HAL_RCC_ClockConfig>
 800058c:	4603      	mov	r3, r0
 800058e:	2b00      	cmp	r3, #0
 8000590:	d001      	beq.n	8000596 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8000592:	f000 f9dd 	bl	8000950 <Error_Handler>
  }
}
 8000596:	bf00      	nop
 8000598:	3740      	adds	r7, #64	; 0x40
 800059a:	46bd      	mov	sp, r7
 800059c:	bd80      	pop	{r7, pc}
	...

080005a0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80005a0:	b580      	push	{r7, lr}
 80005a2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80005a4:	4b11      	ldr	r3, [pc, #68]	; (80005ec <MX_USART1_UART_Init+0x4c>)
 80005a6:	4a12      	ldr	r2, [pc, #72]	; (80005f0 <MX_USART1_UART_Init+0x50>)
 80005a8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 57600;
 80005aa:	4b10      	ldr	r3, [pc, #64]	; (80005ec <MX_USART1_UART_Init+0x4c>)
 80005ac:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 80005b0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80005b2:	4b0e      	ldr	r3, [pc, #56]	; (80005ec <MX_USART1_UART_Init+0x4c>)
 80005b4:	2200      	movs	r2, #0
 80005b6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80005b8:	4b0c      	ldr	r3, [pc, #48]	; (80005ec <MX_USART1_UART_Init+0x4c>)
 80005ba:	2200      	movs	r2, #0
 80005bc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80005be:	4b0b      	ldr	r3, [pc, #44]	; (80005ec <MX_USART1_UART_Init+0x4c>)
 80005c0:	2200      	movs	r2, #0
 80005c2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80005c4:	4b09      	ldr	r3, [pc, #36]	; (80005ec <MX_USART1_UART_Init+0x4c>)
 80005c6:	220c      	movs	r2, #12
 80005c8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80005ca:	4b08      	ldr	r3, [pc, #32]	; (80005ec <MX_USART1_UART_Init+0x4c>)
 80005cc:	2200      	movs	r2, #0
 80005ce:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80005d0:	4b06      	ldr	r3, [pc, #24]	; (80005ec <MX_USART1_UART_Init+0x4c>)
 80005d2:	2200      	movs	r2, #0
 80005d4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80005d6:	4805      	ldr	r0, [pc, #20]	; (80005ec <MX_USART1_UART_Init+0x4c>)
 80005d8:	f001 fd76 	bl	80020c8 <HAL_UART_Init>
 80005dc:	4603      	mov	r3, r0
 80005de:	2b00      	cmp	r3, #0
 80005e0:	d001      	beq.n	80005e6 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80005e2:	f000 f9b5 	bl	8000950 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80005e6:	bf00      	nop
 80005e8:	bd80      	pop	{r7, pc}
 80005ea:	bf00      	nop
 80005ec:	20001214 	.word	0x20001214
 80005f0:	40013800 	.word	0x40013800

080005f4 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80005f4:	b580      	push	{r7, lr}
 80005f6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80005f8:	4b11      	ldr	r3, [pc, #68]	; (8000640 <MX_USART2_UART_Init+0x4c>)
 80005fa:	4a12      	ldr	r2, [pc, #72]	; (8000644 <MX_USART2_UART_Init+0x50>)
 80005fc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 57600;
 80005fe:	4b10      	ldr	r3, [pc, #64]	; (8000640 <MX_USART2_UART_Init+0x4c>)
 8000600:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 8000604:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000606:	4b0e      	ldr	r3, [pc, #56]	; (8000640 <MX_USART2_UART_Init+0x4c>)
 8000608:	2200      	movs	r2, #0
 800060a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800060c:	4b0c      	ldr	r3, [pc, #48]	; (8000640 <MX_USART2_UART_Init+0x4c>)
 800060e:	2200      	movs	r2, #0
 8000610:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000612:	4b0b      	ldr	r3, [pc, #44]	; (8000640 <MX_USART2_UART_Init+0x4c>)
 8000614:	2200      	movs	r2, #0
 8000616:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000618:	4b09      	ldr	r3, [pc, #36]	; (8000640 <MX_USART2_UART_Init+0x4c>)
 800061a:	220c      	movs	r2, #12
 800061c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800061e:	4b08      	ldr	r3, [pc, #32]	; (8000640 <MX_USART2_UART_Init+0x4c>)
 8000620:	2200      	movs	r2, #0
 8000622:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000624:	4b06      	ldr	r3, [pc, #24]	; (8000640 <MX_USART2_UART_Init+0x4c>)
 8000626:	2200      	movs	r2, #0
 8000628:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800062a:	4805      	ldr	r0, [pc, #20]	; (8000640 <MX_USART2_UART_Init+0x4c>)
 800062c:	f001 fd4c 	bl	80020c8 <HAL_UART_Init>
 8000630:	4603      	mov	r3, r0
 8000632:	2b00      	cmp	r3, #0
 8000634:	d001      	beq.n	800063a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000636:	f000 f98b 	bl	8000950 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800063a:	bf00      	nop
 800063c:	bd80      	pop	{r7, pc}
 800063e:	bf00      	nop
 8000640:	2000125c 	.word	0x2000125c
 8000644:	40004400 	.word	0x40004400

08000648 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8000648:	b580      	push	{r7, lr}
 800064a:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 800064c:	4b11      	ldr	r3, [pc, #68]	; (8000694 <MX_USART3_UART_Init+0x4c>)
 800064e:	4a12      	ldr	r2, [pc, #72]	; (8000698 <MX_USART3_UART_Init+0x50>)
 8000650:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 38400;
 8000652:	4b10      	ldr	r3, [pc, #64]	; (8000694 <MX_USART3_UART_Init+0x4c>)
 8000654:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 8000658:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800065a:	4b0e      	ldr	r3, [pc, #56]	; (8000694 <MX_USART3_UART_Init+0x4c>)
 800065c:	2200      	movs	r2, #0
 800065e:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8000660:	4b0c      	ldr	r3, [pc, #48]	; (8000694 <MX_USART3_UART_Init+0x4c>)
 8000662:	2200      	movs	r2, #0
 8000664:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8000666:	4b0b      	ldr	r3, [pc, #44]	; (8000694 <MX_USART3_UART_Init+0x4c>)
 8000668:	2200      	movs	r2, #0
 800066a:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 800066c:	4b09      	ldr	r3, [pc, #36]	; (8000694 <MX_USART3_UART_Init+0x4c>)
 800066e:	220c      	movs	r2, #12
 8000670:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000672:	4b08      	ldr	r3, [pc, #32]	; (8000694 <MX_USART3_UART_Init+0x4c>)
 8000674:	2200      	movs	r2, #0
 8000676:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8000678:	4b06      	ldr	r3, [pc, #24]	; (8000694 <MX_USART3_UART_Init+0x4c>)
 800067a:	2200      	movs	r2, #0
 800067c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800067e:	4805      	ldr	r0, [pc, #20]	; (8000694 <MX_USART3_UART_Init+0x4c>)
 8000680:	f001 fd22 	bl	80020c8 <HAL_UART_Init>
 8000684:	4603      	mov	r3, r0
 8000686:	2b00      	cmp	r3, #0
 8000688:	d001      	beq.n	800068e <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 800068a:	f000 f961 	bl	8000950 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800068e:	bf00      	nop
 8000690:	bd80      	pop	{r7, pc}
 8000692:	bf00      	nop
 8000694:	2000114c 	.word	0x2000114c
 8000698:	40004800 	.word	0x40004800

0800069c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800069c:	b580      	push	{r7, lr}
 800069e:	b088      	sub	sp, #32
 80006a0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80006a2:	f107 0310 	add.w	r3, r7, #16
 80006a6:	2200      	movs	r2, #0
 80006a8:	601a      	str	r2, [r3, #0]
 80006aa:	605a      	str	r2, [r3, #4]
 80006ac:	609a      	str	r2, [r3, #8]
 80006ae:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80006b0:	4b28      	ldr	r3, [pc, #160]	; (8000754 <MX_GPIO_Init+0xb8>)
 80006b2:	699b      	ldr	r3, [r3, #24]
 80006b4:	4a27      	ldr	r2, [pc, #156]	; (8000754 <MX_GPIO_Init+0xb8>)
 80006b6:	f043 0310 	orr.w	r3, r3, #16
 80006ba:	6193      	str	r3, [r2, #24]
 80006bc:	4b25      	ldr	r3, [pc, #148]	; (8000754 <MX_GPIO_Init+0xb8>)
 80006be:	699b      	ldr	r3, [r3, #24]
 80006c0:	f003 0310 	and.w	r3, r3, #16
 80006c4:	60fb      	str	r3, [r7, #12]
 80006c6:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80006c8:	4b22      	ldr	r3, [pc, #136]	; (8000754 <MX_GPIO_Init+0xb8>)
 80006ca:	699b      	ldr	r3, [r3, #24]
 80006cc:	4a21      	ldr	r2, [pc, #132]	; (8000754 <MX_GPIO_Init+0xb8>)
 80006ce:	f043 0304 	orr.w	r3, r3, #4
 80006d2:	6193      	str	r3, [r2, #24]
 80006d4:	4b1f      	ldr	r3, [pc, #124]	; (8000754 <MX_GPIO_Init+0xb8>)
 80006d6:	699b      	ldr	r3, [r3, #24]
 80006d8:	f003 0304 	and.w	r3, r3, #4
 80006dc:	60bb      	str	r3, [r7, #8]
 80006de:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80006e0:	4b1c      	ldr	r3, [pc, #112]	; (8000754 <MX_GPIO_Init+0xb8>)
 80006e2:	699b      	ldr	r3, [r3, #24]
 80006e4:	4a1b      	ldr	r2, [pc, #108]	; (8000754 <MX_GPIO_Init+0xb8>)
 80006e6:	f043 0308 	orr.w	r3, r3, #8
 80006ea:	6193      	str	r3, [r2, #24]
 80006ec:	4b19      	ldr	r3, [pc, #100]	; (8000754 <MX_GPIO_Init+0xb8>)
 80006ee:	699b      	ldr	r3, [r3, #24]
 80006f0:	f003 0308 	and.w	r3, r3, #8
 80006f4:	607b      	str	r3, [r7, #4]
 80006f6:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 80006f8:	2200      	movs	r2, #0
 80006fa:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80006fe:	4816      	ldr	r0, [pc, #88]	; (8000758 <MX_GPIO_Init+0xbc>)
 8000700:	f000 fe1c 	bl	800133c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8000704:	2200      	movs	r2, #0
 8000706:	f44f 7180 	mov.w	r1, #256	; 0x100
 800070a:	4814      	ldr	r0, [pc, #80]	; (800075c <MX_GPIO_Init+0xc0>)
 800070c:	f000 fe16 	bl	800133c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000710:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000714:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000716:	2301      	movs	r3, #1
 8000718:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800071a:	2300      	movs	r3, #0
 800071c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800071e:	2302      	movs	r3, #2
 8000720:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000722:	f107 0310 	add.w	r3, r7, #16
 8000726:	4619      	mov	r1, r3
 8000728:	480b      	ldr	r0, [pc, #44]	; (8000758 <MX_GPIO_Init+0xbc>)
 800072a:	f000 fc83 	bl	8001034 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 800072e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000732:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000734:	2301      	movs	r3, #1
 8000736:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000738:	2300      	movs	r3, #0
 800073a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800073c:	2302      	movs	r3, #2
 800073e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000740:	f107 0310 	add.w	r3, r7, #16
 8000744:	4619      	mov	r1, r3
 8000746:	4805      	ldr	r0, [pc, #20]	; (800075c <MX_GPIO_Init+0xc0>)
 8000748:	f000 fc74 	bl	8001034 <HAL_GPIO_Init>

}
 800074c:	bf00      	nop
 800074e:	3720      	adds	r7, #32
 8000750:	46bd      	mov	sp, r7
 8000752:	bd80      	pop	{r7, pc}
 8000754:	40021000 	.word	0x40021000
 8000758:	40011000 	.word	0x40011000
 800075c:	40010800 	.word	0x40010800

08000760 <sendToESP>:

/* USER CODE BEGIN 4 */

void sendToESP(uint8_t * msg) {
 8000760:	b580      	push	{r7, lr}
 8000762:	b082      	sub	sp, #8
 8000764:	af00      	add	r7, sp, #0
 8000766:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart2, beginDelim, 1, 50);
 8000768:	2332      	movs	r3, #50	; 0x32
 800076a:	2201      	movs	r2, #1
 800076c:	490b      	ldr	r1, [pc, #44]	; (800079c <sendToESP+0x3c>)
 800076e:	480c      	ldr	r0, [pc, #48]	; (80007a0 <sendToESP+0x40>)
 8000770:	f001 fcf7 	bl	8002162 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, msg, strlen(msg), 50);
 8000774:	6878      	ldr	r0, [r7, #4]
 8000776:	f7ff fceb 	bl	8000150 <strlen>
 800077a:	4603      	mov	r3, r0
 800077c:	b29a      	uxth	r2, r3
 800077e:	2332      	movs	r3, #50	; 0x32
 8000780:	6879      	ldr	r1, [r7, #4]
 8000782:	4807      	ldr	r0, [pc, #28]	; (80007a0 <sendToESP+0x40>)
 8000784:	f001 fced 	bl	8002162 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, endDelim, 1, 50);
 8000788:	2332      	movs	r3, #50	; 0x32
 800078a:	2201      	movs	r2, #1
 800078c:	4905      	ldr	r1, [pc, #20]	; (80007a4 <sendToESP+0x44>)
 800078e:	4804      	ldr	r0, [pc, #16]	; (80007a0 <sendToESP+0x40>)
 8000790:	f001 fce7 	bl	8002162 <HAL_UART_Transmit>
}
 8000794:	bf00      	nop
 8000796:	3708      	adds	r7, #8
 8000798:	46bd      	mov	sp, r7
 800079a:	bd80      	pop	{r7, pc}
 800079c:	20000084 	.word	0x20000084
 80007a0:	2000125c 	.word	0x2000125c
 80007a4:	20000088 	.word	0x20000088

080007a8 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 80007a8:	b590      	push	{r4, r7, lr}
 80007aa:	b0cb      	sub	sp, #300	; 0x12c
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	1d3b      	adds	r3, r7, #4
 80007b0:	6018      	str	r0, [r3, #0]
  /* USER CODE BEGIN 5 */

  uint8_t test[] = "AT+COPS?\r\n";
 80007b2:	4a56      	ldr	r2, [pc, #344]	; (800090c <StartDefaultTask+0x164>)
 80007b4:	f507 738c 	add.w	r3, r7, #280	; 0x118
 80007b8:	ca07      	ldmia	r2, {r0, r1, r2}
 80007ba:	c303      	stmia	r3!, {r0, r1}
 80007bc:	801a      	strh	r2, [r3, #0]
 80007be:	3302      	adds	r3, #2
 80007c0:	0c12      	lsrs	r2, r2, #16
 80007c2:	701a      	strb	r2, [r3, #0]
  sendToESP(test);
 80007c4:	f507 738c 	add.w	r3, r7, #280	; 0x118
 80007c8:	4618      	mov	r0, r3
 80007ca:	f7ff ffc9 	bl	8000760 <sendToESP>
  osDelay(4500);
 80007ce:	f241 1094 	movw	r0, #4500	; 0x1194
 80007d2:	f001 ff39 	bl	8002648 <osDelay>
  SARA_Init();
 80007d6:	f7ff fcdb 	bl	8000190 <SARA_Init>
  nemeus_Power_Cycle();
 80007da:	f7ff fd3f 	bl	800025c <nemeus_Power_Cycle>

  uint8_t testRN[] = "AT+MAC=SNDLCR\r\n";
 80007de:	4b4c      	ldr	r3, [pc, #304]	; (8000910 <StartDefaultTask+0x168>)
 80007e0:	f507 7484 	add.w	r4, r7, #264	; 0x108
 80007e4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80007e6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  uint8_t sigfoxSend[23] = "AT+SF=SNDBIN,";
 80007ea:	4b4a      	ldr	r3, [pc, #296]	; (8000914 <StartDefaultTask+0x16c>)
 80007ec:	f107 04f0 	add.w	r4, r7, #240	; 0xf0
 80007f0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80007f2:	c407      	stmia	r4!, {r0, r1, r2}
 80007f4:	8023      	strh	r3, [r4, #0]
 80007f6:	f107 03fe 	add.w	r3, r7, #254	; 0xfe
 80007fa:	2200      	movs	r2, #0
 80007fc:	601a      	str	r2, [r3, #0]
 80007fe:	605a      	str	r2, [r3, #4]
 8000800:	721a      	strb	r2, [r3, #8]
  uint8_t sigfoxEnd[] = ",0\r\n";
 8000802:	4a45      	ldr	r2, [pc, #276]	; (8000918 <StartDefaultTask+0x170>)
 8000804:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 8000808:	e892 0003 	ldmia.w	r2, {r0, r1}
 800080c:	6018      	str	r0, [r3, #0]
 800080e:	3304      	adds	r3, #4
 8000810:	7019      	strb	r1, [r3, #0]
  int sigFoxSeq = 0;
 8000812:	2300      	movs	r3, #0
 8000814:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
  uint8_t myInt[4];// = "0000"

  strcat(sigfoxSend, randSeq);
 8000818:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 800081c:	493f      	ldr	r1, [pc, #252]	; (800091c <StartDefaultTask+0x174>)
 800081e:	4618      	mov	r0, r3
 8000820:	f003 f94c 	bl	8003abc <strcat>
  strcat(sigfoxSend, myInt);
 8000824:	f107 02e4 	add.w	r2, r7, #228	; 0xe4
 8000828:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 800082c:	4611      	mov	r1, r2
 800082e:	4618      	mov	r0, r3
 8000830:	f003 f944 	bl	8003abc <strcat>
  strcat(sigfoxSend, sigfoxEnd);
 8000834:	f107 02e8 	add.w	r2, r7, #232	; 0xe8
 8000838:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 800083c:	4611      	mov	r1, r2
 800083e:	4618      	mov	r0, r3
 8000840:	f003 f93c 	bl	8003abc <strcat>
  uint8_t SigFoxMessage[69];
  uint8_t saraMSG[69];

  for(;;)
  {
    osDelay(1000);
 8000844:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000848:	f001 fefe 	bl	8002648 <osDelay>
    //sendToESP(test);
    HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 800084c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000850:	4833      	ldr	r0, [pc, #204]	; (8000920 <StartDefaultTask+0x178>)
 8000852:	f000 fd8b 	bl	800136c <HAL_GPIO_TogglePin>
// **** SARA STUFF ****

    HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 8000856:	4833      	ldr	r0, [pc, #204]	; (8000924 <StartDefaultTask+0x17c>)
 8000858:	f7ff fc7a 	bl	8000150 <strlen>
 800085c:	4603      	mov	r3, r0
 800085e:	b29a      	uxth	r2, r3
 8000860:	2332      	movs	r3, #50	; 0x32
 8000862:	4930      	ldr	r1, [pc, #192]	; (8000924 <StartDefaultTask+0x17c>)
 8000864:	4830      	ldr	r0, [pc, #192]	; (8000928 <StartDefaultTask+0x180>)
 8000866:	f001 fc7c 	bl	8002162 <HAL_UART_Transmit>
    HAL_UART_Receive(&huart1, saraMSG, 69, 50);
 800086a:	f107 010c 	add.w	r1, r7, #12
 800086e:	2332      	movs	r3, #50	; 0x32
 8000870:	2245      	movs	r2, #69	; 0x45
 8000872:	482d      	ldr	r0, [pc, #180]	; (8000928 <StartDefaultTask+0x180>)
 8000874:	f001 fd07 	bl	8002286 <HAL_UART_Receive>
	sendToESP(saraMSG);
 8000878:	f107 030c 	add.w	r3, r7, #12
 800087c:	4618      	mov	r0, r3
 800087e:	f7ff ff6f 	bl	8000760 <sendToESP>
	SARA_ChangeTech('9');
 8000882:	2039      	movs	r0, #57	; 0x39
 8000884:	f7ff fd4a 	bl	800031c <SARA_ChangeTech>

	osDelay(1000);
 8000888:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800088c:	f001 fedc 	bl	8002648 <osDelay>
	HAL_UART_Transmit(&huart1, SARAcesq, strlen(SARAcesq), 50);
 8000890:	4824      	ldr	r0, [pc, #144]	; (8000924 <StartDefaultTask+0x17c>)
 8000892:	f7ff fc5d 	bl	8000150 <strlen>
 8000896:	4603      	mov	r3, r0
 8000898:	b29a      	uxth	r2, r3
 800089a:	2332      	movs	r3, #50	; 0x32
 800089c:	4921      	ldr	r1, [pc, #132]	; (8000924 <StartDefaultTask+0x17c>)
 800089e:	4822      	ldr	r0, [pc, #136]	; (8000928 <StartDefaultTask+0x180>)
 80008a0:	f001 fc5f 	bl	8002162 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, saraMSG, 69, 50);
 80008a4:	f107 010c 	add.w	r1, r7, #12
 80008a8:	2332      	movs	r3, #50	; 0x32
 80008aa:	2245      	movs	r2, #69	; 0x45
 80008ac:	481e      	ldr	r0, [pc, #120]	; (8000928 <StartDefaultTask+0x180>)
 80008ae:	f001 fcea 	bl	8002286 <HAL_UART_Receive>
	sendToESP(saraMSG);
 80008b2:	f107 030c 	add.w	r3, r7, #12
 80008b6:	4618      	mov	r0, r3
 80008b8:	f7ff ff52 	bl	8000760 <sendToESP>
	SARA_ChangeTech('7');
 80008bc:	2037      	movs	r0, #55	; 0x37
 80008be:	f7ff fd2d 	bl	800031c <SARA_ChangeTech>
	HAL_UART_Transmit(&huart3, sigfoxSend, strlen(sigfoxSend), 50);
    HAL_UART_Receive(&huart3, SigFoxMessage, 69, 1500);
	sendToESP(SigFoxMessage);
	*/

    osDelay(1000);
 80008c2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80008c6:	f001 febf 	bl	8002648 <osDelay>
    nemeus_Power_Cycle();
 80008ca:	f7ff fcc7 	bl	800025c <nemeus_Power_Cycle>

	osDelay(50);
 80008ce:	2032      	movs	r0, #50	; 0x32
 80008d0:	f001 feba 	bl	8002648 <osDelay>
    memset(saraMSG, '\0', 69);
 80008d4:	f107 030c 	add.w	r3, r7, #12
 80008d8:	2245      	movs	r2, #69	; 0x45
 80008da:	2100      	movs	r1, #0
 80008dc:	4618      	mov	r0, r3
 80008de:	f003 f857 	bl	8003990 <memset>
	memset(SigFoxMessage, '\0', 69);
 80008e2:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80008e6:	2245      	movs	r2, #69	; 0x45
 80008e8:	2100      	movs	r1, #0
 80008ea:	4618      	mov	r0, r3
 80008ec:	f003 f850 	bl	8003990 <memset>
	memset(LoRaMessage, '\0', 69);
 80008f0:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 80008f4:	2245      	movs	r2, #69	; 0x45
 80008f6:	2100      	movs	r1, #0
 80008f8:	4618      	mov	r0, r3
 80008fa:	f003 f849 	bl	8003990 <memset>
	sigFoxSeq++;
 80008fe:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8000902:	3301      	adds	r3, #1
 8000904:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
  {
 8000908:	e79c      	b.n	8000844 <StartDefaultTask+0x9c>
 800090a:	bf00      	nop
 800090c:	08004e68 	.word	0x08004e68
 8000910:	08004e74 	.word	0x08004e74
 8000914:	08004e84 	.word	0x08004e84
 8000918:	08004e9c 	.word	0x08004e9c
 800091c:	200012bc 	.word	0x200012bc
 8000920:	40011000 	.word	0x40011000
 8000924:	20000054 	.word	0x20000054
 8000928:	20001214 	.word	0x20001214

0800092c <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 800092c:	b580      	push	{r7, lr}
 800092e:	b082      	sub	sp, #8
 8000930:	af00      	add	r7, sp, #0
 8000932:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8000934:	687b      	ldr	r3, [r7, #4]
 8000936:	681b      	ldr	r3, [r3, #0]
 8000938:	4a04      	ldr	r2, [pc, #16]	; (800094c <HAL_TIM_PeriodElapsedCallback+0x20>)
 800093a:	4293      	cmp	r3, r2
 800093c:	d101      	bne.n	8000942 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 800093e:	f000 fa7d 	bl	8000e3c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000942:	bf00      	nop
 8000944:	3708      	adds	r7, #8
 8000946:	46bd      	mov	sp, r7
 8000948:	bd80      	pop	{r7, pc}
 800094a:	bf00      	nop
 800094c:	40012c00 	.word	0x40012c00

08000950 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000950:	b480      	push	{r7}
 8000952:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000954:	b672      	cpsid	i
}
 8000956:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000958:	e7fe      	b.n	8000958 <Error_Handler+0x8>
	...

0800095c <HAL_MspInit>:
 800095c:	b580      	push	{r7, lr}
 800095e:	b084      	sub	sp, #16
 8000960:	af00      	add	r7, sp, #0
 8000962:	4b18      	ldr	r3, [pc, #96]	; (80009c4 <HAL_MspInit+0x68>)
 8000964:	699b      	ldr	r3, [r3, #24]
 8000966:	4a17      	ldr	r2, [pc, #92]	; (80009c4 <HAL_MspInit+0x68>)
 8000968:	f043 0301 	orr.w	r3, r3, #1
 800096c:	6193      	str	r3, [r2, #24]
 800096e:	4b15      	ldr	r3, [pc, #84]	; (80009c4 <HAL_MspInit+0x68>)
 8000970:	699b      	ldr	r3, [r3, #24]
 8000972:	f003 0301 	and.w	r3, r3, #1
 8000976:	60bb      	str	r3, [r7, #8]
 8000978:	68bb      	ldr	r3, [r7, #8]
 800097a:	4b12      	ldr	r3, [pc, #72]	; (80009c4 <HAL_MspInit+0x68>)
 800097c:	69db      	ldr	r3, [r3, #28]
 800097e:	4a11      	ldr	r2, [pc, #68]	; (80009c4 <HAL_MspInit+0x68>)
 8000980:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000984:	61d3      	str	r3, [r2, #28]
 8000986:	4b0f      	ldr	r3, [pc, #60]	; (80009c4 <HAL_MspInit+0x68>)
 8000988:	69db      	ldr	r3, [r3, #28]
 800098a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800098e:	607b      	str	r3, [r7, #4]
 8000990:	687b      	ldr	r3, [r7, #4]
 8000992:	2200      	movs	r2, #0
 8000994:	210f      	movs	r1, #15
 8000996:	f06f 0001 	mvn.w	r0, #1
 800099a:	f000 fb20 	bl	8000fde <HAL_NVIC_SetPriority>
 800099e:	4b0a      	ldr	r3, [pc, #40]	; (80009c8 <HAL_MspInit+0x6c>)
 80009a0:	685b      	ldr	r3, [r3, #4]
 80009a2:	60fb      	str	r3, [r7, #12]
 80009a4:	68fb      	ldr	r3, [r7, #12]
 80009a6:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80009aa:	60fb      	str	r3, [r7, #12]
 80009ac:	68fb      	ldr	r3, [r7, #12]
 80009ae:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80009b2:	60fb      	str	r3, [r7, #12]
 80009b4:	4a04      	ldr	r2, [pc, #16]	; (80009c8 <HAL_MspInit+0x6c>)
 80009b6:	68fb      	ldr	r3, [r7, #12]
 80009b8:	6053      	str	r3, [r2, #4]
 80009ba:	bf00      	nop
 80009bc:	3710      	adds	r7, #16
 80009be:	46bd      	mov	sp, r7
 80009c0:	bd80      	pop	{r7, pc}
 80009c2:	bf00      	nop
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40010000 	.word	0x40010000

080009cc <HAL_UART_MspInit>:
 80009cc:	b580      	push	{r7, lr}
 80009ce:	b08c      	sub	sp, #48	; 0x30
 80009d0:	af00      	add	r7, sp, #0
 80009d2:	6078      	str	r0, [r7, #4]
 80009d4:	f107 0320 	add.w	r3, r7, #32
 80009d8:	2200      	movs	r2, #0
 80009da:	601a      	str	r2, [r3, #0]
 80009dc:	605a      	str	r2, [r3, #4]
 80009de:	609a      	str	r2, [r3, #8]
 80009e0:	60da      	str	r2, [r3, #12]
 80009e2:	687b      	ldr	r3, [r7, #4]
 80009e4:	681b      	ldr	r3, [r3, #0]
 80009e6:	4a53      	ldr	r2, [pc, #332]	; (8000b34 <HAL_UART_MspInit+0x168>)
 80009e8:	4293      	cmp	r3, r2
 80009ea:	d132      	bne.n	8000a52 <HAL_UART_MspInit+0x86>
 80009ec:	4b52      	ldr	r3, [pc, #328]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 80009ee:	699b      	ldr	r3, [r3, #24]
 80009f0:	4a51      	ldr	r2, [pc, #324]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 80009f2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80009f6:	6193      	str	r3, [r2, #24]
 80009f8:	4b4f      	ldr	r3, [pc, #316]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 80009fa:	699b      	ldr	r3, [r3, #24]
 80009fc:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000a00:	61fb      	str	r3, [r7, #28]
 8000a02:	69fb      	ldr	r3, [r7, #28]
 8000a04:	4b4c      	ldr	r3, [pc, #304]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000a06:	699b      	ldr	r3, [r3, #24]
 8000a08:	4a4b      	ldr	r2, [pc, #300]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000a0a:	f043 0304 	orr.w	r3, r3, #4
 8000a0e:	6193      	str	r3, [r2, #24]
 8000a10:	4b49      	ldr	r3, [pc, #292]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000a12:	699b      	ldr	r3, [r3, #24]
 8000a14:	f003 0304 	and.w	r3, r3, #4
 8000a18:	61bb      	str	r3, [r7, #24]
 8000a1a:	69bb      	ldr	r3, [r7, #24]
 8000a1c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000a20:	623b      	str	r3, [r7, #32]
 8000a22:	2302      	movs	r3, #2
 8000a24:	627b      	str	r3, [r7, #36]	; 0x24
 8000a26:	2303      	movs	r3, #3
 8000a28:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000a2a:	f107 0320 	add.w	r3, r7, #32
 8000a2e:	4619      	mov	r1, r3
 8000a30:	4842      	ldr	r0, [pc, #264]	; (8000b3c <HAL_UART_MspInit+0x170>)
 8000a32:	f000 faff 	bl	8001034 <HAL_GPIO_Init>
 8000a36:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a3a:	623b      	str	r3, [r7, #32]
 8000a3c:	2300      	movs	r3, #0
 8000a3e:	627b      	str	r3, [r7, #36]	; 0x24
 8000a40:	2300      	movs	r3, #0
 8000a42:	62bb      	str	r3, [r7, #40]	; 0x28
 8000a44:	f107 0320 	add.w	r3, r7, #32
 8000a48:	4619      	mov	r1, r3
 8000a4a:	483c      	ldr	r0, [pc, #240]	; (8000b3c <HAL_UART_MspInit+0x170>)
 8000a4c:	f000 faf2 	bl	8001034 <HAL_GPIO_Init>
 8000a50:	e06c      	b.n	8000b2c <HAL_UART_MspInit+0x160>
 8000a52:	687b      	ldr	r3, [r7, #4]
 8000a54:	681b      	ldr	r3, [r3, #0]
 8000a56:	4a3a      	ldr	r2, [pc, #232]	; (8000b40 <HAL_UART_MspInit+0x174>)
 8000a58:	4293      	cmp	r3, r2
 8000a5a:	d130      	bne.n	8000abe <HAL_UART_MspInit+0xf2>
 8000a5c:	4b36      	ldr	r3, [pc, #216]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000a5e:	69db      	ldr	r3, [r3, #28]
 8000a60:	4a35      	ldr	r2, [pc, #212]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000a62:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a66:	61d3      	str	r3, [r2, #28]
 8000a68:	4b33      	ldr	r3, [pc, #204]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000a6a:	69db      	ldr	r3, [r3, #28]
 8000a6c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000a70:	617b      	str	r3, [r7, #20]
 8000a72:	697b      	ldr	r3, [r7, #20]
 8000a74:	4b30      	ldr	r3, [pc, #192]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000a76:	699b      	ldr	r3, [r3, #24]
 8000a78:	4a2f      	ldr	r2, [pc, #188]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000a7a:	f043 0304 	orr.w	r3, r3, #4
 8000a7e:	6193      	str	r3, [r2, #24]
 8000a80:	4b2d      	ldr	r3, [pc, #180]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000a82:	699b      	ldr	r3, [r3, #24]
 8000a84:	f003 0304 	and.w	r3, r3, #4
 8000a88:	613b      	str	r3, [r7, #16]
 8000a8a:	693b      	ldr	r3, [r7, #16]
 8000a8c:	2304      	movs	r3, #4
 8000a8e:	623b      	str	r3, [r7, #32]
 8000a90:	2302      	movs	r3, #2
 8000a92:	627b      	str	r3, [r7, #36]	; 0x24
 8000a94:	2303      	movs	r3, #3
 8000a96:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000a98:	f107 0320 	add.w	r3, r7, #32
 8000a9c:	4619      	mov	r1, r3
 8000a9e:	4827      	ldr	r0, [pc, #156]	; (8000b3c <HAL_UART_MspInit+0x170>)
 8000aa0:	f000 fac8 	bl	8001034 <HAL_GPIO_Init>
 8000aa4:	2308      	movs	r3, #8
 8000aa6:	623b      	str	r3, [r7, #32]
 8000aa8:	2300      	movs	r3, #0
 8000aaa:	627b      	str	r3, [r7, #36]	; 0x24
 8000aac:	2300      	movs	r3, #0
 8000aae:	62bb      	str	r3, [r7, #40]	; 0x28
 8000ab0:	f107 0320 	add.w	r3, r7, #32
 8000ab4:	4619      	mov	r1, r3
 8000ab6:	4821      	ldr	r0, [pc, #132]	; (8000b3c <HAL_UART_MspInit+0x170>)
 8000ab8:	f000 fabc 	bl	8001034 <HAL_GPIO_Init>
 8000abc:	e036      	b.n	8000b2c <HAL_UART_MspInit+0x160>
 8000abe:	687b      	ldr	r3, [r7, #4]
 8000ac0:	681b      	ldr	r3, [r3, #0]
 8000ac2:	4a20      	ldr	r2, [pc, #128]	; (8000b44 <HAL_UART_MspInit+0x178>)
 8000ac4:	4293      	cmp	r3, r2
 8000ac6:	d131      	bne.n	8000b2c <HAL_UART_MspInit+0x160>
 8000ac8:	4b1b      	ldr	r3, [pc, #108]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000aca:	69db      	ldr	r3, [r3, #28]
 8000acc:	4a1a      	ldr	r2, [pc, #104]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000ace:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000ad2:	61d3      	str	r3, [r2, #28]
 8000ad4:	4b18      	ldr	r3, [pc, #96]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000ad6:	69db      	ldr	r3, [r3, #28]
 8000ad8:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8000adc:	60fb      	str	r3, [r7, #12]
 8000ade:	68fb      	ldr	r3, [r7, #12]
 8000ae0:	4b15      	ldr	r3, [pc, #84]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000ae2:	699b      	ldr	r3, [r3, #24]
 8000ae4:	4a14      	ldr	r2, [pc, #80]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000ae6:	f043 0308 	orr.w	r3, r3, #8
 8000aea:	6193      	str	r3, [r2, #24]
 8000aec:	4b12      	ldr	r3, [pc, #72]	; (8000b38 <HAL_UART_MspInit+0x16c>)
 8000aee:	699b      	ldr	r3, [r3, #24]
 8000af0:	f003 0308 	and.w	r3, r3, #8
 8000af4:	60bb      	str	r3, [r7, #8]
 8000af6:	68bb      	ldr	r3, [r7, #8]
 8000af8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000afc:	623b      	str	r3, [r7, #32]
 8000afe:	2302      	movs	r3, #2
 8000b00:	627b      	str	r3, [r7, #36]	; 0x24
 8000b02:	2303      	movs	r3, #3
 8000b04:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000b06:	f107 0320 	add.w	r3, r7, #32
 8000b0a:	4619      	mov	r1, r3
 8000b0c:	480e      	ldr	r0, [pc, #56]	; (8000b48 <HAL_UART_MspInit+0x17c>)
 8000b0e:	f000 fa91 	bl	8001034 <HAL_GPIO_Init>
 8000b12:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000b16:	623b      	str	r3, [r7, #32]
 8000b18:	2300      	movs	r3, #0
 8000b1a:	627b      	str	r3, [r7, #36]	; 0x24
 8000b1c:	2300      	movs	r3, #0
 8000b1e:	62bb      	str	r3, [r7, #40]	; 0x28
 8000b20:	f107 0320 	add.w	r3, r7, #32
 8000b24:	4619      	mov	r1, r3
 8000b26:	4808      	ldr	r0, [pc, #32]	; (8000b48 <HAL_UART_MspInit+0x17c>)
 8000b28:	f000 fa84 	bl	8001034 <HAL_GPIO_Init>
 8000b2c:	bf00      	nop
 8000b2e:	3730      	adds	r7, #48	; 0x30
 8000b30:	46bd      	mov	sp, r7
 8000b32:	bd80      	pop	{r7, pc}
 8000b34:	40013800 	.word	0x40013800
 8000b38:	40021000 	.word	0x40021000
 8000b3c:	40010800 	.word	0x40010800
 8000b40:	40004400 	.word	0x40004400
 8000b44:	40004800 	.word	0x40004800
 8000b48:	40010c00 	.word	0x40010c00

08000b4c <HAL_InitTick>:
 8000b4c:	b580      	push	{r7, lr}
 8000b4e:	b08c      	sub	sp, #48	; 0x30
 8000b50:	af00      	add	r7, sp, #0
 8000b52:	6078      	str	r0, [r7, #4]
 8000b54:	2300      	movs	r3, #0
 8000b56:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000b58:	2300      	movs	r3, #0
 8000b5a:	62bb      	str	r3, [r7, #40]	; 0x28
 8000b5c:	2200      	movs	r2, #0
 8000b5e:	6879      	ldr	r1, [r7, #4]
 8000b60:	2019      	movs	r0, #25
 8000b62:	f000 fa3c 	bl	8000fde <HAL_NVIC_SetPriority>
 8000b66:	2019      	movs	r0, #25
 8000b68:	f000 fa55 	bl	8001016 <HAL_NVIC_EnableIRQ>
 8000b6c:	4b1e      	ldr	r3, [pc, #120]	; (8000be8 <HAL_InitTick+0x9c>)
 8000b6e:	699b      	ldr	r3, [r3, #24]
 8000b70:	4a1d      	ldr	r2, [pc, #116]	; (8000be8 <HAL_InitTick+0x9c>)
 8000b72:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000b76:	6193      	str	r3, [r2, #24]
 8000b78:	4b1b      	ldr	r3, [pc, #108]	; (8000be8 <HAL_InitTick+0x9c>)
 8000b7a:	699b      	ldr	r3, [r3, #24]
 8000b7c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000b80:	60fb      	str	r3, [r7, #12]
 8000b82:	68fb      	ldr	r3, [r7, #12]
 8000b84:	f107 0210 	add.w	r2, r7, #16
 8000b88:	f107 0314 	add.w	r3, r7, #20
 8000b8c:	4611      	mov	r1, r2
 8000b8e:	4618      	mov	r0, r3
 8000b90:	f001 f802 	bl	8001b98 <HAL_RCC_GetClockConfig>
 8000b94:	f000 ffec 	bl	8001b70 <HAL_RCC_GetPCLK2Freq>
 8000b98:	62f8      	str	r0, [r7, #44]	; 0x2c
 8000b9a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000b9c:	4a13      	ldr	r2, [pc, #76]	; (8000bec <HAL_InitTick+0xa0>)
 8000b9e:	fba2 2303 	umull	r2, r3, r2, r3
 8000ba2:	0c9b      	lsrs	r3, r3, #18
 8000ba4:	3b01      	subs	r3, #1
 8000ba6:	62bb      	str	r3, [r7, #40]	; 0x28
 8000ba8:	4b11      	ldr	r3, [pc, #68]	; (8000bf0 <HAL_InitTick+0xa4>)
 8000baa:	4a12      	ldr	r2, [pc, #72]	; (8000bf4 <HAL_InitTick+0xa8>)
 8000bac:	601a      	str	r2, [r3, #0]
 8000bae:	4b10      	ldr	r3, [pc, #64]	; (8000bf0 <HAL_InitTick+0xa4>)
 8000bb0:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000bb4:	60da      	str	r2, [r3, #12]
 8000bb6:	4a0e      	ldr	r2, [pc, #56]	; (8000bf0 <HAL_InitTick+0xa4>)
 8000bb8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000bba:	6053      	str	r3, [r2, #4]
 8000bbc:	4b0c      	ldr	r3, [pc, #48]	; (8000bf0 <HAL_InitTick+0xa4>)
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	611a      	str	r2, [r3, #16]
 8000bc2:	4b0b      	ldr	r3, [pc, #44]	; (8000bf0 <HAL_InitTick+0xa4>)
 8000bc4:	2200      	movs	r2, #0
 8000bc6:	609a      	str	r2, [r3, #8]
 8000bc8:	4809      	ldr	r0, [pc, #36]	; (8000bf0 <HAL_InitTick+0xa4>)
 8000bca:	f001 f833 	bl	8001c34 <HAL_TIM_Base_Init>
 8000bce:	4603      	mov	r3, r0
 8000bd0:	2b00      	cmp	r3, #0
 8000bd2:	d104      	bne.n	8000bde <HAL_InitTick+0x92>
 8000bd4:	4806      	ldr	r0, [pc, #24]	; (8000bf0 <HAL_InitTick+0xa4>)
 8000bd6:	f001 f885 	bl	8001ce4 <HAL_TIM_Base_Start_IT>
 8000bda:	4603      	mov	r3, r0
 8000bdc:	e000      	b.n	8000be0 <HAL_InitTick+0x94>
 8000bde:	2301      	movs	r3, #1
 8000be0:	4618      	mov	r0, r3
 8000be2:	3730      	adds	r7, #48	; 0x30
 8000be4:	46bd      	mov	sp, r7
 8000be6:	bd80      	pop	{r7, pc}
 8000be8:	40021000 	.word	0x40021000
 8000bec:	431bde83 	.word	0x431bde83
 8000bf0:	200012c0 	.word	0x200012c0
 8000bf4:	40012c00 	.word	0x40012c00

08000bf8 <NMI_Handler>:
 8000bf8:	b480      	push	{r7}
 8000bfa:	af00      	add	r7, sp, #0
 8000bfc:	e7fe      	b.n	8000bfc <NMI_Handler+0x4>

08000bfe <HardFault_Handler>:
 8000bfe:	b480      	push	{r7}
 8000c00:	af00      	add	r7, sp, #0
 8000c02:	e7fe      	b.n	8000c02 <HardFault_Handler+0x4>

08000c04 <MemManage_Handler>:
 8000c04:	b480      	push	{r7}
 8000c06:	af00      	add	r7, sp, #0
 8000c08:	e7fe      	b.n	8000c08 <MemManage_Handler+0x4>

08000c0a <BusFault_Handler>:
 8000c0a:	b480      	push	{r7}
 8000c0c:	af00      	add	r7, sp, #0
 8000c0e:	e7fe      	b.n	8000c0e <BusFault_Handler+0x4>

08000c10 <UsageFault_Handler>:
 8000c10:	b480      	push	{r7}
 8000c12:	af00      	add	r7, sp, #0
 8000c14:	e7fe      	b.n	8000c14 <UsageFault_Handler+0x4>

08000c16 <DebugMon_Handler>:
 8000c16:	b480      	push	{r7}
 8000c18:	af00      	add	r7, sp, #0
 8000c1a:	bf00      	nop
 8000c1c:	46bd      	mov	sp, r7
 8000c1e:	bc80      	pop	{r7}
 8000c20:	4770      	bx	lr
	...

08000c24 <TIM1_UP_IRQHandler>:
 8000c24:	b580      	push	{r7, lr}
 8000c26:	af00      	add	r7, sp, #0
 8000c28:	4802      	ldr	r0, [pc, #8]	; (8000c34 <TIM1_UP_IRQHandler+0x10>)
 8000c2a:	f001 f8ad 	bl	8001d88 <HAL_TIM_IRQHandler>
 8000c2e:	bf00      	nop
 8000c30:	bd80      	pop	{r7, pc}
 8000c32:	bf00      	nop
 8000c34:	200012c0 	.word	0x200012c0

08000c38 <_getpid>:
 8000c38:	b480      	push	{r7}
 8000c3a:	af00      	add	r7, sp, #0
 8000c3c:	2301      	movs	r3, #1
 8000c3e:	4618      	mov	r0, r3
 8000c40:	46bd      	mov	sp, r7
 8000c42:	bc80      	pop	{r7}
 8000c44:	4770      	bx	lr

08000c46 <_kill>:
 8000c46:	b580      	push	{r7, lr}
 8000c48:	b082      	sub	sp, #8
 8000c4a:	af00      	add	r7, sp, #0
 8000c4c:	6078      	str	r0, [r7, #4]
 8000c4e:	6039      	str	r1, [r7, #0]
 8000c50:	f002 fe66 	bl	8003920 <__errno>
 8000c54:	4603      	mov	r3, r0
 8000c56:	2216      	movs	r2, #22
 8000c58:	601a      	str	r2, [r3, #0]
 8000c5a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000c5e:	4618      	mov	r0, r3
 8000c60:	3708      	adds	r7, #8
 8000c62:	46bd      	mov	sp, r7
 8000c64:	bd80      	pop	{r7, pc}

08000c66 <_exit>:
 8000c66:	b580      	push	{r7, lr}
 8000c68:	b082      	sub	sp, #8
 8000c6a:	af00      	add	r7, sp, #0
 8000c6c:	6078      	str	r0, [r7, #4]
 8000c6e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000c72:	6878      	ldr	r0, [r7, #4]
 8000c74:	f7ff ffe7 	bl	8000c46 <_kill>
 8000c78:	e7fe      	b.n	8000c78 <_exit+0x12>

08000c7a <_read>:
 8000c7a:	b580      	push	{r7, lr}
 8000c7c:	b086      	sub	sp, #24
 8000c7e:	af00      	add	r7, sp, #0
 8000c80:	60f8      	str	r0, [r7, #12]
 8000c82:	60b9      	str	r1, [r7, #8]
 8000c84:	607a      	str	r2, [r7, #4]
 8000c86:	2300      	movs	r3, #0
 8000c88:	617b      	str	r3, [r7, #20]
 8000c8a:	e00a      	b.n	8000ca2 <_read+0x28>
 8000c8c:	f3af 8000 	nop.w
 8000c90:	4601      	mov	r1, r0
 8000c92:	68bb      	ldr	r3, [r7, #8]
 8000c94:	1c5a      	adds	r2, r3, #1
 8000c96:	60ba      	str	r2, [r7, #8]
 8000c98:	b2ca      	uxtb	r2, r1
 8000c9a:	701a      	strb	r2, [r3, #0]
 8000c9c:	697b      	ldr	r3, [r7, #20]
 8000c9e:	3301      	adds	r3, #1
 8000ca0:	617b      	str	r3, [r7, #20]
 8000ca2:	697a      	ldr	r2, [r7, #20]
 8000ca4:	687b      	ldr	r3, [r7, #4]
 8000ca6:	429a      	cmp	r2, r3
 8000ca8:	dbf0      	blt.n	8000c8c <_read+0x12>
 8000caa:	687b      	ldr	r3, [r7, #4]
 8000cac:	4618      	mov	r0, r3
 8000cae:	3718      	adds	r7, #24
 8000cb0:	46bd      	mov	sp, r7
 8000cb2:	bd80      	pop	{r7, pc}

08000cb4 <_write>:
 8000cb4:	b580      	push	{r7, lr}
 8000cb6:	b086      	sub	sp, #24
 8000cb8:	af00      	add	r7, sp, #0
 8000cba:	60f8      	str	r0, [r7, #12]
 8000cbc:	60b9      	str	r1, [r7, #8]
 8000cbe:	607a      	str	r2, [r7, #4]
 8000cc0:	2300      	movs	r3, #0
 8000cc2:	617b      	str	r3, [r7, #20]
 8000cc4:	e009      	b.n	8000cda <_write+0x26>
 8000cc6:	68bb      	ldr	r3, [r7, #8]
 8000cc8:	1c5a      	adds	r2, r3, #1
 8000cca:	60ba      	str	r2, [r7, #8]
 8000ccc:	781b      	ldrb	r3, [r3, #0]
 8000cce:	4618      	mov	r0, r3
 8000cd0:	f3af 8000 	nop.w
 8000cd4:	697b      	ldr	r3, [r7, #20]
 8000cd6:	3301      	adds	r3, #1
 8000cd8:	617b      	str	r3, [r7, #20]
 8000cda:	697a      	ldr	r2, [r7, #20]
 8000cdc:	687b      	ldr	r3, [r7, #4]
 8000cde:	429a      	cmp	r2, r3
 8000ce0:	dbf1      	blt.n	8000cc6 <_write+0x12>
 8000ce2:	687b      	ldr	r3, [r7, #4]
 8000ce4:	4618      	mov	r0, r3
 8000ce6:	3718      	adds	r7, #24
 8000ce8:	46bd      	mov	sp, r7
 8000cea:	bd80      	pop	{r7, pc}

08000cec <_close>:
 8000cec:	b480      	push	{r7}
 8000cee:	b083      	sub	sp, #12
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	6078      	str	r0, [r7, #4]
 8000cf4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000cf8:	4618      	mov	r0, r3
 8000cfa:	370c      	adds	r7, #12
 8000cfc:	46bd      	mov	sp, r7
 8000cfe:	bc80      	pop	{r7}
 8000d00:	4770      	bx	lr

08000d02 <_fstat>:
 8000d02:	b480      	push	{r7}
 8000d04:	b083      	sub	sp, #12
 8000d06:	af00      	add	r7, sp, #0
 8000d08:	6078      	str	r0, [r7, #4]
 8000d0a:	6039      	str	r1, [r7, #0]
 8000d0c:	683b      	ldr	r3, [r7, #0]
 8000d0e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000d12:	605a      	str	r2, [r3, #4]
 8000d14:	2300      	movs	r3, #0
 8000d16:	4618      	mov	r0, r3
 8000d18:	370c      	adds	r7, #12
 8000d1a:	46bd      	mov	sp, r7
 8000d1c:	bc80      	pop	{r7}
 8000d1e:	4770      	bx	lr

08000d20 <_isatty>:
 8000d20:	b480      	push	{r7}
 8000d22:	b083      	sub	sp, #12
 8000d24:	af00      	add	r7, sp, #0
 8000d26:	6078      	str	r0, [r7, #4]
 8000d28:	2301      	movs	r3, #1
 8000d2a:	4618      	mov	r0, r3
 8000d2c:	370c      	adds	r7, #12
 8000d2e:	46bd      	mov	sp, r7
 8000d30:	bc80      	pop	{r7}
 8000d32:	4770      	bx	lr

08000d34 <_lseek>:
 8000d34:	b480      	push	{r7}
 8000d36:	b085      	sub	sp, #20
 8000d38:	af00      	add	r7, sp, #0
 8000d3a:	60f8      	str	r0, [r7, #12]
 8000d3c:	60b9      	str	r1, [r7, #8]
 8000d3e:	607a      	str	r2, [r7, #4]
 8000d40:	2300      	movs	r3, #0
 8000d42:	4618      	mov	r0, r3
 8000d44:	3714      	adds	r7, #20
 8000d46:	46bd      	mov	sp, r7
 8000d48:	bc80      	pop	{r7}
 8000d4a:	4770      	bx	lr

08000d4c <_sbrk>:
 8000d4c:	b580      	push	{r7, lr}
 8000d4e:	b086      	sub	sp, #24
 8000d50:	af00      	add	r7, sp, #0
 8000d52:	6078      	str	r0, [r7, #4]
 8000d54:	4a14      	ldr	r2, [pc, #80]	; (8000da8 <_sbrk+0x5c>)
 8000d56:	4b15      	ldr	r3, [pc, #84]	; (8000dac <_sbrk+0x60>)
 8000d58:	1ad3      	subs	r3, r2, r3
 8000d5a:	617b      	str	r3, [r7, #20]
 8000d5c:	697b      	ldr	r3, [r7, #20]
 8000d5e:	613b      	str	r3, [r7, #16]
 8000d60:	4b13      	ldr	r3, [pc, #76]	; (8000db0 <_sbrk+0x64>)
 8000d62:	681b      	ldr	r3, [r3, #0]
 8000d64:	2b00      	cmp	r3, #0
 8000d66:	d102      	bne.n	8000d6e <_sbrk+0x22>
 8000d68:	4b11      	ldr	r3, [pc, #68]	; (8000db0 <_sbrk+0x64>)
 8000d6a:	4a12      	ldr	r2, [pc, #72]	; (8000db4 <_sbrk+0x68>)
 8000d6c:	601a      	str	r2, [r3, #0]
 8000d6e:	4b10      	ldr	r3, [pc, #64]	; (8000db0 <_sbrk+0x64>)
 8000d70:	681a      	ldr	r2, [r3, #0]
 8000d72:	687b      	ldr	r3, [r7, #4]
 8000d74:	4413      	add	r3, r2
 8000d76:	693a      	ldr	r2, [r7, #16]
 8000d78:	429a      	cmp	r2, r3
 8000d7a:	d207      	bcs.n	8000d8c <_sbrk+0x40>
 8000d7c:	f002 fdd0 	bl	8003920 <__errno>
 8000d80:	4603      	mov	r3, r0
 8000d82:	220c      	movs	r2, #12
 8000d84:	601a      	str	r2, [r3, #0]
 8000d86:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000d8a:	e009      	b.n	8000da0 <_sbrk+0x54>
 8000d8c:	4b08      	ldr	r3, [pc, #32]	; (8000db0 <_sbrk+0x64>)
 8000d8e:	681b      	ldr	r3, [r3, #0]
 8000d90:	60fb      	str	r3, [r7, #12]
 8000d92:	4b07      	ldr	r3, [pc, #28]	; (8000db0 <_sbrk+0x64>)
 8000d94:	681a      	ldr	r2, [r3, #0]
 8000d96:	687b      	ldr	r3, [r7, #4]
 8000d98:	4413      	add	r3, r2
 8000d9a:	4a05      	ldr	r2, [pc, #20]	; (8000db0 <_sbrk+0x64>)
 8000d9c:	6013      	str	r3, [r2, #0]
 8000d9e:	68fb      	ldr	r3, [r7, #12]
 8000da0:	4618      	mov	r0, r3
 8000da2:	3718      	adds	r7, #24
 8000da4:	46bd      	mov	sp, r7
 8000da6:	bd80      	pop	{r7, pc}
 8000da8:	20005000 	.word	0x20005000
 8000dac:	00000400 	.word	0x00000400
 8000db0:	20000370 	.word	0x20000370
 8000db4:	20001320 	.word	0x20001320

08000db8 <SystemInit>:
 8000db8:	b480      	push	{r7}
 8000dba:	af00      	add	r7, sp, #0
 8000dbc:	bf00      	nop
 8000dbe:	46bd      	mov	sp, r7
 8000dc0:	bc80      	pop	{r7}
 8000dc2:	4770      	bx	lr

08000dc4 <Reset_Handler>:
 8000dc4:	2100      	movs	r1, #0
 8000dc6:	e003      	b.n	8000dd0 <LoopCopyDataInit>

08000dc8 <CopyDataInit>:
 8000dc8:	4b0b      	ldr	r3, [pc, #44]	; (8000df8 <LoopFillZerobss+0x14>)
 8000dca:	585b      	ldr	r3, [r3, r1]
 8000dcc:	5043      	str	r3, [r0, r1]
 8000dce:	3104      	adds	r1, #4

08000dd0 <LoopCopyDataInit>:
 8000dd0:	480a      	ldr	r0, [pc, #40]	; (8000dfc <LoopFillZerobss+0x18>)
 8000dd2:	4b0b      	ldr	r3, [pc, #44]	; (8000e00 <LoopFillZerobss+0x1c>)
 8000dd4:	1842      	adds	r2, r0, r1
 8000dd6:	429a      	cmp	r2, r3
 8000dd8:	d3f6      	bcc.n	8000dc8 <CopyDataInit>
 8000dda:	4a0a      	ldr	r2, [pc, #40]	; (8000e04 <LoopFillZerobss+0x20>)
 8000ddc:	e002      	b.n	8000de4 <LoopFillZerobss>

08000dde <FillZerobss>:
 8000dde:	2300      	movs	r3, #0
 8000de0:	f842 3b04 	str.w	r3, [r2], #4

08000de4 <LoopFillZerobss>:
 8000de4:	4b08      	ldr	r3, [pc, #32]	; (8000e08 <LoopFillZerobss+0x24>)
 8000de6:	429a      	cmp	r2, r3
 8000de8:	d3f9      	bcc.n	8000dde <FillZerobss>
 8000dea:	f7ff ffe5 	bl	8000db8 <SystemInit>
 8000dee:	f002 fd9d 	bl	800392c <__libc_init_array>
 8000df2:	f7ff fb39 	bl	8000468 <main>
 8000df6:	4770      	bx	lr
 8000df8:	08005028 	.word	0x08005028
 8000dfc:	20000000 	.word	0x20000000
 8000e00:	20000100 	.word	0x20000100
 8000e04:	20000100 	.word	0x20000100
 8000e08:	2000131c 	.word	0x2000131c

08000e0c <ADC1_2_IRQHandler>:
 8000e0c:	e7fe      	b.n	8000e0c <ADC1_2_IRQHandler>
	...

08000e10 <HAL_Init>:
 8000e10:	b580      	push	{r7, lr}
 8000e12:	af00      	add	r7, sp, #0
 8000e14:	4b08      	ldr	r3, [pc, #32]	; (8000e38 <HAL_Init+0x28>)
 8000e16:	681b      	ldr	r3, [r3, #0]
 8000e18:	4a07      	ldr	r2, [pc, #28]	; (8000e38 <HAL_Init+0x28>)
 8000e1a:	f043 0310 	orr.w	r3, r3, #16
 8000e1e:	6013      	str	r3, [r2, #0]
 8000e20:	2003      	movs	r0, #3
 8000e22:	f000 f8d1 	bl	8000fc8 <HAL_NVIC_SetPriorityGrouping>
 8000e26:	2000      	movs	r0, #0
 8000e28:	f7ff fe90 	bl	8000b4c <HAL_InitTick>
 8000e2c:	f7ff fd96 	bl	800095c <HAL_MspInit>
 8000e30:	2300      	movs	r3, #0
 8000e32:	4618      	mov	r0, r3
 8000e34:	bd80      	pop	{r7, pc}
 8000e36:	bf00      	nop
 8000e38:	40022000 	.word	0x40022000

08000e3c <HAL_IncTick>:
 8000e3c:	b480      	push	{r7}
 8000e3e:	af00      	add	r7, sp, #0
 8000e40:	4b05      	ldr	r3, [pc, #20]	; (8000e58 <HAL_IncTick+0x1c>)
 8000e42:	781b      	ldrb	r3, [r3, #0]
 8000e44:	461a      	mov	r2, r3
 8000e46:	4b05      	ldr	r3, [pc, #20]	; (8000e5c <HAL_IncTick+0x20>)
 8000e48:	681b      	ldr	r3, [r3, #0]
 8000e4a:	4413      	add	r3, r2
 8000e4c:	4a03      	ldr	r2, [pc, #12]	; (8000e5c <HAL_IncTick+0x20>)
 8000e4e:	6013      	str	r3, [r2, #0]
 8000e50:	bf00      	nop
 8000e52:	46bd      	mov	sp, r7
 8000e54:	bc80      	pop	{r7}
 8000e56:	4770      	bx	lr
 8000e58:	20000094 	.word	0x20000094
 8000e5c:	20001308 	.word	0x20001308

08000e60 <HAL_GetTick>:
 8000e60:	b480      	push	{r7}
 8000e62:	af00      	add	r7, sp, #0
 8000e64:	4b02      	ldr	r3, [pc, #8]	; (8000e70 <HAL_GetTick+0x10>)
 8000e66:	681b      	ldr	r3, [r3, #0]
 8000e68:	4618      	mov	r0, r3
 8000e6a:	46bd      	mov	sp, r7
 8000e6c:	bc80      	pop	{r7}
 8000e6e:	4770      	bx	lr
 8000e70:	20001308 	.word	0x20001308

08000e74 <__NVIC_SetPriorityGrouping>:
 8000e74:	b480      	push	{r7}
 8000e76:	b085      	sub	sp, #20
 8000e78:	af00      	add	r7, sp, #0
 8000e7a:	6078      	str	r0, [r7, #4]
 8000e7c:	687b      	ldr	r3, [r7, #4]
 8000e7e:	f003 0307 	and.w	r3, r3, #7
 8000e82:	60fb      	str	r3, [r7, #12]
 8000e84:	4b0c      	ldr	r3, [pc, #48]	; (8000eb8 <__NVIC_SetPriorityGrouping+0x44>)
 8000e86:	68db      	ldr	r3, [r3, #12]
 8000e88:	60bb      	str	r3, [r7, #8]
 8000e8a:	68ba      	ldr	r2, [r7, #8]
 8000e8c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000e90:	4013      	ands	r3, r2
 8000e92:	60bb      	str	r3, [r7, #8]
 8000e94:	68fb      	ldr	r3, [r7, #12]
 8000e96:	021a      	lsls	r2, r3, #8
 8000e98:	68bb      	ldr	r3, [r7, #8]
 8000e9a:	4313      	orrs	r3, r2
 8000e9c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000ea0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000ea4:	60bb      	str	r3, [r7, #8]
 8000ea6:	4a04      	ldr	r2, [pc, #16]	; (8000eb8 <__NVIC_SetPriorityGrouping+0x44>)
 8000ea8:	68bb      	ldr	r3, [r7, #8]
 8000eaa:	60d3      	str	r3, [r2, #12]
 8000eac:	bf00      	nop
 8000eae:	3714      	adds	r7, #20
 8000eb0:	46bd      	mov	sp, r7
 8000eb2:	bc80      	pop	{r7}
 8000eb4:	4770      	bx	lr
 8000eb6:	bf00      	nop
 8000eb8:	e000ed00 	.word	0xe000ed00

08000ebc <__NVIC_GetPriorityGrouping>:
 8000ebc:	b480      	push	{r7}
 8000ebe:	af00      	add	r7, sp, #0
 8000ec0:	4b04      	ldr	r3, [pc, #16]	; (8000ed4 <__NVIC_GetPriorityGrouping+0x18>)
 8000ec2:	68db      	ldr	r3, [r3, #12]
 8000ec4:	0a1b      	lsrs	r3, r3, #8
 8000ec6:	f003 0307 	and.w	r3, r3, #7
 8000eca:	4618      	mov	r0, r3
 8000ecc:	46bd      	mov	sp, r7
 8000ece:	bc80      	pop	{r7}
 8000ed0:	4770      	bx	lr
 8000ed2:	bf00      	nop
 8000ed4:	e000ed00 	.word	0xe000ed00

08000ed8 <__NVIC_EnableIRQ>:
 8000ed8:	b480      	push	{r7}
 8000eda:	b083      	sub	sp, #12
 8000edc:	af00      	add	r7, sp, #0
 8000ede:	4603      	mov	r3, r0
 8000ee0:	71fb      	strb	r3, [r7, #7]
 8000ee2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ee6:	2b00      	cmp	r3, #0
 8000ee8:	db0b      	blt.n	8000f02 <__NVIC_EnableIRQ+0x2a>
 8000eea:	79fb      	ldrb	r3, [r7, #7]
 8000eec:	f003 021f 	and.w	r2, r3, #31
 8000ef0:	4906      	ldr	r1, [pc, #24]	; (8000f0c <__NVIC_EnableIRQ+0x34>)
 8000ef2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ef6:	095b      	lsrs	r3, r3, #5
 8000ef8:	2001      	movs	r0, #1
 8000efa:	fa00 f202 	lsl.w	r2, r0, r2
 8000efe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000f02:	bf00      	nop
 8000f04:	370c      	adds	r7, #12
 8000f06:	46bd      	mov	sp, r7
 8000f08:	bc80      	pop	{r7}
 8000f0a:	4770      	bx	lr
 8000f0c:	e000e100 	.word	0xe000e100

08000f10 <__NVIC_SetPriority>:
 8000f10:	b480      	push	{r7}
 8000f12:	b083      	sub	sp, #12
 8000f14:	af00      	add	r7, sp, #0
 8000f16:	4603      	mov	r3, r0
 8000f18:	6039      	str	r1, [r7, #0]
 8000f1a:	71fb      	strb	r3, [r7, #7]
 8000f1c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	db0a      	blt.n	8000f3a <__NVIC_SetPriority+0x2a>
 8000f24:	683b      	ldr	r3, [r7, #0]
 8000f26:	b2da      	uxtb	r2, r3
 8000f28:	490c      	ldr	r1, [pc, #48]	; (8000f5c <__NVIC_SetPriority+0x4c>)
 8000f2a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f2e:	0112      	lsls	r2, r2, #4
 8000f30:	b2d2      	uxtb	r2, r2
 8000f32:	440b      	add	r3, r1
 8000f34:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000f38:	e00a      	b.n	8000f50 <__NVIC_SetPriority+0x40>
 8000f3a:	683b      	ldr	r3, [r7, #0]
 8000f3c:	b2da      	uxtb	r2, r3
 8000f3e:	4908      	ldr	r1, [pc, #32]	; (8000f60 <__NVIC_SetPriority+0x50>)
 8000f40:	79fb      	ldrb	r3, [r7, #7]
 8000f42:	f003 030f 	and.w	r3, r3, #15
 8000f46:	3b04      	subs	r3, #4
 8000f48:	0112      	lsls	r2, r2, #4
 8000f4a:	b2d2      	uxtb	r2, r2
 8000f4c:	440b      	add	r3, r1
 8000f4e:	761a      	strb	r2, [r3, #24]
 8000f50:	bf00      	nop
 8000f52:	370c      	adds	r7, #12
 8000f54:	46bd      	mov	sp, r7
 8000f56:	bc80      	pop	{r7}
 8000f58:	4770      	bx	lr
 8000f5a:	bf00      	nop
 8000f5c:	e000e100 	.word	0xe000e100
 8000f60:	e000ed00 	.word	0xe000ed00

08000f64 <NVIC_EncodePriority>:
 8000f64:	b480      	push	{r7}
 8000f66:	b089      	sub	sp, #36	; 0x24
 8000f68:	af00      	add	r7, sp, #0
 8000f6a:	60f8      	str	r0, [r7, #12]
 8000f6c:	60b9      	str	r1, [r7, #8]
 8000f6e:	607a      	str	r2, [r7, #4]
 8000f70:	68fb      	ldr	r3, [r7, #12]
 8000f72:	f003 0307 	and.w	r3, r3, #7
 8000f76:	61fb      	str	r3, [r7, #28]
 8000f78:	69fb      	ldr	r3, [r7, #28]
 8000f7a:	f1c3 0307 	rsb	r3, r3, #7
 8000f7e:	2b04      	cmp	r3, #4
 8000f80:	bf28      	it	cs
 8000f82:	2304      	movcs	r3, #4
 8000f84:	61bb      	str	r3, [r7, #24]
 8000f86:	69fb      	ldr	r3, [r7, #28]
 8000f88:	3304      	adds	r3, #4
 8000f8a:	2b06      	cmp	r3, #6
 8000f8c:	d902      	bls.n	8000f94 <NVIC_EncodePriority+0x30>
 8000f8e:	69fb      	ldr	r3, [r7, #28]
 8000f90:	3b03      	subs	r3, #3
 8000f92:	e000      	b.n	8000f96 <NVIC_EncodePriority+0x32>
 8000f94:	2300      	movs	r3, #0
 8000f96:	617b      	str	r3, [r7, #20]
 8000f98:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000f9c:	69bb      	ldr	r3, [r7, #24]
 8000f9e:	fa02 f303 	lsl.w	r3, r2, r3
 8000fa2:	43da      	mvns	r2, r3
 8000fa4:	68bb      	ldr	r3, [r7, #8]
 8000fa6:	401a      	ands	r2, r3
 8000fa8:	697b      	ldr	r3, [r7, #20]
 8000faa:	409a      	lsls	r2, r3
 8000fac:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000fb0:	697b      	ldr	r3, [r7, #20]
 8000fb2:	fa01 f303 	lsl.w	r3, r1, r3
 8000fb6:	43d9      	mvns	r1, r3
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	400b      	ands	r3, r1
 8000fbc:	4313      	orrs	r3, r2
 8000fbe:	4618      	mov	r0, r3
 8000fc0:	3724      	adds	r7, #36	; 0x24
 8000fc2:	46bd      	mov	sp, r7
 8000fc4:	bc80      	pop	{r7}
 8000fc6:	4770      	bx	lr

08000fc8 <HAL_NVIC_SetPriorityGrouping>:
 8000fc8:	b580      	push	{r7, lr}
 8000fca:	b082      	sub	sp, #8
 8000fcc:	af00      	add	r7, sp, #0
 8000fce:	6078      	str	r0, [r7, #4]
 8000fd0:	6878      	ldr	r0, [r7, #4]
 8000fd2:	f7ff ff4f 	bl	8000e74 <__NVIC_SetPriorityGrouping>
 8000fd6:	bf00      	nop
 8000fd8:	3708      	adds	r7, #8
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	bd80      	pop	{r7, pc}

08000fde <HAL_NVIC_SetPriority>:
 8000fde:	b580      	push	{r7, lr}
 8000fe0:	b086      	sub	sp, #24
 8000fe2:	af00      	add	r7, sp, #0
 8000fe4:	4603      	mov	r3, r0
 8000fe6:	60b9      	str	r1, [r7, #8]
 8000fe8:	607a      	str	r2, [r7, #4]
 8000fea:	73fb      	strb	r3, [r7, #15]
 8000fec:	2300      	movs	r3, #0
 8000fee:	617b      	str	r3, [r7, #20]
 8000ff0:	f7ff ff64 	bl	8000ebc <__NVIC_GetPriorityGrouping>
 8000ff4:	6178      	str	r0, [r7, #20]
 8000ff6:	687a      	ldr	r2, [r7, #4]
 8000ff8:	68b9      	ldr	r1, [r7, #8]
 8000ffa:	6978      	ldr	r0, [r7, #20]
 8000ffc:	f7ff ffb2 	bl	8000f64 <NVIC_EncodePriority>
 8001000:	4602      	mov	r2, r0
 8001002:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001006:	4611      	mov	r1, r2
 8001008:	4618      	mov	r0, r3
 800100a:	f7ff ff81 	bl	8000f10 <__NVIC_SetPriority>
 800100e:	bf00      	nop
 8001010:	3718      	adds	r7, #24
 8001012:	46bd      	mov	sp, r7
 8001014:	bd80      	pop	{r7, pc}

08001016 <HAL_NVIC_EnableIRQ>:
 8001016:	b580      	push	{r7, lr}
 8001018:	b082      	sub	sp, #8
 800101a:	af00      	add	r7, sp, #0
 800101c:	4603      	mov	r3, r0
 800101e:	71fb      	strb	r3, [r7, #7]
 8001020:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001024:	4618      	mov	r0, r3
 8001026:	f7ff ff57 	bl	8000ed8 <__NVIC_EnableIRQ>
 800102a:	bf00      	nop
 800102c:	3708      	adds	r7, #8
 800102e:	46bd      	mov	sp, r7
 8001030:	bd80      	pop	{r7, pc}
	...

08001034 <HAL_GPIO_Init>:
 8001034:	b480      	push	{r7}
 8001036:	b08b      	sub	sp, #44	; 0x2c
 8001038:	af00      	add	r7, sp, #0
 800103a:	6078      	str	r0, [r7, #4]
 800103c:	6039      	str	r1, [r7, #0]
 800103e:	2300      	movs	r3, #0
 8001040:	627b      	str	r3, [r7, #36]	; 0x24
 8001042:	2300      	movs	r3, #0
 8001044:	623b      	str	r3, [r7, #32]
 8001046:	e169      	b.n	800131c <HAL_GPIO_Init+0x2e8>
 8001048:	2201      	movs	r2, #1
 800104a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800104c:	fa02 f303 	lsl.w	r3, r2, r3
 8001050:	61fb      	str	r3, [r7, #28]
 8001052:	683b      	ldr	r3, [r7, #0]
 8001054:	681b      	ldr	r3, [r3, #0]
 8001056:	69fa      	ldr	r2, [r7, #28]
 8001058:	4013      	ands	r3, r2
 800105a:	61bb      	str	r3, [r7, #24]
 800105c:	69ba      	ldr	r2, [r7, #24]
 800105e:	69fb      	ldr	r3, [r7, #28]
 8001060:	429a      	cmp	r2, r3
 8001062:	f040 8158 	bne.w	8001316 <HAL_GPIO_Init+0x2e2>
 8001066:	683b      	ldr	r3, [r7, #0]
 8001068:	685b      	ldr	r3, [r3, #4]
 800106a:	4a9a      	ldr	r2, [pc, #616]	; (80012d4 <HAL_GPIO_Init+0x2a0>)
 800106c:	4293      	cmp	r3, r2
 800106e:	d05e      	beq.n	800112e <HAL_GPIO_Init+0xfa>
 8001070:	4a98      	ldr	r2, [pc, #608]	; (80012d4 <HAL_GPIO_Init+0x2a0>)
 8001072:	4293      	cmp	r3, r2
 8001074:	d875      	bhi.n	8001162 <HAL_GPIO_Init+0x12e>
 8001076:	4a98      	ldr	r2, [pc, #608]	; (80012d8 <HAL_GPIO_Init+0x2a4>)
 8001078:	4293      	cmp	r3, r2
 800107a:	d058      	beq.n	800112e <HAL_GPIO_Init+0xfa>
 800107c:	4a96      	ldr	r2, [pc, #600]	; (80012d8 <HAL_GPIO_Init+0x2a4>)
 800107e:	4293      	cmp	r3, r2
 8001080:	d86f      	bhi.n	8001162 <HAL_GPIO_Init+0x12e>
 8001082:	4a96      	ldr	r2, [pc, #600]	; (80012dc <HAL_GPIO_Init+0x2a8>)
 8001084:	4293      	cmp	r3, r2
 8001086:	d052      	beq.n	800112e <HAL_GPIO_Init+0xfa>
 8001088:	4a94      	ldr	r2, [pc, #592]	; (80012dc <HAL_GPIO_Init+0x2a8>)
 800108a:	4293      	cmp	r3, r2
 800108c:	d869      	bhi.n	8001162 <HAL_GPIO_Init+0x12e>
 800108e:	4a94      	ldr	r2, [pc, #592]	; (80012e0 <HAL_GPIO_Init+0x2ac>)
 8001090:	4293      	cmp	r3, r2
 8001092:	d04c      	beq.n	800112e <HAL_GPIO_Init+0xfa>
 8001094:	4a92      	ldr	r2, [pc, #584]	; (80012e0 <HAL_GPIO_Init+0x2ac>)
 8001096:	4293      	cmp	r3, r2
 8001098:	d863      	bhi.n	8001162 <HAL_GPIO_Init+0x12e>
 800109a:	4a92      	ldr	r2, [pc, #584]	; (80012e4 <HAL_GPIO_Init+0x2b0>)
 800109c:	4293      	cmp	r3, r2
 800109e:	d046      	beq.n	800112e <HAL_GPIO_Init+0xfa>
 80010a0:	4a90      	ldr	r2, [pc, #576]	; (80012e4 <HAL_GPIO_Init+0x2b0>)
 80010a2:	4293      	cmp	r3, r2
 80010a4:	d85d      	bhi.n	8001162 <HAL_GPIO_Init+0x12e>
 80010a6:	2b12      	cmp	r3, #18
 80010a8:	d82a      	bhi.n	8001100 <HAL_GPIO_Init+0xcc>
 80010aa:	2b12      	cmp	r3, #18
 80010ac:	d859      	bhi.n	8001162 <HAL_GPIO_Init+0x12e>
 80010ae:	a201      	add	r2, pc, #4	; (adr r2, 80010b4 <HAL_GPIO_Init+0x80>)
 80010b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80010b4:	0800112f 	.word	0x0800112f
 80010b8:	08001109 	.word	0x08001109
 80010bc:	0800111b 	.word	0x0800111b
 80010c0:	0800115d 	.word	0x0800115d
 80010c4:	08001163 	.word	0x08001163
 80010c8:	08001163 	.word	0x08001163
 80010cc:	08001163 	.word	0x08001163
 80010d0:	08001163 	.word	0x08001163
 80010d4:	08001163 	.word	0x08001163
 80010d8:	08001163 	.word	0x08001163
 80010dc:	08001163 	.word	0x08001163
 80010e0:	08001163 	.word	0x08001163
 80010e4:	08001163 	.word	0x08001163
 80010e8:	08001163 	.word	0x08001163
 80010ec:	08001163 	.word	0x08001163
 80010f0:	08001163 	.word	0x08001163
 80010f4:	08001163 	.word	0x08001163
 80010f8:	08001111 	.word	0x08001111
 80010fc:	08001125 	.word	0x08001125
 8001100:	4a79      	ldr	r2, [pc, #484]	; (80012e8 <HAL_GPIO_Init+0x2b4>)
 8001102:	4293      	cmp	r3, r2
 8001104:	d013      	beq.n	800112e <HAL_GPIO_Init+0xfa>
 8001106:	e02c      	b.n	8001162 <HAL_GPIO_Init+0x12e>
 8001108:	683b      	ldr	r3, [r7, #0]
 800110a:	68db      	ldr	r3, [r3, #12]
 800110c:	623b      	str	r3, [r7, #32]
 800110e:	e029      	b.n	8001164 <HAL_GPIO_Init+0x130>
 8001110:	683b      	ldr	r3, [r7, #0]
 8001112:	68db      	ldr	r3, [r3, #12]
 8001114:	3304      	adds	r3, #4
 8001116:	623b      	str	r3, [r7, #32]
 8001118:	e024      	b.n	8001164 <HAL_GPIO_Init+0x130>
 800111a:	683b      	ldr	r3, [r7, #0]
 800111c:	68db      	ldr	r3, [r3, #12]
 800111e:	3308      	adds	r3, #8
 8001120:	623b      	str	r3, [r7, #32]
 8001122:	e01f      	b.n	8001164 <HAL_GPIO_Init+0x130>
 8001124:	683b      	ldr	r3, [r7, #0]
 8001126:	68db      	ldr	r3, [r3, #12]
 8001128:	330c      	adds	r3, #12
 800112a:	623b      	str	r3, [r7, #32]
 800112c:	e01a      	b.n	8001164 <HAL_GPIO_Init+0x130>
 800112e:	683b      	ldr	r3, [r7, #0]
 8001130:	689b      	ldr	r3, [r3, #8]
 8001132:	2b00      	cmp	r3, #0
 8001134:	d102      	bne.n	800113c <HAL_GPIO_Init+0x108>
 8001136:	2304      	movs	r3, #4
 8001138:	623b      	str	r3, [r7, #32]
 800113a:	e013      	b.n	8001164 <HAL_GPIO_Init+0x130>
 800113c:	683b      	ldr	r3, [r7, #0]
 800113e:	689b      	ldr	r3, [r3, #8]
 8001140:	2b01      	cmp	r3, #1
 8001142:	d105      	bne.n	8001150 <HAL_GPIO_Init+0x11c>
 8001144:	2308      	movs	r3, #8
 8001146:	623b      	str	r3, [r7, #32]
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	69fa      	ldr	r2, [r7, #28]
 800114c:	611a      	str	r2, [r3, #16]
 800114e:	e009      	b.n	8001164 <HAL_GPIO_Init+0x130>
 8001150:	2308      	movs	r3, #8
 8001152:	623b      	str	r3, [r7, #32]
 8001154:	687b      	ldr	r3, [r7, #4]
 8001156:	69fa      	ldr	r2, [r7, #28]
 8001158:	615a      	str	r2, [r3, #20]
 800115a:	e003      	b.n	8001164 <HAL_GPIO_Init+0x130>
 800115c:	2300      	movs	r3, #0
 800115e:	623b      	str	r3, [r7, #32]
 8001160:	e000      	b.n	8001164 <HAL_GPIO_Init+0x130>
 8001162:	bf00      	nop
 8001164:	69bb      	ldr	r3, [r7, #24]
 8001166:	2bff      	cmp	r3, #255	; 0xff
 8001168:	d801      	bhi.n	800116e <HAL_GPIO_Init+0x13a>
 800116a:	687b      	ldr	r3, [r7, #4]
 800116c:	e001      	b.n	8001172 <HAL_GPIO_Init+0x13e>
 800116e:	687b      	ldr	r3, [r7, #4]
 8001170:	3304      	adds	r3, #4
 8001172:	617b      	str	r3, [r7, #20]
 8001174:	69bb      	ldr	r3, [r7, #24]
 8001176:	2bff      	cmp	r3, #255	; 0xff
 8001178:	d802      	bhi.n	8001180 <HAL_GPIO_Init+0x14c>
 800117a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800117c:	009b      	lsls	r3, r3, #2
 800117e:	e002      	b.n	8001186 <HAL_GPIO_Init+0x152>
 8001180:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001182:	3b08      	subs	r3, #8
 8001184:	009b      	lsls	r3, r3, #2
 8001186:	613b      	str	r3, [r7, #16]
 8001188:	697b      	ldr	r3, [r7, #20]
 800118a:	681a      	ldr	r2, [r3, #0]
 800118c:	210f      	movs	r1, #15
 800118e:	693b      	ldr	r3, [r7, #16]
 8001190:	fa01 f303 	lsl.w	r3, r1, r3
 8001194:	43db      	mvns	r3, r3
 8001196:	401a      	ands	r2, r3
 8001198:	6a39      	ldr	r1, [r7, #32]
 800119a:	693b      	ldr	r3, [r7, #16]
 800119c:	fa01 f303 	lsl.w	r3, r1, r3
 80011a0:	431a      	orrs	r2, r3
 80011a2:	697b      	ldr	r3, [r7, #20]
 80011a4:	601a      	str	r2, [r3, #0]
 80011a6:	683b      	ldr	r3, [r7, #0]
 80011a8:	685b      	ldr	r3, [r3, #4]
 80011aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80011ae:	2b00      	cmp	r3, #0
 80011b0:	f000 80b1 	beq.w	8001316 <HAL_GPIO_Init+0x2e2>
 80011b4:	4b4d      	ldr	r3, [pc, #308]	; (80012ec <HAL_GPIO_Init+0x2b8>)
 80011b6:	699b      	ldr	r3, [r3, #24]
 80011b8:	4a4c      	ldr	r2, [pc, #304]	; (80012ec <HAL_GPIO_Init+0x2b8>)
 80011ba:	f043 0301 	orr.w	r3, r3, #1
 80011be:	6193      	str	r3, [r2, #24]
 80011c0:	4b4a      	ldr	r3, [pc, #296]	; (80012ec <HAL_GPIO_Init+0x2b8>)
 80011c2:	699b      	ldr	r3, [r3, #24]
 80011c4:	f003 0301 	and.w	r3, r3, #1
 80011c8:	60bb      	str	r3, [r7, #8]
 80011ca:	68bb      	ldr	r3, [r7, #8]
 80011cc:	4a48      	ldr	r2, [pc, #288]	; (80012f0 <HAL_GPIO_Init+0x2bc>)
 80011ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011d0:	089b      	lsrs	r3, r3, #2
 80011d2:	3302      	adds	r3, #2
 80011d4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80011d8:	60fb      	str	r3, [r7, #12]
 80011da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011dc:	f003 0303 	and.w	r3, r3, #3
 80011e0:	009b      	lsls	r3, r3, #2
 80011e2:	220f      	movs	r2, #15
 80011e4:	fa02 f303 	lsl.w	r3, r2, r3
 80011e8:	43db      	mvns	r3, r3
 80011ea:	68fa      	ldr	r2, [r7, #12]
 80011ec:	4013      	ands	r3, r2
 80011ee:	60fb      	str	r3, [r7, #12]
 80011f0:	687b      	ldr	r3, [r7, #4]
 80011f2:	4a40      	ldr	r2, [pc, #256]	; (80012f4 <HAL_GPIO_Init+0x2c0>)
 80011f4:	4293      	cmp	r3, r2
 80011f6:	d013      	beq.n	8001220 <HAL_GPIO_Init+0x1ec>
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	4a3f      	ldr	r2, [pc, #252]	; (80012f8 <HAL_GPIO_Init+0x2c4>)
 80011fc:	4293      	cmp	r3, r2
 80011fe:	d00d      	beq.n	800121c <HAL_GPIO_Init+0x1e8>
 8001200:	687b      	ldr	r3, [r7, #4]
 8001202:	4a3e      	ldr	r2, [pc, #248]	; (80012fc <HAL_GPIO_Init+0x2c8>)
 8001204:	4293      	cmp	r3, r2
 8001206:	d007      	beq.n	8001218 <HAL_GPIO_Init+0x1e4>
 8001208:	687b      	ldr	r3, [r7, #4]
 800120a:	4a3d      	ldr	r2, [pc, #244]	; (8001300 <HAL_GPIO_Init+0x2cc>)
 800120c:	4293      	cmp	r3, r2
 800120e:	d101      	bne.n	8001214 <HAL_GPIO_Init+0x1e0>
 8001210:	2303      	movs	r3, #3
 8001212:	e006      	b.n	8001222 <HAL_GPIO_Init+0x1ee>
 8001214:	2304      	movs	r3, #4
 8001216:	e004      	b.n	8001222 <HAL_GPIO_Init+0x1ee>
 8001218:	2302      	movs	r3, #2
 800121a:	e002      	b.n	8001222 <HAL_GPIO_Init+0x1ee>
 800121c:	2301      	movs	r3, #1
 800121e:	e000      	b.n	8001222 <HAL_GPIO_Init+0x1ee>
 8001220:	2300      	movs	r3, #0
 8001222:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001224:	f002 0203 	and.w	r2, r2, #3
 8001228:	0092      	lsls	r2, r2, #2
 800122a:	4093      	lsls	r3, r2
 800122c:	68fa      	ldr	r2, [r7, #12]
 800122e:	4313      	orrs	r3, r2
 8001230:	60fb      	str	r3, [r7, #12]
 8001232:	492f      	ldr	r1, [pc, #188]	; (80012f0 <HAL_GPIO_Init+0x2bc>)
 8001234:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001236:	089b      	lsrs	r3, r3, #2
 8001238:	3302      	adds	r3, #2
 800123a:	68fa      	ldr	r2, [r7, #12]
 800123c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001240:	683b      	ldr	r3, [r7, #0]
 8001242:	685b      	ldr	r3, [r3, #4]
 8001244:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001248:	2b00      	cmp	r3, #0
 800124a:	d006      	beq.n	800125a <HAL_GPIO_Init+0x226>
 800124c:	4b2d      	ldr	r3, [pc, #180]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 800124e:	681a      	ldr	r2, [r3, #0]
 8001250:	492c      	ldr	r1, [pc, #176]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 8001252:	69bb      	ldr	r3, [r7, #24]
 8001254:	4313      	orrs	r3, r2
 8001256:	600b      	str	r3, [r1, #0]
 8001258:	e006      	b.n	8001268 <HAL_GPIO_Init+0x234>
 800125a:	4b2a      	ldr	r3, [pc, #168]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 800125c:	681a      	ldr	r2, [r3, #0]
 800125e:	69bb      	ldr	r3, [r7, #24]
 8001260:	43db      	mvns	r3, r3
 8001262:	4928      	ldr	r1, [pc, #160]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 8001264:	4013      	ands	r3, r2
 8001266:	600b      	str	r3, [r1, #0]
 8001268:	683b      	ldr	r3, [r7, #0]
 800126a:	685b      	ldr	r3, [r3, #4]
 800126c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001270:	2b00      	cmp	r3, #0
 8001272:	d006      	beq.n	8001282 <HAL_GPIO_Init+0x24e>
 8001274:	4b23      	ldr	r3, [pc, #140]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 8001276:	685a      	ldr	r2, [r3, #4]
 8001278:	4922      	ldr	r1, [pc, #136]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 800127a:	69bb      	ldr	r3, [r7, #24]
 800127c:	4313      	orrs	r3, r2
 800127e:	604b      	str	r3, [r1, #4]
 8001280:	e006      	b.n	8001290 <HAL_GPIO_Init+0x25c>
 8001282:	4b20      	ldr	r3, [pc, #128]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 8001284:	685a      	ldr	r2, [r3, #4]
 8001286:	69bb      	ldr	r3, [r7, #24]
 8001288:	43db      	mvns	r3, r3
 800128a:	491e      	ldr	r1, [pc, #120]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 800128c:	4013      	ands	r3, r2
 800128e:	604b      	str	r3, [r1, #4]
 8001290:	683b      	ldr	r3, [r7, #0]
 8001292:	685b      	ldr	r3, [r3, #4]
 8001294:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001298:	2b00      	cmp	r3, #0
 800129a:	d006      	beq.n	80012aa <HAL_GPIO_Init+0x276>
 800129c:	4b19      	ldr	r3, [pc, #100]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 800129e:	689a      	ldr	r2, [r3, #8]
 80012a0:	4918      	ldr	r1, [pc, #96]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 80012a2:	69bb      	ldr	r3, [r7, #24]
 80012a4:	4313      	orrs	r3, r2
 80012a6:	608b      	str	r3, [r1, #8]
 80012a8:	e006      	b.n	80012b8 <HAL_GPIO_Init+0x284>
 80012aa:	4b16      	ldr	r3, [pc, #88]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 80012ac:	689a      	ldr	r2, [r3, #8]
 80012ae:	69bb      	ldr	r3, [r7, #24]
 80012b0:	43db      	mvns	r3, r3
 80012b2:	4914      	ldr	r1, [pc, #80]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 80012b4:	4013      	ands	r3, r2
 80012b6:	608b      	str	r3, [r1, #8]
 80012b8:	683b      	ldr	r3, [r7, #0]
 80012ba:	685b      	ldr	r3, [r3, #4]
 80012bc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80012c0:	2b00      	cmp	r3, #0
 80012c2:	d021      	beq.n	8001308 <HAL_GPIO_Init+0x2d4>
 80012c4:	4b0f      	ldr	r3, [pc, #60]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 80012c6:	68da      	ldr	r2, [r3, #12]
 80012c8:	490e      	ldr	r1, [pc, #56]	; (8001304 <HAL_GPIO_Init+0x2d0>)
 80012ca:	69bb      	ldr	r3, [r7, #24]
 80012cc:	4313      	orrs	r3, r2
 80012ce:	60cb      	str	r3, [r1, #12]
 80012d0:	e021      	b.n	8001316 <HAL_GPIO_Init+0x2e2>
 80012d2:	bf00      	nop
 80012d4:	10320000 	.word	0x10320000
 80012d8:	10310000 	.word	0x10310000
 80012dc:	10220000 	.word	0x10220000
 80012e0:	10210000 	.word	0x10210000
 80012e4:	10120000 	.word	0x10120000
 80012e8:	10110000 	.word	0x10110000
 80012ec:	40021000 	.word	0x40021000
 80012f0:	40010000 	.word	0x40010000
 80012f4:	40010800 	.word	0x40010800
 80012f8:	40010c00 	.word	0x40010c00
 80012fc:	40011000 	.word	0x40011000
 8001300:	40011400 	.word	0x40011400
 8001304:	40010400 	.word	0x40010400
 8001308:	4b0b      	ldr	r3, [pc, #44]	; (8001338 <HAL_GPIO_Init+0x304>)
 800130a:	68da      	ldr	r2, [r3, #12]
 800130c:	69bb      	ldr	r3, [r7, #24]
 800130e:	43db      	mvns	r3, r3
 8001310:	4909      	ldr	r1, [pc, #36]	; (8001338 <HAL_GPIO_Init+0x304>)
 8001312:	4013      	ands	r3, r2
 8001314:	60cb      	str	r3, [r1, #12]
 8001316:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001318:	3301      	adds	r3, #1
 800131a:	627b      	str	r3, [r7, #36]	; 0x24
 800131c:	683b      	ldr	r3, [r7, #0]
 800131e:	681a      	ldr	r2, [r3, #0]
 8001320:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001322:	fa22 f303 	lsr.w	r3, r2, r3
 8001326:	2b00      	cmp	r3, #0
 8001328:	f47f ae8e 	bne.w	8001048 <HAL_GPIO_Init+0x14>
 800132c:	bf00      	nop
 800132e:	bf00      	nop
 8001330:	372c      	adds	r7, #44	; 0x2c
 8001332:	46bd      	mov	sp, r7
 8001334:	bc80      	pop	{r7}
 8001336:	4770      	bx	lr
 8001338:	40010400 	.word	0x40010400

0800133c <HAL_GPIO_WritePin>:
 800133c:	b480      	push	{r7}
 800133e:	b083      	sub	sp, #12
 8001340:	af00      	add	r7, sp, #0
 8001342:	6078      	str	r0, [r7, #4]
 8001344:	460b      	mov	r3, r1
 8001346:	807b      	strh	r3, [r7, #2]
 8001348:	4613      	mov	r3, r2
 800134a:	707b      	strb	r3, [r7, #1]
 800134c:	787b      	ldrb	r3, [r7, #1]
 800134e:	2b00      	cmp	r3, #0
 8001350:	d003      	beq.n	800135a <HAL_GPIO_WritePin+0x1e>
 8001352:	887a      	ldrh	r2, [r7, #2]
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	611a      	str	r2, [r3, #16]
 8001358:	e003      	b.n	8001362 <HAL_GPIO_WritePin+0x26>
 800135a:	887b      	ldrh	r3, [r7, #2]
 800135c:	041a      	lsls	r2, r3, #16
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	611a      	str	r2, [r3, #16]
 8001362:	bf00      	nop
 8001364:	370c      	adds	r7, #12
 8001366:	46bd      	mov	sp, r7
 8001368:	bc80      	pop	{r7}
 800136a:	4770      	bx	lr

0800136c <HAL_GPIO_TogglePin>:
 800136c:	b480      	push	{r7}
 800136e:	b085      	sub	sp, #20
 8001370:	af00      	add	r7, sp, #0
 8001372:	6078      	str	r0, [r7, #4]
 8001374:	460b      	mov	r3, r1
 8001376:	807b      	strh	r3, [r7, #2]
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	68db      	ldr	r3, [r3, #12]
 800137c:	60fb      	str	r3, [r7, #12]
 800137e:	887a      	ldrh	r2, [r7, #2]
 8001380:	68fb      	ldr	r3, [r7, #12]
 8001382:	4013      	ands	r3, r2
 8001384:	041a      	lsls	r2, r3, #16
 8001386:	68fb      	ldr	r3, [r7, #12]
 8001388:	43d9      	mvns	r1, r3
 800138a:	887b      	ldrh	r3, [r7, #2]
 800138c:	400b      	ands	r3, r1
 800138e:	431a      	orrs	r2, r3
 8001390:	687b      	ldr	r3, [r7, #4]
 8001392:	611a      	str	r2, [r3, #16]
 8001394:	bf00      	nop
 8001396:	3714      	adds	r7, #20
 8001398:	46bd      	mov	sp, r7
 800139a:	bc80      	pop	{r7}
 800139c:	4770      	bx	lr
	...

080013a0 <HAL_RCC_OscConfig>:
 80013a0:	b580      	push	{r7, lr}
 80013a2:	b086      	sub	sp, #24
 80013a4:	af00      	add	r7, sp, #0
 80013a6:	6078      	str	r0, [r7, #4]
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	2b00      	cmp	r3, #0
 80013ac:	d101      	bne.n	80013b2 <HAL_RCC_OscConfig+0x12>
 80013ae:	2301      	movs	r3, #1
 80013b0:	e26c      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 80013b2:	687b      	ldr	r3, [r7, #4]
 80013b4:	681b      	ldr	r3, [r3, #0]
 80013b6:	f003 0301 	and.w	r3, r3, #1
 80013ba:	2b00      	cmp	r3, #0
 80013bc:	f000 8087 	beq.w	80014ce <HAL_RCC_OscConfig+0x12e>
 80013c0:	4b92      	ldr	r3, [pc, #584]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 80013c2:	685b      	ldr	r3, [r3, #4]
 80013c4:	f003 030c 	and.w	r3, r3, #12
 80013c8:	2b04      	cmp	r3, #4
 80013ca:	d00c      	beq.n	80013e6 <HAL_RCC_OscConfig+0x46>
 80013cc:	4b8f      	ldr	r3, [pc, #572]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 80013ce:	685b      	ldr	r3, [r3, #4]
 80013d0:	f003 030c 	and.w	r3, r3, #12
 80013d4:	2b08      	cmp	r3, #8
 80013d6:	d112      	bne.n	80013fe <HAL_RCC_OscConfig+0x5e>
 80013d8:	4b8c      	ldr	r3, [pc, #560]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 80013da:	685b      	ldr	r3, [r3, #4]
 80013dc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80013e0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80013e4:	d10b      	bne.n	80013fe <HAL_RCC_OscConfig+0x5e>
 80013e6:	4b89      	ldr	r3, [pc, #548]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 80013e8:	681b      	ldr	r3, [r3, #0]
 80013ea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80013ee:	2b00      	cmp	r3, #0
 80013f0:	d06c      	beq.n	80014cc <HAL_RCC_OscConfig+0x12c>
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	685b      	ldr	r3, [r3, #4]
 80013f6:	2b00      	cmp	r3, #0
 80013f8:	d168      	bne.n	80014cc <HAL_RCC_OscConfig+0x12c>
 80013fa:	2301      	movs	r3, #1
 80013fc:	e246      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 80013fe:	687b      	ldr	r3, [r7, #4]
 8001400:	685b      	ldr	r3, [r3, #4]
 8001402:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001406:	d106      	bne.n	8001416 <HAL_RCC_OscConfig+0x76>
 8001408:	4b80      	ldr	r3, [pc, #512]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 800140a:	681b      	ldr	r3, [r3, #0]
 800140c:	4a7f      	ldr	r2, [pc, #508]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 800140e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001412:	6013      	str	r3, [r2, #0]
 8001414:	e02e      	b.n	8001474 <HAL_RCC_OscConfig+0xd4>
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	685b      	ldr	r3, [r3, #4]
 800141a:	2b00      	cmp	r3, #0
 800141c:	d10c      	bne.n	8001438 <HAL_RCC_OscConfig+0x98>
 800141e:	4b7b      	ldr	r3, [pc, #492]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001420:	681b      	ldr	r3, [r3, #0]
 8001422:	4a7a      	ldr	r2, [pc, #488]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001424:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001428:	6013      	str	r3, [r2, #0]
 800142a:	4b78      	ldr	r3, [pc, #480]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 800142c:	681b      	ldr	r3, [r3, #0]
 800142e:	4a77      	ldr	r2, [pc, #476]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001430:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001434:	6013      	str	r3, [r2, #0]
 8001436:	e01d      	b.n	8001474 <HAL_RCC_OscConfig+0xd4>
 8001438:	687b      	ldr	r3, [r7, #4]
 800143a:	685b      	ldr	r3, [r3, #4]
 800143c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001440:	d10c      	bne.n	800145c <HAL_RCC_OscConfig+0xbc>
 8001442:	4b72      	ldr	r3, [pc, #456]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001444:	681b      	ldr	r3, [r3, #0]
 8001446:	4a71      	ldr	r2, [pc, #452]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001448:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800144c:	6013      	str	r3, [r2, #0]
 800144e:	4b6f      	ldr	r3, [pc, #444]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001450:	681b      	ldr	r3, [r3, #0]
 8001452:	4a6e      	ldr	r2, [pc, #440]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001454:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001458:	6013      	str	r3, [r2, #0]
 800145a:	e00b      	b.n	8001474 <HAL_RCC_OscConfig+0xd4>
 800145c:	4b6b      	ldr	r3, [pc, #428]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 800145e:	681b      	ldr	r3, [r3, #0]
 8001460:	4a6a      	ldr	r2, [pc, #424]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001462:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001466:	6013      	str	r3, [r2, #0]
 8001468:	4b68      	ldr	r3, [pc, #416]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 800146a:	681b      	ldr	r3, [r3, #0]
 800146c:	4a67      	ldr	r2, [pc, #412]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 800146e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001472:	6013      	str	r3, [r2, #0]
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	685b      	ldr	r3, [r3, #4]
 8001478:	2b00      	cmp	r3, #0
 800147a:	d013      	beq.n	80014a4 <HAL_RCC_OscConfig+0x104>
 800147c:	f7ff fcf0 	bl	8000e60 <HAL_GetTick>
 8001480:	6138      	str	r0, [r7, #16]
 8001482:	e008      	b.n	8001496 <HAL_RCC_OscConfig+0xf6>
 8001484:	f7ff fcec 	bl	8000e60 <HAL_GetTick>
 8001488:	4602      	mov	r2, r0
 800148a:	693b      	ldr	r3, [r7, #16]
 800148c:	1ad3      	subs	r3, r2, r3
 800148e:	2b64      	cmp	r3, #100	; 0x64
 8001490:	d901      	bls.n	8001496 <HAL_RCC_OscConfig+0xf6>
 8001492:	2303      	movs	r3, #3
 8001494:	e1fa      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 8001496:	4b5d      	ldr	r3, [pc, #372]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001498:	681b      	ldr	r3, [r3, #0]
 800149a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800149e:	2b00      	cmp	r3, #0
 80014a0:	d0f0      	beq.n	8001484 <HAL_RCC_OscConfig+0xe4>
 80014a2:	e014      	b.n	80014ce <HAL_RCC_OscConfig+0x12e>
 80014a4:	f7ff fcdc 	bl	8000e60 <HAL_GetTick>
 80014a8:	6138      	str	r0, [r7, #16]
 80014aa:	e008      	b.n	80014be <HAL_RCC_OscConfig+0x11e>
 80014ac:	f7ff fcd8 	bl	8000e60 <HAL_GetTick>
 80014b0:	4602      	mov	r2, r0
 80014b2:	693b      	ldr	r3, [r7, #16]
 80014b4:	1ad3      	subs	r3, r2, r3
 80014b6:	2b64      	cmp	r3, #100	; 0x64
 80014b8:	d901      	bls.n	80014be <HAL_RCC_OscConfig+0x11e>
 80014ba:	2303      	movs	r3, #3
 80014bc:	e1e6      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 80014be:	4b53      	ldr	r3, [pc, #332]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 80014c0:	681b      	ldr	r3, [r3, #0]
 80014c2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	d1f0      	bne.n	80014ac <HAL_RCC_OscConfig+0x10c>
 80014ca:	e000      	b.n	80014ce <HAL_RCC_OscConfig+0x12e>
 80014cc:	bf00      	nop
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	f003 0302 	and.w	r3, r3, #2
 80014d6:	2b00      	cmp	r3, #0
 80014d8:	d063      	beq.n	80015a2 <HAL_RCC_OscConfig+0x202>
 80014da:	4b4c      	ldr	r3, [pc, #304]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 80014dc:	685b      	ldr	r3, [r3, #4]
 80014de:	f003 030c 	and.w	r3, r3, #12
 80014e2:	2b00      	cmp	r3, #0
 80014e4:	d00b      	beq.n	80014fe <HAL_RCC_OscConfig+0x15e>
 80014e6:	4b49      	ldr	r3, [pc, #292]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 80014e8:	685b      	ldr	r3, [r3, #4]
 80014ea:	f003 030c 	and.w	r3, r3, #12
 80014ee:	2b08      	cmp	r3, #8
 80014f0:	d11c      	bne.n	800152c <HAL_RCC_OscConfig+0x18c>
 80014f2:	4b46      	ldr	r3, [pc, #280]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 80014f4:	685b      	ldr	r3, [r3, #4]
 80014f6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80014fa:	2b00      	cmp	r3, #0
 80014fc:	d116      	bne.n	800152c <HAL_RCC_OscConfig+0x18c>
 80014fe:	4b43      	ldr	r3, [pc, #268]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001500:	681b      	ldr	r3, [r3, #0]
 8001502:	f003 0302 	and.w	r3, r3, #2
 8001506:	2b00      	cmp	r3, #0
 8001508:	d005      	beq.n	8001516 <HAL_RCC_OscConfig+0x176>
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	691b      	ldr	r3, [r3, #16]
 800150e:	2b01      	cmp	r3, #1
 8001510:	d001      	beq.n	8001516 <HAL_RCC_OscConfig+0x176>
 8001512:	2301      	movs	r3, #1
 8001514:	e1ba      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 8001516:	4b3d      	ldr	r3, [pc, #244]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001518:	681b      	ldr	r3, [r3, #0]
 800151a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	695b      	ldr	r3, [r3, #20]
 8001522:	00db      	lsls	r3, r3, #3
 8001524:	4939      	ldr	r1, [pc, #228]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001526:	4313      	orrs	r3, r2
 8001528:	600b      	str	r3, [r1, #0]
 800152a:	e03a      	b.n	80015a2 <HAL_RCC_OscConfig+0x202>
 800152c:	687b      	ldr	r3, [r7, #4]
 800152e:	691b      	ldr	r3, [r3, #16]
 8001530:	2b00      	cmp	r3, #0
 8001532:	d020      	beq.n	8001576 <HAL_RCC_OscConfig+0x1d6>
 8001534:	4b36      	ldr	r3, [pc, #216]	; (8001610 <HAL_RCC_OscConfig+0x270>)
 8001536:	2201      	movs	r2, #1
 8001538:	601a      	str	r2, [r3, #0]
 800153a:	f7ff fc91 	bl	8000e60 <HAL_GetTick>
 800153e:	6138      	str	r0, [r7, #16]
 8001540:	e008      	b.n	8001554 <HAL_RCC_OscConfig+0x1b4>
 8001542:	f7ff fc8d 	bl	8000e60 <HAL_GetTick>
 8001546:	4602      	mov	r2, r0
 8001548:	693b      	ldr	r3, [r7, #16]
 800154a:	1ad3      	subs	r3, r2, r3
 800154c:	2b02      	cmp	r3, #2
 800154e:	d901      	bls.n	8001554 <HAL_RCC_OscConfig+0x1b4>
 8001550:	2303      	movs	r3, #3
 8001552:	e19b      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 8001554:	4b2d      	ldr	r3, [pc, #180]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001556:	681b      	ldr	r3, [r3, #0]
 8001558:	f003 0302 	and.w	r3, r3, #2
 800155c:	2b00      	cmp	r3, #0
 800155e:	d0f0      	beq.n	8001542 <HAL_RCC_OscConfig+0x1a2>
 8001560:	4b2a      	ldr	r3, [pc, #168]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001562:	681b      	ldr	r3, [r3, #0]
 8001564:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001568:	687b      	ldr	r3, [r7, #4]
 800156a:	695b      	ldr	r3, [r3, #20]
 800156c:	00db      	lsls	r3, r3, #3
 800156e:	4927      	ldr	r1, [pc, #156]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001570:	4313      	orrs	r3, r2
 8001572:	600b      	str	r3, [r1, #0]
 8001574:	e015      	b.n	80015a2 <HAL_RCC_OscConfig+0x202>
 8001576:	4b26      	ldr	r3, [pc, #152]	; (8001610 <HAL_RCC_OscConfig+0x270>)
 8001578:	2200      	movs	r2, #0
 800157a:	601a      	str	r2, [r3, #0]
 800157c:	f7ff fc70 	bl	8000e60 <HAL_GetTick>
 8001580:	6138      	str	r0, [r7, #16]
 8001582:	e008      	b.n	8001596 <HAL_RCC_OscConfig+0x1f6>
 8001584:	f7ff fc6c 	bl	8000e60 <HAL_GetTick>
 8001588:	4602      	mov	r2, r0
 800158a:	693b      	ldr	r3, [r7, #16]
 800158c:	1ad3      	subs	r3, r2, r3
 800158e:	2b02      	cmp	r3, #2
 8001590:	d901      	bls.n	8001596 <HAL_RCC_OscConfig+0x1f6>
 8001592:	2303      	movs	r3, #3
 8001594:	e17a      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 8001596:	4b1d      	ldr	r3, [pc, #116]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 8001598:	681b      	ldr	r3, [r3, #0]
 800159a:	f003 0302 	and.w	r3, r3, #2
 800159e:	2b00      	cmp	r3, #0
 80015a0:	d1f0      	bne.n	8001584 <HAL_RCC_OscConfig+0x1e4>
 80015a2:	687b      	ldr	r3, [r7, #4]
 80015a4:	681b      	ldr	r3, [r3, #0]
 80015a6:	f003 0308 	and.w	r3, r3, #8
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	d03a      	beq.n	8001624 <HAL_RCC_OscConfig+0x284>
 80015ae:	687b      	ldr	r3, [r7, #4]
 80015b0:	699b      	ldr	r3, [r3, #24]
 80015b2:	2b00      	cmp	r3, #0
 80015b4:	d019      	beq.n	80015ea <HAL_RCC_OscConfig+0x24a>
 80015b6:	4b17      	ldr	r3, [pc, #92]	; (8001614 <HAL_RCC_OscConfig+0x274>)
 80015b8:	2201      	movs	r2, #1
 80015ba:	601a      	str	r2, [r3, #0]
 80015bc:	f7ff fc50 	bl	8000e60 <HAL_GetTick>
 80015c0:	6138      	str	r0, [r7, #16]
 80015c2:	e008      	b.n	80015d6 <HAL_RCC_OscConfig+0x236>
 80015c4:	f7ff fc4c 	bl	8000e60 <HAL_GetTick>
 80015c8:	4602      	mov	r2, r0
 80015ca:	693b      	ldr	r3, [r7, #16]
 80015cc:	1ad3      	subs	r3, r2, r3
 80015ce:	2b02      	cmp	r3, #2
 80015d0:	d901      	bls.n	80015d6 <HAL_RCC_OscConfig+0x236>
 80015d2:	2303      	movs	r3, #3
 80015d4:	e15a      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 80015d6:	4b0d      	ldr	r3, [pc, #52]	; (800160c <HAL_RCC_OscConfig+0x26c>)
 80015d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80015da:	f003 0302 	and.w	r3, r3, #2
 80015de:	2b00      	cmp	r3, #0
 80015e0:	d0f0      	beq.n	80015c4 <HAL_RCC_OscConfig+0x224>
 80015e2:	2001      	movs	r0, #1
 80015e4:	f000 fb08 	bl	8001bf8 <RCC_Delay>
 80015e8:	e01c      	b.n	8001624 <HAL_RCC_OscConfig+0x284>
 80015ea:	4b0a      	ldr	r3, [pc, #40]	; (8001614 <HAL_RCC_OscConfig+0x274>)
 80015ec:	2200      	movs	r2, #0
 80015ee:	601a      	str	r2, [r3, #0]
 80015f0:	f7ff fc36 	bl	8000e60 <HAL_GetTick>
 80015f4:	6138      	str	r0, [r7, #16]
 80015f6:	e00f      	b.n	8001618 <HAL_RCC_OscConfig+0x278>
 80015f8:	f7ff fc32 	bl	8000e60 <HAL_GetTick>
 80015fc:	4602      	mov	r2, r0
 80015fe:	693b      	ldr	r3, [r7, #16]
 8001600:	1ad3      	subs	r3, r2, r3
 8001602:	2b02      	cmp	r3, #2
 8001604:	d908      	bls.n	8001618 <HAL_RCC_OscConfig+0x278>
 8001606:	2303      	movs	r3, #3
 8001608:	e140      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 800160a:	bf00      	nop
 800160c:	40021000 	.word	0x40021000
 8001610:	42420000 	.word	0x42420000
 8001614:	42420480 	.word	0x42420480
 8001618:	4b9e      	ldr	r3, [pc, #632]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 800161a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800161c:	f003 0302 	and.w	r3, r3, #2
 8001620:	2b00      	cmp	r3, #0
 8001622:	d1e9      	bne.n	80015f8 <HAL_RCC_OscConfig+0x258>
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	681b      	ldr	r3, [r3, #0]
 8001628:	f003 0304 	and.w	r3, r3, #4
 800162c:	2b00      	cmp	r3, #0
 800162e:	f000 80a6 	beq.w	800177e <HAL_RCC_OscConfig+0x3de>
 8001632:	2300      	movs	r3, #0
 8001634:	75fb      	strb	r3, [r7, #23]
 8001636:	4b97      	ldr	r3, [pc, #604]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001638:	69db      	ldr	r3, [r3, #28]
 800163a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800163e:	2b00      	cmp	r3, #0
 8001640:	d10d      	bne.n	800165e <HAL_RCC_OscConfig+0x2be>
 8001642:	4b94      	ldr	r3, [pc, #592]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001644:	69db      	ldr	r3, [r3, #28]
 8001646:	4a93      	ldr	r2, [pc, #588]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001648:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800164c:	61d3      	str	r3, [r2, #28]
 800164e:	4b91      	ldr	r3, [pc, #580]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001650:	69db      	ldr	r3, [r3, #28]
 8001652:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001656:	60bb      	str	r3, [r7, #8]
 8001658:	68bb      	ldr	r3, [r7, #8]
 800165a:	2301      	movs	r3, #1
 800165c:	75fb      	strb	r3, [r7, #23]
 800165e:	4b8e      	ldr	r3, [pc, #568]	; (8001898 <HAL_RCC_OscConfig+0x4f8>)
 8001660:	681b      	ldr	r3, [r3, #0]
 8001662:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001666:	2b00      	cmp	r3, #0
 8001668:	d118      	bne.n	800169c <HAL_RCC_OscConfig+0x2fc>
 800166a:	4b8b      	ldr	r3, [pc, #556]	; (8001898 <HAL_RCC_OscConfig+0x4f8>)
 800166c:	681b      	ldr	r3, [r3, #0]
 800166e:	4a8a      	ldr	r2, [pc, #552]	; (8001898 <HAL_RCC_OscConfig+0x4f8>)
 8001670:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001674:	6013      	str	r3, [r2, #0]
 8001676:	f7ff fbf3 	bl	8000e60 <HAL_GetTick>
 800167a:	6138      	str	r0, [r7, #16]
 800167c:	e008      	b.n	8001690 <HAL_RCC_OscConfig+0x2f0>
 800167e:	f7ff fbef 	bl	8000e60 <HAL_GetTick>
 8001682:	4602      	mov	r2, r0
 8001684:	693b      	ldr	r3, [r7, #16]
 8001686:	1ad3      	subs	r3, r2, r3
 8001688:	2b64      	cmp	r3, #100	; 0x64
 800168a:	d901      	bls.n	8001690 <HAL_RCC_OscConfig+0x2f0>
 800168c:	2303      	movs	r3, #3
 800168e:	e0fd      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 8001690:	4b81      	ldr	r3, [pc, #516]	; (8001898 <HAL_RCC_OscConfig+0x4f8>)
 8001692:	681b      	ldr	r3, [r3, #0]
 8001694:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001698:	2b00      	cmp	r3, #0
 800169a:	d0f0      	beq.n	800167e <HAL_RCC_OscConfig+0x2de>
 800169c:	687b      	ldr	r3, [r7, #4]
 800169e:	68db      	ldr	r3, [r3, #12]
 80016a0:	2b01      	cmp	r3, #1
 80016a2:	d106      	bne.n	80016b2 <HAL_RCC_OscConfig+0x312>
 80016a4:	4b7b      	ldr	r3, [pc, #492]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016a6:	6a1b      	ldr	r3, [r3, #32]
 80016a8:	4a7a      	ldr	r2, [pc, #488]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016aa:	f043 0301 	orr.w	r3, r3, #1
 80016ae:	6213      	str	r3, [r2, #32]
 80016b0:	e02d      	b.n	800170e <HAL_RCC_OscConfig+0x36e>
 80016b2:	687b      	ldr	r3, [r7, #4]
 80016b4:	68db      	ldr	r3, [r3, #12]
 80016b6:	2b00      	cmp	r3, #0
 80016b8:	d10c      	bne.n	80016d4 <HAL_RCC_OscConfig+0x334>
 80016ba:	4b76      	ldr	r3, [pc, #472]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016bc:	6a1b      	ldr	r3, [r3, #32]
 80016be:	4a75      	ldr	r2, [pc, #468]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016c0:	f023 0301 	bic.w	r3, r3, #1
 80016c4:	6213      	str	r3, [r2, #32]
 80016c6:	4b73      	ldr	r3, [pc, #460]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016c8:	6a1b      	ldr	r3, [r3, #32]
 80016ca:	4a72      	ldr	r2, [pc, #456]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016cc:	f023 0304 	bic.w	r3, r3, #4
 80016d0:	6213      	str	r3, [r2, #32]
 80016d2:	e01c      	b.n	800170e <HAL_RCC_OscConfig+0x36e>
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	68db      	ldr	r3, [r3, #12]
 80016d8:	2b05      	cmp	r3, #5
 80016da:	d10c      	bne.n	80016f6 <HAL_RCC_OscConfig+0x356>
 80016dc:	4b6d      	ldr	r3, [pc, #436]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016de:	6a1b      	ldr	r3, [r3, #32]
 80016e0:	4a6c      	ldr	r2, [pc, #432]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016e2:	f043 0304 	orr.w	r3, r3, #4
 80016e6:	6213      	str	r3, [r2, #32]
 80016e8:	4b6a      	ldr	r3, [pc, #424]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016ea:	6a1b      	ldr	r3, [r3, #32]
 80016ec:	4a69      	ldr	r2, [pc, #420]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016ee:	f043 0301 	orr.w	r3, r3, #1
 80016f2:	6213      	str	r3, [r2, #32]
 80016f4:	e00b      	b.n	800170e <HAL_RCC_OscConfig+0x36e>
 80016f6:	4b67      	ldr	r3, [pc, #412]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016f8:	6a1b      	ldr	r3, [r3, #32]
 80016fa:	4a66      	ldr	r2, [pc, #408]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80016fc:	f023 0301 	bic.w	r3, r3, #1
 8001700:	6213      	str	r3, [r2, #32]
 8001702:	4b64      	ldr	r3, [pc, #400]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001704:	6a1b      	ldr	r3, [r3, #32]
 8001706:	4a63      	ldr	r2, [pc, #396]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001708:	f023 0304 	bic.w	r3, r3, #4
 800170c:	6213      	str	r3, [r2, #32]
 800170e:	687b      	ldr	r3, [r7, #4]
 8001710:	68db      	ldr	r3, [r3, #12]
 8001712:	2b00      	cmp	r3, #0
 8001714:	d015      	beq.n	8001742 <HAL_RCC_OscConfig+0x3a2>
 8001716:	f7ff fba3 	bl	8000e60 <HAL_GetTick>
 800171a:	6138      	str	r0, [r7, #16]
 800171c:	e00a      	b.n	8001734 <HAL_RCC_OscConfig+0x394>
 800171e:	f7ff fb9f 	bl	8000e60 <HAL_GetTick>
 8001722:	4602      	mov	r2, r0
 8001724:	693b      	ldr	r3, [r7, #16]
 8001726:	1ad3      	subs	r3, r2, r3
 8001728:	f241 3288 	movw	r2, #5000	; 0x1388
 800172c:	4293      	cmp	r3, r2
 800172e:	d901      	bls.n	8001734 <HAL_RCC_OscConfig+0x394>
 8001730:	2303      	movs	r3, #3
 8001732:	e0ab      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 8001734:	4b57      	ldr	r3, [pc, #348]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001736:	6a1b      	ldr	r3, [r3, #32]
 8001738:	f003 0302 	and.w	r3, r3, #2
 800173c:	2b00      	cmp	r3, #0
 800173e:	d0ee      	beq.n	800171e <HAL_RCC_OscConfig+0x37e>
 8001740:	e014      	b.n	800176c <HAL_RCC_OscConfig+0x3cc>
 8001742:	f7ff fb8d 	bl	8000e60 <HAL_GetTick>
 8001746:	6138      	str	r0, [r7, #16]
 8001748:	e00a      	b.n	8001760 <HAL_RCC_OscConfig+0x3c0>
 800174a:	f7ff fb89 	bl	8000e60 <HAL_GetTick>
 800174e:	4602      	mov	r2, r0
 8001750:	693b      	ldr	r3, [r7, #16]
 8001752:	1ad3      	subs	r3, r2, r3
 8001754:	f241 3288 	movw	r2, #5000	; 0x1388
 8001758:	4293      	cmp	r3, r2
 800175a:	d901      	bls.n	8001760 <HAL_RCC_OscConfig+0x3c0>
 800175c:	2303      	movs	r3, #3
 800175e:	e095      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 8001760:	4b4c      	ldr	r3, [pc, #304]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001762:	6a1b      	ldr	r3, [r3, #32]
 8001764:	f003 0302 	and.w	r3, r3, #2
 8001768:	2b00      	cmp	r3, #0
 800176a:	d1ee      	bne.n	800174a <HAL_RCC_OscConfig+0x3aa>
 800176c:	7dfb      	ldrb	r3, [r7, #23]
 800176e:	2b01      	cmp	r3, #1
 8001770:	d105      	bne.n	800177e <HAL_RCC_OscConfig+0x3de>
 8001772:	4b48      	ldr	r3, [pc, #288]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001774:	69db      	ldr	r3, [r3, #28]
 8001776:	4a47      	ldr	r2, [pc, #284]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001778:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800177c:	61d3      	str	r3, [r2, #28]
 800177e:	687b      	ldr	r3, [r7, #4]
 8001780:	69db      	ldr	r3, [r3, #28]
 8001782:	2b00      	cmp	r3, #0
 8001784:	f000 8081 	beq.w	800188a <HAL_RCC_OscConfig+0x4ea>
 8001788:	4b42      	ldr	r3, [pc, #264]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 800178a:	685b      	ldr	r3, [r3, #4]
 800178c:	f003 030c 	and.w	r3, r3, #12
 8001790:	2b08      	cmp	r3, #8
 8001792:	d061      	beq.n	8001858 <HAL_RCC_OscConfig+0x4b8>
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	69db      	ldr	r3, [r3, #28]
 8001798:	2b02      	cmp	r3, #2
 800179a:	d146      	bne.n	800182a <HAL_RCC_OscConfig+0x48a>
 800179c:	4b3f      	ldr	r3, [pc, #252]	; (800189c <HAL_RCC_OscConfig+0x4fc>)
 800179e:	2200      	movs	r2, #0
 80017a0:	601a      	str	r2, [r3, #0]
 80017a2:	f7ff fb5d 	bl	8000e60 <HAL_GetTick>
 80017a6:	6138      	str	r0, [r7, #16]
 80017a8:	e008      	b.n	80017bc <HAL_RCC_OscConfig+0x41c>
 80017aa:	f7ff fb59 	bl	8000e60 <HAL_GetTick>
 80017ae:	4602      	mov	r2, r0
 80017b0:	693b      	ldr	r3, [r7, #16]
 80017b2:	1ad3      	subs	r3, r2, r3
 80017b4:	2b02      	cmp	r3, #2
 80017b6:	d901      	bls.n	80017bc <HAL_RCC_OscConfig+0x41c>
 80017b8:	2303      	movs	r3, #3
 80017ba:	e067      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 80017bc:	4b35      	ldr	r3, [pc, #212]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80017be:	681b      	ldr	r3, [r3, #0]
 80017c0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80017c4:	2b00      	cmp	r3, #0
 80017c6:	d1f0      	bne.n	80017aa <HAL_RCC_OscConfig+0x40a>
 80017c8:	687b      	ldr	r3, [r7, #4]
 80017ca:	6a1b      	ldr	r3, [r3, #32]
 80017cc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80017d0:	d108      	bne.n	80017e4 <HAL_RCC_OscConfig+0x444>
 80017d2:	4b30      	ldr	r3, [pc, #192]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80017d4:	685b      	ldr	r3, [r3, #4]
 80017d6:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	689b      	ldr	r3, [r3, #8]
 80017de:	492d      	ldr	r1, [pc, #180]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80017e0:	4313      	orrs	r3, r2
 80017e2:	604b      	str	r3, [r1, #4]
 80017e4:	4b2b      	ldr	r3, [pc, #172]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80017e6:	685b      	ldr	r3, [r3, #4]
 80017e8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	6a19      	ldr	r1, [r3, #32]
 80017f0:	687b      	ldr	r3, [r7, #4]
 80017f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80017f4:	430b      	orrs	r3, r1
 80017f6:	4927      	ldr	r1, [pc, #156]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 80017f8:	4313      	orrs	r3, r2
 80017fa:	604b      	str	r3, [r1, #4]
 80017fc:	4b27      	ldr	r3, [pc, #156]	; (800189c <HAL_RCC_OscConfig+0x4fc>)
 80017fe:	2201      	movs	r2, #1
 8001800:	601a      	str	r2, [r3, #0]
 8001802:	f7ff fb2d 	bl	8000e60 <HAL_GetTick>
 8001806:	6138      	str	r0, [r7, #16]
 8001808:	e008      	b.n	800181c <HAL_RCC_OscConfig+0x47c>
 800180a:	f7ff fb29 	bl	8000e60 <HAL_GetTick>
 800180e:	4602      	mov	r2, r0
 8001810:	693b      	ldr	r3, [r7, #16]
 8001812:	1ad3      	subs	r3, r2, r3
 8001814:	2b02      	cmp	r3, #2
 8001816:	d901      	bls.n	800181c <HAL_RCC_OscConfig+0x47c>
 8001818:	2303      	movs	r3, #3
 800181a:	e037      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 800181c:	4b1d      	ldr	r3, [pc, #116]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001824:	2b00      	cmp	r3, #0
 8001826:	d0f0      	beq.n	800180a <HAL_RCC_OscConfig+0x46a>
 8001828:	e02f      	b.n	800188a <HAL_RCC_OscConfig+0x4ea>
 800182a:	4b1c      	ldr	r3, [pc, #112]	; (800189c <HAL_RCC_OscConfig+0x4fc>)
 800182c:	2200      	movs	r2, #0
 800182e:	601a      	str	r2, [r3, #0]
 8001830:	f7ff fb16 	bl	8000e60 <HAL_GetTick>
 8001834:	6138      	str	r0, [r7, #16]
 8001836:	e008      	b.n	800184a <HAL_RCC_OscConfig+0x4aa>
 8001838:	f7ff fb12 	bl	8000e60 <HAL_GetTick>
 800183c:	4602      	mov	r2, r0
 800183e:	693b      	ldr	r3, [r7, #16]
 8001840:	1ad3      	subs	r3, r2, r3
 8001842:	2b02      	cmp	r3, #2
 8001844:	d901      	bls.n	800184a <HAL_RCC_OscConfig+0x4aa>
 8001846:	2303      	movs	r3, #3
 8001848:	e020      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 800184a:	4b12      	ldr	r3, [pc, #72]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 800184c:	681b      	ldr	r3, [r3, #0]
 800184e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001852:	2b00      	cmp	r3, #0
 8001854:	d1f0      	bne.n	8001838 <HAL_RCC_OscConfig+0x498>
 8001856:	e018      	b.n	800188a <HAL_RCC_OscConfig+0x4ea>
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	69db      	ldr	r3, [r3, #28]
 800185c:	2b01      	cmp	r3, #1
 800185e:	d101      	bne.n	8001864 <HAL_RCC_OscConfig+0x4c4>
 8001860:	2301      	movs	r3, #1
 8001862:	e013      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 8001864:	4b0b      	ldr	r3, [pc, #44]	; (8001894 <HAL_RCC_OscConfig+0x4f4>)
 8001866:	685b      	ldr	r3, [r3, #4]
 8001868:	60fb      	str	r3, [r7, #12]
 800186a:	68fb      	ldr	r3, [r7, #12]
 800186c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001870:	687b      	ldr	r3, [r7, #4]
 8001872:	6a1b      	ldr	r3, [r3, #32]
 8001874:	429a      	cmp	r2, r3
 8001876:	d106      	bne.n	8001886 <HAL_RCC_OscConfig+0x4e6>
 8001878:	68fb      	ldr	r3, [r7, #12]
 800187a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001882:	429a      	cmp	r2, r3
 8001884:	d001      	beq.n	800188a <HAL_RCC_OscConfig+0x4ea>
 8001886:	2301      	movs	r3, #1
 8001888:	e000      	b.n	800188c <HAL_RCC_OscConfig+0x4ec>
 800188a:	2300      	movs	r3, #0
 800188c:	4618      	mov	r0, r3
 800188e:	3718      	adds	r7, #24
 8001890:	46bd      	mov	sp, r7
 8001892:	bd80      	pop	{r7, pc}
 8001894:	40021000 	.word	0x40021000
 8001898:	40007000 	.word	0x40007000
 800189c:	42420060 	.word	0x42420060

080018a0 <HAL_RCC_ClockConfig>:
 80018a0:	b580      	push	{r7, lr}
 80018a2:	b084      	sub	sp, #16
 80018a4:	af00      	add	r7, sp, #0
 80018a6:	6078      	str	r0, [r7, #4]
 80018a8:	6039      	str	r1, [r7, #0]
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	2b00      	cmp	r3, #0
 80018ae:	d101      	bne.n	80018b4 <HAL_RCC_ClockConfig+0x14>
 80018b0:	2301      	movs	r3, #1
 80018b2:	e0d0      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 80018b4:	4b6a      	ldr	r3, [pc, #424]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	f003 0307 	and.w	r3, r3, #7
 80018bc:	683a      	ldr	r2, [r7, #0]
 80018be:	429a      	cmp	r2, r3
 80018c0:	d910      	bls.n	80018e4 <HAL_RCC_ClockConfig+0x44>
 80018c2:	4b67      	ldr	r3, [pc, #412]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	f023 0207 	bic.w	r2, r3, #7
 80018ca:	4965      	ldr	r1, [pc, #404]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80018cc:	683b      	ldr	r3, [r7, #0]
 80018ce:	4313      	orrs	r3, r2
 80018d0:	600b      	str	r3, [r1, #0]
 80018d2:	4b63      	ldr	r3, [pc, #396]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80018d4:	681b      	ldr	r3, [r3, #0]
 80018d6:	f003 0307 	and.w	r3, r3, #7
 80018da:	683a      	ldr	r2, [r7, #0]
 80018dc:	429a      	cmp	r2, r3
 80018de:	d001      	beq.n	80018e4 <HAL_RCC_ClockConfig+0x44>
 80018e0:	2301      	movs	r3, #1
 80018e2:	e0b8      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	f003 0302 	and.w	r3, r3, #2
 80018ec:	2b00      	cmp	r3, #0
 80018ee:	d020      	beq.n	8001932 <HAL_RCC_ClockConfig+0x92>
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	f003 0304 	and.w	r3, r3, #4
 80018f8:	2b00      	cmp	r3, #0
 80018fa:	d005      	beq.n	8001908 <HAL_RCC_ClockConfig+0x68>
 80018fc:	4b59      	ldr	r3, [pc, #356]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 80018fe:	685b      	ldr	r3, [r3, #4]
 8001900:	4a58      	ldr	r2, [pc, #352]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001902:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001906:	6053      	str	r3, [r2, #4]
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	f003 0308 	and.w	r3, r3, #8
 8001910:	2b00      	cmp	r3, #0
 8001912:	d005      	beq.n	8001920 <HAL_RCC_ClockConfig+0x80>
 8001914:	4b53      	ldr	r3, [pc, #332]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001916:	685b      	ldr	r3, [r3, #4]
 8001918:	4a52      	ldr	r2, [pc, #328]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 800191a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800191e:	6053      	str	r3, [r2, #4]
 8001920:	4b50      	ldr	r3, [pc, #320]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001922:	685b      	ldr	r3, [r3, #4]
 8001924:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	689b      	ldr	r3, [r3, #8]
 800192c:	494d      	ldr	r1, [pc, #308]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 800192e:	4313      	orrs	r3, r2
 8001930:	604b      	str	r3, [r1, #4]
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	681b      	ldr	r3, [r3, #0]
 8001936:	f003 0301 	and.w	r3, r3, #1
 800193a:	2b00      	cmp	r3, #0
 800193c:	d040      	beq.n	80019c0 <HAL_RCC_ClockConfig+0x120>
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	685b      	ldr	r3, [r3, #4]
 8001942:	2b01      	cmp	r3, #1
 8001944:	d107      	bne.n	8001956 <HAL_RCC_ClockConfig+0xb6>
 8001946:	4b47      	ldr	r3, [pc, #284]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001948:	681b      	ldr	r3, [r3, #0]
 800194a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800194e:	2b00      	cmp	r3, #0
 8001950:	d115      	bne.n	800197e <HAL_RCC_ClockConfig+0xde>
 8001952:	2301      	movs	r3, #1
 8001954:	e07f      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	685b      	ldr	r3, [r3, #4]
 800195a:	2b02      	cmp	r3, #2
 800195c:	d107      	bne.n	800196e <HAL_RCC_ClockConfig+0xce>
 800195e:	4b41      	ldr	r3, [pc, #260]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001960:	681b      	ldr	r3, [r3, #0]
 8001962:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001966:	2b00      	cmp	r3, #0
 8001968:	d109      	bne.n	800197e <HAL_RCC_ClockConfig+0xde>
 800196a:	2301      	movs	r3, #1
 800196c:	e073      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 800196e:	4b3d      	ldr	r3, [pc, #244]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	f003 0302 	and.w	r3, r3, #2
 8001976:	2b00      	cmp	r3, #0
 8001978:	d101      	bne.n	800197e <HAL_RCC_ClockConfig+0xde>
 800197a:	2301      	movs	r3, #1
 800197c:	e06b      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 800197e:	4b39      	ldr	r3, [pc, #228]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001980:	685b      	ldr	r3, [r3, #4]
 8001982:	f023 0203 	bic.w	r2, r3, #3
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	685b      	ldr	r3, [r3, #4]
 800198a:	4936      	ldr	r1, [pc, #216]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 800198c:	4313      	orrs	r3, r2
 800198e:	604b      	str	r3, [r1, #4]
 8001990:	f7ff fa66 	bl	8000e60 <HAL_GetTick>
 8001994:	60f8      	str	r0, [r7, #12]
 8001996:	e00a      	b.n	80019ae <HAL_RCC_ClockConfig+0x10e>
 8001998:	f7ff fa62 	bl	8000e60 <HAL_GetTick>
 800199c:	4602      	mov	r2, r0
 800199e:	68fb      	ldr	r3, [r7, #12]
 80019a0:	1ad3      	subs	r3, r2, r3
 80019a2:	f241 3288 	movw	r2, #5000	; 0x1388
 80019a6:	4293      	cmp	r3, r2
 80019a8:	d901      	bls.n	80019ae <HAL_RCC_ClockConfig+0x10e>
 80019aa:	2303      	movs	r3, #3
 80019ac:	e053      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 80019ae:	4b2d      	ldr	r3, [pc, #180]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 80019b0:	685b      	ldr	r3, [r3, #4]
 80019b2:	f003 020c 	and.w	r2, r3, #12
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	685b      	ldr	r3, [r3, #4]
 80019ba:	009b      	lsls	r3, r3, #2
 80019bc:	429a      	cmp	r2, r3
 80019be:	d1eb      	bne.n	8001998 <HAL_RCC_ClockConfig+0xf8>
 80019c0:	4b27      	ldr	r3, [pc, #156]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	f003 0307 	and.w	r3, r3, #7
 80019c8:	683a      	ldr	r2, [r7, #0]
 80019ca:	429a      	cmp	r2, r3
 80019cc:	d210      	bcs.n	80019f0 <HAL_RCC_ClockConfig+0x150>
 80019ce:	4b24      	ldr	r3, [pc, #144]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	f023 0207 	bic.w	r2, r3, #7
 80019d6:	4922      	ldr	r1, [pc, #136]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80019d8:	683b      	ldr	r3, [r7, #0]
 80019da:	4313      	orrs	r3, r2
 80019dc:	600b      	str	r3, [r1, #0]
 80019de:	4b20      	ldr	r3, [pc, #128]	; (8001a60 <HAL_RCC_ClockConfig+0x1c0>)
 80019e0:	681b      	ldr	r3, [r3, #0]
 80019e2:	f003 0307 	and.w	r3, r3, #7
 80019e6:	683a      	ldr	r2, [r7, #0]
 80019e8:	429a      	cmp	r2, r3
 80019ea:	d001      	beq.n	80019f0 <HAL_RCC_ClockConfig+0x150>
 80019ec:	2301      	movs	r3, #1
 80019ee:	e032      	b.n	8001a56 <HAL_RCC_ClockConfig+0x1b6>
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	681b      	ldr	r3, [r3, #0]
 80019f4:	f003 0304 	and.w	r3, r3, #4
 80019f8:	2b00      	cmp	r3, #0
 80019fa:	d008      	beq.n	8001a0e <HAL_RCC_ClockConfig+0x16e>
 80019fc:	4b19      	ldr	r3, [pc, #100]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 80019fe:	685b      	ldr	r3, [r3, #4]
 8001a00:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	68db      	ldr	r3, [r3, #12]
 8001a08:	4916      	ldr	r1, [pc, #88]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001a0a:	4313      	orrs	r3, r2
 8001a0c:	604b      	str	r3, [r1, #4]
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	681b      	ldr	r3, [r3, #0]
 8001a12:	f003 0308 	and.w	r3, r3, #8
 8001a16:	2b00      	cmp	r3, #0
 8001a18:	d009      	beq.n	8001a2e <HAL_RCC_ClockConfig+0x18e>
 8001a1a:	4b12      	ldr	r3, [pc, #72]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001a1c:	685b      	ldr	r3, [r3, #4]
 8001a1e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	691b      	ldr	r3, [r3, #16]
 8001a26:	00db      	lsls	r3, r3, #3
 8001a28:	490e      	ldr	r1, [pc, #56]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001a2a:	4313      	orrs	r3, r2
 8001a2c:	604b      	str	r3, [r1, #4]
 8001a2e:	f000 f821 	bl	8001a74 <HAL_RCC_GetSysClockFreq>
 8001a32:	4602      	mov	r2, r0
 8001a34:	4b0b      	ldr	r3, [pc, #44]	; (8001a64 <HAL_RCC_ClockConfig+0x1c4>)
 8001a36:	685b      	ldr	r3, [r3, #4]
 8001a38:	091b      	lsrs	r3, r3, #4
 8001a3a:	f003 030f 	and.w	r3, r3, #15
 8001a3e:	490a      	ldr	r1, [pc, #40]	; (8001a68 <HAL_RCC_ClockConfig+0x1c8>)
 8001a40:	5ccb      	ldrb	r3, [r1, r3]
 8001a42:	fa22 f303 	lsr.w	r3, r2, r3
 8001a46:	4a09      	ldr	r2, [pc, #36]	; (8001a6c <HAL_RCC_ClockConfig+0x1cc>)
 8001a48:	6013      	str	r3, [r2, #0]
 8001a4a:	4b09      	ldr	r3, [pc, #36]	; (8001a70 <HAL_RCC_ClockConfig+0x1d0>)
 8001a4c:	681b      	ldr	r3, [r3, #0]
 8001a4e:	4618      	mov	r0, r3
 8001a50:	f7ff f87c 	bl	8000b4c <HAL_InitTick>
 8001a54:	2300      	movs	r3, #0
 8001a56:	4618      	mov	r0, r3
 8001a58:	3710      	adds	r7, #16
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bd80      	pop	{r7, pc}
 8001a5e:	bf00      	nop
 8001a60:	40022000 	.word	0x40022000
 8001a64:	40021000 	.word	0x40021000
 8001a68:	08004ebc 	.word	0x08004ebc
 8001a6c:	2000008c 	.word	0x2000008c
 8001a70:	20000090 	.word	0x20000090

08001a74 <HAL_RCC_GetSysClockFreq>:
 8001a74:	b490      	push	{r4, r7}
 8001a76:	b08a      	sub	sp, #40	; 0x28
 8001a78:	af00      	add	r7, sp, #0
 8001a7a:	4b2a      	ldr	r3, [pc, #168]	; (8001b24 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001a7c:	1d3c      	adds	r4, r7, #4
 8001a7e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001a80:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001a84:	f240 2301 	movw	r3, #513	; 0x201
 8001a88:	803b      	strh	r3, [r7, #0]
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	61fb      	str	r3, [r7, #28]
 8001a8e:	2300      	movs	r3, #0
 8001a90:	61bb      	str	r3, [r7, #24]
 8001a92:	2300      	movs	r3, #0
 8001a94:	627b      	str	r3, [r7, #36]	; 0x24
 8001a96:	2300      	movs	r3, #0
 8001a98:	617b      	str	r3, [r7, #20]
 8001a9a:	2300      	movs	r3, #0
 8001a9c:	623b      	str	r3, [r7, #32]
 8001a9e:	4b22      	ldr	r3, [pc, #136]	; (8001b28 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001aa0:	685b      	ldr	r3, [r3, #4]
 8001aa2:	61fb      	str	r3, [r7, #28]
 8001aa4:	69fb      	ldr	r3, [r7, #28]
 8001aa6:	f003 030c 	and.w	r3, r3, #12
 8001aaa:	2b04      	cmp	r3, #4
 8001aac:	d002      	beq.n	8001ab4 <HAL_RCC_GetSysClockFreq+0x40>
 8001aae:	2b08      	cmp	r3, #8
 8001ab0:	d003      	beq.n	8001aba <HAL_RCC_GetSysClockFreq+0x46>
 8001ab2:	e02d      	b.n	8001b10 <HAL_RCC_GetSysClockFreq+0x9c>
 8001ab4:	4b1d      	ldr	r3, [pc, #116]	; (8001b2c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001ab6:	623b      	str	r3, [r7, #32]
 8001ab8:	e02d      	b.n	8001b16 <HAL_RCC_GetSysClockFreq+0xa2>
 8001aba:	69fb      	ldr	r3, [r7, #28]
 8001abc:	0c9b      	lsrs	r3, r3, #18
 8001abe:	f003 030f 	and.w	r3, r3, #15
 8001ac2:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001ac6:	4413      	add	r3, r2
 8001ac8:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001acc:	617b      	str	r3, [r7, #20]
 8001ace:	69fb      	ldr	r3, [r7, #28]
 8001ad0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001ad4:	2b00      	cmp	r3, #0
 8001ad6:	d013      	beq.n	8001b00 <HAL_RCC_GetSysClockFreq+0x8c>
 8001ad8:	4b13      	ldr	r3, [pc, #76]	; (8001b28 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001ada:	685b      	ldr	r3, [r3, #4]
 8001adc:	0c5b      	lsrs	r3, r3, #17
 8001ade:	f003 0301 	and.w	r3, r3, #1
 8001ae2:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001ae6:	4413      	add	r3, r2
 8001ae8:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001aec:	61bb      	str	r3, [r7, #24]
 8001aee:	697b      	ldr	r3, [r7, #20]
 8001af0:	4a0e      	ldr	r2, [pc, #56]	; (8001b2c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001af2:	fb02 f203 	mul.w	r2, r2, r3
 8001af6:	69bb      	ldr	r3, [r7, #24]
 8001af8:	fbb2 f3f3 	udiv	r3, r2, r3
 8001afc:	627b      	str	r3, [r7, #36]	; 0x24
 8001afe:	e004      	b.n	8001b0a <HAL_RCC_GetSysClockFreq+0x96>
 8001b00:	697b      	ldr	r3, [r7, #20]
 8001b02:	4a0b      	ldr	r2, [pc, #44]	; (8001b30 <HAL_RCC_GetSysClockFreq+0xbc>)
 8001b04:	fb02 f303 	mul.w	r3, r2, r3
 8001b08:	627b      	str	r3, [r7, #36]	; 0x24
 8001b0a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b0c:	623b      	str	r3, [r7, #32]
 8001b0e:	e002      	b.n	8001b16 <HAL_RCC_GetSysClockFreq+0xa2>
 8001b10:	4b06      	ldr	r3, [pc, #24]	; (8001b2c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001b12:	623b      	str	r3, [r7, #32]
 8001b14:	bf00      	nop
 8001b16:	6a3b      	ldr	r3, [r7, #32]
 8001b18:	4618      	mov	r0, r3
 8001b1a:	3728      	adds	r7, #40	; 0x28
 8001b1c:	46bd      	mov	sp, r7
 8001b1e:	bc90      	pop	{r4, r7}
 8001b20:	4770      	bx	lr
 8001b22:	bf00      	nop
 8001b24:	08004ea4 	.word	0x08004ea4
 8001b28:	40021000 	.word	0x40021000
 8001b2c:	007a1200 	.word	0x007a1200
 8001b30:	003d0900 	.word	0x003d0900

08001b34 <HAL_RCC_GetHCLKFreq>:
 8001b34:	b480      	push	{r7}
 8001b36:	af00      	add	r7, sp, #0
 8001b38:	4b02      	ldr	r3, [pc, #8]	; (8001b44 <HAL_RCC_GetHCLKFreq+0x10>)
 8001b3a:	681b      	ldr	r3, [r3, #0]
 8001b3c:	4618      	mov	r0, r3
 8001b3e:	46bd      	mov	sp, r7
 8001b40:	bc80      	pop	{r7}
 8001b42:	4770      	bx	lr
 8001b44:	2000008c 	.word	0x2000008c

08001b48 <HAL_RCC_GetPCLK1Freq>:
 8001b48:	b580      	push	{r7, lr}
 8001b4a:	af00      	add	r7, sp, #0
 8001b4c:	f7ff fff2 	bl	8001b34 <HAL_RCC_GetHCLKFreq>
 8001b50:	4602      	mov	r2, r0
 8001b52:	4b05      	ldr	r3, [pc, #20]	; (8001b68 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001b54:	685b      	ldr	r3, [r3, #4]
 8001b56:	0a1b      	lsrs	r3, r3, #8
 8001b58:	f003 0307 	and.w	r3, r3, #7
 8001b5c:	4903      	ldr	r1, [pc, #12]	; (8001b6c <HAL_RCC_GetPCLK1Freq+0x24>)
 8001b5e:	5ccb      	ldrb	r3, [r1, r3]
 8001b60:	fa22 f303 	lsr.w	r3, r2, r3
 8001b64:	4618      	mov	r0, r3
 8001b66:	bd80      	pop	{r7, pc}
 8001b68:	40021000 	.word	0x40021000
 8001b6c:	08004ecc 	.word	0x08004ecc

08001b70 <HAL_RCC_GetPCLK2Freq>:
 8001b70:	b580      	push	{r7, lr}
 8001b72:	af00      	add	r7, sp, #0
 8001b74:	f7ff ffde 	bl	8001b34 <HAL_RCC_GetHCLKFreq>
 8001b78:	4602      	mov	r2, r0
 8001b7a:	4b05      	ldr	r3, [pc, #20]	; (8001b90 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001b7c:	685b      	ldr	r3, [r3, #4]
 8001b7e:	0adb      	lsrs	r3, r3, #11
 8001b80:	f003 0307 	and.w	r3, r3, #7
 8001b84:	4903      	ldr	r1, [pc, #12]	; (8001b94 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001b86:	5ccb      	ldrb	r3, [r1, r3]
 8001b88:	fa22 f303 	lsr.w	r3, r2, r3
 8001b8c:	4618      	mov	r0, r3
 8001b8e:	bd80      	pop	{r7, pc}
 8001b90:	40021000 	.word	0x40021000
 8001b94:	08004ecc 	.word	0x08004ecc

08001b98 <HAL_RCC_GetClockConfig>:
 8001b98:	b480      	push	{r7}
 8001b9a:	b083      	sub	sp, #12
 8001b9c:	af00      	add	r7, sp, #0
 8001b9e:	6078      	str	r0, [r7, #4]
 8001ba0:	6039      	str	r1, [r7, #0]
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	220f      	movs	r2, #15
 8001ba6:	601a      	str	r2, [r3, #0]
 8001ba8:	4b11      	ldr	r3, [pc, #68]	; (8001bf0 <HAL_RCC_GetClockConfig+0x58>)
 8001baa:	685b      	ldr	r3, [r3, #4]
 8001bac:	f003 0203 	and.w	r2, r3, #3
 8001bb0:	687b      	ldr	r3, [r7, #4]
 8001bb2:	605a      	str	r2, [r3, #4]
 8001bb4:	4b0e      	ldr	r3, [pc, #56]	; (8001bf0 <HAL_RCC_GetClockConfig+0x58>)
 8001bb6:	685b      	ldr	r3, [r3, #4]
 8001bb8:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	609a      	str	r2, [r3, #8]
 8001bc0:	4b0b      	ldr	r3, [pc, #44]	; (8001bf0 <HAL_RCC_GetClockConfig+0x58>)
 8001bc2:	685b      	ldr	r3, [r3, #4]
 8001bc4:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	60da      	str	r2, [r3, #12]
 8001bcc:	4b08      	ldr	r3, [pc, #32]	; (8001bf0 <HAL_RCC_GetClockConfig+0x58>)
 8001bce:	685b      	ldr	r3, [r3, #4]
 8001bd0:	08db      	lsrs	r3, r3, #3
 8001bd2:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	611a      	str	r2, [r3, #16]
 8001bda:	4b06      	ldr	r3, [pc, #24]	; (8001bf4 <HAL_RCC_GetClockConfig+0x5c>)
 8001bdc:	681b      	ldr	r3, [r3, #0]
 8001bde:	f003 0207 	and.w	r2, r3, #7
 8001be2:	683b      	ldr	r3, [r7, #0]
 8001be4:	601a      	str	r2, [r3, #0]
 8001be6:	bf00      	nop
 8001be8:	370c      	adds	r7, #12
 8001bea:	46bd      	mov	sp, r7
 8001bec:	bc80      	pop	{r7}
 8001bee:	4770      	bx	lr
 8001bf0:	40021000 	.word	0x40021000
 8001bf4:	40022000 	.word	0x40022000

08001bf8 <RCC_Delay>:
 8001bf8:	b480      	push	{r7}
 8001bfa:	b085      	sub	sp, #20
 8001bfc:	af00      	add	r7, sp, #0
 8001bfe:	6078      	str	r0, [r7, #4]
 8001c00:	4b0a      	ldr	r3, [pc, #40]	; (8001c2c <RCC_Delay+0x34>)
 8001c02:	681b      	ldr	r3, [r3, #0]
 8001c04:	4a0a      	ldr	r2, [pc, #40]	; (8001c30 <RCC_Delay+0x38>)
 8001c06:	fba2 2303 	umull	r2, r3, r2, r3
 8001c0a:	0a5b      	lsrs	r3, r3, #9
 8001c0c:	687a      	ldr	r2, [r7, #4]
 8001c0e:	fb02 f303 	mul.w	r3, r2, r3
 8001c12:	60fb      	str	r3, [r7, #12]
 8001c14:	bf00      	nop
 8001c16:	68fb      	ldr	r3, [r7, #12]
 8001c18:	1e5a      	subs	r2, r3, #1
 8001c1a:	60fa      	str	r2, [r7, #12]
 8001c1c:	2b00      	cmp	r3, #0
 8001c1e:	d1f9      	bne.n	8001c14 <RCC_Delay+0x1c>
 8001c20:	bf00      	nop
 8001c22:	bf00      	nop
 8001c24:	3714      	adds	r7, #20
 8001c26:	46bd      	mov	sp, r7
 8001c28:	bc80      	pop	{r7}
 8001c2a:	4770      	bx	lr
 8001c2c:	2000008c 	.word	0x2000008c
 8001c30:	10624dd3 	.word	0x10624dd3

08001c34 <HAL_TIM_Base_Init>:
 8001c34:	b580      	push	{r7, lr}
 8001c36:	b082      	sub	sp, #8
 8001c38:	af00      	add	r7, sp, #0
 8001c3a:	6078      	str	r0, [r7, #4]
 8001c3c:	687b      	ldr	r3, [r7, #4]
 8001c3e:	2b00      	cmp	r3, #0
 8001c40:	d101      	bne.n	8001c46 <HAL_TIM_Base_Init+0x12>
 8001c42:	2301      	movs	r3, #1
 8001c44:	e041      	b.n	8001cca <HAL_TIM_Base_Init+0x96>
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001c4c:	b2db      	uxtb	r3, r3
 8001c4e:	2b00      	cmp	r3, #0
 8001c50:	d106      	bne.n	8001c60 <HAL_TIM_Base_Init+0x2c>
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	2200      	movs	r2, #0
 8001c56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001c5a:	6878      	ldr	r0, [r7, #4]
 8001c5c:	f000 f839 	bl	8001cd2 <HAL_TIM_Base_MspInit>
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	2202      	movs	r2, #2
 8001c64:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001c68:	687b      	ldr	r3, [r7, #4]
 8001c6a:	681a      	ldr	r2, [r3, #0]
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	3304      	adds	r3, #4
 8001c70:	4619      	mov	r1, r3
 8001c72:	4610      	mov	r0, r2
 8001c74:	f000 f9b4 	bl	8001fe0 <TIM_Base_SetConfig>
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	2201      	movs	r2, #1
 8001c7c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	2201      	movs	r2, #1
 8001c84:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	2201      	movs	r2, #1
 8001c8c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8001c90:	687b      	ldr	r3, [r7, #4]
 8001c92:	2201      	movs	r2, #1
 8001c94:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001c98:	687b      	ldr	r3, [r7, #4]
 8001c9a:	2201      	movs	r2, #1
 8001c9c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	2201      	movs	r2, #1
 8001ca4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001ca8:	687b      	ldr	r3, [r7, #4]
 8001caa:	2201      	movs	r2, #1
 8001cac:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8001cb0:	687b      	ldr	r3, [r7, #4]
 8001cb2:	2201      	movs	r2, #1
 8001cb4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	2201      	movs	r2, #1
 8001cbc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	2201      	movs	r2, #1
 8001cc4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001cc8:	2300      	movs	r3, #0
 8001cca:	4618      	mov	r0, r3
 8001ccc:	3708      	adds	r7, #8
 8001cce:	46bd      	mov	sp, r7
 8001cd0:	bd80      	pop	{r7, pc}

08001cd2 <HAL_TIM_Base_MspInit>:
 8001cd2:	b480      	push	{r7}
 8001cd4:	b083      	sub	sp, #12
 8001cd6:	af00      	add	r7, sp, #0
 8001cd8:	6078      	str	r0, [r7, #4]
 8001cda:	bf00      	nop
 8001cdc:	370c      	adds	r7, #12
 8001cde:	46bd      	mov	sp, r7
 8001ce0:	bc80      	pop	{r7}
 8001ce2:	4770      	bx	lr

08001ce4 <HAL_TIM_Base_Start_IT>:
 8001ce4:	b480      	push	{r7}
 8001ce6:	b085      	sub	sp, #20
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	6078      	str	r0, [r7, #4]
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001cf2:	b2db      	uxtb	r3, r3
 8001cf4:	2b01      	cmp	r3, #1
 8001cf6:	d001      	beq.n	8001cfc <HAL_TIM_Base_Start_IT+0x18>
 8001cf8:	2301      	movs	r3, #1
 8001cfa:	e03a      	b.n	8001d72 <HAL_TIM_Base_Start_IT+0x8e>
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	2202      	movs	r2, #2
 8001d00:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	68da      	ldr	r2, [r3, #12]
 8001d0a:	687b      	ldr	r3, [r7, #4]
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	f042 0201 	orr.w	r2, r2, #1
 8001d12:	60da      	str	r2, [r3, #12]
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	681b      	ldr	r3, [r3, #0]
 8001d18:	4a18      	ldr	r2, [pc, #96]	; (8001d7c <HAL_TIM_Base_Start_IT+0x98>)
 8001d1a:	4293      	cmp	r3, r2
 8001d1c:	d00e      	beq.n	8001d3c <HAL_TIM_Base_Start_IT+0x58>
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	681b      	ldr	r3, [r3, #0]
 8001d22:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001d26:	d009      	beq.n	8001d3c <HAL_TIM_Base_Start_IT+0x58>
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	4a14      	ldr	r2, [pc, #80]	; (8001d80 <HAL_TIM_Base_Start_IT+0x9c>)
 8001d2e:	4293      	cmp	r3, r2
 8001d30:	d004      	beq.n	8001d3c <HAL_TIM_Base_Start_IT+0x58>
 8001d32:	687b      	ldr	r3, [r7, #4]
 8001d34:	681b      	ldr	r3, [r3, #0]
 8001d36:	4a13      	ldr	r2, [pc, #76]	; (8001d84 <HAL_TIM_Base_Start_IT+0xa0>)
 8001d38:	4293      	cmp	r3, r2
 8001d3a:	d111      	bne.n	8001d60 <HAL_TIM_Base_Start_IT+0x7c>
 8001d3c:	687b      	ldr	r3, [r7, #4]
 8001d3e:	681b      	ldr	r3, [r3, #0]
 8001d40:	689b      	ldr	r3, [r3, #8]
 8001d42:	f003 0307 	and.w	r3, r3, #7
 8001d46:	60fb      	str	r3, [r7, #12]
 8001d48:	68fb      	ldr	r3, [r7, #12]
 8001d4a:	2b06      	cmp	r3, #6
 8001d4c:	d010      	beq.n	8001d70 <HAL_TIM_Base_Start_IT+0x8c>
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	681a      	ldr	r2, [r3, #0]
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	681b      	ldr	r3, [r3, #0]
 8001d58:	f042 0201 	orr.w	r2, r2, #1
 8001d5c:	601a      	str	r2, [r3, #0]
 8001d5e:	e007      	b.n	8001d70 <HAL_TIM_Base_Start_IT+0x8c>
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	681b      	ldr	r3, [r3, #0]
 8001d64:	681a      	ldr	r2, [r3, #0]
 8001d66:	687b      	ldr	r3, [r7, #4]
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	f042 0201 	orr.w	r2, r2, #1
 8001d6e:	601a      	str	r2, [r3, #0]
 8001d70:	2300      	movs	r3, #0
 8001d72:	4618      	mov	r0, r3
 8001d74:	3714      	adds	r7, #20
 8001d76:	46bd      	mov	sp, r7
 8001d78:	bc80      	pop	{r7}
 8001d7a:	4770      	bx	lr
 8001d7c:	40012c00 	.word	0x40012c00
 8001d80:	40000400 	.word	0x40000400
 8001d84:	40000800 	.word	0x40000800

08001d88 <HAL_TIM_IRQHandler>:
 8001d88:	b580      	push	{r7, lr}
 8001d8a:	b082      	sub	sp, #8
 8001d8c:	af00      	add	r7, sp, #0
 8001d8e:	6078      	str	r0, [r7, #4]
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	681b      	ldr	r3, [r3, #0]
 8001d94:	691b      	ldr	r3, [r3, #16]
 8001d96:	f003 0302 	and.w	r3, r3, #2
 8001d9a:	2b02      	cmp	r3, #2
 8001d9c:	d122      	bne.n	8001de4 <HAL_TIM_IRQHandler+0x5c>
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	68db      	ldr	r3, [r3, #12]
 8001da4:	f003 0302 	and.w	r3, r3, #2
 8001da8:	2b02      	cmp	r3, #2
 8001daa:	d11b      	bne.n	8001de4 <HAL_TIM_IRQHandler+0x5c>
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	f06f 0202 	mvn.w	r2, #2
 8001db4:	611a      	str	r2, [r3, #16]
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	2201      	movs	r2, #1
 8001dba:	771a      	strb	r2, [r3, #28]
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	681b      	ldr	r3, [r3, #0]
 8001dc0:	699b      	ldr	r3, [r3, #24]
 8001dc2:	f003 0303 	and.w	r3, r3, #3
 8001dc6:	2b00      	cmp	r3, #0
 8001dc8:	d003      	beq.n	8001dd2 <HAL_TIM_IRQHandler+0x4a>
 8001dca:	6878      	ldr	r0, [r7, #4]
 8001dcc:	f000 f8ed 	bl	8001faa <HAL_TIM_IC_CaptureCallback>
 8001dd0:	e005      	b.n	8001dde <HAL_TIM_IRQHandler+0x56>
 8001dd2:	6878      	ldr	r0, [r7, #4]
 8001dd4:	f000 f8e0 	bl	8001f98 <HAL_TIM_OC_DelayElapsedCallback>
 8001dd8:	6878      	ldr	r0, [r7, #4]
 8001dda:	f000 f8ef 	bl	8001fbc <HAL_TIM_PWM_PulseFinishedCallback>
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	2200      	movs	r2, #0
 8001de2:	771a      	strb	r2, [r3, #28]
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	681b      	ldr	r3, [r3, #0]
 8001de8:	691b      	ldr	r3, [r3, #16]
 8001dea:	f003 0304 	and.w	r3, r3, #4
 8001dee:	2b04      	cmp	r3, #4
 8001df0:	d122      	bne.n	8001e38 <HAL_TIM_IRQHandler+0xb0>
 8001df2:	687b      	ldr	r3, [r7, #4]
 8001df4:	681b      	ldr	r3, [r3, #0]
 8001df6:	68db      	ldr	r3, [r3, #12]
 8001df8:	f003 0304 	and.w	r3, r3, #4
 8001dfc:	2b04      	cmp	r3, #4
 8001dfe:	d11b      	bne.n	8001e38 <HAL_TIM_IRQHandler+0xb0>
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	f06f 0204 	mvn.w	r2, #4
 8001e08:	611a      	str	r2, [r3, #16]
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	2202      	movs	r2, #2
 8001e0e:	771a      	strb	r2, [r3, #28]
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	699b      	ldr	r3, [r3, #24]
 8001e16:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001e1a:	2b00      	cmp	r3, #0
 8001e1c:	d003      	beq.n	8001e26 <HAL_TIM_IRQHandler+0x9e>
 8001e1e:	6878      	ldr	r0, [r7, #4]
 8001e20:	f000 f8c3 	bl	8001faa <HAL_TIM_IC_CaptureCallback>
 8001e24:	e005      	b.n	8001e32 <HAL_TIM_IRQHandler+0xaa>
 8001e26:	6878      	ldr	r0, [r7, #4]
 8001e28:	f000 f8b6 	bl	8001f98 <HAL_TIM_OC_DelayElapsedCallback>
 8001e2c:	6878      	ldr	r0, [r7, #4]
 8001e2e:	f000 f8c5 	bl	8001fbc <HAL_TIM_PWM_PulseFinishedCallback>
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	2200      	movs	r2, #0
 8001e36:	771a      	strb	r2, [r3, #28]
 8001e38:	687b      	ldr	r3, [r7, #4]
 8001e3a:	681b      	ldr	r3, [r3, #0]
 8001e3c:	691b      	ldr	r3, [r3, #16]
 8001e3e:	f003 0308 	and.w	r3, r3, #8
 8001e42:	2b08      	cmp	r3, #8
 8001e44:	d122      	bne.n	8001e8c <HAL_TIM_IRQHandler+0x104>
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	68db      	ldr	r3, [r3, #12]
 8001e4c:	f003 0308 	and.w	r3, r3, #8
 8001e50:	2b08      	cmp	r3, #8
 8001e52:	d11b      	bne.n	8001e8c <HAL_TIM_IRQHandler+0x104>
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	f06f 0208 	mvn.w	r2, #8
 8001e5c:	611a      	str	r2, [r3, #16]
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	2204      	movs	r2, #4
 8001e62:	771a      	strb	r2, [r3, #28]
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	69db      	ldr	r3, [r3, #28]
 8001e6a:	f003 0303 	and.w	r3, r3, #3
 8001e6e:	2b00      	cmp	r3, #0
 8001e70:	d003      	beq.n	8001e7a <HAL_TIM_IRQHandler+0xf2>
 8001e72:	6878      	ldr	r0, [r7, #4]
 8001e74:	f000 f899 	bl	8001faa <HAL_TIM_IC_CaptureCallback>
 8001e78:	e005      	b.n	8001e86 <HAL_TIM_IRQHandler+0xfe>
 8001e7a:	6878      	ldr	r0, [r7, #4]
 8001e7c:	f000 f88c 	bl	8001f98 <HAL_TIM_OC_DelayElapsedCallback>
 8001e80:	6878      	ldr	r0, [r7, #4]
 8001e82:	f000 f89b 	bl	8001fbc <HAL_TIM_PWM_PulseFinishedCallback>
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	2200      	movs	r2, #0
 8001e8a:	771a      	strb	r2, [r3, #28]
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	691b      	ldr	r3, [r3, #16]
 8001e92:	f003 0310 	and.w	r3, r3, #16
 8001e96:	2b10      	cmp	r3, #16
 8001e98:	d122      	bne.n	8001ee0 <HAL_TIM_IRQHandler+0x158>
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	68db      	ldr	r3, [r3, #12]
 8001ea0:	f003 0310 	and.w	r3, r3, #16
 8001ea4:	2b10      	cmp	r3, #16
 8001ea6:	d11b      	bne.n	8001ee0 <HAL_TIM_IRQHandler+0x158>
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	f06f 0210 	mvn.w	r2, #16
 8001eb0:	611a      	str	r2, [r3, #16]
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	2208      	movs	r2, #8
 8001eb6:	771a      	strb	r2, [r3, #28]
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	681b      	ldr	r3, [r3, #0]
 8001ebc:	69db      	ldr	r3, [r3, #28]
 8001ebe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001ec2:	2b00      	cmp	r3, #0
 8001ec4:	d003      	beq.n	8001ece <HAL_TIM_IRQHandler+0x146>
 8001ec6:	6878      	ldr	r0, [r7, #4]
 8001ec8:	f000 f86f 	bl	8001faa <HAL_TIM_IC_CaptureCallback>
 8001ecc:	e005      	b.n	8001eda <HAL_TIM_IRQHandler+0x152>
 8001ece:	6878      	ldr	r0, [r7, #4]
 8001ed0:	f000 f862 	bl	8001f98 <HAL_TIM_OC_DelayElapsedCallback>
 8001ed4:	6878      	ldr	r0, [r7, #4]
 8001ed6:	f000 f871 	bl	8001fbc <HAL_TIM_PWM_PulseFinishedCallback>
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	2200      	movs	r2, #0
 8001ede:	771a      	strb	r2, [r3, #28]
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	691b      	ldr	r3, [r3, #16]
 8001ee6:	f003 0301 	and.w	r3, r3, #1
 8001eea:	2b01      	cmp	r3, #1
 8001eec:	d10e      	bne.n	8001f0c <HAL_TIM_IRQHandler+0x184>
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	68db      	ldr	r3, [r3, #12]
 8001ef4:	f003 0301 	and.w	r3, r3, #1
 8001ef8:	2b01      	cmp	r3, #1
 8001efa:	d107      	bne.n	8001f0c <HAL_TIM_IRQHandler+0x184>
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	681b      	ldr	r3, [r3, #0]
 8001f00:	f06f 0201 	mvn.w	r2, #1
 8001f04:	611a      	str	r2, [r3, #16]
 8001f06:	6878      	ldr	r0, [r7, #4]
 8001f08:	f7fe fd10 	bl	800092c <HAL_TIM_PeriodElapsedCallback>
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	681b      	ldr	r3, [r3, #0]
 8001f10:	691b      	ldr	r3, [r3, #16]
 8001f12:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001f16:	2b80      	cmp	r3, #128	; 0x80
 8001f18:	d10e      	bne.n	8001f38 <HAL_TIM_IRQHandler+0x1b0>
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	68db      	ldr	r3, [r3, #12]
 8001f20:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001f24:	2b80      	cmp	r3, #128	; 0x80
 8001f26:	d107      	bne.n	8001f38 <HAL_TIM_IRQHandler+0x1b0>
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8001f30:	611a      	str	r2, [r3, #16]
 8001f32:	6878      	ldr	r0, [r7, #4]
 8001f34:	f000 f8bf 	bl	80020b6 <HAL_TIMEx_BreakCallback>
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	691b      	ldr	r3, [r3, #16]
 8001f3e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001f42:	2b40      	cmp	r3, #64	; 0x40
 8001f44:	d10e      	bne.n	8001f64 <HAL_TIM_IRQHandler+0x1dc>
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	681b      	ldr	r3, [r3, #0]
 8001f4a:	68db      	ldr	r3, [r3, #12]
 8001f4c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001f50:	2b40      	cmp	r3, #64	; 0x40
 8001f52:	d107      	bne.n	8001f64 <HAL_TIM_IRQHandler+0x1dc>
 8001f54:	687b      	ldr	r3, [r7, #4]
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8001f5c:	611a      	str	r2, [r3, #16]
 8001f5e:	6878      	ldr	r0, [r7, #4]
 8001f60:	f000 f835 	bl	8001fce <HAL_TIM_TriggerCallback>
 8001f64:	687b      	ldr	r3, [r7, #4]
 8001f66:	681b      	ldr	r3, [r3, #0]
 8001f68:	691b      	ldr	r3, [r3, #16]
 8001f6a:	f003 0320 	and.w	r3, r3, #32
 8001f6e:	2b20      	cmp	r3, #32
 8001f70:	d10e      	bne.n	8001f90 <HAL_TIM_IRQHandler+0x208>
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	68db      	ldr	r3, [r3, #12]
 8001f78:	f003 0320 	and.w	r3, r3, #32
 8001f7c:	2b20      	cmp	r3, #32
 8001f7e:	d107      	bne.n	8001f90 <HAL_TIM_IRQHandler+0x208>
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	f06f 0220 	mvn.w	r2, #32
 8001f88:	611a      	str	r2, [r3, #16]
 8001f8a:	6878      	ldr	r0, [r7, #4]
 8001f8c:	f000 f88a 	bl	80020a4 <HAL_TIMEx_CommutCallback>
 8001f90:	bf00      	nop
 8001f92:	3708      	adds	r7, #8
 8001f94:	46bd      	mov	sp, r7
 8001f96:	bd80      	pop	{r7, pc}

08001f98 <HAL_TIM_OC_DelayElapsedCallback>:
 8001f98:	b480      	push	{r7}
 8001f9a:	b083      	sub	sp, #12
 8001f9c:	af00      	add	r7, sp, #0
 8001f9e:	6078      	str	r0, [r7, #4]
 8001fa0:	bf00      	nop
 8001fa2:	370c      	adds	r7, #12
 8001fa4:	46bd      	mov	sp, r7
 8001fa6:	bc80      	pop	{r7}
 8001fa8:	4770      	bx	lr

08001faa <HAL_TIM_IC_CaptureCallback>:
 8001faa:	b480      	push	{r7}
 8001fac:	b083      	sub	sp, #12
 8001fae:	af00      	add	r7, sp, #0
 8001fb0:	6078      	str	r0, [r7, #4]
 8001fb2:	bf00      	nop
 8001fb4:	370c      	adds	r7, #12
 8001fb6:	46bd      	mov	sp, r7
 8001fb8:	bc80      	pop	{r7}
 8001fba:	4770      	bx	lr

08001fbc <HAL_TIM_PWM_PulseFinishedCallback>:
 8001fbc:	b480      	push	{r7}
 8001fbe:	b083      	sub	sp, #12
 8001fc0:	af00      	add	r7, sp, #0
 8001fc2:	6078      	str	r0, [r7, #4]
 8001fc4:	bf00      	nop
 8001fc6:	370c      	adds	r7, #12
 8001fc8:	46bd      	mov	sp, r7
 8001fca:	bc80      	pop	{r7}
 8001fcc:	4770      	bx	lr

08001fce <HAL_TIM_TriggerCallback>:
 8001fce:	b480      	push	{r7}
 8001fd0:	b083      	sub	sp, #12
 8001fd2:	af00      	add	r7, sp, #0
 8001fd4:	6078      	str	r0, [r7, #4]
 8001fd6:	bf00      	nop
 8001fd8:	370c      	adds	r7, #12
 8001fda:	46bd      	mov	sp, r7
 8001fdc:	bc80      	pop	{r7}
 8001fde:	4770      	bx	lr

08001fe0 <TIM_Base_SetConfig>:
 8001fe0:	b480      	push	{r7}
 8001fe2:	b085      	sub	sp, #20
 8001fe4:	af00      	add	r7, sp, #0
 8001fe6:	6078      	str	r0, [r7, #4]
 8001fe8:	6039      	str	r1, [r7, #0]
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	681b      	ldr	r3, [r3, #0]
 8001fee:	60fb      	str	r3, [r7, #12]
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	4a29      	ldr	r2, [pc, #164]	; (8002098 <TIM_Base_SetConfig+0xb8>)
 8001ff4:	4293      	cmp	r3, r2
 8001ff6:	d00b      	beq.n	8002010 <TIM_Base_SetConfig+0x30>
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001ffe:	d007      	beq.n	8002010 <TIM_Base_SetConfig+0x30>
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	4a26      	ldr	r2, [pc, #152]	; (800209c <TIM_Base_SetConfig+0xbc>)
 8002004:	4293      	cmp	r3, r2
 8002006:	d003      	beq.n	8002010 <TIM_Base_SetConfig+0x30>
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	4a25      	ldr	r2, [pc, #148]	; (80020a0 <TIM_Base_SetConfig+0xc0>)
 800200c:	4293      	cmp	r3, r2
 800200e:	d108      	bne.n	8002022 <TIM_Base_SetConfig+0x42>
 8002010:	68fb      	ldr	r3, [r7, #12]
 8002012:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002016:	60fb      	str	r3, [r7, #12]
 8002018:	683b      	ldr	r3, [r7, #0]
 800201a:	685b      	ldr	r3, [r3, #4]
 800201c:	68fa      	ldr	r2, [r7, #12]
 800201e:	4313      	orrs	r3, r2
 8002020:	60fb      	str	r3, [r7, #12]
 8002022:	687b      	ldr	r3, [r7, #4]
 8002024:	4a1c      	ldr	r2, [pc, #112]	; (8002098 <TIM_Base_SetConfig+0xb8>)
 8002026:	4293      	cmp	r3, r2
 8002028:	d00b      	beq.n	8002042 <TIM_Base_SetConfig+0x62>
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002030:	d007      	beq.n	8002042 <TIM_Base_SetConfig+0x62>
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	4a19      	ldr	r2, [pc, #100]	; (800209c <TIM_Base_SetConfig+0xbc>)
 8002036:	4293      	cmp	r3, r2
 8002038:	d003      	beq.n	8002042 <TIM_Base_SetConfig+0x62>
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	4a18      	ldr	r2, [pc, #96]	; (80020a0 <TIM_Base_SetConfig+0xc0>)
 800203e:	4293      	cmp	r3, r2
 8002040:	d108      	bne.n	8002054 <TIM_Base_SetConfig+0x74>
 8002042:	68fb      	ldr	r3, [r7, #12]
 8002044:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002048:	60fb      	str	r3, [r7, #12]
 800204a:	683b      	ldr	r3, [r7, #0]
 800204c:	68db      	ldr	r3, [r3, #12]
 800204e:	68fa      	ldr	r2, [r7, #12]
 8002050:	4313      	orrs	r3, r2
 8002052:	60fb      	str	r3, [r7, #12]
 8002054:	68fb      	ldr	r3, [r7, #12]
 8002056:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800205a:	683b      	ldr	r3, [r7, #0]
 800205c:	695b      	ldr	r3, [r3, #20]
 800205e:	4313      	orrs	r3, r2
 8002060:	60fb      	str	r3, [r7, #12]
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	68fa      	ldr	r2, [r7, #12]
 8002066:	601a      	str	r2, [r3, #0]
 8002068:	683b      	ldr	r3, [r7, #0]
 800206a:	689a      	ldr	r2, [r3, #8]
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	62da      	str	r2, [r3, #44]	; 0x2c
 8002070:	683b      	ldr	r3, [r7, #0]
 8002072:	681a      	ldr	r2, [r3, #0]
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	629a      	str	r2, [r3, #40]	; 0x28
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	4a07      	ldr	r2, [pc, #28]	; (8002098 <TIM_Base_SetConfig+0xb8>)
 800207c:	4293      	cmp	r3, r2
 800207e:	d103      	bne.n	8002088 <TIM_Base_SetConfig+0xa8>
 8002080:	683b      	ldr	r3, [r7, #0]
 8002082:	691a      	ldr	r2, [r3, #16]
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	631a      	str	r2, [r3, #48]	; 0x30
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	2201      	movs	r2, #1
 800208c:	615a      	str	r2, [r3, #20]
 800208e:	bf00      	nop
 8002090:	3714      	adds	r7, #20
 8002092:	46bd      	mov	sp, r7
 8002094:	bc80      	pop	{r7}
 8002096:	4770      	bx	lr
 8002098:	40012c00 	.word	0x40012c00
 800209c:	40000400 	.word	0x40000400
 80020a0:	40000800 	.word	0x40000800

080020a4 <HAL_TIMEx_CommutCallback>:
 80020a4:	b480      	push	{r7}
 80020a6:	b083      	sub	sp, #12
 80020a8:	af00      	add	r7, sp, #0
 80020aa:	6078      	str	r0, [r7, #4]
 80020ac:	bf00      	nop
 80020ae:	370c      	adds	r7, #12
 80020b0:	46bd      	mov	sp, r7
 80020b2:	bc80      	pop	{r7}
 80020b4:	4770      	bx	lr

080020b6 <HAL_TIMEx_BreakCallback>:
 80020b6:	b480      	push	{r7}
 80020b8:	b083      	sub	sp, #12
 80020ba:	af00      	add	r7, sp, #0
 80020bc:	6078      	str	r0, [r7, #4]
 80020be:	bf00      	nop
 80020c0:	370c      	adds	r7, #12
 80020c2:	46bd      	mov	sp, r7
 80020c4:	bc80      	pop	{r7}
 80020c6:	4770      	bx	lr

080020c8 <HAL_UART_Init>:
 80020c8:	b580      	push	{r7, lr}
 80020ca:	b082      	sub	sp, #8
 80020cc:	af00      	add	r7, sp, #0
 80020ce:	6078      	str	r0, [r7, #4]
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	d101      	bne.n	80020da <HAL_UART_Init+0x12>
 80020d6:	2301      	movs	r3, #1
 80020d8:	e03f      	b.n	800215a <HAL_UART_Init+0x92>
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80020e0:	b2db      	uxtb	r3, r3
 80020e2:	2b00      	cmp	r3, #0
 80020e4:	d106      	bne.n	80020f4 <HAL_UART_Init+0x2c>
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	2200      	movs	r2, #0
 80020ea:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80020ee:	6878      	ldr	r0, [r7, #4]
 80020f0:	f7fe fc6c 	bl	80009cc <HAL_UART_MspInit>
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	2224      	movs	r2, #36	; 0x24
 80020f8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	681b      	ldr	r3, [r3, #0]
 8002100:	68da      	ldr	r2, [r3, #12]
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800210a:	60da      	str	r2, [r3, #12]
 800210c:	6878      	ldr	r0, [r7, #4]
 800210e:	f000 f9a3 	bl	8002458 <UART_SetConfig>
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	681b      	ldr	r3, [r3, #0]
 8002116:	691a      	ldr	r2, [r3, #16]
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002120:	611a      	str	r2, [r3, #16]
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	695a      	ldr	r2, [r3, #20]
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002130:	615a      	str	r2, [r3, #20]
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	68da      	ldr	r2, [r3, #12]
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	681b      	ldr	r3, [r3, #0]
 800213c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002140:	60da      	str	r2, [r3, #12]
 8002142:	687b      	ldr	r3, [r7, #4]
 8002144:	2200      	movs	r2, #0
 8002146:	63da      	str	r2, [r3, #60]	; 0x3c
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	2220      	movs	r2, #32
 800214c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	2220      	movs	r2, #32
 8002154:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002158:	2300      	movs	r3, #0
 800215a:	4618      	mov	r0, r3
 800215c:	3708      	adds	r7, #8
 800215e:	46bd      	mov	sp, r7
 8002160:	bd80      	pop	{r7, pc}

08002162 <HAL_UART_Transmit>:
 8002162:	b580      	push	{r7, lr}
 8002164:	b08a      	sub	sp, #40	; 0x28
 8002166:	af02      	add	r7, sp, #8
 8002168:	60f8      	str	r0, [r7, #12]
 800216a:	60b9      	str	r1, [r7, #8]
 800216c:	603b      	str	r3, [r7, #0]
 800216e:	4613      	mov	r3, r2
 8002170:	80fb      	strh	r3, [r7, #6]
 8002172:	2300      	movs	r3, #0
 8002174:	617b      	str	r3, [r7, #20]
 8002176:	68fb      	ldr	r3, [r7, #12]
 8002178:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800217c:	b2db      	uxtb	r3, r3
 800217e:	2b20      	cmp	r3, #32
 8002180:	d17c      	bne.n	800227c <HAL_UART_Transmit+0x11a>
 8002182:	68bb      	ldr	r3, [r7, #8]
 8002184:	2b00      	cmp	r3, #0
 8002186:	d002      	beq.n	800218e <HAL_UART_Transmit+0x2c>
 8002188:	88fb      	ldrh	r3, [r7, #6]
 800218a:	2b00      	cmp	r3, #0
 800218c:	d101      	bne.n	8002192 <HAL_UART_Transmit+0x30>
 800218e:	2301      	movs	r3, #1
 8002190:	e075      	b.n	800227e <HAL_UART_Transmit+0x11c>
 8002192:	68fb      	ldr	r3, [r7, #12]
 8002194:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002198:	2b01      	cmp	r3, #1
 800219a:	d101      	bne.n	80021a0 <HAL_UART_Transmit+0x3e>
 800219c:	2302      	movs	r3, #2
 800219e:	e06e      	b.n	800227e <HAL_UART_Transmit+0x11c>
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	2201      	movs	r2, #1
 80021a4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80021a8:	68fb      	ldr	r3, [r7, #12]
 80021aa:	2200      	movs	r2, #0
 80021ac:	63da      	str	r2, [r3, #60]	; 0x3c
 80021ae:	68fb      	ldr	r3, [r7, #12]
 80021b0:	2221      	movs	r2, #33	; 0x21
 80021b2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80021b6:	f7fe fe53 	bl	8000e60 <HAL_GetTick>
 80021ba:	6178      	str	r0, [r7, #20]
 80021bc:	68fb      	ldr	r3, [r7, #12]
 80021be:	88fa      	ldrh	r2, [r7, #6]
 80021c0:	849a      	strh	r2, [r3, #36]	; 0x24
 80021c2:	68fb      	ldr	r3, [r7, #12]
 80021c4:	88fa      	ldrh	r2, [r7, #6]
 80021c6:	84da      	strh	r2, [r3, #38]	; 0x26
 80021c8:	68fb      	ldr	r3, [r7, #12]
 80021ca:	689b      	ldr	r3, [r3, #8]
 80021cc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80021d0:	d108      	bne.n	80021e4 <HAL_UART_Transmit+0x82>
 80021d2:	68fb      	ldr	r3, [r7, #12]
 80021d4:	691b      	ldr	r3, [r3, #16]
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	d104      	bne.n	80021e4 <HAL_UART_Transmit+0x82>
 80021da:	2300      	movs	r3, #0
 80021dc:	61fb      	str	r3, [r7, #28]
 80021de:	68bb      	ldr	r3, [r7, #8]
 80021e0:	61bb      	str	r3, [r7, #24]
 80021e2:	e003      	b.n	80021ec <HAL_UART_Transmit+0x8a>
 80021e4:	68bb      	ldr	r3, [r7, #8]
 80021e6:	61fb      	str	r3, [r7, #28]
 80021e8:	2300      	movs	r3, #0
 80021ea:	61bb      	str	r3, [r7, #24]
 80021ec:	68fb      	ldr	r3, [r7, #12]
 80021ee:	2200      	movs	r2, #0
 80021f0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80021f4:	e02a      	b.n	800224c <HAL_UART_Transmit+0xea>
 80021f6:	683b      	ldr	r3, [r7, #0]
 80021f8:	9300      	str	r3, [sp, #0]
 80021fa:	697b      	ldr	r3, [r7, #20]
 80021fc:	2200      	movs	r2, #0
 80021fe:	2180      	movs	r1, #128	; 0x80
 8002200:	68f8      	ldr	r0, [r7, #12]
 8002202:	f000 f8df 	bl	80023c4 <UART_WaitOnFlagUntilTimeout>
 8002206:	4603      	mov	r3, r0
 8002208:	2b00      	cmp	r3, #0
 800220a:	d001      	beq.n	8002210 <HAL_UART_Transmit+0xae>
 800220c:	2303      	movs	r3, #3
 800220e:	e036      	b.n	800227e <HAL_UART_Transmit+0x11c>
 8002210:	69fb      	ldr	r3, [r7, #28]
 8002212:	2b00      	cmp	r3, #0
 8002214:	d10b      	bne.n	800222e <HAL_UART_Transmit+0xcc>
 8002216:	69bb      	ldr	r3, [r7, #24]
 8002218:	881b      	ldrh	r3, [r3, #0]
 800221a:	461a      	mov	r2, r3
 800221c:	68fb      	ldr	r3, [r7, #12]
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002224:	605a      	str	r2, [r3, #4]
 8002226:	69bb      	ldr	r3, [r7, #24]
 8002228:	3302      	adds	r3, #2
 800222a:	61bb      	str	r3, [r7, #24]
 800222c:	e007      	b.n	800223e <HAL_UART_Transmit+0xdc>
 800222e:	69fb      	ldr	r3, [r7, #28]
 8002230:	781a      	ldrb	r2, [r3, #0]
 8002232:	68fb      	ldr	r3, [r7, #12]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	605a      	str	r2, [r3, #4]
 8002238:	69fb      	ldr	r3, [r7, #28]
 800223a:	3301      	adds	r3, #1
 800223c:	61fb      	str	r3, [r7, #28]
 800223e:	68fb      	ldr	r3, [r7, #12]
 8002240:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002242:	b29b      	uxth	r3, r3
 8002244:	3b01      	subs	r3, #1
 8002246:	b29a      	uxth	r2, r3
 8002248:	68fb      	ldr	r3, [r7, #12]
 800224a:	84da      	strh	r2, [r3, #38]	; 0x26
 800224c:	68fb      	ldr	r3, [r7, #12]
 800224e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002250:	b29b      	uxth	r3, r3
 8002252:	2b00      	cmp	r3, #0
 8002254:	d1cf      	bne.n	80021f6 <HAL_UART_Transmit+0x94>
 8002256:	683b      	ldr	r3, [r7, #0]
 8002258:	9300      	str	r3, [sp, #0]
 800225a:	697b      	ldr	r3, [r7, #20]
 800225c:	2200      	movs	r2, #0
 800225e:	2140      	movs	r1, #64	; 0x40
 8002260:	68f8      	ldr	r0, [r7, #12]
 8002262:	f000 f8af 	bl	80023c4 <UART_WaitOnFlagUntilTimeout>
 8002266:	4603      	mov	r3, r0
 8002268:	2b00      	cmp	r3, #0
 800226a:	d001      	beq.n	8002270 <HAL_UART_Transmit+0x10e>
 800226c:	2303      	movs	r3, #3
 800226e:	e006      	b.n	800227e <HAL_UART_Transmit+0x11c>
 8002270:	68fb      	ldr	r3, [r7, #12]
 8002272:	2220      	movs	r2, #32
 8002274:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002278:	2300      	movs	r3, #0
 800227a:	e000      	b.n	800227e <HAL_UART_Transmit+0x11c>
 800227c:	2302      	movs	r3, #2
 800227e:	4618      	mov	r0, r3
 8002280:	3720      	adds	r7, #32
 8002282:	46bd      	mov	sp, r7
 8002284:	bd80      	pop	{r7, pc}

08002286 <HAL_UART_Receive>:
 8002286:	b580      	push	{r7, lr}
 8002288:	b08a      	sub	sp, #40	; 0x28
 800228a:	af02      	add	r7, sp, #8
 800228c:	60f8      	str	r0, [r7, #12]
 800228e:	60b9      	str	r1, [r7, #8]
 8002290:	603b      	str	r3, [r7, #0]
 8002292:	4613      	mov	r3, r2
 8002294:	80fb      	strh	r3, [r7, #6]
 8002296:	2300      	movs	r3, #0
 8002298:	617b      	str	r3, [r7, #20]
 800229a:	68fb      	ldr	r3, [r7, #12]
 800229c:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 80022a0:	b2db      	uxtb	r3, r3
 80022a2:	2b20      	cmp	r3, #32
 80022a4:	f040 8089 	bne.w	80023ba <HAL_UART_Receive+0x134>
 80022a8:	68bb      	ldr	r3, [r7, #8]
 80022aa:	2b00      	cmp	r3, #0
 80022ac:	d002      	beq.n	80022b4 <HAL_UART_Receive+0x2e>
 80022ae:	88fb      	ldrh	r3, [r7, #6]
 80022b0:	2b00      	cmp	r3, #0
 80022b2:	d101      	bne.n	80022b8 <HAL_UART_Receive+0x32>
 80022b4:	2301      	movs	r3, #1
 80022b6:	e081      	b.n	80023bc <HAL_UART_Receive+0x136>
 80022b8:	68fb      	ldr	r3, [r7, #12]
 80022ba:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80022be:	2b01      	cmp	r3, #1
 80022c0:	d101      	bne.n	80022c6 <HAL_UART_Receive+0x40>
 80022c2:	2302      	movs	r3, #2
 80022c4:	e07a      	b.n	80023bc <HAL_UART_Receive+0x136>
 80022c6:	68fb      	ldr	r3, [r7, #12]
 80022c8:	2201      	movs	r2, #1
 80022ca:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80022ce:	68fb      	ldr	r3, [r7, #12]
 80022d0:	2200      	movs	r2, #0
 80022d2:	63da      	str	r2, [r3, #60]	; 0x3c
 80022d4:	68fb      	ldr	r3, [r7, #12]
 80022d6:	2222      	movs	r2, #34	; 0x22
 80022d8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80022dc:	f7fe fdc0 	bl	8000e60 <HAL_GetTick>
 80022e0:	6178      	str	r0, [r7, #20]
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	88fa      	ldrh	r2, [r7, #6]
 80022e6:	859a      	strh	r2, [r3, #44]	; 0x2c
 80022e8:	68fb      	ldr	r3, [r7, #12]
 80022ea:	88fa      	ldrh	r2, [r7, #6]
 80022ec:	85da      	strh	r2, [r3, #46]	; 0x2e
 80022ee:	68fb      	ldr	r3, [r7, #12]
 80022f0:	689b      	ldr	r3, [r3, #8]
 80022f2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80022f6:	d108      	bne.n	800230a <HAL_UART_Receive+0x84>
 80022f8:	68fb      	ldr	r3, [r7, #12]
 80022fa:	691b      	ldr	r3, [r3, #16]
 80022fc:	2b00      	cmp	r3, #0
 80022fe:	d104      	bne.n	800230a <HAL_UART_Receive+0x84>
 8002300:	2300      	movs	r3, #0
 8002302:	61fb      	str	r3, [r7, #28]
 8002304:	68bb      	ldr	r3, [r7, #8]
 8002306:	61bb      	str	r3, [r7, #24]
 8002308:	e003      	b.n	8002312 <HAL_UART_Receive+0x8c>
 800230a:	68bb      	ldr	r3, [r7, #8]
 800230c:	61fb      	str	r3, [r7, #28]
 800230e:	2300      	movs	r3, #0
 8002310:	61bb      	str	r3, [r7, #24]
 8002312:	68fb      	ldr	r3, [r7, #12]
 8002314:	2200      	movs	r2, #0
 8002316:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800231a:	e043      	b.n	80023a4 <HAL_UART_Receive+0x11e>
 800231c:	683b      	ldr	r3, [r7, #0]
 800231e:	9300      	str	r3, [sp, #0]
 8002320:	697b      	ldr	r3, [r7, #20]
 8002322:	2200      	movs	r2, #0
 8002324:	2120      	movs	r1, #32
 8002326:	68f8      	ldr	r0, [r7, #12]
 8002328:	f000 f84c 	bl	80023c4 <UART_WaitOnFlagUntilTimeout>
 800232c:	4603      	mov	r3, r0
 800232e:	2b00      	cmp	r3, #0
 8002330:	d001      	beq.n	8002336 <HAL_UART_Receive+0xb0>
 8002332:	2303      	movs	r3, #3
 8002334:	e042      	b.n	80023bc <HAL_UART_Receive+0x136>
 8002336:	69fb      	ldr	r3, [r7, #28]
 8002338:	2b00      	cmp	r3, #0
 800233a:	d10c      	bne.n	8002356 <HAL_UART_Receive+0xd0>
 800233c:	68fb      	ldr	r3, [r7, #12]
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	685b      	ldr	r3, [r3, #4]
 8002342:	b29b      	uxth	r3, r3
 8002344:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002348:	b29a      	uxth	r2, r3
 800234a:	69bb      	ldr	r3, [r7, #24]
 800234c:	801a      	strh	r2, [r3, #0]
 800234e:	69bb      	ldr	r3, [r7, #24]
 8002350:	3302      	adds	r3, #2
 8002352:	61bb      	str	r3, [r7, #24]
 8002354:	e01f      	b.n	8002396 <HAL_UART_Receive+0x110>
 8002356:	68fb      	ldr	r3, [r7, #12]
 8002358:	689b      	ldr	r3, [r3, #8]
 800235a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800235e:	d007      	beq.n	8002370 <HAL_UART_Receive+0xea>
 8002360:	68fb      	ldr	r3, [r7, #12]
 8002362:	689b      	ldr	r3, [r3, #8]
 8002364:	2b00      	cmp	r3, #0
 8002366:	d10a      	bne.n	800237e <HAL_UART_Receive+0xf8>
 8002368:	68fb      	ldr	r3, [r7, #12]
 800236a:	691b      	ldr	r3, [r3, #16]
 800236c:	2b00      	cmp	r3, #0
 800236e:	d106      	bne.n	800237e <HAL_UART_Receive+0xf8>
 8002370:	68fb      	ldr	r3, [r7, #12]
 8002372:	681b      	ldr	r3, [r3, #0]
 8002374:	685b      	ldr	r3, [r3, #4]
 8002376:	b2da      	uxtb	r2, r3
 8002378:	69fb      	ldr	r3, [r7, #28]
 800237a:	701a      	strb	r2, [r3, #0]
 800237c:	e008      	b.n	8002390 <HAL_UART_Receive+0x10a>
 800237e:	68fb      	ldr	r3, [r7, #12]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	685b      	ldr	r3, [r3, #4]
 8002384:	b2db      	uxtb	r3, r3
 8002386:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800238a:	b2da      	uxtb	r2, r3
 800238c:	69fb      	ldr	r3, [r7, #28]
 800238e:	701a      	strb	r2, [r3, #0]
 8002390:	69fb      	ldr	r3, [r7, #28]
 8002392:	3301      	adds	r3, #1
 8002394:	61fb      	str	r3, [r7, #28]
 8002396:	68fb      	ldr	r3, [r7, #12]
 8002398:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800239a:	b29b      	uxth	r3, r3
 800239c:	3b01      	subs	r3, #1
 800239e:	b29a      	uxth	r2, r3
 80023a0:	68fb      	ldr	r3, [r7, #12]
 80023a2:	85da      	strh	r2, [r3, #46]	; 0x2e
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80023a8:	b29b      	uxth	r3, r3
 80023aa:	2b00      	cmp	r3, #0
 80023ac:	d1b6      	bne.n	800231c <HAL_UART_Receive+0x96>
 80023ae:	68fb      	ldr	r3, [r7, #12]
 80023b0:	2220      	movs	r2, #32
 80023b2:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80023b6:	2300      	movs	r3, #0
 80023b8:	e000      	b.n	80023bc <HAL_UART_Receive+0x136>
 80023ba:	2302      	movs	r3, #2
 80023bc:	4618      	mov	r0, r3
 80023be:	3720      	adds	r7, #32
 80023c0:	46bd      	mov	sp, r7
 80023c2:	bd80      	pop	{r7, pc}

080023c4 <UART_WaitOnFlagUntilTimeout>:
 80023c4:	b580      	push	{r7, lr}
 80023c6:	b084      	sub	sp, #16
 80023c8:	af00      	add	r7, sp, #0
 80023ca:	60f8      	str	r0, [r7, #12]
 80023cc:	60b9      	str	r1, [r7, #8]
 80023ce:	603b      	str	r3, [r7, #0]
 80023d0:	4613      	mov	r3, r2
 80023d2:	71fb      	strb	r3, [r7, #7]
 80023d4:	e02c      	b.n	8002430 <UART_WaitOnFlagUntilTimeout+0x6c>
 80023d6:	69bb      	ldr	r3, [r7, #24]
 80023d8:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80023dc:	d028      	beq.n	8002430 <UART_WaitOnFlagUntilTimeout+0x6c>
 80023de:	69bb      	ldr	r3, [r7, #24]
 80023e0:	2b00      	cmp	r3, #0
 80023e2:	d007      	beq.n	80023f4 <UART_WaitOnFlagUntilTimeout+0x30>
 80023e4:	f7fe fd3c 	bl	8000e60 <HAL_GetTick>
 80023e8:	4602      	mov	r2, r0
 80023ea:	683b      	ldr	r3, [r7, #0]
 80023ec:	1ad3      	subs	r3, r2, r3
 80023ee:	69ba      	ldr	r2, [r7, #24]
 80023f0:	429a      	cmp	r2, r3
 80023f2:	d21d      	bcs.n	8002430 <UART_WaitOnFlagUntilTimeout+0x6c>
 80023f4:	68fb      	ldr	r3, [r7, #12]
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	68da      	ldr	r2, [r3, #12]
 80023fa:	68fb      	ldr	r3, [r7, #12]
 80023fc:	681b      	ldr	r3, [r3, #0]
 80023fe:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8002402:	60da      	str	r2, [r3, #12]
 8002404:	68fb      	ldr	r3, [r7, #12]
 8002406:	681b      	ldr	r3, [r3, #0]
 8002408:	695a      	ldr	r2, [r3, #20]
 800240a:	68fb      	ldr	r3, [r7, #12]
 800240c:	681b      	ldr	r3, [r3, #0]
 800240e:	f022 0201 	bic.w	r2, r2, #1
 8002412:	615a      	str	r2, [r3, #20]
 8002414:	68fb      	ldr	r3, [r7, #12]
 8002416:	2220      	movs	r2, #32
 8002418:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800241c:	68fb      	ldr	r3, [r7, #12]
 800241e:	2220      	movs	r2, #32
 8002420:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002424:	68fb      	ldr	r3, [r7, #12]
 8002426:	2200      	movs	r2, #0
 8002428:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800242c:	2303      	movs	r3, #3
 800242e:	e00f      	b.n	8002450 <UART_WaitOnFlagUntilTimeout+0x8c>
 8002430:	68fb      	ldr	r3, [r7, #12]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	681a      	ldr	r2, [r3, #0]
 8002436:	68bb      	ldr	r3, [r7, #8]
 8002438:	4013      	ands	r3, r2
 800243a:	68ba      	ldr	r2, [r7, #8]
 800243c:	429a      	cmp	r2, r3
 800243e:	bf0c      	ite	eq
 8002440:	2301      	moveq	r3, #1
 8002442:	2300      	movne	r3, #0
 8002444:	b2db      	uxtb	r3, r3
 8002446:	461a      	mov	r2, r3
 8002448:	79fb      	ldrb	r3, [r7, #7]
 800244a:	429a      	cmp	r2, r3
 800244c:	d0c3      	beq.n	80023d6 <UART_WaitOnFlagUntilTimeout+0x12>
 800244e:	2300      	movs	r3, #0
 8002450:	4618      	mov	r0, r3
 8002452:	3710      	adds	r7, #16
 8002454:	46bd      	mov	sp, r7
 8002456:	bd80      	pop	{r7, pc}

08002458 <UART_SetConfig>:
 8002458:	b580      	push	{r7, lr}
 800245a:	b084      	sub	sp, #16
 800245c:	af00      	add	r7, sp, #0
 800245e:	6078      	str	r0, [r7, #4]
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	681b      	ldr	r3, [r3, #0]
 8002464:	691b      	ldr	r3, [r3, #16]
 8002466:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	68da      	ldr	r2, [r3, #12]
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	430a      	orrs	r2, r1
 8002474:	611a      	str	r2, [r3, #16]
 8002476:	687b      	ldr	r3, [r7, #4]
 8002478:	689a      	ldr	r2, [r3, #8]
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	691b      	ldr	r3, [r3, #16]
 800247e:	431a      	orrs	r2, r3
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	695b      	ldr	r3, [r3, #20]
 8002484:	4313      	orrs	r3, r2
 8002486:	60bb      	str	r3, [r7, #8]
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	68db      	ldr	r3, [r3, #12]
 800248e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8002492:	f023 030c 	bic.w	r3, r3, #12
 8002496:	687a      	ldr	r2, [r7, #4]
 8002498:	6812      	ldr	r2, [r2, #0]
 800249a:	68b9      	ldr	r1, [r7, #8]
 800249c:	430b      	orrs	r3, r1
 800249e:	60d3      	str	r3, [r2, #12]
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	695b      	ldr	r3, [r3, #20]
 80024a6:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	699a      	ldr	r2, [r3, #24]
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	681b      	ldr	r3, [r3, #0]
 80024b2:	430a      	orrs	r2, r1
 80024b4:	615a      	str	r2, [r3, #20]
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	4a2c      	ldr	r2, [pc, #176]	; (800256c <UART_SetConfig+0x114>)
 80024bc:	4293      	cmp	r3, r2
 80024be:	d103      	bne.n	80024c8 <UART_SetConfig+0x70>
 80024c0:	f7ff fb56 	bl	8001b70 <HAL_RCC_GetPCLK2Freq>
 80024c4:	60f8      	str	r0, [r7, #12]
 80024c6:	e002      	b.n	80024ce <UART_SetConfig+0x76>
 80024c8:	f7ff fb3e 	bl	8001b48 <HAL_RCC_GetPCLK1Freq>
 80024cc:	60f8      	str	r0, [r7, #12]
 80024ce:	68fa      	ldr	r2, [r7, #12]
 80024d0:	4613      	mov	r3, r2
 80024d2:	009b      	lsls	r3, r3, #2
 80024d4:	4413      	add	r3, r2
 80024d6:	009a      	lsls	r2, r3, #2
 80024d8:	441a      	add	r2, r3
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	685b      	ldr	r3, [r3, #4]
 80024de:	009b      	lsls	r3, r3, #2
 80024e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80024e4:	4a22      	ldr	r2, [pc, #136]	; (8002570 <UART_SetConfig+0x118>)
 80024e6:	fba2 2303 	umull	r2, r3, r2, r3
 80024ea:	095b      	lsrs	r3, r3, #5
 80024ec:	0119      	lsls	r1, r3, #4
 80024ee:	68fa      	ldr	r2, [r7, #12]
 80024f0:	4613      	mov	r3, r2
 80024f2:	009b      	lsls	r3, r3, #2
 80024f4:	4413      	add	r3, r2
 80024f6:	009a      	lsls	r2, r3, #2
 80024f8:	441a      	add	r2, r3
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	685b      	ldr	r3, [r3, #4]
 80024fe:	009b      	lsls	r3, r3, #2
 8002500:	fbb2 f2f3 	udiv	r2, r2, r3
 8002504:	4b1a      	ldr	r3, [pc, #104]	; (8002570 <UART_SetConfig+0x118>)
 8002506:	fba3 0302 	umull	r0, r3, r3, r2
 800250a:	095b      	lsrs	r3, r3, #5
 800250c:	2064      	movs	r0, #100	; 0x64
 800250e:	fb00 f303 	mul.w	r3, r0, r3
 8002512:	1ad3      	subs	r3, r2, r3
 8002514:	011b      	lsls	r3, r3, #4
 8002516:	3332      	adds	r3, #50	; 0x32
 8002518:	4a15      	ldr	r2, [pc, #84]	; (8002570 <UART_SetConfig+0x118>)
 800251a:	fba2 2303 	umull	r2, r3, r2, r3
 800251e:	095b      	lsrs	r3, r3, #5
 8002520:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002524:	4419      	add	r1, r3
 8002526:	68fa      	ldr	r2, [r7, #12]
 8002528:	4613      	mov	r3, r2
 800252a:	009b      	lsls	r3, r3, #2
 800252c:	4413      	add	r3, r2
 800252e:	009a      	lsls	r2, r3, #2
 8002530:	441a      	add	r2, r3
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	685b      	ldr	r3, [r3, #4]
 8002536:	009b      	lsls	r3, r3, #2
 8002538:	fbb2 f2f3 	udiv	r2, r2, r3
 800253c:	4b0c      	ldr	r3, [pc, #48]	; (8002570 <UART_SetConfig+0x118>)
 800253e:	fba3 0302 	umull	r0, r3, r3, r2
 8002542:	095b      	lsrs	r3, r3, #5
 8002544:	2064      	movs	r0, #100	; 0x64
 8002546:	fb00 f303 	mul.w	r3, r0, r3
 800254a:	1ad3      	subs	r3, r2, r3
 800254c:	011b      	lsls	r3, r3, #4
 800254e:	3332      	adds	r3, #50	; 0x32
 8002550:	4a07      	ldr	r2, [pc, #28]	; (8002570 <UART_SetConfig+0x118>)
 8002552:	fba2 2303 	umull	r2, r3, r2, r3
 8002556:	095b      	lsrs	r3, r3, #5
 8002558:	f003 020f 	and.w	r2, r3, #15
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	440a      	add	r2, r1
 8002562:	609a      	str	r2, [r3, #8]
 8002564:	bf00      	nop
 8002566:	3710      	adds	r7, #16
 8002568:	46bd      	mov	sp, r7
 800256a:	bd80      	pop	{r7, pc}
 800256c:	40013800 	.word	0x40013800
 8002570:	51eb851f 	.word	0x51eb851f

08002574 <makeFreeRtosPriority>:
 8002574:	b480      	push	{r7}
 8002576:	b085      	sub	sp, #20
 8002578:	af00      	add	r7, sp, #0
 800257a:	4603      	mov	r3, r0
 800257c:	80fb      	strh	r3, [r7, #6]
 800257e:	2300      	movs	r3, #0
 8002580:	60fb      	str	r3, [r7, #12]
 8002582:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002586:	2b84      	cmp	r3, #132	; 0x84
 8002588:	d005      	beq.n	8002596 <makeFreeRtosPriority+0x22>
 800258a:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800258e:	68fb      	ldr	r3, [r7, #12]
 8002590:	4413      	add	r3, r2
 8002592:	3303      	adds	r3, #3
 8002594:	60fb      	str	r3, [r7, #12]
 8002596:	68fb      	ldr	r3, [r7, #12]
 8002598:	4618      	mov	r0, r3
 800259a:	3714      	adds	r7, #20
 800259c:	46bd      	mov	sp, r7
 800259e:	bc80      	pop	{r7}
 80025a0:	4770      	bx	lr

080025a2 <osKernelStart>:
 80025a2:	b580      	push	{r7, lr}
 80025a4:	af00      	add	r7, sp, #0
 80025a6:	f000 fad1 	bl	8002b4c <vTaskStartScheduler>
 80025aa:	2300      	movs	r3, #0
 80025ac:	4618      	mov	r0, r3
 80025ae:	bd80      	pop	{r7, pc}

080025b0 <osThreadCreate>:
 80025b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80025b2:	b089      	sub	sp, #36	; 0x24
 80025b4:	af04      	add	r7, sp, #16
 80025b6:	6078      	str	r0, [r7, #4]
 80025b8:	6039      	str	r1, [r7, #0]
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	695b      	ldr	r3, [r3, #20]
 80025be:	2b00      	cmp	r3, #0
 80025c0:	d020      	beq.n	8002604 <osThreadCreate+0x54>
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	699b      	ldr	r3, [r3, #24]
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	d01c      	beq.n	8002604 <osThreadCreate+0x54>
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	685c      	ldr	r4, [r3, #4]
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	681d      	ldr	r5, [r3, #0]
 80025d2:	687b      	ldr	r3, [r7, #4]
 80025d4:	691e      	ldr	r6, [r3, #16]
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80025dc:	4618      	mov	r0, r3
 80025de:	f7ff ffc9 	bl	8002574 <makeFreeRtosPriority>
 80025e2:	4601      	mov	r1, r0
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	695b      	ldr	r3, [r3, #20]
 80025e8:	687a      	ldr	r2, [r7, #4]
 80025ea:	6992      	ldr	r2, [r2, #24]
 80025ec:	9202      	str	r2, [sp, #8]
 80025ee:	9301      	str	r3, [sp, #4]
 80025f0:	9100      	str	r1, [sp, #0]
 80025f2:	683b      	ldr	r3, [r7, #0]
 80025f4:	4632      	mov	r2, r6
 80025f6:	4629      	mov	r1, r5
 80025f8:	4620      	mov	r0, r4
 80025fa:	f000 f8e8 	bl	80027ce <xTaskCreateStatic>
 80025fe:	4603      	mov	r3, r0
 8002600:	60fb      	str	r3, [r7, #12]
 8002602:	e01c      	b.n	800263e <osThreadCreate+0x8e>
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	685c      	ldr	r4, [r3, #4]
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	681d      	ldr	r5, [r3, #0]
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	691b      	ldr	r3, [r3, #16]
 8002610:	b29e      	uxth	r6, r3
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002618:	4618      	mov	r0, r3
 800261a:	f7ff ffab 	bl	8002574 <makeFreeRtosPriority>
 800261e:	4602      	mov	r2, r0
 8002620:	f107 030c 	add.w	r3, r7, #12
 8002624:	9301      	str	r3, [sp, #4]
 8002626:	9200      	str	r2, [sp, #0]
 8002628:	683b      	ldr	r3, [r7, #0]
 800262a:	4632      	mov	r2, r6
 800262c:	4629      	mov	r1, r5
 800262e:	4620      	mov	r0, r4
 8002630:	f000 f929 	bl	8002886 <xTaskCreate>
 8002634:	4603      	mov	r3, r0
 8002636:	2b01      	cmp	r3, #1
 8002638:	d001      	beq.n	800263e <osThreadCreate+0x8e>
 800263a:	2300      	movs	r3, #0
 800263c:	e000      	b.n	8002640 <osThreadCreate+0x90>
 800263e:	68fb      	ldr	r3, [r7, #12]
 8002640:	4618      	mov	r0, r3
 8002642:	3714      	adds	r7, #20
 8002644:	46bd      	mov	sp, r7
 8002646:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002648 <osDelay>:
 8002648:	b580      	push	{r7, lr}
 800264a:	b084      	sub	sp, #16
 800264c:	af00      	add	r7, sp, #0
 800264e:	6078      	str	r0, [r7, #4]
 8002650:	687b      	ldr	r3, [r7, #4]
 8002652:	60fb      	str	r3, [r7, #12]
 8002654:	68fb      	ldr	r3, [r7, #12]
 8002656:	2b00      	cmp	r3, #0
 8002658:	d001      	beq.n	800265e <osDelay+0x16>
 800265a:	68fb      	ldr	r3, [r7, #12]
 800265c:	e000      	b.n	8002660 <osDelay+0x18>
 800265e:	2301      	movs	r3, #1
 8002660:	4618      	mov	r0, r3
 8002662:	f000 fa3f 	bl	8002ae4 <vTaskDelay>
 8002666:	2300      	movs	r3, #0
 8002668:	4618      	mov	r0, r3
 800266a:	3710      	adds	r7, #16
 800266c:	46bd      	mov	sp, r7
 800266e:	bd80      	pop	{r7, pc}

08002670 <vListInitialise>:
 8002670:	b480      	push	{r7}
 8002672:	b083      	sub	sp, #12
 8002674:	af00      	add	r7, sp, #0
 8002676:	6078      	str	r0, [r7, #4]
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	f103 0208 	add.w	r2, r3, #8
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	605a      	str	r2, [r3, #4]
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002688:	609a      	str	r2, [r3, #8]
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	f103 0208 	add.w	r2, r3, #8
 8002690:	687b      	ldr	r3, [r7, #4]
 8002692:	60da      	str	r2, [r3, #12]
 8002694:	687b      	ldr	r3, [r7, #4]
 8002696:	f103 0208 	add.w	r2, r3, #8
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	611a      	str	r2, [r3, #16]
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	2200      	movs	r2, #0
 80026a2:	601a      	str	r2, [r3, #0]
 80026a4:	bf00      	nop
 80026a6:	370c      	adds	r7, #12
 80026a8:	46bd      	mov	sp, r7
 80026aa:	bc80      	pop	{r7}
 80026ac:	4770      	bx	lr

080026ae <vListInitialiseItem>:
 80026ae:	b480      	push	{r7}
 80026b0:	b083      	sub	sp, #12
 80026b2:	af00      	add	r7, sp, #0
 80026b4:	6078      	str	r0, [r7, #4]
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	2200      	movs	r2, #0
 80026ba:	611a      	str	r2, [r3, #16]
 80026bc:	bf00      	nop
 80026be:	370c      	adds	r7, #12
 80026c0:	46bd      	mov	sp, r7
 80026c2:	bc80      	pop	{r7}
 80026c4:	4770      	bx	lr

080026c6 <vListInsertEnd>:
 80026c6:	b480      	push	{r7}
 80026c8:	b085      	sub	sp, #20
 80026ca:	af00      	add	r7, sp, #0
 80026cc:	6078      	str	r0, [r7, #4]
 80026ce:	6039      	str	r1, [r7, #0]
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	685b      	ldr	r3, [r3, #4]
 80026d4:	60fb      	str	r3, [r7, #12]
 80026d6:	683b      	ldr	r3, [r7, #0]
 80026d8:	68fa      	ldr	r2, [r7, #12]
 80026da:	605a      	str	r2, [r3, #4]
 80026dc:	68fb      	ldr	r3, [r7, #12]
 80026de:	689a      	ldr	r2, [r3, #8]
 80026e0:	683b      	ldr	r3, [r7, #0]
 80026e2:	609a      	str	r2, [r3, #8]
 80026e4:	68fb      	ldr	r3, [r7, #12]
 80026e6:	689b      	ldr	r3, [r3, #8]
 80026e8:	683a      	ldr	r2, [r7, #0]
 80026ea:	605a      	str	r2, [r3, #4]
 80026ec:	68fb      	ldr	r3, [r7, #12]
 80026ee:	683a      	ldr	r2, [r7, #0]
 80026f0:	609a      	str	r2, [r3, #8]
 80026f2:	683b      	ldr	r3, [r7, #0]
 80026f4:	687a      	ldr	r2, [r7, #4]
 80026f6:	611a      	str	r2, [r3, #16]
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	1c5a      	adds	r2, r3, #1
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	601a      	str	r2, [r3, #0]
 8002702:	bf00      	nop
 8002704:	3714      	adds	r7, #20
 8002706:	46bd      	mov	sp, r7
 8002708:	bc80      	pop	{r7}
 800270a:	4770      	bx	lr

0800270c <vListInsert>:
 800270c:	b480      	push	{r7}
 800270e:	b085      	sub	sp, #20
 8002710:	af00      	add	r7, sp, #0
 8002712:	6078      	str	r0, [r7, #4]
 8002714:	6039      	str	r1, [r7, #0]
 8002716:	683b      	ldr	r3, [r7, #0]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	60bb      	str	r3, [r7, #8]
 800271c:	68bb      	ldr	r3, [r7, #8]
 800271e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002722:	d103      	bne.n	800272c <vListInsert+0x20>
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	691b      	ldr	r3, [r3, #16]
 8002728:	60fb      	str	r3, [r7, #12]
 800272a:	e00c      	b.n	8002746 <vListInsert+0x3a>
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	3308      	adds	r3, #8
 8002730:	60fb      	str	r3, [r7, #12]
 8002732:	e002      	b.n	800273a <vListInsert+0x2e>
 8002734:	68fb      	ldr	r3, [r7, #12]
 8002736:	685b      	ldr	r3, [r3, #4]
 8002738:	60fb      	str	r3, [r7, #12]
 800273a:	68fb      	ldr	r3, [r7, #12]
 800273c:	685b      	ldr	r3, [r3, #4]
 800273e:	681b      	ldr	r3, [r3, #0]
 8002740:	68ba      	ldr	r2, [r7, #8]
 8002742:	429a      	cmp	r2, r3
 8002744:	d2f6      	bcs.n	8002734 <vListInsert+0x28>
 8002746:	68fb      	ldr	r3, [r7, #12]
 8002748:	685a      	ldr	r2, [r3, #4]
 800274a:	683b      	ldr	r3, [r7, #0]
 800274c:	605a      	str	r2, [r3, #4]
 800274e:	683b      	ldr	r3, [r7, #0]
 8002750:	685b      	ldr	r3, [r3, #4]
 8002752:	683a      	ldr	r2, [r7, #0]
 8002754:	609a      	str	r2, [r3, #8]
 8002756:	683b      	ldr	r3, [r7, #0]
 8002758:	68fa      	ldr	r2, [r7, #12]
 800275a:	609a      	str	r2, [r3, #8]
 800275c:	68fb      	ldr	r3, [r7, #12]
 800275e:	683a      	ldr	r2, [r7, #0]
 8002760:	605a      	str	r2, [r3, #4]
 8002762:	683b      	ldr	r3, [r7, #0]
 8002764:	687a      	ldr	r2, [r7, #4]
 8002766:	611a      	str	r2, [r3, #16]
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	681b      	ldr	r3, [r3, #0]
 800276c:	1c5a      	adds	r2, r3, #1
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	601a      	str	r2, [r3, #0]
 8002772:	bf00      	nop
 8002774:	3714      	adds	r7, #20
 8002776:	46bd      	mov	sp, r7
 8002778:	bc80      	pop	{r7}
 800277a:	4770      	bx	lr

0800277c <uxListRemove>:
 800277c:	b480      	push	{r7}
 800277e:	b085      	sub	sp, #20
 8002780:	af00      	add	r7, sp, #0
 8002782:	6078      	str	r0, [r7, #4]
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	691b      	ldr	r3, [r3, #16]
 8002788:	60fb      	str	r3, [r7, #12]
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	685b      	ldr	r3, [r3, #4]
 800278e:	687a      	ldr	r2, [r7, #4]
 8002790:	6892      	ldr	r2, [r2, #8]
 8002792:	609a      	str	r2, [r3, #8]
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	689b      	ldr	r3, [r3, #8]
 8002798:	687a      	ldr	r2, [r7, #4]
 800279a:	6852      	ldr	r2, [r2, #4]
 800279c:	605a      	str	r2, [r3, #4]
 800279e:	68fb      	ldr	r3, [r7, #12]
 80027a0:	685b      	ldr	r3, [r3, #4]
 80027a2:	687a      	ldr	r2, [r7, #4]
 80027a4:	429a      	cmp	r2, r3
 80027a6:	d103      	bne.n	80027b0 <uxListRemove+0x34>
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	689a      	ldr	r2, [r3, #8]
 80027ac:	68fb      	ldr	r3, [r7, #12]
 80027ae:	605a      	str	r2, [r3, #4]
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	2200      	movs	r2, #0
 80027b4:	611a      	str	r2, [r3, #16]
 80027b6:	68fb      	ldr	r3, [r7, #12]
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	1e5a      	subs	r2, r3, #1
 80027bc:	68fb      	ldr	r3, [r7, #12]
 80027be:	601a      	str	r2, [r3, #0]
 80027c0:	68fb      	ldr	r3, [r7, #12]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	4618      	mov	r0, r3
 80027c6:	3714      	adds	r7, #20
 80027c8:	46bd      	mov	sp, r7
 80027ca:	bc80      	pop	{r7}
 80027cc:	4770      	bx	lr

080027ce <xTaskCreateStatic>:
 80027ce:	b580      	push	{r7, lr}
 80027d0:	b08e      	sub	sp, #56	; 0x38
 80027d2:	af04      	add	r7, sp, #16
 80027d4:	60f8      	str	r0, [r7, #12]
 80027d6:	60b9      	str	r1, [r7, #8]
 80027d8:	607a      	str	r2, [r7, #4]
 80027da:	603b      	str	r3, [r7, #0]
 80027dc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80027de:	2b00      	cmp	r3, #0
 80027e0:	d10a      	bne.n	80027f8 <xTaskCreateStatic+0x2a>
 80027e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80027e6:	f383 8811 	msr	BASEPRI, r3
 80027ea:	f3bf 8f6f 	isb	sy
 80027ee:	f3bf 8f4f 	dsb	sy
 80027f2:	623b      	str	r3, [r7, #32]
 80027f4:	bf00      	nop
 80027f6:	e7fe      	b.n	80027f6 <xTaskCreateStatic+0x28>
 80027f8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80027fa:	2b00      	cmp	r3, #0
 80027fc:	d10a      	bne.n	8002814 <xTaskCreateStatic+0x46>
 80027fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002802:	f383 8811 	msr	BASEPRI, r3
 8002806:	f3bf 8f6f 	isb	sy
 800280a:	f3bf 8f4f 	dsb	sy
 800280e:	61fb      	str	r3, [r7, #28]
 8002810:	bf00      	nop
 8002812:	e7fe      	b.n	8002812 <xTaskCreateStatic+0x44>
 8002814:	2354      	movs	r3, #84	; 0x54
 8002816:	613b      	str	r3, [r7, #16]
 8002818:	693b      	ldr	r3, [r7, #16]
 800281a:	2b54      	cmp	r3, #84	; 0x54
 800281c:	d00a      	beq.n	8002834 <xTaskCreateStatic+0x66>
 800281e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002822:	f383 8811 	msr	BASEPRI, r3
 8002826:	f3bf 8f6f 	isb	sy
 800282a:	f3bf 8f4f 	dsb	sy
 800282e:	61bb      	str	r3, [r7, #24]
 8002830:	bf00      	nop
 8002832:	e7fe      	b.n	8002832 <xTaskCreateStatic+0x64>
 8002834:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002836:	2b00      	cmp	r3, #0
 8002838:	d01e      	beq.n	8002878 <xTaskCreateStatic+0xaa>
 800283a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800283c:	2b00      	cmp	r3, #0
 800283e:	d01b      	beq.n	8002878 <xTaskCreateStatic+0xaa>
 8002840:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002842:	627b      	str	r3, [r7, #36]	; 0x24
 8002844:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002846:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002848:	631a      	str	r2, [r3, #48]	; 0x30
 800284a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800284c:	2202      	movs	r2, #2
 800284e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002852:	2300      	movs	r3, #0
 8002854:	9303      	str	r3, [sp, #12]
 8002856:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002858:	9302      	str	r3, [sp, #8]
 800285a:	f107 0314 	add.w	r3, r7, #20
 800285e:	9301      	str	r3, [sp, #4]
 8002860:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002862:	9300      	str	r3, [sp, #0]
 8002864:	683b      	ldr	r3, [r7, #0]
 8002866:	687a      	ldr	r2, [r7, #4]
 8002868:	68b9      	ldr	r1, [r7, #8]
 800286a:	68f8      	ldr	r0, [r7, #12]
 800286c:	f000 f850 	bl	8002910 <prvInitialiseNewTask>
 8002870:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002872:	f000 f8cd 	bl	8002a10 <prvAddNewTaskToReadyList>
 8002876:	e001      	b.n	800287c <xTaskCreateStatic+0xae>
 8002878:	2300      	movs	r3, #0
 800287a:	617b      	str	r3, [r7, #20]
 800287c:	697b      	ldr	r3, [r7, #20]
 800287e:	4618      	mov	r0, r3
 8002880:	3728      	adds	r7, #40	; 0x28
 8002882:	46bd      	mov	sp, r7
 8002884:	bd80      	pop	{r7, pc}

08002886 <xTaskCreate>:
 8002886:	b580      	push	{r7, lr}
 8002888:	b08c      	sub	sp, #48	; 0x30
 800288a:	af04      	add	r7, sp, #16
 800288c:	60f8      	str	r0, [r7, #12]
 800288e:	60b9      	str	r1, [r7, #8]
 8002890:	603b      	str	r3, [r7, #0]
 8002892:	4613      	mov	r3, r2
 8002894:	80fb      	strh	r3, [r7, #6]
 8002896:	88fb      	ldrh	r3, [r7, #6]
 8002898:	009b      	lsls	r3, r3, #2
 800289a:	4618      	mov	r0, r3
 800289c:	f000 fe68 	bl	8003570 <pvPortMalloc>
 80028a0:	6178      	str	r0, [r7, #20]
 80028a2:	697b      	ldr	r3, [r7, #20]
 80028a4:	2b00      	cmp	r3, #0
 80028a6:	d00e      	beq.n	80028c6 <xTaskCreate+0x40>
 80028a8:	2054      	movs	r0, #84	; 0x54
 80028aa:	f000 fe61 	bl	8003570 <pvPortMalloc>
 80028ae:	61f8      	str	r0, [r7, #28]
 80028b0:	69fb      	ldr	r3, [r7, #28]
 80028b2:	2b00      	cmp	r3, #0
 80028b4:	d003      	beq.n	80028be <xTaskCreate+0x38>
 80028b6:	69fb      	ldr	r3, [r7, #28]
 80028b8:	697a      	ldr	r2, [r7, #20]
 80028ba:	631a      	str	r2, [r3, #48]	; 0x30
 80028bc:	e005      	b.n	80028ca <xTaskCreate+0x44>
 80028be:	6978      	ldr	r0, [r7, #20]
 80028c0:	f000 ff1a 	bl	80036f8 <vPortFree>
 80028c4:	e001      	b.n	80028ca <xTaskCreate+0x44>
 80028c6:	2300      	movs	r3, #0
 80028c8:	61fb      	str	r3, [r7, #28]
 80028ca:	69fb      	ldr	r3, [r7, #28]
 80028cc:	2b00      	cmp	r3, #0
 80028ce:	d017      	beq.n	8002900 <xTaskCreate+0x7a>
 80028d0:	69fb      	ldr	r3, [r7, #28]
 80028d2:	2200      	movs	r2, #0
 80028d4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80028d8:	88fa      	ldrh	r2, [r7, #6]
 80028da:	2300      	movs	r3, #0
 80028dc:	9303      	str	r3, [sp, #12]
 80028de:	69fb      	ldr	r3, [r7, #28]
 80028e0:	9302      	str	r3, [sp, #8]
 80028e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80028e4:	9301      	str	r3, [sp, #4]
 80028e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80028e8:	9300      	str	r3, [sp, #0]
 80028ea:	683b      	ldr	r3, [r7, #0]
 80028ec:	68b9      	ldr	r1, [r7, #8]
 80028ee:	68f8      	ldr	r0, [r7, #12]
 80028f0:	f000 f80e 	bl	8002910 <prvInitialiseNewTask>
 80028f4:	69f8      	ldr	r0, [r7, #28]
 80028f6:	f000 f88b 	bl	8002a10 <prvAddNewTaskToReadyList>
 80028fa:	2301      	movs	r3, #1
 80028fc:	61bb      	str	r3, [r7, #24]
 80028fe:	e002      	b.n	8002906 <xTaskCreate+0x80>
 8002900:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002904:	61bb      	str	r3, [r7, #24]
 8002906:	69bb      	ldr	r3, [r7, #24]
 8002908:	4618      	mov	r0, r3
 800290a:	3720      	adds	r7, #32
 800290c:	46bd      	mov	sp, r7
 800290e:	bd80      	pop	{r7, pc}

08002910 <prvInitialiseNewTask>:
 8002910:	b580      	push	{r7, lr}
 8002912:	b088      	sub	sp, #32
 8002914:	af00      	add	r7, sp, #0
 8002916:	60f8      	str	r0, [r7, #12]
 8002918:	60b9      	str	r1, [r7, #8]
 800291a:	607a      	str	r2, [r7, #4]
 800291c:	603b      	str	r3, [r7, #0]
 800291e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002920:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002922:	687b      	ldr	r3, [r7, #4]
 8002924:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8002928:	3b01      	subs	r3, #1
 800292a:	009b      	lsls	r3, r3, #2
 800292c:	4413      	add	r3, r2
 800292e:	61bb      	str	r3, [r7, #24]
 8002930:	69bb      	ldr	r3, [r7, #24]
 8002932:	f023 0307 	bic.w	r3, r3, #7
 8002936:	61bb      	str	r3, [r7, #24]
 8002938:	69bb      	ldr	r3, [r7, #24]
 800293a:	f003 0307 	and.w	r3, r3, #7
 800293e:	2b00      	cmp	r3, #0
 8002940:	d00a      	beq.n	8002958 <prvInitialiseNewTask+0x48>
 8002942:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002946:	f383 8811 	msr	BASEPRI, r3
 800294a:	f3bf 8f6f 	isb	sy
 800294e:	f3bf 8f4f 	dsb	sy
 8002952:	617b      	str	r3, [r7, #20]
 8002954:	bf00      	nop
 8002956:	e7fe      	b.n	8002956 <prvInitialiseNewTask+0x46>
 8002958:	2300      	movs	r3, #0
 800295a:	61fb      	str	r3, [r7, #28]
 800295c:	e012      	b.n	8002984 <prvInitialiseNewTask+0x74>
 800295e:	68ba      	ldr	r2, [r7, #8]
 8002960:	69fb      	ldr	r3, [r7, #28]
 8002962:	4413      	add	r3, r2
 8002964:	7819      	ldrb	r1, [r3, #0]
 8002966:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002968:	69fb      	ldr	r3, [r7, #28]
 800296a:	4413      	add	r3, r2
 800296c:	3334      	adds	r3, #52	; 0x34
 800296e:	460a      	mov	r2, r1
 8002970:	701a      	strb	r2, [r3, #0]
 8002972:	68ba      	ldr	r2, [r7, #8]
 8002974:	69fb      	ldr	r3, [r7, #28]
 8002976:	4413      	add	r3, r2
 8002978:	781b      	ldrb	r3, [r3, #0]
 800297a:	2b00      	cmp	r3, #0
 800297c:	d006      	beq.n	800298c <prvInitialiseNewTask+0x7c>
 800297e:	69fb      	ldr	r3, [r7, #28]
 8002980:	3301      	adds	r3, #1
 8002982:	61fb      	str	r3, [r7, #28]
 8002984:	69fb      	ldr	r3, [r7, #28]
 8002986:	2b0f      	cmp	r3, #15
 8002988:	d9e9      	bls.n	800295e <prvInitialiseNewTask+0x4e>
 800298a:	e000      	b.n	800298e <prvInitialiseNewTask+0x7e>
 800298c:	bf00      	nop
 800298e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002990:	2200      	movs	r2, #0
 8002992:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002996:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002998:	2b06      	cmp	r3, #6
 800299a:	d901      	bls.n	80029a0 <prvInitialiseNewTask+0x90>
 800299c:	2306      	movs	r3, #6
 800299e:	62bb      	str	r3, [r7, #40]	; 0x28
 80029a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029a2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80029a4:	62da      	str	r2, [r3, #44]	; 0x2c
 80029a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029a8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80029aa:	645a      	str	r2, [r3, #68]	; 0x44
 80029ac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029ae:	2200      	movs	r2, #0
 80029b0:	649a      	str	r2, [r3, #72]	; 0x48
 80029b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029b4:	3304      	adds	r3, #4
 80029b6:	4618      	mov	r0, r3
 80029b8:	f7ff fe79 	bl	80026ae <vListInitialiseItem>
 80029bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029be:	3318      	adds	r3, #24
 80029c0:	4618      	mov	r0, r3
 80029c2:	f7ff fe74 	bl	80026ae <vListInitialiseItem>
 80029c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029c8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80029ca:	611a      	str	r2, [r3, #16]
 80029cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80029ce:	f1c3 0207 	rsb	r2, r3, #7
 80029d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029d4:	619a      	str	r2, [r3, #24]
 80029d6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029d8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80029da:	625a      	str	r2, [r3, #36]	; 0x24
 80029dc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029de:	2200      	movs	r2, #0
 80029e0:	64da      	str	r2, [r3, #76]	; 0x4c
 80029e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029e4:	2200      	movs	r2, #0
 80029e6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80029ea:	683a      	ldr	r2, [r7, #0]
 80029ec:	68f9      	ldr	r1, [r7, #12]
 80029ee:	69b8      	ldr	r0, [r7, #24]
 80029f0:	f000 fc0e 	bl	8003210 <pxPortInitialiseStack>
 80029f4:	4602      	mov	r2, r0
 80029f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029f8:	601a      	str	r2, [r3, #0]
 80029fa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80029fc:	2b00      	cmp	r3, #0
 80029fe:	d002      	beq.n	8002a06 <prvInitialiseNewTask+0xf6>
 8002a00:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002a02:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002a04:	601a      	str	r2, [r3, #0]
 8002a06:	bf00      	nop
 8002a08:	3720      	adds	r7, #32
 8002a0a:	46bd      	mov	sp, r7
 8002a0c:	bd80      	pop	{r7, pc}
	...

08002a10 <prvAddNewTaskToReadyList>:
 8002a10:	b580      	push	{r7, lr}
 8002a12:	b082      	sub	sp, #8
 8002a14:	af00      	add	r7, sp, #0
 8002a16:	6078      	str	r0, [r7, #4]
 8002a18:	f000 fce8 	bl	80033ec <vPortEnterCritical>
 8002a1c:	4b2a      	ldr	r3, [pc, #168]	; (8002ac8 <prvAddNewTaskToReadyList+0xb8>)
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	3301      	adds	r3, #1
 8002a22:	4a29      	ldr	r2, [pc, #164]	; (8002ac8 <prvAddNewTaskToReadyList+0xb8>)
 8002a24:	6013      	str	r3, [r2, #0]
 8002a26:	4b29      	ldr	r3, [pc, #164]	; (8002acc <prvAddNewTaskToReadyList+0xbc>)
 8002a28:	681b      	ldr	r3, [r3, #0]
 8002a2a:	2b00      	cmp	r3, #0
 8002a2c:	d109      	bne.n	8002a42 <prvAddNewTaskToReadyList+0x32>
 8002a2e:	4a27      	ldr	r2, [pc, #156]	; (8002acc <prvAddNewTaskToReadyList+0xbc>)
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	6013      	str	r3, [r2, #0]
 8002a34:	4b24      	ldr	r3, [pc, #144]	; (8002ac8 <prvAddNewTaskToReadyList+0xb8>)
 8002a36:	681b      	ldr	r3, [r3, #0]
 8002a38:	2b01      	cmp	r3, #1
 8002a3a:	d110      	bne.n	8002a5e <prvAddNewTaskToReadyList+0x4e>
 8002a3c:	f000 fac0 	bl	8002fc0 <prvInitialiseTaskLists>
 8002a40:	e00d      	b.n	8002a5e <prvAddNewTaskToReadyList+0x4e>
 8002a42:	4b23      	ldr	r3, [pc, #140]	; (8002ad0 <prvAddNewTaskToReadyList+0xc0>)
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	2b00      	cmp	r3, #0
 8002a48:	d109      	bne.n	8002a5e <prvAddNewTaskToReadyList+0x4e>
 8002a4a:	4b20      	ldr	r3, [pc, #128]	; (8002acc <prvAddNewTaskToReadyList+0xbc>)
 8002a4c:	681b      	ldr	r3, [r3, #0]
 8002a4e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002a50:	687b      	ldr	r3, [r7, #4]
 8002a52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002a54:	429a      	cmp	r2, r3
 8002a56:	d802      	bhi.n	8002a5e <prvAddNewTaskToReadyList+0x4e>
 8002a58:	4a1c      	ldr	r2, [pc, #112]	; (8002acc <prvAddNewTaskToReadyList+0xbc>)
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	6013      	str	r3, [r2, #0]
 8002a5e:	4b1d      	ldr	r3, [pc, #116]	; (8002ad4 <prvAddNewTaskToReadyList+0xc4>)
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	3301      	adds	r3, #1
 8002a64:	4a1b      	ldr	r2, [pc, #108]	; (8002ad4 <prvAddNewTaskToReadyList+0xc4>)
 8002a66:	6013      	str	r3, [r2, #0]
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002a6c:	2201      	movs	r2, #1
 8002a6e:	409a      	lsls	r2, r3
 8002a70:	4b19      	ldr	r3, [pc, #100]	; (8002ad8 <prvAddNewTaskToReadyList+0xc8>)
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	4313      	orrs	r3, r2
 8002a76:	4a18      	ldr	r2, [pc, #96]	; (8002ad8 <prvAddNewTaskToReadyList+0xc8>)
 8002a78:	6013      	str	r3, [r2, #0]
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002a7e:	4613      	mov	r3, r2
 8002a80:	009b      	lsls	r3, r3, #2
 8002a82:	4413      	add	r3, r2
 8002a84:	009b      	lsls	r3, r3, #2
 8002a86:	4a15      	ldr	r2, [pc, #84]	; (8002adc <prvAddNewTaskToReadyList+0xcc>)
 8002a88:	441a      	add	r2, r3
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	3304      	adds	r3, #4
 8002a8e:	4619      	mov	r1, r3
 8002a90:	4610      	mov	r0, r2
 8002a92:	f7ff fe18 	bl	80026c6 <vListInsertEnd>
 8002a96:	f000 fcd9 	bl	800344c <vPortExitCritical>
 8002a9a:	4b0d      	ldr	r3, [pc, #52]	; (8002ad0 <prvAddNewTaskToReadyList+0xc0>)
 8002a9c:	681b      	ldr	r3, [r3, #0]
 8002a9e:	2b00      	cmp	r3, #0
 8002aa0:	d00e      	beq.n	8002ac0 <prvAddNewTaskToReadyList+0xb0>
 8002aa2:	4b0a      	ldr	r3, [pc, #40]	; (8002acc <prvAddNewTaskToReadyList+0xbc>)
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002aac:	429a      	cmp	r2, r3
 8002aae:	d207      	bcs.n	8002ac0 <prvAddNewTaskToReadyList+0xb0>
 8002ab0:	4b0b      	ldr	r3, [pc, #44]	; (8002ae0 <prvAddNewTaskToReadyList+0xd0>)
 8002ab2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002ab6:	601a      	str	r2, [r3, #0]
 8002ab8:	f3bf 8f4f 	dsb	sy
 8002abc:	f3bf 8f6f 	isb	sy
 8002ac0:	bf00      	nop
 8002ac2:	3708      	adds	r7, #8
 8002ac4:	46bd      	mov	sp, r7
 8002ac6:	bd80      	pop	{r7, pc}
 8002ac8:	20000474 	.word	0x20000474
 8002acc:	20000374 	.word	0x20000374
 8002ad0:	20000480 	.word	0x20000480
 8002ad4:	20000490 	.word	0x20000490
 8002ad8:	2000047c 	.word	0x2000047c
 8002adc:	20000378 	.word	0x20000378
 8002ae0:	e000ed04 	.word	0xe000ed04

08002ae4 <vTaskDelay>:
 8002ae4:	b580      	push	{r7, lr}
 8002ae6:	b084      	sub	sp, #16
 8002ae8:	af00      	add	r7, sp, #0
 8002aea:	6078      	str	r0, [r7, #4]
 8002aec:	2300      	movs	r3, #0
 8002aee:	60fb      	str	r3, [r7, #12]
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	2b00      	cmp	r3, #0
 8002af4:	d017      	beq.n	8002b26 <vTaskDelay+0x42>
 8002af6:	4b13      	ldr	r3, [pc, #76]	; (8002b44 <vTaskDelay+0x60>)
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	d00a      	beq.n	8002b14 <vTaskDelay+0x30>
 8002afe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002b02:	f383 8811 	msr	BASEPRI, r3
 8002b06:	f3bf 8f6f 	isb	sy
 8002b0a:	f3bf 8f4f 	dsb	sy
 8002b0e:	60bb      	str	r3, [r7, #8]
 8002b10:	bf00      	nop
 8002b12:	e7fe      	b.n	8002b12 <vTaskDelay+0x2e>
 8002b14:	f000 f87a 	bl	8002c0c <vTaskSuspendAll>
 8002b18:	2100      	movs	r1, #0
 8002b1a:	6878      	ldr	r0, [r7, #4]
 8002b1c:	f000 fb12 	bl	8003144 <prvAddCurrentTaskToDelayedList>
 8002b20:	f000 f882 	bl	8002c28 <xTaskResumeAll>
 8002b24:	60f8      	str	r0, [r7, #12]
 8002b26:	68fb      	ldr	r3, [r7, #12]
 8002b28:	2b00      	cmp	r3, #0
 8002b2a:	d107      	bne.n	8002b3c <vTaskDelay+0x58>
 8002b2c:	4b06      	ldr	r3, [pc, #24]	; (8002b48 <vTaskDelay+0x64>)
 8002b2e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002b32:	601a      	str	r2, [r3, #0]
 8002b34:	f3bf 8f4f 	dsb	sy
 8002b38:	f3bf 8f6f 	isb	sy
 8002b3c:	bf00      	nop
 8002b3e:	3710      	adds	r7, #16
 8002b40:	46bd      	mov	sp, r7
 8002b42:	bd80      	pop	{r7, pc}
 8002b44:	2000049c 	.word	0x2000049c
 8002b48:	e000ed04 	.word	0xe000ed04

08002b4c <vTaskStartScheduler>:
 8002b4c:	b580      	push	{r7, lr}
 8002b4e:	b08a      	sub	sp, #40	; 0x28
 8002b50:	af04      	add	r7, sp, #16
 8002b52:	2300      	movs	r3, #0
 8002b54:	60bb      	str	r3, [r7, #8]
 8002b56:	2300      	movs	r3, #0
 8002b58:	607b      	str	r3, [r7, #4]
 8002b5a:	463a      	mov	r2, r7
 8002b5c:	1d39      	adds	r1, r7, #4
 8002b5e:	f107 0308 	add.w	r3, r7, #8
 8002b62:	4618      	mov	r0, r3
 8002b64:	f7fd fafc 	bl	8000160 <vApplicationGetIdleTaskMemory>
 8002b68:	6839      	ldr	r1, [r7, #0]
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	68ba      	ldr	r2, [r7, #8]
 8002b6e:	9202      	str	r2, [sp, #8]
 8002b70:	9301      	str	r3, [sp, #4]
 8002b72:	2300      	movs	r3, #0
 8002b74:	9300      	str	r3, [sp, #0]
 8002b76:	2300      	movs	r3, #0
 8002b78:	460a      	mov	r2, r1
 8002b7a:	491e      	ldr	r1, [pc, #120]	; (8002bf4 <vTaskStartScheduler+0xa8>)
 8002b7c:	481e      	ldr	r0, [pc, #120]	; (8002bf8 <vTaskStartScheduler+0xac>)
 8002b7e:	f7ff fe26 	bl	80027ce <xTaskCreateStatic>
 8002b82:	4603      	mov	r3, r0
 8002b84:	4a1d      	ldr	r2, [pc, #116]	; (8002bfc <vTaskStartScheduler+0xb0>)
 8002b86:	6013      	str	r3, [r2, #0]
 8002b88:	4b1c      	ldr	r3, [pc, #112]	; (8002bfc <vTaskStartScheduler+0xb0>)
 8002b8a:	681b      	ldr	r3, [r3, #0]
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	d002      	beq.n	8002b96 <vTaskStartScheduler+0x4a>
 8002b90:	2301      	movs	r3, #1
 8002b92:	617b      	str	r3, [r7, #20]
 8002b94:	e001      	b.n	8002b9a <vTaskStartScheduler+0x4e>
 8002b96:	2300      	movs	r3, #0
 8002b98:	617b      	str	r3, [r7, #20]
 8002b9a:	697b      	ldr	r3, [r7, #20]
 8002b9c:	2b01      	cmp	r3, #1
 8002b9e:	d116      	bne.n	8002bce <vTaskStartScheduler+0x82>
 8002ba0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002ba4:	f383 8811 	msr	BASEPRI, r3
 8002ba8:	f3bf 8f6f 	isb	sy
 8002bac:	f3bf 8f4f 	dsb	sy
 8002bb0:	613b      	str	r3, [r7, #16]
 8002bb2:	bf00      	nop
 8002bb4:	4b12      	ldr	r3, [pc, #72]	; (8002c00 <vTaskStartScheduler+0xb4>)
 8002bb6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002bba:	601a      	str	r2, [r3, #0]
 8002bbc:	4b11      	ldr	r3, [pc, #68]	; (8002c04 <vTaskStartScheduler+0xb8>)
 8002bbe:	2201      	movs	r2, #1
 8002bc0:	601a      	str	r2, [r3, #0]
 8002bc2:	4b11      	ldr	r3, [pc, #68]	; (8002c08 <vTaskStartScheduler+0xbc>)
 8002bc4:	2200      	movs	r2, #0
 8002bc6:	601a      	str	r2, [r3, #0]
 8002bc8:	f000 fb9e 	bl	8003308 <xPortStartScheduler>
 8002bcc:	e00e      	b.n	8002bec <vTaskStartScheduler+0xa0>
 8002bce:	697b      	ldr	r3, [r7, #20]
 8002bd0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002bd4:	d10a      	bne.n	8002bec <vTaskStartScheduler+0xa0>
 8002bd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002bda:	f383 8811 	msr	BASEPRI, r3
 8002bde:	f3bf 8f6f 	isb	sy
 8002be2:	f3bf 8f4f 	dsb	sy
 8002be6:	60fb      	str	r3, [r7, #12]
 8002be8:	bf00      	nop
 8002bea:	e7fe      	b.n	8002bea <vTaskStartScheduler+0x9e>
 8002bec:	bf00      	nop
 8002bee:	3718      	adds	r7, #24
 8002bf0:	46bd      	mov	sp, r7
 8002bf2:	bd80      	pop	{r7, pc}
 8002bf4:	08004eb4 	.word	0x08004eb4
 8002bf8:	08002f91 	.word	0x08002f91
 8002bfc:	20000498 	.word	0x20000498
 8002c00:	20000494 	.word	0x20000494
 8002c04:	20000480 	.word	0x20000480
 8002c08:	20000478 	.word	0x20000478

08002c0c <vTaskSuspendAll>:
 8002c0c:	b480      	push	{r7}
 8002c0e:	af00      	add	r7, sp, #0
 8002c10:	4b04      	ldr	r3, [pc, #16]	; (8002c24 <vTaskSuspendAll+0x18>)
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	3301      	adds	r3, #1
 8002c16:	4a03      	ldr	r2, [pc, #12]	; (8002c24 <vTaskSuspendAll+0x18>)
 8002c18:	6013      	str	r3, [r2, #0]
 8002c1a:	bf00      	nop
 8002c1c:	46bd      	mov	sp, r7
 8002c1e:	bc80      	pop	{r7}
 8002c20:	4770      	bx	lr
 8002c22:	bf00      	nop
 8002c24:	2000049c 	.word	0x2000049c

08002c28 <xTaskResumeAll>:
 8002c28:	b580      	push	{r7, lr}
 8002c2a:	b084      	sub	sp, #16
 8002c2c:	af00      	add	r7, sp, #0
 8002c2e:	2300      	movs	r3, #0
 8002c30:	60fb      	str	r3, [r7, #12]
 8002c32:	2300      	movs	r3, #0
 8002c34:	60bb      	str	r3, [r7, #8]
 8002c36:	4b41      	ldr	r3, [pc, #260]	; (8002d3c <xTaskResumeAll+0x114>)
 8002c38:	681b      	ldr	r3, [r3, #0]
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d10a      	bne.n	8002c54 <xTaskResumeAll+0x2c>
 8002c3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c42:	f383 8811 	msr	BASEPRI, r3
 8002c46:	f3bf 8f6f 	isb	sy
 8002c4a:	f3bf 8f4f 	dsb	sy
 8002c4e:	603b      	str	r3, [r7, #0]
 8002c50:	bf00      	nop
 8002c52:	e7fe      	b.n	8002c52 <xTaskResumeAll+0x2a>
 8002c54:	f000 fbca 	bl	80033ec <vPortEnterCritical>
 8002c58:	4b38      	ldr	r3, [pc, #224]	; (8002d3c <xTaskResumeAll+0x114>)
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	3b01      	subs	r3, #1
 8002c5e:	4a37      	ldr	r2, [pc, #220]	; (8002d3c <xTaskResumeAll+0x114>)
 8002c60:	6013      	str	r3, [r2, #0]
 8002c62:	4b36      	ldr	r3, [pc, #216]	; (8002d3c <xTaskResumeAll+0x114>)
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	2b00      	cmp	r3, #0
 8002c68:	d161      	bne.n	8002d2e <xTaskResumeAll+0x106>
 8002c6a:	4b35      	ldr	r3, [pc, #212]	; (8002d40 <xTaskResumeAll+0x118>)
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d05d      	beq.n	8002d2e <xTaskResumeAll+0x106>
 8002c72:	e02e      	b.n	8002cd2 <xTaskResumeAll+0xaa>
 8002c74:	4b33      	ldr	r3, [pc, #204]	; (8002d44 <xTaskResumeAll+0x11c>)
 8002c76:	68db      	ldr	r3, [r3, #12]
 8002c78:	68db      	ldr	r3, [r3, #12]
 8002c7a:	60fb      	str	r3, [r7, #12]
 8002c7c:	68fb      	ldr	r3, [r7, #12]
 8002c7e:	3318      	adds	r3, #24
 8002c80:	4618      	mov	r0, r3
 8002c82:	f7ff fd7b 	bl	800277c <uxListRemove>
 8002c86:	68fb      	ldr	r3, [r7, #12]
 8002c88:	3304      	adds	r3, #4
 8002c8a:	4618      	mov	r0, r3
 8002c8c:	f7ff fd76 	bl	800277c <uxListRemove>
 8002c90:	68fb      	ldr	r3, [r7, #12]
 8002c92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002c94:	2201      	movs	r2, #1
 8002c96:	409a      	lsls	r2, r3
 8002c98:	4b2b      	ldr	r3, [pc, #172]	; (8002d48 <xTaskResumeAll+0x120>)
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	4313      	orrs	r3, r2
 8002c9e:	4a2a      	ldr	r2, [pc, #168]	; (8002d48 <xTaskResumeAll+0x120>)
 8002ca0:	6013      	str	r3, [r2, #0]
 8002ca2:	68fb      	ldr	r3, [r7, #12]
 8002ca4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002ca6:	4613      	mov	r3, r2
 8002ca8:	009b      	lsls	r3, r3, #2
 8002caa:	4413      	add	r3, r2
 8002cac:	009b      	lsls	r3, r3, #2
 8002cae:	4a27      	ldr	r2, [pc, #156]	; (8002d4c <xTaskResumeAll+0x124>)
 8002cb0:	441a      	add	r2, r3
 8002cb2:	68fb      	ldr	r3, [r7, #12]
 8002cb4:	3304      	adds	r3, #4
 8002cb6:	4619      	mov	r1, r3
 8002cb8:	4610      	mov	r0, r2
 8002cba:	f7ff fd04 	bl	80026c6 <vListInsertEnd>
 8002cbe:	68fb      	ldr	r3, [r7, #12]
 8002cc0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002cc2:	4b23      	ldr	r3, [pc, #140]	; (8002d50 <xTaskResumeAll+0x128>)
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cc8:	429a      	cmp	r2, r3
 8002cca:	d302      	bcc.n	8002cd2 <xTaskResumeAll+0xaa>
 8002ccc:	4b21      	ldr	r3, [pc, #132]	; (8002d54 <xTaskResumeAll+0x12c>)
 8002cce:	2201      	movs	r2, #1
 8002cd0:	601a      	str	r2, [r3, #0]
 8002cd2:	4b1c      	ldr	r3, [pc, #112]	; (8002d44 <xTaskResumeAll+0x11c>)
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d1cc      	bne.n	8002c74 <xTaskResumeAll+0x4c>
 8002cda:	68fb      	ldr	r3, [r7, #12]
 8002cdc:	2b00      	cmp	r3, #0
 8002cde:	d001      	beq.n	8002ce4 <xTaskResumeAll+0xbc>
 8002ce0:	f000 fa0c 	bl	80030fc <prvResetNextTaskUnblockTime>
 8002ce4:	4b1c      	ldr	r3, [pc, #112]	; (8002d58 <xTaskResumeAll+0x130>)
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	607b      	str	r3, [r7, #4]
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	d010      	beq.n	8002d12 <xTaskResumeAll+0xea>
 8002cf0:	f000 f836 	bl	8002d60 <xTaskIncrementTick>
 8002cf4:	4603      	mov	r3, r0
 8002cf6:	2b00      	cmp	r3, #0
 8002cf8:	d002      	beq.n	8002d00 <xTaskResumeAll+0xd8>
 8002cfa:	4b16      	ldr	r3, [pc, #88]	; (8002d54 <xTaskResumeAll+0x12c>)
 8002cfc:	2201      	movs	r2, #1
 8002cfe:	601a      	str	r2, [r3, #0]
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	3b01      	subs	r3, #1
 8002d04:	607b      	str	r3, [r7, #4]
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	d1f1      	bne.n	8002cf0 <xTaskResumeAll+0xc8>
 8002d0c:	4b12      	ldr	r3, [pc, #72]	; (8002d58 <xTaskResumeAll+0x130>)
 8002d0e:	2200      	movs	r2, #0
 8002d10:	601a      	str	r2, [r3, #0]
 8002d12:	4b10      	ldr	r3, [pc, #64]	; (8002d54 <xTaskResumeAll+0x12c>)
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d009      	beq.n	8002d2e <xTaskResumeAll+0x106>
 8002d1a:	2301      	movs	r3, #1
 8002d1c:	60bb      	str	r3, [r7, #8]
 8002d1e:	4b0f      	ldr	r3, [pc, #60]	; (8002d5c <xTaskResumeAll+0x134>)
 8002d20:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002d24:	601a      	str	r2, [r3, #0]
 8002d26:	f3bf 8f4f 	dsb	sy
 8002d2a:	f3bf 8f6f 	isb	sy
 8002d2e:	f000 fb8d 	bl	800344c <vPortExitCritical>
 8002d32:	68bb      	ldr	r3, [r7, #8]
 8002d34:	4618      	mov	r0, r3
 8002d36:	3710      	adds	r7, #16
 8002d38:	46bd      	mov	sp, r7
 8002d3a:	bd80      	pop	{r7, pc}
 8002d3c:	2000049c 	.word	0x2000049c
 8002d40:	20000474 	.word	0x20000474
 8002d44:	20000434 	.word	0x20000434
 8002d48:	2000047c 	.word	0x2000047c
 8002d4c:	20000378 	.word	0x20000378
 8002d50:	20000374 	.word	0x20000374
 8002d54:	20000488 	.word	0x20000488
 8002d58:	20000484 	.word	0x20000484
 8002d5c:	e000ed04 	.word	0xe000ed04

08002d60 <xTaskIncrementTick>:
 8002d60:	b580      	push	{r7, lr}
 8002d62:	b086      	sub	sp, #24
 8002d64:	af00      	add	r7, sp, #0
 8002d66:	2300      	movs	r3, #0
 8002d68:	617b      	str	r3, [r7, #20]
 8002d6a:	4b51      	ldr	r3, [pc, #324]	; (8002eb0 <xTaskIncrementTick+0x150>)
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	f040 808d 	bne.w	8002e8e <xTaskIncrementTick+0x12e>
 8002d74:	4b4f      	ldr	r3, [pc, #316]	; (8002eb4 <xTaskIncrementTick+0x154>)
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	3301      	adds	r3, #1
 8002d7a:	613b      	str	r3, [r7, #16]
 8002d7c:	4a4d      	ldr	r2, [pc, #308]	; (8002eb4 <xTaskIncrementTick+0x154>)
 8002d7e:	693b      	ldr	r3, [r7, #16]
 8002d80:	6013      	str	r3, [r2, #0]
 8002d82:	693b      	ldr	r3, [r7, #16]
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d120      	bne.n	8002dca <xTaskIncrementTick+0x6a>
 8002d88:	4b4b      	ldr	r3, [pc, #300]	; (8002eb8 <xTaskIncrementTick+0x158>)
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	d00a      	beq.n	8002da8 <xTaskIncrementTick+0x48>
 8002d92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002d96:	f383 8811 	msr	BASEPRI, r3
 8002d9a:	f3bf 8f6f 	isb	sy
 8002d9e:	f3bf 8f4f 	dsb	sy
 8002da2:	603b      	str	r3, [r7, #0]
 8002da4:	bf00      	nop
 8002da6:	e7fe      	b.n	8002da6 <xTaskIncrementTick+0x46>
 8002da8:	4b43      	ldr	r3, [pc, #268]	; (8002eb8 <xTaskIncrementTick+0x158>)
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	60fb      	str	r3, [r7, #12]
 8002dae:	4b43      	ldr	r3, [pc, #268]	; (8002ebc <xTaskIncrementTick+0x15c>)
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	4a41      	ldr	r2, [pc, #260]	; (8002eb8 <xTaskIncrementTick+0x158>)
 8002db4:	6013      	str	r3, [r2, #0]
 8002db6:	4a41      	ldr	r2, [pc, #260]	; (8002ebc <xTaskIncrementTick+0x15c>)
 8002db8:	68fb      	ldr	r3, [r7, #12]
 8002dba:	6013      	str	r3, [r2, #0]
 8002dbc:	4b40      	ldr	r3, [pc, #256]	; (8002ec0 <xTaskIncrementTick+0x160>)
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	3301      	adds	r3, #1
 8002dc2:	4a3f      	ldr	r2, [pc, #252]	; (8002ec0 <xTaskIncrementTick+0x160>)
 8002dc4:	6013      	str	r3, [r2, #0]
 8002dc6:	f000 f999 	bl	80030fc <prvResetNextTaskUnblockTime>
 8002dca:	4b3e      	ldr	r3, [pc, #248]	; (8002ec4 <xTaskIncrementTick+0x164>)
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	693a      	ldr	r2, [r7, #16]
 8002dd0:	429a      	cmp	r2, r3
 8002dd2:	d34d      	bcc.n	8002e70 <xTaskIncrementTick+0x110>
 8002dd4:	4b38      	ldr	r3, [pc, #224]	; (8002eb8 <xTaskIncrementTick+0x158>)
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d101      	bne.n	8002de2 <xTaskIncrementTick+0x82>
 8002dde:	2301      	movs	r3, #1
 8002de0:	e000      	b.n	8002de4 <xTaskIncrementTick+0x84>
 8002de2:	2300      	movs	r3, #0
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	d004      	beq.n	8002df2 <xTaskIncrementTick+0x92>
 8002de8:	4b36      	ldr	r3, [pc, #216]	; (8002ec4 <xTaskIncrementTick+0x164>)
 8002dea:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002dee:	601a      	str	r2, [r3, #0]
 8002df0:	e03e      	b.n	8002e70 <xTaskIncrementTick+0x110>
 8002df2:	4b31      	ldr	r3, [pc, #196]	; (8002eb8 <xTaskIncrementTick+0x158>)
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	68db      	ldr	r3, [r3, #12]
 8002df8:	68db      	ldr	r3, [r3, #12]
 8002dfa:	60bb      	str	r3, [r7, #8]
 8002dfc:	68bb      	ldr	r3, [r7, #8]
 8002dfe:	685b      	ldr	r3, [r3, #4]
 8002e00:	607b      	str	r3, [r7, #4]
 8002e02:	693a      	ldr	r2, [r7, #16]
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	429a      	cmp	r2, r3
 8002e08:	d203      	bcs.n	8002e12 <xTaskIncrementTick+0xb2>
 8002e0a:	4a2e      	ldr	r2, [pc, #184]	; (8002ec4 <xTaskIncrementTick+0x164>)
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	6013      	str	r3, [r2, #0]
 8002e10:	e02e      	b.n	8002e70 <xTaskIncrementTick+0x110>
 8002e12:	68bb      	ldr	r3, [r7, #8]
 8002e14:	3304      	adds	r3, #4
 8002e16:	4618      	mov	r0, r3
 8002e18:	f7ff fcb0 	bl	800277c <uxListRemove>
 8002e1c:	68bb      	ldr	r3, [r7, #8]
 8002e1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002e20:	2b00      	cmp	r3, #0
 8002e22:	d004      	beq.n	8002e2e <xTaskIncrementTick+0xce>
 8002e24:	68bb      	ldr	r3, [r7, #8]
 8002e26:	3318      	adds	r3, #24
 8002e28:	4618      	mov	r0, r3
 8002e2a:	f7ff fca7 	bl	800277c <uxListRemove>
 8002e2e:	68bb      	ldr	r3, [r7, #8]
 8002e30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e32:	2201      	movs	r2, #1
 8002e34:	409a      	lsls	r2, r3
 8002e36:	4b24      	ldr	r3, [pc, #144]	; (8002ec8 <xTaskIncrementTick+0x168>)
 8002e38:	681b      	ldr	r3, [r3, #0]
 8002e3a:	4313      	orrs	r3, r2
 8002e3c:	4a22      	ldr	r2, [pc, #136]	; (8002ec8 <xTaskIncrementTick+0x168>)
 8002e3e:	6013      	str	r3, [r2, #0]
 8002e40:	68bb      	ldr	r3, [r7, #8]
 8002e42:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002e44:	4613      	mov	r3, r2
 8002e46:	009b      	lsls	r3, r3, #2
 8002e48:	4413      	add	r3, r2
 8002e4a:	009b      	lsls	r3, r3, #2
 8002e4c:	4a1f      	ldr	r2, [pc, #124]	; (8002ecc <xTaskIncrementTick+0x16c>)
 8002e4e:	441a      	add	r2, r3
 8002e50:	68bb      	ldr	r3, [r7, #8]
 8002e52:	3304      	adds	r3, #4
 8002e54:	4619      	mov	r1, r3
 8002e56:	4610      	mov	r0, r2
 8002e58:	f7ff fc35 	bl	80026c6 <vListInsertEnd>
 8002e5c:	68bb      	ldr	r3, [r7, #8]
 8002e5e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002e60:	4b1b      	ldr	r3, [pc, #108]	; (8002ed0 <xTaskIncrementTick+0x170>)
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e66:	429a      	cmp	r2, r3
 8002e68:	d3b4      	bcc.n	8002dd4 <xTaskIncrementTick+0x74>
 8002e6a:	2301      	movs	r3, #1
 8002e6c:	617b      	str	r3, [r7, #20]
 8002e6e:	e7b1      	b.n	8002dd4 <xTaskIncrementTick+0x74>
 8002e70:	4b17      	ldr	r3, [pc, #92]	; (8002ed0 <xTaskIncrementTick+0x170>)
 8002e72:	681b      	ldr	r3, [r3, #0]
 8002e74:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002e76:	4915      	ldr	r1, [pc, #84]	; (8002ecc <xTaskIncrementTick+0x16c>)
 8002e78:	4613      	mov	r3, r2
 8002e7a:	009b      	lsls	r3, r3, #2
 8002e7c:	4413      	add	r3, r2
 8002e7e:	009b      	lsls	r3, r3, #2
 8002e80:	440b      	add	r3, r1
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	2b01      	cmp	r3, #1
 8002e86:	d907      	bls.n	8002e98 <xTaskIncrementTick+0x138>
 8002e88:	2301      	movs	r3, #1
 8002e8a:	617b      	str	r3, [r7, #20]
 8002e8c:	e004      	b.n	8002e98 <xTaskIncrementTick+0x138>
 8002e8e:	4b11      	ldr	r3, [pc, #68]	; (8002ed4 <xTaskIncrementTick+0x174>)
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	3301      	adds	r3, #1
 8002e94:	4a0f      	ldr	r2, [pc, #60]	; (8002ed4 <xTaskIncrementTick+0x174>)
 8002e96:	6013      	str	r3, [r2, #0]
 8002e98:	4b0f      	ldr	r3, [pc, #60]	; (8002ed8 <xTaskIncrementTick+0x178>)
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	2b00      	cmp	r3, #0
 8002e9e:	d001      	beq.n	8002ea4 <xTaskIncrementTick+0x144>
 8002ea0:	2301      	movs	r3, #1
 8002ea2:	617b      	str	r3, [r7, #20]
 8002ea4:	697b      	ldr	r3, [r7, #20]
 8002ea6:	4618      	mov	r0, r3
 8002ea8:	3718      	adds	r7, #24
 8002eaa:	46bd      	mov	sp, r7
 8002eac:	bd80      	pop	{r7, pc}
 8002eae:	bf00      	nop
 8002eb0:	2000049c 	.word	0x2000049c
 8002eb4:	20000478 	.word	0x20000478
 8002eb8:	2000042c 	.word	0x2000042c
 8002ebc:	20000430 	.word	0x20000430
 8002ec0:	2000048c 	.word	0x2000048c
 8002ec4:	20000494 	.word	0x20000494
 8002ec8:	2000047c 	.word	0x2000047c
 8002ecc:	20000378 	.word	0x20000378
 8002ed0:	20000374 	.word	0x20000374
 8002ed4:	20000484 	.word	0x20000484
 8002ed8:	20000488 	.word	0x20000488

08002edc <vTaskSwitchContext>:
 8002edc:	b480      	push	{r7}
 8002ede:	b087      	sub	sp, #28
 8002ee0:	af00      	add	r7, sp, #0
 8002ee2:	4b26      	ldr	r3, [pc, #152]	; (8002f7c <vTaskSwitchContext+0xa0>)
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d003      	beq.n	8002ef2 <vTaskSwitchContext+0x16>
 8002eea:	4b25      	ldr	r3, [pc, #148]	; (8002f80 <vTaskSwitchContext+0xa4>)
 8002eec:	2201      	movs	r2, #1
 8002eee:	601a      	str	r2, [r3, #0]
 8002ef0:	e03f      	b.n	8002f72 <vTaskSwitchContext+0x96>
 8002ef2:	4b23      	ldr	r3, [pc, #140]	; (8002f80 <vTaskSwitchContext+0xa4>)
 8002ef4:	2200      	movs	r2, #0
 8002ef6:	601a      	str	r2, [r3, #0]
 8002ef8:	4b22      	ldr	r3, [pc, #136]	; (8002f84 <vTaskSwitchContext+0xa8>)
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	60fb      	str	r3, [r7, #12]
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	fab3 f383 	clz	r3, r3
 8002f04:	72fb      	strb	r3, [r7, #11]
 8002f06:	7afb      	ldrb	r3, [r7, #11]
 8002f08:	f1c3 031f 	rsb	r3, r3, #31
 8002f0c:	617b      	str	r3, [r7, #20]
 8002f0e:	491e      	ldr	r1, [pc, #120]	; (8002f88 <vTaskSwitchContext+0xac>)
 8002f10:	697a      	ldr	r2, [r7, #20]
 8002f12:	4613      	mov	r3, r2
 8002f14:	009b      	lsls	r3, r3, #2
 8002f16:	4413      	add	r3, r2
 8002f18:	009b      	lsls	r3, r3, #2
 8002f1a:	440b      	add	r3, r1
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	2b00      	cmp	r3, #0
 8002f20:	d10a      	bne.n	8002f38 <vTaskSwitchContext+0x5c>
 8002f22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002f26:	f383 8811 	msr	BASEPRI, r3
 8002f2a:	f3bf 8f6f 	isb	sy
 8002f2e:	f3bf 8f4f 	dsb	sy
 8002f32:	607b      	str	r3, [r7, #4]
 8002f34:	bf00      	nop
 8002f36:	e7fe      	b.n	8002f36 <vTaskSwitchContext+0x5a>
 8002f38:	697a      	ldr	r2, [r7, #20]
 8002f3a:	4613      	mov	r3, r2
 8002f3c:	009b      	lsls	r3, r3, #2
 8002f3e:	4413      	add	r3, r2
 8002f40:	009b      	lsls	r3, r3, #2
 8002f42:	4a11      	ldr	r2, [pc, #68]	; (8002f88 <vTaskSwitchContext+0xac>)
 8002f44:	4413      	add	r3, r2
 8002f46:	613b      	str	r3, [r7, #16]
 8002f48:	693b      	ldr	r3, [r7, #16]
 8002f4a:	685b      	ldr	r3, [r3, #4]
 8002f4c:	685a      	ldr	r2, [r3, #4]
 8002f4e:	693b      	ldr	r3, [r7, #16]
 8002f50:	605a      	str	r2, [r3, #4]
 8002f52:	693b      	ldr	r3, [r7, #16]
 8002f54:	685a      	ldr	r2, [r3, #4]
 8002f56:	693b      	ldr	r3, [r7, #16]
 8002f58:	3308      	adds	r3, #8
 8002f5a:	429a      	cmp	r2, r3
 8002f5c:	d104      	bne.n	8002f68 <vTaskSwitchContext+0x8c>
 8002f5e:	693b      	ldr	r3, [r7, #16]
 8002f60:	685b      	ldr	r3, [r3, #4]
 8002f62:	685a      	ldr	r2, [r3, #4]
 8002f64:	693b      	ldr	r3, [r7, #16]
 8002f66:	605a      	str	r2, [r3, #4]
 8002f68:	693b      	ldr	r3, [r7, #16]
 8002f6a:	685b      	ldr	r3, [r3, #4]
 8002f6c:	68db      	ldr	r3, [r3, #12]
 8002f6e:	4a07      	ldr	r2, [pc, #28]	; (8002f8c <vTaskSwitchContext+0xb0>)
 8002f70:	6013      	str	r3, [r2, #0]
 8002f72:	bf00      	nop
 8002f74:	371c      	adds	r7, #28
 8002f76:	46bd      	mov	sp, r7
 8002f78:	bc80      	pop	{r7}
 8002f7a:	4770      	bx	lr
 8002f7c:	2000049c 	.word	0x2000049c
 8002f80:	20000488 	.word	0x20000488
 8002f84:	2000047c 	.word	0x2000047c
 8002f88:	20000378 	.word	0x20000378
 8002f8c:	20000374 	.word	0x20000374

08002f90 <prvIdleTask>:
 8002f90:	b580      	push	{r7, lr}
 8002f92:	b082      	sub	sp, #8
 8002f94:	af00      	add	r7, sp, #0
 8002f96:	6078      	str	r0, [r7, #4]
 8002f98:	f000 f852 	bl	8003040 <prvCheckTasksWaitingTermination>
 8002f9c:	4b06      	ldr	r3, [pc, #24]	; (8002fb8 <prvIdleTask+0x28>)
 8002f9e:	681b      	ldr	r3, [r3, #0]
 8002fa0:	2b01      	cmp	r3, #1
 8002fa2:	d9f9      	bls.n	8002f98 <prvIdleTask+0x8>
 8002fa4:	4b05      	ldr	r3, [pc, #20]	; (8002fbc <prvIdleTask+0x2c>)
 8002fa6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002faa:	601a      	str	r2, [r3, #0]
 8002fac:	f3bf 8f4f 	dsb	sy
 8002fb0:	f3bf 8f6f 	isb	sy
 8002fb4:	e7f0      	b.n	8002f98 <prvIdleTask+0x8>
 8002fb6:	bf00      	nop
 8002fb8:	20000378 	.word	0x20000378
 8002fbc:	e000ed04 	.word	0xe000ed04

08002fc0 <prvInitialiseTaskLists>:
 8002fc0:	b580      	push	{r7, lr}
 8002fc2:	b082      	sub	sp, #8
 8002fc4:	af00      	add	r7, sp, #0
 8002fc6:	2300      	movs	r3, #0
 8002fc8:	607b      	str	r3, [r7, #4]
 8002fca:	e00c      	b.n	8002fe6 <prvInitialiseTaskLists+0x26>
 8002fcc:	687a      	ldr	r2, [r7, #4]
 8002fce:	4613      	mov	r3, r2
 8002fd0:	009b      	lsls	r3, r3, #2
 8002fd2:	4413      	add	r3, r2
 8002fd4:	009b      	lsls	r3, r3, #2
 8002fd6:	4a12      	ldr	r2, [pc, #72]	; (8003020 <prvInitialiseTaskLists+0x60>)
 8002fd8:	4413      	add	r3, r2
 8002fda:	4618      	mov	r0, r3
 8002fdc:	f7ff fb48 	bl	8002670 <vListInitialise>
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	3301      	adds	r3, #1
 8002fe4:	607b      	str	r3, [r7, #4]
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	2b06      	cmp	r3, #6
 8002fea:	d9ef      	bls.n	8002fcc <prvInitialiseTaskLists+0xc>
 8002fec:	480d      	ldr	r0, [pc, #52]	; (8003024 <prvInitialiseTaskLists+0x64>)
 8002fee:	f7ff fb3f 	bl	8002670 <vListInitialise>
 8002ff2:	480d      	ldr	r0, [pc, #52]	; (8003028 <prvInitialiseTaskLists+0x68>)
 8002ff4:	f7ff fb3c 	bl	8002670 <vListInitialise>
 8002ff8:	480c      	ldr	r0, [pc, #48]	; (800302c <prvInitialiseTaskLists+0x6c>)
 8002ffa:	f7ff fb39 	bl	8002670 <vListInitialise>
 8002ffe:	480c      	ldr	r0, [pc, #48]	; (8003030 <prvInitialiseTaskLists+0x70>)
 8003000:	f7ff fb36 	bl	8002670 <vListInitialise>
 8003004:	480b      	ldr	r0, [pc, #44]	; (8003034 <prvInitialiseTaskLists+0x74>)
 8003006:	f7ff fb33 	bl	8002670 <vListInitialise>
 800300a:	4b0b      	ldr	r3, [pc, #44]	; (8003038 <prvInitialiseTaskLists+0x78>)
 800300c:	4a05      	ldr	r2, [pc, #20]	; (8003024 <prvInitialiseTaskLists+0x64>)
 800300e:	601a      	str	r2, [r3, #0]
 8003010:	4b0a      	ldr	r3, [pc, #40]	; (800303c <prvInitialiseTaskLists+0x7c>)
 8003012:	4a05      	ldr	r2, [pc, #20]	; (8003028 <prvInitialiseTaskLists+0x68>)
 8003014:	601a      	str	r2, [r3, #0]
 8003016:	bf00      	nop
 8003018:	3708      	adds	r7, #8
 800301a:	46bd      	mov	sp, r7
 800301c:	bd80      	pop	{r7, pc}
 800301e:	bf00      	nop
 8003020:	20000378 	.word	0x20000378
 8003024:	20000404 	.word	0x20000404
 8003028:	20000418 	.word	0x20000418
 800302c:	20000434 	.word	0x20000434
 8003030:	20000448 	.word	0x20000448
 8003034:	20000460 	.word	0x20000460
 8003038:	2000042c 	.word	0x2000042c
 800303c:	20000430 	.word	0x20000430

08003040 <prvCheckTasksWaitingTermination>:
 8003040:	b580      	push	{r7, lr}
 8003042:	b082      	sub	sp, #8
 8003044:	af00      	add	r7, sp, #0
 8003046:	e019      	b.n	800307c <prvCheckTasksWaitingTermination+0x3c>
 8003048:	f000 f9d0 	bl	80033ec <vPortEnterCritical>
 800304c:	4b10      	ldr	r3, [pc, #64]	; (8003090 <prvCheckTasksWaitingTermination+0x50>)
 800304e:	68db      	ldr	r3, [r3, #12]
 8003050:	68db      	ldr	r3, [r3, #12]
 8003052:	607b      	str	r3, [r7, #4]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	3304      	adds	r3, #4
 8003058:	4618      	mov	r0, r3
 800305a:	f7ff fb8f 	bl	800277c <uxListRemove>
 800305e:	4b0d      	ldr	r3, [pc, #52]	; (8003094 <prvCheckTasksWaitingTermination+0x54>)
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	3b01      	subs	r3, #1
 8003064:	4a0b      	ldr	r2, [pc, #44]	; (8003094 <prvCheckTasksWaitingTermination+0x54>)
 8003066:	6013      	str	r3, [r2, #0]
 8003068:	4b0b      	ldr	r3, [pc, #44]	; (8003098 <prvCheckTasksWaitingTermination+0x58>)
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	3b01      	subs	r3, #1
 800306e:	4a0a      	ldr	r2, [pc, #40]	; (8003098 <prvCheckTasksWaitingTermination+0x58>)
 8003070:	6013      	str	r3, [r2, #0]
 8003072:	f000 f9eb 	bl	800344c <vPortExitCritical>
 8003076:	6878      	ldr	r0, [r7, #4]
 8003078:	f000 f810 	bl	800309c <prvDeleteTCB>
 800307c:	4b06      	ldr	r3, [pc, #24]	; (8003098 <prvCheckTasksWaitingTermination+0x58>)
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	2b00      	cmp	r3, #0
 8003082:	d1e1      	bne.n	8003048 <prvCheckTasksWaitingTermination+0x8>
 8003084:	bf00      	nop
 8003086:	bf00      	nop
 8003088:	3708      	adds	r7, #8
 800308a:	46bd      	mov	sp, r7
 800308c:	bd80      	pop	{r7, pc}
 800308e:	bf00      	nop
 8003090:	20000448 	.word	0x20000448
 8003094:	20000474 	.word	0x20000474
 8003098:	2000045c 	.word	0x2000045c

0800309c <prvDeleteTCB>:
 800309c:	b580      	push	{r7, lr}
 800309e:	b084      	sub	sp, #16
 80030a0:	af00      	add	r7, sp, #0
 80030a2:	6078      	str	r0, [r7, #4]
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	d108      	bne.n	80030c0 <prvDeleteTCB+0x24>
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030b2:	4618      	mov	r0, r3
 80030b4:	f000 fb20 	bl	80036f8 <vPortFree>
 80030b8:	6878      	ldr	r0, [r7, #4]
 80030ba:	f000 fb1d 	bl	80036f8 <vPortFree>
 80030be:	e018      	b.n	80030f2 <prvDeleteTCB+0x56>
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80030c6:	2b01      	cmp	r3, #1
 80030c8:	d103      	bne.n	80030d2 <prvDeleteTCB+0x36>
 80030ca:	6878      	ldr	r0, [r7, #4]
 80030cc:	f000 fb14 	bl	80036f8 <vPortFree>
 80030d0:	e00f      	b.n	80030f2 <prvDeleteTCB+0x56>
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80030d8:	2b02      	cmp	r3, #2
 80030da:	d00a      	beq.n	80030f2 <prvDeleteTCB+0x56>
 80030dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80030e0:	f383 8811 	msr	BASEPRI, r3
 80030e4:	f3bf 8f6f 	isb	sy
 80030e8:	f3bf 8f4f 	dsb	sy
 80030ec:	60fb      	str	r3, [r7, #12]
 80030ee:	bf00      	nop
 80030f0:	e7fe      	b.n	80030f0 <prvDeleteTCB+0x54>
 80030f2:	bf00      	nop
 80030f4:	3710      	adds	r7, #16
 80030f6:	46bd      	mov	sp, r7
 80030f8:	bd80      	pop	{r7, pc}
	...

080030fc <prvResetNextTaskUnblockTime>:
 80030fc:	b480      	push	{r7}
 80030fe:	b083      	sub	sp, #12
 8003100:	af00      	add	r7, sp, #0
 8003102:	4b0e      	ldr	r3, [pc, #56]	; (800313c <prvResetNextTaskUnblockTime+0x40>)
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	681b      	ldr	r3, [r3, #0]
 8003108:	2b00      	cmp	r3, #0
 800310a:	d101      	bne.n	8003110 <prvResetNextTaskUnblockTime+0x14>
 800310c:	2301      	movs	r3, #1
 800310e:	e000      	b.n	8003112 <prvResetNextTaskUnblockTime+0x16>
 8003110:	2300      	movs	r3, #0
 8003112:	2b00      	cmp	r3, #0
 8003114:	d004      	beq.n	8003120 <prvResetNextTaskUnblockTime+0x24>
 8003116:	4b0a      	ldr	r3, [pc, #40]	; (8003140 <prvResetNextTaskUnblockTime+0x44>)
 8003118:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800311c:	601a      	str	r2, [r3, #0]
 800311e:	e008      	b.n	8003132 <prvResetNextTaskUnblockTime+0x36>
 8003120:	4b06      	ldr	r3, [pc, #24]	; (800313c <prvResetNextTaskUnblockTime+0x40>)
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	68db      	ldr	r3, [r3, #12]
 8003126:	68db      	ldr	r3, [r3, #12]
 8003128:	607b      	str	r3, [r7, #4]
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	685b      	ldr	r3, [r3, #4]
 800312e:	4a04      	ldr	r2, [pc, #16]	; (8003140 <prvResetNextTaskUnblockTime+0x44>)
 8003130:	6013      	str	r3, [r2, #0]
 8003132:	bf00      	nop
 8003134:	370c      	adds	r7, #12
 8003136:	46bd      	mov	sp, r7
 8003138:	bc80      	pop	{r7}
 800313a:	4770      	bx	lr
 800313c:	2000042c 	.word	0x2000042c
 8003140:	20000494 	.word	0x20000494

08003144 <prvAddCurrentTaskToDelayedList>:
 8003144:	b580      	push	{r7, lr}
 8003146:	b084      	sub	sp, #16
 8003148:	af00      	add	r7, sp, #0
 800314a:	6078      	str	r0, [r7, #4]
 800314c:	6039      	str	r1, [r7, #0]
 800314e:	4b29      	ldr	r3, [pc, #164]	; (80031f4 <prvAddCurrentTaskToDelayedList+0xb0>)
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	60fb      	str	r3, [r7, #12]
 8003154:	4b28      	ldr	r3, [pc, #160]	; (80031f8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003156:	681b      	ldr	r3, [r3, #0]
 8003158:	3304      	adds	r3, #4
 800315a:	4618      	mov	r0, r3
 800315c:	f7ff fb0e 	bl	800277c <uxListRemove>
 8003160:	4603      	mov	r3, r0
 8003162:	2b00      	cmp	r3, #0
 8003164:	d10b      	bne.n	800317e <prvAddCurrentTaskToDelayedList+0x3a>
 8003166:	4b24      	ldr	r3, [pc, #144]	; (80031f8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800316c:	2201      	movs	r2, #1
 800316e:	fa02 f303 	lsl.w	r3, r2, r3
 8003172:	43da      	mvns	r2, r3
 8003174:	4b21      	ldr	r3, [pc, #132]	; (80031fc <prvAddCurrentTaskToDelayedList+0xb8>)
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	4013      	ands	r3, r2
 800317a:	4a20      	ldr	r2, [pc, #128]	; (80031fc <prvAddCurrentTaskToDelayedList+0xb8>)
 800317c:	6013      	str	r3, [r2, #0]
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003184:	d10a      	bne.n	800319c <prvAddCurrentTaskToDelayedList+0x58>
 8003186:	683b      	ldr	r3, [r7, #0]
 8003188:	2b00      	cmp	r3, #0
 800318a:	d007      	beq.n	800319c <prvAddCurrentTaskToDelayedList+0x58>
 800318c:	4b1a      	ldr	r3, [pc, #104]	; (80031f8 <prvAddCurrentTaskToDelayedList+0xb4>)
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	3304      	adds	r3, #4
 8003192:	4619      	mov	r1, r3
 8003194:	481a      	ldr	r0, [pc, #104]	; (8003200 <prvAddCurrentTaskToDelayedList+0xbc>)
 8003196:	f7ff fa96 	bl	80026c6 <vListInsertEnd>
 800319a:	e026      	b.n	80031ea <prvAddCurrentTaskToDelayedList+0xa6>
 800319c:	68fa      	ldr	r2, [r7, #12]
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	4413      	add	r3, r2
 80031a2:	60bb      	str	r3, [r7, #8]
 80031a4:	4b14      	ldr	r3, [pc, #80]	; (80031f8 <prvAddCurrentTaskToDelayedList+0xb4>)
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	68ba      	ldr	r2, [r7, #8]
 80031aa:	605a      	str	r2, [r3, #4]
 80031ac:	68ba      	ldr	r2, [r7, #8]
 80031ae:	68fb      	ldr	r3, [r7, #12]
 80031b0:	429a      	cmp	r2, r3
 80031b2:	d209      	bcs.n	80031c8 <prvAddCurrentTaskToDelayedList+0x84>
 80031b4:	4b13      	ldr	r3, [pc, #76]	; (8003204 <prvAddCurrentTaskToDelayedList+0xc0>)
 80031b6:	681a      	ldr	r2, [r3, #0]
 80031b8:	4b0f      	ldr	r3, [pc, #60]	; (80031f8 <prvAddCurrentTaskToDelayedList+0xb4>)
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	3304      	adds	r3, #4
 80031be:	4619      	mov	r1, r3
 80031c0:	4610      	mov	r0, r2
 80031c2:	f7ff faa3 	bl	800270c <vListInsert>
 80031c6:	e010      	b.n	80031ea <prvAddCurrentTaskToDelayedList+0xa6>
 80031c8:	4b0f      	ldr	r3, [pc, #60]	; (8003208 <prvAddCurrentTaskToDelayedList+0xc4>)
 80031ca:	681a      	ldr	r2, [r3, #0]
 80031cc:	4b0a      	ldr	r3, [pc, #40]	; (80031f8 <prvAddCurrentTaskToDelayedList+0xb4>)
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	3304      	adds	r3, #4
 80031d2:	4619      	mov	r1, r3
 80031d4:	4610      	mov	r0, r2
 80031d6:	f7ff fa99 	bl	800270c <vListInsert>
 80031da:	4b0c      	ldr	r3, [pc, #48]	; (800320c <prvAddCurrentTaskToDelayedList+0xc8>)
 80031dc:	681b      	ldr	r3, [r3, #0]
 80031de:	68ba      	ldr	r2, [r7, #8]
 80031e0:	429a      	cmp	r2, r3
 80031e2:	d202      	bcs.n	80031ea <prvAddCurrentTaskToDelayedList+0xa6>
 80031e4:	4a09      	ldr	r2, [pc, #36]	; (800320c <prvAddCurrentTaskToDelayedList+0xc8>)
 80031e6:	68bb      	ldr	r3, [r7, #8]
 80031e8:	6013      	str	r3, [r2, #0]
 80031ea:	bf00      	nop
 80031ec:	3710      	adds	r7, #16
 80031ee:	46bd      	mov	sp, r7
 80031f0:	bd80      	pop	{r7, pc}
 80031f2:	bf00      	nop
 80031f4:	20000478 	.word	0x20000478
 80031f8:	20000374 	.word	0x20000374
 80031fc:	2000047c 	.word	0x2000047c
 8003200:	20000460 	.word	0x20000460
 8003204:	20000430 	.word	0x20000430
 8003208:	2000042c 	.word	0x2000042c
 800320c:	20000494 	.word	0x20000494

08003210 <pxPortInitialiseStack>:
 8003210:	b480      	push	{r7}
 8003212:	b085      	sub	sp, #20
 8003214:	af00      	add	r7, sp, #0
 8003216:	60f8      	str	r0, [r7, #12]
 8003218:	60b9      	str	r1, [r7, #8]
 800321a:	607a      	str	r2, [r7, #4]
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	3b04      	subs	r3, #4
 8003220:	60fb      	str	r3, [r7, #12]
 8003222:	68fb      	ldr	r3, [r7, #12]
 8003224:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003228:	601a      	str	r2, [r3, #0]
 800322a:	68fb      	ldr	r3, [r7, #12]
 800322c:	3b04      	subs	r3, #4
 800322e:	60fb      	str	r3, [r7, #12]
 8003230:	68bb      	ldr	r3, [r7, #8]
 8003232:	f023 0201 	bic.w	r2, r3, #1
 8003236:	68fb      	ldr	r3, [r7, #12]
 8003238:	601a      	str	r2, [r3, #0]
 800323a:	68fb      	ldr	r3, [r7, #12]
 800323c:	3b04      	subs	r3, #4
 800323e:	60fb      	str	r3, [r7, #12]
 8003240:	4a08      	ldr	r2, [pc, #32]	; (8003264 <pxPortInitialiseStack+0x54>)
 8003242:	68fb      	ldr	r3, [r7, #12]
 8003244:	601a      	str	r2, [r3, #0]
 8003246:	68fb      	ldr	r3, [r7, #12]
 8003248:	3b14      	subs	r3, #20
 800324a:	60fb      	str	r3, [r7, #12]
 800324c:	687a      	ldr	r2, [r7, #4]
 800324e:	68fb      	ldr	r3, [r7, #12]
 8003250:	601a      	str	r2, [r3, #0]
 8003252:	68fb      	ldr	r3, [r7, #12]
 8003254:	3b20      	subs	r3, #32
 8003256:	60fb      	str	r3, [r7, #12]
 8003258:	68fb      	ldr	r3, [r7, #12]
 800325a:	4618      	mov	r0, r3
 800325c:	3714      	adds	r7, #20
 800325e:	46bd      	mov	sp, r7
 8003260:	bc80      	pop	{r7}
 8003262:	4770      	bx	lr
 8003264:	08003269 	.word	0x08003269

08003268 <prvTaskExitError>:
 8003268:	b480      	push	{r7}
 800326a:	b085      	sub	sp, #20
 800326c:	af00      	add	r7, sp, #0
 800326e:	2300      	movs	r3, #0
 8003270:	607b      	str	r3, [r7, #4]
 8003272:	4b12      	ldr	r3, [pc, #72]	; (80032bc <prvTaskExitError+0x54>)
 8003274:	681b      	ldr	r3, [r3, #0]
 8003276:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800327a:	d00a      	beq.n	8003292 <prvTaskExitError+0x2a>
 800327c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003280:	f383 8811 	msr	BASEPRI, r3
 8003284:	f3bf 8f6f 	isb	sy
 8003288:	f3bf 8f4f 	dsb	sy
 800328c:	60fb      	str	r3, [r7, #12]
 800328e:	bf00      	nop
 8003290:	e7fe      	b.n	8003290 <prvTaskExitError+0x28>
 8003292:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003296:	f383 8811 	msr	BASEPRI, r3
 800329a:	f3bf 8f6f 	isb	sy
 800329e:	f3bf 8f4f 	dsb	sy
 80032a2:	60bb      	str	r3, [r7, #8]
 80032a4:	bf00      	nop
 80032a6:	bf00      	nop
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	d0fc      	beq.n	80032a8 <prvTaskExitError+0x40>
 80032ae:	bf00      	nop
 80032b0:	bf00      	nop
 80032b2:	3714      	adds	r7, #20
 80032b4:	46bd      	mov	sp, r7
 80032b6:	bc80      	pop	{r7}
 80032b8:	4770      	bx	lr
 80032ba:	bf00      	nop
 80032bc:	20000098 	.word	0x20000098

080032c0 <SVC_Handler>:
 80032c0:	4b07      	ldr	r3, [pc, #28]	; (80032e0 <pxCurrentTCBConst2>)
 80032c2:	6819      	ldr	r1, [r3, #0]
 80032c4:	6808      	ldr	r0, [r1, #0]
 80032c6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80032ca:	f380 8809 	msr	PSP, r0
 80032ce:	f3bf 8f6f 	isb	sy
 80032d2:	f04f 0000 	mov.w	r0, #0
 80032d6:	f380 8811 	msr	BASEPRI, r0
 80032da:	f04e 0e0d 	orr.w	lr, lr, #13
 80032de:	4770      	bx	lr

080032e0 <pxCurrentTCBConst2>:
 80032e0:	20000374 	.word	0x20000374
 80032e4:	bf00      	nop
 80032e6:	bf00      	nop

080032e8 <prvPortStartFirstTask>:
 80032e8:	4806      	ldr	r0, [pc, #24]	; (8003304 <prvPortStartFirstTask+0x1c>)
 80032ea:	6800      	ldr	r0, [r0, #0]
 80032ec:	6800      	ldr	r0, [r0, #0]
 80032ee:	f380 8808 	msr	MSP, r0
 80032f2:	b662      	cpsie	i
 80032f4:	b661      	cpsie	f
 80032f6:	f3bf 8f4f 	dsb	sy
 80032fa:	f3bf 8f6f 	isb	sy
 80032fe:	df00      	svc	0
 8003300:	bf00      	nop
 8003302:	bf00      	nop
 8003304:	e000ed08 	.word	0xe000ed08

08003308 <xPortStartScheduler>:
 8003308:	b580      	push	{r7, lr}
 800330a:	b084      	sub	sp, #16
 800330c:	af00      	add	r7, sp, #0
 800330e:	4b32      	ldr	r3, [pc, #200]	; (80033d8 <xPortStartScheduler+0xd0>)
 8003310:	60fb      	str	r3, [r7, #12]
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	781b      	ldrb	r3, [r3, #0]
 8003316:	b2db      	uxtb	r3, r3
 8003318:	607b      	str	r3, [r7, #4]
 800331a:	68fb      	ldr	r3, [r7, #12]
 800331c:	22ff      	movs	r2, #255	; 0xff
 800331e:	701a      	strb	r2, [r3, #0]
 8003320:	68fb      	ldr	r3, [r7, #12]
 8003322:	781b      	ldrb	r3, [r3, #0]
 8003324:	b2db      	uxtb	r3, r3
 8003326:	70fb      	strb	r3, [r7, #3]
 8003328:	78fb      	ldrb	r3, [r7, #3]
 800332a:	b2db      	uxtb	r3, r3
 800332c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8003330:	b2da      	uxtb	r2, r3
 8003332:	4b2a      	ldr	r3, [pc, #168]	; (80033dc <xPortStartScheduler+0xd4>)
 8003334:	701a      	strb	r2, [r3, #0]
 8003336:	4b2a      	ldr	r3, [pc, #168]	; (80033e0 <xPortStartScheduler+0xd8>)
 8003338:	2207      	movs	r2, #7
 800333a:	601a      	str	r2, [r3, #0]
 800333c:	e009      	b.n	8003352 <xPortStartScheduler+0x4a>
 800333e:	4b28      	ldr	r3, [pc, #160]	; (80033e0 <xPortStartScheduler+0xd8>)
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	3b01      	subs	r3, #1
 8003344:	4a26      	ldr	r2, [pc, #152]	; (80033e0 <xPortStartScheduler+0xd8>)
 8003346:	6013      	str	r3, [r2, #0]
 8003348:	78fb      	ldrb	r3, [r7, #3]
 800334a:	b2db      	uxtb	r3, r3
 800334c:	005b      	lsls	r3, r3, #1
 800334e:	b2db      	uxtb	r3, r3
 8003350:	70fb      	strb	r3, [r7, #3]
 8003352:	78fb      	ldrb	r3, [r7, #3]
 8003354:	b2db      	uxtb	r3, r3
 8003356:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800335a:	2b80      	cmp	r3, #128	; 0x80
 800335c:	d0ef      	beq.n	800333e <xPortStartScheduler+0x36>
 800335e:	4b20      	ldr	r3, [pc, #128]	; (80033e0 <xPortStartScheduler+0xd8>)
 8003360:	681b      	ldr	r3, [r3, #0]
 8003362:	f1c3 0307 	rsb	r3, r3, #7
 8003366:	2b04      	cmp	r3, #4
 8003368:	d00a      	beq.n	8003380 <xPortStartScheduler+0x78>
 800336a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800336e:	f383 8811 	msr	BASEPRI, r3
 8003372:	f3bf 8f6f 	isb	sy
 8003376:	f3bf 8f4f 	dsb	sy
 800337a:	60bb      	str	r3, [r7, #8]
 800337c:	bf00      	nop
 800337e:	e7fe      	b.n	800337e <xPortStartScheduler+0x76>
 8003380:	4b17      	ldr	r3, [pc, #92]	; (80033e0 <xPortStartScheduler+0xd8>)
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	021b      	lsls	r3, r3, #8
 8003386:	4a16      	ldr	r2, [pc, #88]	; (80033e0 <xPortStartScheduler+0xd8>)
 8003388:	6013      	str	r3, [r2, #0]
 800338a:	4b15      	ldr	r3, [pc, #84]	; (80033e0 <xPortStartScheduler+0xd8>)
 800338c:	681b      	ldr	r3, [r3, #0]
 800338e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003392:	4a13      	ldr	r2, [pc, #76]	; (80033e0 <xPortStartScheduler+0xd8>)
 8003394:	6013      	str	r3, [r2, #0]
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	b2da      	uxtb	r2, r3
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	701a      	strb	r2, [r3, #0]
 800339e:	4b11      	ldr	r3, [pc, #68]	; (80033e4 <xPortStartScheduler+0xdc>)
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	4a10      	ldr	r2, [pc, #64]	; (80033e4 <xPortStartScheduler+0xdc>)
 80033a4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80033a8:	6013      	str	r3, [r2, #0]
 80033aa:	4b0e      	ldr	r3, [pc, #56]	; (80033e4 <xPortStartScheduler+0xdc>)
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	4a0d      	ldr	r2, [pc, #52]	; (80033e4 <xPortStartScheduler+0xdc>)
 80033b0:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80033b4:	6013      	str	r3, [r2, #0]
 80033b6:	f000 f8b9 	bl	800352c <vPortSetupTimerInterrupt>
 80033ba:	4b0b      	ldr	r3, [pc, #44]	; (80033e8 <xPortStartScheduler+0xe0>)
 80033bc:	2200      	movs	r2, #0
 80033be:	601a      	str	r2, [r3, #0]
 80033c0:	f7ff ff92 	bl	80032e8 <prvPortStartFirstTask>
 80033c4:	f7ff fd8a 	bl	8002edc <vTaskSwitchContext>
 80033c8:	f7ff ff4e 	bl	8003268 <prvTaskExitError>
 80033cc:	2300      	movs	r3, #0
 80033ce:	4618      	mov	r0, r3
 80033d0:	3710      	adds	r7, #16
 80033d2:	46bd      	mov	sp, r7
 80033d4:	bd80      	pop	{r7, pc}
 80033d6:	bf00      	nop
 80033d8:	e000e400 	.word	0xe000e400
 80033dc:	200004a0 	.word	0x200004a0
 80033e0:	200004a4 	.word	0x200004a4
 80033e4:	e000ed20 	.word	0xe000ed20
 80033e8:	20000098 	.word	0x20000098

080033ec <vPortEnterCritical>:
 80033ec:	b480      	push	{r7}
 80033ee:	b083      	sub	sp, #12
 80033f0:	af00      	add	r7, sp, #0
 80033f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80033f6:	f383 8811 	msr	BASEPRI, r3
 80033fa:	f3bf 8f6f 	isb	sy
 80033fe:	f3bf 8f4f 	dsb	sy
 8003402:	607b      	str	r3, [r7, #4]
 8003404:	bf00      	nop
 8003406:	4b0f      	ldr	r3, [pc, #60]	; (8003444 <vPortEnterCritical+0x58>)
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	3301      	adds	r3, #1
 800340c:	4a0d      	ldr	r2, [pc, #52]	; (8003444 <vPortEnterCritical+0x58>)
 800340e:	6013      	str	r3, [r2, #0]
 8003410:	4b0c      	ldr	r3, [pc, #48]	; (8003444 <vPortEnterCritical+0x58>)
 8003412:	681b      	ldr	r3, [r3, #0]
 8003414:	2b01      	cmp	r3, #1
 8003416:	d10f      	bne.n	8003438 <vPortEnterCritical+0x4c>
 8003418:	4b0b      	ldr	r3, [pc, #44]	; (8003448 <vPortEnterCritical+0x5c>)
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	b2db      	uxtb	r3, r3
 800341e:	2b00      	cmp	r3, #0
 8003420:	d00a      	beq.n	8003438 <vPortEnterCritical+0x4c>
 8003422:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003426:	f383 8811 	msr	BASEPRI, r3
 800342a:	f3bf 8f6f 	isb	sy
 800342e:	f3bf 8f4f 	dsb	sy
 8003432:	603b      	str	r3, [r7, #0]
 8003434:	bf00      	nop
 8003436:	e7fe      	b.n	8003436 <vPortEnterCritical+0x4a>
 8003438:	bf00      	nop
 800343a:	370c      	adds	r7, #12
 800343c:	46bd      	mov	sp, r7
 800343e:	bc80      	pop	{r7}
 8003440:	4770      	bx	lr
 8003442:	bf00      	nop
 8003444:	20000098 	.word	0x20000098
 8003448:	e000ed04 	.word	0xe000ed04

0800344c <vPortExitCritical>:
 800344c:	b480      	push	{r7}
 800344e:	b083      	sub	sp, #12
 8003450:	af00      	add	r7, sp, #0
 8003452:	4b11      	ldr	r3, [pc, #68]	; (8003498 <vPortExitCritical+0x4c>)
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	2b00      	cmp	r3, #0
 8003458:	d10a      	bne.n	8003470 <vPortExitCritical+0x24>
 800345a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800345e:	f383 8811 	msr	BASEPRI, r3
 8003462:	f3bf 8f6f 	isb	sy
 8003466:	f3bf 8f4f 	dsb	sy
 800346a:	607b      	str	r3, [r7, #4]
 800346c:	bf00      	nop
 800346e:	e7fe      	b.n	800346e <vPortExitCritical+0x22>
 8003470:	4b09      	ldr	r3, [pc, #36]	; (8003498 <vPortExitCritical+0x4c>)
 8003472:	681b      	ldr	r3, [r3, #0]
 8003474:	3b01      	subs	r3, #1
 8003476:	4a08      	ldr	r2, [pc, #32]	; (8003498 <vPortExitCritical+0x4c>)
 8003478:	6013      	str	r3, [r2, #0]
 800347a:	4b07      	ldr	r3, [pc, #28]	; (8003498 <vPortExitCritical+0x4c>)
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	2b00      	cmp	r3, #0
 8003480:	d105      	bne.n	800348e <vPortExitCritical+0x42>
 8003482:	2300      	movs	r3, #0
 8003484:	603b      	str	r3, [r7, #0]
 8003486:	683b      	ldr	r3, [r7, #0]
 8003488:	f383 8811 	msr	BASEPRI, r3
 800348c:	bf00      	nop
 800348e:	bf00      	nop
 8003490:	370c      	adds	r7, #12
 8003492:	46bd      	mov	sp, r7
 8003494:	bc80      	pop	{r7}
 8003496:	4770      	bx	lr
 8003498:	20000098 	.word	0x20000098
 800349c:	00000000 	.word	0x00000000

080034a0 <PendSV_Handler>:
 80034a0:	f3ef 8009 	mrs	r0, PSP
 80034a4:	f3bf 8f6f 	isb	sy
 80034a8:	4b0d      	ldr	r3, [pc, #52]	; (80034e0 <pxCurrentTCBConst>)
 80034aa:	681a      	ldr	r2, [r3, #0]
 80034ac:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80034b0:	6010      	str	r0, [r2, #0]
 80034b2:	e92d 4008 	stmdb	sp!, {r3, lr}
 80034b6:	f04f 0050 	mov.w	r0, #80	; 0x50
 80034ba:	f380 8811 	msr	BASEPRI, r0
 80034be:	f7ff fd0d 	bl	8002edc <vTaskSwitchContext>
 80034c2:	f04f 0000 	mov.w	r0, #0
 80034c6:	f380 8811 	msr	BASEPRI, r0
 80034ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80034ce:	6819      	ldr	r1, [r3, #0]
 80034d0:	6808      	ldr	r0, [r1, #0]
 80034d2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80034d6:	f380 8809 	msr	PSP, r0
 80034da:	f3bf 8f6f 	isb	sy
 80034de:	4770      	bx	lr

080034e0 <pxCurrentTCBConst>:
 80034e0:	20000374 	.word	0x20000374
 80034e4:	bf00      	nop
 80034e6:	bf00      	nop

080034e8 <SysTick_Handler>:
 80034e8:	b580      	push	{r7, lr}
 80034ea:	b082      	sub	sp, #8
 80034ec:	af00      	add	r7, sp, #0
 80034ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80034f2:	f383 8811 	msr	BASEPRI, r3
 80034f6:	f3bf 8f6f 	isb	sy
 80034fa:	f3bf 8f4f 	dsb	sy
 80034fe:	607b      	str	r3, [r7, #4]
 8003500:	bf00      	nop
 8003502:	f7ff fc2d 	bl	8002d60 <xTaskIncrementTick>
 8003506:	4603      	mov	r3, r0
 8003508:	2b00      	cmp	r3, #0
 800350a:	d003      	beq.n	8003514 <SysTick_Handler+0x2c>
 800350c:	4b06      	ldr	r3, [pc, #24]	; (8003528 <SysTick_Handler+0x40>)
 800350e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003512:	601a      	str	r2, [r3, #0]
 8003514:	2300      	movs	r3, #0
 8003516:	603b      	str	r3, [r7, #0]
 8003518:	683b      	ldr	r3, [r7, #0]
 800351a:	f383 8811 	msr	BASEPRI, r3
 800351e:	bf00      	nop
 8003520:	bf00      	nop
 8003522:	3708      	adds	r7, #8
 8003524:	46bd      	mov	sp, r7
 8003526:	bd80      	pop	{r7, pc}
 8003528:	e000ed04 	.word	0xe000ed04

0800352c <vPortSetupTimerInterrupt>:
 800352c:	b480      	push	{r7}
 800352e:	af00      	add	r7, sp, #0
 8003530:	4b0a      	ldr	r3, [pc, #40]	; (800355c <vPortSetupTimerInterrupt+0x30>)
 8003532:	2200      	movs	r2, #0
 8003534:	601a      	str	r2, [r3, #0]
 8003536:	4b0a      	ldr	r3, [pc, #40]	; (8003560 <vPortSetupTimerInterrupt+0x34>)
 8003538:	2200      	movs	r2, #0
 800353a:	601a      	str	r2, [r3, #0]
 800353c:	4b09      	ldr	r3, [pc, #36]	; (8003564 <vPortSetupTimerInterrupt+0x38>)
 800353e:	681b      	ldr	r3, [r3, #0]
 8003540:	4a09      	ldr	r2, [pc, #36]	; (8003568 <vPortSetupTimerInterrupt+0x3c>)
 8003542:	fba2 2303 	umull	r2, r3, r2, r3
 8003546:	099b      	lsrs	r3, r3, #6
 8003548:	4a08      	ldr	r2, [pc, #32]	; (800356c <vPortSetupTimerInterrupt+0x40>)
 800354a:	3b01      	subs	r3, #1
 800354c:	6013      	str	r3, [r2, #0]
 800354e:	4b03      	ldr	r3, [pc, #12]	; (800355c <vPortSetupTimerInterrupt+0x30>)
 8003550:	2207      	movs	r2, #7
 8003552:	601a      	str	r2, [r3, #0]
 8003554:	bf00      	nop
 8003556:	46bd      	mov	sp, r7
 8003558:	bc80      	pop	{r7}
 800355a:	4770      	bx	lr
 800355c:	e000e010 	.word	0xe000e010
 8003560:	e000e018 	.word	0xe000e018
 8003564:	2000008c 	.word	0x2000008c
 8003568:	10624dd3 	.word	0x10624dd3
 800356c:	e000e014 	.word	0xe000e014

08003570 <pvPortMalloc>:
 8003570:	b580      	push	{r7, lr}
 8003572:	b08a      	sub	sp, #40	; 0x28
 8003574:	af00      	add	r7, sp, #0
 8003576:	6078      	str	r0, [r7, #4]
 8003578:	2300      	movs	r3, #0
 800357a:	61fb      	str	r3, [r7, #28]
 800357c:	f7ff fb46 	bl	8002c0c <vTaskSuspendAll>
 8003580:	4b58      	ldr	r3, [pc, #352]	; (80036e4 <pvPortMalloc+0x174>)
 8003582:	681b      	ldr	r3, [r3, #0]
 8003584:	2b00      	cmp	r3, #0
 8003586:	d101      	bne.n	800358c <pvPortMalloc+0x1c>
 8003588:	f000 f910 	bl	80037ac <prvHeapInit>
 800358c:	4b56      	ldr	r3, [pc, #344]	; (80036e8 <pvPortMalloc+0x178>)
 800358e:	681a      	ldr	r2, [r3, #0]
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	4013      	ands	r3, r2
 8003594:	2b00      	cmp	r3, #0
 8003596:	f040 808e 	bne.w	80036b6 <pvPortMalloc+0x146>
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	2b00      	cmp	r3, #0
 800359e:	d01d      	beq.n	80035dc <pvPortMalloc+0x6c>
 80035a0:	2208      	movs	r2, #8
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	4413      	add	r3, r2
 80035a6:	607b      	str	r3, [r7, #4]
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	f003 0307 	and.w	r3, r3, #7
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	d014      	beq.n	80035dc <pvPortMalloc+0x6c>
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	f023 0307 	bic.w	r3, r3, #7
 80035b8:	3308      	adds	r3, #8
 80035ba:	607b      	str	r3, [r7, #4]
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	f003 0307 	and.w	r3, r3, #7
 80035c2:	2b00      	cmp	r3, #0
 80035c4:	d00a      	beq.n	80035dc <pvPortMalloc+0x6c>
 80035c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80035ca:	f383 8811 	msr	BASEPRI, r3
 80035ce:	f3bf 8f6f 	isb	sy
 80035d2:	f3bf 8f4f 	dsb	sy
 80035d6:	617b      	str	r3, [r7, #20]
 80035d8:	bf00      	nop
 80035da:	e7fe      	b.n	80035da <pvPortMalloc+0x6a>
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	2b00      	cmp	r3, #0
 80035e0:	d069      	beq.n	80036b6 <pvPortMalloc+0x146>
 80035e2:	4b42      	ldr	r3, [pc, #264]	; (80036ec <pvPortMalloc+0x17c>)
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	687a      	ldr	r2, [r7, #4]
 80035e8:	429a      	cmp	r2, r3
 80035ea:	d864      	bhi.n	80036b6 <pvPortMalloc+0x146>
 80035ec:	4b40      	ldr	r3, [pc, #256]	; (80036f0 <pvPortMalloc+0x180>)
 80035ee:	623b      	str	r3, [r7, #32]
 80035f0:	4b3f      	ldr	r3, [pc, #252]	; (80036f0 <pvPortMalloc+0x180>)
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	627b      	str	r3, [r7, #36]	; 0x24
 80035f6:	e004      	b.n	8003602 <pvPortMalloc+0x92>
 80035f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035fa:	623b      	str	r3, [r7, #32]
 80035fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035fe:	681b      	ldr	r3, [r3, #0]
 8003600:	627b      	str	r3, [r7, #36]	; 0x24
 8003602:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003604:	685b      	ldr	r3, [r3, #4]
 8003606:	687a      	ldr	r2, [r7, #4]
 8003608:	429a      	cmp	r2, r3
 800360a:	d903      	bls.n	8003614 <pvPortMalloc+0xa4>
 800360c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	2b00      	cmp	r3, #0
 8003612:	d1f1      	bne.n	80035f8 <pvPortMalloc+0x88>
 8003614:	4b33      	ldr	r3, [pc, #204]	; (80036e4 <pvPortMalloc+0x174>)
 8003616:	681b      	ldr	r3, [r3, #0]
 8003618:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800361a:	429a      	cmp	r2, r3
 800361c:	d04b      	beq.n	80036b6 <pvPortMalloc+0x146>
 800361e:	6a3b      	ldr	r3, [r7, #32]
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	2208      	movs	r2, #8
 8003624:	4413      	add	r3, r2
 8003626:	61fb      	str	r3, [r7, #28]
 8003628:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800362a:	681a      	ldr	r2, [r3, #0]
 800362c:	6a3b      	ldr	r3, [r7, #32]
 800362e:	601a      	str	r2, [r3, #0]
 8003630:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003632:	685a      	ldr	r2, [r3, #4]
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	1ad2      	subs	r2, r2, r3
 8003638:	2308      	movs	r3, #8
 800363a:	005b      	lsls	r3, r3, #1
 800363c:	429a      	cmp	r2, r3
 800363e:	d91f      	bls.n	8003680 <pvPortMalloc+0x110>
 8003640:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	4413      	add	r3, r2
 8003646:	61bb      	str	r3, [r7, #24]
 8003648:	69bb      	ldr	r3, [r7, #24]
 800364a:	f003 0307 	and.w	r3, r3, #7
 800364e:	2b00      	cmp	r3, #0
 8003650:	d00a      	beq.n	8003668 <pvPortMalloc+0xf8>
 8003652:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003656:	f383 8811 	msr	BASEPRI, r3
 800365a:	f3bf 8f6f 	isb	sy
 800365e:	f3bf 8f4f 	dsb	sy
 8003662:	613b      	str	r3, [r7, #16]
 8003664:	bf00      	nop
 8003666:	e7fe      	b.n	8003666 <pvPortMalloc+0xf6>
 8003668:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800366a:	685a      	ldr	r2, [r3, #4]
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	1ad2      	subs	r2, r2, r3
 8003670:	69bb      	ldr	r3, [r7, #24]
 8003672:	605a      	str	r2, [r3, #4]
 8003674:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003676:	687a      	ldr	r2, [r7, #4]
 8003678:	605a      	str	r2, [r3, #4]
 800367a:	69b8      	ldr	r0, [r7, #24]
 800367c:	f000 f8f8 	bl	8003870 <prvInsertBlockIntoFreeList>
 8003680:	4b1a      	ldr	r3, [pc, #104]	; (80036ec <pvPortMalloc+0x17c>)
 8003682:	681a      	ldr	r2, [r3, #0]
 8003684:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003686:	685b      	ldr	r3, [r3, #4]
 8003688:	1ad3      	subs	r3, r2, r3
 800368a:	4a18      	ldr	r2, [pc, #96]	; (80036ec <pvPortMalloc+0x17c>)
 800368c:	6013      	str	r3, [r2, #0]
 800368e:	4b17      	ldr	r3, [pc, #92]	; (80036ec <pvPortMalloc+0x17c>)
 8003690:	681a      	ldr	r2, [r3, #0]
 8003692:	4b18      	ldr	r3, [pc, #96]	; (80036f4 <pvPortMalloc+0x184>)
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	429a      	cmp	r2, r3
 8003698:	d203      	bcs.n	80036a2 <pvPortMalloc+0x132>
 800369a:	4b14      	ldr	r3, [pc, #80]	; (80036ec <pvPortMalloc+0x17c>)
 800369c:	681b      	ldr	r3, [r3, #0]
 800369e:	4a15      	ldr	r2, [pc, #84]	; (80036f4 <pvPortMalloc+0x184>)
 80036a0:	6013      	str	r3, [r2, #0]
 80036a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036a4:	685a      	ldr	r2, [r3, #4]
 80036a6:	4b10      	ldr	r3, [pc, #64]	; (80036e8 <pvPortMalloc+0x178>)
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	431a      	orrs	r2, r3
 80036ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036ae:	605a      	str	r2, [r3, #4]
 80036b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036b2:	2200      	movs	r2, #0
 80036b4:	601a      	str	r2, [r3, #0]
 80036b6:	f7ff fab7 	bl	8002c28 <xTaskResumeAll>
 80036ba:	69fb      	ldr	r3, [r7, #28]
 80036bc:	f003 0307 	and.w	r3, r3, #7
 80036c0:	2b00      	cmp	r3, #0
 80036c2:	d00a      	beq.n	80036da <pvPortMalloc+0x16a>
 80036c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80036c8:	f383 8811 	msr	BASEPRI, r3
 80036cc:	f3bf 8f6f 	isb	sy
 80036d0:	f3bf 8f4f 	dsb	sy
 80036d4:	60fb      	str	r3, [r7, #12]
 80036d6:	bf00      	nop
 80036d8:	e7fe      	b.n	80036d8 <pvPortMalloc+0x168>
 80036da:	69fb      	ldr	r3, [r7, #28]
 80036dc:	4618      	mov	r0, r3
 80036de:	3728      	adds	r7, #40	; 0x28
 80036e0:	46bd      	mov	sp, r7
 80036e2:	bd80      	pop	{r7, pc}
 80036e4:	200010b0 	.word	0x200010b0
 80036e8:	200010bc 	.word	0x200010bc
 80036ec:	200010b4 	.word	0x200010b4
 80036f0:	200010a8 	.word	0x200010a8
 80036f4:	200010b8 	.word	0x200010b8

080036f8 <vPortFree>:
 80036f8:	b580      	push	{r7, lr}
 80036fa:	b086      	sub	sp, #24
 80036fc:	af00      	add	r7, sp, #0
 80036fe:	6078      	str	r0, [r7, #4]
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	617b      	str	r3, [r7, #20]
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	2b00      	cmp	r3, #0
 8003708:	d048      	beq.n	800379c <vPortFree+0xa4>
 800370a:	2308      	movs	r3, #8
 800370c:	425b      	negs	r3, r3
 800370e:	697a      	ldr	r2, [r7, #20]
 8003710:	4413      	add	r3, r2
 8003712:	617b      	str	r3, [r7, #20]
 8003714:	697b      	ldr	r3, [r7, #20]
 8003716:	613b      	str	r3, [r7, #16]
 8003718:	693b      	ldr	r3, [r7, #16]
 800371a:	685a      	ldr	r2, [r3, #4]
 800371c:	4b21      	ldr	r3, [pc, #132]	; (80037a4 <vPortFree+0xac>)
 800371e:	681b      	ldr	r3, [r3, #0]
 8003720:	4013      	ands	r3, r2
 8003722:	2b00      	cmp	r3, #0
 8003724:	d10a      	bne.n	800373c <vPortFree+0x44>
 8003726:	f04f 0350 	mov.w	r3, #80	; 0x50
 800372a:	f383 8811 	msr	BASEPRI, r3
 800372e:	f3bf 8f6f 	isb	sy
 8003732:	f3bf 8f4f 	dsb	sy
 8003736:	60fb      	str	r3, [r7, #12]
 8003738:	bf00      	nop
 800373a:	e7fe      	b.n	800373a <vPortFree+0x42>
 800373c:	693b      	ldr	r3, [r7, #16]
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	2b00      	cmp	r3, #0
 8003742:	d00a      	beq.n	800375a <vPortFree+0x62>
 8003744:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003748:	f383 8811 	msr	BASEPRI, r3
 800374c:	f3bf 8f6f 	isb	sy
 8003750:	f3bf 8f4f 	dsb	sy
 8003754:	60bb      	str	r3, [r7, #8]
 8003756:	bf00      	nop
 8003758:	e7fe      	b.n	8003758 <vPortFree+0x60>
 800375a:	693b      	ldr	r3, [r7, #16]
 800375c:	685a      	ldr	r2, [r3, #4]
 800375e:	4b11      	ldr	r3, [pc, #68]	; (80037a4 <vPortFree+0xac>)
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	4013      	ands	r3, r2
 8003764:	2b00      	cmp	r3, #0
 8003766:	d019      	beq.n	800379c <vPortFree+0xa4>
 8003768:	693b      	ldr	r3, [r7, #16]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	2b00      	cmp	r3, #0
 800376e:	d115      	bne.n	800379c <vPortFree+0xa4>
 8003770:	693b      	ldr	r3, [r7, #16]
 8003772:	685a      	ldr	r2, [r3, #4]
 8003774:	4b0b      	ldr	r3, [pc, #44]	; (80037a4 <vPortFree+0xac>)
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	43db      	mvns	r3, r3
 800377a:	401a      	ands	r2, r3
 800377c:	693b      	ldr	r3, [r7, #16]
 800377e:	605a      	str	r2, [r3, #4]
 8003780:	f7ff fa44 	bl	8002c0c <vTaskSuspendAll>
 8003784:	693b      	ldr	r3, [r7, #16]
 8003786:	685a      	ldr	r2, [r3, #4]
 8003788:	4b07      	ldr	r3, [pc, #28]	; (80037a8 <vPortFree+0xb0>)
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	4413      	add	r3, r2
 800378e:	4a06      	ldr	r2, [pc, #24]	; (80037a8 <vPortFree+0xb0>)
 8003790:	6013      	str	r3, [r2, #0]
 8003792:	6938      	ldr	r0, [r7, #16]
 8003794:	f000 f86c 	bl	8003870 <prvInsertBlockIntoFreeList>
 8003798:	f7ff fa46 	bl	8002c28 <xTaskResumeAll>
 800379c:	bf00      	nop
 800379e:	3718      	adds	r7, #24
 80037a0:	46bd      	mov	sp, r7
 80037a2:	bd80      	pop	{r7, pc}
 80037a4:	200010bc 	.word	0x200010bc
 80037a8:	200010b4 	.word	0x200010b4

080037ac <prvHeapInit>:
 80037ac:	b480      	push	{r7}
 80037ae:	b085      	sub	sp, #20
 80037b0:	af00      	add	r7, sp, #0
 80037b2:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80037b6:	60bb      	str	r3, [r7, #8]
 80037b8:	4b27      	ldr	r3, [pc, #156]	; (8003858 <prvHeapInit+0xac>)
 80037ba:	60fb      	str	r3, [r7, #12]
 80037bc:	68fb      	ldr	r3, [r7, #12]
 80037be:	f003 0307 	and.w	r3, r3, #7
 80037c2:	2b00      	cmp	r3, #0
 80037c4:	d00c      	beq.n	80037e0 <prvHeapInit+0x34>
 80037c6:	68fb      	ldr	r3, [r7, #12]
 80037c8:	3307      	adds	r3, #7
 80037ca:	60fb      	str	r3, [r7, #12]
 80037cc:	68fb      	ldr	r3, [r7, #12]
 80037ce:	f023 0307 	bic.w	r3, r3, #7
 80037d2:	60fb      	str	r3, [r7, #12]
 80037d4:	68ba      	ldr	r2, [r7, #8]
 80037d6:	68fb      	ldr	r3, [r7, #12]
 80037d8:	1ad3      	subs	r3, r2, r3
 80037da:	4a1f      	ldr	r2, [pc, #124]	; (8003858 <prvHeapInit+0xac>)
 80037dc:	4413      	add	r3, r2
 80037de:	60bb      	str	r3, [r7, #8]
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	607b      	str	r3, [r7, #4]
 80037e4:	4a1d      	ldr	r2, [pc, #116]	; (800385c <prvHeapInit+0xb0>)
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	6013      	str	r3, [r2, #0]
 80037ea:	4b1c      	ldr	r3, [pc, #112]	; (800385c <prvHeapInit+0xb0>)
 80037ec:	2200      	movs	r2, #0
 80037ee:	605a      	str	r2, [r3, #4]
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	68ba      	ldr	r2, [r7, #8]
 80037f4:	4413      	add	r3, r2
 80037f6:	60fb      	str	r3, [r7, #12]
 80037f8:	2208      	movs	r2, #8
 80037fa:	68fb      	ldr	r3, [r7, #12]
 80037fc:	1a9b      	subs	r3, r3, r2
 80037fe:	60fb      	str	r3, [r7, #12]
 8003800:	68fb      	ldr	r3, [r7, #12]
 8003802:	f023 0307 	bic.w	r3, r3, #7
 8003806:	60fb      	str	r3, [r7, #12]
 8003808:	68fb      	ldr	r3, [r7, #12]
 800380a:	4a15      	ldr	r2, [pc, #84]	; (8003860 <prvHeapInit+0xb4>)
 800380c:	6013      	str	r3, [r2, #0]
 800380e:	4b14      	ldr	r3, [pc, #80]	; (8003860 <prvHeapInit+0xb4>)
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	2200      	movs	r2, #0
 8003814:	605a      	str	r2, [r3, #4]
 8003816:	4b12      	ldr	r3, [pc, #72]	; (8003860 <prvHeapInit+0xb4>)
 8003818:	681b      	ldr	r3, [r3, #0]
 800381a:	2200      	movs	r2, #0
 800381c:	601a      	str	r2, [r3, #0]
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	603b      	str	r3, [r7, #0]
 8003822:	683b      	ldr	r3, [r7, #0]
 8003824:	68fa      	ldr	r2, [r7, #12]
 8003826:	1ad2      	subs	r2, r2, r3
 8003828:	683b      	ldr	r3, [r7, #0]
 800382a:	605a      	str	r2, [r3, #4]
 800382c:	4b0c      	ldr	r3, [pc, #48]	; (8003860 <prvHeapInit+0xb4>)
 800382e:	681a      	ldr	r2, [r3, #0]
 8003830:	683b      	ldr	r3, [r7, #0]
 8003832:	601a      	str	r2, [r3, #0]
 8003834:	683b      	ldr	r3, [r7, #0]
 8003836:	685b      	ldr	r3, [r3, #4]
 8003838:	4a0a      	ldr	r2, [pc, #40]	; (8003864 <prvHeapInit+0xb8>)
 800383a:	6013      	str	r3, [r2, #0]
 800383c:	683b      	ldr	r3, [r7, #0]
 800383e:	685b      	ldr	r3, [r3, #4]
 8003840:	4a09      	ldr	r2, [pc, #36]	; (8003868 <prvHeapInit+0xbc>)
 8003842:	6013      	str	r3, [r2, #0]
 8003844:	4b09      	ldr	r3, [pc, #36]	; (800386c <prvHeapInit+0xc0>)
 8003846:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 800384a:	601a      	str	r2, [r3, #0]
 800384c:	bf00      	nop
 800384e:	3714      	adds	r7, #20
 8003850:	46bd      	mov	sp, r7
 8003852:	bc80      	pop	{r7}
 8003854:	4770      	bx	lr
 8003856:	bf00      	nop
 8003858:	200004a8 	.word	0x200004a8
 800385c:	200010a8 	.word	0x200010a8
 8003860:	200010b0 	.word	0x200010b0
 8003864:	200010b8 	.word	0x200010b8
 8003868:	200010b4 	.word	0x200010b4
 800386c:	200010bc 	.word	0x200010bc

08003870 <prvInsertBlockIntoFreeList>:
 8003870:	b480      	push	{r7}
 8003872:	b085      	sub	sp, #20
 8003874:	af00      	add	r7, sp, #0
 8003876:	6078      	str	r0, [r7, #4]
 8003878:	4b27      	ldr	r3, [pc, #156]	; (8003918 <prvInsertBlockIntoFreeList+0xa8>)
 800387a:	60fb      	str	r3, [r7, #12]
 800387c:	e002      	b.n	8003884 <prvInsertBlockIntoFreeList+0x14>
 800387e:	68fb      	ldr	r3, [r7, #12]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	60fb      	str	r3, [r7, #12]
 8003884:	68fb      	ldr	r3, [r7, #12]
 8003886:	681b      	ldr	r3, [r3, #0]
 8003888:	687a      	ldr	r2, [r7, #4]
 800388a:	429a      	cmp	r2, r3
 800388c:	d8f7      	bhi.n	800387e <prvInsertBlockIntoFreeList+0xe>
 800388e:	68fb      	ldr	r3, [r7, #12]
 8003890:	60bb      	str	r3, [r7, #8]
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	685b      	ldr	r3, [r3, #4]
 8003896:	68ba      	ldr	r2, [r7, #8]
 8003898:	4413      	add	r3, r2
 800389a:	687a      	ldr	r2, [r7, #4]
 800389c:	429a      	cmp	r2, r3
 800389e:	d108      	bne.n	80038b2 <prvInsertBlockIntoFreeList+0x42>
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	685a      	ldr	r2, [r3, #4]
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	685b      	ldr	r3, [r3, #4]
 80038a8:	441a      	add	r2, r3
 80038aa:	68fb      	ldr	r3, [r7, #12]
 80038ac:	605a      	str	r2, [r3, #4]
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	607b      	str	r3, [r7, #4]
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	60bb      	str	r3, [r7, #8]
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	685b      	ldr	r3, [r3, #4]
 80038ba:	68ba      	ldr	r2, [r7, #8]
 80038bc:	441a      	add	r2, r3
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	429a      	cmp	r2, r3
 80038c4:	d118      	bne.n	80038f8 <prvInsertBlockIntoFreeList+0x88>
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	681a      	ldr	r2, [r3, #0]
 80038ca:	4b14      	ldr	r3, [pc, #80]	; (800391c <prvInsertBlockIntoFreeList+0xac>)
 80038cc:	681b      	ldr	r3, [r3, #0]
 80038ce:	429a      	cmp	r2, r3
 80038d0:	d00d      	beq.n	80038ee <prvInsertBlockIntoFreeList+0x7e>
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	685a      	ldr	r2, [r3, #4]
 80038d6:	68fb      	ldr	r3, [r7, #12]
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	685b      	ldr	r3, [r3, #4]
 80038dc:	441a      	add	r2, r3
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	605a      	str	r2, [r3, #4]
 80038e2:	68fb      	ldr	r3, [r7, #12]
 80038e4:	681b      	ldr	r3, [r3, #0]
 80038e6:	681a      	ldr	r2, [r3, #0]
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	601a      	str	r2, [r3, #0]
 80038ec:	e008      	b.n	8003900 <prvInsertBlockIntoFreeList+0x90>
 80038ee:	4b0b      	ldr	r3, [pc, #44]	; (800391c <prvInsertBlockIntoFreeList+0xac>)
 80038f0:	681a      	ldr	r2, [r3, #0]
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	601a      	str	r2, [r3, #0]
 80038f6:	e003      	b.n	8003900 <prvInsertBlockIntoFreeList+0x90>
 80038f8:	68fb      	ldr	r3, [r7, #12]
 80038fa:	681a      	ldr	r2, [r3, #0]
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	601a      	str	r2, [r3, #0]
 8003900:	68fa      	ldr	r2, [r7, #12]
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	429a      	cmp	r2, r3
 8003906:	d002      	beq.n	800390e <prvInsertBlockIntoFreeList+0x9e>
 8003908:	68fb      	ldr	r3, [r7, #12]
 800390a:	687a      	ldr	r2, [r7, #4]
 800390c:	601a      	str	r2, [r3, #0]
 800390e:	bf00      	nop
 8003910:	3714      	adds	r7, #20
 8003912:	46bd      	mov	sp, r7
 8003914:	bc80      	pop	{r7}
 8003916:	4770      	bx	lr
 8003918:	200010a8 	.word	0x200010a8
 800391c:	200010b0 	.word	0x200010b0

08003920 <__errno>:
 8003920:	4b01      	ldr	r3, [pc, #4]	; (8003928 <__errno+0x8>)
 8003922:	6818      	ldr	r0, [r3, #0]
 8003924:	4770      	bx	lr
 8003926:	bf00      	nop
 8003928:	2000009c 	.word	0x2000009c

0800392c <__libc_init_array>:
 800392c:	b570      	push	{r4, r5, r6, lr}
 800392e:	2600      	movs	r6, #0
 8003930:	4d0c      	ldr	r5, [pc, #48]	; (8003964 <__libc_init_array+0x38>)
 8003932:	4c0d      	ldr	r4, [pc, #52]	; (8003968 <__libc_init_array+0x3c>)
 8003934:	1b64      	subs	r4, r4, r5
 8003936:	10a4      	asrs	r4, r4, #2
 8003938:	42a6      	cmp	r6, r4
 800393a:	d109      	bne.n	8003950 <__libc_init_array+0x24>
 800393c:	f001 fa72 	bl	8004e24 <_init>
 8003940:	2600      	movs	r6, #0
 8003942:	4d0a      	ldr	r5, [pc, #40]	; (800396c <__libc_init_array+0x40>)
 8003944:	4c0a      	ldr	r4, [pc, #40]	; (8003970 <__libc_init_array+0x44>)
 8003946:	1b64      	subs	r4, r4, r5
 8003948:	10a4      	asrs	r4, r4, #2
 800394a:	42a6      	cmp	r6, r4
 800394c:	d105      	bne.n	800395a <__libc_init_array+0x2e>
 800394e:	bd70      	pop	{r4, r5, r6, pc}
 8003950:	f855 3b04 	ldr.w	r3, [r5], #4
 8003954:	4798      	blx	r3
 8003956:	3601      	adds	r6, #1
 8003958:	e7ee      	b.n	8003938 <__libc_init_array+0xc>
 800395a:	f855 3b04 	ldr.w	r3, [r5], #4
 800395e:	4798      	blx	r3
 8003960:	3601      	adds	r6, #1
 8003962:	e7f2      	b.n	800394a <__libc_init_array+0x1e>
 8003964:	08005020 	.word	0x08005020
 8003968:	08005020 	.word	0x08005020
 800396c:	08005020 	.word	0x08005020
 8003970:	08005024 	.word	0x08005024

08003974 <memcpy>:
 8003974:	440a      	add	r2, r1
 8003976:	4291      	cmp	r1, r2
 8003978:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 800397c:	d100      	bne.n	8003980 <memcpy+0xc>
 800397e:	4770      	bx	lr
 8003980:	b510      	push	{r4, lr}
 8003982:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003986:	4291      	cmp	r1, r2
 8003988:	f803 4f01 	strb.w	r4, [r3, #1]!
 800398c:	d1f9      	bne.n	8003982 <memcpy+0xe>
 800398e:	bd10      	pop	{r4, pc}

08003990 <memset>:
 8003990:	4603      	mov	r3, r0
 8003992:	4402      	add	r2, r0
 8003994:	4293      	cmp	r3, r2
 8003996:	d100      	bne.n	800399a <memset+0xa>
 8003998:	4770      	bx	lr
 800399a:	f803 1b01 	strb.w	r1, [r3], #1
 800399e:	e7f9      	b.n	8003994 <memset+0x4>

080039a0 <srand>:
 80039a0:	b538      	push	{r3, r4, r5, lr}
 80039a2:	4b10      	ldr	r3, [pc, #64]	; (80039e4 <srand+0x44>)
 80039a4:	4604      	mov	r4, r0
 80039a6:	681d      	ldr	r5, [r3, #0]
 80039a8:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80039aa:	b9b3      	cbnz	r3, 80039da <srand+0x3a>
 80039ac:	2018      	movs	r0, #24
 80039ae:	f000 f8f1 	bl	8003b94 <malloc>
 80039b2:	4602      	mov	r2, r0
 80039b4:	63a8      	str	r0, [r5, #56]	; 0x38
 80039b6:	b920      	cbnz	r0, 80039c2 <srand+0x22>
 80039b8:	2142      	movs	r1, #66	; 0x42
 80039ba:	4b0b      	ldr	r3, [pc, #44]	; (80039e8 <srand+0x48>)
 80039bc:	480b      	ldr	r0, [pc, #44]	; (80039ec <srand+0x4c>)
 80039be:	f000 f8a7 	bl	8003b10 <__assert_func>
 80039c2:	490b      	ldr	r1, [pc, #44]	; (80039f0 <srand+0x50>)
 80039c4:	4b0b      	ldr	r3, [pc, #44]	; (80039f4 <srand+0x54>)
 80039c6:	e9c0 1300 	strd	r1, r3, [r0]
 80039ca:	4b0b      	ldr	r3, [pc, #44]	; (80039f8 <srand+0x58>)
 80039cc:	2100      	movs	r1, #0
 80039ce:	6083      	str	r3, [r0, #8]
 80039d0:	230b      	movs	r3, #11
 80039d2:	8183      	strh	r3, [r0, #12]
 80039d4:	2001      	movs	r0, #1
 80039d6:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80039da:	2200      	movs	r2, #0
 80039dc:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80039de:	611c      	str	r4, [r3, #16]
 80039e0:	615a      	str	r2, [r3, #20]
 80039e2:	bd38      	pop	{r3, r4, r5, pc}
 80039e4:	2000009c 	.word	0x2000009c
 80039e8:	08004ed8 	.word	0x08004ed8
 80039ec:	08004eef 	.word	0x08004eef
 80039f0:	abcd330e 	.word	0xabcd330e
 80039f4:	e66d1234 	.word	0xe66d1234
 80039f8:	0005deec 	.word	0x0005deec

080039fc <rand>:
 80039fc:	4b17      	ldr	r3, [pc, #92]	; (8003a5c <rand+0x60>)
 80039fe:	b510      	push	{r4, lr}
 8003a00:	681c      	ldr	r4, [r3, #0]
 8003a02:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003a04:	b9b3      	cbnz	r3, 8003a34 <rand+0x38>
 8003a06:	2018      	movs	r0, #24
 8003a08:	f000 f8c4 	bl	8003b94 <malloc>
 8003a0c:	4602      	mov	r2, r0
 8003a0e:	63a0      	str	r0, [r4, #56]	; 0x38
 8003a10:	b920      	cbnz	r0, 8003a1c <rand+0x20>
 8003a12:	214e      	movs	r1, #78	; 0x4e
 8003a14:	4b12      	ldr	r3, [pc, #72]	; (8003a60 <rand+0x64>)
 8003a16:	4813      	ldr	r0, [pc, #76]	; (8003a64 <rand+0x68>)
 8003a18:	f000 f87a 	bl	8003b10 <__assert_func>
 8003a1c:	4912      	ldr	r1, [pc, #72]	; (8003a68 <rand+0x6c>)
 8003a1e:	4b13      	ldr	r3, [pc, #76]	; (8003a6c <rand+0x70>)
 8003a20:	e9c0 1300 	strd	r1, r3, [r0]
 8003a24:	4b12      	ldr	r3, [pc, #72]	; (8003a70 <rand+0x74>)
 8003a26:	2100      	movs	r1, #0
 8003a28:	6083      	str	r3, [r0, #8]
 8003a2a:	230b      	movs	r3, #11
 8003a2c:	8183      	strh	r3, [r0, #12]
 8003a2e:	2001      	movs	r0, #1
 8003a30:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003a34:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8003a36:	480f      	ldr	r0, [pc, #60]	; (8003a74 <rand+0x78>)
 8003a38:	690a      	ldr	r2, [r1, #16]
 8003a3a:	694b      	ldr	r3, [r1, #20]
 8003a3c:	4350      	muls	r0, r2
 8003a3e:	4c0e      	ldr	r4, [pc, #56]	; (8003a78 <rand+0x7c>)
 8003a40:	fb04 0003 	mla	r0, r4, r3, r0
 8003a44:	fba2 3404 	umull	r3, r4, r2, r4
 8003a48:	1c5a      	adds	r2, r3, #1
 8003a4a:	4404      	add	r4, r0
 8003a4c:	f144 0000 	adc.w	r0, r4, #0
 8003a50:	e9c1 2004 	strd	r2, r0, [r1, #16]
 8003a54:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8003a58:	bd10      	pop	{r4, pc}
 8003a5a:	bf00      	nop
 8003a5c:	2000009c 	.word	0x2000009c
 8003a60:	08004ed8 	.word	0x08004ed8
 8003a64:	08004eef 	.word	0x08004eef
 8003a68:	abcd330e 	.word	0xabcd330e
 8003a6c:	e66d1234 	.word	0xe66d1234
 8003a70:	0005deec 	.word	0x0005deec
 8003a74:	5851f42d 	.word	0x5851f42d
 8003a78:	4c957f2d 	.word	0x4c957f2d

08003a7c <siprintf>:
 8003a7c:	b40e      	push	{r1, r2, r3}
 8003a7e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003a82:	b500      	push	{lr}
 8003a84:	b09c      	sub	sp, #112	; 0x70
 8003a86:	ab1d      	add	r3, sp, #116	; 0x74
 8003a88:	9002      	str	r0, [sp, #8]
 8003a8a:	9006      	str	r0, [sp, #24]
 8003a8c:	9107      	str	r1, [sp, #28]
 8003a8e:	9104      	str	r1, [sp, #16]
 8003a90:	4808      	ldr	r0, [pc, #32]	; (8003ab4 <siprintf+0x38>)
 8003a92:	4909      	ldr	r1, [pc, #36]	; (8003ab8 <siprintf+0x3c>)
 8003a94:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a98:	9105      	str	r1, [sp, #20]
 8003a9a:	6800      	ldr	r0, [r0, #0]
 8003a9c:	a902      	add	r1, sp, #8
 8003a9e:	9301      	str	r3, [sp, #4]
 8003aa0:	f000 f982 	bl	8003da8 <_svfiprintf_r>
 8003aa4:	2200      	movs	r2, #0
 8003aa6:	9b02      	ldr	r3, [sp, #8]
 8003aa8:	701a      	strb	r2, [r3, #0]
 8003aaa:	b01c      	add	sp, #112	; 0x70
 8003aac:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ab0:	b003      	add	sp, #12
 8003ab2:	4770      	bx	lr
 8003ab4:	2000009c 	.word	0x2000009c
 8003ab8:	ffff0208 	.word	0xffff0208

08003abc <strcat>:
 8003abc:	4602      	mov	r2, r0
 8003abe:	b510      	push	{r4, lr}
 8003ac0:	7814      	ldrb	r4, [r2, #0]
 8003ac2:	4613      	mov	r3, r2
 8003ac4:	3201      	adds	r2, #1
 8003ac6:	2c00      	cmp	r4, #0
 8003ac8:	d1fa      	bne.n	8003ac0 <strcat+0x4>
 8003aca:	3b01      	subs	r3, #1
 8003acc:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003ad0:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003ad4:	2a00      	cmp	r2, #0
 8003ad6:	d1f9      	bne.n	8003acc <strcat+0x10>
 8003ad8:	bd10      	pop	{r4, pc}
	...

08003adc <time>:
 8003adc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003ade:	4b0b      	ldr	r3, [pc, #44]	; (8003b0c <time+0x30>)
 8003ae0:	4604      	mov	r4, r0
 8003ae2:	2200      	movs	r2, #0
 8003ae4:	4669      	mov	r1, sp
 8003ae6:	6818      	ldr	r0, [r3, #0]
 8003ae8:	f000 f842 	bl	8003b70 <_gettimeofday_r>
 8003aec:	2800      	cmp	r0, #0
 8003aee:	da05      	bge.n	8003afc <time+0x20>
 8003af0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003af4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003af8:	e9cd 2300 	strd	r2, r3, [sp]
 8003afc:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003b00:	b10c      	cbz	r4, 8003b06 <time+0x2a>
 8003b02:	e9c4 0100 	strd	r0, r1, [r4]
 8003b06:	b004      	add	sp, #16
 8003b08:	bd10      	pop	{r4, pc}
 8003b0a:	bf00      	nop
 8003b0c:	2000009c 	.word	0x2000009c

08003b10 <__assert_func>:
 8003b10:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003b12:	4614      	mov	r4, r2
 8003b14:	461a      	mov	r2, r3
 8003b16:	4b09      	ldr	r3, [pc, #36]	; (8003b3c <__assert_func+0x2c>)
 8003b18:	4605      	mov	r5, r0
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	68d8      	ldr	r0, [r3, #12]
 8003b1e:	b14c      	cbz	r4, 8003b34 <__assert_func+0x24>
 8003b20:	4b07      	ldr	r3, [pc, #28]	; (8003b40 <__assert_func+0x30>)
 8003b22:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003b26:	9100      	str	r1, [sp, #0]
 8003b28:	462b      	mov	r3, r5
 8003b2a:	4906      	ldr	r1, [pc, #24]	; (8003b44 <__assert_func+0x34>)
 8003b2c:	f000 f80e 	bl	8003b4c <fiprintf>
 8003b30:	f000 fdf8 	bl	8004724 <abort>
 8003b34:	4b04      	ldr	r3, [pc, #16]	; (8003b48 <__assert_func+0x38>)
 8003b36:	461c      	mov	r4, r3
 8003b38:	e7f3      	b.n	8003b22 <__assert_func+0x12>
 8003b3a:	bf00      	nop
 8003b3c:	2000009c 	.word	0x2000009c
 8003b40:	08004f4e 	.word	0x08004f4e
 8003b44:	08004f5b 	.word	0x08004f5b
 8003b48:	08004f89 	.word	0x08004f89

08003b4c <fiprintf>:
 8003b4c:	b40e      	push	{r1, r2, r3}
 8003b4e:	b503      	push	{r0, r1, lr}
 8003b50:	4601      	mov	r1, r0
 8003b52:	ab03      	add	r3, sp, #12
 8003b54:	4805      	ldr	r0, [pc, #20]	; (8003b6c <fiprintf+0x20>)
 8003b56:	f853 2b04 	ldr.w	r2, [r3], #4
 8003b5a:	6800      	ldr	r0, [r0, #0]
 8003b5c:	9301      	str	r3, [sp, #4]
 8003b5e:	f000 fa4b 	bl	8003ff8 <_vfiprintf_r>
 8003b62:	b002      	add	sp, #8
 8003b64:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b68:	b003      	add	sp, #12
 8003b6a:	4770      	bx	lr
 8003b6c:	2000009c 	.word	0x2000009c

08003b70 <_gettimeofday_r>:
 8003b70:	b538      	push	{r3, r4, r5, lr}
 8003b72:	2300      	movs	r3, #0
 8003b74:	4d06      	ldr	r5, [pc, #24]	; (8003b90 <_gettimeofday_r+0x20>)
 8003b76:	4604      	mov	r4, r0
 8003b78:	4608      	mov	r0, r1
 8003b7a:	4611      	mov	r1, r2
 8003b7c:	602b      	str	r3, [r5, #0]
 8003b7e:	f001 f949 	bl	8004e14 <_gettimeofday>
 8003b82:	1c43      	adds	r3, r0, #1
 8003b84:	d102      	bne.n	8003b8c <_gettimeofday_r+0x1c>
 8003b86:	682b      	ldr	r3, [r5, #0]
 8003b88:	b103      	cbz	r3, 8003b8c <_gettimeofday_r+0x1c>
 8003b8a:	6023      	str	r3, [r4, #0]
 8003b8c:	bd38      	pop	{r3, r4, r5, pc}
 8003b8e:	bf00      	nop
 8003b90:	2000130c 	.word	0x2000130c

08003b94 <malloc>:
 8003b94:	4b02      	ldr	r3, [pc, #8]	; (8003ba0 <malloc+0xc>)
 8003b96:	4601      	mov	r1, r0
 8003b98:	6818      	ldr	r0, [r3, #0]
 8003b9a:	f000 b84f 	b.w	8003c3c <_malloc_r>
 8003b9e:	bf00      	nop
 8003ba0:	2000009c 	.word	0x2000009c

08003ba4 <_free_r>:
 8003ba4:	b538      	push	{r3, r4, r5, lr}
 8003ba6:	4605      	mov	r5, r0
 8003ba8:	2900      	cmp	r1, #0
 8003baa:	d043      	beq.n	8003c34 <_free_r+0x90>
 8003bac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003bb0:	1f0c      	subs	r4, r1, #4
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	bfb8      	it	lt
 8003bb6:	18e4      	addlt	r4, r4, r3
 8003bb8:	f001 f802 	bl	8004bc0 <__malloc_lock>
 8003bbc:	4a1e      	ldr	r2, [pc, #120]	; (8003c38 <_free_r+0x94>)
 8003bbe:	6813      	ldr	r3, [r2, #0]
 8003bc0:	4610      	mov	r0, r2
 8003bc2:	b933      	cbnz	r3, 8003bd2 <_free_r+0x2e>
 8003bc4:	6063      	str	r3, [r4, #4]
 8003bc6:	6014      	str	r4, [r2, #0]
 8003bc8:	4628      	mov	r0, r5
 8003bca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003bce:	f000 bffd 	b.w	8004bcc <__malloc_unlock>
 8003bd2:	42a3      	cmp	r3, r4
 8003bd4:	d90a      	bls.n	8003bec <_free_r+0x48>
 8003bd6:	6821      	ldr	r1, [r4, #0]
 8003bd8:	1862      	adds	r2, r4, r1
 8003bda:	4293      	cmp	r3, r2
 8003bdc:	bf01      	itttt	eq
 8003bde:	681a      	ldreq	r2, [r3, #0]
 8003be0:	685b      	ldreq	r3, [r3, #4]
 8003be2:	1852      	addeq	r2, r2, r1
 8003be4:	6022      	streq	r2, [r4, #0]
 8003be6:	6063      	str	r3, [r4, #4]
 8003be8:	6004      	str	r4, [r0, #0]
 8003bea:	e7ed      	b.n	8003bc8 <_free_r+0x24>
 8003bec:	461a      	mov	r2, r3
 8003bee:	685b      	ldr	r3, [r3, #4]
 8003bf0:	b10b      	cbz	r3, 8003bf6 <_free_r+0x52>
 8003bf2:	42a3      	cmp	r3, r4
 8003bf4:	d9fa      	bls.n	8003bec <_free_r+0x48>
 8003bf6:	6811      	ldr	r1, [r2, #0]
 8003bf8:	1850      	adds	r0, r2, r1
 8003bfa:	42a0      	cmp	r0, r4
 8003bfc:	d10b      	bne.n	8003c16 <_free_r+0x72>
 8003bfe:	6820      	ldr	r0, [r4, #0]
 8003c00:	4401      	add	r1, r0
 8003c02:	1850      	adds	r0, r2, r1
 8003c04:	4283      	cmp	r3, r0
 8003c06:	6011      	str	r1, [r2, #0]
 8003c08:	d1de      	bne.n	8003bc8 <_free_r+0x24>
 8003c0a:	6818      	ldr	r0, [r3, #0]
 8003c0c:	685b      	ldr	r3, [r3, #4]
 8003c0e:	4401      	add	r1, r0
 8003c10:	6011      	str	r1, [r2, #0]
 8003c12:	6053      	str	r3, [r2, #4]
 8003c14:	e7d8      	b.n	8003bc8 <_free_r+0x24>
 8003c16:	d902      	bls.n	8003c1e <_free_r+0x7a>
 8003c18:	230c      	movs	r3, #12
 8003c1a:	602b      	str	r3, [r5, #0]
 8003c1c:	e7d4      	b.n	8003bc8 <_free_r+0x24>
 8003c1e:	6820      	ldr	r0, [r4, #0]
 8003c20:	1821      	adds	r1, r4, r0
 8003c22:	428b      	cmp	r3, r1
 8003c24:	bf01      	itttt	eq
 8003c26:	6819      	ldreq	r1, [r3, #0]
 8003c28:	685b      	ldreq	r3, [r3, #4]
 8003c2a:	1809      	addeq	r1, r1, r0
 8003c2c:	6021      	streq	r1, [r4, #0]
 8003c2e:	6063      	str	r3, [r4, #4]
 8003c30:	6054      	str	r4, [r2, #4]
 8003c32:	e7c9      	b.n	8003bc8 <_free_r+0x24>
 8003c34:	bd38      	pop	{r3, r4, r5, pc}
 8003c36:	bf00      	nop
 8003c38:	200010c0 	.word	0x200010c0

08003c3c <_malloc_r>:
 8003c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c3e:	1ccd      	adds	r5, r1, #3
 8003c40:	f025 0503 	bic.w	r5, r5, #3
 8003c44:	3508      	adds	r5, #8
 8003c46:	2d0c      	cmp	r5, #12
 8003c48:	bf38      	it	cc
 8003c4a:	250c      	movcc	r5, #12
 8003c4c:	2d00      	cmp	r5, #0
 8003c4e:	4606      	mov	r6, r0
 8003c50:	db01      	blt.n	8003c56 <_malloc_r+0x1a>
 8003c52:	42a9      	cmp	r1, r5
 8003c54:	d903      	bls.n	8003c5e <_malloc_r+0x22>
 8003c56:	230c      	movs	r3, #12
 8003c58:	6033      	str	r3, [r6, #0]
 8003c5a:	2000      	movs	r0, #0
 8003c5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003c5e:	f000 ffaf 	bl	8004bc0 <__malloc_lock>
 8003c62:	4921      	ldr	r1, [pc, #132]	; (8003ce8 <_malloc_r+0xac>)
 8003c64:	680a      	ldr	r2, [r1, #0]
 8003c66:	4614      	mov	r4, r2
 8003c68:	b99c      	cbnz	r4, 8003c92 <_malloc_r+0x56>
 8003c6a:	4f20      	ldr	r7, [pc, #128]	; (8003cec <_malloc_r+0xb0>)
 8003c6c:	683b      	ldr	r3, [r7, #0]
 8003c6e:	b923      	cbnz	r3, 8003c7a <_malloc_r+0x3e>
 8003c70:	4621      	mov	r1, r4
 8003c72:	4630      	mov	r0, r6
 8003c74:	f000 fc86 	bl	8004584 <_sbrk_r>
 8003c78:	6038      	str	r0, [r7, #0]
 8003c7a:	4629      	mov	r1, r5
 8003c7c:	4630      	mov	r0, r6
 8003c7e:	f000 fc81 	bl	8004584 <_sbrk_r>
 8003c82:	1c43      	adds	r3, r0, #1
 8003c84:	d123      	bne.n	8003cce <_malloc_r+0x92>
 8003c86:	230c      	movs	r3, #12
 8003c88:	4630      	mov	r0, r6
 8003c8a:	6033      	str	r3, [r6, #0]
 8003c8c:	f000 ff9e 	bl	8004bcc <__malloc_unlock>
 8003c90:	e7e3      	b.n	8003c5a <_malloc_r+0x1e>
 8003c92:	6823      	ldr	r3, [r4, #0]
 8003c94:	1b5b      	subs	r3, r3, r5
 8003c96:	d417      	bmi.n	8003cc8 <_malloc_r+0x8c>
 8003c98:	2b0b      	cmp	r3, #11
 8003c9a:	d903      	bls.n	8003ca4 <_malloc_r+0x68>
 8003c9c:	6023      	str	r3, [r4, #0]
 8003c9e:	441c      	add	r4, r3
 8003ca0:	6025      	str	r5, [r4, #0]
 8003ca2:	e004      	b.n	8003cae <_malloc_r+0x72>
 8003ca4:	6863      	ldr	r3, [r4, #4]
 8003ca6:	42a2      	cmp	r2, r4
 8003ca8:	bf0c      	ite	eq
 8003caa:	600b      	streq	r3, [r1, #0]
 8003cac:	6053      	strne	r3, [r2, #4]
 8003cae:	4630      	mov	r0, r6
 8003cb0:	f000 ff8c 	bl	8004bcc <__malloc_unlock>
 8003cb4:	f104 000b 	add.w	r0, r4, #11
 8003cb8:	1d23      	adds	r3, r4, #4
 8003cba:	f020 0007 	bic.w	r0, r0, #7
 8003cbe:	1ac2      	subs	r2, r0, r3
 8003cc0:	d0cc      	beq.n	8003c5c <_malloc_r+0x20>
 8003cc2:	1a1b      	subs	r3, r3, r0
 8003cc4:	50a3      	str	r3, [r4, r2]
 8003cc6:	e7c9      	b.n	8003c5c <_malloc_r+0x20>
 8003cc8:	4622      	mov	r2, r4
 8003cca:	6864      	ldr	r4, [r4, #4]
 8003ccc:	e7cc      	b.n	8003c68 <_malloc_r+0x2c>
 8003cce:	1cc4      	adds	r4, r0, #3
 8003cd0:	f024 0403 	bic.w	r4, r4, #3
 8003cd4:	42a0      	cmp	r0, r4
 8003cd6:	d0e3      	beq.n	8003ca0 <_malloc_r+0x64>
 8003cd8:	1a21      	subs	r1, r4, r0
 8003cda:	4630      	mov	r0, r6
 8003cdc:	f000 fc52 	bl	8004584 <_sbrk_r>
 8003ce0:	3001      	adds	r0, #1
 8003ce2:	d1dd      	bne.n	8003ca0 <_malloc_r+0x64>
 8003ce4:	e7cf      	b.n	8003c86 <_malloc_r+0x4a>
 8003ce6:	bf00      	nop
 8003ce8:	200010c0 	.word	0x200010c0
 8003cec:	200010c4 	.word	0x200010c4

08003cf0 <__ssputs_r>:
 8003cf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cf4:	688e      	ldr	r6, [r1, #8]
 8003cf6:	4682      	mov	sl, r0
 8003cf8:	429e      	cmp	r6, r3
 8003cfa:	460c      	mov	r4, r1
 8003cfc:	4690      	mov	r8, r2
 8003cfe:	461f      	mov	r7, r3
 8003d00:	d838      	bhi.n	8003d74 <__ssputs_r+0x84>
 8003d02:	898a      	ldrh	r2, [r1, #12]
 8003d04:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003d08:	d032      	beq.n	8003d70 <__ssputs_r+0x80>
 8003d0a:	6825      	ldr	r5, [r4, #0]
 8003d0c:	6909      	ldr	r1, [r1, #16]
 8003d0e:	3301      	adds	r3, #1
 8003d10:	eba5 0901 	sub.w	r9, r5, r1
 8003d14:	6965      	ldr	r5, [r4, #20]
 8003d16:	444b      	add	r3, r9
 8003d18:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003d1c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003d20:	106d      	asrs	r5, r5, #1
 8003d22:	429d      	cmp	r5, r3
 8003d24:	bf38      	it	cc
 8003d26:	461d      	movcc	r5, r3
 8003d28:	0553      	lsls	r3, r2, #21
 8003d2a:	d531      	bpl.n	8003d90 <__ssputs_r+0xa0>
 8003d2c:	4629      	mov	r1, r5
 8003d2e:	f7ff ff85 	bl	8003c3c <_malloc_r>
 8003d32:	4606      	mov	r6, r0
 8003d34:	b950      	cbnz	r0, 8003d4c <__ssputs_r+0x5c>
 8003d36:	230c      	movs	r3, #12
 8003d38:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003d3c:	f8ca 3000 	str.w	r3, [sl]
 8003d40:	89a3      	ldrh	r3, [r4, #12]
 8003d42:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003d46:	81a3      	strh	r3, [r4, #12]
 8003d48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d4c:	464a      	mov	r2, r9
 8003d4e:	6921      	ldr	r1, [r4, #16]
 8003d50:	f7ff fe10 	bl	8003974 <memcpy>
 8003d54:	89a3      	ldrh	r3, [r4, #12]
 8003d56:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003d5a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003d5e:	81a3      	strh	r3, [r4, #12]
 8003d60:	6126      	str	r6, [r4, #16]
 8003d62:	444e      	add	r6, r9
 8003d64:	6026      	str	r6, [r4, #0]
 8003d66:	463e      	mov	r6, r7
 8003d68:	6165      	str	r5, [r4, #20]
 8003d6a:	eba5 0509 	sub.w	r5, r5, r9
 8003d6e:	60a5      	str	r5, [r4, #8]
 8003d70:	42be      	cmp	r6, r7
 8003d72:	d900      	bls.n	8003d76 <__ssputs_r+0x86>
 8003d74:	463e      	mov	r6, r7
 8003d76:	4632      	mov	r2, r6
 8003d78:	4641      	mov	r1, r8
 8003d7a:	6820      	ldr	r0, [r4, #0]
 8003d7c:	f000 ff06 	bl	8004b8c <memmove>
 8003d80:	68a3      	ldr	r3, [r4, #8]
 8003d82:	6822      	ldr	r2, [r4, #0]
 8003d84:	1b9b      	subs	r3, r3, r6
 8003d86:	4432      	add	r2, r6
 8003d88:	2000      	movs	r0, #0
 8003d8a:	60a3      	str	r3, [r4, #8]
 8003d8c:	6022      	str	r2, [r4, #0]
 8003d8e:	e7db      	b.n	8003d48 <__ssputs_r+0x58>
 8003d90:	462a      	mov	r2, r5
 8003d92:	f000 ff21 	bl	8004bd8 <_realloc_r>
 8003d96:	4606      	mov	r6, r0
 8003d98:	2800      	cmp	r0, #0
 8003d9a:	d1e1      	bne.n	8003d60 <__ssputs_r+0x70>
 8003d9c:	4650      	mov	r0, sl
 8003d9e:	6921      	ldr	r1, [r4, #16]
 8003da0:	f7ff ff00 	bl	8003ba4 <_free_r>
 8003da4:	e7c7      	b.n	8003d36 <__ssputs_r+0x46>
	...

08003da8 <_svfiprintf_r>:
 8003da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003dac:	4698      	mov	r8, r3
 8003dae:	898b      	ldrh	r3, [r1, #12]
 8003db0:	4607      	mov	r7, r0
 8003db2:	061b      	lsls	r3, r3, #24
 8003db4:	460d      	mov	r5, r1
 8003db6:	4614      	mov	r4, r2
 8003db8:	b09d      	sub	sp, #116	; 0x74
 8003dba:	d50e      	bpl.n	8003dda <_svfiprintf_r+0x32>
 8003dbc:	690b      	ldr	r3, [r1, #16]
 8003dbe:	b963      	cbnz	r3, 8003dda <_svfiprintf_r+0x32>
 8003dc0:	2140      	movs	r1, #64	; 0x40
 8003dc2:	f7ff ff3b 	bl	8003c3c <_malloc_r>
 8003dc6:	6028      	str	r0, [r5, #0]
 8003dc8:	6128      	str	r0, [r5, #16]
 8003dca:	b920      	cbnz	r0, 8003dd6 <_svfiprintf_r+0x2e>
 8003dcc:	230c      	movs	r3, #12
 8003dce:	603b      	str	r3, [r7, #0]
 8003dd0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003dd4:	e0d1      	b.n	8003f7a <_svfiprintf_r+0x1d2>
 8003dd6:	2340      	movs	r3, #64	; 0x40
 8003dd8:	616b      	str	r3, [r5, #20]
 8003dda:	2300      	movs	r3, #0
 8003ddc:	9309      	str	r3, [sp, #36]	; 0x24
 8003dde:	2320      	movs	r3, #32
 8003de0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003de4:	2330      	movs	r3, #48	; 0x30
 8003de6:	f04f 0901 	mov.w	r9, #1
 8003dea:	f8cd 800c 	str.w	r8, [sp, #12]
 8003dee:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003f94 <_svfiprintf_r+0x1ec>
 8003df2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003df6:	4623      	mov	r3, r4
 8003df8:	469a      	mov	sl, r3
 8003dfa:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003dfe:	b10a      	cbz	r2, 8003e04 <_svfiprintf_r+0x5c>
 8003e00:	2a25      	cmp	r2, #37	; 0x25
 8003e02:	d1f9      	bne.n	8003df8 <_svfiprintf_r+0x50>
 8003e04:	ebba 0b04 	subs.w	fp, sl, r4
 8003e08:	d00b      	beq.n	8003e22 <_svfiprintf_r+0x7a>
 8003e0a:	465b      	mov	r3, fp
 8003e0c:	4622      	mov	r2, r4
 8003e0e:	4629      	mov	r1, r5
 8003e10:	4638      	mov	r0, r7
 8003e12:	f7ff ff6d 	bl	8003cf0 <__ssputs_r>
 8003e16:	3001      	adds	r0, #1
 8003e18:	f000 80aa 	beq.w	8003f70 <_svfiprintf_r+0x1c8>
 8003e1c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003e1e:	445a      	add	r2, fp
 8003e20:	9209      	str	r2, [sp, #36]	; 0x24
 8003e22:	f89a 3000 	ldrb.w	r3, [sl]
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	f000 80a2 	beq.w	8003f70 <_svfiprintf_r+0x1c8>
 8003e2c:	2300      	movs	r3, #0
 8003e2e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003e32:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003e36:	f10a 0a01 	add.w	sl, sl, #1
 8003e3a:	9304      	str	r3, [sp, #16]
 8003e3c:	9307      	str	r3, [sp, #28]
 8003e3e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003e42:	931a      	str	r3, [sp, #104]	; 0x68
 8003e44:	4654      	mov	r4, sl
 8003e46:	2205      	movs	r2, #5
 8003e48:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e4c:	4851      	ldr	r0, [pc, #324]	; (8003f94 <_svfiprintf_r+0x1ec>)
 8003e4e:	f000 fe8f 	bl	8004b70 <memchr>
 8003e52:	9a04      	ldr	r2, [sp, #16]
 8003e54:	b9d8      	cbnz	r0, 8003e8e <_svfiprintf_r+0xe6>
 8003e56:	06d0      	lsls	r0, r2, #27
 8003e58:	bf44      	itt	mi
 8003e5a:	2320      	movmi	r3, #32
 8003e5c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003e60:	0711      	lsls	r1, r2, #28
 8003e62:	bf44      	itt	mi
 8003e64:	232b      	movmi	r3, #43	; 0x2b
 8003e66:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003e6a:	f89a 3000 	ldrb.w	r3, [sl]
 8003e6e:	2b2a      	cmp	r3, #42	; 0x2a
 8003e70:	d015      	beq.n	8003e9e <_svfiprintf_r+0xf6>
 8003e72:	4654      	mov	r4, sl
 8003e74:	2000      	movs	r0, #0
 8003e76:	f04f 0c0a 	mov.w	ip, #10
 8003e7a:	9a07      	ldr	r2, [sp, #28]
 8003e7c:	4621      	mov	r1, r4
 8003e7e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003e82:	3b30      	subs	r3, #48	; 0x30
 8003e84:	2b09      	cmp	r3, #9
 8003e86:	d94e      	bls.n	8003f26 <_svfiprintf_r+0x17e>
 8003e88:	b1b0      	cbz	r0, 8003eb8 <_svfiprintf_r+0x110>
 8003e8a:	9207      	str	r2, [sp, #28]
 8003e8c:	e014      	b.n	8003eb8 <_svfiprintf_r+0x110>
 8003e8e:	eba0 0308 	sub.w	r3, r0, r8
 8003e92:	fa09 f303 	lsl.w	r3, r9, r3
 8003e96:	4313      	orrs	r3, r2
 8003e98:	46a2      	mov	sl, r4
 8003e9a:	9304      	str	r3, [sp, #16]
 8003e9c:	e7d2      	b.n	8003e44 <_svfiprintf_r+0x9c>
 8003e9e:	9b03      	ldr	r3, [sp, #12]
 8003ea0:	1d19      	adds	r1, r3, #4
 8003ea2:	681b      	ldr	r3, [r3, #0]
 8003ea4:	9103      	str	r1, [sp, #12]
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	bfbb      	ittet	lt
 8003eaa:	425b      	neglt	r3, r3
 8003eac:	f042 0202 	orrlt.w	r2, r2, #2
 8003eb0:	9307      	strge	r3, [sp, #28]
 8003eb2:	9307      	strlt	r3, [sp, #28]
 8003eb4:	bfb8      	it	lt
 8003eb6:	9204      	strlt	r2, [sp, #16]
 8003eb8:	7823      	ldrb	r3, [r4, #0]
 8003eba:	2b2e      	cmp	r3, #46	; 0x2e
 8003ebc:	d10c      	bne.n	8003ed8 <_svfiprintf_r+0x130>
 8003ebe:	7863      	ldrb	r3, [r4, #1]
 8003ec0:	2b2a      	cmp	r3, #42	; 0x2a
 8003ec2:	d135      	bne.n	8003f30 <_svfiprintf_r+0x188>
 8003ec4:	9b03      	ldr	r3, [sp, #12]
 8003ec6:	3402      	adds	r4, #2
 8003ec8:	1d1a      	adds	r2, r3, #4
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	9203      	str	r2, [sp, #12]
 8003ece:	2b00      	cmp	r3, #0
 8003ed0:	bfb8      	it	lt
 8003ed2:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8003ed6:	9305      	str	r3, [sp, #20]
 8003ed8:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8003fa4 <_svfiprintf_r+0x1fc>
 8003edc:	2203      	movs	r2, #3
 8003ede:	4650      	mov	r0, sl
 8003ee0:	7821      	ldrb	r1, [r4, #0]
 8003ee2:	f000 fe45 	bl	8004b70 <memchr>
 8003ee6:	b140      	cbz	r0, 8003efa <_svfiprintf_r+0x152>
 8003ee8:	2340      	movs	r3, #64	; 0x40
 8003eea:	eba0 000a 	sub.w	r0, r0, sl
 8003eee:	fa03 f000 	lsl.w	r0, r3, r0
 8003ef2:	9b04      	ldr	r3, [sp, #16]
 8003ef4:	3401      	adds	r4, #1
 8003ef6:	4303      	orrs	r3, r0
 8003ef8:	9304      	str	r3, [sp, #16]
 8003efa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003efe:	2206      	movs	r2, #6
 8003f00:	4825      	ldr	r0, [pc, #148]	; (8003f98 <_svfiprintf_r+0x1f0>)
 8003f02:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003f06:	f000 fe33 	bl	8004b70 <memchr>
 8003f0a:	2800      	cmp	r0, #0
 8003f0c:	d038      	beq.n	8003f80 <_svfiprintf_r+0x1d8>
 8003f0e:	4b23      	ldr	r3, [pc, #140]	; (8003f9c <_svfiprintf_r+0x1f4>)
 8003f10:	bb1b      	cbnz	r3, 8003f5a <_svfiprintf_r+0x1b2>
 8003f12:	9b03      	ldr	r3, [sp, #12]
 8003f14:	3307      	adds	r3, #7
 8003f16:	f023 0307 	bic.w	r3, r3, #7
 8003f1a:	3308      	adds	r3, #8
 8003f1c:	9303      	str	r3, [sp, #12]
 8003f1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f20:	4433      	add	r3, r6
 8003f22:	9309      	str	r3, [sp, #36]	; 0x24
 8003f24:	e767      	b.n	8003df6 <_svfiprintf_r+0x4e>
 8003f26:	460c      	mov	r4, r1
 8003f28:	2001      	movs	r0, #1
 8003f2a:	fb0c 3202 	mla	r2, ip, r2, r3
 8003f2e:	e7a5      	b.n	8003e7c <_svfiprintf_r+0xd4>
 8003f30:	2300      	movs	r3, #0
 8003f32:	f04f 0c0a 	mov.w	ip, #10
 8003f36:	4619      	mov	r1, r3
 8003f38:	3401      	adds	r4, #1
 8003f3a:	9305      	str	r3, [sp, #20]
 8003f3c:	4620      	mov	r0, r4
 8003f3e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003f42:	3a30      	subs	r2, #48	; 0x30
 8003f44:	2a09      	cmp	r2, #9
 8003f46:	d903      	bls.n	8003f50 <_svfiprintf_r+0x1a8>
 8003f48:	2b00      	cmp	r3, #0
 8003f4a:	d0c5      	beq.n	8003ed8 <_svfiprintf_r+0x130>
 8003f4c:	9105      	str	r1, [sp, #20]
 8003f4e:	e7c3      	b.n	8003ed8 <_svfiprintf_r+0x130>
 8003f50:	4604      	mov	r4, r0
 8003f52:	2301      	movs	r3, #1
 8003f54:	fb0c 2101 	mla	r1, ip, r1, r2
 8003f58:	e7f0      	b.n	8003f3c <_svfiprintf_r+0x194>
 8003f5a:	ab03      	add	r3, sp, #12
 8003f5c:	9300      	str	r3, [sp, #0]
 8003f5e:	462a      	mov	r2, r5
 8003f60:	4638      	mov	r0, r7
 8003f62:	4b0f      	ldr	r3, [pc, #60]	; (8003fa0 <_svfiprintf_r+0x1f8>)
 8003f64:	a904      	add	r1, sp, #16
 8003f66:	f3af 8000 	nop.w
 8003f6a:	1c42      	adds	r2, r0, #1
 8003f6c:	4606      	mov	r6, r0
 8003f6e:	d1d6      	bne.n	8003f1e <_svfiprintf_r+0x176>
 8003f70:	89ab      	ldrh	r3, [r5, #12]
 8003f72:	065b      	lsls	r3, r3, #25
 8003f74:	f53f af2c 	bmi.w	8003dd0 <_svfiprintf_r+0x28>
 8003f78:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003f7a:	b01d      	add	sp, #116	; 0x74
 8003f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f80:	ab03      	add	r3, sp, #12
 8003f82:	9300      	str	r3, [sp, #0]
 8003f84:	462a      	mov	r2, r5
 8003f86:	4638      	mov	r0, r7
 8003f88:	4b05      	ldr	r3, [pc, #20]	; (8003fa0 <_svfiprintf_r+0x1f8>)
 8003f8a:	a904      	add	r1, sp, #16
 8003f8c:	f000 f9d4 	bl	8004338 <_printf_i>
 8003f90:	e7eb      	b.n	8003f6a <_svfiprintf_r+0x1c2>
 8003f92:	bf00      	nop
 8003f94:	08004f8a 	.word	0x08004f8a
 8003f98:	08004f94 	.word	0x08004f94
 8003f9c:	00000000 	.word	0x00000000
 8003fa0:	08003cf1 	.word	0x08003cf1
 8003fa4:	08004f90 	.word	0x08004f90

08003fa8 <__sfputc_r>:
 8003fa8:	6893      	ldr	r3, [r2, #8]
 8003faa:	b410      	push	{r4}
 8003fac:	3b01      	subs	r3, #1
 8003fae:	2b00      	cmp	r3, #0
 8003fb0:	6093      	str	r3, [r2, #8]
 8003fb2:	da07      	bge.n	8003fc4 <__sfputc_r+0x1c>
 8003fb4:	6994      	ldr	r4, [r2, #24]
 8003fb6:	42a3      	cmp	r3, r4
 8003fb8:	db01      	blt.n	8003fbe <__sfputc_r+0x16>
 8003fba:	290a      	cmp	r1, #10
 8003fbc:	d102      	bne.n	8003fc4 <__sfputc_r+0x1c>
 8003fbe:	bc10      	pop	{r4}
 8003fc0:	f000 baf0 	b.w	80045a4 <__swbuf_r>
 8003fc4:	6813      	ldr	r3, [r2, #0]
 8003fc6:	1c58      	adds	r0, r3, #1
 8003fc8:	6010      	str	r0, [r2, #0]
 8003fca:	7019      	strb	r1, [r3, #0]
 8003fcc:	4608      	mov	r0, r1
 8003fce:	bc10      	pop	{r4}
 8003fd0:	4770      	bx	lr

08003fd2 <__sfputs_r>:
 8003fd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003fd4:	4606      	mov	r6, r0
 8003fd6:	460f      	mov	r7, r1
 8003fd8:	4614      	mov	r4, r2
 8003fda:	18d5      	adds	r5, r2, r3
 8003fdc:	42ac      	cmp	r4, r5
 8003fde:	d101      	bne.n	8003fe4 <__sfputs_r+0x12>
 8003fe0:	2000      	movs	r0, #0
 8003fe2:	e007      	b.n	8003ff4 <__sfputs_r+0x22>
 8003fe4:	463a      	mov	r2, r7
 8003fe6:	4630      	mov	r0, r6
 8003fe8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003fec:	f7ff ffdc 	bl	8003fa8 <__sfputc_r>
 8003ff0:	1c43      	adds	r3, r0, #1
 8003ff2:	d1f3      	bne.n	8003fdc <__sfputs_r+0xa>
 8003ff4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003ff8 <_vfiprintf_r>:
 8003ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ffc:	460d      	mov	r5, r1
 8003ffe:	4614      	mov	r4, r2
 8004000:	4698      	mov	r8, r3
 8004002:	4606      	mov	r6, r0
 8004004:	b09d      	sub	sp, #116	; 0x74
 8004006:	b118      	cbz	r0, 8004010 <_vfiprintf_r+0x18>
 8004008:	6983      	ldr	r3, [r0, #24]
 800400a:	b90b      	cbnz	r3, 8004010 <_vfiprintf_r+0x18>
 800400c:	f000 fcac 	bl	8004968 <__sinit>
 8004010:	4b89      	ldr	r3, [pc, #548]	; (8004238 <_vfiprintf_r+0x240>)
 8004012:	429d      	cmp	r5, r3
 8004014:	d11b      	bne.n	800404e <_vfiprintf_r+0x56>
 8004016:	6875      	ldr	r5, [r6, #4]
 8004018:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800401a:	07d9      	lsls	r1, r3, #31
 800401c:	d405      	bmi.n	800402a <_vfiprintf_r+0x32>
 800401e:	89ab      	ldrh	r3, [r5, #12]
 8004020:	059a      	lsls	r2, r3, #22
 8004022:	d402      	bmi.n	800402a <_vfiprintf_r+0x32>
 8004024:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004026:	f000 fd3d 	bl	8004aa4 <__retarget_lock_acquire_recursive>
 800402a:	89ab      	ldrh	r3, [r5, #12]
 800402c:	071b      	lsls	r3, r3, #28
 800402e:	d501      	bpl.n	8004034 <_vfiprintf_r+0x3c>
 8004030:	692b      	ldr	r3, [r5, #16]
 8004032:	b9eb      	cbnz	r3, 8004070 <_vfiprintf_r+0x78>
 8004034:	4629      	mov	r1, r5
 8004036:	4630      	mov	r0, r6
 8004038:	f000 fb06 	bl	8004648 <__swsetup_r>
 800403c:	b1c0      	cbz	r0, 8004070 <_vfiprintf_r+0x78>
 800403e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004040:	07dc      	lsls	r4, r3, #31
 8004042:	d50e      	bpl.n	8004062 <_vfiprintf_r+0x6a>
 8004044:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004048:	b01d      	add	sp, #116	; 0x74
 800404a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800404e:	4b7b      	ldr	r3, [pc, #492]	; (800423c <_vfiprintf_r+0x244>)
 8004050:	429d      	cmp	r5, r3
 8004052:	d101      	bne.n	8004058 <_vfiprintf_r+0x60>
 8004054:	68b5      	ldr	r5, [r6, #8]
 8004056:	e7df      	b.n	8004018 <_vfiprintf_r+0x20>
 8004058:	4b79      	ldr	r3, [pc, #484]	; (8004240 <_vfiprintf_r+0x248>)
 800405a:	429d      	cmp	r5, r3
 800405c:	bf08      	it	eq
 800405e:	68f5      	ldreq	r5, [r6, #12]
 8004060:	e7da      	b.n	8004018 <_vfiprintf_r+0x20>
 8004062:	89ab      	ldrh	r3, [r5, #12]
 8004064:	0598      	lsls	r0, r3, #22
 8004066:	d4ed      	bmi.n	8004044 <_vfiprintf_r+0x4c>
 8004068:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800406a:	f000 fd1c 	bl	8004aa6 <__retarget_lock_release_recursive>
 800406e:	e7e9      	b.n	8004044 <_vfiprintf_r+0x4c>
 8004070:	2300      	movs	r3, #0
 8004072:	9309      	str	r3, [sp, #36]	; 0x24
 8004074:	2320      	movs	r3, #32
 8004076:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800407a:	2330      	movs	r3, #48	; 0x30
 800407c:	f04f 0901 	mov.w	r9, #1
 8004080:	f8cd 800c 	str.w	r8, [sp, #12]
 8004084:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8004244 <_vfiprintf_r+0x24c>
 8004088:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800408c:	4623      	mov	r3, r4
 800408e:	469a      	mov	sl, r3
 8004090:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004094:	b10a      	cbz	r2, 800409a <_vfiprintf_r+0xa2>
 8004096:	2a25      	cmp	r2, #37	; 0x25
 8004098:	d1f9      	bne.n	800408e <_vfiprintf_r+0x96>
 800409a:	ebba 0b04 	subs.w	fp, sl, r4
 800409e:	d00b      	beq.n	80040b8 <_vfiprintf_r+0xc0>
 80040a0:	465b      	mov	r3, fp
 80040a2:	4622      	mov	r2, r4
 80040a4:	4629      	mov	r1, r5
 80040a6:	4630      	mov	r0, r6
 80040a8:	f7ff ff93 	bl	8003fd2 <__sfputs_r>
 80040ac:	3001      	adds	r0, #1
 80040ae:	f000 80aa 	beq.w	8004206 <_vfiprintf_r+0x20e>
 80040b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80040b4:	445a      	add	r2, fp
 80040b6:	9209      	str	r2, [sp, #36]	; 0x24
 80040b8:	f89a 3000 	ldrb.w	r3, [sl]
 80040bc:	2b00      	cmp	r3, #0
 80040be:	f000 80a2 	beq.w	8004206 <_vfiprintf_r+0x20e>
 80040c2:	2300      	movs	r3, #0
 80040c4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80040c8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80040cc:	f10a 0a01 	add.w	sl, sl, #1
 80040d0:	9304      	str	r3, [sp, #16]
 80040d2:	9307      	str	r3, [sp, #28]
 80040d4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80040d8:	931a      	str	r3, [sp, #104]	; 0x68
 80040da:	4654      	mov	r4, sl
 80040dc:	2205      	movs	r2, #5
 80040de:	f814 1b01 	ldrb.w	r1, [r4], #1
 80040e2:	4858      	ldr	r0, [pc, #352]	; (8004244 <_vfiprintf_r+0x24c>)
 80040e4:	f000 fd44 	bl	8004b70 <memchr>
 80040e8:	9a04      	ldr	r2, [sp, #16]
 80040ea:	b9d8      	cbnz	r0, 8004124 <_vfiprintf_r+0x12c>
 80040ec:	06d1      	lsls	r1, r2, #27
 80040ee:	bf44      	itt	mi
 80040f0:	2320      	movmi	r3, #32
 80040f2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80040f6:	0713      	lsls	r3, r2, #28
 80040f8:	bf44      	itt	mi
 80040fa:	232b      	movmi	r3, #43	; 0x2b
 80040fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004100:	f89a 3000 	ldrb.w	r3, [sl]
 8004104:	2b2a      	cmp	r3, #42	; 0x2a
 8004106:	d015      	beq.n	8004134 <_vfiprintf_r+0x13c>
 8004108:	4654      	mov	r4, sl
 800410a:	2000      	movs	r0, #0
 800410c:	f04f 0c0a 	mov.w	ip, #10
 8004110:	9a07      	ldr	r2, [sp, #28]
 8004112:	4621      	mov	r1, r4
 8004114:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004118:	3b30      	subs	r3, #48	; 0x30
 800411a:	2b09      	cmp	r3, #9
 800411c:	d94e      	bls.n	80041bc <_vfiprintf_r+0x1c4>
 800411e:	b1b0      	cbz	r0, 800414e <_vfiprintf_r+0x156>
 8004120:	9207      	str	r2, [sp, #28]
 8004122:	e014      	b.n	800414e <_vfiprintf_r+0x156>
 8004124:	eba0 0308 	sub.w	r3, r0, r8
 8004128:	fa09 f303 	lsl.w	r3, r9, r3
 800412c:	4313      	orrs	r3, r2
 800412e:	46a2      	mov	sl, r4
 8004130:	9304      	str	r3, [sp, #16]
 8004132:	e7d2      	b.n	80040da <_vfiprintf_r+0xe2>
 8004134:	9b03      	ldr	r3, [sp, #12]
 8004136:	1d19      	adds	r1, r3, #4
 8004138:	681b      	ldr	r3, [r3, #0]
 800413a:	9103      	str	r1, [sp, #12]
 800413c:	2b00      	cmp	r3, #0
 800413e:	bfbb      	ittet	lt
 8004140:	425b      	neglt	r3, r3
 8004142:	f042 0202 	orrlt.w	r2, r2, #2
 8004146:	9307      	strge	r3, [sp, #28]
 8004148:	9307      	strlt	r3, [sp, #28]
 800414a:	bfb8      	it	lt
 800414c:	9204      	strlt	r2, [sp, #16]
 800414e:	7823      	ldrb	r3, [r4, #0]
 8004150:	2b2e      	cmp	r3, #46	; 0x2e
 8004152:	d10c      	bne.n	800416e <_vfiprintf_r+0x176>
 8004154:	7863      	ldrb	r3, [r4, #1]
 8004156:	2b2a      	cmp	r3, #42	; 0x2a
 8004158:	d135      	bne.n	80041c6 <_vfiprintf_r+0x1ce>
 800415a:	9b03      	ldr	r3, [sp, #12]
 800415c:	3402      	adds	r4, #2
 800415e:	1d1a      	adds	r2, r3, #4
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	9203      	str	r2, [sp, #12]
 8004164:	2b00      	cmp	r3, #0
 8004166:	bfb8      	it	lt
 8004168:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800416c:	9305      	str	r3, [sp, #20]
 800416e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8004254 <_vfiprintf_r+0x25c>
 8004172:	2203      	movs	r2, #3
 8004174:	4650      	mov	r0, sl
 8004176:	7821      	ldrb	r1, [r4, #0]
 8004178:	f000 fcfa 	bl	8004b70 <memchr>
 800417c:	b140      	cbz	r0, 8004190 <_vfiprintf_r+0x198>
 800417e:	2340      	movs	r3, #64	; 0x40
 8004180:	eba0 000a 	sub.w	r0, r0, sl
 8004184:	fa03 f000 	lsl.w	r0, r3, r0
 8004188:	9b04      	ldr	r3, [sp, #16]
 800418a:	3401      	adds	r4, #1
 800418c:	4303      	orrs	r3, r0
 800418e:	9304      	str	r3, [sp, #16]
 8004190:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004194:	2206      	movs	r2, #6
 8004196:	482c      	ldr	r0, [pc, #176]	; (8004248 <_vfiprintf_r+0x250>)
 8004198:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800419c:	f000 fce8 	bl	8004b70 <memchr>
 80041a0:	2800      	cmp	r0, #0
 80041a2:	d03f      	beq.n	8004224 <_vfiprintf_r+0x22c>
 80041a4:	4b29      	ldr	r3, [pc, #164]	; (800424c <_vfiprintf_r+0x254>)
 80041a6:	bb1b      	cbnz	r3, 80041f0 <_vfiprintf_r+0x1f8>
 80041a8:	9b03      	ldr	r3, [sp, #12]
 80041aa:	3307      	adds	r3, #7
 80041ac:	f023 0307 	bic.w	r3, r3, #7
 80041b0:	3308      	adds	r3, #8
 80041b2:	9303      	str	r3, [sp, #12]
 80041b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80041b6:	443b      	add	r3, r7
 80041b8:	9309      	str	r3, [sp, #36]	; 0x24
 80041ba:	e767      	b.n	800408c <_vfiprintf_r+0x94>
 80041bc:	460c      	mov	r4, r1
 80041be:	2001      	movs	r0, #1
 80041c0:	fb0c 3202 	mla	r2, ip, r2, r3
 80041c4:	e7a5      	b.n	8004112 <_vfiprintf_r+0x11a>
 80041c6:	2300      	movs	r3, #0
 80041c8:	f04f 0c0a 	mov.w	ip, #10
 80041cc:	4619      	mov	r1, r3
 80041ce:	3401      	adds	r4, #1
 80041d0:	9305      	str	r3, [sp, #20]
 80041d2:	4620      	mov	r0, r4
 80041d4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80041d8:	3a30      	subs	r2, #48	; 0x30
 80041da:	2a09      	cmp	r2, #9
 80041dc:	d903      	bls.n	80041e6 <_vfiprintf_r+0x1ee>
 80041de:	2b00      	cmp	r3, #0
 80041e0:	d0c5      	beq.n	800416e <_vfiprintf_r+0x176>
 80041e2:	9105      	str	r1, [sp, #20]
 80041e4:	e7c3      	b.n	800416e <_vfiprintf_r+0x176>
 80041e6:	4604      	mov	r4, r0
 80041e8:	2301      	movs	r3, #1
 80041ea:	fb0c 2101 	mla	r1, ip, r1, r2
 80041ee:	e7f0      	b.n	80041d2 <_vfiprintf_r+0x1da>
 80041f0:	ab03      	add	r3, sp, #12
 80041f2:	9300      	str	r3, [sp, #0]
 80041f4:	462a      	mov	r2, r5
 80041f6:	4630      	mov	r0, r6
 80041f8:	4b15      	ldr	r3, [pc, #84]	; (8004250 <_vfiprintf_r+0x258>)
 80041fa:	a904      	add	r1, sp, #16
 80041fc:	f3af 8000 	nop.w
 8004200:	4607      	mov	r7, r0
 8004202:	1c78      	adds	r0, r7, #1
 8004204:	d1d6      	bne.n	80041b4 <_vfiprintf_r+0x1bc>
 8004206:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004208:	07d9      	lsls	r1, r3, #31
 800420a:	d405      	bmi.n	8004218 <_vfiprintf_r+0x220>
 800420c:	89ab      	ldrh	r3, [r5, #12]
 800420e:	059a      	lsls	r2, r3, #22
 8004210:	d402      	bmi.n	8004218 <_vfiprintf_r+0x220>
 8004212:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004214:	f000 fc47 	bl	8004aa6 <__retarget_lock_release_recursive>
 8004218:	89ab      	ldrh	r3, [r5, #12]
 800421a:	065b      	lsls	r3, r3, #25
 800421c:	f53f af12 	bmi.w	8004044 <_vfiprintf_r+0x4c>
 8004220:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004222:	e711      	b.n	8004048 <_vfiprintf_r+0x50>
 8004224:	ab03      	add	r3, sp, #12
 8004226:	9300      	str	r3, [sp, #0]
 8004228:	462a      	mov	r2, r5
 800422a:	4630      	mov	r0, r6
 800422c:	4b08      	ldr	r3, [pc, #32]	; (8004250 <_vfiprintf_r+0x258>)
 800422e:	a904      	add	r1, sp, #16
 8004230:	f000 f882 	bl	8004338 <_printf_i>
 8004234:	e7e4      	b.n	8004200 <_vfiprintf_r+0x208>
 8004236:	bf00      	nop
 8004238:	08004fe0 	.word	0x08004fe0
 800423c:	08005000 	.word	0x08005000
 8004240:	08004fc0 	.word	0x08004fc0
 8004244:	08004f8a 	.word	0x08004f8a
 8004248:	08004f94 	.word	0x08004f94
 800424c:	00000000 	.word	0x00000000
 8004250:	08003fd3 	.word	0x08003fd3
 8004254:	08004f90 	.word	0x08004f90

08004258 <_printf_common>:
 8004258:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800425c:	4616      	mov	r6, r2
 800425e:	4699      	mov	r9, r3
 8004260:	688a      	ldr	r2, [r1, #8]
 8004262:	690b      	ldr	r3, [r1, #16]
 8004264:	4607      	mov	r7, r0
 8004266:	4293      	cmp	r3, r2
 8004268:	bfb8      	it	lt
 800426a:	4613      	movlt	r3, r2
 800426c:	6033      	str	r3, [r6, #0]
 800426e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004272:	460c      	mov	r4, r1
 8004274:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004278:	b10a      	cbz	r2, 800427e <_printf_common+0x26>
 800427a:	3301      	adds	r3, #1
 800427c:	6033      	str	r3, [r6, #0]
 800427e:	6823      	ldr	r3, [r4, #0]
 8004280:	0699      	lsls	r1, r3, #26
 8004282:	bf42      	ittt	mi
 8004284:	6833      	ldrmi	r3, [r6, #0]
 8004286:	3302      	addmi	r3, #2
 8004288:	6033      	strmi	r3, [r6, #0]
 800428a:	6825      	ldr	r5, [r4, #0]
 800428c:	f015 0506 	ands.w	r5, r5, #6
 8004290:	d106      	bne.n	80042a0 <_printf_common+0x48>
 8004292:	f104 0a19 	add.w	sl, r4, #25
 8004296:	68e3      	ldr	r3, [r4, #12]
 8004298:	6832      	ldr	r2, [r6, #0]
 800429a:	1a9b      	subs	r3, r3, r2
 800429c:	42ab      	cmp	r3, r5
 800429e:	dc28      	bgt.n	80042f2 <_printf_common+0x9a>
 80042a0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80042a4:	1e13      	subs	r3, r2, #0
 80042a6:	6822      	ldr	r2, [r4, #0]
 80042a8:	bf18      	it	ne
 80042aa:	2301      	movne	r3, #1
 80042ac:	0692      	lsls	r2, r2, #26
 80042ae:	d42d      	bmi.n	800430c <_printf_common+0xb4>
 80042b0:	4649      	mov	r1, r9
 80042b2:	4638      	mov	r0, r7
 80042b4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80042b8:	47c0      	blx	r8
 80042ba:	3001      	adds	r0, #1
 80042bc:	d020      	beq.n	8004300 <_printf_common+0xa8>
 80042be:	6823      	ldr	r3, [r4, #0]
 80042c0:	68e5      	ldr	r5, [r4, #12]
 80042c2:	f003 0306 	and.w	r3, r3, #6
 80042c6:	2b04      	cmp	r3, #4
 80042c8:	bf18      	it	ne
 80042ca:	2500      	movne	r5, #0
 80042cc:	6832      	ldr	r2, [r6, #0]
 80042ce:	f04f 0600 	mov.w	r6, #0
 80042d2:	68a3      	ldr	r3, [r4, #8]
 80042d4:	bf08      	it	eq
 80042d6:	1aad      	subeq	r5, r5, r2
 80042d8:	6922      	ldr	r2, [r4, #16]
 80042da:	bf08      	it	eq
 80042dc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80042e0:	4293      	cmp	r3, r2
 80042e2:	bfc4      	itt	gt
 80042e4:	1a9b      	subgt	r3, r3, r2
 80042e6:	18ed      	addgt	r5, r5, r3
 80042e8:	341a      	adds	r4, #26
 80042ea:	42b5      	cmp	r5, r6
 80042ec:	d11a      	bne.n	8004324 <_printf_common+0xcc>
 80042ee:	2000      	movs	r0, #0
 80042f0:	e008      	b.n	8004304 <_printf_common+0xac>
 80042f2:	2301      	movs	r3, #1
 80042f4:	4652      	mov	r2, sl
 80042f6:	4649      	mov	r1, r9
 80042f8:	4638      	mov	r0, r7
 80042fa:	47c0      	blx	r8
 80042fc:	3001      	adds	r0, #1
 80042fe:	d103      	bne.n	8004308 <_printf_common+0xb0>
 8004300:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004304:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004308:	3501      	adds	r5, #1
 800430a:	e7c4      	b.n	8004296 <_printf_common+0x3e>
 800430c:	2030      	movs	r0, #48	; 0x30
 800430e:	18e1      	adds	r1, r4, r3
 8004310:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004314:	1c5a      	adds	r2, r3, #1
 8004316:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800431a:	4422      	add	r2, r4
 800431c:	3302      	adds	r3, #2
 800431e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004322:	e7c5      	b.n	80042b0 <_printf_common+0x58>
 8004324:	2301      	movs	r3, #1
 8004326:	4622      	mov	r2, r4
 8004328:	4649      	mov	r1, r9
 800432a:	4638      	mov	r0, r7
 800432c:	47c0      	blx	r8
 800432e:	3001      	adds	r0, #1
 8004330:	d0e6      	beq.n	8004300 <_printf_common+0xa8>
 8004332:	3601      	adds	r6, #1
 8004334:	e7d9      	b.n	80042ea <_printf_common+0x92>
	...

08004338 <_printf_i>:
 8004338:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800433c:	460c      	mov	r4, r1
 800433e:	7e27      	ldrb	r7, [r4, #24]
 8004340:	4691      	mov	r9, r2
 8004342:	2f78      	cmp	r7, #120	; 0x78
 8004344:	4680      	mov	r8, r0
 8004346:	469a      	mov	sl, r3
 8004348:	990c      	ldr	r1, [sp, #48]	; 0x30
 800434a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800434e:	d807      	bhi.n	8004360 <_printf_i+0x28>
 8004350:	2f62      	cmp	r7, #98	; 0x62
 8004352:	d80a      	bhi.n	800436a <_printf_i+0x32>
 8004354:	2f00      	cmp	r7, #0
 8004356:	f000 80d9 	beq.w	800450c <_printf_i+0x1d4>
 800435a:	2f58      	cmp	r7, #88	; 0x58
 800435c:	f000 80a4 	beq.w	80044a8 <_printf_i+0x170>
 8004360:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004364:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004368:	e03a      	b.n	80043e0 <_printf_i+0xa8>
 800436a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800436e:	2b15      	cmp	r3, #21
 8004370:	d8f6      	bhi.n	8004360 <_printf_i+0x28>
 8004372:	a001      	add	r0, pc, #4	; (adr r0, 8004378 <_printf_i+0x40>)
 8004374:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8004378:	080043d1 	.word	0x080043d1
 800437c:	080043e5 	.word	0x080043e5
 8004380:	08004361 	.word	0x08004361
 8004384:	08004361 	.word	0x08004361
 8004388:	08004361 	.word	0x08004361
 800438c:	08004361 	.word	0x08004361
 8004390:	080043e5 	.word	0x080043e5
 8004394:	08004361 	.word	0x08004361
 8004398:	08004361 	.word	0x08004361
 800439c:	08004361 	.word	0x08004361
 80043a0:	08004361 	.word	0x08004361
 80043a4:	080044f3 	.word	0x080044f3
 80043a8:	08004415 	.word	0x08004415
 80043ac:	080044d5 	.word	0x080044d5
 80043b0:	08004361 	.word	0x08004361
 80043b4:	08004361 	.word	0x08004361
 80043b8:	08004515 	.word	0x08004515
 80043bc:	08004361 	.word	0x08004361
 80043c0:	08004415 	.word	0x08004415
 80043c4:	08004361 	.word	0x08004361
 80043c8:	08004361 	.word	0x08004361
 80043cc:	080044dd 	.word	0x080044dd
 80043d0:	680b      	ldr	r3, [r1, #0]
 80043d2:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80043d6:	1d1a      	adds	r2, r3, #4
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	600a      	str	r2, [r1, #0]
 80043dc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80043e0:	2301      	movs	r3, #1
 80043e2:	e0a4      	b.n	800452e <_printf_i+0x1f6>
 80043e4:	6825      	ldr	r5, [r4, #0]
 80043e6:	6808      	ldr	r0, [r1, #0]
 80043e8:	062e      	lsls	r6, r5, #24
 80043ea:	f100 0304 	add.w	r3, r0, #4
 80043ee:	d50a      	bpl.n	8004406 <_printf_i+0xce>
 80043f0:	6805      	ldr	r5, [r0, #0]
 80043f2:	600b      	str	r3, [r1, #0]
 80043f4:	2d00      	cmp	r5, #0
 80043f6:	da03      	bge.n	8004400 <_printf_i+0xc8>
 80043f8:	232d      	movs	r3, #45	; 0x2d
 80043fa:	426d      	negs	r5, r5
 80043fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004400:	230a      	movs	r3, #10
 8004402:	485e      	ldr	r0, [pc, #376]	; (800457c <_printf_i+0x244>)
 8004404:	e019      	b.n	800443a <_printf_i+0x102>
 8004406:	f015 0f40 	tst.w	r5, #64	; 0x40
 800440a:	6805      	ldr	r5, [r0, #0]
 800440c:	600b      	str	r3, [r1, #0]
 800440e:	bf18      	it	ne
 8004410:	b22d      	sxthne	r5, r5
 8004412:	e7ef      	b.n	80043f4 <_printf_i+0xbc>
 8004414:	680b      	ldr	r3, [r1, #0]
 8004416:	6825      	ldr	r5, [r4, #0]
 8004418:	1d18      	adds	r0, r3, #4
 800441a:	6008      	str	r0, [r1, #0]
 800441c:	0628      	lsls	r0, r5, #24
 800441e:	d501      	bpl.n	8004424 <_printf_i+0xec>
 8004420:	681d      	ldr	r5, [r3, #0]
 8004422:	e002      	b.n	800442a <_printf_i+0xf2>
 8004424:	0669      	lsls	r1, r5, #25
 8004426:	d5fb      	bpl.n	8004420 <_printf_i+0xe8>
 8004428:	881d      	ldrh	r5, [r3, #0]
 800442a:	2f6f      	cmp	r7, #111	; 0x6f
 800442c:	bf0c      	ite	eq
 800442e:	2308      	moveq	r3, #8
 8004430:	230a      	movne	r3, #10
 8004432:	4852      	ldr	r0, [pc, #328]	; (800457c <_printf_i+0x244>)
 8004434:	2100      	movs	r1, #0
 8004436:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800443a:	6866      	ldr	r6, [r4, #4]
 800443c:	2e00      	cmp	r6, #0
 800443e:	bfa8      	it	ge
 8004440:	6821      	ldrge	r1, [r4, #0]
 8004442:	60a6      	str	r6, [r4, #8]
 8004444:	bfa4      	itt	ge
 8004446:	f021 0104 	bicge.w	r1, r1, #4
 800444a:	6021      	strge	r1, [r4, #0]
 800444c:	b90d      	cbnz	r5, 8004452 <_printf_i+0x11a>
 800444e:	2e00      	cmp	r6, #0
 8004450:	d04d      	beq.n	80044ee <_printf_i+0x1b6>
 8004452:	4616      	mov	r6, r2
 8004454:	fbb5 f1f3 	udiv	r1, r5, r3
 8004458:	fb03 5711 	mls	r7, r3, r1, r5
 800445c:	5dc7      	ldrb	r7, [r0, r7]
 800445e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004462:	462f      	mov	r7, r5
 8004464:	42bb      	cmp	r3, r7
 8004466:	460d      	mov	r5, r1
 8004468:	d9f4      	bls.n	8004454 <_printf_i+0x11c>
 800446a:	2b08      	cmp	r3, #8
 800446c:	d10b      	bne.n	8004486 <_printf_i+0x14e>
 800446e:	6823      	ldr	r3, [r4, #0]
 8004470:	07df      	lsls	r7, r3, #31
 8004472:	d508      	bpl.n	8004486 <_printf_i+0x14e>
 8004474:	6923      	ldr	r3, [r4, #16]
 8004476:	6861      	ldr	r1, [r4, #4]
 8004478:	4299      	cmp	r1, r3
 800447a:	bfde      	ittt	le
 800447c:	2330      	movle	r3, #48	; 0x30
 800447e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004482:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8004486:	1b92      	subs	r2, r2, r6
 8004488:	6122      	str	r2, [r4, #16]
 800448a:	464b      	mov	r3, r9
 800448c:	4621      	mov	r1, r4
 800448e:	4640      	mov	r0, r8
 8004490:	f8cd a000 	str.w	sl, [sp]
 8004494:	aa03      	add	r2, sp, #12
 8004496:	f7ff fedf 	bl	8004258 <_printf_common>
 800449a:	3001      	adds	r0, #1
 800449c:	d14c      	bne.n	8004538 <_printf_i+0x200>
 800449e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80044a2:	b004      	add	sp, #16
 80044a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80044a8:	4834      	ldr	r0, [pc, #208]	; (800457c <_printf_i+0x244>)
 80044aa:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80044ae:	680e      	ldr	r6, [r1, #0]
 80044b0:	6823      	ldr	r3, [r4, #0]
 80044b2:	f856 5b04 	ldr.w	r5, [r6], #4
 80044b6:	061f      	lsls	r7, r3, #24
 80044b8:	600e      	str	r6, [r1, #0]
 80044ba:	d514      	bpl.n	80044e6 <_printf_i+0x1ae>
 80044bc:	07d9      	lsls	r1, r3, #31
 80044be:	bf44      	itt	mi
 80044c0:	f043 0320 	orrmi.w	r3, r3, #32
 80044c4:	6023      	strmi	r3, [r4, #0]
 80044c6:	b91d      	cbnz	r5, 80044d0 <_printf_i+0x198>
 80044c8:	6823      	ldr	r3, [r4, #0]
 80044ca:	f023 0320 	bic.w	r3, r3, #32
 80044ce:	6023      	str	r3, [r4, #0]
 80044d0:	2310      	movs	r3, #16
 80044d2:	e7af      	b.n	8004434 <_printf_i+0xfc>
 80044d4:	6823      	ldr	r3, [r4, #0]
 80044d6:	f043 0320 	orr.w	r3, r3, #32
 80044da:	6023      	str	r3, [r4, #0]
 80044dc:	2378      	movs	r3, #120	; 0x78
 80044de:	4828      	ldr	r0, [pc, #160]	; (8004580 <_printf_i+0x248>)
 80044e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80044e4:	e7e3      	b.n	80044ae <_printf_i+0x176>
 80044e6:	065e      	lsls	r6, r3, #25
 80044e8:	bf48      	it	mi
 80044ea:	b2ad      	uxthmi	r5, r5
 80044ec:	e7e6      	b.n	80044bc <_printf_i+0x184>
 80044ee:	4616      	mov	r6, r2
 80044f0:	e7bb      	b.n	800446a <_printf_i+0x132>
 80044f2:	680b      	ldr	r3, [r1, #0]
 80044f4:	6826      	ldr	r6, [r4, #0]
 80044f6:	1d1d      	adds	r5, r3, #4
 80044f8:	6960      	ldr	r0, [r4, #20]
 80044fa:	600d      	str	r5, [r1, #0]
 80044fc:	0635      	lsls	r5, r6, #24
 80044fe:	681b      	ldr	r3, [r3, #0]
 8004500:	d501      	bpl.n	8004506 <_printf_i+0x1ce>
 8004502:	6018      	str	r0, [r3, #0]
 8004504:	e002      	b.n	800450c <_printf_i+0x1d4>
 8004506:	0671      	lsls	r1, r6, #25
 8004508:	d5fb      	bpl.n	8004502 <_printf_i+0x1ca>
 800450a:	8018      	strh	r0, [r3, #0]
 800450c:	2300      	movs	r3, #0
 800450e:	4616      	mov	r6, r2
 8004510:	6123      	str	r3, [r4, #16]
 8004512:	e7ba      	b.n	800448a <_printf_i+0x152>
 8004514:	680b      	ldr	r3, [r1, #0]
 8004516:	1d1a      	adds	r2, r3, #4
 8004518:	600a      	str	r2, [r1, #0]
 800451a:	681e      	ldr	r6, [r3, #0]
 800451c:	2100      	movs	r1, #0
 800451e:	4630      	mov	r0, r6
 8004520:	6862      	ldr	r2, [r4, #4]
 8004522:	f000 fb25 	bl	8004b70 <memchr>
 8004526:	b108      	cbz	r0, 800452c <_printf_i+0x1f4>
 8004528:	1b80      	subs	r0, r0, r6
 800452a:	6060      	str	r0, [r4, #4]
 800452c:	6863      	ldr	r3, [r4, #4]
 800452e:	6123      	str	r3, [r4, #16]
 8004530:	2300      	movs	r3, #0
 8004532:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004536:	e7a8      	b.n	800448a <_printf_i+0x152>
 8004538:	4632      	mov	r2, r6
 800453a:	4649      	mov	r1, r9
 800453c:	4640      	mov	r0, r8
 800453e:	6923      	ldr	r3, [r4, #16]
 8004540:	47d0      	blx	sl
 8004542:	3001      	adds	r0, #1
 8004544:	d0ab      	beq.n	800449e <_printf_i+0x166>
 8004546:	6823      	ldr	r3, [r4, #0]
 8004548:	079b      	lsls	r3, r3, #30
 800454a:	d413      	bmi.n	8004574 <_printf_i+0x23c>
 800454c:	68e0      	ldr	r0, [r4, #12]
 800454e:	9b03      	ldr	r3, [sp, #12]
 8004550:	4298      	cmp	r0, r3
 8004552:	bfb8      	it	lt
 8004554:	4618      	movlt	r0, r3
 8004556:	e7a4      	b.n	80044a2 <_printf_i+0x16a>
 8004558:	2301      	movs	r3, #1
 800455a:	4632      	mov	r2, r6
 800455c:	4649      	mov	r1, r9
 800455e:	4640      	mov	r0, r8
 8004560:	47d0      	blx	sl
 8004562:	3001      	adds	r0, #1
 8004564:	d09b      	beq.n	800449e <_printf_i+0x166>
 8004566:	3501      	adds	r5, #1
 8004568:	68e3      	ldr	r3, [r4, #12]
 800456a:	9903      	ldr	r1, [sp, #12]
 800456c:	1a5b      	subs	r3, r3, r1
 800456e:	42ab      	cmp	r3, r5
 8004570:	dcf2      	bgt.n	8004558 <_printf_i+0x220>
 8004572:	e7eb      	b.n	800454c <_printf_i+0x214>
 8004574:	2500      	movs	r5, #0
 8004576:	f104 0619 	add.w	r6, r4, #25
 800457a:	e7f5      	b.n	8004568 <_printf_i+0x230>
 800457c:	08004f9b 	.word	0x08004f9b
 8004580:	08004fac 	.word	0x08004fac

08004584 <_sbrk_r>:
 8004584:	b538      	push	{r3, r4, r5, lr}
 8004586:	2300      	movs	r3, #0
 8004588:	4d05      	ldr	r5, [pc, #20]	; (80045a0 <_sbrk_r+0x1c>)
 800458a:	4604      	mov	r4, r0
 800458c:	4608      	mov	r0, r1
 800458e:	602b      	str	r3, [r5, #0]
 8004590:	f7fc fbdc 	bl	8000d4c <_sbrk>
 8004594:	1c43      	adds	r3, r0, #1
 8004596:	d102      	bne.n	800459e <_sbrk_r+0x1a>
 8004598:	682b      	ldr	r3, [r5, #0]
 800459a:	b103      	cbz	r3, 800459e <_sbrk_r+0x1a>
 800459c:	6023      	str	r3, [r4, #0]
 800459e:	bd38      	pop	{r3, r4, r5, pc}
 80045a0:	2000130c 	.word	0x2000130c

080045a4 <__swbuf_r>:
 80045a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045a6:	460e      	mov	r6, r1
 80045a8:	4614      	mov	r4, r2
 80045aa:	4605      	mov	r5, r0
 80045ac:	b118      	cbz	r0, 80045b6 <__swbuf_r+0x12>
 80045ae:	6983      	ldr	r3, [r0, #24]
 80045b0:	b90b      	cbnz	r3, 80045b6 <__swbuf_r+0x12>
 80045b2:	f000 f9d9 	bl	8004968 <__sinit>
 80045b6:	4b21      	ldr	r3, [pc, #132]	; (800463c <__swbuf_r+0x98>)
 80045b8:	429c      	cmp	r4, r3
 80045ba:	d12b      	bne.n	8004614 <__swbuf_r+0x70>
 80045bc:	686c      	ldr	r4, [r5, #4]
 80045be:	69a3      	ldr	r3, [r4, #24]
 80045c0:	60a3      	str	r3, [r4, #8]
 80045c2:	89a3      	ldrh	r3, [r4, #12]
 80045c4:	071a      	lsls	r2, r3, #28
 80045c6:	d52f      	bpl.n	8004628 <__swbuf_r+0x84>
 80045c8:	6923      	ldr	r3, [r4, #16]
 80045ca:	b36b      	cbz	r3, 8004628 <__swbuf_r+0x84>
 80045cc:	6923      	ldr	r3, [r4, #16]
 80045ce:	6820      	ldr	r0, [r4, #0]
 80045d0:	b2f6      	uxtb	r6, r6
 80045d2:	1ac0      	subs	r0, r0, r3
 80045d4:	6963      	ldr	r3, [r4, #20]
 80045d6:	4637      	mov	r7, r6
 80045d8:	4283      	cmp	r3, r0
 80045da:	dc04      	bgt.n	80045e6 <__swbuf_r+0x42>
 80045dc:	4621      	mov	r1, r4
 80045de:	4628      	mov	r0, r5
 80045e0:	f000 f92e 	bl	8004840 <_fflush_r>
 80045e4:	bb30      	cbnz	r0, 8004634 <__swbuf_r+0x90>
 80045e6:	68a3      	ldr	r3, [r4, #8]
 80045e8:	3001      	adds	r0, #1
 80045ea:	3b01      	subs	r3, #1
 80045ec:	60a3      	str	r3, [r4, #8]
 80045ee:	6823      	ldr	r3, [r4, #0]
 80045f0:	1c5a      	adds	r2, r3, #1
 80045f2:	6022      	str	r2, [r4, #0]
 80045f4:	701e      	strb	r6, [r3, #0]
 80045f6:	6963      	ldr	r3, [r4, #20]
 80045f8:	4283      	cmp	r3, r0
 80045fa:	d004      	beq.n	8004606 <__swbuf_r+0x62>
 80045fc:	89a3      	ldrh	r3, [r4, #12]
 80045fe:	07db      	lsls	r3, r3, #31
 8004600:	d506      	bpl.n	8004610 <__swbuf_r+0x6c>
 8004602:	2e0a      	cmp	r6, #10
 8004604:	d104      	bne.n	8004610 <__swbuf_r+0x6c>
 8004606:	4621      	mov	r1, r4
 8004608:	4628      	mov	r0, r5
 800460a:	f000 f919 	bl	8004840 <_fflush_r>
 800460e:	b988      	cbnz	r0, 8004634 <__swbuf_r+0x90>
 8004610:	4638      	mov	r0, r7
 8004612:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004614:	4b0a      	ldr	r3, [pc, #40]	; (8004640 <__swbuf_r+0x9c>)
 8004616:	429c      	cmp	r4, r3
 8004618:	d101      	bne.n	800461e <__swbuf_r+0x7a>
 800461a:	68ac      	ldr	r4, [r5, #8]
 800461c:	e7cf      	b.n	80045be <__swbuf_r+0x1a>
 800461e:	4b09      	ldr	r3, [pc, #36]	; (8004644 <__swbuf_r+0xa0>)
 8004620:	429c      	cmp	r4, r3
 8004622:	bf08      	it	eq
 8004624:	68ec      	ldreq	r4, [r5, #12]
 8004626:	e7ca      	b.n	80045be <__swbuf_r+0x1a>
 8004628:	4621      	mov	r1, r4
 800462a:	4628      	mov	r0, r5
 800462c:	f000 f80c 	bl	8004648 <__swsetup_r>
 8004630:	2800      	cmp	r0, #0
 8004632:	d0cb      	beq.n	80045cc <__swbuf_r+0x28>
 8004634:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8004638:	e7ea      	b.n	8004610 <__swbuf_r+0x6c>
 800463a:	bf00      	nop
 800463c:	08004fe0 	.word	0x08004fe0
 8004640:	08005000 	.word	0x08005000
 8004644:	08004fc0 	.word	0x08004fc0

08004648 <__swsetup_r>:
 8004648:	4b32      	ldr	r3, [pc, #200]	; (8004714 <__swsetup_r+0xcc>)
 800464a:	b570      	push	{r4, r5, r6, lr}
 800464c:	681d      	ldr	r5, [r3, #0]
 800464e:	4606      	mov	r6, r0
 8004650:	460c      	mov	r4, r1
 8004652:	b125      	cbz	r5, 800465e <__swsetup_r+0x16>
 8004654:	69ab      	ldr	r3, [r5, #24]
 8004656:	b913      	cbnz	r3, 800465e <__swsetup_r+0x16>
 8004658:	4628      	mov	r0, r5
 800465a:	f000 f985 	bl	8004968 <__sinit>
 800465e:	4b2e      	ldr	r3, [pc, #184]	; (8004718 <__swsetup_r+0xd0>)
 8004660:	429c      	cmp	r4, r3
 8004662:	d10f      	bne.n	8004684 <__swsetup_r+0x3c>
 8004664:	686c      	ldr	r4, [r5, #4]
 8004666:	89a3      	ldrh	r3, [r4, #12]
 8004668:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800466c:	0719      	lsls	r1, r3, #28
 800466e:	d42c      	bmi.n	80046ca <__swsetup_r+0x82>
 8004670:	06dd      	lsls	r5, r3, #27
 8004672:	d411      	bmi.n	8004698 <__swsetup_r+0x50>
 8004674:	2309      	movs	r3, #9
 8004676:	6033      	str	r3, [r6, #0]
 8004678:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800467c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004680:	81a3      	strh	r3, [r4, #12]
 8004682:	e03e      	b.n	8004702 <__swsetup_r+0xba>
 8004684:	4b25      	ldr	r3, [pc, #148]	; (800471c <__swsetup_r+0xd4>)
 8004686:	429c      	cmp	r4, r3
 8004688:	d101      	bne.n	800468e <__swsetup_r+0x46>
 800468a:	68ac      	ldr	r4, [r5, #8]
 800468c:	e7eb      	b.n	8004666 <__swsetup_r+0x1e>
 800468e:	4b24      	ldr	r3, [pc, #144]	; (8004720 <__swsetup_r+0xd8>)
 8004690:	429c      	cmp	r4, r3
 8004692:	bf08      	it	eq
 8004694:	68ec      	ldreq	r4, [r5, #12]
 8004696:	e7e6      	b.n	8004666 <__swsetup_r+0x1e>
 8004698:	0758      	lsls	r0, r3, #29
 800469a:	d512      	bpl.n	80046c2 <__swsetup_r+0x7a>
 800469c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800469e:	b141      	cbz	r1, 80046b2 <__swsetup_r+0x6a>
 80046a0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80046a4:	4299      	cmp	r1, r3
 80046a6:	d002      	beq.n	80046ae <__swsetup_r+0x66>
 80046a8:	4630      	mov	r0, r6
 80046aa:	f7ff fa7b 	bl	8003ba4 <_free_r>
 80046ae:	2300      	movs	r3, #0
 80046b0:	6363      	str	r3, [r4, #52]	; 0x34
 80046b2:	89a3      	ldrh	r3, [r4, #12]
 80046b4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80046b8:	81a3      	strh	r3, [r4, #12]
 80046ba:	2300      	movs	r3, #0
 80046bc:	6063      	str	r3, [r4, #4]
 80046be:	6923      	ldr	r3, [r4, #16]
 80046c0:	6023      	str	r3, [r4, #0]
 80046c2:	89a3      	ldrh	r3, [r4, #12]
 80046c4:	f043 0308 	orr.w	r3, r3, #8
 80046c8:	81a3      	strh	r3, [r4, #12]
 80046ca:	6923      	ldr	r3, [r4, #16]
 80046cc:	b94b      	cbnz	r3, 80046e2 <__swsetup_r+0x9a>
 80046ce:	89a3      	ldrh	r3, [r4, #12]
 80046d0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80046d4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80046d8:	d003      	beq.n	80046e2 <__swsetup_r+0x9a>
 80046da:	4621      	mov	r1, r4
 80046dc:	4630      	mov	r0, r6
 80046de:	f000 fa07 	bl	8004af0 <__smakebuf_r>
 80046e2:	89a0      	ldrh	r0, [r4, #12]
 80046e4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80046e8:	f010 0301 	ands.w	r3, r0, #1
 80046ec:	d00a      	beq.n	8004704 <__swsetup_r+0xbc>
 80046ee:	2300      	movs	r3, #0
 80046f0:	60a3      	str	r3, [r4, #8]
 80046f2:	6963      	ldr	r3, [r4, #20]
 80046f4:	425b      	negs	r3, r3
 80046f6:	61a3      	str	r3, [r4, #24]
 80046f8:	6923      	ldr	r3, [r4, #16]
 80046fa:	b943      	cbnz	r3, 800470e <__swsetup_r+0xc6>
 80046fc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8004700:	d1ba      	bne.n	8004678 <__swsetup_r+0x30>
 8004702:	bd70      	pop	{r4, r5, r6, pc}
 8004704:	0781      	lsls	r1, r0, #30
 8004706:	bf58      	it	pl
 8004708:	6963      	ldrpl	r3, [r4, #20]
 800470a:	60a3      	str	r3, [r4, #8]
 800470c:	e7f4      	b.n	80046f8 <__swsetup_r+0xb0>
 800470e:	2000      	movs	r0, #0
 8004710:	e7f7      	b.n	8004702 <__swsetup_r+0xba>
 8004712:	bf00      	nop
 8004714:	2000009c 	.word	0x2000009c
 8004718:	08004fe0 	.word	0x08004fe0
 800471c:	08005000 	.word	0x08005000
 8004720:	08004fc0 	.word	0x08004fc0

08004724 <abort>:
 8004724:	2006      	movs	r0, #6
 8004726:	b508      	push	{r3, lr}
 8004728:	f000 faa4 	bl	8004c74 <raise>
 800472c:	2001      	movs	r0, #1
 800472e:	f7fc fa9a 	bl	8000c66 <_exit>
	...

08004734 <__sflush_r>:
 8004734:	898a      	ldrh	r2, [r1, #12]
 8004736:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800473a:	4605      	mov	r5, r0
 800473c:	0710      	lsls	r0, r2, #28
 800473e:	460c      	mov	r4, r1
 8004740:	d458      	bmi.n	80047f4 <__sflush_r+0xc0>
 8004742:	684b      	ldr	r3, [r1, #4]
 8004744:	2b00      	cmp	r3, #0
 8004746:	dc05      	bgt.n	8004754 <__sflush_r+0x20>
 8004748:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800474a:	2b00      	cmp	r3, #0
 800474c:	dc02      	bgt.n	8004754 <__sflush_r+0x20>
 800474e:	2000      	movs	r0, #0
 8004750:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004754:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004756:	2e00      	cmp	r6, #0
 8004758:	d0f9      	beq.n	800474e <__sflush_r+0x1a>
 800475a:	2300      	movs	r3, #0
 800475c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004760:	682f      	ldr	r7, [r5, #0]
 8004762:	602b      	str	r3, [r5, #0]
 8004764:	d032      	beq.n	80047cc <__sflush_r+0x98>
 8004766:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004768:	89a3      	ldrh	r3, [r4, #12]
 800476a:	075a      	lsls	r2, r3, #29
 800476c:	d505      	bpl.n	800477a <__sflush_r+0x46>
 800476e:	6863      	ldr	r3, [r4, #4]
 8004770:	1ac0      	subs	r0, r0, r3
 8004772:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004774:	b10b      	cbz	r3, 800477a <__sflush_r+0x46>
 8004776:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004778:	1ac0      	subs	r0, r0, r3
 800477a:	2300      	movs	r3, #0
 800477c:	4602      	mov	r2, r0
 800477e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004780:	4628      	mov	r0, r5
 8004782:	6a21      	ldr	r1, [r4, #32]
 8004784:	47b0      	blx	r6
 8004786:	1c43      	adds	r3, r0, #1
 8004788:	89a3      	ldrh	r3, [r4, #12]
 800478a:	d106      	bne.n	800479a <__sflush_r+0x66>
 800478c:	6829      	ldr	r1, [r5, #0]
 800478e:	291d      	cmp	r1, #29
 8004790:	d82c      	bhi.n	80047ec <__sflush_r+0xb8>
 8004792:	4a2a      	ldr	r2, [pc, #168]	; (800483c <__sflush_r+0x108>)
 8004794:	40ca      	lsrs	r2, r1
 8004796:	07d6      	lsls	r6, r2, #31
 8004798:	d528      	bpl.n	80047ec <__sflush_r+0xb8>
 800479a:	2200      	movs	r2, #0
 800479c:	6062      	str	r2, [r4, #4]
 800479e:	6922      	ldr	r2, [r4, #16]
 80047a0:	04d9      	lsls	r1, r3, #19
 80047a2:	6022      	str	r2, [r4, #0]
 80047a4:	d504      	bpl.n	80047b0 <__sflush_r+0x7c>
 80047a6:	1c42      	adds	r2, r0, #1
 80047a8:	d101      	bne.n	80047ae <__sflush_r+0x7a>
 80047aa:	682b      	ldr	r3, [r5, #0]
 80047ac:	b903      	cbnz	r3, 80047b0 <__sflush_r+0x7c>
 80047ae:	6560      	str	r0, [r4, #84]	; 0x54
 80047b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80047b2:	602f      	str	r7, [r5, #0]
 80047b4:	2900      	cmp	r1, #0
 80047b6:	d0ca      	beq.n	800474e <__sflush_r+0x1a>
 80047b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80047bc:	4299      	cmp	r1, r3
 80047be:	d002      	beq.n	80047c6 <__sflush_r+0x92>
 80047c0:	4628      	mov	r0, r5
 80047c2:	f7ff f9ef 	bl	8003ba4 <_free_r>
 80047c6:	2000      	movs	r0, #0
 80047c8:	6360      	str	r0, [r4, #52]	; 0x34
 80047ca:	e7c1      	b.n	8004750 <__sflush_r+0x1c>
 80047cc:	6a21      	ldr	r1, [r4, #32]
 80047ce:	2301      	movs	r3, #1
 80047d0:	4628      	mov	r0, r5
 80047d2:	47b0      	blx	r6
 80047d4:	1c41      	adds	r1, r0, #1
 80047d6:	d1c7      	bne.n	8004768 <__sflush_r+0x34>
 80047d8:	682b      	ldr	r3, [r5, #0]
 80047da:	2b00      	cmp	r3, #0
 80047dc:	d0c4      	beq.n	8004768 <__sflush_r+0x34>
 80047de:	2b1d      	cmp	r3, #29
 80047e0:	d001      	beq.n	80047e6 <__sflush_r+0xb2>
 80047e2:	2b16      	cmp	r3, #22
 80047e4:	d101      	bne.n	80047ea <__sflush_r+0xb6>
 80047e6:	602f      	str	r7, [r5, #0]
 80047e8:	e7b1      	b.n	800474e <__sflush_r+0x1a>
 80047ea:	89a3      	ldrh	r3, [r4, #12]
 80047ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80047f0:	81a3      	strh	r3, [r4, #12]
 80047f2:	e7ad      	b.n	8004750 <__sflush_r+0x1c>
 80047f4:	690f      	ldr	r7, [r1, #16]
 80047f6:	2f00      	cmp	r7, #0
 80047f8:	d0a9      	beq.n	800474e <__sflush_r+0x1a>
 80047fa:	0793      	lsls	r3, r2, #30
 80047fc:	bf18      	it	ne
 80047fe:	2300      	movne	r3, #0
 8004800:	680e      	ldr	r6, [r1, #0]
 8004802:	bf08      	it	eq
 8004804:	694b      	ldreq	r3, [r1, #20]
 8004806:	eba6 0807 	sub.w	r8, r6, r7
 800480a:	600f      	str	r7, [r1, #0]
 800480c:	608b      	str	r3, [r1, #8]
 800480e:	f1b8 0f00 	cmp.w	r8, #0
 8004812:	dd9c      	ble.n	800474e <__sflush_r+0x1a>
 8004814:	4643      	mov	r3, r8
 8004816:	463a      	mov	r2, r7
 8004818:	4628      	mov	r0, r5
 800481a:	6a21      	ldr	r1, [r4, #32]
 800481c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800481e:	47b0      	blx	r6
 8004820:	2800      	cmp	r0, #0
 8004822:	dc06      	bgt.n	8004832 <__sflush_r+0xfe>
 8004824:	89a3      	ldrh	r3, [r4, #12]
 8004826:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800482a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800482e:	81a3      	strh	r3, [r4, #12]
 8004830:	e78e      	b.n	8004750 <__sflush_r+0x1c>
 8004832:	4407      	add	r7, r0
 8004834:	eba8 0800 	sub.w	r8, r8, r0
 8004838:	e7e9      	b.n	800480e <__sflush_r+0xda>
 800483a:	bf00      	nop
 800483c:	20400001 	.word	0x20400001

08004840 <_fflush_r>:
 8004840:	b538      	push	{r3, r4, r5, lr}
 8004842:	690b      	ldr	r3, [r1, #16]
 8004844:	4605      	mov	r5, r0
 8004846:	460c      	mov	r4, r1
 8004848:	b913      	cbnz	r3, 8004850 <_fflush_r+0x10>
 800484a:	2500      	movs	r5, #0
 800484c:	4628      	mov	r0, r5
 800484e:	bd38      	pop	{r3, r4, r5, pc}
 8004850:	b118      	cbz	r0, 800485a <_fflush_r+0x1a>
 8004852:	6983      	ldr	r3, [r0, #24]
 8004854:	b90b      	cbnz	r3, 800485a <_fflush_r+0x1a>
 8004856:	f000 f887 	bl	8004968 <__sinit>
 800485a:	4b14      	ldr	r3, [pc, #80]	; (80048ac <_fflush_r+0x6c>)
 800485c:	429c      	cmp	r4, r3
 800485e:	d11b      	bne.n	8004898 <_fflush_r+0x58>
 8004860:	686c      	ldr	r4, [r5, #4]
 8004862:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004866:	2b00      	cmp	r3, #0
 8004868:	d0ef      	beq.n	800484a <_fflush_r+0xa>
 800486a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800486c:	07d0      	lsls	r0, r2, #31
 800486e:	d404      	bmi.n	800487a <_fflush_r+0x3a>
 8004870:	0599      	lsls	r1, r3, #22
 8004872:	d402      	bmi.n	800487a <_fflush_r+0x3a>
 8004874:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004876:	f000 f915 	bl	8004aa4 <__retarget_lock_acquire_recursive>
 800487a:	4628      	mov	r0, r5
 800487c:	4621      	mov	r1, r4
 800487e:	f7ff ff59 	bl	8004734 <__sflush_r>
 8004882:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004884:	4605      	mov	r5, r0
 8004886:	07da      	lsls	r2, r3, #31
 8004888:	d4e0      	bmi.n	800484c <_fflush_r+0xc>
 800488a:	89a3      	ldrh	r3, [r4, #12]
 800488c:	059b      	lsls	r3, r3, #22
 800488e:	d4dd      	bmi.n	800484c <_fflush_r+0xc>
 8004890:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004892:	f000 f908 	bl	8004aa6 <__retarget_lock_release_recursive>
 8004896:	e7d9      	b.n	800484c <_fflush_r+0xc>
 8004898:	4b05      	ldr	r3, [pc, #20]	; (80048b0 <_fflush_r+0x70>)
 800489a:	429c      	cmp	r4, r3
 800489c:	d101      	bne.n	80048a2 <_fflush_r+0x62>
 800489e:	68ac      	ldr	r4, [r5, #8]
 80048a0:	e7df      	b.n	8004862 <_fflush_r+0x22>
 80048a2:	4b04      	ldr	r3, [pc, #16]	; (80048b4 <_fflush_r+0x74>)
 80048a4:	429c      	cmp	r4, r3
 80048a6:	bf08      	it	eq
 80048a8:	68ec      	ldreq	r4, [r5, #12]
 80048aa:	e7da      	b.n	8004862 <_fflush_r+0x22>
 80048ac:	08004fe0 	.word	0x08004fe0
 80048b0:	08005000 	.word	0x08005000
 80048b4:	08004fc0 	.word	0x08004fc0

080048b8 <std>:
 80048b8:	2300      	movs	r3, #0
 80048ba:	b510      	push	{r4, lr}
 80048bc:	4604      	mov	r4, r0
 80048be:	e9c0 3300 	strd	r3, r3, [r0]
 80048c2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80048c6:	6083      	str	r3, [r0, #8]
 80048c8:	8181      	strh	r1, [r0, #12]
 80048ca:	6643      	str	r3, [r0, #100]	; 0x64
 80048cc:	81c2      	strh	r2, [r0, #14]
 80048ce:	6183      	str	r3, [r0, #24]
 80048d0:	4619      	mov	r1, r3
 80048d2:	2208      	movs	r2, #8
 80048d4:	305c      	adds	r0, #92	; 0x5c
 80048d6:	f7ff f85b 	bl	8003990 <memset>
 80048da:	4b05      	ldr	r3, [pc, #20]	; (80048f0 <std+0x38>)
 80048dc:	6224      	str	r4, [r4, #32]
 80048de:	6263      	str	r3, [r4, #36]	; 0x24
 80048e0:	4b04      	ldr	r3, [pc, #16]	; (80048f4 <std+0x3c>)
 80048e2:	62a3      	str	r3, [r4, #40]	; 0x28
 80048e4:	4b04      	ldr	r3, [pc, #16]	; (80048f8 <std+0x40>)
 80048e6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80048e8:	4b04      	ldr	r3, [pc, #16]	; (80048fc <std+0x44>)
 80048ea:	6323      	str	r3, [r4, #48]	; 0x30
 80048ec:	bd10      	pop	{r4, pc}
 80048ee:	bf00      	nop
 80048f0:	08004cad 	.word	0x08004cad
 80048f4:	08004ccf 	.word	0x08004ccf
 80048f8:	08004d07 	.word	0x08004d07
 80048fc:	08004d2b 	.word	0x08004d2b

08004900 <_cleanup_r>:
 8004900:	4901      	ldr	r1, [pc, #4]	; (8004908 <_cleanup_r+0x8>)
 8004902:	f000 b8af 	b.w	8004a64 <_fwalk_reent>
 8004906:	bf00      	nop
 8004908:	08004841 	.word	0x08004841

0800490c <__sfmoreglue>:
 800490c:	b570      	push	{r4, r5, r6, lr}
 800490e:	2568      	movs	r5, #104	; 0x68
 8004910:	1e4a      	subs	r2, r1, #1
 8004912:	4355      	muls	r5, r2
 8004914:	460e      	mov	r6, r1
 8004916:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800491a:	f7ff f98f 	bl	8003c3c <_malloc_r>
 800491e:	4604      	mov	r4, r0
 8004920:	b140      	cbz	r0, 8004934 <__sfmoreglue+0x28>
 8004922:	2100      	movs	r1, #0
 8004924:	e9c0 1600 	strd	r1, r6, [r0]
 8004928:	300c      	adds	r0, #12
 800492a:	60a0      	str	r0, [r4, #8]
 800492c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8004930:	f7ff f82e 	bl	8003990 <memset>
 8004934:	4620      	mov	r0, r4
 8004936:	bd70      	pop	{r4, r5, r6, pc}

08004938 <__sfp_lock_acquire>:
 8004938:	4801      	ldr	r0, [pc, #4]	; (8004940 <__sfp_lock_acquire+0x8>)
 800493a:	f000 b8b3 	b.w	8004aa4 <__retarget_lock_acquire_recursive>
 800493e:	bf00      	nop
 8004940:	20001318 	.word	0x20001318

08004944 <__sfp_lock_release>:
 8004944:	4801      	ldr	r0, [pc, #4]	; (800494c <__sfp_lock_release+0x8>)
 8004946:	f000 b8ae 	b.w	8004aa6 <__retarget_lock_release_recursive>
 800494a:	bf00      	nop
 800494c:	20001318 	.word	0x20001318

08004950 <__sinit_lock_acquire>:
 8004950:	4801      	ldr	r0, [pc, #4]	; (8004958 <__sinit_lock_acquire+0x8>)
 8004952:	f000 b8a7 	b.w	8004aa4 <__retarget_lock_acquire_recursive>
 8004956:	bf00      	nop
 8004958:	20001313 	.word	0x20001313

0800495c <__sinit_lock_release>:
 800495c:	4801      	ldr	r0, [pc, #4]	; (8004964 <__sinit_lock_release+0x8>)
 800495e:	f000 b8a2 	b.w	8004aa6 <__retarget_lock_release_recursive>
 8004962:	bf00      	nop
 8004964:	20001313 	.word	0x20001313

08004968 <__sinit>:
 8004968:	b510      	push	{r4, lr}
 800496a:	4604      	mov	r4, r0
 800496c:	f7ff fff0 	bl	8004950 <__sinit_lock_acquire>
 8004970:	69a3      	ldr	r3, [r4, #24]
 8004972:	b11b      	cbz	r3, 800497c <__sinit+0x14>
 8004974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004978:	f7ff bff0 	b.w	800495c <__sinit_lock_release>
 800497c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8004980:	6523      	str	r3, [r4, #80]	; 0x50
 8004982:	4b13      	ldr	r3, [pc, #76]	; (80049d0 <__sinit+0x68>)
 8004984:	4a13      	ldr	r2, [pc, #76]	; (80049d4 <__sinit+0x6c>)
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	62a2      	str	r2, [r4, #40]	; 0x28
 800498a:	42a3      	cmp	r3, r4
 800498c:	bf08      	it	eq
 800498e:	2301      	moveq	r3, #1
 8004990:	4620      	mov	r0, r4
 8004992:	bf08      	it	eq
 8004994:	61a3      	streq	r3, [r4, #24]
 8004996:	f000 f81f 	bl	80049d8 <__sfp>
 800499a:	6060      	str	r0, [r4, #4]
 800499c:	4620      	mov	r0, r4
 800499e:	f000 f81b 	bl	80049d8 <__sfp>
 80049a2:	60a0      	str	r0, [r4, #8]
 80049a4:	4620      	mov	r0, r4
 80049a6:	f000 f817 	bl	80049d8 <__sfp>
 80049aa:	2200      	movs	r2, #0
 80049ac:	2104      	movs	r1, #4
 80049ae:	60e0      	str	r0, [r4, #12]
 80049b0:	6860      	ldr	r0, [r4, #4]
 80049b2:	f7ff ff81 	bl	80048b8 <std>
 80049b6:	2201      	movs	r2, #1
 80049b8:	2109      	movs	r1, #9
 80049ba:	68a0      	ldr	r0, [r4, #8]
 80049bc:	f7ff ff7c 	bl	80048b8 <std>
 80049c0:	2202      	movs	r2, #2
 80049c2:	2112      	movs	r1, #18
 80049c4:	68e0      	ldr	r0, [r4, #12]
 80049c6:	f7ff ff77 	bl	80048b8 <std>
 80049ca:	2301      	movs	r3, #1
 80049cc:	61a3      	str	r3, [r4, #24]
 80049ce:	e7d1      	b.n	8004974 <__sinit+0xc>
 80049d0:	08004ed4 	.word	0x08004ed4
 80049d4:	08004901 	.word	0x08004901

080049d8 <__sfp>:
 80049d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049da:	4607      	mov	r7, r0
 80049dc:	f7ff ffac 	bl	8004938 <__sfp_lock_acquire>
 80049e0:	4b1e      	ldr	r3, [pc, #120]	; (8004a5c <__sfp+0x84>)
 80049e2:	681e      	ldr	r6, [r3, #0]
 80049e4:	69b3      	ldr	r3, [r6, #24]
 80049e6:	b913      	cbnz	r3, 80049ee <__sfp+0x16>
 80049e8:	4630      	mov	r0, r6
 80049ea:	f7ff ffbd 	bl	8004968 <__sinit>
 80049ee:	3648      	adds	r6, #72	; 0x48
 80049f0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80049f4:	3b01      	subs	r3, #1
 80049f6:	d503      	bpl.n	8004a00 <__sfp+0x28>
 80049f8:	6833      	ldr	r3, [r6, #0]
 80049fa:	b30b      	cbz	r3, 8004a40 <__sfp+0x68>
 80049fc:	6836      	ldr	r6, [r6, #0]
 80049fe:	e7f7      	b.n	80049f0 <__sfp+0x18>
 8004a00:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004a04:	b9d5      	cbnz	r5, 8004a3c <__sfp+0x64>
 8004a06:	4b16      	ldr	r3, [pc, #88]	; (8004a60 <__sfp+0x88>)
 8004a08:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8004a0c:	60e3      	str	r3, [r4, #12]
 8004a0e:	6665      	str	r5, [r4, #100]	; 0x64
 8004a10:	f000 f847 	bl	8004aa2 <__retarget_lock_init_recursive>
 8004a14:	f7ff ff96 	bl	8004944 <__sfp_lock_release>
 8004a18:	2208      	movs	r2, #8
 8004a1a:	4629      	mov	r1, r5
 8004a1c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8004a20:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8004a24:	6025      	str	r5, [r4, #0]
 8004a26:	61a5      	str	r5, [r4, #24]
 8004a28:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004a2c:	f7fe ffb0 	bl	8003990 <memset>
 8004a30:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8004a34:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004a38:	4620      	mov	r0, r4
 8004a3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a3c:	3468      	adds	r4, #104	; 0x68
 8004a3e:	e7d9      	b.n	80049f4 <__sfp+0x1c>
 8004a40:	2104      	movs	r1, #4
 8004a42:	4638      	mov	r0, r7
 8004a44:	f7ff ff62 	bl	800490c <__sfmoreglue>
 8004a48:	4604      	mov	r4, r0
 8004a4a:	6030      	str	r0, [r6, #0]
 8004a4c:	2800      	cmp	r0, #0
 8004a4e:	d1d5      	bne.n	80049fc <__sfp+0x24>
 8004a50:	f7ff ff78 	bl	8004944 <__sfp_lock_release>
 8004a54:	230c      	movs	r3, #12
 8004a56:	603b      	str	r3, [r7, #0]
 8004a58:	e7ee      	b.n	8004a38 <__sfp+0x60>
 8004a5a:	bf00      	nop
 8004a5c:	08004ed4 	.word	0x08004ed4
 8004a60:	ffff0001 	.word	0xffff0001

08004a64 <_fwalk_reent>:
 8004a64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004a68:	4606      	mov	r6, r0
 8004a6a:	4688      	mov	r8, r1
 8004a6c:	2700      	movs	r7, #0
 8004a6e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004a72:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004a76:	f1b9 0901 	subs.w	r9, r9, #1
 8004a7a:	d505      	bpl.n	8004a88 <_fwalk_reent+0x24>
 8004a7c:	6824      	ldr	r4, [r4, #0]
 8004a7e:	2c00      	cmp	r4, #0
 8004a80:	d1f7      	bne.n	8004a72 <_fwalk_reent+0xe>
 8004a82:	4638      	mov	r0, r7
 8004a84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004a88:	89ab      	ldrh	r3, [r5, #12]
 8004a8a:	2b01      	cmp	r3, #1
 8004a8c:	d907      	bls.n	8004a9e <_fwalk_reent+0x3a>
 8004a8e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004a92:	3301      	adds	r3, #1
 8004a94:	d003      	beq.n	8004a9e <_fwalk_reent+0x3a>
 8004a96:	4629      	mov	r1, r5
 8004a98:	4630      	mov	r0, r6
 8004a9a:	47c0      	blx	r8
 8004a9c:	4307      	orrs	r7, r0
 8004a9e:	3568      	adds	r5, #104	; 0x68
 8004aa0:	e7e9      	b.n	8004a76 <_fwalk_reent+0x12>

08004aa2 <__retarget_lock_init_recursive>:
 8004aa2:	4770      	bx	lr

08004aa4 <__retarget_lock_acquire_recursive>:
 8004aa4:	4770      	bx	lr

08004aa6 <__retarget_lock_release_recursive>:
 8004aa6:	4770      	bx	lr

08004aa8 <__swhatbuf_r>:
 8004aa8:	b570      	push	{r4, r5, r6, lr}
 8004aaa:	460e      	mov	r6, r1
 8004aac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004ab0:	4614      	mov	r4, r2
 8004ab2:	2900      	cmp	r1, #0
 8004ab4:	461d      	mov	r5, r3
 8004ab6:	b096      	sub	sp, #88	; 0x58
 8004ab8:	da07      	bge.n	8004aca <__swhatbuf_r+0x22>
 8004aba:	2300      	movs	r3, #0
 8004abc:	602b      	str	r3, [r5, #0]
 8004abe:	89b3      	ldrh	r3, [r6, #12]
 8004ac0:	061a      	lsls	r2, r3, #24
 8004ac2:	d410      	bmi.n	8004ae6 <__swhatbuf_r+0x3e>
 8004ac4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004ac8:	e00e      	b.n	8004ae8 <__swhatbuf_r+0x40>
 8004aca:	466a      	mov	r2, sp
 8004acc:	f000 f954 	bl	8004d78 <_fstat_r>
 8004ad0:	2800      	cmp	r0, #0
 8004ad2:	dbf2      	blt.n	8004aba <__swhatbuf_r+0x12>
 8004ad4:	9a01      	ldr	r2, [sp, #4]
 8004ad6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004ada:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8004ade:	425a      	negs	r2, r3
 8004ae0:	415a      	adcs	r2, r3
 8004ae2:	602a      	str	r2, [r5, #0]
 8004ae4:	e7ee      	b.n	8004ac4 <__swhatbuf_r+0x1c>
 8004ae6:	2340      	movs	r3, #64	; 0x40
 8004ae8:	2000      	movs	r0, #0
 8004aea:	6023      	str	r3, [r4, #0]
 8004aec:	b016      	add	sp, #88	; 0x58
 8004aee:	bd70      	pop	{r4, r5, r6, pc}

08004af0 <__smakebuf_r>:
 8004af0:	898b      	ldrh	r3, [r1, #12]
 8004af2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004af4:	079d      	lsls	r5, r3, #30
 8004af6:	4606      	mov	r6, r0
 8004af8:	460c      	mov	r4, r1
 8004afa:	d507      	bpl.n	8004b0c <__smakebuf_r+0x1c>
 8004afc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004b00:	6023      	str	r3, [r4, #0]
 8004b02:	6123      	str	r3, [r4, #16]
 8004b04:	2301      	movs	r3, #1
 8004b06:	6163      	str	r3, [r4, #20]
 8004b08:	b002      	add	sp, #8
 8004b0a:	bd70      	pop	{r4, r5, r6, pc}
 8004b0c:	466a      	mov	r2, sp
 8004b0e:	ab01      	add	r3, sp, #4
 8004b10:	f7ff ffca 	bl	8004aa8 <__swhatbuf_r>
 8004b14:	9900      	ldr	r1, [sp, #0]
 8004b16:	4605      	mov	r5, r0
 8004b18:	4630      	mov	r0, r6
 8004b1a:	f7ff f88f 	bl	8003c3c <_malloc_r>
 8004b1e:	b948      	cbnz	r0, 8004b34 <__smakebuf_r+0x44>
 8004b20:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004b24:	059a      	lsls	r2, r3, #22
 8004b26:	d4ef      	bmi.n	8004b08 <__smakebuf_r+0x18>
 8004b28:	f023 0303 	bic.w	r3, r3, #3
 8004b2c:	f043 0302 	orr.w	r3, r3, #2
 8004b30:	81a3      	strh	r3, [r4, #12]
 8004b32:	e7e3      	b.n	8004afc <__smakebuf_r+0xc>
 8004b34:	4b0d      	ldr	r3, [pc, #52]	; (8004b6c <__smakebuf_r+0x7c>)
 8004b36:	62b3      	str	r3, [r6, #40]	; 0x28
 8004b38:	89a3      	ldrh	r3, [r4, #12]
 8004b3a:	6020      	str	r0, [r4, #0]
 8004b3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004b40:	81a3      	strh	r3, [r4, #12]
 8004b42:	9b00      	ldr	r3, [sp, #0]
 8004b44:	6120      	str	r0, [r4, #16]
 8004b46:	6163      	str	r3, [r4, #20]
 8004b48:	9b01      	ldr	r3, [sp, #4]
 8004b4a:	b15b      	cbz	r3, 8004b64 <__smakebuf_r+0x74>
 8004b4c:	4630      	mov	r0, r6
 8004b4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004b52:	f000 f923 	bl	8004d9c <_isatty_r>
 8004b56:	b128      	cbz	r0, 8004b64 <__smakebuf_r+0x74>
 8004b58:	89a3      	ldrh	r3, [r4, #12]
 8004b5a:	f023 0303 	bic.w	r3, r3, #3
 8004b5e:	f043 0301 	orr.w	r3, r3, #1
 8004b62:	81a3      	strh	r3, [r4, #12]
 8004b64:	89a0      	ldrh	r0, [r4, #12]
 8004b66:	4305      	orrs	r5, r0
 8004b68:	81a5      	strh	r5, [r4, #12]
 8004b6a:	e7cd      	b.n	8004b08 <__smakebuf_r+0x18>
 8004b6c:	08004901 	.word	0x08004901

08004b70 <memchr>:
 8004b70:	4603      	mov	r3, r0
 8004b72:	b510      	push	{r4, lr}
 8004b74:	b2c9      	uxtb	r1, r1
 8004b76:	4402      	add	r2, r0
 8004b78:	4293      	cmp	r3, r2
 8004b7a:	4618      	mov	r0, r3
 8004b7c:	d101      	bne.n	8004b82 <memchr+0x12>
 8004b7e:	2000      	movs	r0, #0
 8004b80:	e003      	b.n	8004b8a <memchr+0x1a>
 8004b82:	7804      	ldrb	r4, [r0, #0]
 8004b84:	3301      	adds	r3, #1
 8004b86:	428c      	cmp	r4, r1
 8004b88:	d1f6      	bne.n	8004b78 <memchr+0x8>
 8004b8a:	bd10      	pop	{r4, pc}

08004b8c <memmove>:
 8004b8c:	4288      	cmp	r0, r1
 8004b8e:	b510      	push	{r4, lr}
 8004b90:	eb01 0402 	add.w	r4, r1, r2
 8004b94:	d902      	bls.n	8004b9c <memmove+0x10>
 8004b96:	4284      	cmp	r4, r0
 8004b98:	4623      	mov	r3, r4
 8004b9a:	d807      	bhi.n	8004bac <memmove+0x20>
 8004b9c:	1e43      	subs	r3, r0, #1
 8004b9e:	42a1      	cmp	r1, r4
 8004ba0:	d008      	beq.n	8004bb4 <memmove+0x28>
 8004ba2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004ba6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004baa:	e7f8      	b.n	8004b9e <memmove+0x12>
 8004bac:	4601      	mov	r1, r0
 8004bae:	4402      	add	r2, r0
 8004bb0:	428a      	cmp	r2, r1
 8004bb2:	d100      	bne.n	8004bb6 <memmove+0x2a>
 8004bb4:	bd10      	pop	{r4, pc}
 8004bb6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004bba:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004bbe:	e7f7      	b.n	8004bb0 <memmove+0x24>

08004bc0 <__malloc_lock>:
 8004bc0:	4801      	ldr	r0, [pc, #4]	; (8004bc8 <__malloc_lock+0x8>)
 8004bc2:	f7ff bf6f 	b.w	8004aa4 <__retarget_lock_acquire_recursive>
 8004bc6:	bf00      	nop
 8004bc8:	20001314 	.word	0x20001314

08004bcc <__malloc_unlock>:
 8004bcc:	4801      	ldr	r0, [pc, #4]	; (8004bd4 <__malloc_unlock+0x8>)
 8004bce:	f7ff bf6a 	b.w	8004aa6 <__retarget_lock_release_recursive>
 8004bd2:	bf00      	nop
 8004bd4:	20001314 	.word	0x20001314

08004bd8 <_realloc_r>:
 8004bd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004bda:	4607      	mov	r7, r0
 8004bdc:	4614      	mov	r4, r2
 8004bde:	460e      	mov	r6, r1
 8004be0:	b921      	cbnz	r1, 8004bec <_realloc_r+0x14>
 8004be2:	4611      	mov	r1, r2
 8004be4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004be8:	f7ff b828 	b.w	8003c3c <_malloc_r>
 8004bec:	b922      	cbnz	r2, 8004bf8 <_realloc_r+0x20>
 8004bee:	f7fe ffd9 	bl	8003ba4 <_free_r>
 8004bf2:	4625      	mov	r5, r4
 8004bf4:	4628      	mov	r0, r5
 8004bf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004bf8:	f000 f8f2 	bl	8004de0 <_malloc_usable_size_r>
 8004bfc:	42a0      	cmp	r0, r4
 8004bfe:	d20f      	bcs.n	8004c20 <_realloc_r+0x48>
 8004c00:	4621      	mov	r1, r4
 8004c02:	4638      	mov	r0, r7
 8004c04:	f7ff f81a 	bl	8003c3c <_malloc_r>
 8004c08:	4605      	mov	r5, r0
 8004c0a:	2800      	cmp	r0, #0
 8004c0c:	d0f2      	beq.n	8004bf4 <_realloc_r+0x1c>
 8004c0e:	4631      	mov	r1, r6
 8004c10:	4622      	mov	r2, r4
 8004c12:	f7fe feaf 	bl	8003974 <memcpy>
 8004c16:	4631      	mov	r1, r6
 8004c18:	4638      	mov	r0, r7
 8004c1a:	f7fe ffc3 	bl	8003ba4 <_free_r>
 8004c1e:	e7e9      	b.n	8004bf4 <_realloc_r+0x1c>
 8004c20:	4635      	mov	r5, r6
 8004c22:	e7e7      	b.n	8004bf4 <_realloc_r+0x1c>

08004c24 <_raise_r>:
 8004c24:	291f      	cmp	r1, #31
 8004c26:	b538      	push	{r3, r4, r5, lr}
 8004c28:	4604      	mov	r4, r0
 8004c2a:	460d      	mov	r5, r1
 8004c2c:	d904      	bls.n	8004c38 <_raise_r+0x14>
 8004c2e:	2316      	movs	r3, #22
 8004c30:	6003      	str	r3, [r0, #0]
 8004c32:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004c36:	bd38      	pop	{r3, r4, r5, pc}
 8004c38:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8004c3a:	b112      	cbz	r2, 8004c42 <_raise_r+0x1e>
 8004c3c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004c40:	b94b      	cbnz	r3, 8004c56 <_raise_r+0x32>
 8004c42:	4620      	mov	r0, r4
 8004c44:	f000 f830 	bl	8004ca8 <_getpid_r>
 8004c48:	462a      	mov	r2, r5
 8004c4a:	4601      	mov	r1, r0
 8004c4c:	4620      	mov	r0, r4
 8004c4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004c52:	f000 b817 	b.w	8004c84 <_kill_r>
 8004c56:	2b01      	cmp	r3, #1
 8004c58:	d00a      	beq.n	8004c70 <_raise_r+0x4c>
 8004c5a:	1c59      	adds	r1, r3, #1
 8004c5c:	d103      	bne.n	8004c66 <_raise_r+0x42>
 8004c5e:	2316      	movs	r3, #22
 8004c60:	6003      	str	r3, [r0, #0]
 8004c62:	2001      	movs	r0, #1
 8004c64:	e7e7      	b.n	8004c36 <_raise_r+0x12>
 8004c66:	2400      	movs	r4, #0
 8004c68:	4628      	mov	r0, r5
 8004c6a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8004c6e:	4798      	blx	r3
 8004c70:	2000      	movs	r0, #0
 8004c72:	e7e0      	b.n	8004c36 <_raise_r+0x12>

08004c74 <raise>:
 8004c74:	4b02      	ldr	r3, [pc, #8]	; (8004c80 <raise+0xc>)
 8004c76:	4601      	mov	r1, r0
 8004c78:	6818      	ldr	r0, [r3, #0]
 8004c7a:	f7ff bfd3 	b.w	8004c24 <_raise_r>
 8004c7e:	bf00      	nop
 8004c80:	2000009c 	.word	0x2000009c

08004c84 <_kill_r>:
 8004c84:	b538      	push	{r3, r4, r5, lr}
 8004c86:	2300      	movs	r3, #0
 8004c88:	4d06      	ldr	r5, [pc, #24]	; (8004ca4 <_kill_r+0x20>)
 8004c8a:	4604      	mov	r4, r0
 8004c8c:	4608      	mov	r0, r1
 8004c8e:	4611      	mov	r1, r2
 8004c90:	602b      	str	r3, [r5, #0]
 8004c92:	f7fb ffd8 	bl	8000c46 <_kill>
 8004c96:	1c43      	adds	r3, r0, #1
 8004c98:	d102      	bne.n	8004ca0 <_kill_r+0x1c>
 8004c9a:	682b      	ldr	r3, [r5, #0]
 8004c9c:	b103      	cbz	r3, 8004ca0 <_kill_r+0x1c>
 8004c9e:	6023      	str	r3, [r4, #0]
 8004ca0:	bd38      	pop	{r3, r4, r5, pc}
 8004ca2:	bf00      	nop
 8004ca4:	2000130c 	.word	0x2000130c

08004ca8 <_getpid_r>:
 8004ca8:	f7fb bfc6 	b.w	8000c38 <_getpid>

08004cac <__sread>:
 8004cac:	b510      	push	{r4, lr}
 8004cae:	460c      	mov	r4, r1
 8004cb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004cb4:	f000 f89c 	bl	8004df0 <_read_r>
 8004cb8:	2800      	cmp	r0, #0
 8004cba:	bfab      	itete	ge
 8004cbc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004cbe:	89a3      	ldrhlt	r3, [r4, #12]
 8004cc0:	181b      	addge	r3, r3, r0
 8004cc2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8004cc6:	bfac      	ite	ge
 8004cc8:	6563      	strge	r3, [r4, #84]	; 0x54
 8004cca:	81a3      	strhlt	r3, [r4, #12]
 8004ccc:	bd10      	pop	{r4, pc}

08004cce <__swrite>:
 8004cce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004cd2:	461f      	mov	r7, r3
 8004cd4:	898b      	ldrh	r3, [r1, #12]
 8004cd6:	4605      	mov	r5, r0
 8004cd8:	05db      	lsls	r3, r3, #23
 8004cda:	460c      	mov	r4, r1
 8004cdc:	4616      	mov	r6, r2
 8004cde:	d505      	bpl.n	8004cec <__swrite+0x1e>
 8004ce0:	2302      	movs	r3, #2
 8004ce2:	2200      	movs	r2, #0
 8004ce4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004ce8:	f000 f868 	bl	8004dbc <_lseek_r>
 8004cec:	89a3      	ldrh	r3, [r4, #12]
 8004cee:	4632      	mov	r2, r6
 8004cf0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004cf4:	81a3      	strh	r3, [r4, #12]
 8004cf6:	4628      	mov	r0, r5
 8004cf8:	463b      	mov	r3, r7
 8004cfa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004cfe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004d02:	f000 b817 	b.w	8004d34 <_write_r>

08004d06 <__sseek>:
 8004d06:	b510      	push	{r4, lr}
 8004d08:	460c      	mov	r4, r1
 8004d0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004d0e:	f000 f855 	bl	8004dbc <_lseek_r>
 8004d12:	1c43      	adds	r3, r0, #1
 8004d14:	89a3      	ldrh	r3, [r4, #12]
 8004d16:	bf15      	itete	ne
 8004d18:	6560      	strne	r0, [r4, #84]	; 0x54
 8004d1a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004d1e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004d22:	81a3      	strheq	r3, [r4, #12]
 8004d24:	bf18      	it	ne
 8004d26:	81a3      	strhne	r3, [r4, #12]
 8004d28:	bd10      	pop	{r4, pc}

08004d2a <__sclose>:
 8004d2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004d2e:	f000 b813 	b.w	8004d58 <_close_r>
	...

08004d34 <_write_r>:
 8004d34:	b538      	push	{r3, r4, r5, lr}
 8004d36:	4604      	mov	r4, r0
 8004d38:	4608      	mov	r0, r1
 8004d3a:	4611      	mov	r1, r2
 8004d3c:	2200      	movs	r2, #0
 8004d3e:	4d05      	ldr	r5, [pc, #20]	; (8004d54 <_write_r+0x20>)
 8004d40:	602a      	str	r2, [r5, #0]
 8004d42:	461a      	mov	r2, r3
 8004d44:	f7fb ffb6 	bl	8000cb4 <_write>
 8004d48:	1c43      	adds	r3, r0, #1
 8004d4a:	d102      	bne.n	8004d52 <_write_r+0x1e>
 8004d4c:	682b      	ldr	r3, [r5, #0]
 8004d4e:	b103      	cbz	r3, 8004d52 <_write_r+0x1e>
 8004d50:	6023      	str	r3, [r4, #0]
 8004d52:	bd38      	pop	{r3, r4, r5, pc}
 8004d54:	2000130c 	.word	0x2000130c

08004d58 <_close_r>:
 8004d58:	b538      	push	{r3, r4, r5, lr}
 8004d5a:	2300      	movs	r3, #0
 8004d5c:	4d05      	ldr	r5, [pc, #20]	; (8004d74 <_close_r+0x1c>)
 8004d5e:	4604      	mov	r4, r0
 8004d60:	4608      	mov	r0, r1
 8004d62:	602b      	str	r3, [r5, #0]
 8004d64:	f7fb ffc2 	bl	8000cec <_close>
 8004d68:	1c43      	adds	r3, r0, #1
 8004d6a:	d102      	bne.n	8004d72 <_close_r+0x1a>
 8004d6c:	682b      	ldr	r3, [r5, #0]
 8004d6e:	b103      	cbz	r3, 8004d72 <_close_r+0x1a>
 8004d70:	6023      	str	r3, [r4, #0]
 8004d72:	bd38      	pop	{r3, r4, r5, pc}
 8004d74:	2000130c 	.word	0x2000130c

08004d78 <_fstat_r>:
 8004d78:	b538      	push	{r3, r4, r5, lr}
 8004d7a:	2300      	movs	r3, #0
 8004d7c:	4d06      	ldr	r5, [pc, #24]	; (8004d98 <_fstat_r+0x20>)
 8004d7e:	4604      	mov	r4, r0
 8004d80:	4608      	mov	r0, r1
 8004d82:	4611      	mov	r1, r2
 8004d84:	602b      	str	r3, [r5, #0]
 8004d86:	f7fb ffbc 	bl	8000d02 <_fstat>
 8004d8a:	1c43      	adds	r3, r0, #1
 8004d8c:	d102      	bne.n	8004d94 <_fstat_r+0x1c>
 8004d8e:	682b      	ldr	r3, [r5, #0]
 8004d90:	b103      	cbz	r3, 8004d94 <_fstat_r+0x1c>
 8004d92:	6023      	str	r3, [r4, #0]
 8004d94:	bd38      	pop	{r3, r4, r5, pc}
 8004d96:	bf00      	nop
 8004d98:	2000130c 	.word	0x2000130c

08004d9c <_isatty_r>:
 8004d9c:	b538      	push	{r3, r4, r5, lr}
 8004d9e:	2300      	movs	r3, #0
 8004da0:	4d05      	ldr	r5, [pc, #20]	; (8004db8 <_isatty_r+0x1c>)
 8004da2:	4604      	mov	r4, r0
 8004da4:	4608      	mov	r0, r1
 8004da6:	602b      	str	r3, [r5, #0]
 8004da8:	f7fb ffba 	bl	8000d20 <_isatty>
 8004dac:	1c43      	adds	r3, r0, #1
 8004dae:	d102      	bne.n	8004db6 <_isatty_r+0x1a>
 8004db0:	682b      	ldr	r3, [r5, #0]
 8004db2:	b103      	cbz	r3, 8004db6 <_isatty_r+0x1a>
 8004db4:	6023      	str	r3, [r4, #0]
 8004db6:	bd38      	pop	{r3, r4, r5, pc}
 8004db8:	2000130c 	.word	0x2000130c

08004dbc <_lseek_r>:
 8004dbc:	b538      	push	{r3, r4, r5, lr}
 8004dbe:	4604      	mov	r4, r0
 8004dc0:	4608      	mov	r0, r1
 8004dc2:	4611      	mov	r1, r2
 8004dc4:	2200      	movs	r2, #0
 8004dc6:	4d05      	ldr	r5, [pc, #20]	; (8004ddc <_lseek_r+0x20>)
 8004dc8:	602a      	str	r2, [r5, #0]
 8004dca:	461a      	mov	r2, r3
 8004dcc:	f7fb ffb2 	bl	8000d34 <_lseek>
 8004dd0:	1c43      	adds	r3, r0, #1
 8004dd2:	d102      	bne.n	8004dda <_lseek_r+0x1e>
 8004dd4:	682b      	ldr	r3, [r5, #0]
 8004dd6:	b103      	cbz	r3, 8004dda <_lseek_r+0x1e>
 8004dd8:	6023      	str	r3, [r4, #0]
 8004dda:	bd38      	pop	{r3, r4, r5, pc}
 8004ddc:	2000130c 	.word	0x2000130c

08004de0 <_malloc_usable_size_r>:
 8004de0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004de4:	1f18      	subs	r0, r3, #4
 8004de6:	2b00      	cmp	r3, #0
 8004de8:	bfbc      	itt	lt
 8004dea:	580b      	ldrlt	r3, [r1, r0]
 8004dec:	18c0      	addlt	r0, r0, r3
 8004dee:	4770      	bx	lr

08004df0 <_read_r>:
 8004df0:	b538      	push	{r3, r4, r5, lr}
 8004df2:	4604      	mov	r4, r0
 8004df4:	4608      	mov	r0, r1
 8004df6:	4611      	mov	r1, r2
 8004df8:	2200      	movs	r2, #0
 8004dfa:	4d05      	ldr	r5, [pc, #20]	; (8004e10 <_read_r+0x20>)
 8004dfc:	602a      	str	r2, [r5, #0]
 8004dfe:	461a      	mov	r2, r3
 8004e00:	f7fb ff3b 	bl	8000c7a <_read>
 8004e04:	1c43      	adds	r3, r0, #1
 8004e06:	d102      	bne.n	8004e0e <_read_r+0x1e>
 8004e08:	682b      	ldr	r3, [r5, #0]
 8004e0a:	b103      	cbz	r3, 8004e0e <_read_r+0x1e>
 8004e0c:	6023      	str	r3, [r4, #0]
 8004e0e:	bd38      	pop	{r3, r4, r5, pc}
 8004e10:	2000130c 	.word	0x2000130c

08004e14 <_gettimeofday>:
 8004e14:	2258      	movs	r2, #88	; 0x58
 8004e16:	4b02      	ldr	r3, [pc, #8]	; (8004e20 <_gettimeofday+0xc>)
 8004e18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004e1c:	601a      	str	r2, [r3, #0]
 8004e1e:	4770      	bx	lr
 8004e20:	2000130c 	.word	0x2000130c

08004e24 <_init>:
 8004e24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e26:	bf00      	nop
 8004e28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004e2a:	bc08      	pop	{r3}
 8004e2c:	469e      	mov	lr, r3
 8004e2e:	4770      	bx	lr

08004e30 <_fini>:
 8004e30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e32:	bf00      	nop
 8004e34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004e36:	bc08      	pop	{r3}
 8004e38:	469e      	mov	lr, r3
 8004e3a:	4770      	bx	lr
